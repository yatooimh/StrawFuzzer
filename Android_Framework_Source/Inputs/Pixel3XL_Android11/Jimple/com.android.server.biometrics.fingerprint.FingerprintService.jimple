public class com.android.server.biometrics.fingerprint.FingerprintService extends com.android.server.biometrics.BiometricServiceBase
{
    private static final java.lang.String ACTION_LOCKOUT_RESET;
    private static final boolean DEBUG;
    private static final long FAIL_LOCKOUT_TIMEOUT_MS;
    private static final java.lang.String FP_DATA_DIR;
    private static final java.lang.String KEY_LOCKOUT_RESET_USER;
    private static final int MAX_FAILED_ATTEMPTS_LOCKOUT_PERMANENT;
    private static final int MAX_FAILED_ATTEMPTS_LOCKOUT_TIMED;
    protected static final java.lang.String TAG;
    private final android.app.AlarmManager mAlarmManager;
    private final java.util.concurrent.CopyOnWriteArrayList mClientActiveCallbacks;
    private android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint mDaemon;
    private android.hardware.biometrics.fingerprint.V2_2.IBiometricsFingerprintClientCallback mDaemonCallback;
    private final com.android.server.biometrics.BiometricServiceBase$DaemonWrapper mDaemonWrapper;
    private final android.util.SparseIntArray mFailedAttempts;
    private final com.android.server.biometrics.fingerprint.FingerprintConstants mFingerprintConstants;
    private final com.android.server.biometrics.fingerprint.FingerprintService$LockoutReceiver mLockoutReceiver;
    protected final com.android.server.biometrics.fingerprint.FingerprintService$ResetFailedAttemptsForUserRunnable mResetFailedAttemptsForCurrentUserRunnable;
    private final android.util.SparseBooleanArray mTimedLockoutCleared;

    public void <init>(android.content.Context)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.content.Context r1;
        com.android.server.biometrics.fingerprint.FingerprintConstants $r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        com.android.server.biometrics.fingerprint.FingerprintService$LockoutReceiver $r4, $r13;
        com.android.server.biometrics.fingerprint.FingerprintService$ResetFailedAttemptsForUserRunnable $r5;
        com.android.server.biometrics.fingerprint.FingerprintService$1 $r6;
        com.android.server.biometrics.fingerprint.FingerprintService$2 $r7;
        android.util.SparseBooleanArray $r8;
        android.util.SparseIntArray $r9;
        java.lang.Object $r10;
        android.app.AlarmManager $r11;
        android.content.IntentFilter $r12;
        java.lang.String $r14, $r15;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void <init>(android.content.Context)>(r1);

        $r2 = new com.android.server.biometrics.fingerprint.FingerprintConstants;

        specialinvoke $r2.<com.android.server.biometrics.fingerprint.FingerprintConstants: void <init>()>();

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.fingerprint.FingerprintConstants mFingerprintConstants> = $r2;

        $r3 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.util.concurrent.CopyOnWriteArrayList mClientActiveCallbacks> = $r3;

        $r4 = new com.android.server.biometrics.fingerprint.FingerprintService$LockoutReceiver;

        specialinvoke $r4.<com.android.server.biometrics.fingerprint.FingerprintService$LockoutReceiver: void <init>(com.android.server.biometrics.fingerprint.FingerprintService,com.android.server.biometrics.fingerprint.FingerprintService$1)>(r0, null);

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.fingerprint.FingerprintService$LockoutReceiver mLockoutReceiver> = $r4;

        $r5 = new com.android.server.biometrics.fingerprint.FingerprintService$ResetFailedAttemptsForUserRunnable;

        specialinvoke $r5.<com.android.server.biometrics.fingerprint.FingerprintService$ResetFailedAttemptsForUserRunnable: void <init>(com.android.server.biometrics.fingerprint.FingerprintService,com.android.server.biometrics.fingerprint.FingerprintService$1)>(r0, null);

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.fingerprint.FingerprintService$ResetFailedAttemptsForUserRunnable mResetFailedAttemptsForCurrentUserRunnable> = $r5;

        $r6 = new com.android.server.biometrics.fingerprint.FingerprintService$1;

        specialinvoke $r6.<com.android.server.biometrics.fingerprint.FingerprintService$1: void <init>(com.android.server.biometrics.fingerprint.FingerprintService)>(r0);

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_2.IBiometricsFingerprintClientCallback mDaemonCallback> = $r6;

        $r7 = new com.android.server.biometrics.fingerprint.FingerprintService$2;

        specialinvoke $r7.<com.android.server.biometrics.fingerprint.FingerprintService$2: void <init>(com.android.server.biometrics.fingerprint.FingerprintService)>(r0);

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.BiometricServiceBase$DaemonWrapper mDaemonWrapper> = $r7;

        $r8 = new android.util.SparseBooleanArray;

        specialinvoke $r8.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.util.SparseBooleanArray mTimedLockoutCleared> = $r8;

        $r9 = new android.util.SparseIntArray;

        specialinvoke $r9.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.util.SparseIntArray mFailedAttempts> = $r9;

        $r10 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AlarmManager;");

        $r11 = (android.app.AlarmManager) $r10;

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.app.AlarmManager mAlarmManager> = $r11;

        $r13 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.fingerprint.FingerprintService$LockoutReceiver mLockoutReceiver>;

        $r12 = new android.content.IntentFilter;

        $r14 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.lang.String getLockoutResetIntent()>();

        specialinvoke $r12.<android.content.IntentFilter: void <init>(java.lang.String)>($r14);

        $r15 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.lang.String getLockoutBroadcastPermission()>();

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r13, $r12, $r15, null);

        return;
    }

    static void access$000(com.android.server.biometrics.fingerprint.FingerprintService, boolean, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        boolean z0;
        int i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void resetFailedAttemptsForUser(boolean,int)>(z0, i0);

        return;
    }

    static boolean access$100(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $z0 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: boolean isStrongBiometric()>();

        return $z0;
    }

    static boolean access$1000(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $z0 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: boolean isRestricted()>();

        return $z0;
    }

    static com.android.server.biometrics.BiometricServiceBase$DaemonWrapper access$1100(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        com.android.server.biometrics.BiometricServiceBase$DaemonWrapper $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.BiometricServiceBase$DaemonWrapper mDaemonWrapper>;

        return $r1;
    }

    static long access$1200(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        long $l0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $l0 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: long mHalDeviceId>;

        return $l0;
    }

    static int access$1300(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int $i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $i0 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: int mCurrentUserId>;

        return $i0;
    }

    static void access$1400(com.android.server.biometrics.fingerprint.FingerprintService, com.android.server.biometrics.BiometricServiceBase$EnrollClientImpl, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        com.android.server.biometrics.BiometricServiceBase$EnrollClientImpl r1;
        int i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: com.android.server.biometrics.BiometricServiceBase$EnrollClientImpl;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void enrollInternal(com.android.server.biometrics.BiometricServiceBase$EnrollClientImpl,int)>(r1, i0);

        return;
    }

    static void access$1500(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static void access$1600(com.android.server.biometrics.fingerprint.FingerprintService, android.os.IBinder)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.os.IBinder r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: android.os.IBinder;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void cancelEnrollmentInternal(android.os.IBinder)>(r1);

        return;
    }

    static boolean access$1700(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $z0 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: boolean isRestricted()>();

        return $z0;
    }

    static long access$1800(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        long $l0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $l0 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: long mHalDeviceId>;

        return $l0;
    }

    static int access$1900(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int $i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $i0 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: int mCurrentUserId>;

        return $i0;
    }

    static android.util.SparseIntArray access$200(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.util.SparseIntArray $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.util.SparseIntArray mFailedAttempts>;

        return $r1;
    }

    static void access$2000(com.android.server.biometrics.fingerprint.FingerprintService, com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl, long, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl r1;
        long l0;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl;

        l0 := @parameter2: long;

        r2 := @parameter3: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void authenticateInternal(com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl,long,java.lang.String)>(r1, l0, r2);

        return;
    }

    static void access$2100(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static long access$2200(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        long $l0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $l0 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: long mHalDeviceId>;

        return $l0;
    }

    static int access$2300(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int $i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $i0 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: int mCurrentUserId>;

        return $i0;
    }

    static void access$2400(com.android.server.biometrics.fingerprint.FingerprintService, com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl, long, java.lang.String, int, int, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl r1;
        long l0;
        java.lang.String r2;
        int i1, i2, i3;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl;

        l0 := @parameter2: long;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void authenticateInternal(com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl,long,java.lang.String,int,int,int)>(r1, l0, r2, i1, i2, i3);

        return;
    }

    static void access$2500(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static void access$2600(com.android.server.biometrics.fingerprint.FingerprintService, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void startCurrentClient(int)>(i0);

        return;
    }

    static void access$2700(com.android.server.biometrics.fingerprint.FingerprintService, android.os.IBinder, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.os.IBinder r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void cancelAuthenticationInternal(android.os.IBinder,java.lang.String)>(r1, r2);

        return;
    }

    static void access$2800(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static void access$2900(com.android.server.biometrics.fingerprint.FingerprintService, android.os.IBinder, java.lang.String, int, int, int, boolean)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.os.IBinder r1;
        java.lang.String r2;
        int i0, i1, i2;
        boolean z0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        z0 := @parameter6: boolean;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void cancelAuthenticationInternal(android.os.IBinder,java.lang.String,int,int,int,boolean)>(r1, r2, i0, i1, i2, z0);

        return;
    }

    static android.util.SparseBooleanArray access$300(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.util.SparseBooleanArray $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.util.SparseBooleanArray mTimedLockoutCleared>;

        return $r1;
    }

    static void access$3000(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static void access$3100(com.android.server.biometrics.fingerprint.FingerprintService, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void setActiveUserInternal(int)>(i0);

        return;
    }

    static void access$3200(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static boolean access$3300(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $z0 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: boolean isRestricted()>();

        return $z0;
    }

    static long access$3400(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        long $l0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $l0 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: long mHalDeviceId>;

        return $l0;
    }

    static void access$3500(com.android.server.biometrics.fingerprint.FingerprintService, com.android.server.biometrics.RemovalClient)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        com.android.server.biometrics.RemovalClient r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: com.android.server.biometrics.RemovalClient;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void removeInternal(com.android.server.biometrics.RemovalClient)>(r1);

        return;
    }

    static void access$3600(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static boolean access$3700(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $z0 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: boolean isRestricted()>();

        return $z0;
    }

    static long access$3800(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        long $l0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $l0 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: long mHalDeviceId>;

        return $l0;
    }

    static void access$3900(com.android.server.biometrics.fingerprint.FingerprintService, com.android.server.biometrics.EnumerateClient)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        com.android.server.biometrics.EnumerateClient r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: com.android.server.biometrics.EnumerateClient;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void enumerateInternal(com.android.server.biometrics.EnumerateClient)>(r1);

        return;
    }

    static void access$400(com.android.server.biometrics.fingerprint.FingerprintService, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void scheduleLockoutResetForUser(int)>(i0);

        return;
    }

    static void access$4000(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static void access$4101(com.android.server.biometrics.fingerprint.FingerprintService, android.hardware.biometrics.IBiometricServiceLockoutResetCallback)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.hardware.biometrics.IBiometricServiceLockoutResetCallback r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: android.hardware.biometrics.IBiometricServiceLockoutResetCallback;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void addLockoutResetCallback(android.hardware.biometrics.IBiometricServiceLockoutResetCallback)>(r1);

        return;
    }

    static void access$4200(com.android.server.biometrics.fingerprint.FingerprintService, java.io.FileDescriptor)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.io.FileDescriptor r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.io.FileDescriptor;

        specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void dumpProto(java.io.FileDescriptor)>(r1);

        return;
    }

    static void access$4300(com.android.server.biometrics.fingerprint.FingerprintService, java.io.PrintWriter)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.io.PrintWriter r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void dumpInternal(java.io.PrintWriter)>(r1);

        return;
    }

    static boolean access$4400(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String, boolean, int, int, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;
        boolean z0, $z1;
        int i0, i1, i2;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $z1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: boolean canUseBiometric(java.lang.String,boolean,int,int,int)>(r1, z0, i0, i1, i2);

        return $z1;
    }

    static android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint access$4500(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint getFingerprintDaemon()>();

        return $r1;
    }

    static long access$4600(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        long $l0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $l0 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: long mHalDeviceId>;

        return $l0;
    }

    static void access$4700(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static boolean access$4800(com.android.server.biometrics.fingerprint.FingerprintService, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: boolean isCurrentUserOrProfile(int)>(i0);

        return $z0;
    }

    static android.os.Handler access$4900(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$500(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static boolean access$5000(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String, boolean, int, int, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;
        boolean z0, $z1;
        int i0, i1, i2;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $z1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: boolean canUseBiometric(java.lang.String,boolean,int,int,int)>(r1, z0, i0, i1, i2);

        return $z1;
    }

    static boolean access$5100(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String, boolean, int, int, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;
        boolean z0, $z1;
        int i0, i1, i2;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $z1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: boolean canUseBiometric(java.lang.String,boolean,int,int,int)>(r1, z0, i0, i1, i2);

        return $z1;
    }

    static void access$5200(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static long access$5300(com.android.server.biometrics.fingerprint.FingerprintService, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0;
        long $l1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter1: int;

        $l1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: long getAuthenticatorId(int)>(i0);

        return $l1;
    }

    static void access$5400(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static int access$5500(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int $i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $i0 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: int mCurrentUserId>;

        return $i0;
    }

    static android.os.Handler access$5600(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$5700(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static com.android.server.biometrics.ClientMonitor access$5800(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        com.android.server.biometrics.ClientMonitor $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.ClientMonitor getCurrentClient()>();

        return $r1;
    }

    static com.android.server.biometrics.ClientMonitor access$5900(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        com.android.server.biometrics.ClientMonitor $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.ClientMonitor getPendingClient()>();

        return $r1;
    }

    static long access$600(com.android.server.biometrics.fingerprint.FingerprintService, android.os.IBinder)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.os.IBinder r1;
        long $l0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: android.os.IBinder;

        $l0 = specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: long startPreEnroll(android.os.IBinder)>(r1);

        return $l0;
    }

    static void access$6000(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static java.util.concurrent.CopyOnWriteArrayList access$6100(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.util.concurrent.CopyOnWriteArrayList mClientActiveCallbacks>;

        return $r1;
    }

    static void access$6200(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static void access$6300(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static void access$6400(com.android.server.biometrics.fingerprint.FingerprintService, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void initConfiguredStrengthInternal(int)>(i0);

        return;
    }

    static boolean access$6500(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $z0 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: boolean isStrongBiometric()>();

        return $z0;
    }

    static android.os.Handler access$6800(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.os.Handler mHandler>;

        return $r1;
    }

    static android.os.Handler access$6900(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$700(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    static android.os.Handler access$7000(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.os.Handler mHandler>;

        return $r1;
    }

    static android.os.Handler access$7100(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.os.Handler mHandler>;

        return $r1;
    }

    static android.os.Handler access$7200(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.os.Handler mHandler>;

        return $r1;
    }

    static android.os.Handler access$7300(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$7401(com.android.server.biometrics.fingerprint.FingerprintService, android.hardware.biometrics.BiometricAuthenticator$Identifier, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r1;
        int i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void handleEnumerate(android.hardware.biometrics.BiometricAuthenticator$Identifier,int)>(r1, i0);

        return;
    }

    static com.android.server.biometrics.ClientMonitor access$7500(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        com.android.server.biometrics.ClientMonitor $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.ClientMonitor getCurrentClient()>();

        return $r1;
    }

    static void access$7601(com.android.server.biometrics.fingerprint.FingerprintService, android.hardware.biometrics.BiometricAuthenticator$Identifier, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r1;
        int i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void handleRemoved(android.hardware.biometrics.BiometricAuthenticator$Identifier,int)>(r1, i0);

        return;
    }

    static void access$7701(com.android.server.biometrics.fingerprint.FingerprintService, long, int, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        long l0;
        int i1, i2;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void handleError(long,int,int)>(l0, i1, i2);

        return;
    }

    static android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint access$7802(com.android.server.biometrics.fingerprint.FingerprintService, android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint;

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint mDaemon> = r1;

        return r1;
    }

    static long access$7902(com.android.server.biometrics.fingerprint.FingerprintService, long)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        long l0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        l0 := @parameter1: long;

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: long mHalDeviceId> = l0;

        return l0;
    }

    static int access$800(com.android.server.biometrics.fingerprint.FingerprintService, android.os.IBinder)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.os.IBinder r1;
        int $i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: android.os.IBinder;

        $i0 = specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: int startPostEnroll(android.os.IBinder)>(r1);

        return $i0;
    }

    static int access$8002(com.android.server.biometrics.fingerprint.FingerprintService, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter1: int;

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: int mCurrentUserId> = i0;

        return i0;
    }

    static void access$8101(com.android.server.biometrics.fingerprint.FingerprintService, android.hardware.biometrics.BiometricAuthenticator$Identifier, java.util.ArrayList)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r1;
        java.util.ArrayList r2;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        r2 := @parameter2: java.util.ArrayList;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void handleAuthenticated(android.hardware.biometrics.BiometricAuthenticator$Identifier,java.util.ArrayList)>(r1, r2);

        return;
    }

    static void access$8201(com.android.server.biometrics.fingerprint.FingerprintService, long, int, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        long l0;
        int i1, i2;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void handleAcquired(long,int,int)>(l0, i1, i2);

        return;
    }

    static void access$8301(com.android.server.biometrics.fingerprint.FingerprintService, android.hardware.biometrics.BiometricAuthenticator$Identifier, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r1;
        int i0;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void handleEnrollResult(android.hardware.biometrics.BiometricAuthenticator$Identifier,int)>(r1, i0);

        return;
    }

    static void access$900(com.android.server.biometrics.fingerprint.FingerprintService, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>(r1);

        return;
    }

    private void cancelLockoutResetForUser(int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0;
        android.app.AlarmManager $r1;
        android.app.PendingIntent $r2;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.app.AlarmManager mAlarmManager>;

        $r2 = specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.app.PendingIntent getLockoutResetIntentForUser(int)>(i0);

        virtualinvoke $r1.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r2);

        return;
    }

    private void dumpInternal(java.io.PrintWriter)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.io.PrintWriter r1;
        org.json.JSONArray r2;
        java.util.Iterator r3;
        com.android.server.biometrics.BiometricServiceBase$PerformanceStats r4, r43;
        org.json.JSONObject r5, $r6;
        android.content.Context $r8, $r20;
        android.os.UserManager $r9;
        java.util.List $r10, $r21;
        boolean $z0;
        java.lang.StringBuilder $r12;
        int $i0, i2, i3, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14;
        java.lang.String $r15;
        java.lang.Object $r16, $r24, $r27;
        android.content.pm.UserInfo $r17;
        android.os.UserHandle $r18;
        com.android.server.biometrics.BiometricUtils $r19;
        java.util.HashMap $r22, $r25;
        java.lang.Integer $r23, $r26;
        java.lang.Throwable $r41;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        r1 := @parameter0: java.io.PrintWriter;

        $r6 = new org.json.JSONObject;

        specialinvoke $r6.<org.json.JSONObject: void <init>()>();

     label01:
        virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("service", "Fingerprint Manager");

        r2 = new org.json.JSONArray;

        specialinvoke r2.<org.json.JSONArray: void <init>()>();

        $r8 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.content.Context getContext()>();

        $r9 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>($r8);

        $r10 = virtualinvoke $r9.<android.os.UserManager: java.util.List getUsers()>();

        r3 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label52;

        $r16 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (android.content.pm.UserInfo) $r16;

        $r18 = virtualinvoke $r17.<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>();

        i2 = virtualinvoke $r18.<android.os.UserHandle: int getIdentifier()>();

        $r19 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.BiometricUtils getBiometricUtils()>();

        $r20 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.content.Context getContext()>();

        $r21 = interfaceinvoke $r19.<com.android.server.biometrics.BiometricUtils: java.util.List getBiometricsForUser(android.content.Context,int)>($r20, i2);

        i3 = interfaceinvoke $r21.<java.util.List: int size()>();

        $r22 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.util.HashMap mPerformanceMap>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r24 = virtualinvoke $r22.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r23);

        r43 = (com.android.server.biometrics.BiometricServiceBase$PerformanceStats) $r24;

        $r25 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.util.HashMap mCryptoPerformanceMap>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r27 = virtualinvoke $r25.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r26);

        r4 = (com.android.server.biometrics.BiometricServiceBase$PerformanceStats) $r27;

        r5 = new org.json.JSONObject;

        specialinvoke r5.<org.json.JSONObject: void <init>()>();

        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("id", i2);

        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("count", i3);

     label03:
        if r43 == null goto label06;

     label04:
        i5 = r43.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int accept>;

     label05:
        goto label07;

     label06:
        i5 = 0;

     label07:
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("accept", i5);

     label08:
        if r43 == null goto label11;

     label09:
        i6 = r43.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int reject>;

     label10:
        goto label12;

     label11:
        i6 = 0;

     label12:
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("reject", i6);

     label13:
        if r43 == null goto label16;

     label14:
        i7 = r43.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int acquire>;

     label15:
        goto label17;

     label16:
        i7 = 0;

     label17:
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("acquire", i7);

     label18:
        if r43 == null goto label21;

     label19:
        i8 = r43.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int lockout>;

     label20:
        goto label22;

     label21:
        i8 = 0;

     label22:
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("lockout", i8);

     label23:
        if r43 == null goto label26;

     label24:
        i9 = r43.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int permanentLockout>;

     label25:
        goto label27;

     label26:
        i9 = 0;

     label27:
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("permanentLockout", i9);

     label28:
        if r4 == null goto label31;

     label29:
        i10 = r4.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int accept>;

     label30:
        goto label32;

     label31:
        i10 = 0;

     label32:
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("acceptCrypto", i10);

     label33:
        if r4 == null goto label36;

     label34:
        i11 = r4.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int reject>;

     label35:
        goto label37;

     label36:
        i11 = 0;

     label37:
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("rejectCrypto", i11);

     label38:
        if r4 == null goto label41;

     label39:
        i12 = r4.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int acquire>;

     label40:
        goto label42;

     label41:
        i12 = 0;

     label42:
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("acquireCrypto", i12);

     label43:
        if r4 == null goto label46;

     label44:
        i13 = r4.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int lockout>;

     label45:
        goto label47;

     label46:
        i13 = 0;

     label47:
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("lockoutCrypto", i13);

     label48:
        i14 = 0;

        if r4 == null goto label50;

     label49:
        i14 = r4.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int permanentLockout>;

     label50:
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("permanentLockoutCrypto", i14);

        virtualinvoke r2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(r5);

     label51:
        goto label02;

     label52:
        virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("prints", r2);

     label53:
        goto label55;

     label54:
        $r41 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FingerprintService", "dump formatting failure", $r41);

     label55:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r6);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HAL deaths since last reboot: ");

        $i0 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: int mHALDeathCount>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        return;

        catch org.json.JSONException from label01 to label02 with label54;
        catch org.json.JSONException from label02 to label03 with label54;
        catch org.json.JSONException from label04 to label05 with label54;
        catch org.json.JSONException from label07 to label08 with label54;
        catch org.json.JSONException from label09 to label10 with label54;
        catch org.json.JSONException from label12 to label13 with label54;
        catch org.json.JSONException from label14 to label15 with label54;
        catch org.json.JSONException from label17 to label18 with label54;
        catch org.json.JSONException from label19 to label20 with label54;
        catch org.json.JSONException from label22 to label23 with label54;
        catch org.json.JSONException from label24 to label25 with label54;
        catch org.json.JSONException from label27 to label28 with label54;
        catch org.json.JSONException from label29 to label30 with label54;
        catch org.json.JSONException from label32 to label33 with label54;
        catch org.json.JSONException from label34 to label35 with label54;
        catch org.json.JSONException from label37 to label38 with label54;
        catch org.json.JSONException from label39 to label40 with label54;
        catch org.json.JSONException from label42 to label43 with label54;
        catch org.json.JSONException from label44 to label45 with label54;
        catch org.json.JSONException from label47 to label48 with label54;
        catch org.json.JSONException from label49 to label50 with label54;
        catch org.json.JSONException from label50 to label51 with label54;
        catch org.json.JSONException from label52 to label53 with label54;
    }

    private void dumpProto(java.io.FileDescriptor)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        java.util.Iterator r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        long l1, l13, l14;
        android.util.proto.ProtoOutputStream $r2;
        android.content.Context $r3, $r12;
        android.os.UserManager $r4;
        java.util.List $r5, $r13;
        boolean $z0;
        java.util.HashMap $r6, $r7, $r14, $r17;
        java.lang.Object $r8, $r16, $r19;
        android.content.pm.UserInfo $r9;
        android.os.UserHandle $r10;
        com.android.server.biometrics.BiometricUtils $r11;
        java.lang.Integer $r15, $r18;
        java.io.FileDescriptor r20;
        com.android.server.biometrics.BiometricServiceBase$PerformanceStats r22, r23;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        r20 := @parameter0: java.io.FileDescriptor;

        $r2 = new android.util.proto.ProtoOutputStream;

        specialinvoke $r2.<android.util.proto.ProtoOutputStream: void <init>(java.io.FileDescriptor)>(r20);

        $r3 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.content.Context getContext()>();

        $r4 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>($r3);

        $r5 = virtualinvoke $r4.<android.os.UserManager: java.util.List getUsers()>();

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.content.pm.UserInfo) $r8;

        $r10 = virtualinvoke $r9.<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>();

        i0 = virtualinvoke $r10.<android.os.UserHandle: int getIdentifier()>();

        l1 = virtualinvoke $r2.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895809L);

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, i0);

        $r11 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.BiometricUtils getBiometricUtils()>();

        $r12 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.content.Context getContext()>();

        $r13 = interfaceinvoke $r11.<com.android.server.biometrics.BiometricUtils: java.util.List getBiometricsForUser(android.content.Context,int)>($r12, i0);

        $i2 = interfaceinvoke $r13.<java.util.List: int size()>();

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i2);

        $r14 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.util.HashMap mPerformanceMap>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r16 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r15);

        r22 = (com.android.server.biometrics.BiometricServiceBase$PerformanceStats) $r16;

        if r22 == null goto label2;

        l13 = virtualinvoke $r2.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268035L);

        $i8 = r22.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int accept>;

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i8);

        $i9 = r22.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int reject>;

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i9);

        $i10 = r22.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int acquire>;

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i10);

        $i11 = r22.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int lockout>;

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i11);

        $i12 = r22.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int permanentLockout>;

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464261L, $i12);

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void end(long)>(l13);

     label2:
        $r17 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.util.HashMap mCryptoPerformanceMap>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r19 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r18);

        r23 = (com.android.server.biometrics.BiometricServiceBase$PerformanceStats) $r19;

        if r23 == null goto label3;

        l14 = virtualinvoke $r2.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268036L);

        $i3 = r23.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int accept>;

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i3);

        $i4 = r23.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int reject>;

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i4);

        $i5 = r23.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int acquire>;

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i5);

        $i6 = r23.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int lockout>;

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i6);

        $i7 = r23.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int permanentLockout>;

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464261L, $i7);

        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void end(long)>(l14);

     label3:
        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

        goto label1;

     label4:
        virtualinvoke $r2.<android.util.proto.ProtoOutputStream: void flush()>();

        $r6 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.util.HashMap mPerformanceMap>;

        virtualinvoke $r6.<java.util.HashMap: void clear()>();

        $r7 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.util.HashMap mCryptoPerformanceMap>;

        virtualinvoke $r7.<java.util.HashMap: void clear()>();

        return;
    }

    private android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint getFingerprintDaemon()
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint $r1, $r2, $r3, $r6, $r17, r20;
        android.os.IHwBinder $r4;
        android.hardware.biometrics.fingerprint.V2_2.IBiometricsFingerprintClientCallback $r5;
        long $l1, $l2, $l4;
        java.lang.String $r9;
        byte $b5;
        android.content.Context $r10;
        int $i7, $i8;
        android.os.RemoteException $r11, $r14;
        java.lang.Throwable $r12, $r13;
        java.lang.StringBuilder r19;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint mDaemon>;

        if $r1 != null goto label18;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("FingerprintService", "mDaemon was null, reconnect to fingerprint");

     label02:
        $r2 = staticinvoke <android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint getService()>();

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint mDaemon> = $r2;

     label03:
        goto label08;

     label04:
        $r14 := @caughtexception;

     label05:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FingerprintService", "Failed to get biometric interface", $r14);

     label06:
        goto label08;

     label07:
        $r12 := @caughtexception;

     label08:
        $r17 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint mDaemon>;

        if $r17 != null goto label10;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FingerprintService", "fingerprint HIDL not available");

     label09:
        exitmonitor r0;

        return null;

     label10:
        $r3 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint mDaemon>;

        $r4 = interfaceinvoke $r3.<android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint: android.os.IHwBinder asBinder()>();

        interfaceinvoke $r4.<android.os.IHwBinder: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>(r0, 0L);

     label11:
        $r6 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint mDaemon>;

        $r5 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_2.IBiometricsFingerprintClientCallback mDaemonCallback>;

        $l1 = interfaceinvoke $r6.<android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint: long setNotify(android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprintClientCallback)>($r5);

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: long mHalDeviceId> = $l1;

     label12:
        goto label15;

     label13:
        $r11 := @caughtexception;

     label14:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FingerprintService", "Failed to open fingerprint HAL", $r11);

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint mDaemon> = null;

     label15:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fingerprint HAL id: ");

        $l2 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: long mHalDeviceId>;

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r9 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("FingerprintService", $r9);

        $l4 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: long mHalDeviceId>;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label17;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void loadAuthenticatorIds()>();

        $i7 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void updateActiveGroup(int,java.lang.String)>($i7, null);

        $i8 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void doTemplateCleanupForUser(int)>($i8);

     label16:
        goto label18;

     label17:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FingerprintService", "Failed to open Fingerprint HAL!");

        $r10 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.content.Context getContext()>();

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r10, "fingerprintd_openhal_error", 1);

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint mDaemon> = null;

     label18:
        r20 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint mDaemon>;

     label19:
        exitmonitor r0;

        return r20;

     label20:
        $r13 := @caughtexception;

        exitmonitor r0;

        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.util.NoSuchElementException from label02 to label03 with label07;
        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch android.os.RemoteException from label11 to label12 with label13;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    private android.app.PendingIntent getLockoutResetIntentForUser(int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0;
        android.content.Context $r1;
        android.content.Intent $r2, $r4;
        java.lang.String $r3;
        android.app.PendingIntent $r5;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.content.Context getContext()>();

        $r2 = new android.content.Intent;

        $r3 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.lang.String getLockoutResetIntent()>();

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("lockout_reset_user", i0);

        $r5 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r1, i0, $r4, 134217728);

        return $r5;
    }

    public static android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint lambda$YOMIOLvco2SvXVeJIulOSVKdX7A(com.android.server.biometrics.fingerprint.FingerprintService)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint $r1;

        r0 := @parameter0: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint getFingerprintDaemon()>();

        return $r1;
    }

    private void resetFailedAttemptsForUser(boolean, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        boolean z0;
        int i0, $i1;
        java.lang.String r1, $r8;
        android.util.SparseBooleanArray $r3;
        android.util.SparseIntArray $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: int getLockoutMode()>();

        if $i1 == 0 goto label1;

        r1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.lang.String getTag()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reset biometric lockout, clearAttemptCounter=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r8);

     label1:
        if z0 == 0 goto label2;

        $r4 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.util.SparseIntArray mFailedAttempts>;

        virtualinvoke $r4.<android.util.SparseIntArray: void put(int,int)>(i0, 0);

     label2:
        $r3 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.util.SparseBooleanArray mTimedLockoutCleared>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void cancelLockoutResetForUser(int)>(i0);

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void notifyLockoutResetMonitors()>();

        return;
    }

    private void scheduleLockoutResetForUser(int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0;
        android.app.AlarmManager $r1;
        long $l1, $l2;
        android.app.PendingIntent $r2;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.app.AlarmManager mAlarmManager>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l1 + 30000L;

        $r2 = specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.app.PendingIntent getLockoutResetIntentForUser(int)>(i0);

        virtualinvoke $r1.<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>(2, $l2, $r2);

        return;
    }

    private int startPostEnroll(android.os.IBinder)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0;
        android.os.RemoteException $r1;
        android.os.IBinder r2;
        android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint r3;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        r2 := @parameter0: android.os.IBinder;

        r3 = specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint getFingerprintDaemon()>();

        if r3 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FingerprintService", "startPostEnroll: no fingerprint HAL!");

        return 0;

     label1:
        i0 = interfaceinvoke r3.<android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint: int postEnroll()>();

     label2:
        return i0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FingerprintService", "startPostEnroll failed", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private long startPreEnroll(android.os.IBinder)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        long l0;
        android.os.RemoteException $r1;
        android.os.IBinder r2;
        android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint r3;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        r2 := @parameter0: android.os.IBinder;

        r3 = specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint getFingerprintDaemon()>();

        if r3 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FingerprintService", "startPreEnroll: no fingerprint HAL!");

        return 0L;

     label1:
        l0 = interfaceinvoke r3.<android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint: long preEnroll()>();

     label2:
        return l0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FingerprintService", "startPreEnroll failed", $r1);

        return 0L;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    protected boolean checkAppOps(int, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0, $i1, $i2;
        java.lang.String r1;
        android.app.AppOpsManager $r2, $r3;
        boolean z0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 = 0;

        $r2 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.app.AppOpsManager mAppOps>;

        $i1 = virtualinvoke $r2.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(78, i0, r1);

        if $i1 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        $r3 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.app.AppOpsManager mAppOps>;

        $i2 = virtualinvoke $r3.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(55, i0, r1);

        if $i2 != 0 goto label2;

        z0 = 1;

     label2:
        return z0;
    }

    protected void checkUseBiometricPermission()
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.content.Context $r1;
        int $i0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.content.Context getContext()>();

        $i0 = virtualinvoke $r1.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.USE_FINGERPRINT");

        if $i0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>("android.permission.USE_BIOMETRIC");

     label1:
        return;
    }

    protected com.android.server.biometrics.BiometricUtils getBiometricUtils()
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        com.android.server.biometrics.fingerprint.FingerprintUtils $r1;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = staticinvoke <com.android.server.biometrics.fingerprint.FingerprintUtils: com.android.server.biometrics.fingerprint.FingerprintUtils getInstance()>();

        return $r1;
    }

    protected com.android.server.biometrics.Constants getConstants()
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        com.android.server.biometrics.fingerprint.FingerprintConstants $r1;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.fingerprint.FingerprintConstants mFingerprintConstants>;

        return $r1;
    }

    protected com.android.server.biometrics.BiometricServiceBase$DaemonWrapper getDaemonWrapper()
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        com.android.server.biometrics.BiometricServiceBase$DaemonWrapper $r1;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.BiometricServiceBase$DaemonWrapper mDaemonWrapper>;

        return $r1;
    }

    protected java.util.List getEnrolledTemplates(int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0, $i1;
        com.android.server.biometrics.BiometricUtils $r1;
        android.content.Context $r2;
        java.util.List $r3;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i0 == $i1 goto label1;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

     label1:
        $r1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.BiometricUtils getBiometricUtils()>();

        $r2 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.content.Context getContext()>();

        $r3 = interfaceinvoke $r1.<com.android.server.biometrics.BiometricUtils: java.util.List getBiometricsForUser(android.content.Context,int)>($r2, i0);

        return $r3;
    }

    protected long getHalDeviceId()
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        long $l0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        $l0 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: long mHalDeviceId>;

        return $l0;
    }

    protected java.lang.String getLockoutBroadcastPermission()
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        return "android.permission.RESET_FINGERPRINT_LOCKOUT";
    }

    protected int getLockoutMode()
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0, i1, $i2;
        android.util.SparseIntArray $r1;
        android.util.SparseBooleanArray $r2;
        boolean $z0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.util.SparseIntArray mFailedAttempts>;

        i1 = virtualinvoke $r1.<android.util.SparseIntArray: int get(int,int)>(i0, 0);

        if i1 < 20 goto label1;

        return 2;

     label1:
        if i1 <= 0 goto label2;

        $r2 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.util.SparseBooleanArray mTimedLockoutCleared>;

        $z0 = virtualinvoke $r2.<android.util.SparseBooleanArray: boolean get(int,boolean)>(i0, 0);

        if $z0 != 0 goto label2;

        $i2 = i1 % 5;

        if $i2 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    protected java.lang.String getLockoutResetIntent()
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        return "com.android.server.biometrics.fingerprint.ACTION_LOCKOUT_RESET";
    }

    protected java.lang.String getManageBiometricPermission()
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        return "android.permission.MANAGE_FINGERPRINT";
    }

    protected java.lang.String getTag()
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        return "FingerprintService";
    }

    protected boolean hasEnrolledBiometrics(int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0, $i1, $i2;
        com.android.server.biometrics.BiometricUtils $r1;
        android.content.Context $r2;
        java.util.List $r3;
        boolean z0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i0 == $i1 goto label1;

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void checkPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

     label1:
        $r1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.BiometricUtils getBiometricUtils()>();

        $r2 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.content.Context getContext()>();

        $r3 = interfaceinvoke $r1.<com.android.server.biometrics.BiometricUtils: java.util.List getBiometricsForUser(android.content.Context,int)>($r2, i0);

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i2 <= 0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    protected boolean hasReachedEnrollmentLimit(int)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        int i0, i1, $i2;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.util.List $r3;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        i1 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(17694814);

        $r3 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.util.List getEnrolledTemplates(int)>(i0);

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i2 < i1 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FingerprintService", "Too many fingerprints registered");

        return 1;

     label1:
        return 0;
    }

    protected void notifyClientActiveCallbacks(boolean)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        boolean z0;
        java.util.concurrent.CopyOnWriteArrayList r1, $r6;
        int $i0, i1;
        java.lang.Object $r3, $r7;
        android.hardware.fingerprint.IFingerprintClientActiveCallback $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.util.concurrent.CopyOnWriteArrayList mClientActiveCallbacks>;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label6;

     label2:
        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (android.hardware.fingerprint.IFingerprintClientActiveCallback) $r3;

        interfaceinvoke $r4.<android.hardware.fingerprint.IFingerprintClientActiveCallback: void onClientActiveChanged(boolean)>(z0);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.util.concurrent.CopyOnWriteArrayList mClientActiveCallbacks>;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r7);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void onStart()
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        com.android.server.biometrics.fingerprint.FingerprintService$FingerprintServiceWrapper $r1;
        com.android.server.biometrics.fingerprint._$$Lambda$FingerprintService$YOMIOLvco2SvXVeJIulOSVKdX7A $r2;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void onStart()>();

        $r1 = new com.android.server.biometrics.fingerprint.FingerprintService$FingerprintServiceWrapper;

        specialinvoke $r1.<com.android.server.biometrics.fingerprint.FingerprintService$FingerprintServiceWrapper: void <init>(com.android.server.biometrics.fingerprint.FingerprintService,com.android.server.biometrics.fingerprint.FingerprintService$1)>(r0, null);

        virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: void publishBinderService(java.lang.String,android.os.IBinder)>("fingerprint", $r1);

        $r2 = new com.android.server.biometrics.fingerprint._$$Lambda$FingerprintService$YOMIOLvco2SvXVeJIulOSVKdX7A;

        specialinvoke $r2.<com.android.server.biometrics.fingerprint._$$Lambda$FingerprintService$YOMIOLvco2SvXVeJIulOSVKdX7A: void <init>(com.android.server.biometrics.fingerprint.FingerprintService)>(r0);

        staticinvoke <com.android.server.SystemServerInitThreadPool: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.String)>($r2, "FingerprintService.onStart");

        return;
    }

    public void serviceDied(long)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        long l0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        l0 := @parameter0: long;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void serviceDied(long)>(l0);

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint mDaemon> = null;

        return;
    }

    protected int statsModality()
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        return 1;
    }

    protected void updateActiveGroup(int, java.lang.String)
    {
        com.android.server.biometrics.fingerprint.FingerprintService r0;
        android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint r1;
        int i0, $i1, i7, i8;
        java.io.File r2, r18;
        java.lang.Integer $r3;
        java.lang.Long $r4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r6, $r8, $r10, $r14, r16;
        android.os.RemoteException $r15;
        java.lang.StringBuilder r17, r19;
        java.util.Map r20;
        long l9;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintService;

        i7 := @parameter0: int;

        r16 := @parameter1: java.lang.String;

        r1 = specialinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint getFingerprintDaemon()>();

        if r1 == null goto label19;

     label01:
        i0 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: int getUserOrWorkProfileId(java.lang.String,int)>(r16, i7);

        $i1 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: int mCurrentUserId>;

        if i0 == $i1 goto label13;

        i8 = <android.os.Build$VERSION: int FIRST_SDK_INT>;

     label02:
        if i8 >= 1 goto label04;

     label03:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("First SDK version ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is invalid; must be at least VERSION_CODES.BASE");

        $r14 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("FingerprintService", $r14);

     label04:
        if i8 > 27 goto label07;

     label05:
        r18 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

     label06:
        goto label08;

     label07:
        r18 = staticinvoke <android.os.Environment: java.io.File getDataVendorDeDirectory(int)>(i0);

     label08:
        r2 = new java.io.File;

        specialinvoke r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r18, "fpdata");

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label12;

        $z1 = virtualinvoke r2.<java.io.File: boolean mkdir()>();

        if $z1 != 0 goto label10;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot make directory: ");

        $r8 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("FingerprintService", $r10);

     label09:
        return;

     label10:
        $z2 = staticinvoke <android.os.SELinux: boolean restorecon(java.io.File)>(r2);

        if $z2 != 0 goto label12;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FingerprintService", "Restorecons failed. Directory will have wrong label.");

     label11:
        return;

     label12:
        $r6 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        interfaceinvoke r1.<android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint: int setActiveGroup(int,java.lang.String)>(i0, $r6);

        r0.<com.android.server.biometrics.fingerprint.FingerprintService: int mCurrentUserId> = i0;

     label13:
        r20 = r0.<com.android.server.biometrics.fingerprint.FingerprintService: java.util.Map mAuthenticatorIds>;

        $z3 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintService: boolean hasEnrolledBiometrics(int)>(i0);

        if $z3 == 0 goto label15;

        l9 = interfaceinvoke r1.<android.hardware.biometrics.fingerprint.V2_1.IBiometricsFingerprint: long getAuthenticatorId()>();

     label14:
        goto label16;

     label15:
        l9 = 0L;

     label16:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l9);

        interfaceinvoke r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

     label17:
        goto label19;

     label18:
        $r15 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FingerprintService", "Failed to setActiveGroup():", $r15);

     label19:
        return;

        catch android.os.RemoteException from label01 to label02 with label18;
        catch android.os.RemoteException from label03 to label04 with label18;
        catch android.os.RemoteException from label05 to label06 with label18;
        catch android.os.RemoteException from label07 to label08 with label18;
        catch android.os.RemoteException from label08 to label09 with label18;
        catch android.os.RemoteException from label10 to label11 with label18;
        catch android.os.RemoteException from label12 to label13 with label18;
        catch android.os.RemoteException from label13 to label14 with label18;
        catch android.os.RemoteException from label16 to label17 with label18;
    }

    public static void <clinit>()
    {
        <com.android.server.biometrics.fingerprint.FingerprintService: java.lang.String TAG> = "FingerprintService";

        <com.android.server.biometrics.fingerprint.FingerprintService: int MAX_FAILED_ATTEMPTS_LOCKOUT_TIMED> = 5;

        <com.android.server.biometrics.fingerprint.FingerprintService: int MAX_FAILED_ATTEMPTS_LOCKOUT_PERMANENT> = 20;

        <com.android.server.biometrics.fingerprint.FingerprintService: java.lang.String KEY_LOCKOUT_RESET_USER> = "lockout_reset_user";

        <com.android.server.biometrics.fingerprint.FingerprintService: java.lang.String FP_DATA_DIR> = "fpdata";

        <com.android.server.biometrics.fingerprint.FingerprintService: long FAIL_LOCKOUT_TIMEOUT_MS> = 30000L;

        <com.android.server.biometrics.fingerprint.FingerprintService: boolean DEBUG> = 1;

        <com.android.server.biometrics.fingerprint.FingerprintService: java.lang.String ACTION_LOCKOUT_RESET> = "com.android.server.biometrics.fingerprint.ACTION_LOCKOUT_RESET";

        return;
    }
}
