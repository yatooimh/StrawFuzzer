public class com.android.server.biometrics.fingerprint.FingerprintUserState extends com.android.server.biometrics.BiometricUserState
{
    private static final java.lang.String ATTR_DEVICE_ID;
    private static final java.lang.String ATTR_FINGER_ID;
    private static final java.lang.String ATTR_GROUP_ID;
    private static final java.lang.String ATTR_NAME;
    private static final java.lang.String FINGERPRINT_FILE;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_FINGERPRINT;
    private static final java.lang.String TAG_FINGERPRINTS;

    public void <init>(android.content.Context, int)
    {
        com.android.server.biometrics.fingerprint.FingerprintUserState r0;
        android.content.Context r1;
        int i0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintUserState;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.biometrics.BiometricUserState: void <init>(android.content.Context,int)>(r1, i0);

        return;
    }

    public void addBiometric(android.hardware.biometrics.BiometricAuthenticator$Identifier)
    {
        com.android.server.biometrics.fingerprint.FingerprintUserState r0;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r1;
        boolean $z0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintUserState;

        r1 := @parameter0: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        $z0 = r1 instanceof android.hardware.fingerprint.Fingerprint;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.biometrics.BiometricUserState: void addBiometric(android.hardware.biometrics.BiometricAuthenticator$Identifier)>(r1);

        goto label2;

     label1:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FingerprintState", "Attempted to add non-fingerprint identifier");

     label2:
        return;
    }

    protected void doWriteState()
    {
        com.android.server.biometrics.fingerprint.FingerprintUserState r0;
        java.util.ArrayList r1, $r6;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, $i1, $i2, i5;
        android.hardware.fingerprint.Fingerprint r3;
        android.util.AtomicFile $r4;
        java.io.File $r5;
        java.lang.Boolean $r7;
        java.lang.Object $r10;
        java.lang.String $r12, $r15, $r17, $r19;
        java.lang.CharSequence $r14;
        long $l3;
        java.lang.Throwable $r22, $r23, $r24;
        java.io.FileOutputStream r26, r27;
        java.lang.IllegalStateException r29;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintUserState;

        $r4 = new android.util.AtomicFile;

        $r5 = r0.<com.android.server.biometrics.fingerprint.FingerprintUserState: java.io.File mFile>;

        specialinvoke $r4.<android.util.AtomicFile: void <init>(java.io.File)>($r5);

        entermonitor r0;

     label01:
        $r6 = r0.<com.android.server.biometrics.fingerprint.FingerprintUserState: java.util.ArrayList mBiometrics>;

        r1 = virtualinvoke r0.<com.android.server.biometrics.fingerprint.FingerprintUserState: java.util.ArrayList getCopy(java.util.ArrayList)>($r6);

        exitmonitor r0;

     label02:
        r26 = null;

     label03:
        r27 = virtualinvoke $r4.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label04:
        r26 = r27;

     label05:
        r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

     label06:
        r26 = r27;

     label07:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r27, "utf-8");

     label08:
        r26 = r27;

     label09:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

     label10:
        r26 = r27;

     label11:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r7);

     label12:
        r26 = r27;

     label13:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "fingerprints");

     label14:
        r26 = r27;

     label15:
        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label16:
        i5 = 0;

     label17:
        if i5 >= i0 goto label32;

        r26 = r27;

     label18:
        $r10 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r3 = (android.hardware.fingerprint.Fingerprint) $r10;

     label19:
        r26 = r27;

     label20:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "fingerprint");

     label21:
        r26 = r27;

     label22:
        $i1 = virtualinvoke r3.<android.hardware.fingerprint.Fingerprint: int getBiometricId()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "fingerId", $r12);

     label23:
        r26 = r27;

     label24:
        $r14 = virtualinvoke r3.<android.hardware.fingerprint.Fingerprint: java.lang.CharSequence getName()>();

        $r15 = interfaceinvoke $r14.<java.lang.CharSequence: java.lang.String toString()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r15);

     label25:
        r26 = r27;

     label26:
        $i2 = virtualinvoke r3.<android.hardware.fingerprint.Fingerprint: int getGroupId()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "groupId", $r17);

     label27:
        r26 = r27;

     label28:
        $l3 = virtualinvoke r3.<android.hardware.fingerprint.Fingerprint: long getDeviceId()>();

        $r19 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l3);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "deviceId", $r19);

     label29:
        r26 = r27;

     label30:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "fingerprint");

     label31:
        i5 = i5 + 1;

        goto label17;

     label32:
        r26 = r27;

     label33:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "fingerprints");

     label34:
        r26 = r27;

     label35:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label36:
        r26 = r27;

     label37:
        virtualinvoke $r4.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r27);

     label38:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r27);

        return;

     label39:
        $r23 := @caughtexception;

     label40:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("FingerprintState", "Failed to write settings, restoring backup", $r23);

        virtualinvoke $r4.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r26);

        r29 = new java.lang.IllegalStateException;

        specialinvoke r29.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to write fingerprints", $r23);

        throw r29;

     label41:
        $r22 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r26);

        throw $r22;

     label42:
        $r24 := @caughtexception;

     label43:
        exitmonitor r0;

     label44:
        throw $r24;

        catch java.lang.Throwable from label01 to label02 with label42;
        catch java.lang.Throwable from label03 to label04 with label39;
        catch java.lang.Throwable from label05 to label06 with label39;
        catch java.lang.Throwable from label07 to label08 with label39;
        catch java.lang.Throwable from label09 to label10 with label39;
        catch java.lang.Throwable from label11 to label12 with label39;
        catch java.lang.Throwable from label13 to label14 with label39;
        catch java.lang.Throwable from label15 to label16 with label39;
        catch java.lang.Throwable from label18 to label19 with label39;
        catch java.lang.Throwable from label20 to label21 with label39;
        catch java.lang.Throwable from label22 to label23 with label39;
        catch java.lang.Throwable from label24 to label25 with label39;
        catch java.lang.Throwable from label26 to label27 with label39;
        catch java.lang.Throwable from label28 to label29 with label39;
        catch java.lang.Throwable from label30 to label31 with label39;
        catch java.lang.Throwable from label33 to label34 with label39;
        catch java.lang.Throwable from label35 to label36 with label39;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label40 to label41 with label41;
        catch java.lang.Throwable from label43 to label44 with label42;
    }

    protected java.lang.String getBiometricFile()
    {
        com.android.server.biometrics.fingerprint.FingerprintUserState r0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintUserState;

        return "settings_fingerprint.xml";
    }

    protected java.lang.String getBiometricsTag()
    {
        com.android.server.biometrics.fingerprint.FingerprintUserState r0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintUserState;

        return "fingerprints";
    }

    protected java.util.ArrayList getCopy(java.util.ArrayList)
    {
        com.android.server.biometrics.fingerprint.FingerprintUserState r0;
        java.util.ArrayList r1, $r4;
        android.hardware.fingerprint.Fingerprint r3, $r6;
        int $i0, $i1, $i2, i4;
        java.lang.Object $r5;
        java.lang.CharSequence $r7;
        long $l3;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintUserState;

        r1 := @parameter0: java.util.ArrayList;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i4 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i4 >= $i0 goto label2;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r3 = (android.hardware.fingerprint.Fingerprint) $r5;

        $r6 = new android.hardware.fingerprint.Fingerprint;

        $r7 = virtualinvoke r3.<android.hardware.fingerprint.Fingerprint: java.lang.CharSequence getName()>();

        $i1 = virtualinvoke r3.<android.hardware.fingerprint.Fingerprint: int getGroupId()>();

        $i2 = virtualinvoke r3.<android.hardware.fingerprint.Fingerprint: int getBiometricId()>();

        $l3 = virtualinvoke r3.<android.hardware.fingerprint.Fingerprint: long getDeviceId()>();

        specialinvoke $r6.<android.hardware.fingerprint.Fingerprint: void <init>(java.lang.CharSequence,int,int,long)>($r7, $i1, $i2, $l3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        i4 = i4 + 1;

        goto label1;

     label2:
        return $r4;
    }

    protected int getNameTemplateResource()
    {
        com.android.server.biometrics.fingerprint.FingerprintUserState r0;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintUserState;

        return 17040213;
    }

    protected void parseBiometricsLocked(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.biometrics.fingerprint.FingerprintUserState r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, $i2, $i3, $i5;
        java.lang.String r2, r3, r4, $r5, r9;
        boolean $z0;
        android.hardware.fingerprint.Fingerprint $r6;
        java.util.ArrayList $r7;
        long $l4;

        r0 := @this: com.android.server.biometrics.fingerprint.FingerprintUserState;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label7;

        if i1 != 3 goto label3;

        $i5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i5 <= i0 goto label2;

        goto label3;

     label2:
        goto label7;

     label3:
        if i1 == 3 goto label6;

        if i1 != 4 goto label4;

        goto label1;

     label4:
        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("fingerprint");

        if $z0 == 0 goto label5;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "groupId");

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "fingerId");

        r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "deviceId");

        $r7 = r0.<com.android.server.biometrics.fingerprint.FingerprintUserState: java.util.ArrayList mBiometrics>;

        $r6 = new android.hardware.fingerprint.Fingerprint;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r9);

        specialinvoke $r6.<android.hardware.fingerprint.Fingerprint: void <init>(java.lang.CharSequence,int,int,long)>(r2, $i2, $i3, $l4);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label5;

     label5:
        goto label1;

     label6:
        goto label1;

     label7:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.biometrics.fingerprint.FingerprintUserState: java.lang.String TAG_FINGERPRINTS> = "fingerprints";

        <com.android.server.biometrics.fingerprint.FingerprintUserState: java.lang.String TAG_FINGERPRINT> = "fingerprint";

        <com.android.server.biometrics.fingerprint.FingerprintUserState: java.lang.String TAG> = "FingerprintState";

        <com.android.server.biometrics.fingerprint.FingerprintUserState: java.lang.String FINGERPRINT_FILE> = "settings_fingerprint.xml";

        <com.android.server.biometrics.fingerprint.FingerprintUserState: java.lang.String ATTR_NAME> = "name";

        <com.android.server.biometrics.fingerprint.FingerprintUserState: java.lang.String ATTR_GROUP_ID> = "groupId";

        <com.android.server.biometrics.fingerprint.FingerprintUserState: java.lang.String ATTR_FINGER_ID> = "fingerId";

        <com.android.server.biometrics.fingerprint.FingerprintUserState: java.lang.String ATTR_DEVICE_ID> = "deviceId";

        return;
    }
}
