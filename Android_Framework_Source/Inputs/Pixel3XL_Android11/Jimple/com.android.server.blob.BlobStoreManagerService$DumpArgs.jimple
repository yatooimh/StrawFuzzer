final class com.android.server.blob.BlobStoreManagerService$DumpArgs extends java.lang.Object
{
    private static final int FLAG_DUMP_BLOBS;
    private static final int FLAG_DUMP_CONFIG;
    private static final int FLAG_DUMP_SESSIONS;
    private boolean mDumpAll;
    private final java.util.ArrayList mDumpBlobIds;
    private boolean mDumpHelp;
    private final java.util.ArrayList mDumpPackages;
    private final java.util.ArrayList mDumpUids;
    private boolean mDumpUnredacted;
    private final java.util.ArrayList mDumpUserIds;
    private int mSelectedSectionFlags;

    private void <init>()
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        java.util.ArrayList $r1, $r2, $r3, $r4;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpPackages> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpUids> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpUserIds> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpBlobIds> = $r4;

        return;
    }

    static void access$2500(com.android.server.blob.BlobStoreManagerService$DumpArgs, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        com.android.internal.util.IndentingPrintWriter r1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        r1 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void dumpArgsUsage(com.android.internal.util.IndentingPrintWriter)>(r1);

        return;
    }

    private void dumpArgsUsage(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        com.android.internal.util.IndentingPrintWriter r1;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("--help | -h");

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void printWithIndent(com.android.internal.util.IndentingPrintWriter,java.lang.String)>(r1, "Dump this help text");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("--sessions");

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void printWithIndent(com.android.internal.util.IndentingPrintWriter,java.lang.String)>(r1, "Dump only the sessions info");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("--blobs");

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void printWithIndent(com.android.internal.util.IndentingPrintWriter,java.lang.String)>(r1, "Dump only the committed blobs info");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("--config");

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void printWithIndent(com.android.internal.util.IndentingPrintWriter,java.lang.String)>(r1, "Dump only the config values");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("--package | -p [package-name]");

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void printWithIndent(com.android.internal.util.IndentingPrintWriter,java.lang.String)>(r1, "Dump blobs info associated with the given package");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("--uid | -u [uid]");

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void printWithIndent(com.android.internal.util.IndentingPrintWriter,java.lang.String)>(r1, "Dump blobs info associated with the given uid");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("--user [user-id]");

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void printWithIndent(com.android.internal.util.IndentingPrintWriter,java.lang.String)>(r1, "Dump blobs info in the given user");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("--blob | -b [session-id | blob-id]");

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void printWithIndent(com.android.internal.util.IndentingPrintWriter,java.lang.String)>(r1, "Dump blob info corresponding to the given ID");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("--full | -f");

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void printWithIndent(com.android.internal.util.IndentingPrintWriter,java.lang.String)>(r1, "Dump full unredacted blobs data");

        return;
    }

    private static int getIntArgRequired(java.lang.String[], int, java.lang.String)
    {
        int i0, i1, $i2;
        java.lang.String r0, $r5, $r6, $r12, $r15;
        java.lang.StringBuilder $r1, $r8;
        java.lang.IllegalArgumentException $r4, $r14;
        java.lang.Throwable $r7;
        java.lang.String[] r16;

        r16 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        $i2 = lengthof r16;

        if i0 >= $i2 goto label4;

     label1:
        $r6 = r16[i0];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

     label2:
        return i1;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = r16[i0];

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static long getLongArgRequired(java.lang.String[], int, java.lang.String)
    {
        int i0, $i2;
        java.lang.String r0, $r5, $r6, $r12, $r15;
        long l1;
        java.lang.StringBuilder $r1, $r8;
        java.lang.IllegalArgumentException $r4, $r14;
        java.lang.Throwable $r7;
        java.lang.String[] r16;

        r16 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        $i2 = lengthof r16;

        if i0 >= $i2 goto label4;

     label1:
        $r6 = r16[i0];

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

     label2:
        return l1;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = r16[i0];

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static java.lang.String getStringArgRequired(java.lang.String[], int, java.lang.String)
    {
        int i0, $i1;
        java.lang.String r0, $r5, $r6;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String[] r7;

        r7 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        $i1 = lengthof r7;

        if i0 >= $i1 goto label1;

        $r6 = r7[i0];

        return $r6;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static com.android.server.blob.BlobStoreManagerService$DumpArgs parse(java.lang.String[])
    {
        java.lang.String[] r0;
        int i0, $i1, $i4, $i5, i6;
        com.android.server.blob.BlobStoreManagerService$DumpArgs $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11, $z12, $z14, $z15, $z16;
        long $l2, $l3;
        java.lang.Long $r16, $r21;
        java.util.ArrayList $r20, r25, r26, r27, r28;
        java.lang.Integer $r22, $r23;

        r0 := @parameter0: java.lang.String[];

        $r2 = new com.android.server.blob.BlobStoreManagerService$DumpArgs;

        specialinvoke $r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void <init>()>();

        if r0 != null goto label01;

        return $r2;

     label01:
        i6 = 0;

     label02:
        $i1 = lengthof r0;

        if i6 >= $i1 goto label21;

        r24 = r0[i6];

        $r3 = "--all";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z0 != 0 goto label19;

        $r4 = "-a";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z1 == 0 goto label03;

        goto label19;

     label03:
        $r5 = "--unredacted";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z2 != 0 goto label16;

        $r6 = "-u";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z3 == 0 goto label04;

        goto label16;

     label04:
        $r7 = "--sessions";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z4 == 0 goto label05;

        virtualinvoke $r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void allowDumpSessions()>();

        goto label20;

     label05:
        $r8 = "--blobs";

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z5 == 0 goto label06;

        virtualinvoke $r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void allowDumpBlobs()>();

        goto label20;

     label06:
        $r9 = "--config";

        $z6 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z6 == 0 goto label07;

        virtualinvoke $r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: void allowDumpConfig()>();

        goto label20;

     label07:
        $r10 = "--package";

        $z7 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z7 != 0 goto label15;

        $r12 = "-p";

        $z9 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z9 == 0 goto label08;

        goto label15;

     label08:
        $r13 = "--uid";

        $z10 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z10 == 0 goto label09;

        r25 = $r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpUids>;

        i6 = i6 + 1;

        $i5 = staticinvoke <com.android.server.blob.BlobStoreManagerService$DumpArgs: int getIntArgRequired(java.lang.String[],int,java.lang.String)>(r0, i6, "uid");

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke r25.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

        goto label20;

     label09:
        $r14 = "--user";

        $z11 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z11 == 0 goto label10;

        r26 = $r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpUserIds>;

        i6 = i6 + 1;

        $i4 = staticinvoke <com.android.server.blob.BlobStoreManagerService$DumpArgs: int getIntArgRequired(java.lang.String[],int,java.lang.String)>(r0, i6, "userId");

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r26.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        goto label20;

     label10:
        $r15 = "--blob";

        $z12 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z12 != 0 goto label14;

        $r17 = "-b";

        $z14 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z14 == 0 goto label11;

        goto label14;

     label11:
        $r18 = "--help";

        $z15 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z15 != 0 goto label13;

        $r19 = "-h";

        $z16 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z16 == 0 goto label12;

        goto label13;

     label12:
        $r20 = $r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpBlobIds>;

        $l3 = staticinvoke <com.android.server.blob.BlobStoreManagerService$DumpArgs: long getLongArgRequired(java.lang.String[],int,java.lang.String)>(r0, i6, "blobId");

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        goto label20;

     label13:
        $r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: boolean mDumpHelp> = 1;

        goto label20;

     label14:
        r27 = $r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpBlobIds>;

        i6 = i6 + 1;

        $l2 = staticinvoke <com.android.server.blob.BlobStoreManagerService$DumpArgs: long getLongArgRequired(java.lang.String[],int,java.lang.String)>(r0, i6, "blobId");

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke r27.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        goto label20;

     label15:
        r28 = $r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpPackages>;

        i6 = i6 + 1;

        $r11 = staticinvoke <com.android.server.blob.BlobStoreManagerService$DumpArgs: java.lang.String getStringArgRequired(java.lang.String[],int,java.lang.String)>(r0, i6, "packageName");

        virtualinvoke r28.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        goto label20;

     label16:
        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 2000 goto label17;

        if i0 != 0 goto label18;

     label17:
        $r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: boolean mDumpUnredacted> = 1;

     label18:
        goto label20;

     label19:
        $r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: boolean mDumpAll> = 1;

     label20:
        i6 = i6 + 1;

        goto label02;

     label21:
        return $r2;
    }

    private void printWithIndent(com.android.internal.util.IndentingPrintWriter, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.lang.String r2;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>(r2);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    public void allowDumpBlobs()
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        int $i0, $i1;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        $i0 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: int mSelectedSectionFlags>;

        $i1 = $i0 | 2;

        r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: int mSelectedSectionFlags> = $i1;

        return;
    }

    public void allowDumpConfig()
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        int $i0, $i1;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        $i0 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: int mSelectedSectionFlags>;

        $i1 = $i0 | 4;

        r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: int mSelectedSectionFlags> = $i1;

        return;
    }

    public void allowDumpSessions()
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        int $i0, $i1;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        $i0 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: int mSelectedSectionFlags>;

        $i1 = $i0 | 1;

        r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: int mSelectedSectionFlags> = $i1;

        return;
    }

    public boolean shouldDumpAllSections()
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        boolean $z0, z1;
        int $i0;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        $z0 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: boolean mDumpAll>;

        if $z0 != 0 goto label2;

        $i0 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: int mSelectedSectionFlags>;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public boolean shouldDumpBlob(long)
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        long l0;
        java.util.ArrayList $r1, $r2;
        boolean $z0, z1;
        java.lang.Long $r3;
        int $i1;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpBlobIds>;

        $z0 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpBlobIds>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int indexOf(java.lang.Object)>($r3);

        if $i1 < 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public boolean shouldDumpBlobs()
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        boolean z0, z1;
        int $i0, $i1;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        z0 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: boolean shouldDumpAllSections()>();

        z1 = 1;

        if z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: int mSelectedSectionFlags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label2;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;
    }

    public boolean shouldDumpConfig()
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        boolean z0, z1;
        int $i0, $i1;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        z0 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: boolean shouldDumpAllSections()>();

        z1 = 1;

        if z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: int mSelectedSectionFlags>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label2;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;
    }

    public boolean shouldDumpFull()
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        boolean $z0;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        $z0 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: boolean mDumpUnredacted>;

        return $z0;
    }

    public boolean shouldDumpHelp()
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        boolean $z0;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        $z0 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: boolean mDumpHelp>;

        return $z0;
    }

    public boolean shouldDumpSession(java.lang.String, int, long)
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        java.lang.String r1;
        int i0, $i2, $i3, $i4;
        long l1;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r7, $r9;
        boolean $z0, $z1, $z2;
        java.lang.Long $r6;
        java.lang.Integer $r8;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r2 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpPackages>;

        $z0 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>($r2);

        if $z0 != 0 goto label1;

        $r9 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpPackages>;

        $i4 = virtualinvoke $r9.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if $i4 >= 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpUids>;

        $z1 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>($r3);

        if $z1 != 0 goto label2;

        $r7 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpUids>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $i3 = virtualinvoke $r7.<java.util.ArrayList: int indexOf(java.lang.Object)>($r8);

        if $i3 >= 0 goto label2;

        return 0;

     label2:
        $r4 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpBlobIds>;

        $z2 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>($r4);

        if $z2 != 0 goto label3;

        $r5 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpBlobIds>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int indexOf(java.lang.Object)>($r6);

        if $i2 >= 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public boolean shouldDumpSessions()
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        boolean z0, z1;
        int $i0, $i1;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        z0 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: boolean shouldDumpAllSections()>();

        z1 = 1;

        if z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: int mSelectedSectionFlags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label2;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;
    }

    public boolean shouldDumpUser(int)
    {
        com.android.server.blob.BlobStoreManagerService$DumpArgs r0;
        int i0, $i1;
        java.util.ArrayList $r1, $r2;
        boolean $z0, z1;
        java.lang.Integer $r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpUserIds>;

        $z0 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.android.server.blob.BlobStoreManagerService$DumpArgs: java.util.ArrayList mDumpUserIds>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int indexOf(java.lang.Object)>($r3);

        if $i1 < 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public static void <clinit>()
    {
        <com.android.server.blob.BlobStoreManagerService$DumpArgs: int FLAG_DUMP_SESSIONS> = 1;

        <com.android.server.blob.BlobStoreManagerService$DumpArgs: int FLAG_DUMP_CONFIG> = 4;

        <com.android.server.blob.BlobStoreManagerService$DumpArgs: int FLAG_DUMP_BLOBS> = 2;

        return;
    }
}
