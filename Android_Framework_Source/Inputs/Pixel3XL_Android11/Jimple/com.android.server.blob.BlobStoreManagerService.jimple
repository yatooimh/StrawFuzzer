public class com.android.server.blob.BlobStoreManagerService extends com.android.server.SystemService
{
    private final android.util.ArraySet mActiveBlobIds;
    private final android.os.Handler mBackgroundHandler;
    private final java.lang.Object mBlobsLock;
    private final android.util.SparseArray mBlobsMap;
    private final android.content.Context mContext;
    private long mCurrentMaxSessionId;
    private final android.os.Handler mHandler;
    private final com.android.server.blob.BlobStoreManagerService$Injector mInjector;
    private final android.util.ArraySet mKnownBlobIds;
    private android.content.pm.PackageManagerInternal mPackageManagerInternal;
    private final java.util.Random mRandom;
    private final java.lang.Runnable mSaveBlobsInfoRunnable;
    private final java.lang.Runnable mSaveSessionsRunnable;
    private final com.android.server.blob.BlobStoreManagerService$SessionStateChangeListener mSessionStateChangeListener;
    private final android.util.SparseArray mSessions;
    private com.android.server.blob.BlobStoreManagerService$StatsPullAtomCallbackImpl mStatsCallbackImpl;
    private android.app.StatsManager mStatsManager;

    public void <init>(android.content.Context)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.content.Context r1;
        com.android.server.blob.BlobStoreManagerService$Injector $r2;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: android.content.Context;

        $r2 = new com.android.server.blob.BlobStoreManagerService$Injector;

        specialinvoke $r2.<com.android.server.blob.BlobStoreManagerService$Injector: void <init>()>();

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void <init>(android.content.Context,com.android.server.blob.BlobStoreManagerService$Injector)>(r1, $r2);

        return;
    }

    void <init>(android.content.Context, com.android.server.blob.BlobStoreManagerService$Injector)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.content.Context r1;
        com.android.server.blob.BlobStoreManagerService$Injector r2, $r14;
        java.lang.Object $r3;
        android.util.SparseArray $r4, $r5;
        android.util.ArraySet $r6, $r7;
        java.security.SecureRandom $r8;
        com.android.server.blob.BlobStoreManagerService$SessionStateChangeListener $r9;
        com.android.server.blob.BlobStoreManagerService$StatsPullAtomCallbackImpl $r10;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$0WauOYQXWD9rogYgvnCLUb176wA $r11;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$TQmyogoz_iYWcrNcnMqwFDg6S5A $r12;
        android.os.Handler $r13, $r15;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.blob.BlobStoreManagerService$Injector;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap> = $r5;

        $r6 = new android.util.ArraySet;

        specialinvoke $r6.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArraySet mActiveBlobIds> = $r6;

        $r7 = new android.util.ArraySet;

        specialinvoke $r7.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArraySet mKnownBlobIds> = $r7;

        $r8 = new java.security.SecureRandom;

        specialinvoke $r8.<java.security.SecureRandom: void <init>()>();

        r0.<com.android.server.blob.BlobStoreManagerService: java.util.Random mRandom> = $r8;

        $r9 = new com.android.server.blob.BlobStoreManagerService$SessionStateChangeListener;

        specialinvoke $r9.<com.android.server.blob.BlobStoreManagerService$SessionStateChangeListener: void <init>(com.android.server.blob.BlobStoreManagerService)>(r0);

        r0.<com.android.server.blob.BlobStoreManagerService: com.android.server.blob.BlobStoreManagerService$SessionStateChangeListener mSessionStateChangeListener> = $r9;

        $r10 = new com.android.server.blob.BlobStoreManagerService$StatsPullAtomCallbackImpl;

        specialinvoke $r10.<com.android.server.blob.BlobStoreManagerService$StatsPullAtomCallbackImpl: void <init>(com.android.server.blob.BlobStoreManagerService,com.android.server.blob.BlobStoreManagerService$1)>(r0, null);

        r0.<com.android.server.blob.BlobStoreManagerService: com.android.server.blob.BlobStoreManagerService$StatsPullAtomCallbackImpl mStatsCallbackImpl> = $r10;

        $r11 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$0WauOYQXWD9rogYgvnCLUb176wA;

        specialinvoke $r11.<com.android.server.blob._$$Lambda$BlobStoreManagerService$0WauOYQXWD9rogYgvnCLUb176wA: void <init>(com.android.server.blob.BlobStoreManagerService)>(r0);

        r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Runnable mSaveBlobsInfoRunnable> = $r11;

        $r12 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$TQmyogoz_iYWcrNcnMqwFDg6S5A;

        specialinvoke $r12.<com.android.server.blob._$$Lambda$BlobStoreManagerService$TQmyogoz_iYWcrNcnMqwFDg6S5A: void <init>(com.android.server.blob.BlobStoreManagerService)>(r0);

        r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Runnable mSaveSessionsRunnable> = $r12;

        r0.<com.android.server.blob.BlobStoreManagerService: android.content.Context mContext> = r1;

        r0.<com.android.server.blob.BlobStoreManagerService: com.android.server.blob.BlobStoreManagerService$Injector mInjector> = r2;

        $r13 = virtualinvoke r2.<com.android.server.blob.BlobStoreManagerService$Injector: android.os.Handler initializeMessageHandler()>();

        r0.<com.android.server.blob.BlobStoreManagerService: android.os.Handler mHandler> = $r13;

        $r14 = r0.<com.android.server.blob.BlobStoreManagerService: com.android.server.blob.BlobStoreManagerService$Injector mInjector>;

        $r15 = virtualinvoke $r14.<com.android.server.blob.BlobStoreManagerService$Injector: android.os.Handler getBackgroundHandler()>();

        r0.<com.android.server.blob.BlobStoreManagerService: android.os.Handler mBackgroundHandler> = $r15;

        return;
    }

    private void abandonSessionInternal(long, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        long l0;
        int i1;
        java.lang.Object r1;
        boolean $z0;
        java.lang.String $r8, r10;
        java.lang.Throwable $r9;
        com.android.server.blob.BlobStoreSession r11;
        java.lang.StringBuilder r12;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r10 := @parameter2: java.lang.String;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        r11 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: com.android.server.blob.BlobStoreSession openSessionInternal(long,int,java.lang.String)>(l0, i1, r10);

        virtualinvoke r11.<com.android.server.blob.BlobStoreSession: void open()>();

        virtualinvoke r11.<com.android.server.blob.BlobStoreSession: void abandon()>();

        $z0 = <com.android.server.blob.BlobStoreConfig: boolean LOGV>;

        if $z0 == 0 goto label2;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Abandoned session with id ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; callingUid=");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callingPackage=");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r8 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BlobStore", $r8);

     label2:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobSessionsAsync()>();

        exitmonitor r1;

     label3:
        return;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    static void access$1000(com.android.server.blob.BlobStoreManagerService, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void handleUserRemoved(int)>(i0);

        return;
    }

    static void access$1100(com.android.server.blob.BlobStoreManagerService, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void verifyCallingPackage(int,java.lang.String)>(i0, r1);

        return;
    }

    static android.content.pm.PackageManagerInternal access$1200(com.android.server.blob.BlobStoreManagerService)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.content.pm.PackageManagerInternal $r1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        $r1 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.pm.PackageManagerInternal mPackageManagerInternal>;

        return $r1;
    }

    static long access$1300(com.android.server.blob.BlobStoreManagerService, android.app.blob.BlobHandle, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.app.blob.BlobHandle r1;
        int i0;
        java.lang.String r2;
        long $l1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter1: android.app.blob.BlobHandle;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $l1 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: long createSessionInternal(android.app.blob.BlobHandle,int,java.lang.String)>(r1, i0, r2);

        return $l1;
    }

    static com.android.server.blob.BlobStoreSession access$1400(com.android.server.blob.BlobStoreManagerService, long, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        long l0;
        int i1;
        java.lang.String r1;
        com.android.server.blob.BlobStoreSession $r2;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        $r2 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: com.android.server.blob.BlobStoreSession openSessionInternal(long,int,java.lang.String)>(l0, i1, r1);

        return $r2;
    }

    static void access$1500(com.android.server.blob.BlobStoreManagerService, long, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        long l0;
        int i1;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void abandonSessionInternal(long,int,java.lang.String)>(l0, i1, r1);

        return;
    }

    static android.os.ParcelFileDescriptor access$1600(com.android.server.blob.BlobStoreManagerService, android.app.blob.BlobHandle, int, java.lang.String) throws java.io.IOException
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.app.blob.BlobHandle r1;
        int i0;
        java.lang.String r2;
        android.os.ParcelFileDescriptor $r3;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter1: android.app.blob.BlobHandle;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $r3 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.os.ParcelFileDescriptor openBlobInternal(android.app.blob.BlobHandle,int,java.lang.String)>(r1, i0, r2);

        return $r3;
    }

    static void access$1700(com.android.server.blob.BlobStoreManagerService, android.app.blob.BlobHandle, int, java.lang.CharSequence, long, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.app.blob.BlobHandle r1;
        int i0, i2;
        java.lang.CharSequence r2;
        long l1;
        java.lang.String r3;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter1: android.app.blob.BlobHandle;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.CharSequence;

        l1 := @parameter4: long;

        i2 := @parameter5: int;

        r3 := @parameter6: java.lang.String;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void acquireLeaseInternal(android.app.blob.BlobHandle,int,java.lang.CharSequence,long,int,java.lang.String)>(r1, i0, r2, l1, i2, r3);

        return;
    }

    static void access$1800(com.android.server.blob.BlobStoreManagerService, android.app.blob.BlobHandle, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.app.blob.BlobHandle r1;
        int i0;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter1: android.app.blob.BlobHandle;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void releaseLeaseInternal(android.app.blob.BlobHandle,int,java.lang.String)>(r1, i0, r2);

        return;
    }

    static long access$1900(com.android.server.blob.BlobStoreManagerService, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0;
        java.lang.String r1;
        long $l1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $l1 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: long getRemainingLeaseQuotaBytesInternal(int,java.lang.String)>(i0, r1);

        return $l1;
    }

    static android.content.Context access$2000(com.android.server.blob.BlobStoreManagerService)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        $r1 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.Context mContext>;

        return $r1;
    }

    static java.util.List access$2100(com.android.server.blob.BlobStoreManagerService, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: java.util.List queryBlobsForUserInternal(int)>(i0);

        return $r1;
    }

    static void access$2200(com.android.server.blob.BlobStoreManagerService, long, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        long l0;
        int i1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteBlobInternal(long,int)>(l0, i1);

        return;
    }

    static java.util.List access$2300(com.android.server.blob.BlobStoreManagerService, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0;
        java.lang.String r1;
        java.util.List $r2;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: java.util.List getLeasedBlobsInternal(int,java.lang.String)>(i0, r1);

        return $r2;
    }

    static android.app.blob.LeaseInfo access$2400(com.android.server.blob.BlobStoreManagerService, android.app.blob.BlobHandle, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.app.blob.BlobHandle r1;
        int i0;
        java.lang.String r2;
        android.app.blob.LeaseInfo $r3;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter1: android.app.blob.BlobHandle;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $r3 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.app.blob.LeaseInfo getLeaseInfoInternal(android.app.blob.BlobHandle,int,java.lang.String)>(r1, i0, r2);

        return $r3;
    }

    static java.lang.Object access$2600(com.android.server.blob.BlobStoreManagerService)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        $r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        return $r1;
    }

    static long access$2700(com.android.server.blob.BlobStoreManagerService)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        long $l0;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        $l0 = r0.<com.android.server.blob.BlobStoreManagerService: long mCurrentMaxSessionId>;

        return $l0;
    }

    static void access$2800(com.android.server.blob.BlobStoreManagerService, com.android.internal.util.IndentingPrintWriter, com.android.server.blob.BlobStoreManagerService$DumpArgs)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        com.android.internal.util.IndentingPrintWriter r1;
        com.android.server.blob.BlobStoreManagerService$DumpArgs r2;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        r2 := @parameter2: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void dumpSessionsLocked(com.android.internal.util.IndentingPrintWriter,com.android.server.blob.BlobStoreManagerService$DumpArgs)>(r1, r2);

        return;
    }

    static void access$2900(com.android.server.blob.BlobStoreManagerService, com.android.internal.util.IndentingPrintWriter, com.android.server.blob.BlobStoreManagerService$DumpArgs)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        com.android.internal.util.IndentingPrintWriter r1;
        com.android.server.blob.BlobStoreManagerService$DumpArgs r2;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        r2 := @parameter2: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void dumpBlobsLocked(com.android.internal.util.IndentingPrintWriter,com.android.server.blob.BlobStoreManagerService$DumpArgs)>(r1, r2);

        return;
    }

    static android.os.Handler access$3000(com.android.server.blob.BlobStoreManagerService)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        $r1 = r0.<com.android.server.blob.BlobStoreManagerService: android.os.Handler mBackgroundHandler>;

        return $r1;
    }

    static int access$3100(com.android.server.blob.BlobStoreManagerService, int, java.util.List)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, $i1;
        java.util.List r1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        $i1 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: int pullBlobData(int,java.util.List)>(i0, r1);

        return $i1;
    }

    static android.os.Handler access$3200()
    {
        android.os.Handler $r0;

        $r0 = staticinvoke <com.android.server.blob.BlobStoreManagerService: android.os.Handler initializeMessageHandler()>();

        return $r0;
    }

    static android.os.Handler access$600(com.android.server.blob.BlobStoreManagerService)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        $r1 = r0.<com.android.server.blob.BlobStoreManagerService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$700(com.android.server.blob.BlobStoreManagerService, com.android.server.blob.BlobStoreSession)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        com.android.server.blob.BlobStoreSession r1;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter1: com.android.server.blob.BlobStoreSession;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void onStateChangedInternal(com.android.server.blob.BlobStoreSession)>(r1);

        return;
    }

    static void access$800(com.android.server.blob.BlobStoreManagerService, java.util.function.Consumer, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.util.function.Consumer r1;
        int i0;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter1: java.util.function.Consumer;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void forEachSessionInUser(java.util.function.Consumer,int)>(r1, i0);

        return;
    }

    static void access$900(com.android.server.blob.BlobStoreManagerService, java.util.function.Consumer, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.util.function.Consumer r1;
        int i0;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter1: java.util.function.Consumer;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void forEachBlobInUser(java.util.function.Consumer,int)>(r1, i0);

        return;
    }

    private void acquireLeaseInternal(android.app.blob.BlobHandle, int, java.lang.CharSequence, long, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, i2, i3, $i4, $i5;
        long l1, $l6, $l7, $l9, $l10, $l11, $l12, $l14, $l16, $l18, $l19, $l20, $l21;
        java.lang.String r1, $r5, $r14, $r21;
        java.lang.Object r2, $r7;
        android.util.ArrayMap $r6;
        boolean $z0, $z1;
        byte $b8, $b15, $b17, $b22;
        java.lang.Throwable $r22;
        android.app.blob.BlobHandle r23;
        java.lang.CharSequence r24;
        com.android.server.blob.BlobMetadata r25;
        java.lang.IllegalArgumentException r26;
        java.lang.StringBuilder r27, r30, r32;
        android.os.LimitExceededException r28, r31;
        java.lang.SecurityException r29;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r23 := @parameter0: android.app.blob.BlobHandle;

        i0 := @parameter1: int;

        r24 := @parameter2: java.lang.CharSequence;

        l1 := @parameter3: long;

        i2 := @parameter4: int;

        r1 := @parameter5: java.lang.String;

        r2 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r2;

     label01:
        i3 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: int getLeasedBlobsCountLocked(int,java.lang.String)>(i2, r1);

        $i4 = staticinvoke <com.android.server.blob.BlobStoreConfig: int getMaxLeasedBlobs()>();

        if i3 >= $i4 goto label18;

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i2);

        $r6 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArrayMap getUserBlobsLocked(int)>($i5);

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r23);

        r25 = (com.android.server.blob.BlobMetadata) $r7;

     label02:
        if r25 == null goto label13;

     label03:
        $z0 = virtualinvoke r25.<com.android.server.blob.BlobMetadata: boolean isAccessAllowedForCaller(java.lang.String,int)>(r1, i2);

        if $z0 != 0 goto label05;

     label04:
        goto label13;

     label05:
        $b8 = l1 cmp 0L;

        if $b8 == 0 goto label09;

     label06:
        $l14 = r23.<android.app.blob.BlobHandle: long expiryTimeMillis>;

        $b15 = $l14 cmp 0L;

        if $b15 == 0 goto label09;

        $l16 = r23.<android.app.blob.BlobHandle: long expiryTimeMillis>;

        $b17 = l1 cmp $l16;

        if $b17 > 0 goto label08;

     label07:
        goto label09;

     label08:
        $l18 = virtualinvoke r25.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $l19 = virtualinvoke r25.<com.android.server.blob.BlobMetadata: long getSize()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long,long,int)>(299, i2, $l18, $l19, 4);

        r26 = new java.lang.IllegalArgumentException;

        specialinvoke r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Lease expiry cannot be later than blobs expiry time");

        throw r26;

     label09:
        $l20 = virtualinvoke r25.<com.android.server.blob.BlobMetadata: long getSize()>();

        $l21 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: long getRemainingLeaseQuotaBytesInternal(int,java.lang.String)>(i2, r1);

        $b22 = $l20 cmp $l21;

        if $b22 > 0 goto label12;

        $l11 = virtualinvoke r25.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $l12 = virtualinvoke r25.<com.android.server.blob.BlobMetadata: long getSize()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long,long,int)>(299, i2, $l11, $l12, 1);

        virtualinvoke r25.<com.android.server.blob.BlobMetadata: void addOrReplaceLeasee(java.lang.String,int,int,java.lang.CharSequence,long)>(r1, i2, i0, r24, l1);

        $z1 = <com.android.server.blob.BlobStoreConfig: boolean LOGV>;

        if $z1 == 0 goto label10;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Acquired lease on ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; callingUid=");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callingPackage=");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BlobStore", $r21);

     label10:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobsInfoAsync()>();

        exitmonitor r2;

     label11:
        return;

     label12:
        $l9 = virtualinvoke r25.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $l10 = virtualinvoke r25.<com.android.server.blob.BlobMetadata: long getSize()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long,long,int)>(299, i2, $l9, $l10, 5);

        r28 = new android.os.LimitExceededException;

        specialinvoke r28.<android.os.LimitExceededException: void <init>(java.lang.String)>("Total amount of data with an active lease is exceeding the max limit");

        throw r28;

     label13:
        if r25 != null goto label16;

     label14:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long,long,int)>(299, i2, 0L, 0L, 2);

     label15:
        goto label17;

     label16:
        $l6 = virtualinvoke r25.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $l7 = virtualinvoke r25.<com.android.server.blob.BlobMetadata: long getSize()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long,long,int)>(299, i2, $l6, $l7, 3);

     label17:
        r29 = new java.lang.SecurityException;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller not allowed to access ");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; callingUid=");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callingPackage=");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r29.<java.lang.SecurityException: void <init>(java.lang.String)>($r14);

        throw r29;

     label18:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long,long,int)>(299, i2, 0L, 0L, 6);

        r31 = new android.os.LimitExceededException;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many leased blobs for the caller: ");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r5 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r31.<android.os.LimitExceededException: void <init>(java.lang.String)>($r5);

        throw r31;

     label19:
        $r22 := @caughtexception;

     label20:
        exitmonitor r2;

     label21:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label18 to label19 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    private void addActiveBlobIdLocked(long)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        long l0;
        android.util.ArraySet $r1, $r3;
        java.lang.Long $r2, $r4;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArraySet mActiveBlobIds>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r1.<android.util.ArraySet: boolean add(java.lang.Object)>($r2);

        $r3 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArraySet mKnownBlobIds>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r3.<android.util.ArraySet: boolean add(java.lang.Object)>($r4);

        return;
    }

    private void addBlobForUserLocked(com.android.server.blob.BlobMetadata, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        com.android.server.blob.BlobMetadata r1;
        int i0;
        android.util.ArrayMap $r2;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: com.android.server.blob.BlobMetadata;

        i0 := @parameter1: int;

        $r2 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArrayMap getUserBlobsLocked(int)>(i0);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void addBlobForUserLocked(com.android.server.blob.BlobMetadata,android.util.ArrayMap)>(r1, $r2);

        return;
    }

    private void addBlobForUserLocked(com.android.server.blob.BlobMetadata, android.util.ArrayMap)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        com.android.server.blob.BlobMetadata r1;
        android.util.ArrayMap r2;
        android.app.blob.BlobHandle $r3;
        long $l0;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: com.android.server.blob.BlobMetadata;

        r2 := @parameter1: android.util.ArrayMap;

        $r3 = virtualinvoke r1.<com.android.server.blob.BlobMetadata: android.app.blob.BlobHandle getBlobHandle()>();

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        $l0 = virtualinvoke r1.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void addActiveBlobIdLocked(long)>($l0);

        return;
    }

    private void addSessionForUserLocked(com.android.server.blob.BlobStoreSession, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        com.android.server.blob.BlobStoreSession r1;
        int i0;
        android.util.LongSparseArray $r2;
        long $l1, $l2;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: com.android.server.blob.BlobStoreSession;

        i0 := @parameter1: int;

        $r2 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.LongSparseArray getUserSessionsLocked(int)>(i0);

        $l1 = virtualinvoke r1.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        virtualinvoke $r2.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l1, r1);

        $l2 = virtualinvoke r1.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void addActiveBlobIdLocked(long)>($l2);

        return;
    }

    private long createSessionInternal(android.app.blob.BlobHandle, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, i1, $i3, $i4;
        java.lang.Object r1;
        long l2;
        java.lang.String $r4, $r13, r17;
        com.android.server.blob.BlobStoreManagerService$SessionStateChangeListener $r5;
        android.content.Context $r6;
        boolean $z0;
        java.lang.Throwable $r14, $r15, r22;
        android.app.blob.BlobHandle r16;
        com.android.server.blob.BlobStoreSession r18;
        java.lang.StringBuilder r19, r21;
        android.os.LimitExceededException r20;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r16 := @parameter0: android.app.blob.BlobHandle;

        i0 := @parameter1: int;

        r17 := @parameter2: java.lang.String;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label01:
        i1 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: int getSessionsCountLocked(int,java.lang.String)>(i0, r17);

        $i3 = staticinvoke <com.android.server.blob.BlobStoreConfig: int getMaxActiveSessions()>();

        if i1 >= $i3 goto label06;

        l2 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: long generateNextSessionIdLocked()>();

        r18 = new com.android.server.blob.BlobStoreSession;

        $r6 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.Context mContext>;

        $r5 = r0.<com.android.server.blob.BlobStoreManagerService: com.android.server.blob.BlobStoreManagerService$SessionStateChangeListener mSessionStateChangeListener>;

        specialinvoke r18.<com.android.server.blob.BlobStoreSession: void <init>(android.content.Context,long,android.app.blob.BlobHandle,int,java.lang.String,com.android.server.blob.BlobStoreManagerService$SessionStateChangeListener)>($r6, l2, r16, i0, r17, $r5);

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void addSessionForUserLocked(com.android.server.blob.BlobStoreSession,int)>(r18, $i4);

        $z0 = <com.android.server.blob.BlobStoreConfig: boolean LOGV>;

        if $z0 == 0 goto label04;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created session for ");

     label02:
        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; callingUid=");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callingPackage=");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r13 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BlobStore", $r13);

     label03:
        goto label04;

     label04:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobSessionsAsync()>();

        exitmonitor r1;

     label05:
        return l2;

     label06:
        r20 = new android.os.LimitExceededException;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many active sessions for the caller: ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<android.os.LimitExceededException: void <init>(java.lang.String)>($r4);

        throw r20;

     label07:
        $r14 := @caughtexception;

        r22 = $r14;

     label08:
        exitmonitor r1;

     label09:
        throw r22;

     label10:
        $r15 := @caughtexception;

        r22 = $r15;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    private void deleteBlobInternal(long, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        long l0;
        int i1, $i2;
        java.lang.Object r1;
        java.util.Set r2;
        android.util.ArrayMap $r3;
        java.lang.Throwable $r4;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$Mr19cV2OEeKTtbpkiW3uytTABZY r5;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $r3 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArrayMap getUserBlobsLocked(int)>($i2);

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.util.Set entrySet()>();

        r5 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$Mr19cV2OEeKTtbpkiW3uytTABZY;

        specialinvoke r5.<com.android.server.blob._$$Lambda$BlobStoreManagerService$Mr19cV2OEeKTtbpkiW3uytTABZY: void <init>(com.android.server.blob.BlobStoreManagerService,long)>(r0, l0);

        interfaceinvoke r2.<java.util.Set: boolean removeIf(java.util.function.Predicate)>(r5);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobsInfoAsync()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void deleteBlobLocked(com.android.server.blob.BlobMetadata)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        com.android.server.blob.BlobMetadata r1;
        android.util.ArraySet $r2;
        long $l0;
        java.lang.Long $r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: com.android.server.blob.BlobMetadata;

        virtualinvoke r1.<com.android.server.blob.BlobMetadata: void destroy()>();

        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArraySet mActiveBlobIds>;

        $l0 = virtualinvoke r1.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r2.<android.util.ArraySet: boolean remove(java.lang.Object)>($r3);

        return;
    }

    private void deleteSessionLocked(com.android.server.blob.BlobStoreSession)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        com.android.server.blob.BlobStoreSession r1;
        android.util.ArraySet $r2;
        long $l0;
        java.lang.Long $r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: com.android.server.blob.BlobStoreSession;

        virtualinvoke r1.<com.android.server.blob.BlobStoreSession: void destroy()>();

        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArraySet mActiveBlobIds>;

        $l0 = virtualinvoke r1.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r2.<android.util.ArraySet: boolean remove(java.lang.Object)>($r3);

        return;
    }

    private void dumpBlobsLocked(com.android.internal.util.IndentingPrintWriter, com.android.server.blob.BlobStoreManagerService$DumpArgs)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        com.android.internal.util.IndentingPrintWriter r1;
        com.android.server.blob.BlobStoreManagerService$DumpArgs r2;
        int i0, i1, $i2, i5, i6, i7;
        android.util.ArrayMap r3;
        com.android.server.blob.BlobMetadata r4;
        android.util.SparseArray $r5, $r6, $r7;
        boolean $z0, $z1;
        java.lang.Object $r8, $r18;
        java.lang.StringBuilder $r9, $r19;
        java.lang.String $r15, $r22;
        long $l3, $l4;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r2 := @parameter1: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        i5 = 0;

        $r5 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        i0 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

     label1:
        if i5 >= i0 goto label8;

        $r6 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        i6 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i5);

        $z0 = virtualinvoke r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: boolean shouldDumpUser(int)>(i6);

        if $z0 != 0 goto label2;

        goto label7;

     label2:
        $r7 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r3 = (android.util.ArrayMap) $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("List of blobs in user #");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i2 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r15);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        i7 = 0;

        i1 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

     label3:
        if i7 >= i1 goto label6;

        $r18 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r4 = (com.android.server.blob.BlobMetadata) $r18;

        $l3 = virtualinvoke r4.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $z1 = virtualinvoke r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: boolean shouldDumpBlob(long)>($l3);

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blob #");

        $l4 = virtualinvoke r4.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r22);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke r4.<com.android.server.blob.BlobMetadata: void dump(com.android.internal.util.IndentingPrintWriter,com.android.server.blob.BlobStoreManagerService$DumpArgs)>(r1, r2);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label5:
        i7 = i7 + 1;

        goto label3;

     label6:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label7:
        i5 = i5 + 1;

        goto label1;

     label8:
        return;
    }

    private void dumpSessionsLocked(com.android.internal.util.IndentingPrintWriter, com.android.server.blob.BlobStoreManagerService$DumpArgs)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        com.android.internal.util.IndentingPrintWriter r1;
        com.android.server.blob.BlobStoreManagerService$DumpArgs r2;
        int i0, i1, $i3, $i4, i6, i7, i8;
        android.util.LongSparseArray r3;
        long l2, $l5;
        android.util.SparseArray $r5, $r6, $r7;
        boolean $z0, $z1;
        java.lang.Object $r8, $r18;
        java.lang.StringBuilder $r9, $r20;
        java.lang.String $r15, $r19, $r23;
        com.android.server.blob.BlobStoreSession r27;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r2 := @parameter1: com.android.server.blob.BlobStoreManagerService$DumpArgs;

        i6 = 0;

        $r5 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        i0 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

     label1:
        if i6 >= i0 goto label8;

        $r6 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        i7 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i6);

        $z0 = virtualinvoke r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: boolean shouldDumpUser(int)>(i7);

        if $z0 != 0 goto label2;

        goto label7;

     label2:
        $r7 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r3 = (android.util.LongSparseArray) $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("List of sessions in user #");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i3 = virtualinvoke r3.<android.util.LongSparseArray: int size()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r15);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        i8 = 0;

        i1 = virtualinvoke r3.<android.util.LongSparseArray: int size()>();

     label3:
        if i8 >= i1 goto label6;

        l2 = virtualinvoke r3.<android.util.LongSparseArray: long keyAt(int)>(i8);

        $r18 = virtualinvoke r3.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i8);

        r27 = (com.android.server.blob.BlobStoreSession) $r18;

        $r19 = virtualinvoke r27.<com.android.server.blob.BlobStoreSession: java.lang.String getOwnerPackageName()>();

        $i4 = virtualinvoke r27.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        $l5 = virtualinvoke r27.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        $z1 = virtualinvoke r2.<com.android.server.blob.BlobStoreManagerService$DumpArgs: boolean shouldDumpSession(java.lang.String,int,long)>($r19, $i4, $l5);

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session #");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r23);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke r27.<com.android.server.blob.BlobStoreSession: void dump(com.android.internal.util.IndentingPrintWriter,com.android.server.blob.BlobStoreManagerService$DumpArgs)>(r1, r2);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label5:
        i8 = i8 + 1;

        goto label3;

     label6:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label7:
        i6 = i6 + 1;

        goto label1;

     label8:
        return;
    }

    private void forEachBlobInUser(java.util.function.Consumer, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.lang.Object r1, $r3;
        android.util.ArrayMap r2;
        int i0, i1, i2;
        com.android.server.blob.BlobMetadata $r4;
        java.lang.Throwable $r5;
        java.util.function.Consumer r6;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r6 := @parameter0: java.util.function.Consumer;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label01:
        r2 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArrayMap getUserBlobsLocked(int)>(i1);

     label02:
        i2 = 0;

     label03:
        i0 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

     label04:
        if i2 >= i0 goto label07;

     label05:
        $r3 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r4 = (com.android.server.blob.BlobMetadata) $r3;

        interfaceinvoke r6.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

     label06:
        i2 = i2 + 1;

        goto label04;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void forEachSessionInUser(java.util.function.Consumer, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.lang.Object r1, $r3;
        android.util.LongSparseArray r2;
        int i0, i1, i2;
        com.android.server.blob.BlobStoreSession $r4;
        java.lang.Throwable $r5;
        java.util.function.Consumer r6;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r6 := @parameter0: java.util.function.Consumer;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label01:
        r2 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.LongSparseArray getUserSessionsLocked(int)>(i1);

     label02:
        i2 = 0;

     label03:
        i0 = virtualinvoke r2.<android.util.LongSparseArray: int size()>();

     label04:
        if i2 >= i0 goto label07;

     label05:
        $r3 = virtualinvoke r2.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i2);

        $r4 = (com.android.server.blob.BlobStoreSession) $r3;

        interfaceinvoke r6.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

     label06:
        i2 = i2 + 1;

        goto label04;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private long generateNextSessionIdLocked()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.util.Random $r1;
        byte $b0, $b2;
        android.util.ArraySet $r2;
        java.lang.Long $r3;
        int $i1, i3;
        java.lang.IllegalStateException $r4;
        long l4, l5;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i3 = 0;

     label1:
        $r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.util.Random mRandom>;

        l4 = virtualinvoke $r1.<java.util.Random: long nextLong()>();

        $b0 = l4 cmp -9223372036854775808L;

        if $b0 != 0 goto label2;

        l5 = 0L;

        goto label3;

     label2:
        l5 = staticinvoke <java.lang.Math: long abs(long)>(l4);

     label3:
        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArraySet mKnownBlobIds>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        $i1 = virtualinvoke $r2.<android.util.ArraySet: int indexOf(java.lang.Object)>($r3);

        if $i1 >= 0 goto label4;

        $b2 = l5 cmp 0L;

        if $b2 == 0 goto label4;

        return l5;

     label4:
        if i3 >= 32 goto label5;

        i3 = i3 + 1;

        goto label1;

     label5:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to allocate session ID");

        throw $r4;
    }

    private android.util.SparseArray getAllPackages()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int[] r2;
        int i0, i1, $i2, $i3, i4, i5, i6;
        java.util.List r4;
        android.content.pm.ApplicationInfo r5;
        android.util.SparseArray $r6, $r9;
        java.lang.Object $r7, $r11;
        android.os.UserManagerInternal $r8;
        android.content.pm.PackageManagerInternal $r10;
        java.lang.String $r12;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        $r7 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/UserManagerInternal;");

        $r8 = (android.os.UserManagerInternal) $r7;

        r2 = virtualinvoke $r8.<android.os.UserManagerInternal: int[] getUserIds()>();

        i0 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        i5 = r2[i4];

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>()>();

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i5, $r9);

        $r10 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.pm.PackageManagerInternal mPackageManagerInternal>;

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        r4 = virtualinvoke $r10.<android.content.pm.PackageManagerInternal: java.util.List getInstalledApplications(int,int,int)>(794624, i5, $i2);

        i6 = 0;

        i1 = interfaceinvoke r4.<java.util.List: int size()>();

     label2:
        if i6 >= i1 goto label3;

        $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i6);

        r5 = (android.content.pm.ApplicationInfo) $r11;

        $i3 = r5.<android.content.pm.ApplicationInfo: int uid>;

        $r12 = r5.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, $r12);

        i6 = i6 + 1;

        goto label2;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return $r6;
    }

    private int getCommittedBlobsCountLocked(int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, $i1, $i2;
        java.lang.String r1;
        java.util.concurrent.atomic.AtomicInteger $r3;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$shuup_g9zPirCAR3mwbzlpwbvzg $r4;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        $r4 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$shuup_g9zPirCAR3mwbzlpwbvzg;

        specialinvoke $r4.<com.android.server.blob._$$Lambda$BlobStoreManagerService$shuup_g9zPirCAR3mwbzlpwbvzg: void <init>(java.lang.String,int,java.util.concurrent.atomic.AtomicInteger)>(r1, i0, $r3);

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void forEachBlobInUser(java.util.function.Consumer,int)>($r4, $i1);

        $i2 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i2;
    }

    private android.app.blob.LeaseInfo getLeaseInfoInternal(android.app.blob.BlobHandle, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, $i1;
        java.lang.String r1, $r12;
        java.lang.Object r2, $r5;
        java.lang.StringBuilder r3;
        android.util.ArrayMap $r4;
        boolean $z0;
        java.lang.Throwable $r13;
        android.app.blob.BlobHandle r14;
        com.android.server.blob.BlobMetadata r15;
        android.app.blob.LeaseInfo r16;
        java.lang.SecurityException r17;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r14 := @parameter0: android.app.blob.BlobHandle;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r2;

     label1:
        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r4 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArrayMap getUserBlobsLocked(int)>($i1);

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r14);

        r15 = (com.android.server.blob.BlobMetadata) $r5;

     label2:
        if r15 == null goto label5;

     label3:
        $z0 = virtualinvoke r15.<com.android.server.blob.BlobMetadata: boolean isAccessAllowedForCaller(java.lang.String,int)>(r1, i0);

        if $z0 == 0 goto label5;

        r16 = virtualinvoke r15.<com.android.server.blob.BlobMetadata: android.app.blob.LeaseInfo getLeaseInfo(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label4:
        return r16;

     label5:
        r17 = new java.lang.SecurityException;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller not allowed to access ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; callingUid=");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callingPackage=");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<java.lang.SecurityException: void <init>(java.lang.String)>($r12);

        throw r17;

     label6:
        $r13 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private int getLeasedBlobsCountLocked(int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, $i1, $i2;
        java.lang.String r1;
        java.util.concurrent.atomic.AtomicInteger $r3;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$ueUCJvv_tifFj4N2TVHvG9LPJDc $r4;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        $r4 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$ueUCJvv_tifFj4N2TVHvG9LPJDc;

        specialinvoke $r4.<com.android.server.blob._$$Lambda$BlobStoreManagerService$ueUCJvv_tifFj4N2TVHvG9LPJDc: void <init>(java.lang.String,int,java.util.concurrent.atomic.AtomicInteger)>(r1, i0, $r3);

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void forEachBlobInUser(java.util.function.Consumer,int)>($r4, $i1);

        $i2 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i2;
    }

    private java.util.List getLeasedBlobsInternal(int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, $i1;
        java.lang.String r1;
        java.util.ArrayList $r3;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$b9RctA3_v_s_QYN6fm28pdpoNOw $r4;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$b9RctA3_v_s_QYN6fm28pdpoNOw;

        specialinvoke $r4.<com.android.server.blob._$$Lambda$BlobStoreManagerService$b9RctA3_v_s_QYN6fm28pdpoNOw: void <init>(java.lang.String,int,java.util.ArrayList)>(r1, i0, $r3);

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void forEachBlobInUser(java.util.function.Consumer,int)>($r4, $i1);

        return $r3;
    }

    private int getPackageUid(java.lang.String, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.lang.String r1;
        int i0, $i1;
        android.content.pm.PackageManagerInternal $r2;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.pm.PackageManagerInternal mPackageManagerInternal>;

        $i1 = virtualinvoke $r2.<android.content.pm.PackageManagerInternal: int getPackageUid(java.lang.String,int,int)>(r1, 794624, i0);

        return $i1;
    }

    private long getRemainingLeaseQuotaBytesInternal(int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0;
        java.lang.Object r1;
        long l1, $l2, $l3, l5;
        byte $b4;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        $l2 = staticinvoke <com.android.server.blob.BlobStoreConfig: long getAppDataBytesLimit()>();

        $l3 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerService: long getTotalUsageBytesLocked(int,java.lang.String)>(i0, r3);

        l1 = $l2 - $l3;

     label2:
        l5 = 0L;

        $b4 = l1 cmp 0L;

        if $b4 <= 0 goto label3;

        l5 = l1;

     label3:
        exitmonitor r1;

     label4:
        return l5;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private int getSessionsCountLocked(int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, $i1, $i2;
        java.lang.String r1;
        java.util.concurrent.atomic.AtomicInteger $r3;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$iguqWcdQtO7XSEFCDVTzkcChqjE $r4;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        $r4 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$iguqWcdQtO7XSEFCDVTzkcChqjE;

        specialinvoke $r4.<com.android.server.blob._$$Lambda$BlobStoreManagerService$iguqWcdQtO7XSEFCDVTzkcChqjE: void <init>(int,java.lang.String,java.util.concurrent.atomic.AtomicInteger)>(i0, r1, $r3);

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void forEachSessionInUser(java.util.function.Consumer,int)>($r4, $i1);

        $i2 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i2;
    }

    private android.util.ArrayMap getUserBlobsLocked(int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0;
        android.util.ArrayMap r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.ArrayMap) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r6 = $r4;

        $r5 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    private android.util.LongSparseArray getUserSessionsLocked(int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0;
        android.util.LongSparseArray r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.LongSparseArray) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new android.util.LongSparseArray;

        specialinvoke $r4.<android.util.LongSparseArray: void <init>()>();

        r6 = $r4;

        $r5 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    private void handleUserRemoved(int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, i2, i3, i4, i5;
        java.lang.Object r1, $r3, $r5, $r9, $r11;
        android.util.SparseArray $r2, $r4;
        boolean $z0;
        java.lang.String $r8;
        com.android.server.blob.BlobMetadata $r10;
        com.android.server.blob.BlobStoreSession $r12;
        java.lang.Throwable $r13;
        android.util.LongSparseArray r14;
        android.util.ArrayMap r15;
        java.lang.StringBuilder r16;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object removeReturnOld(int)>(i0);

        r14 = (android.util.LongSparseArray) $r3;

     label02:
        if r14 == null goto label07;

        i2 = 0;

     label03:
        i3 = virtualinvoke r14.<android.util.LongSparseArray: int size()>();

     label04:
        if i2 >= i3 goto label07;

     label05:
        $r11 = virtualinvoke r14.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i2);

        $r12 = (com.android.server.blob.BlobStoreSession) $r11;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteSessionLocked(com.android.server.blob.BlobStoreSession)>($r12);

     label06:
        i2 = i2 + 1;

        goto label04;

     label07:
        $r4 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object removeReturnOld(int)>(i0);

        r15 = (android.util.ArrayMap) $r5;

     label08:
        if r15 == null goto label13;

        i4 = 0;

     label09:
        i5 = virtualinvoke r15.<android.util.ArrayMap: int size()>();

     label10:
        if i4 >= i5 goto label13;

     label11:
        $r9 = virtualinvoke r15.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        $r10 = (com.android.server.blob.BlobMetadata) $r9;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteBlobLocked(com.android.server.blob.BlobMetadata)>($r10);

     label12:
        i4 = i4 + 1;

        goto label10;

     label13:
        $z0 = <com.android.server.blob.BlobStoreConfig: boolean LOGV>;

        if $z0 == 0 goto label14;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed blobs data in user ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BlobStore", $r8);

     label14:
        exitmonitor r1;

     label15:
        return;

     label16:
        $r13 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    private static android.os.Handler initializeMessageHandler()
    {
        com.android.server.ServiceThread $r0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        com.android.server.Watchdog $r3;

        $r0 = new com.android.server.ServiceThread;

        specialinvoke $r0.<com.android.server.ServiceThread: void <init>(java.lang.String,int,boolean)>("BlobStore", 0, 1);

        virtualinvoke $r0.<android.os.HandlerThread: void start()>();

        $r1 = new android.os.Handler;

        $r2 = virtualinvoke $r0.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        $r3 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r3.<com.android.server.Watchdog: void addThread(android.os.Handler)>($r1);

        return $r1;
    }

    public static void lambda$0WauOYQXWD9rogYgvnCLUb176wA(com.android.server.blob.BlobStoreManagerService)
    {
        com.android.server.blob.BlobStoreManagerService r0;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobsInfo()>();

        return;
    }

    public static void lambda$TQmyogoz-iYWcrNcnMqwFDg6S5A(com.android.server.blob.BlobStoreManagerService)
    {
        com.android.server.blob.BlobStoreManagerService r0;

        r0 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobSessions()>();

        return;
    }

    static void lambda$getCommittedBlobsCountLocked$1(java.lang.String, int, java.util.concurrent.atomic.AtomicInteger, com.android.server.blob.BlobMetadata)
    {
        java.lang.String r0;
        int i0;
        java.util.concurrent.atomic.AtomicInteger r1;
        com.android.server.blob.BlobMetadata r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.concurrent.atomic.AtomicInteger;

        r2 := @parameter3: com.android.server.blob.BlobMetadata;

        $z0 = virtualinvoke r2.<com.android.server.blob.BlobMetadata: boolean isACommitter(java.lang.String,int)>(r0, i0);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

     label1:
        return;
    }

    static void lambda$getLeasedBlobsCountLocked$2(java.lang.String, int, java.util.concurrent.atomic.AtomicInteger, com.android.server.blob.BlobMetadata)
    {
        java.lang.String r0;
        int i0;
        java.util.concurrent.atomic.AtomicInteger r1;
        com.android.server.blob.BlobMetadata r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.concurrent.atomic.AtomicInteger;

        r2 := @parameter3: com.android.server.blob.BlobMetadata;

        $z0 = virtualinvoke r2.<com.android.server.blob.BlobMetadata: boolean isALeasee(java.lang.String,int)>(r0, i0);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

     label1:
        return;
    }

    static void lambda$getLeasedBlobsInternal$9(java.lang.String, int, java.util.ArrayList, com.android.server.blob.BlobMetadata)
    {
        java.lang.String r0;
        int i0;
        java.util.ArrayList r1;
        com.android.server.blob.BlobMetadata r2;
        boolean $z0;
        android.app.blob.BlobHandle $r3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.ArrayList;

        r2 := @parameter3: com.android.server.blob.BlobMetadata;

        $z0 = virtualinvoke r2.<com.android.server.blob.BlobMetadata: boolean isALeasee(java.lang.String,int)>(r0, i0);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r2.<com.android.server.blob.BlobMetadata: android.app.blob.BlobHandle getBlobHandle()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label1:
        return;
    }

    static void lambda$getSessionsCountLocked$0(int, java.lang.String, java.util.concurrent.atomic.AtomicInteger, com.android.server.blob.BlobStoreSession)
    {
        int i0, $i1;
        java.lang.String r0, $r3;
        java.util.concurrent.atomic.AtomicInteger r1;
        com.android.server.blob.BlobStoreSession r2;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.util.concurrent.atomic.AtomicInteger;

        r2 := @parameter3: com.android.server.blob.BlobStoreSession;

        $i1 = virtualinvoke r2.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        if $i1 != i0 goto label1;

        $r3 = virtualinvoke r2.<com.android.server.blob.BlobStoreSession: java.lang.String getOwnerPackageName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

     label1:
        return;
    }

    static void lambda$getTotalUsageBytesLocked$3(java.lang.String, int, java.util.concurrent.atomic.AtomicLong, com.android.server.blob.BlobMetadata)
    {
        java.lang.String r0;
        int i0;
        java.util.concurrent.atomic.AtomicLong r1;
        com.android.server.blob.BlobMetadata r2;
        boolean $z0;
        long $l1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.concurrent.atomic.AtomicLong;

        r2 := @parameter3: com.android.server.blob.BlobMetadata;

        $z0 = virtualinvoke r2.<com.android.server.blob.BlobMetadata: boolean isALeasee(java.lang.String,int)>(r0, i0);

        if $z0 == 0 goto label1;

        $l1 = virtualinvoke r2.<com.android.server.blob.BlobMetadata: long getSize()>();

        virtualinvoke r1.<java.util.concurrent.atomic.AtomicLong: long getAndAdd(long)>($l1);

     label1:
        return;
    }

    static void lambda$queryBlobsForUserInternal$6(java.util.function.Function, android.app.blob.BlobHandle, java.util.ArrayList, com.android.server.blob.BlobMetadata$Leasee)
    {
        java.util.function.Function r0;
        android.app.blob.BlobHandle r1;
        java.util.ArrayList r2;
        com.android.server.blob.BlobMetadata$Leasee r3;
        boolean $z0;
        java.lang.String $r4, $r5, $r7, $r8, $r12;
        java.lang.Object $r6;
        android.content.res.Resources $r9;
        long $l0, l3;
        byte $b1;
        android.app.blob.LeaseInfo $r10;
        java.lang.CharSequence $r11;
        int i2;

        r0 := @parameter0: java.util.function.Function;

        r1 := @parameter1: android.app.blob.BlobHandle;

        r2 := @parameter2: java.util.ArrayList;

        r3 := @parameter3: com.android.server.blob.BlobMetadata$Leasee;

        $z0 = virtualinvoke r3.<com.android.server.blob.BlobMetadata$Leasee: boolean isStillValid()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r3.<com.android.server.blob.BlobMetadata$Leasee: java.lang.String descriptionResEntryName>;

        if $r4 != null goto label2;

        i2 = 0;

        goto label3;

     label2:
        $r5 = r3.<com.android.server.blob.BlobMetadata$Leasee: java.lang.String packageName>;

        $r6 = interfaceinvoke r0.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r5);

        $r9 = (android.content.res.Resources) $r6;

        $r8 = r3.<com.android.server.blob.BlobMetadata$Leasee: java.lang.String descriptionResEntryName>;

        $r7 = r3.<com.android.server.blob.BlobMetadata$Leasee: java.lang.String packageName>;

        i2 = staticinvoke <com.android.server.blob.BlobStoreUtils: int getDescriptionResourceId(android.content.res.Resources,java.lang.String,java.lang.String)>($r9, $r8, $r7);

     label3:
        $l0 = r3.<com.android.server.blob.BlobMetadata$Leasee: long expiryTimeMillis>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label4;

        l3 = virtualinvoke r1.<android.app.blob.BlobHandle: long getExpiryTimeMillis()>();

        goto label5;

     label4:
        l3 = r3.<com.android.server.blob.BlobMetadata$Leasee: long expiryTimeMillis>;

     label5:
        $r10 = new android.app.blob.LeaseInfo;

        $r12 = r3.<com.android.server.blob.BlobMetadata$Leasee: java.lang.String packageName>;

        $r11 = r3.<com.android.server.blob.BlobMetadata$Leasee: java.lang.CharSequence description>;

        specialinvoke $r10.<android.app.blob.LeaseInfo: void <init>(java.lang.String,long,int,java.lang.CharSequence)>($r12, l3, i2, $r11);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        return;
    }

    static void lambda$queryBlobsForUserInternal$7(java.util.function.Function, java.util.ArrayList, android.app.blob.BlobHandle, com.android.server.blob.BlobMetadata)
    {
        java.util.function.Function r0;
        java.util.ArrayList r1, $r5;
        android.app.blob.BlobHandle r2;
        com.android.server.blob.BlobMetadata r3;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$BUTOhgP9JLOMPxsEmHKh1cRuMiU $r6;
        android.app.blob.BlobInfo $r7;
        long $l0, $l1, $l2;
        java.lang.CharSequence $r8;

        r0 := @parameter0: java.util.function.Function;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: android.app.blob.BlobHandle;

        r3 := @parameter3: com.android.server.blob.BlobMetadata;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$BUTOhgP9JLOMPxsEmHKh1cRuMiU;

        specialinvoke $r6.<com.android.server.blob._$$Lambda$BlobStoreManagerService$BUTOhgP9JLOMPxsEmHKh1cRuMiU: void <init>(java.util.function.Function,android.app.blob.BlobHandle,java.util.ArrayList)>(r0, r2, $r5);

        virtualinvoke r3.<com.android.server.blob.BlobMetadata: void forEachLeasee(java.util.function.Consumer)>($r6);

        $r7 = new android.app.blob.BlobInfo;

        $l0 = virtualinvoke r3.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $l1 = virtualinvoke r2.<android.app.blob.BlobHandle: long getExpiryTimeMillis()>();

        $r8 = virtualinvoke r2.<android.app.blob.BlobHandle: java.lang.CharSequence getLabel()>();

        $l2 = virtualinvoke r3.<com.android.server.blob.BlobMetadata: long getSize()>();

        specialinvoke $r7.<android.app.blob.BlobInfo: void <init>(long,long,java.lang.CharSequence,long,java.util.List)>($l0, $l1, $r8, $l2, $r5);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        return;
    }

    private void onStateChangedInternal(com.android.server.blob.BlobStoreSession)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.util.ArrayMap r1;
        com.android.server.blob.BlobMetadata$Committer r2, r48;
        int $i0, $i1, $i4, $i5, $i6, $i7, $i8, $i11, $i14, $i15, $i20, $i21, $i23, $i26, $i29, i35, i36, i37;
        android.util.LongSparseArray $r4, $r16, $r27;
        long $l2, $l9, $l10, $l12, $l13, $l16, $l18, $l22, $l24, $l25, $l30, $l31, $l32, $l33, l38, $l39, $l40;
        boolean $z0, $z2;
        java.lang.String $r7, $r10, $r13, $r14, $r19, $r26, $r30, $r32, $r36;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$Fcg_31mLLd_1djDPJSdIyLHQXJY $r8;
        android.os.Handler $r9;
        android.app.blob.BlobHandle $r11, $r21, $r37;
        java.lang.Object $r12, r45, r52, r54;
        com.android.server.blob.BlobAccessMode $r15;
        android.content.Context $r20;
        java.lang.StringBuilder $r28, r46, r49, r50, r53;
        java.lang.Exception $r33, $r40;
        byte $b34, $b41;
        java.lang.Throwable $r39, $r41, $r42;
        com.android.server.blob.BlobStoreSession r43;
        com.android.server.blob.BlobMetadata r47;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r43 := @parameter0: com.android.server.blob.BlobStoreSession;

        i35 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: int getState()>();

        if i35 == 2 goto label27;

        if i35 == 3 goto label26;

        if i35 == 4 goto label01;

        if i35 == 5 goto label27;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid session state: ");

        $i26 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: int getState()>();

        $r30 = staticinvoke <com.android.server.blob.BlobStoreSession: java.lang.String stateToString(int)>($i26);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BlobStore", $r32);

        goto label30;

     label01:
        r45 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r45;

     label02:
        $i4 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        $r10 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: java.lang.String getOwnerPackageName()>();

        i36 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: int getCommittedBlobsCountLocked(int,java.lang.String)>($i4, $r10);

        $i5 = staticinvoke <com.android.server.blob.BlobStoreConfig: int getMaxCommittedBlobs()>();

        if i36 < $i5 goto label04;

        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to commit: too many committed blobs. count: ");

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; blob: ");

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        $r26 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BlobStore", $r26);

        virtualinvoke r43.<com.android.server.blob.BlobStoreSession: void sendCommitCallbackResult(int)>(1);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteSessionLocked(com.android.server.blob.BlobStoreSession)>(r43);

        $i20 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        $i21 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i20);

        $r27 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.LongSparseArray getUserSessionsLocked(int)>($i21);

        $l22 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        virtualinvoke $r27.<android.util.LongSparseArray: void remove(long)>($l22);

        $i23 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        $l24 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        $l25 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: long getSize()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long,long,int)>(298, $i23, $l24, $l25, 4);

        exitmonitor r45;

     label03:
        goto label30;

     label04:
        $i6 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        i37 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i6);

        r1 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArrayMap getUserBlobsLocked(int)>(i37);

        $r11 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: android.app.blob.BlobHandle getBlobHandle()>();

        $r12 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r11);

        r47 = (com.android.server.blob.BlobMetadata) $r12;

     label05:
        if r47 != null goto label08;

     label06:
        r47 = new com.android.server.blob.BlobMetadata;

        $r20 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.Context mContext>;

        $l18 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        $r21 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: android.app.blob.BlobHandle getBlobHandle()>();

        specialinvoke r47.<com.android.server.blob.BlobMetadata: void <init>(android.content.Context,long,android.app.blob.BlobHandle,int)>($r20, $l18, $r21, i37);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void addBlobForUserLocked(com.android.server.blob.BlobMetadata,android.util.ArrayMap)>(r47, r1);

     label07:
        goto label08;

     label08:
        $r13 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: java.lang.String getOwnerPackageName()>();

        $i7 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        r48 = virtualinvoke r47.<com.android.server.blob.BlobMetadata: com.android.server.blob.BlobMetadata$Committer getExistingCommitter(java.lang.String,int)>($r13, $i7);

     label09:
        if r48 != null goto label10;

        l38 = 0L;

        goto label11;

     label10:
        l38 = virtualinvoke r48.<com.android.server.blob.BlobMetadata$Committer: long getCommitTimeMs()>();

     label11:
        r2 = new com.android.server.blob.BlobMetadata$Committer;

        $r14 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: java.lang.String getOwnerPackageName()>();

        $i8 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        $r15 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: com.android.server.blob.BlobAccessMode getBlobAccessMode()>();

        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l10 = staticinvoke <com.android.server.blob.BlobStoreConfig: long getAdjustedCommitTimeMs(long,long)>(l38, $l9);

        specialinvoke r2.<com.android.server.blob.BlobMetadata$Committer: void <init>(java.lang.String,int,com.android.server.blob.BlobAccessMode,long)>($r14, $i8, $r15, $l10);

        virtualinvoke r47.<com.android.server.blob.BlobMetadata: void addOrReplaceCommitter(com.android.server.blob.BlobMetadata$Committer)>(r2);

     label12:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobsInfoLocked()>();

        $i11 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        $l12 = virtualinvoke r47.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $l13 = virtualinvoke r47.<com.android.server.blob.BlobMetadata: long getSize()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long,long,int)>(298, $i11, $l12, $l13, 1);

        virtualinvoke r43.<com.android.server.blob.BlobStoreSession: void sendCommitCallbackResult(int)>(0);

     label13:
        goto label19;

     label14:
        $r33 := @caughtexception;

        if r48 != null goto label17;

     label15:
        virtualinvoke r47.<com.android.server.blob.BlobMetadata: void removeCommitter(com.android.server.blob.BlobMetadata$Committer)>(r2);

     label16:
        goto label18;

     label17:
        virtualinvoke r47.<com.android.server.blob.BlobMetadata: void addOrReplaceCommitter(com.android.server.blob.BlobMetadata$Committer)>(r48);

     label18:
        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error committing the blob: ");

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        $r36 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("BlobStore", $r36, $r33);

        $i29 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        $l30 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        $l31 = virtualinvoke r47.<com.android.server.blob.BlobMetadata: long getSize()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long,long,int)>(298, $i29, $l30, $l31, 2);

        virtualinvoke r43.<com.android.server.blob.BlobStoreSession: void sendCommitCallbackResult(int)>(1);

        $l32 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        $l33 = virtualinvoke r47.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $b34 = $l32 cmp $l33;

        if $b34 != 0 goto label19;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteBlobLocked(com.android.server.blob.BlobMetadata)>(r47);

        $r37 = virtualinvoke r47.<com.android.server.blob.BlobMetadata: android.app.blob.BlobHandle getBlobHandle()>();

        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r37);

     label19:
        $l39 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        $l40 = virtualinvoke r47.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $b41 = $l39 cmp $l40;

        if $b41 == 0 goto label20;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteSessionLocked(com.android.server.blob.BlobStoreSession)>(r43);

     label20:
        $i14 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        $i15 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i14);

        $r16 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.LongSparseArray getUserSessionsLocked(int)>($i15);

        $l16 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        virtualinvoke $r16.<android.util.LongSparseArray: void remove(long)>($l16);

        $z2 = <com.android.server.blob.BlobStoreConfig: boolean LOGV>;

        if $z2 == 0 goto label21;

        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Successfully committed session ");

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        $r19 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BlobStore", $r19);

     label21:
        exitmonitor r45;

     label22:
        goto label30;

     label23:
        $r42 := @caughtexception;

     label24:
        exitmonitor r45;

     label25:
        throw $r42;

     label26:
        $r9 = r0.<com.android.server.blob.BlobStoreManagerService: android.os.Handler mBackgroundHandler>;

        $r8 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$Fcg_31mLLd_1djDPJSdIyLHQXJY;

        specialinvoke $r8.<com.android.server.blob._$$Lambda$BlobStoreManagerService$Fcg_31mLLd_1djDPJSdIyLHQXJY: void <init>(com.android.server.blob.BlobStoreManagerService,com.android.server.blob.BlobStoreSession)>(r0, r43);

        virtualinvoke $r9.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label30;

     label27:
        r52 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r52;

     label28:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteSessionLocked(com.android.server.blob.BlobStoreSession)>(r43);

        $i0 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        $r4 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.LongSparseArray getUserSessionsLocked(int)>($i1);

        $l2 = virtualinvoke r43.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        virtualinvoke $r4.<android.util.LongSparseArray: void remove(long)>($l2);

        $z0 = <com.android.server.blob.BlobStoreConfig: boolean LOGV>;

        if $z0 == 0 goto label29;

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session is invalid; deleted ");

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        $r7 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BlobStore", $r7);

     label29:
        exitmonitor r52;

     label30:
        r54 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r54;

     label31:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobSessionsLocked()>();

     label32:
        goto label35;

     label33:
        $r41 := @caughtexception;

        goto label37;

     label34:
        $r40 := @caughtexception;

     label35:
        exitmonitor r54;

     label36:
        return;

     label37:
        exitmonitor r54;

     label38:
        throw $r41;

     label39:
        $r39 := @caughtexception;

     label40:
        exitmonitor r52;

     label41:
        throw $r39;

        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
        catch java.lang.Throwable from label28 to label29 with label39;
        catch java.lang.Throwable from label29 to label30 with label39;
        catch java.lang.Exception from label31 to label32 with label34;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label35 to label36 with label33;
        catch java.lang.Throwable from label37 to label38 with label33;
        catch java.lang.Throwable from label40 to label41 with label39;
    }

    private android.os.ParcelFileDescriptor openBlobInternal(android.app.blob.BlobHandle, int, java.lang.String) throws java.io.IOException
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, $i1;
        java.lang.String r1, $r12;
        java.lang.Object r2, $r5;
        java.lang.StringBuilder r3;
        android.util.ArrayMap $r4;
        long $l2, $l3, $l4, $l5;
        boolean $z0;
        java.lang.Throwable $r13;
        android.app.blob.BlobHandle r14;
        com.android.server.blob.BlobMetadata r15;
        android.os.ParcelFileDescriptor r16;
        java.lang.SecurityException r17;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r14 := @parameter0: android.app.blob.BlobHandle;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r2;

     label01:
        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r4 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArrayMap getUserBlobsLocked(int)>($i1);

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r14);

        r15 = (com.android.server.blob.BlobMetadata) $r5;

     label02:
        if r15 == null goto label07;

     label03:
        $z0 = virtualinvoke r15.<com.android.server.blob.BlobMetadata: boolean isAccessAllowedForCaller(java.lang.String,int)>(r1, i0);

        if $z0 != 0 goto label05;

     label04:
        goto label07;

     label05:
        $l4 = virtualinvoke r15.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $l5 = virtualinvoke r15.<com.android.server.blob.BlobMetadata: long getSize()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long,long,int)>(300, i0, $l4, $l5, 1);

        r16 = virtualinvoke r15.<com.android.server.blob.BlobMetadata: android.os.ParcelFileDescriptor openForRead(java.lang.String)>(r1);

        exitmonitor r2;

     label06:
        return r16;

     label07:
        if r15 != null goto label10;

     label08:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long,long,int)>(300, i0, 0L, 0L, 2);

     label09:
        goto label11;

     label10:
        $l2 = virtualinvoke r15.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $l3 = virtualinvoke r15.<com.android.server.blob.BlobMetadata: long getSize()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long,long,int)>(300, i0, $l2, $l3, 3);

     label11:
        r17 = new java.lang.SecurityException;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller not allowed to access ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; callingUid=");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callingPackage=");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<java.lang.SecurityException: void <init>(java.lang.String)>($r12);

        throw r17;

     label12:
        $r13 := @caughtexception;

     label13:
        exitmonitor r2;

     label14:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private com.android.server.blob.BlobStoreSession openSessionInternal(long, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        long l0;
        int i1, $i2;
        java.lang.Object r1, $r3;
        android.util.LongSparseArray $r2;
        boolean $z0, $z1;
        java.lang.Throwable $r6;
        java.lang.String r7, $r11;
        com.android.server.blob.BlobStoreSession r8;
        java.lang.SecurityException r9;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $r2 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.LongSparseArray getUserSessionsLocked(int)>($i2);

        $r3 = virtualinvoke $r2.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r8 = (com.android.server.blob.BlobStoreSession) $r3;

     label2:
        if r8 == null goto label5;

     label3:
        $z0 = virtualinvoke r8.<com.android.server.blob.BlobStoreSession: boolean hasAccess(int,java.lang.String)>(i1, r7);

        if $z0 == 0 goto label5;

        $z1 = virtualinvoke r8.<com.android.server.blob.BlobStoreSession: boolean isFinalized()>();

        if $z1 != 0 goto label5;

        exitmonitor r1;

     label4:
        virtualinvoke r8.<com.android.server.blob.BlobStoreSession: void open()>();

        return r8;

     label5:
        r9 = new java.lang.SecurityException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session not found: ");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        throw r9;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private int pullBlobData(int, java.util.List)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, i1, i2, i3, i4;
        java.lang.Object r1, $r5, $r6;
        android.util.ArrayMap r2;
        android.util.SparseArray $r3, $r4;
        com.android.server.blob.BlobMetadata $r7;
        android.util.StatsEvent $r8;
        java.lang.Throwable $r9;
        java.util.List r10;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        r10 := @parameter1: java.util.List;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

        i3 = 0;

     label01:
        $r3 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

     label02:
        if i3 >= i1 goto label10;

     label03:
        $r4 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r2 = (android.util.ArrayMap) $r5;

     label04:
        i4 = 0;

     label05:
        i2 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

     label06:
        if i4 >= i2 goto label09;

     label07:
        $r6 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        $r7 = (com.android.server.blob.BlobMetadata) $r6;

        $r8 = virtualinvoke $r7.<com.android.server.blob.BlobMetadata: android.util.StatsEvent dumpAsStatsEvent(int)>(i0);

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r8);

     label08:
        i4 = i4 + 1;

        goto label06;

     label09:
        i3 = i3 + 1;

        goto label02;

     label10:
        exitmonitor r1;

     label11:
        return 0;

     label12:
        $r9 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private java.util.List queryBlobsForUserInternal(int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0;
        java.lang.Object r2;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$vLEQSKdoEZ9cTJdF33Gj6FReI8k r3;
        java.util.ArrayList $r4;
        java.lang.Throwable $r5;
        android.util.ArrayMap r6, r8;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$dS4fzn6rXwz2QRynrQJnomB_CcU r7;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r2;

     label1:
        r6 = new android.util.ArrayMap;

        specialinvoke r6.<android.util.ArrayMap: void <init>()>();

        r7 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$dS4fzn6rXwz2QRynrQJnomB_CcU;

        specialinvoke r7.<com.android.server.blob._$$Lambda$BlobStoreManagerService$dS4fzn6rXwz2QRynrQJnomB_CcU: void <init>(com.android.server.blob.BlobStoreManagerService,android.util.ArrayMap,int)>(r0, r6, i0);

        r8 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArrayMap getUserBlobsLocked(int)>(i0);

        r3 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$vLEQSKdoEZ9cTJdF33Gj6FReI8k;

        specialinvoke r3.<com.android.server.blob._$$Lambda$BlobStoreManagerService$vLEQSKdoEZ9cTJdF33Gj6FReI8k: void <init>(java.util.function.Function,java.util.ArrayList)>(r7, $r4);

        virtualinvoke r8.<android.util.ArrayMap: void forEach(java.util.function.BiConsumer)>(r3);

        exitmonitor r2;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void readBlobSessionsLocked(android.util.SparseArray)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i10;
        com.android.server.blob.BlobStoreSession r2;
        android.util.SparseArray r3, $r5, r24;
        java.io.File $r4, $r13, $r18;
        boolean $z0, $z1, $z2, $z4, $z5;
        java.nio.charset.Charset $r6;
        java.lang.String $r7, $r8, $r9, $r14, $r20;
        com.android.server.blob.BlobStoreManagerService$SessionStateChangeListener $r10;
        android.content.Context $r11;
        java.lang.Object $r12, $r15;
        java.lang.StringBuilder $r16;
        java.lang.Throwable $r21, $r23;
        java.lang.Exception $r22;
        android.util.AtomicFile r25;
        java.io.FileInputStream r27;
        long $l11, $l12, $l13;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r24 := @parameter0: android.util.SparseArray;

        $r4 = staticinvoke <com.android.server.blob.BlobStoreConfig: java.io.File getBlobStoreRootDir()>();

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r25 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.AtomicFile prepareSessionsIndexFile()>();

        if r25 != null goto label02;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BlobStore", "Error creating sessions index file");

        return;

     label02:
        $z1 = virtualinvoke r25.<android.util.AtomicFile: boolean exists()>();

        if $z1 != 0 goto label03;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sessions index file not available: ");

        $r18 = virtualinvoke r25.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BlobStore", $r20);

        return;

     label03:
        $r5 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        virtualinvoke $r5.<android.util.SparseArray: void clear()>();

     label04:
        r27 = virtualinvoke r25.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label05:
        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r7 = virtualinvoke $r6.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r27, $r7);

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "ss");

        i0 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "v");

     label06:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r1);

        $i10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i10 != 1 goto label11;

     label07:
        $z5 = <com.android.server.blob.BlobStoreConfig: boolean LOGV>;

        if $z5 == 0 goto label08;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BlobStore", "Finished reading sessions data");

     label08:
        if r27 == null goto label10;

     label09:
        virtualinvoke r27.<java.io.FileInputStream: void close()>();

     label10:
        goto label28;

     label11:
        $r8 = "s";

        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label06;

        $r11 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.Context mContext>;

        $r10 = r0.<com.android.server.blob.BlobStoreManagerService: com.android.server.blob.BlobStoreManagerService$SessionStateChangeListener mSessionStateChangeListener>;

        r2 = staticinvoke <com.android.server.blob.BlobStoreSession: com.android.server.blob.BlobStoreSession createFromXml(org.xmlpull.v1.XmlPullParser,int,android.content.Context,com.android.server.blob.BlobStoreManagerService$SessionStateChangeListener)>(r1, i0, $r11, $r10);

     label12:
        if r2 != null goto label13;

        goto label06;

     label13:
        $i1 = virtualinvoke r2.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $r12 = virtualinvoke r24.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        r3 = (android.util.SparseArray) $r12;

     label14:
        if r3 == null goto label18;

     label15:
        $r14 = virtualinvoke r2.<com.android.server.blob.BlobStoreSession: java.lang.String getOwnerPackageName()>();

        $i3 = virtualinvoke r2.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        $r15 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z4 == 0 goto label18;

     label16:
        $i4 = virtualinvoke r2.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void addSessionForUserLocked(com.android.server.blob.BlobStoreSession,int)>(r2, $i5);

     label17:
        goto label19;

     label18:
        $r13 = virtualinvoke r2.<com.android.server.blob.BlobStoreSession: java.io.File getSessionFile()>();

        virtualinvoke $r13.<java.io.File: boolean delete()>();

     label19:
        $l11 = r0.<com.android.server.blob.BlobStoreManagerService: long mCurrentMaxSessionId>;

        $l12 = virtualinvoke r2.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        $l13 = staticinvoke <java.lang.Math: long max(long,long)>($l11, $l12);

        r0.<com.android.server.blob.BlobStoreManagerService: long mCurrentMaxSessionId> = $l13;

     label20:
        goto label06;

     label21:
        $r21 := @caughtexception;

        if r27 == null goto label26;

     label22:
        virtualinvoke r27.<java.io.FileInputStream: void close()>();

     label23:
        goto label26;

     label24:
        $r23 := @caughtexception;

     label25:
        virtualinvoke $r21.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r23);

     label26:
        throw $r21;

     label27:
        $r22 := @caughtexception;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("BlobStore", "Error reading sessions data", $r22);

     label28:
        return;

        catch java.lang.Exception from label04 to label05 with label27;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Exception from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.Exception from label26 to label27 with label27;
    }

    private void readBlobsInfoLocked(android.util.SparseArray)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, $i1, $i2, $i10;
        com.android.server.blob.BlobMetadata r2;
        android.util.SparseArray r3, $r5, r21;
        java.io.File $r4, $r12, $r15;
        boolean $z0, $z1, $z2, $z4;
        java.nio.charset.Charset $r6;
        java.lang.String $r7, $r8, $r9, $r17;
        android.content.Context $r10;
        java.lang.Object $r11;
        long $l3, $l4, $l5;
        java.lang.StringBuilder $r13;
        java.lang.Throwable $r18, $r19;
        java.lang.Exception $r20;
        android.util.AtomicFile r22;
        java.io.FileInputStream r24;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r21 := @parameter0: android.util.SparseArray;

        $r4 = staticinvoke <com.android.server.blob.BlobStoreConfig: java.io.File getBlobStoreRootDir()>();

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r22 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.AtomicFile prepareBlobsIndexFile()>();

        if r22 != null goto label02;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BlobStore", "Error creating blobs index file");

        return;

     label02:
        $z1 = virtualinvoke r22.<android.util.AtomicFile: boolean exists()>();

        if $z1 != 0 goto label03;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blobs index file not available: ");

        $r15 = virtualinvoke r22.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BlobStore", $r17);

        return;

     label03:
        $r5 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        virtualinvoke $r5.<android.util.SparseArray: void clear()>();

     label04:
        r24 = virtualinvoke r22.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label05:
        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r7 = virtualinvoke $r6.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r24, $r7);

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "bs");

        i0 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "v");

     label06:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r1);

        $i10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i10 != 1 goto label11;

     label07:
        $z4 = <com.android.server.blob.BlobStoreConfig: boolean LOGV>;

        if $z4 == 0 goto label08;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BlobStore", "Finished reading blobs data");

     label08:
        if r24 == null goto label10;

     label09:
        virtualinvoke r24.<java.io.FileInputStream: void close()>();

     label10:
        goto label26;

     label11:
        $r8 = "b";

        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label06;

        $r10 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.Context mContext>;

        r2 = staticinvoke <com.android.server.blob.BlobMetadata: com.android.server.blob.BlobMetadata createFromXml(org.xmlpull.v1.XmlPullParser,int,android.content.Context)>(r1, i0, $r10);

     label12:
        $i1 = virtualinvoke r2.<com.android.server.blob.BlobMetadata: int getUserId()>();

        $r11 = virtualinvoke r21.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r3 = (android.util.SparseArray) $r11;

     label13:
        if r3 != null goto label16;

     label14:
        $r12 = virtualinvoke r2.<com.android.server.blob.BlobMetadata: java.io.File getBlobFile()>();

        virtualinvoke $r12.<java.io.File: boolean delete()>();

     label15:
        goto label17;

     label16:
        $i2 = virtualinvoke r2.<com.android.server.blob.BlobMetadata: int getUserId()>();

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void addBlobForUserLocked(com.android.server.blob.BlobMetadata,int)>(r2, $i2);

        virtualinvoke r2.<com.android.server.blob.BlobMetadata: void removeCommittersFromUnknownPkgs(android.util.SparseArray)>(r3);

        virtualinvoke r2.<com.android.server.blob.BlobMetadata: void removeLeaseesFromUnknownPkgs(android.util.SparseArray)>(r3);

     label17:
        $l3 = r0.<com.android.server.blob.BlobStoreManagerService: long mCurrentMaxSessionId>;

        $l4 = virtualinvoke r2.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $l5 = staticinvoke <java.lang.Math: long max(long,long)>($l3, $l4);

        r0.<com.android.server.blob.BlobStoreManagerService: long mCurrentMaxSessionId> = $l5;

     label18:
        goto label06;

     label19:
        $r19 := @caughtexception;

        if r24 == null goto label24;

     label20:
        virtualinvoke r24.<java.io.FileInputStream: void close()>();

     label21:
        goto label24;

     label22:
        $r18 := @caughtexception;

     label23:
        virtualinvoke $r19.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r18);

     label24:
        throw $r19;

     label25:
        $r20 := @caughtexception;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("BlobStore", "Error reading blobs data", $r20);

     label26:
        return;

        catch java.lang.Exception from label04 to label05 with label25;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Exception from label09 to label10 with label25;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Exception from label23 to label24 with label25;
        catch java.lang.Exception from label24 to label25 with label25;
    }

    private void registerBlobStorePuller()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.app.StatsManager $r1;
        java.util.concurrent.Executor $r2;
        com.android.server.blob.BlobStoreManagerService$StatsPullAtomCallbackImpl $r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        $r1 = r0.<com.android.server.blob.BlobStoreManagerService: android.app.StatsManager mStatsManager>;

        $r2 = staticinvoke <com.android.internal.os.BackgroundThread: java.util.concurrent.Executor getExecutor()>();

        $r3 = r0.<com.android.server.blob.BlobStoreManagerService: com.android.server.blob.BlobStoreManagerService$StatsPullAtomCallbackImpl mStatsCallbackImpl>;

        virtualinvoke $r1.<android.app.StatsManager: void setPullAtomCallback(int,android.app.StatsManager$PullAtomMetadata,java.util.concurrent.Executor,android.app.StatsManager$StatsPullAtomCallback)>(10081, null, $r2, $r3);

        return;
    }

    private void registerReceivers()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.content.IntentFilter $r1, $r7;
        com.android.server.blob.BlobStoreManagerService$PackageChangedReceiver $r2;
        android.content.Context $r3, $r9;
        android.os.Handler $r4, $r10;
        android.os.UserHandle $r5, $r11;
        com.android.server.blob.BlobStoreManagerService$UserActionReceiver $r8;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        $r1 = new android.content.IntentFilter;

        specialinvoke $r1.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_FULLY_REMOVED");

        virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_DATA_CLEARED");

        virtualinvoke $r1.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r3 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.Context mContext>;

        $r2 = new com.android.server.blob.BlobStoreManagerService$PackageChangedReceiver;

        specialinvoke $r2.<com.android.server.blob.BlobStoreManagerService$PackageChangedReceiver: void <init>(com.android.server.blob.BlobStoreManagerService,com.android.server.blob.BlobStoreManagerService$1)>(r0, null);

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r4 = r0.<com.android.server.blob.BlobStoreManagerService: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r2, $r5, $r1, null, $r4);

        $r7 = new android.content.IntentFilter;

        specialinvoke $r7.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r7.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_REMOVED");

        $r9 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.Context mContext>;

        $r8 = new com.android.server.blob.BlobStoreManagerService$UserActionReceiver;

        specialinvoke $r8.<com.android.server.blob.BlobStoreManagerService$UserActionReceiver: void <init>(com.android.server.blob.BlobStoreManagerService,com.android.server.blob.BlobStoreManagerService$1)>(r0, null);

        $r11 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r10 = r0.<com.android.server.blob.BlobStoreManagerService: android.os.Handler mHandler>;

        virtualinvoke $r9.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r8, $r11, $r7, null, $r10);

        return;
    }

    private void releaseLeaseInternal(android.app.blob.BlobHandle, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, $i1;
        java.lang.Object r1, $r2;
        java.lang.String $r9, $r16, r19;
        boolean $z0, $z1, $z2;
        long $l2;
        java.lang.Throwable $r17;
        android.app.blob.BlobHandle r18;
        android.util.ArrayMap r20;
        com.android.server.blob.BlobMetadata r21;
        java.lang.StringBuilder r22, r26;
        android.os.Handler r23;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$B6INu6yYNZbmMBINR4KMMCBToN4 r24;
        java.lang.SecurityException r25;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r18 := @parameter0: android.app.blob.BlobHandle;

        i0 := @parameter1: int;

        r19 := @parameter2: java.lang.String;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label01:
        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        r20 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArrayMap getUserBlobsLocked(int)>($i1);

        $r2 = virtualinvoke r20.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r18);

        r21 = (com.android.server.blob.BlobMetadata) $r2;

     label02:
        if r21 == null goto label07;

     label03:
        $z0 = virtualinvoke r21.<com.android.server.blob.BlobMetadata: boolean isAccessAllowedForCaller(java.lang.String,int)>(r19, i0);

        if $z0 == 0 goto label07;

        virtualinvoke r21.<com.android.server.blob.BlobMetadata: void removeLeasee(java.lang.String,int)>(r19, i0);

        $z1 = <com.android.server.blob.BlobStoreConfig: boolean LOGV>;

        if $z1 == 0 goto label04;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Released lease on ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; callingUid=");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callingPackage=");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r16 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BlobStore", $r16);

     label04:
        $z2 = virtualinvoke r21.<com.android.server.blob.BlobMetadata: boolean hasValidLeases()>();

        if $z2 != 0 goto label05;

        r23 = r0.<com.android.server.blob.BlobStoreManagerService: android.os.Handler mHandler>;

        r24 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$B6INu6yYNZbmMBINR4KMMCBToN4;

        specialinvoke r24.<com.android.server.blob._$$Lambda$BlobStoreManagerService$B6INu6yYNZbmMBINR4KMMCBToN4: void <init>(com.android.server.blob.BlobStoreManagerService,android.util.ArrayMap,android.app.blob.BlobHandle,com.android.server.blob.BlobMetadata)>(r0, r20, r18, r21);

        $l2 = staticinvoke <com.android.server.blob.BlobStoreConfig: long getDeletionOnLastLeaseDelayMs()>();

        virtualinvoke r23.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r24, $l2);

     label05:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobsInfoAsync()>();

        exitmonitor r1;

     label06:
        return;

     label07:
        r25 = new java.lang.SecurityException;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller not allowed to access ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; callingUid=");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callingPackage=");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r9 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<java.lang.SecurityException: void <init>(java.lang.String)>($r9);

        throw r25;

     label08:
        $r17 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void verifyCallingPackage(int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r10;
        android.content.pm.PackageManagerInternal $r3;
        java.lang.StringBuilder $r4;
        java.lang.SecurityException $r9;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.pm.PackageManagerInternal mPackageManagerInternal>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i2 = virtualinvoke $r3.<android.content.pm.PackageManagerInternal: int getPackageUid(java.lang.String,int,int)>(r1, 0, $i1);

        if $i2 != i0 goto label1;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified calling package [");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] does not match the calling uid ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = new java.lang.SecurityException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    private void writeBlobSessions()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.lang.Object r1;
        java.lang.Exception $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobSessionsLocked()>();

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        goto label7;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label7 to label8 with label3;
    }

    private void writeBlobSessionsAsync()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.lang.Runnable $r1, $r3;
        android.os.Handler $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.os.Handler mHandler>;

        $r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Runnable mSaveSessionsRunnable>;

        $z0 = virtualinvoke $r2.<android.os.Handler: boolean hasCallbacks(java.lang.Runnable)>($r1);

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.server.blob.BlobStoreManagerService: android.os.Handler mHandler>;

        $r3 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Runnable mSaveSessionsRunnable>;

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private void writeBlobSessionsLocked() throws java.lang.Exception
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.util.AtomicFile r1;
        com.android.internal.util.FastXmlSerializer r2;
        int i0, i1, i6, i7;
        android.util.LongSparseArray r3;
        long $l2;
        java.nio.charset.Charset $r4;
        java.lang.String $r5;
        java.lang.Boolean $r6;
        android.util.SparseArray $r8, $r10;
        boolean $z0;
        java.lang.Object $r11, $r13;
        com.android.server.blob.BlobStoreSession $r14;
        java.lang.Exception $r16;
        java.io.FileOutputStream r17, r18;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.AtomicFile prepareSessionsIndexFile()>();

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BlobStore", "Error creating sessions index file");

        return;

     label01:
        r17 = null;

     label02:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r18 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileOutputStream startWrite(long)>($l2);

     label03:
        r17 = r18;

     label04:
        r2 = new com.android.internal.util.FastXmlSerializer;

     label05:
        r17 = r18;

     label06:
        specialinvoke r2.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label07:
        r17 = r18;

     label08:
        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r5 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r18, $r5);

     label09:
        r17 = r18;

     label10:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r6);

     label11:
        r17 = r18;

     label12:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "ss");

     label13:
        r17 = r18;

     label14:
        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r2, "v", 5);

     label15:
        i6 = 0;

        r17 = r18;

     label16:
        $r8 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        i0 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

     label17:
        if i6 >= i0 goto label29;

        r17 = r18;

     label18:
        $r10 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r3 = (android.util.LongSparseArray) $r11;

     label19:
        i7 = 0;

        r17 = r18;

     label20:
        i1 = virtualinvoke r3.<android.util.LongSparseArray: int size()>();

     label21:
        if i7 >= i1 goto label28;

        r17 = r18;

     label22:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "s");

     label23:
        r17 = r18;

     label24:
        $r13 = virtualinvoke r3.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i7);

        $r14 = (com.android.server.blob.BlobStoreSession) $r13;

        virtualinvoke $r14.<com.android.server.blob.BlobStoreSession: void writeToXml(org.xmlpull.v1.XmlSerializer)>(r2);

     label25:
        r17 = r18;

     label26:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "s");

     label27:
        i7 = i7 + 1;

        goto label21;

     label28:
        i6 = i6 + 1;

        goto label17;

     label29:
        r17 = r18;

     label30:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "ss");

     label31:
        r17 = r18;

     label32:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label33:
        r17 = r18;

     label34:
        virtualinvoke r1.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r18);

     label35:
        r17 = r18;

     label36:
        $z0 = <com.android.server.blob.BlobStoreConfig: boolean LOGV>;

        if $z0 == 0 goto label39;

     label37:
        r17 = r18;

     label38:
        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BlobStore", "Finished persisting sessions data");

     label39:
        return;

     label40:
        $r16 := @caughtexception;

        virtualinvoke r1.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r17);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("BlobStore", "Error writing sessions data", $r16);

        throw $r16;

        catch java.lang.Exception from label02 to label03 with label40;
        catch java.lang.Exception from label04 to label05 with label40;
        catch java.lang.Exception from label06 to label07 with label40;
        catch java.lang.Exception from label08 to label09 with label40;
        catch java.lang.Exception from label10 to label11 with label40;
        catch java.lang.Exception from label12 to label13 with label40;
        catch java.lang.Exception from label14 to label15 with label40;
        catch java.lang.Exception from label16 to label17 with label40;
        catch java.lang.Exception from label18 to label19 with label40;
        catch java.lang.Exception from label20 to label21 with label40;
        catch java.lang.Exception from label22 to label23 with label40;
        catch java.lang.Exception from label24 to label25 with label40;
        catch java.lang.Exception from label26 to label27 with label40;
        catch java.lang.Exception from label30 to label31 with label40;
        catch java.lang.Exception from label32 to label33 with label40;
        catch java.lang.Exception from label34 to label35 with label40;
        catch java.lang.Exception from label36 to label37 with label40;
        catch java.lang.Exception from label38 to label39 with label40;
    }

    private void writeBlobsInfo()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.Exception $r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobsInfoLocked()>();

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        exitmonitor r1;

     label8:
        throw $r2;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label7 to label8 with label3;
    }

    private void writeBlobsInfoAsync()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.lang.Runnable $r1, $r3;
        android.os.Handler $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.os.Handler mHandler>;

        $r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Runnable mSaveBlobsInfoRunnable>;

        $z0 = virtualinvoke $r2.<android.os.Handler: boolean hasCallbacks(java.lang.Runnable)>($r1);

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.server.blob.BlobStoreManagerService: android.os.Handler mHandler>;

        $r3 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Runnable mSaveBlobsInfoRunnable>;

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private void writeBlobsInfoLocked() throws java.lang.Exception
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.util.AtomicFile r1;
        com.android.internal.util.FastXmlSerializer r2;
        int i0, i1, i6, i7;
        android.util.ArrayMap r3;
        long $l2;
        java.nio.charset.Charset $r4;
        java.lang.String $r5;
        java.lang.Boolean $r6;
        android.util.SparseArray $r8, $r10;
        boolean $z0;
        java.lang.Object $r11, $r13;
        com.android.server.blob.BlobMetadata $r14;
        java.lang.Exception $r16;
        java.io.FileOutputStream r17, r18;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.AtomicFile prepareBlobsIndexFile()>();

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BlobStore", "Error creating blobs index file");

        return;

     label01:
        r17 = null;

     label02:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r18 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileOutputStream startWrite(long)>($l2);

     label03:
        r17 = r18;

     label04:
        r2 = new com.android.internal.util.FastXmlSerializer;

     label05:
        r17 = r18;

     label06:
        specialinvoke r2.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label07:
        r17 = r18;

     label08:
        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r5 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r18, $r5);

     label09:
        r17 = r18;

     label10:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r6);

     label11:
        r17 = r18;

     label12:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "bs");

     label13:
        r17 = r18;

     label14:
        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r2, "v", 5);

     label15:
        i6 = 0;

        r17 = r18;

     label16:
        $r8 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        i0 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

     label17:
        if i6 >= i0 goto label29;

        r17 = r18;

     label18:
        $r10 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r3 = (android.util.ArrayMap) $r11;

     label19:
        i7 = 0;

        r17 = r18;

     label20:
        i1 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

     label21:
        if i7 >= i1 goto label28;

        r17 = r18;

     label22:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "b");

     label23:
        r17 = r18;

     label24:
        $r13 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        $r14 = (com.android.server.blob.BlobMetadata) $r13;

        virtualinvoke $r14.<com.android.server.blob.BlobMetadata: void writeToXml(org.xmlpull.v1.XmlSerializer)>(r2);

     label25:
        r17 = r18;

     label26:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "b");

     label27:
        i7 = i7 + 1;

        goto label21;

     label28:
        i6 = i6 + 1;

        goto label17;

     label29:
        r17 = r18;

     label30:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "bs");

     label31:
        r17 = r18;

     label32:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label33:
        r17 = r18;

     label34:
        virtualinvoke r1.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r18);

     label35:
        r17 = r18;

     label36:
        $z0 = <com.android.server.blob.BlobStoreConfig: boolean LOGV>;

        if $z0 == 0 goto label39;

     label37:
        r17 = r18;

     label38:
        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BlobStore", "Finished persisting blobs data");

     label39:
        return;

     label40:
        $r16 := @caughtexception;

        virtualinvoke r1.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r17);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("BlobStore", "Error writing blobs data", $r16);

        throw $r16;

        catch java.lang.Exception from label02 to label03 with label40;
        catch java.lang.Exception from label04 to label05 with label40;
        catch java.lang.Exception from label06 to label07 with label40;
        catch java.lang.Exception from label08 to label09 with label40;
        catch java.lang.Exception from label10 to label11 with label40;
        catch java.lang.Exception from label12 to label13 with label40;
        catch java.lang.Exception from label14 to label15 with label40;
        catch java.lang.Exception from label16 to label17 with label40;
        catch java.lang.Exception from label18 to label19 with label40;
        catch java.lang.Exception from label20 to label21 with label40;
        catch java.lang.Exception from label22 to label23 with label40;
        catch java.lang.Exception from label24 to label25 with label40;
        catch java.lang.Exception from label26 to label27 with label40;
        catch java.lang.Exception from label30 to label31 with label40;
        catch java.lang.Exception from label32 to label33 with label40;
        catch java.lang.Exception from label34 to label35 with label40;
        catch java.lang.Exception from label36 to label37 with label40;
        catch java.lang.Exception from label38 to label39 with label40;
    }

    transient void addActiveIdsForTest(long[])
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.lang.Object r1;
        int i0, i2;
        long $l1;
        java.lang.Throwable $r2;
        long[] r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r3 := @parameter0: long[];

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label01:
        i0 = lengthof r3;

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label06;

     label04:
        $l1 = r3[i2];

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void addActiveBlobIdLocked(long)>($l1);

     label05:
        i2 = i2 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void addUserBlobsForTest(android.util.ArrayMap, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0;
        java.lang.Object r1;
        android.util.SparseArray $r2;
        java.lang.Throwable $r3;
        android.util.ArrayMap r4;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r4 := @parameter0: android.util.ArrayMap;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void addUserSessionsForTest(android.util.LongSparseArray, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0;
        java.lang.Object r1;
        android.util.SparseArray $r2;
        java.lang.Throwable $r3;
        android.util.LongSparseArray r4;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r4 := @parameter0: android.util.LongSparseArray;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void deleteBlob(android.app.blob.BlobHandle, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0;
        java.lang.Object r1, $r4;
        android.util.ArrayMap r2;
        com.android.server.blob.BlobMetadata r3;
        java.lang.Throwable $r6;
        android.app.blob.BlobHandle r7;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r7 := @parameter0: android.app.blob.BlobHandle;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        r2 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArrayMap getUserBlobsLocked(int)>(i0);

        $r4 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r3 = (com.android.server.blob.BlobMetadata) $r4;

     label2:
        if r3 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteBlobLocked(com.android.server.blob.BlobMetadata)>(r3);

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r7);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobsInfoAsync()>();

        exitmonitor r1;

     label6:
        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    java.util.Set getActiveIdsForTest()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.util.ArraySet r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArraySet mActiveBlobIds>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    java.util.Set getKnownIdsForTest()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.util.ArraySet r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArraySet mKnownBlobIds>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    long getTotalUsageBytesLocked(int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, $i1;
        java.lang.String r1;
        java.util.concurrent.atomic.AtomicLong $r3;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$4X5X_d6CkyxPjpme_NpFgH7rQX0 $r4;
        long $l2;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        $r4 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$4X5X_d6CkyxPjpme_NpFgH7rQX0;

        specialinvoke $r4.<com.android.server.blob._$$Lambda$BlobStoreManagerService$4X5X_d6CkyxPjpme_NpFgH7rQX0: void <init>(java.lang.String,int,java.util.concurrent.atomic.AtomicLong)>(r1, i0, $r3);

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void forEachBlobInUser(java.util.function.Consumer,int)>($r4, $i1);

        $l2 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l2;
    }

    void handleIdleMaintenanceLocked()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.io.File[] r2;
        java.io.File r3, $r25, r36;
        long l0;
        java.util.ArrayList $r5, $r6;
        boolean $z0;
        android.util.SparseArray $r7, $r8, $r15, $r19;
        java.lang.StringBuilder $r9, $r31;
        java.lang.Object[] $r11;
        java.lang.String $r12, $r14, $r26, $r34;
        java.lang.Object $r16, $r20, $r24;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$fjs0udzhS9kvgrvbBIWUr85tCdc $r17;
        android.util.LongSparseArray $r18;
        android.util.ArrayMap $r21;
        java.util.Set $r22;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$18b1f2qn0MZ0gTodRtOLK4DIxak $r23;
        android.util.ArraySet $r27;
        java.lang.Long $r28, $r29;
        int $i2, i4, i5, i6, i7, i8, i9, i10, i11;
        java.lang.Throwable $r30;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r36 = staticinvoke <com.android.server.blob.BlobStoreConfig: java.io.File getBlobsDir()>();

        $z0 = virtualinvoke r36.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label08;

        r2 = virtualinvoke r36.<java.io.File: java.io.File[] listFiles()>();

        i4 = lengthof r2;

        i5 = 0;

     label01:
        if i5 >= i4 goto label06;

        r3 = r2[i5];

     label02:
        $r26 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r26);

        $r27 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArraySet mActiveBlobIds>;

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $i2 = virtualinvoke $r27.<android.util.ArraySet: int indexOf(java.lang.Object)>($r28);

        if $i2 >= 0 goto label03;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);

     label03:
        goto label05;

     label04:
        $r30 := @caughtexception;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing the file name: ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("BlobStore", $r34, $r30);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label05:
        i5 = i5 + 1;

        goto label01;

     label06:
        i6 = 0;

        i7 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

     label07:
        if i6 >= i7 goto label08;

        $r24 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r25 = (java.io.File) $r24;

        virtualinvoke $r25.<java.io.File: boolean delete()>();

        i6 = i6 + 1;

        goto label07;

     label08:
        i8 = 0;

        $r7 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        i9 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

     label09:
        if i8 >= i9 goto label10;

        $r19 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        $r20 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object valueAt(int)>(i8);

        $r21 = (android.util.ArrayMap) $r20;

        $r22 = virtualinvoke $r21.<android.util.ArrayMap: java.util.Set entrySet()>();

        $r23 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$18b1f2qn0MZ0gTodRtOLK4DIxak;

        specialinvoke $r23.<com.android.server.blob._$$Lambda$BlobStoreManagerService$18b1f2qn0MZ0gTodRtOLK4DIxak: void <init>(com.android.server.blob.BlobStoreManagerService,java.util.ArrayList)>(r0, $r5);

        interfaceinvoke $r22.<java.util.Set: boolean removeIf(java.util.function.Predicate)>($r23);

        i8 = i8 + 1;

        goto label09;

     label10:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobsInfoAsync()>();

        i10 = 0;

        $r8 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        i11 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

     label11:
        if i10 >= i11 goto label12;

        $r15 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        $r16 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object valueAt(int)>(i10);

        $r18 = (android.util.LongSparseArray) $r16;

        $r17 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$fjs0udzhS9kvgrvbBIWUr85tCdc;

        specialinvoke $r17.<com.android.server.blob._$$Lambda$BlobStoreManagerService$fjs0udzhS9kvgrvbBIWUr85tCdc: void <init>(com.android.server.blob.BlobStoreManagerService,java.util.ArrayList)>(r0, $r5);

        virtualinvoke $r18.<android.util.LongSparseArray: void removeIf(com.android.internal.util.function.LongObjPredicate)>($r17);

        i10 = i10 + 1;

        goto label11;

     label12:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Completed idle maintenance; deleted ");

        $r11 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object[] toArray()>();

        $r12 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BlobStore", $r14);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobSessionsAsync()>();

        return;

        catch java.lang.NumberFormatException from label02 to label03 with label04;
    }

    void handlePackageRemoved(java.lang.String, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        android.util.ArrayMap $r2;
        boolean $z1;
        java.lang.String $r7, r9;
        java.lang.Throwable $r8;
        android.util.LongSparseArray r10;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$2ZHpH5ZDRRSHuy_N3z9hPQwEx90 r11;
        java.util.Set r12;
        com.android.server.blob._$$Lambda$BlobStoreManagerService$TWF0Bwo734bxw9tNMpkLhvdMMSU r13;
        java.lang.StringBuilder r14;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        r10 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.LongSparseArray getUserSessionsLocked(int)>($i1);

        r11 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$2ZHpH5ZDRRSHuy_N3z9hPQwEx90;

        specialinvoke r11.<com.android.server.blob._$$Lambda$BlobStoreManagerService$2ZHpH5ZDRRSHuy_N3z9hPQwEx90: void <init>(com.android.server.blob.BlobStoreManagerService,int,java.lang.String)>(r0, i0, r9);

        virtualinvoke r10.<android.util.LongSparseArray: void removeIf(com.android.internal.util.function.LongObjPredicate)>(r11);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobSessionsAsync()>();

     label2:
        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r2 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArrayMap getUserBlobsLocked(int)>($i2);

        r12 = virtualinvoke $r2.<android.util.ArrayMap: java.util.Set entrySet()>();

        r13 = new com.android.server.blob._$$Lambda$BlobStoreManagerService$TWF0Bwo734bxw9tNMpkLhvdMMSU;

        specialinvoke r13.<com.android.server.blob._$$Lambda$BlobStoreManagerService$TWF0Bwo734bxw9tNMpkLhvdMMSU: void <init>(com.android.server.blob.BlobStoreManagerService,java.lang.String,int)>(r0, r9, i0);

        interfaceinvoke r12.<java.util.Set: boolean removeIf(java.util.function.Predicate)>(r13);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobsInfoAsync()>();

        $z1 = <com.android.server.blob.BlobStoreConfig: boolean LOGV>;

        if $z1 == 0 goto label3;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed blobs data associated with pkg=");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BlobStore", $r7);

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    boolean isBlobAvailable(long, int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        long l0, $l2;
        int i1;
        java.lang.Object r1, $r4;
        android.util.ArrayMap $r2;
        java.util.Collection $r3;
        boolean $z0;
        com.android.server.blob.BlobMetadata $r5;
        byte $b3;
        java.lang.Throwable $r6;
        java.util.Iterator r7;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        $r2 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArrayMap getUserBlobsLocked(int)>(i1);

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.util.Collection values()>();

        r7 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.server.blob.BlobMetadata) $r4;

        $l2 = virtualinvoke $r5.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $b3 = $l2 cmp l0;

        if $b3 != 0 goto label4;

        exitmonitor r1;

     label3:
        return 1;

     label4:
        goto label2;

     label5:
        exitmonitor r1;

     label6:
        return 0;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean lambda$deleteBlobInternal$8$BlobStoreManagerService(long, java.util.Map$Entry)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        long l0, $l1;
        java.lang.Object $r1;
        byte $b2;
        java.util.Map$Entry r2;
        com.android.server.blob.BlobMetadata r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        l0 := @parameter0: long;

        r2 := @parameter1: java.util.Map$Entry;

        $r1 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (com.android.server.blob.BlobMetadata) $r1;

        $l1 = virtualinvoke r3.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label1;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteBlobLocked(com.android.server.blob.BlobMetadata)>(r3);

        return 1;

     label1:
        return 0;
    }

    public boolean lambda$handleIdleMaintenanceLocked$13$BlobStoreManagerService(java.util.ArrayList, java.util.Map$Entry)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.util.ArrayList r1;
        java.lang.Object $r2;
        boolean $z0;
        long $l0;
        java.lang.Long $r3;
        java.util.Map$Entry r4;
        com.android.server.blob.BlobMetadata r5;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: java.util.ArrayList;

        r4 := @parameter1: java.util.Map$Entry;

        $r2 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (com.android.server.blob.BlobMetadata) $r2;

        virtualinvoke r5.<com.android.server.blob.BlobMetadata: void removeExpiredLeases()>();

        $z0 = virtualinvoke r5.<com.android.server.blob.BlobMetadata: boolean shouldBeDeleted(boolean)>(1);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteBlobLocked(com.android.server.blob.BlobMetadata)>(r5);

        $l0 = virtualinvoke r5.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return 1;

     label1:
        return 0;
    }

    public boolean lambda$handleIdleMaintenanceLocked$14$BlobStoreManagerService(java.util.ArrayList, long, com.android.server.blob.BlobStoreSession)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.util.ArrayList r1;
        long l0, $l1;
        com.android.server.blob.BlobStoreSession r2;
        boolean $z0, $z1, z3;
        android.app.blob.BlobHandle $r3;
        java.lang.Long $r4;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: java.util.ArrayList;

        l0 := @parameter1: long;

        r2 := @parameter2: com.android.server.blob.BlobStoreSession;

        z3 = 0;

        $z0 = virtualinvoke r2.<com.android.server.blob.BlobStoreSession: boolean isExpired()>();

        if $z0 == 0 goto label1;

        z3 = 1;

     label1:
        $r3 = virtualinvoke r2.<com.android.server.blob.BlobStoreSession: android.app.blob.BlobHandle getBlobHandle()>();

        $z1 = virtualinvoke $r3.<android.app.blob.BlobHandle: boolean isExpired()>();

        if $z1 == 0 goto label2;

        z3 = 1;

     label2:
        if z3 == 0 goto label3;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteSessionLocked(com.android.server.blob.BlobStoreSession)>(r2);

        $l1 = virtualinvoke r2.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label3:
        return z3;
    }

    public boolean lambda$handlePackageRemoved$11$BlobStoreManagerService(int, java.lang.String, long, com.android.server.blob.BlobStoreSession)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, $i2;
        java.lang.String r1, $r3;
        long l1;
        com.android.server.blob.BlobStoreSession r2;
        boolean $z0;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        r2 := @parameter3: com.android.server.blob.BlobStoreSession;

        $i2 = virtualinvoke r2.<com.android.server.blob.BlobStoreSession: int getOwnerUid()>();

        if $i2 != i0 goto label1;

        $r3 = virtualinvoke r2.<com.android.server.blob.BlobStoreSession: java.lang.String getOwnerPackageName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteSessionLocked(com.android.server.blob.BlobStoreSession)>(r2);

        return 1;

     label1:
        return 0;
    }

    public boolean lambda$handlePackageRemoved$12$BlobStoreManagerService(java.lang.String, int, java.util.Map$Entry)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.lang.String r1;
        int i0;
        boolean z0, $z1;
        java.lang.Object $r2;
        java.util.Map$Entry r3;
        com.android.server.blob.BlobMetadata r4;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: java.util.Map$Entry;

        $r2 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (com.android.server.blob.BlobMetadata) $r2;

        z0 = virtualinvoke r4.<com.android.server.blob.BlobMetadata: boolean isACommitter(java.lang.String,int)>(r1, i0);

        if z0 == 0 goto label1;

        virtualinvoke r4.<com.android.server.blob.BlobMetadata: void removeCommitter(java.lang.String,int)>(r1, i0);

     label1:
        virtualinvoke r4.<com.android.server.blob.BlobMetadata: void removeLeasee(java.lang.String,int)>(r1, i0);

        $z1 = virtualinvoke r4.<com.android.server.blob.BlobMetadata: boolean shouldBeDeleted(boolean)>(z0);

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteBlobLocked(com.android.server.blob.BlobMetadata)>(r4);

        return 1;

     label2:
        return 0;
    }

    public void lambda$onStateChangedInternal$10$BlobStoreManagerService(com.android.server.blob.BlobStoreSession)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        com.android.server.blob.BlobStoreSession r1;
        com.android.server.blob.'-$$Lambda$DjzaYeVYvBfdcKdI4aXi7MQOjzc' $r2;
        android.os.Handler $r3;
        com.android.internal.util.function.pooled.PooledRunnable $r4, $r5;
        java.util.function.Consumer r6;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: com.android.server.blob.BlobStoreSession;

        virtualinvoke r1.<com.android.server.blob.BlobStoreSession: void computeDigest()>();

        $r3 = r0.<com.android.server.blob.BlobStoreManagerService: android.os.Handler mHandler>;

        $r2 = <com.android.server.blob._$$Lambda$DjzaYeVYvBfdcKdI4aXi7MQOjzc: com.android.server.blob.'-$$Lambda$DjzaYeVYvBfdcKdI4aXi7MQOjzc' INSTANCE>;

        r6 = (java.util.function.Consumer) $r2;

        $r4 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledRunnable obtainRunnable(java.util.function.Consumer,java.lang.Object)>(r6, r1);

        $r5 = interfaceinvoke $r4.<com.android.internal.util.function.pooled.PooledRunnable: com.android.internal.util.function.pooled.PooledRunnable recycleOnUse()>();

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public android.content.res.Resources lambda$queryBlobsForUserInternal$5$BlobStoreManagerService(android.util.ArrayMap, int, java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.util.ArrayMap r1;
        int i0;
        java.lang.String r2;
        java.lang.Object $r3, $r4;
        android.content.Context $r5;
        java.lang.ref.WeakReference $r6, r8;
        android.content.res.Resources r9, r10;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 := @parameter0: android.util.ArrayMap;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r8 = (java.lang.ref.WeakReference) $r3;

        if r8 != null goto label1;

        r9 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r8.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r9 = (android.content.res.Resources) $r4;

     label2:
        r10 = r9;

        if r9 != null goto label3;

        $r5 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.Context mContext>;

        r10 = staticinvoke <com.android.server.blob.BlobStoreUtils: android.content.res.Resources getPackageResources(android.content.Context,java.lang.String,int)>($r5, r2, i0);

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r10);

        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6);

     label3:
        return r10;
    }

    public void lambda$releaseLeaseInternal$4$BlobStoreManagerService(android.util.ArrayMap, android.app.blob.BlobHandle, com.android.server.blob.BlobMetadata)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        android.app.blob.BlobHandle r1;
        com.android.server.blob.BlobMetadata r2;
        java.lang.Object r3, $r4;
        boolean $z0, $z1;
        java.lang.Throwable $r6;
        android.util.ArrayMap r7;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r7 := @parameter0: android.util.ArrayMap;

        r1 := @parameter1: android.app.blob.BlobHandle;

        r2 := @parameter2: com.android.server.blob.BlobMetadata;

        r3 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r3;

     label1:
        $r4 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, r2);

        if $z0 != 0 goto label3;

        exitmonitor r3;

     label2:
        return;

     label3:
        $z1 = virtualinvoke r2.<com.android.server.blob.BlobMetadata: boolean shouldBeDeleted(boolean)>(1);

        if $z1 == 0 goto label4;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void deleteBlobLocked(com.android.server.blob.BlobMetadata)>(r2);

        virtualinvoke r7.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label4:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobsInfoAsync()>();

        exitmonitor r3;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r3;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void onBootPhase(int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0;
        java.lang.Object r1;
        android.content.Context $r2, $r3;
        java.lang.Throwable $r4;
        android.util.SparseArray r5;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        if i0 != 550 goto label1;

        $r3 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.Context mContext>;

        staticinvoke <com.android.server.blob.BlobStoreConfig: void initialize(android.content.Context)>($r3);

        goto label8;

     label1:
        if i0 != 600 goto label7;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label2:
        r5 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray getAllPackages()>();

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void readBlobSessionsLocked(android.util.SparseArray)>(r5);

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void readBlobsInfoLocked(android.util.SparseArray)>(r5);

        exitmonitor r1;

     label3:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void registerBlobStorePuller()>();

        goto label8;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

     label7:
        if i0 != 1000 goto label8;

        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.content.Context mContext>;

        staticinvoke <com.android.server.blob.BlobStoreIdleJobService: void schedule(android.content.Context)>($r2);

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onStart()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        com.android.server.blob.BlobStoreManagerService$Stub $r1;
        com.android.server.blob.BlobStoreManagerService$LocalService $r2;
        java.lang.Object $r3, $r6, $r8;
        android.content.pm.PackageManagerInternal $r4;
        android.content.Context $r5;
        android.app.StatsManager $r7;
        com.android.server.blob.BlobStoreManagerService$BlobStorageStatsAugmenter $r9;
        com.android.server.usage.StorageStatsManagerInternal $r10;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        $r1 = new com.android.server.blob.BlobStoreManagerService$Stub;

        specialinvoke $r1.<com.android.server.blob.BlobStoreManagerService$Stub: void <init>(com.android.server.blob.BlobStoreManagerService,com.android.server.blob.BlobStoreManagerService$1)>(r0, null);

        virtualinvoke r0.<com.android.server.blob.BlobStoreManagerService: void publishBinderService(java.lang.String,android.os.IBinder)>("blob_store", $r1);

        $r2 = new com.android.server.blob.BlobStoreManagerService$LocalService;

        specialinvoke $r2.<com.android.server.blob.BlobStoreManagerService$LocalService: void <init>(com.android.server.blob.BlobStoreManagerService,com.android.server.blob.BlobStoreManagerService$1)>(r0, null);

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(class "Lcom/android/server/blob/BlobStoreManagerInternal;", $r2);

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r4 = (android.content.pm.PackageManagerInternal) $r3;

        r0.<com.android.server.blob.BlobStoreManagerService: android.content.pm.PackageManagerInternal mPackageManagerInternal> = $r4;

        $r5 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerService: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/StatsManager;");

        $r7 = (android.app.StatsManager) $r6;

        r0.<com.android.server.blob.BlobStoreManagerService: android.app.StatsManager mStatsManager> = $r7;

        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void registerReceivers()>();

        $r8 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/usage/StorageStatsManagerInternal;");

        $r10 = (com.android.server.usage.StorageStatsManagerInternal) $r8;

        $r9 = new com.android.server.blob.BlobStoreManagerService$BlobStorageStatsAugmenter;

        specialinvoke $r9.<com.android.server.blob.BlobStoreManagerService$BlobStorageStatsAugmenter: void <init>(com.android.server.blob.BlobStoreManagerService,com.android.server.blob.BlobStoreManagerService$1)>(r0, null);

        virtualinvoke $r10.<com.android.server.usage.StorageStatsManagerInternal: void registerStorageStatsAugmenter(com.android.server.usage.StorageStatsManagerInternal$StorageStatsAugmenter,java.lang.String)>($r9, "BlobStore");

        return;
    }

    android.util.AtomicFile prepareBlobsIndexFile()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.io.File r1;
        android.util.AtomicFile $r2;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 = staticinvoke <com.android.server.blob.BlobStoreConfig: java.io.File prepareBlobsIndexFile()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = new android.util.AtomicFile;

        specialinvoke $r2.<android.util.AtomicFile: void <init>(java.io.File,java.lang.String)>(r1, "blobs_index");

        return $r2;
    }

    android.util.AtomicFile prepareSessionsIndexFile()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.io.File r1;
        android.util.AtomicFile $r2;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 = staticinvoke <com.android.server.blob.BlobStoreConfig: java.io.File prepareSessionIndexFile()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = new android.util.AtomicFile;

        specialinvoke $r2.<android.util.AtomicFile: void <init>(java.io.File,java.lang.String)>(r1, "session_index");

        return $r2;
    }

    void runClearAllBlobs(int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, i1, i2, i4, i5, i6;
        java.lang.Object r1, $r7, $r9;
        android.util.SparseArray $r2, $r3, $r4, $r5, $r6;
        android.util.ArraySet $r8;
        com.android.server.blob.BlobMetadata $r10;
        long $l3;
        java.lang.Long $r11;
        java.lang.Throwable $r12;
        android.util.ArrayMap r13;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

        i4 = 0;

     label01:
        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

     label02:
        if i4 >= i1 goto label12;

     label03:
        $r5 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        i5 = virtualinvoke $r5.<android.util.SparseArray: int keyAt(int)>(i4);

     label04:
        if i0 == -1 goto label05;

        if i0 == i5 goto label05;

        goto label11;

     label05:
        $r6 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r13 = (android.util.ArrayMap) $r7;

     label06:
        i6 = 0;

     label07:
        i2 = virtualinvoke r13.<android.util.ArrayMap: int size()>();

     label08:
        if i6 >= i2 goto label11;

     label09:
        $r8 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArraySet mActiveBlobIds>;

        $r9 = virtualinvoke r13.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        $r10 = (com.android.server.blob.BlobMetadata) $r9;

        $l3 = virtualinvoke $r10.<com.android.server.blob.BlobMetadata: long getBlobId()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke $r8.<android.util.ArraySet: boolean remove(java.lang.Object)>($r11);

     label10:
        i6 = i6 + 1;

        goto label08;

     label11:
        i4 = i4 + 1;

        goto label02;

     label12:
        if i0 != -1 goto label15;

     label13:
        $r4 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        virtualinvoke $r4.<android.util.SparseArray: void clear()>();

     label14:
        goto label16;

     label15:
        $r3 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mBlobsMap>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

     label16:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobsInfoAsync()>();

        exitmonitor r1;

     label17:
        return;

     label18:
        $r12 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    void runClearAllSessions(int)
    {
        com.android.server.blob.BlobStoreManagerService r0;
        int i0, i1, i2, i4, i5, i6;
        java.lang.Object r1, $r7, $r9;
        android.util.SparseArray $r2, $r3, $r4, $r5, $r6;
        android.util.ArraySet $r8;
        com.android.server.blob.BlobStoreSession $r10;
        long $l3;
        java.lang.Long $r11;
        java.lang.Throwable $r12;
        android.util.LongSparseArray r13;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

        i4 = 0;

     label01:
        $r2 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

     label02:
        if i4 >= i1 goto label12;

     label03:
        $r5 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        i5 = virtualinvoke $r5.<android.util.SparseArray: int keyAt(int)>(i4);

     label04:
        if i0 == -1 goto label05;

        if i0 == i5 goto label05;

        goto label11;

     label05:
        $r6 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r13 = (android.util.LongSparseArray) $r7;

     label06:
        i6 = 0;

     label07:
        i2 = virtualinvoke r13.<android.util.LongSparseArray: int size()>();

     label08:
        if i6 >= i2 goto label11;

     label09:
        $r8 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.ArraySet mActiveBlobIds>;

        $r9 = virtualinvoke r13.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i6);

        $r10 = (com.android.server.blob.BlobStoreSession) $r9;

        $l3 = virtualinvoke $r10.<com.android.server.blob.BlobStoreSession: long getSessionId()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke $r8.<android.util.ArraySet: boolean remove(java.lang.Object)>($r11);

     label10:
        i6 = i6 + 1;

        goto label08;

     label11:
        i4 = i4 + 1;

        goto label02;

     label12:
        if i0 != -1 goto label15;

     label13:
        $r4 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        virtualinvoke $r4.<android.util.SparseArray: void clear()>();

     label14:
        goto label16;

     label15:
        $r3 = r0.<com.android.server.blob.BlobStoreManagerService: android.util.SparseArray mSessions>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

     label16:
        specialinvoke r0.<com.android.server.blob.BlobStoreManagerService: void writeBlobSessionsAsync()>();

        exitmonitor r1;

     label17:
        return;

     label18:
        $r12 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    void runIdleMaintenance()
    {
        com.android.server.blob.BlobStoreManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.blob.BlobStoreManagerService;

        r1 = r0.<com.android.server.blob.BlobStoreManagerService: java.lang.Object mBlobsLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.server.blob.BlobStoreManagerService: void handleIdleMaintenanceLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
