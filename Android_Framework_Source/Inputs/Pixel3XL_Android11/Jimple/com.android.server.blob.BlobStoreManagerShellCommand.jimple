class com.android.server.blob.BlobStoreManagerShellCommand extends android.os.ShellCommand
{
    private final com.android.server.blob.BlobStoreManagerService mService;

    void <init>(com.android.server.blob.BlobStoreManagerService)
    {
        com.android.server.blob.BlobStoreManagerShellCommand r0;
        com.android.server.blob.BlobStoreManagerService r1;

        r0 := @this: com.android.server.blob.BlobStoreManagerShellCommand;

        r1 := @parameter0: com.android.server.blob.BlobStoreManagerService;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        r0.<com.android.server.blob.BlobStoreManagerShellCommand: com.android.server.blob.BlobStoreManagerService mService> = r1;

        return;
    }

    private int parseOptions(java.io.PrintWriter, com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs)
    {
        com.android.server.blob.BlobStoreManagerShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r8, $r10, $r11, $r16;
        int $i0, $i1, $i2, $i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        long $l3, $l4;
        java.util.Base64$Decoder $r7;
        byte[] $r9;
        java.lang.StringBuilder $r12;
        com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs r17;
        byte b6;

        r0 := @this: com.android.server.blob.BlobStoreManagerShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r17 := @parameter1: com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs;

     label01:
        r2 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: java.lang.String getNextOption()>();

        b6 = 0;

        if r2 == null goto label22;

        $i2 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i2)
        {
            case -1620968108: goto label10;
            case 1493: goto label09;
            case 1512: goto label08;
            case 43013626: goto label07;
            case 1068100452: goto label06;
            case 1110854355: goto label05;
            case 1332867059: goto label04;
            case 1333469547: goto label03;
            default: goto label02;
        };

     label02:
        goto label11;

     label03:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z0 == 0 goto label02;

        b6 = 1;

        goto label12;

     label04:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--algo");

        if $z1 == 0 goto label02;

        b6 = 2;

        goto label12;

     label05:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--expiry");

        if $z2 == 0 goto label02;

        b6 = 5;

        goto label12;

     label06:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--digest");

        if $z3 == 0 goto label02;

        b6 = 3;

        goto label12;

     label07:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--tag");

        if $z4 == 0 goto label02;

        b6 = 6;

        goto label12;

     label08:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-u");

        if $z5 == 0 goto label02;

        goto label12;

     label09:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-b");

        if $z6 == 0 goto label02;

        b6 = 7;

        goto label12;

     label10:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--label");

        if $z7 == 0 goto label02;

        b6 = 4;

        goto label12;

     label11:
        b6 = -1;

     label12:
        tableswitch(b6)
        {
            case 0: goto label20;
            case 1: goto label20;
            case 2: goto label19;
            case 3: goto label18;
            case 4: goto label17;
            case 5: goto label16;
            case 6: goto label15;
            case 7: goto label14;
            default: goto label13;
        };

     label13:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown option \'");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        return -1;

     label14:
        $r3 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: java.lang.String getNextArgRequired()>();

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

        r17.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: long blobId> = $l3;

        goto label21;

     label15:
        $r4 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: java.lang.String getNextArgRequired()>();

        r17.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: java.lang.String tag> = $r4;

        goto label21;

     label16:
        $r5 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: java.lang.String getNextArgRequired()>();

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        r17.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: long expiryTimeMillis> = $l4;

        goto label21;

     label17:
        $r6 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: java.lang.String getNextArgRequired()>();

        r17.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: java.lang.CharSequence label> = $r6;

        goto label21;

     label18:
        $r7 = staticinvoke <java.util.Base64: java.util.Base64$Decoder getDecoder()>();

        $r8 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: java.lang.String getNextArgRequired()>();

        $r9 = virtualinvoke $r7.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>($r8);

        r17.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: byte[] digest> = $r9;

        goto label21;

     label19:
        $r10 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: java.lang.String getNextArgRequired()>();

        r17.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: java.lang.String algorithm> = $r10;

        goto label21;

     label20:
        $r11 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: java.lang.String getNextArgRequired()>();

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        r17.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: int userId> = $i5;

     label21:
        goto label01;

     label22:
        $i0 = r17.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: int userId>;

        if $i0 != -2 goto label23;

        $i1 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        r17.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: int userId> = $i1;

     label23:
        return 0;
    }

    private int runClearAllBlobs(java.io.PrintWriter)
    {
        com.android.server.blob.BlobStoreManagerShellCommand r0;
        java.io.PrintWriter r1;
        com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs $r3;
        int $i0, $i1;
        com.android.server.blob.BlobStoreManagerService $r4;

        r0 := @this: com.android.server.blob.BlobStoreManagerShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r3 = new com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs;

        specialinvoke $r3.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: void <init>(com.android.server.blob.BlobStoreManagerShellCommand$1)>(null);

        $r3.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: int userId> = -1;

        $i0 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: int parseOptions(java.io.PrintWriter,com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs)>(r1, $r3);

        if $i0 >= 0 goto label1;

        return -1;

     label1:
        $r4 = r0.<com.android.server.blob.BlobStoreManagerShellCommand: com.android.server.blob.BlobStoreManagerService mService>;

        $i1 = $r3.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: int userId>;

        virtualinvoke $r4.<com.android.server.blob.BlobStoreManagerService: void runClearAllBlobs(int)>($i1);

        return 0;
    }

    private int runClearAllSessions(java.io.PrintWriter)
    {
        com.android.server.blob.BlobStoreManagerShellCommand r0;
        java.io.PrintWriter r1;
        com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs $r3;
        int $i0, $i1;
        com.android.server.blob.BlobStoreManagerService $r4;

        r0 := @this: com.android.server.blob.BlobStoreManagerShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r3 = new com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs;

        specialinvoke $r3.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: void <init>(com.android.server.blob.BlobStoreManagerShellCommand$1)>(null);

        $r3.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: int userId> = -1;

        $i0 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: int parseOptions(java.io.PrintWriter,com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs)>(r1, $r3);

        if $i0 >= 0 goto label1;

        return -1;

     label1:
        $r4 = r0.<com.android.server.blob.BlobStoreManagerShellCommand: com.android.server.blob.BlobStoreManagerService mService>;

        $i1 = $r3.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: int userId>;

        virtualinvoke $r4.<com.android.server.blob.BlobStoreManagerService: void runClearAllSessions(int)>($i1);

        return 0;
    }

    private int runDeleteBlob(java.io.PrintWriter)
    {
        com.android.server.blob.BlobStoreManagerShellCommand r0;
        java.io.PrintWriter r1;
        com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs $r3;
        int $i0, $i1;
        com.android.server.blob.BlobStoreManagerService $r4;
        android.app.blob.BlobHandle $r5;

        r0 := @this: com.android.server.blob.BlobStoreManagerShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r3 = new com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs;

        specialinvoke $r3.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: void <init>(com.android.server.blob.BlobStoreManagerShellCommand$1)>(null);

        $i0 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: int parseOptions(java.io.PrintWriter,com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs)>(r1, $r3);

        if $i0 >= 0 goto label1;

        return -1;

     label1:
        $r4 = r0.<com.android.server.blob.BlobStoreManagerShellCommand: com.android.server.blob.BlobStoreManagerService mService>;

        $r5 = virtualinvoke $r3.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: android.app.blob.BlobHandle getBlobHandle()>();

        $i1 = $r3.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: int userId>;

        virtualinvoke $r4.<com.android.server.blob.BlobStoreManagerService: void deleteBlob(android.app.blob.BlobHandle,int)>($r5, $i1);

        return 0;
    }

    private int runIdleMaintenance(java.io.PrintWriter)
    {
        com.android.server.blob.BlobStoreManagerShellCommand r0;
        java.io.PrintWriter r1;
        com.android.server.blob.BlobStoreManagerService $r2;

        r0 := @this: com.android.server.blob.BlobStoreManagerShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<com.android.server.blob.BlobStoreManagerShellCommand: com.android.server.blob.BlobStoreManagerService mService>;

        virtualinvoke $r2.<com.android.server.blob.BlobStoreManagerService: void runIdleMaintenance()>();

        return 0;
    }

    private int runQueryBlobExistence(java.io.PrintWriter)
    {
        com.android.server.blob.BlobStoreManagerShellCommand r0;
        java.io.PrintWriter r1;
        com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs $r3;
        int $i0, $i1, i3;
        long $l2;
        com.android.server.blob.BlobStoreManagerService $r4;
        boolean $z0;

        r0 := @this: com.android.server.blob.BlobStoreManagerShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r3 = new com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs;

        specialinvoke $r3.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: void <init>(com.android.server.blob.BlobStoreManagerShellCommand$1)>(null);

        $i0 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: int parseOptions(java.io.PrintWriter,com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs)>(r1, $r3);

        if $i0 >= 0 goto label1;

        return -1;

     label1:
        $r4 = r0.<com.android.server.blob.BlobStoreManagerShellCommand: com.android.server.blob.BlobStoreManagerService mService>;

        $l2 = $r3.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: long blobId>;

        $i1 = $r3.<com.android.server.blob.BlobStoreManagerShellCommand$ParsedArgs: int userId>;

        $z0 = virtualinvoke $r4.<com.android.server.blob.BlobStoreManagerService: boolean isBlobAvailable(long,int)>($l2, $i1);

        i3 = (int) $z0;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>(i3);

        return 0;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.blob.BlobStoreManagerShellCommand r0;
        java.lang.String r1;
        java.io.PrintWriter r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte b8;

        r0 := @this: com.android.server.blob.BlobStoreManagerShellCommand;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label01;

        $i7 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: int handleDefaultCommands(java.lang.String)>(null);

        return $i7;

     label01:
        r2 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        b8 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1168531841: goto label07;
            case -971115831: goto label06;
            case -258166326: goto label05;
            case 712607671: goto label04;
            case 1861559962: goto label03;
            default: goto label02;
        };

     label02:
        goto label08;

     label03:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("idle-maintenance");

        if $z0 == 0 goto label02;

        b8 = 3;

        goto label08;

     label04:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("query-blob-existence");

        if $z1 == 0 goto label02;

        b8 = 4;

        goto label08;

     label05:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("clear-all-blobs");

        if $z2 == 0 goto label02;

        b8 = 1;

        goto label08;

     label06:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("clear-all-sessions");

        if $z3 == 0 goto label02;

        b8 = 0;

        goto label08;

     label07:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("delete-blob");

        if $z4 == 0 goto label02;

        b8 = 2;

     label08:
        if b8 == 0 goto label13;

        if b8 == 1 goto label12;

        if b8 == 2 goto label11;

        if b8 == 3 goto label10;

        if b8 == 4 goto label09;

        $i6 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: int handleDefaultCommands(java.lang.String)>(r1);

        return $i6;

     label09:
        $i5 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: int runQueryBlobExistence(java.io.PrintWriter)>(r2);

        return $i5;

     label10:
        $i4 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: int runIdleMaintenance(java.io.PrintWriter)>(r2);

        return $i4;

     label11:
        $i3 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: int runDeleteBlob(java.io.PrintWriter)>(r2);

        return $i3;

     label12:
        $i2 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: int runClearAllBlobs(java.io.PrintWriter)>(r2);

        return $i2;

     label13:
        $i1 = specialinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: int runClearAllSessions(java.io.PrintWriter)>(r2);

        return $i1;
    }

    public void onHelp()
    {
        com.android.server.blob.BlobStoreManagerShellCommand r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.blob.BlobStoreManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.blob.BlobStoreManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("BlobStore service (blob_store) commands:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("help");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("clear-all-sessions [-u | --user USER_ID]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Remove all sessions.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Options:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -u or --user: specify which user\'s sessions to be removed.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("                    If not specified, sessions in all users are removed.");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("clear-all-blobs [-u | --user USER_ID]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Remove all blobs.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Options:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -u or --user: specify which user\'s blobs to be removed.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("                    If not specified, blobs in all users are removed.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("delete-blob [-u | --user USER_ID] [--digest DIGEST] [--expiry EXPIRY_TIME] [--label LABEL] [--tag TAG]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Delete a blob.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Options:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -u or --user: specify which user\'s blobs to be removed;");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("                    If not specified, blobs in all users are removed.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --digest: Base64 encoded digest of the blob to delete.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --expiry: Expiry time of the blob to delete, in milliseconds.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --label: Label of the blob to delete.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --tag: Tag of the blob to delete.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("idle-maintenance");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Run idle maintenance which takes care of removing stale data.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("query-blob-existence [-b BLOB_ID]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints 1 if blob exists, otherwise 0.");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }
}
