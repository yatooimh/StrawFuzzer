class com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl extends android.hardware.radio.IRadioService$Stub
{
    final com.android.server.broadcastradio.BroadcastRadioService this$0;

    private void <init>(com.android.server.broadcastradio.BroadcastRadioService)
    {
        com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl r0;
        com.android.server.broadcastradio.BroadcastRadioService r1;

        r0 := @this: com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl;

        r1 := @parameter0: com.android.server.broadcastradio.BroadcastRadioService;

        r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: com.android.server.broadcastradio.BroadcastRadioService this$0> = r1;

        specialinvoke r0.<android.hardware.radio.IRadioService$Stub: void <init>()>();

        return;
    }

    void <init>(com.android.server.broadcastradio.BroadcastRadioService, com.android.server.broadcastradio.BroadcastRadioService$1)
    {
        com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl r0;
        com.android.server.broadcastradio.BroadcastRadioService r1;
        com.android.server.broadcastradio.BroadcastRadioService$1 r2;

        r0 := @this: com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl;

        r1 := @parameter0: com.android.server.broadcastradio.BroadcastRadioService;

        r2 := @parameter1: com.android.server.broadcastradio.BroadcastRadioService$1;

        specialinvoke r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: void <init>(com.android.server.broadcastradio.BroadcastRadioService)>(r1);

        return;
    }

    private void enforcePolicyAccess()
    {
        com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl r0;
        com.android.server.broadcastradio.BroadcastRadioService $r1;
        android.content.Context $r2;
        int $i0;
        java.lang.SecurityException $r3;

        r0 := @this: com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl;

        $r1 = r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: com.android.server.broadcastradio.BroadcastRadioService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.broadcastradio.BroadcastRadioService: android.content.Context getContext()>();

        $i0 = virtualinvoke $r2.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.ACCESS_BROADCAST_RADIO");

        if $i0 != 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("ACCESS_BROADCAST_RADIO permission not granted");

        throw $r3;
    }

    public android.hardware.radio.ICloseHandle addAnnouncementListener(int[], android.hardware.radio.IAnnouncementListener)
    {
        com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl r0;
        android.hardware.radio.IAnnouncementListener r1;
        java.lang.Object r2;
        com.android.server.broadcastradio.BroadcastRadioService $r5, $r6, $r8;
        com.android.server.broadcastradio.hal2.BroadcastRadioService $r7, $r9;
        boolean $z0;
        java.lang.Throwable $r10;
        int[] r11;
        com.android.server.broadcastradio.hal2.AnnouncementAggregator r12;
        android.hardware.radio.ICloseHandle r13;

        r0 := @this: com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl;

        r11 := @parameter0: int[];

        r1 := @parameter1: android.hardware.radio.IAnnouncementListener;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r11);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: void enforcePolicyAccess()>();

        $r5 = r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: com.android.server.broadcastradio.BroadcastRadioService this$0>;

        r2 = staticinvoke <com.android.server.broadcastradio.BroadcastRadioService: java.lang.Object access$300(com.android.server.broadcastradio.BroadcastRadioService)>($r5);

        entermonitor r2;

     label1:
        $r6 = r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: com.android.server.broadcastradio.BroadcastRadioService this$0>;

        $r7 = staticinvoke <com.android.server.broadcastradio.BroadcastRadioService: com.android.server.broadcastradio.hal2.BroadcastRadioService access$200(com.android.server.broadcastradio.BroadcastRadioService)>($r6);

        $z0 = virtualinvoke $r7.<com.android.server.broadcastradio.hal2.BroadcastRadioService: boolean hasAnyModules()>();

        if $z0 != 0 goto label3;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BcRadioSrv", "There are no HAL 2.x modules registered");

        r12 = new com.android.server.broadcastradio.hal2.AnnouncementAggregator;

        specialinvoke r12.<com.android.server.broadcastradio.hal2.AnnouncementAggregator: void <init>(android.hardware.radio.IAnnouncementListener)>(r1);

        exitmonitor r2;

     label2:
        return r12;

     label3:
        $r8 = r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: com.android.server.broadcastradio.BroadcastRadioService this$0>;

        $r9 = staticinvoke <com.android.server.broadcastradio.BroadcastRadioService: com.android.server.broadcastradio.hal2.BroadcastRadioService access$200(com.android.server.broadcastradio.BroadcastRadioService)>($r8);

        r13 = virtualinvoke $r9.<com.android.server.broadcastradio.hal2.BroadcastRadioService: android.hardware.radio.ICloseHandle addAnnouncementListener(int[],android.hardware.radio.IAnnouncementListener)>(r11, r1);

        exitmonitor r2;

     label4:
        return r13;

     label5:
        $r10 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public java.util.List listModules()
    {
        com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl r0;
        java.util.ArrayList $r2;
        com.android.server.broadcastradio.BroadcastRadioService $r3, $r5;
        java.util.List $r4;
        com.android.server.broadcastradio.hal2.BroadcastRadioService $r6;
        java.util.Collection $r7;

        r0 := @this: com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl;

        specialinvoke r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: void enforcePolicyAccess()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: com.android.server.broadcastradio.BroadcastRadioService this$0>;

        $r4 = staticinvoke <com.android.server.broadcastradio.BroadcastRadioService: java.util.List access$100(com.android.server.broadcastradio.BroadcastRadioService)>($r3);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        $r5 = r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: com.android.server.broadcastradio.BroadcastRadioService this$0>;

        $r6 = staticinvoke <com.android.server.broadcastradio.BroadcastRadioService: com.android.server.broadcastradio.hal2.BroadcastRadioService access$200(com.android.server.broadcastradio.BroadcastRadioService)>($r5);

        $r7 = virtualinvoke $r6.<com.android.server.broadcastradio.hal2.BroadcastRadioService: java.util.Collection listModules()>();

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        return $r2;
    }

    public android.hardware.radio.ITuner openTuner(int, android.hardware.radio.RadioManager$BandConfig, boolean, android.hardware.radio.ITunerCallback) throws android.os.RemoteException
    {
        com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl r0;
        int i0;
        boolean z0, $z1;
        android.hardware.radio.ITunerCallback r1;
        java.lang.Object r2;
        java.lang.IllegalArgumentException $r3;
        com.android.server.broadcastradio.BroadcastRadioService $r4, $r5, $r7, $r9;
        com.android.server.broadcastradio.hal2.BroadcastRadioService $r6, $r10;
        com.android.server.broadcastradio.hal1.BroadcastRadioService $r8;
        java.lang.Throwable $r11;
        android.hardware.radio.RadioManager$BandConfig r12;
        android.hardware.radio.ITuner r13, r14;

        r0 := @this: com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl;

        i0 := @parameter0: int;

        r12 := @parameter1: android.hardware.radio.RadioManager$BandConfig;

        z0 := @parameter2: boolean;

        r1 := @parameter3: android.hardware.radio.ITunerCallback;

        specialinvoke r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: void enforcePolicyAccess()>();

        if r1 == null goto label8;

        $r4 = r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: com.android.server.broadcastradio.BroadcastRadioService this$0>;

        r2 = staticinvoke <com.android.server.broadcastradio.BroadcastRadioService: java.lang.Object access$300(com.android.server.broadcastradio.BroadcastRadioService)>($r4);

        entermonitor r2;

     label1:
        $r5 = r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: com.android.server.broadcastradio.BroadcastRadioService this$0>;

        $r6 = staticinvoke <com.android.server.broadcastradio.BroadcastRadioService: com.android.server.broadcastradio.hal2.BroadcastRadioService access$200(com.android.server.broadcastradio.BroadcastRadioService)>($r5);

        $z1 = virtualinvoke $r6.<com.android.server.broadcastradio.hal2.BroadcastRadioService: boolean hasModule(int)>(i0);

        if $z1 == 0 goto label3;

        $r9 = r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: com.android.server.broadcastradio.BroadcastRadioService this$0>;

        $r10 = staticinvoke <com.android.server.broadcastradio.BroadcastRadioService: com.android.server.broadcastradio.hal2.BroadcastRadioService access$200(com.android.server.broadcastradio.BroadcastRadioService)>($r9);

        r13 = virtualinvoke $r10.<com.android.server.broadcastradio.hal2.BroadcastRadioService: android.hardware.radio.ITuner openSession(int,android.hardware.radio.RadioManager$BandConfig,boolean,android.hardware.radio.ITunerCallback)>(i0, r12, z0, r1);

        exitmonitor r2;

     label2:
        return r13;

     label3:
        $r7 = r0.<com.android.server.broadcastradio.BroadcastRadioService$ServiceImpl: com.android.server.broadcastradio.BroadcastRadioService this$0>;

        $r8 = staticinvoke <com.android.server.broadcastradio.BroadcastRadioService: com.android.server.broadcastradio.hal1.BroadcastRadioService access$400(com.android.server.broadcastradio.BroadcastRadioService)>($r7);

        r14 = virtualinvoke $r8.<com.android.server.broadcastradio.hal1.BroadcastRadioService: android.hardware.radio.ITuner openTuner(int,android.hardware.radio.RadioManager$BandConfig,boolean,android.hardware.radio.ITunerCallback)>(i0, r12, z0, r1);

        exitmonitor r2;

     label4:
        return r14;

     label5:
        $r11 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r11;

     label8:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Callback must not be empty");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
