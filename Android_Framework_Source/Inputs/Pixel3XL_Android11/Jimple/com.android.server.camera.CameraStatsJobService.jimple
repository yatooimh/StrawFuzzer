public class com.android.server.camera.CameraStatsJobService extends android.app.job.JobService
{
    private static final int CAMERA_REPORTING_JOB_ID;
    private static final java.lang.String TAG;
    private static android.content.ComponentName sCameraStatsJobServiceName;

    static void <clinit>()
    {
        android.content.ComponentName $r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        <com.android.server.camera.CameraStatsJobService: java.lang.String TAG> = "CameraStatsJobService";

        <com.android.server.camera.CameraStatsJobService: int CAMERA_REPORTING_JOB_ID> = 13254266;

        $r0 = new android.content.ComponentName;

        $r1 = class "Lcom/android/server/camera/CameraStatsJobService;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", $r2);

        <com.android.server.camera.CameraStatsJobService: android.content.ComponentName sCameraStatsJobServiceName> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.server.camera.CameraStatsJobService r0;

        r0 := @this: com.android.server.camera.CameraStatsJobService;

        specialinvoke r0.<android.app.job.JobService: void <init>()>();

        return;
    }

    public static void schedule(android.content.Context)
    {
        java.lang.Object $r0;
        android.app.job.JobInfo$Builder $r1, $r4, $r5;
        android.content.ComponentName $r2;
        java.util.concurrent.TimeUnit $r3;
        long $l0;
        android.app.job.JobInfo $r6;
        android.content.Context r7;
        android.app.job.JobScheduler r8;

        r7 := @parameter0: android.content.Context;

        $r0 = virtualinvoke r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("jobscheduler");

        r8 = (android.app.job.JobScheduler) $r0;

        if r8 != null goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("CameraStatsJobService", "Can\'t collect camera usage stats - no Job Scheduler");

        return;

     label1:
        $r1 = new android.app.job.JobInfo$Builder;

        $r2 = <com.android.server.camera.CameraStatsJobService: android.content.ComponentName sCameraStatsJobServiceName>;

        specialinvoke $r1.<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>(13254266, $r2);

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;

        $l0 = virtualinvoke $r3.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L);

        $r4 = virtualinvoke $r1.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setMinimumLatency(long)>($l0);

        $r5 = virtualinvoke $r4.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresDeviceIdle(boolean)>(1);

        $r6 = virtualinvoke $r5.<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>();

        virtualinvoke r8.<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>($r6);

        return;
    }

    public boolean onStartJob(android.app.job.JobParameters)
    {
        com.android.server.camera.CameraStatsJobService r0;
        java.lang.Object $r1;
        android.app.job.JobParameters r2;
        com.android.server.camera.CameraServiceProxy r3;

        r0 := @this: com.android.server.camera.CameraStatsJobService;

        r2 := @parameter0: android.app.job.JobParameters;

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/camera/CameraServiceProxy;");

        r3 = (com.android.server.camera.CameraServiceProxy) $r1;

        if r3 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("CameraStatsJobService", "Can\'t collect camera usage stats - no camera service proxy found");

        return 0;

     label1:
        virtualinvoke r3.<com.android.server.camera.CameraServiceProxy: void dumpUsageEvents()>();

        return 0;
    }

    public boolean onStopJob(android.app.job.JobParameters)
    {
        com.android.server.camera.CameraStatsJobService r0;
        android.app.job.JobParameters r1;

        r0 := @this: com.android.server.camera.CameraStatsJobService;

        r1 := @parameter0: android.app.job.JobParameters;

        return 0;
    }
}
