public class com.android.server.clipboard.ClipboardService extends com.android.server.SystemService
{
    private static final boolean IS_EMULATOR;
    private static final java.lang.String TAG;
    private final android.app.ActivityManagerInternal mAmInternal;
    private final android.app.AppOpsManager mAppOps;
    private final android.view.autofill.AutofillManagerInternal mAutofillInternal;
    private final android.util.SparseArray mClipboards;
    private final com.android.server.contentcapture.ContentCaptureManagerInternal mContentCaptureInternal;
    private com.android.server.clipboard.HostClipboardMonitor mHostClipboardMonitor;
    private java.lang.Thread mHostMonitorThread;
    private final android.os.IBinder mPermissionOwner;
    private final android.content.pm.PackageManager mPm;
    private final android.app.IUriGrantsManager mUgm;
    private final com.android.server.uri.UriGrantsManagerInternal mUgmInternal;
    private final android.os.IUserManager mUm;
    private final com.android.server.wm.WindowManagerInternal mWm;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.clipboard.ClipboardService: java.lang.String TAG> = "ClipboardService";

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("ro.kernel.qemu", 0);

        <com.android.server.clipboard.ClipboardService: boolean IS_EMULATOR> = $z0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.clipboard.ClipboardService r0;
        android.util.SparseArray $r1;
        java.lang.Object $r2, $r5, $r7, $r14, $r16, $r18;
        android.app.ActivityManagerInternal $r3;
        android.app.IUriGrantsManager $r4;
        com.android.server.uri.UriGrantsManagerInternal $r6, $r20;
        com.android.server.wm.WindowManagerInternal $r8;
        android.content.Context $r9, $r13, r26;
        android.content.pm.PackageManager $r10;
        android.os.IBinder $r11, $r21;
        android.os.IUserManager $r12;
        android.app.AppOpsManager $r15;
        com.android.server.contentcapture.ContentCaptureManagerInternal $r17;
        android.view.autofill.AutofillManagerInternal $r19;
        boolean $z0;
        com.android.server.clipboard.HostClipboardMonitor $r22, $r25;
        com.android.server.clipboard.ClipboardService$1 $r23;
        java.lang.Thread $r24;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r26 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r26);

        r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.HostClipboardMonitor mHostClipboardMonitor> = null;

        r0.<com.android.server.clipboard.ClipboardService: java.lang.Thread mHostMonitorThread> = null;

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.clipboard.ClipboardService: android.util.SparseArray mClipboards> = $r1;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        $r3 = (android.app.ActivityManagerInternal) $r2;

        r0.<com.android.server.clipboard.ClipboardService: android.app.ActivityManagerInternal mAmInternal> = $r3;

        $r4 = staticinvoke <android.app.UriGrantsManager: android.app.IUriGrantsManager getService()>();

        r0.<com.android.server.clipboard.ClipboardService: android.app.IUriGrantsManager mUgm> = $r4;

        $r5 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/uri/UriGrantsManagerInternal;");

        $r6 = (com.android.server.uri.UriGrantsManagerInternal) $r5;

        r0.<com.android.server.clipboard.ClipboardService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal> = $r6;

        $r7 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/WindowManagerInternal;");

        $r8 = (com.android.server.wm.WindowManagerInternal) $r7;

        r0.<com.android.server.clipboard.ClipboardService: com.android.server.wm.WindowManagerInternal mWm> = $r8;

        $r9 = virtualinvoke r0.<com.android.server.clipboard.ClipboardService: android.content.Context getContext()>();

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.clipboard.ClipboardService: android.content.pm.PackageManager mPm> = $r10;

        $r11 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("user");

        $r12 = (android.os.IUserManager) $r11;

        r0.<com.android.server.clipboard.ClipboardService: android.os.IUserManager mUm> = $r12;

        $r13 = virtualinvoke r0.<com.android.server.clipboard.ClipboardService: android.content.Context getContext()>();

        $r14 = virtualinvoke $r13.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r15 = (android.app.AppOpsManager) $r14;

        r0.<com.android.server.clipboard.ClipboardService: android.app.AppOpsManager mAppOps> = $r15;

        $r16 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/contentcapture/ContentCaptureManagerInternal;");

        $r17 = (com.android.server.contentcapture.ContentCaptureManagerInternal) $r16;

        r0.<com.android.server.clipboard.ClipboardService: com.android.server.contentcapture.ContentCaptureManagerInternal mContentCaptureInternal> = $r17;

        $r18 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/view/autofill/AutofillManagerInternal;");

        $r19 = (android.view.autofill.AutofillManagerInternal) $r18;

        r0.<com.android.server.clipboard.ClipboardService: android.view.autofill.AutofillManagerInternal mAutofillInternal> = $r19;

        $r20 = r0.<com.android.server.clipboard.ClipboardService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        $r21 = interfaceinvoke $r20.<com.android.server.uri.UriGrantsManagerInternal: android.os.IBinder newUriPermissionOwner(java.lang.String)>("clipboard");

        r0.<com.android.server.clipboard.ClipboardService: android.os.IBinder mPermissionOwner> = $r21;

        $z0 = <com.android.server.clipboard.ClipboardService: boolean IS_EMULATOR>;

        if $z0 == 0 goto label1;

        $r22 = new com.android.server.clipboard.HostClipboardMonitor;

        $r23 = new com.android.server.clipboard.ClipboardService$1;

        specialinvoke $r23.<com.android.server.clipboard.ClipboardService$1: void <init>(com.android.server.clipboard.ClipboardService)>(r0);

        specialinvoke $r22.<com.android.server.clipboard.HostClipboardMonitor: void <init>(com.android.server.clipboard.HostClipboardMonitor$HostClipboardCallback)>($r23);

        r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.HostClipboardMonitor mHostClipboardMonitor> = $r22;

        $r24 = new java.lang.Thread;

        $r25 = r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.HostClipboardMonitor mHostClipboardMonitor>;

        specialinvoke $r24.<java.lang.Thread: void <init>(java.lang.Runnable)>($r25);

        r0.<com.android.server.clipboard.ClipboardService: java.lang.Thread mHostMonitorThread> = $r24;

        virtualinvoke $r24.<java.lang.Thread: void start()>();

     label1:
        return;
    }

    static android.util.SparseArray access$000(com.android.server.clipboard.ClipboardService)
    {
        com.android.server.clipboard.ClipboardService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.clipboard.ClipboardService;

        $r1 = r0.<com.android.server.clipboard.ClipboardService: android.util.SparseArray mClipboards>;

        return $r1;
    }

    static com.android.server.clipboard.ClipboardService$PerUserClipboard access$100(com.android.server.clipboard.ClipboardService, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;
        com.android.server.clipboard.ClipboardService$PerUserClipboard $r1;

        r0 := @parameter0: com.android.server.clipboard.ClipboardService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard(int)>(i0);

        return $r1;
    }

    static int access$300(com.android.server.clipboard.ClipboardService, java.lang.String, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        java.lang.String r1;
        int i0, $i1;

        r0 := @parameter0: com.android.server.clipboard.ClipboardService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: int getIntendingUid(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    static boolean access$400(com.android.server.clipboard.ClipboardService, int, java.lang.String, int, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0, i1, i2;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.clipboard.ClipboardService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z0 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: boolean clipboardAccessAllowed(int,java.lang.String,int,int)>(i0, r1, i1, i2);

        return $z0;
    }

    static void access$500(com.android.server.clipboard.ClipboardService, android.content.ClipData, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        android.content.ClipData r1;
        int i0;

        r0 := @parameter0: com.android.server.clipboard.ClipboardService;

        r1 := @parameter1: android.content.ClipData;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void checkDataOwnerLocked(android.content.ClipData,int)>(r1, i0);

        return;
    }

    static boolean access$600(com.android.server.clipboard.ClipboardService, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.clipboard.ClipboardService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: boolean isDeviceLocked(int)>(i0);

        return $z0;
    }

    static void access$700(com.android.server.clipboard.ClipboardService, int, java.lang.String)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.clipboard.ClipboardService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void addActiveOwnerLocked(int,java.lang.String)>(i0, r1);

        return;
    }

    static boolean access$800(com.android.server.clipboard.ClipboardService, int, java.lang.String, int, int, boolean)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0, i1, i2;
        java.lang.String r1;
        boolean z0, $z1;

        r0 := @parameter0: com.android.server.clipboard.ClipboardService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        $z1 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: boolean clipboardAccessAllowed(int,java.lang.String,int,int,boolean)>(i0, r1, i1, i2, z0);

        return $z1;
    }

    static int access$900(com.android.server.clipboard.ClipboardService, java.lang.String, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        java.lang.String r1;
        int i0, $i1;

        r0 := @parameter0: com.android.server.clipboard.ClipboardService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: int getIntendingUserId(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    private final void addActiveOwnerLocked(int, java.lang.String)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0, i2, $i3, $i4, $i5, $i6, i7, i8;
        long l1;
        java.lang.String $r3, $r9, r18;
        android.content.pm.ApplicationInfo $r4;
        boolean $z0, $z1;
        android.content.ClipData $r10, $r12, $r14;
        java.util.HashSet $r11, $r13;
        android.content.ClipData$Item $r15;
        android.os.RemoteException $r16;
        java.lang.Throwable $r17;
        android.content.pm.IPackageManager r19;
        android.content.pm.PackageInfo r20;
        java.lang.SecurityException r21;
        java.lang.StringBuilder r22, r24;
        java.lang.IllegalArgumentException r23;
        com.android.server.clipboard.ClipboardService$PerUserClipboard r27;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        i0 := @parameter0: int;

        r18 := @parameter1: java.lang.String;

        r19 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        i7 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r20 = interfaceinvoke r19.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r18, 0, i7);

     label02:
        if r20 == null goto label06;

     label03:
        $r4 = r20.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r4.<android.content.pm.ApplicationInfo: int uid>;

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i3, i0);

        if $z0 == 0 goto label05;

     label04:
        goto label09;

     label05:
        r21 = new java.lang.SecurityException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not own package ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r9 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.lang.SecurityException: void <init>(java.lang.String)>($r9);

        throw r21;

     label06:
        r23 = new java.lang.IllegalArgumentException;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r3 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw r23;

     label07:
        $r17 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r17;

     label08:
        $r16 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        r27 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard(int)>($i4);

        $r10 = r27.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        if $r10 == null goto label12;

        $r11 = r27.<com.android.server.clipboard.ClipboardService$PerUserClipboard: java.util.HashSet activePermissionOwners>;

        $z1 = virtualinvoke $r11.<java.util.HashSet: boolean contains(java.lang.Object)>(r18);

        if $z1 != 0 goto label12;

        $r12 = r27.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        i2 = virtualinvoke $r12.<android.content.ClipData: int getItemCount()>();

        i8 = 0;

     label10:
        if i8 >= i2 goto label11;

        $r14 = r27.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        $r15 = virtualinvoke $r14.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i8);

        $i5 = r27.<com.android.server.clipboard.ClipboardService$PerUserClipboard: int primaryClipUid>;

        $i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void grantItemLocked(android.content.ClipData$Item,int,java.lang.String,int)>($r15, $i5, r18, $i6);

        i8 = i8 + 1;

        goto label10;

     label11:
        $r13 = r27.<com.android.server.clipboard.ClipboardService$PerUserClipboard: java.util.HashSet activePermissionOwners>;

        virtualinvoke $r13.<java.util.HashSet: boolean add(java.lang.Object)>(r18);

     label12:
        return;

        catch android.os.RemoteException from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch android.os.RemoteException from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label07;
    }

    private final void checkDataOwnerLocked(android.content.ClipData, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        android.content.ClipData r1;
        int i0, i1, i2;
        android.content.ClipData$Item $r2;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: android.content.ClipData;

        i0 := @parameter1: int;

        i1 = virtualinvoke r1.<android.content.ClipData: int getItemCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = virtualinvoke r1.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i2);

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void checkItemOwnerLocked(android.content.ClipData$Item,int)>($r2, i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private final void checkItemOwnerLocked(android.content.ClipData$Item, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;
        android.net.Uri $r1, $r2, $r3, $r4;
        android.content.ClipData$Item r5;
        android.content.Intent r6;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r5 := @parameter0: android.content.ClipData$Item;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r5.<android.content.ClipData$Item: android.net.Uri getUri()>();

        if $r1 == null goto label1;

        $r4 = virtualinvoke r5.<android.content.ClipData$Item: android.net.Uri getUri()>();

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void checkUriOwnerLocked(android.net.Uri,int)>($r4, i0);

     label1:
        r6 = virtualinvoke r5.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        if r6 == null goto label2;

        $r2 = virtualinvoke r6.<android.content.Intent: android.net.Uri getData()>();

        if $r2 == null goto label2;

        $r3 = virtualinvoke r6.<android.content.Intent: android.net.Uri getData()>();

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void checkUriOwnerLocked(android.net.Uri,int)>($r3, i0);

     label2:
        return;
    }

    private final void checkUriOwnerLocked(android.net.Uri, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0, $i2, $i3;
        long l1;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.android.server.uri.UriGrantsManagerInternal $r3;
        android.net.Uri $r4, r6;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r6 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        if r6 == null goto label5;

        $r1 = "content";

        $r2 = virtualinvoke r6.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        goto label5;

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r3 = r0.<com.android.server.clipboard.ClipboardService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        $r4 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r6);

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i3 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r6, $i2);

        interfaceinvoke $r3.<com.android.server.uri.UriGrantsManagerInternal: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int,int)>(i0, null, $r4, 1, $i3);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label4:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private boolean clipboardAccessAllowed(int, java.lang.String, int, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0, i1, i2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z0 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: boolean clipboardAccessAllowed(int,java.lang.String,int,int,boolean)>(i0, r1, i1, i2, 1);

        return $z0;
    }

    private boolean clipboardAccessAllowed(int, java.lang.String, int, int, boolean)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0, i1, $i2, i4, i5;
        android.app.AppOpsManager $r1, $r5, $r6;
        android.content.pm.PackageManager $r2;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        boolean $z1, $z2, $z3, $z4, z5, z6, z7, z8, z9, z10, z11;
        java.lang.StringBuilder $r7, $r14;
        java.lang.String $r12, $r18, $r20, r21, r22;
        com.android.server.wm.WindowManagerInternal $r13;
        java.lang.IllegalArgumentException $r17;
        android.content.ComponentName $r19;
        com.android.server.contentcapture.ContentCaptureManagerInternal r24;
        android.view.autofill.AutofillManagerInternal r25;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        i4 := @parameter0: int;

        r21 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z5 := @parameter4: boolean;

        z6 = 0;

        $r1 = r0.<com.android.server.clipboard.ClipboardService: android.app.AppOpsManager mAppOps>;

        virtualinvoke $r1.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>(i0, r21);

        $r2 = r0.<com.android.server.clipboard.ClipboardService: android.content.pm.PackageManager mPm>;

        $i2 = virtualinvoke $r2.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.READ_CLIPBOARD_IN_BACKGROUND", r21);

        if $i2 != 0 goto label01;

        z6 = 1;

     label01:
        $r3 = virtualinvoke r0.<com.android.server.clipboard.ClipboardService: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r22 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r4, "default_input_method", i1);

        z7 = z6;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r22);

        if $z1 != 0 goto label02;

        z7 = z6;

        $r19 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r22);

        $r20 = virtualinvoke $r19.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z4 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r21);

        if $z4 == 0 goto label02;

        z7 = 1;

     label02:
        if i4 == 29 goto label04;

        if i4 != 30 goto label03;

        z8 = 1;

        goto label09;

     label03:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown clipboard appop ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label04:
        z9 = z7;

        if z7 != 0 goto label07;

        $r13 = r0.<com.android.server.clipboard.ClipboardService: com.android.server.wm.WindowManagerInternal mWm>;

        $z2 = virtualinvoke $r13.<com.android.server.wm.WindowManagerInternal: boolean isUidFocused(int)>(i0);

        if $z2 != 0 goto label06;

        $z3 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: boolean isInternalSysWindowAppWithWindowFocus(java.lang.String)>(r21);

        if $z3 == 0 goto label05;

        goto label06;

     label05:
        z9 = 0;

        goto label07;

     label06:
        z9 = 1;

     label07:
        z10 = z9;

        if z9 != 0 goto label08;

        r24 = r0.<com.android.server.clipboard.ClipboardService: com.android.server.contentcapture.ContentCaptureManagerInternal mContentCaptureInternal>;

        z10 = z9;

        if r24 == null goto label08;

        z10 = virtualinvoke r24.<com.android.server.contentcapture.ContentCaptureManagerInternal: boolean isContentCaptureServiceForUser(int,int)>(i0, i1);

     label08:
        z8 = z10;

        if z10 != 0 goto label09;

        r25 = r0.<com.android.server.clipboard.ClipboardService: android.view.autofill.AutofillManagerInternal mAutofillInternal>;

        z8 = z10;

        if r25 == null goto label09;

        z8 = virtualinvoke r25.<android.view.autofill.AutofillManagerInternal: boolean isAugmentedAutofillServiceForUser(int,int)>(i0, i1);

     label09:
        if z8 != 0 goto label10;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Denying clipboard access to ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", application is not in focus nor is it a system service for user ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ClipboardService", $r12);

        return 0;

     label10:
        if z5 == 0 goto label11;

        $r6 = r0.<com.android.server.clipboard.ClipboardService: android.app.AppOpsManager mAppOps>;

        i5 = virtualinvoke $r6.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(i4, i0, r21);

        goto label12;

     label11:
        $r5 = r0.<com.android.server.clipboard.ClipboardService: android.app.AppOpsManager mAppOps>;

        i5 = virtualinvoke $r5.<android.app.AppOpsManager: int checkOp(int,int,java.lang.String)>(i4, i0, r21);

     label12:
        if i5 != 0 goto label13;

        z11 = 1;

        goto label14;

     label13:
        z11 = 0;

     label14:
        return z11;
    }

    private com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard(int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;
        android.util.SparseArray r1, $r3, $r5;
        com.android.server.clipboard.ClipboardService$PerUserClipboard r2, r7;
        java.lang.Object $r4;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.clipboard.ClipboardService: android.util.SparseArray mClipboards>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.clipboard.ClipboardService: android.util.SparseArray mClipboards>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.clipboard.ClipboardService$PerUserClipboard) $r4;

     label2:
        r7 = r2;

        if r2 != null goto label5;

     label3:
        r7 = new com.android.server.clipboard.ClipboardService$PerUserClipboard;

        specialinvoke r7.<com.android.server.clipboard.ClipboardService$PerUserClipboard: void <init>(com.android.server.clipboard.ClipboardService,int)>(r0, i0);

     label4:
        $r5 = r0.<com.android.server.clipboard.ClipboardService: android.util.SparseArray mClipboards>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r7);

     label5:
        exitmonitor r1;

     label6:
        return r7;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private int getIntendingUid(java.lang.String, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: int getIntendingUserId(java.lang.String,int)>(r1, i0);

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i2);

        $i4 = staticinvoke <android.os.UserHandle: int getUid(int,int)>($i1, $i3);

        return $i4;
    }

    private int getIntendingUserId(java.lang.String, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        android.app.ActivityManagerInternal $r2;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        $z0 = staticinvoke <android.os.UserManager: boolean supportsMultipleUsers()>();

        if $z0 == 0 goto label2;

        if i1 != i0 goto label1;

        goto label2;

     label1:
        $r2 = r0.<com.android.server.clipboard.ClipboardService: android.app.ActivityManagerInternal mAmInternal>;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i5 = virtualinvoke $r2.<android.app.ActivityManagerInternal: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i3, $i4, i0, 0, 2, "checkClipboardServiceCallingUser", r1);

        return $i5;

     label2:
        return i1;
    }

    private final void grantItemLocked(android.content.ClipData$Item, int, java.lang.String, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0, i1;
        java.lang.String r1;
        android.net.Uri $r2, $r3, $r4, $r5;
        android.content.ClipData$Item r6;
        android.content.Intent r7;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r6 := @parameter0: android.content.ClipData$Item;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        $r2 = virtualinvoke r6.<android.content.ClipData$Item: android.net.Uri getUri()>();

        if $r2 == null goto label1;

        $r5 = virtualinvoke r6.<android.content.ClipData$Item: android.net.Uri getUri()>();

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void grantUriLocked(android.net.Uri,int,java.lang.String,int)>($r5, i0, r1, i1);

     label1:
        r7 = virtualinvoke r6.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        if r7 == null goto label2;

        $r3 = virtualinvoke r7.<android.content.Intent: android.net.Uri getData()>();

        if $r3 == null goto label2;

        $r4 = virtualinvoke r7.<android.content.Intent: android.net.Uri getData()>();

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void grantUriLocked(android.net.Uri,int,java.lang.String,int)>($r4, i0, r1, i1);

     label2:
        return;
    }

    private final void grantUriLocked(android.net.Uri, int, java.lang.String, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0, i1, $i3, $i4;
        java.lang.String r1, $r2, $r3;
        long l2;
        boolean $z0;
        android.app.IUriGrantsManager $r4;
        android.os.IBinder $r5;
        android.net.Uri $r6, r9;
        android.os.RemoteException $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r9 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        if r9 == null goto label7;

        $r2 = "content";

        $r3 = virtualinvoke r9.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        goto label7;

     label1:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r4 = r0.<com.android.server.clipboard.ClipboardService: android.app.IUriGrantsManager mUgm>;

        $r5 = r0.<com.android.server.clipboard.ClipboardService: android.os.IBinder mPermissionOwner>;

        $r6 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r9);

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i4 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r9, $i3);

        interfaceinvoke $r4.<android.app.IUriGrantsManager: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>($r5, i0, r1, $r6, 1, $i4, i1);

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r8;

     label5:
        $r7 := @caughtexception;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label7:
        return;

        catch android.os.RemoteException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private boolean hasRestriction(java.lang.String, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;
        boolean z0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<com.android.server.clipboard.ClipboardService: android.os.IUserManager mUm>;

        z0 = interfaceinvoke $r1.<android.os.IUserManager: boolean hasUserRestriction(java.lang.String,int)>(r3, i0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ClipboardService", "Remote Exception calling UserManager.getUserRestrictions: ", $r2);

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private boolean isDeviceLocked(int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;
        long l1;
        android.content.Context $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        android.app.KeyguardManager r4;
        boolean z0, z1;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = virtualinvoke r0.<com.android.server.clipboard.ClipboardService: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/KeyguardManager;");

        r4 = (android.app.KeyguardManager) $r2;

     label2:
        if r4 == null goto label5;

     label3:
        z0 = virtualinvoke r4.<android.app.KeyguardManager: boolean isDeviceLocked(int)>(i0);

     label4:
        if z0 == 0 goto label5;

        z1 = 1;

        goto label6;

     label5:
        z1 = 0;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z1;

     label7:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    private boolean isInternalSysWindowAppWithWindowFocus(java.lang.String)
    {
        com.android.server.clipboard.ClipboardService r0;
        java.lang.String r1;
        android.content.pm.PackageManager $r2;
        int $i0, $i1;
        com.android.server.wm.WindowManagerInternal $r3;
        boolean $z0;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.clipboard.ClipboardService: android.content.pm.PackageManager mPm>;

        $i0 = virtualinvoke $r2.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.INTERNAL_SYSTEM_WINDOW", r1);

        if $i0 != 0 goto label1;

        $r3 = r0.<com.android.server.clipboard.ClipboardService: com.android.server.wm.WindowManagerInternal mWm>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = virtualinvoke $r3.<com.android.server.wm.WindowManagerInternal: boolean isUidFocused(int)>($i1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final void revokeItemLocked(android.content.ClipData$Item, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;
        android.net.Uri $r1, $r2, $r3, $r4;
        android.content.ClipData$Item r5;
        android.content.Intent r6;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r5 := @parameter0: android.content.ClipData$Item;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r5.<android.content.ClipData$Item: android.net.Uri getUri()>();

        if $r1 == null goto label1;

        $r4 = virtualinvoke r5.<android.content.ClipData$Item: android.net.Uri getUri()>();

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void revokeUriLocked(android.net.Uri,int)>($r4, i0);

     label1:
        r6 = virtualinvoke r5.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        if r6 == null goto label2;

        $r2 = virtualinvoke r6.<android.content.Intent: android.net.Uri getData()>();

        if $r2 == null goto label2;

        $r3 = virtualinvoke r6.<android.content.Intent: android.net.Uri getData()>();

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void revokeUriLocked(android.net.Uri,int)>($r3, i0);

     label2:
        return;
    }

    private final void revokeUriLocked(android.net.Uri, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0, $i2, $i3;
        long l1;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.android.server.uri.UriGrantsManagerInternal $r3;
        android.os.IBinder $r4;
        android.net.Uri $r5, r7;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r7 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        if r7 == null goto label5;

        $r1 = "content";

        $r2 = virtualinvoke r7.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        goto label5;

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r3 = r0.<com.android.server.clipboard.ClipboardService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        $r4 = r0.<com.android.server.clipboard.ClipboardService: android.os.IBinder mPermissionOwner>;

        $r5 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r7);

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i3 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r7, $i2);

        interfaceinvoke $r3.<com.android.server.uri.UriGrantsManagerInternal: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>($r4, $r5, 1, $i3);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label4:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private final void revokeUris(com.android.server.clipboard.ClipboardService$PerUserClipboard)
    {
        com.android.server.clipboard.ClipboardService r0;
        com.android.server.clipboard.ClipboardService$PerUserClipboard r1;
        int i0, $i1, i2;
        android.content.ClipData $r2, $r3, $r4;
        android.content.ClipData$Item $r5;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: com.android.server.clipboard.ClipboardService$PerUserClipboard;

        $r2 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        i0 = virtualinvoke $r3.<android.content.ClipData: int getItemCount()>();

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $r4 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        $r5 = virtualinvoke $r4.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i2);

        $i1 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: int primaryClipUid>;

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void revokeItemLocked(android.content.ClipData$Item,int)>($r5, $i1);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    java.util.List getRelatedProfiles(int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;
        long l1;
        java.lang.StringBuilder r1;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        java.util.List r8;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.clipboard.ClipboardService: android.os.IUserManager mUm>;

        r8 = interfaceinvoke $r2.<android.os.IUserManager: java.util.List getProfiles(int,boolean)>(i0, 1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r8;

     label3:
        $r7 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote Exception calling UserManager: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ClipboardService", $r6);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return null;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public void onCleanupUser(int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;
        android.util.SparseArray r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.clipboard.ClipboardService: android.util.SparseArray mClipboards>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.clipboard.ClipboardService: android.util.SparseArray mClipboards>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onStart()
    {
        com.android.server.clipboard.ClipboardService r0;
        com.android.server.clipboard.ClipboardService$ClipboardImpl $r1;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        $r1 = new com.android.server.clipboard.ClipboardService$ClipboardImpl;

        specialinvoke $r1.<com.android.server.clipboard.ClipboardService$ClipboardImpl: void <init>(com.android.server.clipboard.ClipboardService,com.android.server.clipboard.ClipboardService$1)>(r0, null);

        virtualinvoke r0.<com.android.server.clipboard.ClipboardService: void publishBinderService(java.lang.String,android.os.IBinder)>("clipboard", $r1);

        return;
    }

    void setPrimaryClipInternal(android.content.ClipData, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0, i1, i2, i3, $i4, $i5, i6, i7;
        boolean $z0, $z1, $z2, $z3;
        android.content.ClipData $r1, r10;
        java.lang.Object $r2;
        android.content.pm.UserInfo $r3;
        com.android.server.clipboard.ClipboardService$PerUserClipboard $r4, $r13;
        android.content.ClipData$Item $r5, $r6, $r7;
        com.android.server.clipboard.HostClipboardMonitor $r8, r11;
        java.lang.String $r9;
        java.lang.CharSequence r12;
        java.util.List r14;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r10 := @parameter0: android.content.ClipData;

        i0 := @parameter1: int;

        r11 = r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.HostClipboardMonitor mHostClipboardMonitor>;

        if r11 == null goto label02;

        if r10 != null goto label01;

        virtualinvoke r11.<com.android.server.clipboard.HostClipboardMonitor: void setHostClipboard(java.lang.String)>("");

        goto label02;

     label01:
        $i5 = virtualinvoke r10.<android.content.ClipData: int getItemCount()>();

        if $i5 <= 0 goto label02;

        $r7 = virtualinvoke r10.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(0);

        r12 = virtualinvoke $r7.<android.content.ClipData$Item: java.lang.CharSequence getText()>();

        if r12 == null goto label02;

        $r8 = r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.HostClipboardMonitor mHostClipboardMonitor>;

        $r9 = interfaceinvoke r12.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke $r8.<com.android.server.clipboard.HostClipboardMonitor: void setHostClipboard(java.lang.String)>($r9);

     label02:
        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r13 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard(int)>(i1);

        virtualinvoke r0.<com.android.server.clipboard.ClipboardService: void setPrimaryClipInternal(com.android.server.clipboard.ClipboardService$PerUserClipboard,android.content.ClipData,int)>($r13, r10, i0);

        r14 = virtualinvoke r0.<com.android.server.clipboard.ClipboardService: java.util.List getRelatedProfiles(int)>(i1);

        if r14 == null goto label10;

        i2 = interfaceinvoke r14.<java.util.List: int size()>();

        if i2 <= 1 goto label10;

        $z0 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: boolean hasRestriction(java.lang.String,int)>("no_cross_profile_copy_paste", i1);

        $z1 = $z0 ^ 1;

        if $z1 != 0 goto label03;

        r10 = null;

        goto label07;

     label03:
        if r10 != null goto label04;

        goto label07;

     label04:
        $r1 = new android.content.ClipData;

        specialinvoke $r1.<android.content.ClipData: void <init>(android.content.ClipData)>(r10);

        r10 = $r1;

        $i4 = virtualinvoke $r1.<android.content.ClipData: int getItemCount()>();

        i6 = $i4 - 1;

     label05:
        if i6 < 0 goto label06;

        $r5 = new android.content.ClipData$Item;

        $r6 = virtualinvoke $r1.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i6);

        specialinvoke $r5.<android.content.ClipData$Item: void <init>(android.content.ClipData$Item)>($r6);

        virtualinvoke $r1.<android.content.ClipData: void setItemAt(int,android.content.ClipData$Item)>(i6, $r5);

        i6 = i6 + -1;

        goto label05;

     label06:
        virtualinvoke $r1.<android.content.ClipData: void fixUrisLight(int)>(i1);

     label07:
        i7 = 0;

     label08:
        if i7 >= i2 goto label10;

        $r2 = interfaceinvoke r14.<java.util.List: java.lang.Object get(int)>(i7);

        $r3 = (android.content.pm.UserInfo) $r2;

        i3 = $r3.<android.content.pm.UserInfo: int id>;

        if i3 == i1 goto label09;

        $z2 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: boolean hasRestriction(java.lang.String,int)>("no_sharing_into_profile", i3);

        $z3 = $z2 ^ 1;

        if $z3 == 0 goto label09;

        $r4 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard(int)>(i3);

        virtualinvoke r0.<com.android.server.clipboard.ClipboardService: void setPrimaryClipInternal(com.android.server.clipboard.ClipboardService$PerUserClipboard,android.content.ClipData,int)>($r4, r10, i0);

     label09:
        i7 = i7 + 1;

        goto label08;

     label10:
        return;
    }

    void setPrimaryClipInternal(com.android.server.clipboard.ClipboardService$PerUserClipboard, android.content.ClipData, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        com.android.server.clipboard.ClipboardService$PerUserClipboard r1;
        long l0, $l5;
        int i1, $i2, $i3, $i4, i6, i7;
        java.util.HashSet $r2;
        android.os.RemoteCallbackList $r3, $r4, $r7, $r12, $r16;
        java.lang.Object $r5;
        java.lang.String $r6;
        boolean $z0;
        android.os.IInterface $r8;
        android.content.IOnPrimaryClipChangedListener $r9;
        android.content.ClipData $r10, r14;
        java.lang.Throwable $r11;
        android.os.RemoteException $r13;
        android.content.ClipDescription r15;
        com.android.server.clipboard.ClipboardService$ListenerInfo r17;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: com.android.server.clipboard.ClipboardService$PerUserClipboard;

        r14 := @parameter1: android.content.ClipData;

        i6 := @parameter2: int;

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void revokeUris(com.android.server.clipboard.ClipboardService$PerUserClipboard)>(r1);

        $r2 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: java.util.HashSet activePermissionOwners>;

        virtualinvoke $r2.<java.util.HashSet: void clear()>();

        if r14 != null goto label01;

        $r10 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        if $r10 != null goto label01;

        return;

     label01:
        r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip> = r14;

        if r14 == null goto label02;

        r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: int primaryClipUid> = i6;

        goto label03;

     label02:
        r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: int primaryClipUid> = 9999;

     label03:
        if r14 == null goto label04;

        r15 = virtualinvoke r14.<android.content.ClipData: android.content.ClipDescription getDescription()>();

        if r15 == null goto label04;

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r15.<android.content.ClipDescription: void setTimestamp(long)>($l5);

     label04:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r16 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.os.RemoteCallbackList primaryClipListeners>;

        i1 = virtualinvoke $r16.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i7 = 0;

     label05:
        if i7 >= i1 goto label11;

     label06:
        $r4 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.os.RemoteCallbackList primaryClipListeners>;

        $r5 = virtualinvoke $r4.<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>(i7);

        r17 = (com.android.server.clipboard.ClipboardService$ListenerInfo) $r5;

        $r6 = r17.<com.android.server.clipboard.ClipboardService$ListenerInfo: java.lang.String mPackageName>;

        $i3 = r17.<com.android.server.clipboard.ClipboardService$ListenerInfo: int mUid>;

        $i2 = r17.<com.android.server.clipboard.ClipboardService$ListenerInfo: int mUid>;

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        $z0 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: boolean clipboardAccessAllowed(int,java.lang.String,int,int)>(29, $r6, $i3, $i4);

        if $z0 == 0 goto label07;

        $r7 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.os.RemoteCallbackList primaryClipListeners>;

        $r8 = virtualinvoke $r7.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i7);

        $r9 = (android.content.IOnPrimaryClipChangedListener) $r8;

        interfaceinvoke $r9.<android.content.IOnPrimaryClipChangedListener: void dispatchPrimaryClipChanged()>();

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

        $r12 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.os.RemoteCallbackList primaryClipListeners>;

        virtualinvoke $r12.<android.os.RemoteCallbackList: void finishBroadcast()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r11;

     label09:
        $r13 := @caughtexception;

     label10:
        i7 = i7 + 1;

        goto label05;

     label11:
        $r3 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.os.RemoteCallbackList primaryClipListeners>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

        catch android.os.RemoteException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
    }
}
