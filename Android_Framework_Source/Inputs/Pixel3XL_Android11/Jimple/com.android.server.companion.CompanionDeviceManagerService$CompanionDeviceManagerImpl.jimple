class com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl extends android.companion.ICompanionDeviceManager$Stub
{
    final com.android.server.companion.CompanionDeviceManagerService this$0;

    void <init>(com.android.server.companion.CompanionDeviceManagerService)
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        com.android.server.companion.CompanionDeviceManagerService r1;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r1 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0> = r1;

        specialinvoke r0.<android.companion.ICompanionDeviceManager$Stub: void <init>()>();

        return;
    }

    private boolean callerCanManageCompanionDevices()
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        com.android.server.companion.CompanionDeviceManagerService $r1;
        android.content.Context $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        $r1 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.companion.CompanionDeviceManagerService: android.content.Context getContext()>();

        $i0 = virtualinvoke $r2.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.MANAGE_COMPANION_DEVICES");

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void checkCallerIsSystemOr(java.lang.String) throws android.os.RemoteException
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: int access$300()>();

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: void checkCallerIsSystemOr(java.lang.String,int)>(r1, $i0);

        return;
    }

    private void checkCallerIsSystemOr(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        boolean $z0, z1;
        com.android.server.companion.CompanionDeviceManagerService $r2;
        com.android.internal.app.IAppOpsService $r3;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: boolean access$1000()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $i1 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: int access$300()>();

        if $i1 != i0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z1, "Must be called by either same user or system");

        $r2 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r3 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: com.android.internal.app.IAppOpsService access$1100(com.android.server.companion.CompanionDeviceManagerService)>($r2);

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        interfaceinvoke $r3.<com.android.internal.app.IAppOpsService: int checkPackage(int,java.lang.String)>($i2, r1);

        return;
    }

    private void checkCanCallNotificationApi(java.lang.String) throws android.os.RemoteException
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        java.lang.String r1;
        int i0;
        com.android.server.companion.CompanionDeviceManagerService $r2;
        java.util.Set $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: void checkCallerIsSystemOr(java.lang.String)>(r1);

        i0 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: int access$300()>();

        $r2 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r3 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: java.util.Set access$100(com.android.server.companion.CompanionDeviceManagerService,int,java.lang.String)>($r2, i0, r1);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.util.Collection)>($r3);

        $z1 = $z0 ^ 1;

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "App must have an association before calling this API");

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: void checkUsesFeature(java.lang.String,int)>(r1, i0);

        return;
    }

    private void checkUsesFeature(java.lang.String, int)
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        int i0, i1, i2;
        boolean $z0, $z1;
        com.android.server.companion.CompanionDeviceManagerService $r1;
        android.content.pm.PackageInfo $r2;
        java.lang.StringBuilder $r3;
        java.lang.IllegalStateException $r7;
        java.lang.String $r8, $r10, $r11, r12;
        android.content.pm.FeatureInfo $r9;
        android.content.pm.FeatureInfo[] r13;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r12 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $z0 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: boolean access$1000()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r2 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: android.content.pm.PackageInfo access$1200(com.android.server.companion.CompanionDeviceManagerService,java.lang.String,int)>($r1, r12, i1);

        r13 = $r2.<android.content.pm.PackageInfo: android.content.pm.FeatureInfo[] reqFeatures>;

        i0 = staticinvoke <com.android.internal.util.ArrayUtils: int size(java.lang.Object[])>(r13);

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $r11 = "android.software.companion_device_setup";

        $r9 = r13[i2];

        $r10 = $r9.<android.content.pm.FeatureInfo: java.lang.String name>;

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label3;

        return;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must declare uses-feature ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.software.companion_device_setup");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in manifest to use this API");

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    static java.util.concurrent.CompletableFuture lambda$associate$0(android.companion.AssociationRequest, java.lang.String, android.companion.IFindDeviceCallback, android.companion.ICompanionDeviceDiscoveryService) throws java.lang.Exception
    {
        android.companion.AssociationRequest r0;
        java.lang.String r1;
        android.companion.IFindDeviceCallback r2;
        android.companion.ICompanionDeviceDiscoveryService r3;
        com.android.internal.infra.AndroidFuture $r5;

        r0 := @parameter0: android.companion.AssociationRequest;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.companion.IFindDeviceCallback;

        r3 := @parameter3: android.companion.ICompanionDeviceDiscoveryService;

        $r5 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r5.<com.android.internal.infra.AndroidFuture: void <init>()>();

        interfaceinvoke r3.<android.companion.ICompanionDeviceDiscoveryService: void startDiscovery(android.companion.AssociationRequest,java.lang.String,android.companion.IFindDeviceCallback,com.android.internal.infra.AndroidFuture)>(r0, r1, r2, $r5);

        return $r5;
    }

    static java.lang.String lambda$getAssociations$2(android.companion.Association)
    {
        android.companion.Association r0;
        java.lang.String $r1;

        r0 := @parameter0: android.companion.Association;

        $r1 = r0.<android.companion.Association: java.lang.String deviceAddress>;

        return $r1;
    }

    static boolean lambda$isDeviceAssociatedForWifiConnection$3(java.lang.String, android.companion.Association)
    {
        java.lang.String r0, $r2;
        android.companion.Association r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.companion.Association;

        $r2 = r1.<android.companion.Association: java.lang.String deviceAddress>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, r0);

        return $z0;
    }

    public void associate(android.companion.AssociationRequest, android.companion.IFindDeviceCallback, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        android.companion.IFindDeviceCallback r1;
        int i0;
        long l1;
        com.android.server.companion.CompanionDeviceManagerService r2, $r7, $r9, $r11, $r14, $r15;
        com.android.internal.infra.ServiceConnector r3;
        com.android.server.companion._$$Lambda$CompanionDeviceManagerService$CompanionDeviceManagerImpl$m9NLTVY7N8yX_cTeQGMddCEpCU0 r4;
        android.os.IBinder $r13;
        com.android.internal.infra.PerUser $r16;
        java.lang.Object $r17;
        java.util.function.BiConsumer $r18;
        com.android.internal.infra.AndroidFuture $r19, r24;
        java.lang.Throwable $r21;
        android.companion.AssociationRequest r22;
        java.lang.String r23;
        com.android.server.companion._$$Lambda$CompanionDeviceManagerService$CompanionDeviceManagerImpl$oYSpdTmzLHvD4Kqu1cDfzfZuvwo r25;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r22 := @parameter0: android.companion.AssociationRequest;

        r1 := @parameter1: android.companion.IFindDeviceCallback;

        r23 := @parameter2: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r22, "Request cannot be null");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Callback cannot be null");

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: void checkCallerIsSystemOr(java.lang.String)>(r23);

        i0 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: int access$300()>();

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: void checkUsesFeature(java.lang.String,int)>(r23, i0);

        $r7 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        staticinvoke <com.android.server.companion.CompanionDeviceManagerService: android.companion.IFindDeviceCallback access$402(com.android.server.companion.CompanionDeviceManagerService,android.companion.IFindDeviceCallback)>($r7, r1);

        $r9 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        staticinvoke <com.android.server.companion.CompanionDeviceManagerService: android.companion.AssociationRequest access$502(com.android.server.companion.CompanionDeviceManagerService,android.companion.AssociationRequest)>($r9, r22);

        $r11 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        staticinvoke <com.android.server.companion.CompanionDeviceManagerService: java.lang.String access$602(com.android.server.companion.CompanionDeviceManagerService,java.lang.String)>($r11, r23);

        $r13 = interfaceinvoke r1.<android.companion.IFindDeviceCallback: android.os.IBinder asBinder()>();

        $r14 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        interfaceinvoke $r13.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r14, 0);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r15 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r16 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: com.android.internal.infra.PerUser access$800(com.android.server.companion.CompanionDeviceManagerService)>($r15);

        $r17 = virtualinvoke $r16.<com.android.internal.infra.PerUser: java.lang.Object forUser(int)>(i0);

        r3 = (com.android.internal.infra.ServiceConnector) $r17;

        r4 = new com.android.server.companion._$$Lambda$CompanionDeviceManagerService$CompanionDeviceManagerImpl$m9NLTVY7N8yX_cTeQGMddCEpCU0;

        specialinvoke r4.<com.android.server.companion._$$Lambda$CompanionDeviceManagerService$CompanionDeviceManagerImpl$m9NLTVY7N8yX_cTeQGMddCEpCU0: void <init>(android.companion.AssociationRequest,java.lang.String,android.companion.IFindDeviceCallback)>(r22, r23, r1);

        r24 = interfaceinvoke r3.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>(r4);

        r25 = new com.android.server.companion._$$Lambda$CompanionDeviceManagerService$CompanionDeviceManagerImpl$oYSpdTmzLHvD4Kqu1cDfzfZuvwo;

        specialinvoke r25.<com.android.server.companion._$$Lambda$CompanionDeviceManagerService$CompanionDeviceManagerImpl$oYSpdTmzLHvD4Kqu1cDfzfZuvwo: void <init>(com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl,android.companion.IFindDeviceCallback)>(r0, r1);

        $r18 = staticinvoke <com.android.internal.util.FunctionalUtils: java.util.function.BiConsumer uncheckExceptions(com.android.internal.util.FunctionalUtils$ThrowingBiConsumer)>(r25);

        $r19 = virtualinvoke r24.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenComplete(java.util.function.BiConsumer)>($r18);

        staticinvoke <com.android.server.companion.CompanionDeviceManagerService: com.android.internal.infra.AndroidFuture access$702(com.android.server.companion.CompanionDeviceManagerService,com.android.internal.infra.AndroidFuture)>(r2, $r19);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r21 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r21;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void disassociate(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        java.lang.String r1, r2;
        int $i0, $i1;
        com.android.server.companion.CompanionDeviceManagerService $r4;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: void checkCallerIsSystemOr(java.lang.String)>(r2);

        $i0 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: int access$300()>();

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: void checkUsesFeature(java.lang.String,int)>(r2, $i0);

        $r4 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $i1 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: int access$300()>();

        virtualinvoke $r4.<com.android.server.companion.CompanionDeviceManagerService: void removeAssociation(int,java.lang.String,java.lang.String)>($i1, r2, r1);

        return;
    }

    public java.util.List getAssociations(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        java.lang.String r1;
        int i0, $i1;
        boolean $z0;
        com.android.server.companion.CompanionDeviceManagerService $r3;
        java.util.Set $r4, $r6;
        com.android.server.companion.'-$$Lambda$CompanionDeviceManagerService$CompanionDeviceManagerImpl$yIqg4YLiQouxnVJakZERWIZnPYU' $r5;
        java.util.ArrayList r7;
        java.util.function.Function r8;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: boolean callerCanManageCompanionDevices()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: void checkCallerIsSystemOr(java.lang.String,int)>(r1, i0);

        $i1 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: int access$300()>();

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: void checkUsesFeature(java.lang.String,int)>(r1, $i1);

     label1:
        r7 = new java.util.ArrayList;

        $r3 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r4 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: java.util.Set access$100(com.android.server.companion.CompanionDeviceManagerService,int,java.lang.String)>($r3, i0, r1);

        $r5 = <com.android.server.companion._$$Lambda$CompanionDeviceManagerService$CompanionDeviceManagerImpl$yIqg4YLiQouxnVJakZERWIZnPYU: com.android.server.companion.'-$$Lambda$CompanionDeviceManagerService$CompanionDeviceManagerImpl$yIqg4YLiQouxnVJakZERWIZnPYU' INSTANCE>;

        r8 = (java.util.function.Function) $r5;

        $r6 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.Set map(java.util.Set,java.util.function.Function)>($r4, r8);

        specialinvoke r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        return r7;
    }

    public boolean hasNotificationAccess(android.content.ComponentName) throws android.os.RemoteException
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        android.content.ComponentName r1;
        java.lang.String $r2, $r7;
        android.provider.SettingsStringUtil$ComponentNameSet $r3;
        com.android.server.companion.CompanionDeviceManagerService $r4;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        boolean $z0;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: void checkCanCallNotificationApi(java.lang.String)>($r2);

        $r3 = new android.provider.SettingsStringUtil$ComponentNameSet;

        $r4 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r5 = virtualinvoke $r4.<com.android.server.companion.CompanionDeviceManagerService: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r6, "enabled_notification_listeners");

        specialinvoke $r3.<android.provider.SettingsStringUtil$ComponentNameSet: void <init>(java.lang.String)>($r7);

        $z0 = virtualinvoke $r3.<android.provider.SettingsStringUtil$ComponentNameSet: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean isDeviceAssociatedForWifiConnection(java.lang.String, java.lang.String, int)
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        java.lang.String r1, r2;
        int i0, $i1;
        com.android.server.companion.CompanionDeviceManagerService $r3, $r5, $r8;
        android.content.Context $r4, $r6;
        android.content.pm.PackageManager $r7;
        java.util.Set $r9;
        com.android.server.companion._$$Lambda$CompanionDeviceManagerService$CompanionDeviceManagerImpl$cINw8CcxUv2OUJ3WjIWqgJ72MPI $r10;
        boolean $z0, z1;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r4 = virtualinvoke $r3.<com.android.server.companion.CompanionDeviceManagerService: android.content.Context getContext()>();

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_COMPANION_DEVICES", "isDeviceAssociated");

        $r5 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r6 = virtualinvoke $r5.<com.android.server.companion.CompanionDeviceManagerService: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i1 = virtualinvoke $r7.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.COMPANION_APPROVE_WIFI_CONNECTIONS", r1);

        if $i1 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if z1 == 0 goto label3;

        return 1;

     label3:
        $r8 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r9 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: java.util.Set access$100(com.android.server.companion.CompanionDeviceManagerService,int,java.lang.String)>($r8, i0, r1);

        $r10 = new com.android.server.companion._$$Lambda$CompanionDeviceManagerService$CompanionDeviceManagerImpl$cINw8CcxUv2OUJ3WjIWqgJ72MPI;

        specialinvoke $r10.<com.android.server.companion._$$Lambda$CompanionDeviceManagerService$CompanionDeviceManagerImpl$cINw8CcxUv2OUJ3WjIWqgJ72MPI: void <init>(java.lang.String)>(r2);

        $z0 = staticinvoke <com.android.internal.util.CollectionUtils: boolean any(java.util.Set,java.util.function.Predicate)>($r9, $r10);

        return $z0;
    }

    public void lambda$associate$1$CompanionDeviceManagerService$CompanionDeviceManagerImpl(android.companion.IFindDeviceCallback, android.companion.Association, java.lang.Throwable) throws java.lang.Exception
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        android.companion.IFindDeviceCallback r1;
        java.lang.Throwable r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7;
        com.android.server.companion.CompanionDeviceManagerService $r8, $r9;
        android.companion.Association r10;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r1 := @parameter0: android.companion.IFindDeviceCallback;

        r10 := @parameter1: android.companion.Association;

        r2 := @parameter2: java.lang.Throwable;

        if r2 != null goto label1;

        $r9 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        virtualinvoke $r9.<com.android.server.companion.CompanionDeviceManagerService: void addAssociation(android.companion.Association)>(r10);

        goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CompanionDeviceManagerService", "Failed to discover device(s)", r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No devices found: ");

        $r5 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.companion.IFindDeviceCallback: void onFailure(java.lang.CharSequence)>($r7);

     label2:
        $r8 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        staticinvoke <com.android.server.companion.CompanionDeviceManagerService: void access$900(com.android.server.companion.CompanionDeviceManagerService)>($r8);

        return;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        android.os.ShellCallback r5;
        android.os.ResultReceiver r6;
        com.android.server.companion.CompanionDeviceManagerService$ShellCmd $r7;
        com.android.server.companion.CompanionDeviceManagerService $r8;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.FileDescriptor;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.ShellCallback;

        r6 := @parameter5: android.os.ResultReceiver;

        $r7 = new com.android.server.companion.CompanionDeviceManagerService$ShellCmd;

        $r8 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        specialinvoke $r7.<com.android.server.companion.CompanionDeviceManagerService$ShellCmd: void <init>(com.android.server.companion.CompanionDeviceManagerService)>($r8);

        virtualinvoke $r7.<com.android.server.companion.CompanionDeviceManagerService$ShellCmd: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, r1, r2, r3, r4, r5, r6);

        return;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        int i0, i1;
        android.os.Parcel r1, r4;
        boolean z0;
        java.lang.Throwable $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        i0 := @parameter0: int;

        r4 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

     label1:
        z0 = specialinvoke r0.<android.companion.ICompanionDeviceManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r4, r1, i1);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CompanionDeviceManagerService", "Error during IPC", $r2);

        $r3 = staticinvoke <android.util.ExceptionUtils: java.lang.RuntimeException propagate(java.lang.Throwable,java.lang.Class)>($r2, class "Landroid/os/RemoteException;");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.app.PendingIntent requestNotificationAccess(android.content.ComponentName) throws android.os.RemoteException
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        int i0;
        long l1;
        android.text.BidiFormatter $r1;
        com.android.server.companion.CompanionDeviceManagerService $r2, $r4, $r10;
        android.content.pm.PackageInfo $r3;
        android.content.pm.ApplicationInfo $r5;
        android.content.Context $r6, $r11;
        android.content.pm.PackageManager $r7;
        java.lang.CharSequence $r8;
        java.lang.String $r9, r15, r16;
        android.content.Intent $r12;
        java.lang.Throwable $r13;
        android.content.ComponentName r14;
        android.app.PendingIntent r17;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r14 := @parameter0: android.content.ComponentName;

        r15 = virtualinvoke r14.<android.content.ComponentName: java.lang.String getPackageName()>();

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: void checkCanCallNotificationApi(java.lang.String)>(r15);

        i0 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: int access$300()>();

        $r1 = staticinvoke <android.text.BidiFormatter: android.text.BidiFormatter getInstance()>();

        $r2 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r3 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: android.content.pm.PackageInfo access$1200(com.android.server.companion.CompanionDeviceManagerService,java.lang.String,int)>($r2, r15, i0);

        $r5 = $r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r6 = virtualinvoke $r4.<com.android.server.companion.CompanionDeviceManagerService: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = virtualinvoke $r5.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadSafeLabel(android.content.pm.PackageManager,float,int)>($r7, 500.0F, 5);

        $r9 = interfaceinvoke $r8.<java.lang.CharSequence: java.lang.String toString()>();

        r16 = virtualinvoke $r1.<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String)>($r9);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r10 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r11 = virtualinvoke $r10.<com.android.server.companion.CompanionDeviceManagerService: android.content.Context getContext()>();

        $r12 = staticinvoke <com.android.internal.notification.NotificationAccessConfirmationActivityContract: android.content.Intent launcherIntent(int,android.content.ComponentName,java.lang.String)>(i0, r14, r16);

        r17 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>($r11, 0, $r12, 1409286144);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r17;

     label3:
        $r13 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void stopScan(android.companion.AssociationRequest, android.companion.IFindDeviceCallback, java.lang.String)
    {
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl r0;
        android.companion.AssociationRequest r1, $r5;
        android.companion.IFindDeviceCallback r2, $r7;
        java.lang.String r3, $r9;
        com.android.server.companion.CompanionDeviceManagerService $r4, $r6, $r8, $r10;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        r1 := @parameter0: android.companion.AssociationRequest;

        r2 := @parameter1: android.companion.IFindDeviceCallback;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r5 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: android.companion.AssociationRequest access$500(com.android.server.companion.CompanionDeviceManagerService)>($r4);

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, $r5);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r7 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: android.companion.IFindDeviceCallback access$400(com.android.server.companion.CompanionDeviceManagerService)>($r6);

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r2, $r7);

        if $z1 == 0 goto label1;

        $r8 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        $r9 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: java.lang.String access$600(com.android.server.companion.CompanionDeviceManagerService)>($r8);

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r3, $r9);

        if $z2 == 0 goto label1;

        $r10 = r0.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: com.android.server.companion.CompanionDeviceManagerService this$0>;

        staticinvoke <com.android.server.companion.CompanionDeviceManagerService: void access$900(com.android.server.companion.CompanionDeviceManagerService)>($r10);

     label1:
        return;
    }
}
