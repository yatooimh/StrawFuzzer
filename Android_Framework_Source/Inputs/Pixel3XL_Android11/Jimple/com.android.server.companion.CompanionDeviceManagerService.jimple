public class com.android.server.companion.CompanionDeviceManagerService extends com.android.server.SystemService implements android.os.IBinder$DeathRecipient
{
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String PREF_FILE_NAME;
    private static final java.lang.String PREF_KEY_AUTO_REVOKE_GRANTS_DONE;
    private static final android.content.ComponentName SERVICE_TO_BIND_TO;
    private static final java.lang.String XML_ATTR_DEVICE;
    private static final java.lang.String XML_ATTR_PACKAGE;
    private static final java.lang.String XML_FILE_NAME;
    private static final java.lang.String XML_TAG_ASSOCIATION;
    private static final java.lang.String XML_TAG_ASSOCIATIONS;
    private com.android.internal.app.IAppOpsService mAppOpsManager;
    private java.lang.String mCallingPackage;
    private android.companion.IFindDeviceCallback mFindDeviceCallback;
    private android.os.IDeviceIdleController mIdleController;
    private final com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl mImpl;
    private final java.lang.Object mLock;
    private com.android.internal.infra.AndroidFuture mOngoingDeviceDiscovery;
    private android.companion.AssociationRequest mRequest;
    private com.android.internal.infra.PerUser mServiceConnectors;
    private final java.util.concurrent.ConcurrentMap mUidToStorage;

    static void <clinit>()
    {
        android.content.ComponentName $r0;

        <com.android.server.companion.CompanionDeviceManagerService: java.lang.String XML_TAG_ASSOCIATIONS> = "associations";

        <com.android.server.companion.CompanionDeviceManagerService: java.lang.String XML_TAG_ASSOCIATION> = "association";

        <com.android.server.companion.CompanionDeviceManagerService: java.lang.String XML_FILE_NAME> = "companion_device_manager_associations.xml";

        <com.android.server.companion.CompanionDeviceManagerService: java.lang.String XML_ATTR_PACKAGE> = "package";

        <com.android.server.companion.CompanionDeviceManagerService: java.lang.String XML_ATTR_DEVICE> = "device";

        <com.android.server.companion.CompanionDeviceManagerService: java.lang.String PREF_KEY_AUTO_REVOKE_GRANTS_DONE> = "auto_revoke_grants_done";

        <com.android.server.companion.CompanionDeviceManagerService: java.lang.String PREF_FILE_NAME> = "companion_device_preferences.xml";

        <com.android.server.companion.CompanionDeviceManagerService: java.lang.String LOG_TAG> = "CompanionDeviceManagerService";

        <com.android.server.companion.CompanionDeviceManagerService: boolean DEBUG> = 0;

        $r0 = staticinvoke <android.content.ComponentName: android.content.ComponentName createRelative(java.lang.String,java.lang.String)>("com.android.companiondevicemanager", ".DeviceDiscoveryService");

        <com.android.server.companion.CompanionDeviceManagerService: android.content.ComponentName SERVICE_TO_BIND_TO> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        android.content.Context r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.lang.Object $r3;
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl $r4;
        android.os.IBinder $r5, $r7;
        android.os.IDeviceIdleController $r6;
        com.android.internal.app.IAppOpsService $r8;
        com.android.server.companion.CompanionDeviceManagerService$1 $r9;
        android.content.Intent $r10, $r12;
        android.content.ComponentName $r11;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.android.server.companion.CompanionDeviceManagerService: java.util.concurrent.ConcurrentMap mUidToStorage> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.companion.CompanionDeviceManagerService: java.lang.Object mLock> = $r3;

        $r4 = new com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl;

        specialinvoke $r4.<com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl: void <init>(com.android.server.companion.CompanionDeviceManagerService)>(r0);

        r0.<com.android.server.companion.CompanionDeviceManagerService: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl mImpl> = $r4;

        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("deviceidle");

        $r6 = staticinvoke <android.os.IDeviceIdleController$Stub: android.os.IDeviceIdleController asInterface(android.os.IBinder)>($r5);

        r0.<com.android.server.companion.CompanionDeviceManagerService: android.os.IDeviceIdleController mIdleController> = $r6;

        $r7 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("appops");

        $r8 = staticinvoke <com.android.internal.app.IAppOpsService$Stub: com.android.internal.app.IAppOpsService asInterface(android.os.IBinder)>($r7);

        r0.<com.android.server.companion.CompanionDeviceManagerService: com.android.internal.app.IAppOpsService mAppOpsManager> = $r8;

        $r9 = new com.android.server.companion.CompanionDeviceManagerService$1;

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>()>();

        $r11 = <com.android.server.companion.CompanionDeviceManagerService: android.content.ComponentName SERVICE_TO_BIND_TO>;

        $r12 = virtualinvoke $r10.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r11);

        specialinvoke $r9.<com.android.server.companion.CompanionDeviceManagerService$1: void <init>(com.android.server.companion.CompanionDeviceManagerService,android.content.Intent)>(r0, $r12);

        r0.<com.android.server.companion.CompanionDeviceManagerService: com.android.internal.infra.PerUser mServiceConnectors> = $r9;

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void registerPackageMonitor()>();

        return;
    }

    static void access$000(com.android.server.companion.CompanionDeviceManagerService, java.util.function.Function, int)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        java.util.function.Function r1;
        int i0;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter1: java.util.function.Function;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void updateAssociations(java.util.function.Function,int)>(r1, i0);

        return;
    }

    static java.util.Set access$100(com.android.server.companion.CompanionDeviceManagerService, int, java.lang.String)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        int i0;
        java.lang.String r1;
        java.util.Set $r2;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: java.util.Set readAllAssociations(int,java.lang.String)>(i0, r1);

        return $r2;
    }

    static boolean access$1000()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: boolean isCallerSystem()>();

        return $z0;
    }

    static com.android.internal.app.IAppOpsService access$1100(com.android.server.companion.CompanionDeviceManagerService)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        com.android.internal.app.IAppOpsService $r1;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        $r1 = r0.<com.android.server.companion.CompanionDeviceManagerService: com.android.internal.app.IAppOpsService mAppOpsManager>;

        return $r1;
    }

    static android.content.pm.PackageInfo access$1200(com.android.server.companion.CompanionDeviceManagerService, java.lang.String, int)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        java.lang.String r1;
        int i0;
        android.content.pm.PackageInfo $r2;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, i0);

        return $r2;
    }

    static java.util.Set access$1300(com.android.server.companion.CompanionDeviceManagerService, int)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        int i0;
        java.util.Set $r1;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: java.util.Set readAllAssociations(int)>(i0);

        return $r1;
    }

    static void access$200(com.android.server.companion.CompanionDeviceManagerService, java.lang.String, int)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void updateSpecialAccessPermissionForAssociatedPackage(java.lang.String,int)>(r1, i0);

        return;
    }

    static int access$300()
    {
        int $i0;

        $i0 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: int getCallingUserId()>();

        return $i0;
    }

    static android.companion.IFindDeviceCallback access$400(com.android.server.companion.CompanionDeviceManagerService)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        android.companion.IFindDeviceCallback $r1;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        $r1 = r0.<com.android.server.companion.CompanionDeviceManagerService: android.companion.IFindDeviceCallback mFindDeviceCallback>;

        return $r1;
    }

    static android.companion.IFindDeviceCallback access$402(com.android.server.companion.CompanionDeviceManagerService, android.companion.IFindDeviceCallback)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        android.companion.IFindDeviceCallback r1;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter1: android.companion.IFindDeviceCallback;

        r0.<com.android.server.companion.CompanionDeviceManagerService: android.companion.IFindDeviceCallback mFindDeviceCallback> = r1;

        return r1;
    }

    static android.companion.AssociationRequest access$500(com.android.server.companion.CompanionDeviceManagerService)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        android.companion.AssociationRequest $r1;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        $r1 = r0.<com.android.server.companion.CompanionDeviceManagerService: android.companion.AssociationRequest mRequest>;

        return $r1;
    }

    static android.companion.AssociationRequest access$502(com.android.server.companion.CompanionDeviceManagerService, android.companion.AssociationRequest)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        android.companion.AssociationRequest r1;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter1: android.companion.AssociationRequest;

        r0.<com.android.server.companion.CompanionDeviceManagerService: android.companion.AssociationRequest mRequest> = r1;

        return r1;
    }

    static java.lang.String access$600(com.android.server.companion.CompanionDeviceManagerService)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        $r1 = r0.<com.android.server.companion.CompanionDeviceManagerService: java.lang.String mCallingPackage>;

        return $r1;
    }

    static java.lang.String access$602(com.android.server.companion.CompanionDeviceManagerService, java.lang.String)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.server.companion.CompanionDeviceManagerService: java.lang.String mCallingPackage> = r1;

        return r1;
    }

    static com.android.internal.infra.AndroidFuture access$702(com.android.server.companion.CompanionDeviceManagerService, com.android.internal.infra.AndroidFuture)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        com.android.internal.infra.AndroidFuture r1;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter1: com.android.internal.infra.AndroidFuture;

        r0.<com.android.server.companion.CompanionDeviceManagerService: com.android.internal.infra.AndroidFuture mOngoingDeviceDiscovery> = r1;

        return r1;
    }

    static com.android.internal.infra.PerUser access$800(com.android.server.companion.CompanionDeviceManagerService)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        com.android.internal.infra.PerUser $r1;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        $r1 = r0.<com.android.server.companion.CompanionDeviceManagerService: com.android.internal.infra.PerUser mServiceConnectors>;

        return $r1;
    }

    static void access$900(com.android.server.companion.CompanionDeviceManagerService)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void cleanup()>();

        return;
    }

    private void cleanup()
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Throwable $r2;
        com.android.internal.infra.AndroidFuture r3;
        android.companion.IFindDeviceCallback $r4, $r6;
        android.os.IInterface $r5;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        r1 = r0.<com.android.server.companion.CompanionDeviceManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.companion.CompanionDeviceManagerService: com.android.internal.infra.AndroidFuture mOngoingDeviceDiscovery>;

     label2:
        if r3 == null goto label4;

     label3:
        $z0 = virtualinvoke r3.<com.android.internal.infra.AndroidFuture: boolean isDone()>();

        if $z0 != 0 goto label4;

        virtualinvoke r3.<com.android.internal.infra.AndroidFuture: boolean cancel(boolean)>(1);

     label4:
        $r4 = r0.<com.android.server.companion.CompanionDeviceManagerService: android.companion.IFindDeviceCallback mFindDeviceCallback>;

        $r5 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: android.os.IInterface unlinkToDeath(android.os.IInterface,android.os.IBinder$DeathRecipient,int)>($r4, r0, 0);

        $r6 = (android.companion.IFindDeviceCallback) $r5;

        r0.<com.android.server.companion.CompanionDeviceManagerService: android.companion.IFindDeviceCallback mFindDeviceCallback> = $r6;

        r0.<com.android.server.companion.CompanionDeviceManagerService: android.companion.AssociationRequest mRequest> = null;

        r0.<com.android.server.companion.CompanionDeviceManagerService: java.lang.String mCallingPackage> = null;

        exitmonitor r1;

     label5:
        return;

     label6:
        $r2 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private static boolean containsEither(java.lang.Object[], java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] r0;
        java.lang.Object r1, r2;
        boolean $z0, $z1, z2;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r0, r1);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r0, r2);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    private void exemptFromAutoRevoke(java.lang.String, int)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        java.lang.String r1, $r9;
        int i0;
        com.android.internal.app.IAppOpsService $r4;
        android.os.RemoteException $r5;
        java.lang.StringBuilder $r6;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<com.android.server.companion.CompanionDeviceManagerService: com.android.internal.app.IAppOpsService mAppOpsManager>;

        interfaceinvoke $r4.<com.android.internal.app.IAppOpsService: void setMode(int,int,java.lang.String,int)>(97, i0, r1, 1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while granting auto revoke exemption for ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("CompanionDeviceManagerService", $r9, $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static int getCallingUserId()
    {
        int $i0, $i1;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        return $i1;
    }

    private android.content.pm.PackageInfo getPackageInfo(java.lang.String, int)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        java.lang.String r1;
        int i0;
        com.android.server.companion.'-$$Lambda$CompanionDeviceManagerService$0VKz9ecFqvfFXzRrfaz-Pf5wW2s' $r2;
        android.content.Context $r3;
        java.lang.Integer $r4;
        com.android.internal.util.function.pooled.PooledSupplier $r5, $r6;
        java.lang.Object $r7;
        android.content.pm.PackageInfo $r8;
        com.android.internal.util.function.TriFunction r9;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = <com.android.server.companion._$$Lambda$CompanionDeviceManagerService$0VKz9ecFqvfFXzRrfaz_Pf5wW2s: com.android.server.companion.'-$$Lambda$CompanionDeviceManagerService$0VKz9ecFqvfFXzRrfaz-Pf5wW2s' INSTANCE>;

        $r3 = virtualinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: android.content.Context getContext()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r9 = (com.android.internal.util.function.TriFunction) $r2;

        $r5 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledSupplier obtainSupplier(com.android.internal.util.function.TriFunction,java.lang.Object,java.lang.Object,java.lang.Object)>(r9, $r3, r1, $r4);

        $r6 = interfaceinvoke $r5.<com.android.internal.util.function.pooled.PooledSupplier: com.android.internal.util.function.pooled.PooledSupplier recycleOnUse()>();

        $r7 = staticinvoke <android.os.Binder: java.lang.Object withCleanCallingIdentity(com.android.internal.util.FunctionalUtils$ThrowingSupplier)>($r6);

        $r8 = (android.content.pm.PackageInfo) $r7;

        return $r8;
    }

    private android.util.AtomicFile getStorageFileForUser(int)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        int i0;
        java.util.concurrent.ConcurrentMap $r1;
        java.lang.Integer $r2;
        com.android.server.companion.'-$$Lambda$CompanionDeviceManagerService$bh5xRJq9-CRJoXvmerYRNjK1xEQ' $r3;
        java.lang.Object $r4;
        android.util.AtomicFile $r5;
        java.util.function.Function r6;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.companion.CompanionDeviceManagerService: java.util.concurrent.ConcurrentMap mUidToStorage>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = <com.android.server.companion._$$Lambda$CompanionDeviceManagerService$bh5xRJq9_CRJoXvmerYRNjK1xEQ: com.android.server.companion.'-$$Lambda$CompanionDeviceManagerService$bh5xRJq9-CRJoXvmerYRNjK1xEQ' INSTANCE>;

        r6 = (java.util.function.Function) $r3;

        $r4 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>($r2, r6);

        $r5 = (android.util.AtomicFile) $r4;

        return $r5;
    }

    private static boolean isCallerSystem()
    {
        int $i0;
        boolean z0;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 != 1000 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static android.content.pm.PackageInfo lambda$getPackageInfo$1(android.content.Context, java.lang.String, java.lang.Integer)
    {
        java.lang.String r0, $r6;
        android.content.pm.PackageManager $r1;
        int $i0;
        android.content.pm.PackageManager$NameNotFoundException $r2;
        java.lang.StringBuilder $r3;
        android.content.Context r7;
        java.lang.Integer r8;
        android.content.pm.PackageInfo r9;

        r7 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.Integer;

     label1:
        $r1 = virtualinvoke r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i0 = virtualinvoke r8.<java.lang.Integer: int intValue()>();

        r9 = virtualinvoke $r1.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)>(r0, 20480, $i0);

     label2:
        return r9;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get PackageInfo for package ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CompanionDeviceManagerService", $r6, $r2);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    static android.util.AtomicFile lambda$getStorageFileForUser$5(java.lang.Integer)
    {
        java.lang.Integer r0;
        android.util.AtomicFile $r1;
        java.io.File $r2, $r3;
        int $i0;

        r0 := @parameter0: java.lang.Integer;

        $r1 = new android.util.AtomicFile;

        $r2 = new java.io.File;

        $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        $r3 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>($i0);

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "companion_device_manager_associations.xml");

        specialinvoke $r1.<android.util.AtomicFile: void <init>(java.io.File)>($r2);

        return $r1;
    }

    public static void lambda$pG_kG2extKjHVEAFcCd4MLP2mkk(com.android.server.companion.CompanionDeviceManagerService)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void cleanup()>();

        return;
    }

    static java.util.Set lambda$recordAssociation$2(android.companion.Association, java.util.Set)
    {
        android.companion.Association r0;
        java.util.Set r1, $r2;

        r0 := @parameter0: android.companion.Association;

        r1 := @parameter1: java.util.Set;

        $r2 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.Set add(java.util.Set,java.lang.Object)>(r1, r0);

        return $r2;
    }

    static java.util.Set lambda$removeAssociation$0(int, java.lang.String, java.lang.String, java.util.Set)
    {
        int i0;
        java.lang.String r0, r1;
        java.util.Set r2, $r4;
        android.companion.Association $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.util.Set;

        $r3 = new android.companion.Association;

        specialinvoke $r3.<android.companion.Association: void <init>(int,java.lang.String,java.lang.String)>(i0, r0, r1);

        $r4 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.Set remove(java.util.Set,java.lang.Object)>(r2, $r3);

        return $r4;
    }

    static void lambda$updateAssociations$3(org.xmlpull.v1.XmlSerializer, android.companion.Association) throws java.lang.Exception
    {
        org.xmlpull.v1.XmlSerializer r0, $r2, $r4, $r6;
        android.companion.Association r1;
        java.lang.String $r3, $r5;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: android.companion.Association;

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "association");

        $r3 = r1.<android.companion.Association: java.lang.String companionAppPackage>;

        $r4 = interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "package", $r3);

        $r5 = r1.<android.companion.Association: java.lang.String deviceAddress>;

        $r6 = interfaceinvoke $r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "device", $r5);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "association");

        return;
    }

    static void lambda$updateAssociations$4(java.util.Set, java.io.FileOutputStream)
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;
        java.lang.Boolean $r3;
        java.lang.Exception $r6;
        java.lang.RuntimeException $r7;
        java.util.Set r8;
        java.io.FileOutputStream r9;
        com.android.server.companion._$$Lambda$CompanionDeviceManagerService$d_RLJQyt7Hah5vpYlYLeoWXxACU r10;

        r8 := @parameter0: java.util.Set;

        r9 := @parameter1: java.io.FileOutputStream;

        r0 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

     label1:
        $r1 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke $r1.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r9, $r2);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r3);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "associations");

        r10 = new com.android.server.companion._$$Lambda$CompanionDeviceManagerService$d_RLJQyt7Hah5vpYlYLeoWXxACU;

        specialinvoke r10.<com.android.server.companion._$$Lambda$CompanionDeviceManagerService$d_RLJQyt7Hah5vpYlYLeoWXxACU: void <init>(org.xmlpull.v1.XmlSerializer)>(r0);

        staticinvoke <com.android.internal.util.CollectionUtils: void forEach(java.util.Set,com.android.internal.util.FunctionalUtils$ThrowingConsumer)>(r8, r10);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "associations");

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CompanionDeviceManagerService", "Error while writing associations file", $r6);

        $r7 = staticinvoke <android.util.ExceptionUtils: java.lang.RuntimeException propagate(java.lang.Throwable)>($r6);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void lambda$wnUkAY8uXyjMGM59-bNpzLLMJ1I(com.android.server.companion.CompanionDeviceManagerService, android.content.pm.PackageInfo)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        android.content.pm.PackageInfo r1;

        r0 := @parameter0: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter1: android.content.pm.PackageInfo;

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void updateSpecialAccessPermissionAsSystem(android.content.pm.PackageInfo)>(r1);

        return;
    }

    private java.util.Set readAllAssociations(int)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        int i0;
        java.util.Set $r1;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: java.util.Set readAllAssociations(int,java.lang.String)>(i0, null);

        return $r1;
    }

    private java.util.Set readAllAssociations(int, java.lang.String)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        int i0, i1;
        android.util.AtomicFile r1;
        org.xmlpull.v1.XmlPullParser r2;
        java.io.FileInputStream r3;
        java.lang.String r4, r5, $r9, $r10, $r11, r16;
        android.companion.Association r6;
        java.io.File $r7;
        boolean $z0, $z1, $z2;
        java.nio.charset.Charset $r8;
        java.lang.Throwable $r12, $r13, $r14, $r15;
        android.util.ArraySet r17;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        i0 := @parameter0: int;

        r16 := @parameter1: java.lang.String;

        r1 = specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: android.util.AtomicFile getStorageFileForUser(int)>(i0);

        $r7 = virtualinvoke r1.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        return null;

     label01:
        r17 = null;

        r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        entermonitor r1;

     label02:
        r3 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label03:
        $r8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r9 = virtualinvoke $r8.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r3, $r9);

     label04:
        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

     label05:
        if i1 == 1 goto label15;

        if i1 == 2 goto label08;

     label06:
        $r10 = "associations";

        $r11 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 != 0 goto label08;

     label07:
        goto label04;

     label08:
        r4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "package");

        r5 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "device");

     label09:
        if r4 == null goto label04;

        if r5 != null goto label10;

        goto label04;

     label10:
        if r16 == null goto label13;

     label11:
        $z1 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 != 0 goto label13;

     label12:
        goto label04;

     label13:
        r6 = new android.companion.Association;

        specialinvoke r6.<android.companion.Association: void <init>(int,java.lang.String,java.lang.String)>(i0, r5, r4);

        r17 = staticinvoke <com.android.internal.util.ArrayUtils: android.util.ArraySet add(android.util.ArraySet,java.lang.Object)>(r17, r6);

     label14:
        goto label04;

     label15:
        if r3 == null goto label17;

     label16:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label17:
        exitmonitor r1;

     label18:
        return r17;

     label19:
        $r13 := @caughtexception;

        if r3 == null goto label24;

     label20:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label21:
        goto label24;

     label22:
        $r12 := @caughtexception;

     label23:
        virtualinvoke $r13.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r12);

     label24:
        throw $r13;

     label25:
        $r14 := @caughtexception;

        goto label29;

     label26:
        $r15 := @caughtexception;

     label27:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CompanionDeviceManagerService", "Error while reading associations file", $r15);

        exitmonitor r1;

     label28:
        return null;

     label29:
        exitmonitor r1;

     label30:
        throw $r14;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label26;
        catch java.io.IOException from label02 to label03 with label26;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label26;
        catch java.io.IOException from label16 to label17 with label26;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label26;
        catch java.io.IOException from label23 to label24 with label26;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label26;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.Throwable from label24 to label25 with label25;
        catch java.lang.Throwable from label27 to label28 with label25;
        catch java.lang.Throwable from label29 to label30 with label25;
    }

    private void recordAssociation(android.companion.Association)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        android.companion.Association r1;
        com.android.server.companion._$$Lambda$CompanionDeviceManagerService$wG7upTzVFwCMCLI1zfTZW4dftak $r2;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter0: android.companion.Association;

        $r2 = new com.android.server.companion._$$Lambda$CompanionDeviceManagerService$wG7upTzVFwCMCLI1zfTZW4dftak;

        specialinvoke $r2.<com.android.server.companion._$$Lambda$CompanionDeviceManagerService$wG7upTzVFwCMCLI1zfTZW4dftak: void <init>(android.companion.Association)>(r1);

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void updateAssociations(java.util.function.Function)>($r2);

        return;
    }

    private void recordAssociation(java.lang.String, java.lang.String)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        java.lang.String r1, r2;
        android.companion.Association $r3;
        int $i0;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new android.companion.Association;

        $i0 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: int getCallingUserId()>();

        specialinvoke $r3.<android.companion.Association: void <init>(int,java.lang.String,java.lang.String)>($i0, r2, r1);

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void recordAssociation(android.companion.Association)>($r3);

        return;
    }

    private void registerPackageMonitor()
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        com.android.server.companion.CompanionDeviceManagerService$2 $r1;
        android.content.Context $r2;
        com.android.server.FgThread $r3;
        android.os.Looper $r4;
        android.os.UserHandle $r5;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        $r1 = new com.android.server.companion.CompanionDeviceManagerService$2;

        specialinvoke $r1.<com.android.server.companion.CompanionDeviceManagerService$2: void <init>(com.android.server.companion.CompanionDeviceManagerService)>(r0);

        $r2 = virtualinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: android.content.Context getContext()>();

        $r3 = staticinvoke <com.android.server.FgThread: com.android.server.FgThread get()>();

        $r4 = virtualinvoke $r3.<com.android.server.FgThread: android.os.Looper getLooper()>();

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r1.<com.android.server.companion.CompanionDeviceManagerService$2: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>($r2, $r4, $r5, 1);

        return;
    }

    private static android.os.IInterface unlinkToDeath(android.os.IInterface, android.os.IBinder$DeathRecipient, int)
    {
        android.os.IInterface r0;
        android.os.IBinder$DeathRecipient r1;
        int i0;
        android.os.IBinder $r2;

        r0 := @parameter0: android.os.IInterface;

        r1 := @parameter1: android.os.IBinder$DeathRecipient;

        i0 := @parameter2: int;

        if r0 == null goto label1;

        $r2 = interfaceinvoke r0.<android.os.IInterface: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r1, i0);

     label1:
        return null;
    }

    private void updateAssociations(java.util.function.Function)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        java.util.function.Function r1;
        int $i0;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter0: java.util.function.Function;

        $i0 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: int getCallingUserId()>();

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void updateAssociations(java.util.function.Function,int)>(r1, $i0);

        return;
    }

    private void updateAssociations(java.util.function.Function, int)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        int i0, $i1, $i2;
        android.util.AtomicFile r1;
        java.lang.Object $r2, $r3, $r5;
        boolean $z0;
        com.android.server.wm.ActivityTaskManagerInternal $r4;
        android.companion.Association $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        java.util.function.Function r9;
        java.util.Set r10, r11, r12;
        java.util.HashSet r13;
        java.util.Iterator r14;
        com.android.server.companion._$$Lambda$CompanionDeviceManagerService$_wqnNKMj0AXNyFu_i6lXk6tA3xs r15;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        r9 := @parameter0: java.util.function.Function;

        i0 := @parameter1: int;

        r1 = specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: android.util.AtomicFile getStorageFileForUser(int)>(i0);

        entermonitor r1;

     label01:
        r10 = specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: java.util.Set readAllAssociations(int)>(i0);

        r11 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.Set copyOf(java.util.Set)>(r10);

        $r2 = interfaceinvoke r9.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(r10);

        r12 = (java.util.Set) $r2;

        $i1 = staticinvoke <com.android.internal.util.CollectionUtils: int size(java.util.Collection)>(r11);

        $i2 = staticinvoke <com.android.internal.util.CollectionUtils: int size(java.util.Collection)>(r12);

        if $i1 != $i2 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r13 = new java.util.HashSet;

        specialinvoke r13.<java.util.HashSet: void <init>()>();

        r14 = interfaceinvoke r12.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r5 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.companion.Association) $r5;

        $r7 = $r6.<android.companion.Association: java.lang.String companionAppPackage>;

        interfaceinvoke r13.<java.util.Set: boolean add(java.lang.Object)>($r7);

     label05:
        goto label04;

     label06:
        r15 = new com.android.server.companion._$$Lambda$CompanionDeviceManagerService$_wqnNKMj0AXNyFu_i6lXk6tA3xs;

        specialinvoke r15.<com.android.server.companion._$$Lambda$CompanionDeviceManagerService$_wqnNKMj0AXNyFu_i6lXk6tA3xs: void <init>(java.util.Set)>(r12);

        virtualinvoke r1.<android.util.AtomicFile: void write(java.util.function.Consumer)>(r15);

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/ActivityTaskManagerInternal;");

        $r4 = (com.android.server.wm.ActivityTaskManagerInternal) $r3;

        virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerInternal: void setCompanionAppPackages(int,java.util.Set)>(i0, r13);

        exitmonitor r1;

     label07:
        return;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void updateSpecialAccessPermissionAsSystem(android.content.pm.PackageInfo)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        android.content.pm.PackageInfo r1;
        java.lang.String[] $r2, $r6;
        boolean $z0, $z1;
        java.lang.String $r3, $r9, $r11;
        android.os.IDeviceIdleController $r4, $r12;
        android.content.Context $r5;
        android.content.pm.ApplicationInfo $r7, $r8, $r10;
        int $i0, $i1, $i2;
        android.os.RemoteException $r13;
        android.net.NetworkPolicyManager r15;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter0: android.content.pm.PackageInfo;

     label1:
        $r2 = r1.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $z0 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: boolean containsEither(java.lang.Object[],java.lang.Object,java.lang.Object)>($r2, "android.permission.RUN_IN_BACKGROUND", "android.permission.REQUEST_COMPANION_RUN_IN_BACKGROUND");

        if $z0 == 0 goto label3;

        $r12 = r0.<com.android.server.companion.CompanionDeviceManagerService: android.os.IDeviceIdleController mIdleController>;

        $r11 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        interfaceinvoke $r12.<android.os.IDeviceIdleController: void addPowerSaveWhitelistApp(java.lang.String)>($r11);

     label2:
        goto label4;

     label3:
        $r4 = r0.<com.android.server.companion.CompanionDeviceManagerService: android.os.IDeviceIdleController mIdleController>;

        $r3 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        interfaceinvoke $r4.<android.os.IDeviceIdleController: void removePowerSaveWhitelistApp(java.lang.String)>($r3);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

     label6:
        $r5 = virtualinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: android.content.Context getContext()>();

        r15 = staticinvoke <android.net.NetworkPolicyManager: android.net.NetworkPolicyManager 'from'(android.content.Context)>($r5);

        $r6 = r1.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $z1 = staticinvoke <com.android.server.companion.CompanionDeviceManagerService: boolean containsEither(java.lang.Object[],java.lang.Object,java.lang.Object)>($r6, "android.permission.USE_DATA_IN_BACKGROUND", "android.permission.REQUEST_COMPANION_USE_DATA_IN_BACKGROUND");

        if $z1 == 0 goto label7;

        $r10 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r10.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r15.<android.net.NetworkPolicyManager: void addUidPolicy(int,int)>($i2, 4);

        goto label8;

     label7:
        $r7 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r7.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r15.<android.net.NetworkPolicyManager: void removeUidPolicy(int,int)>($i0, 4);

     label8:
        $r9 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r8 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void exemptFromAutoRevoke(java.lang.String,int)>($r9, $i1);

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void updateSpecialAccessPermissionForAssociatedPackage(java.lang.String, int)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        int i0;
        com.android.server.companion.'-$$Lambda$CompanionDeviceManagerService$wnUkAY8uXyjMGM59-bNpzLLMJ1I' $r1;
        com.android.internal.util.function.pooled.PooledRunnable $r2, $r3;
        java.lang.String r4;
        android.content.pm.PackageInfo r5;
        java.util.function.BiConsumer r6;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r5 = specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r4, i0);

        if r5 != null goto label1;

        return;

     label1:
        $r1 = <com.android.server.companion._$$Lambda$CompanionDeviceManagerService$wnUkAY8uXyjMGM59_bNpzLLMJ1I: com.android.server.companion.'-$$Lambda$CompanionDeviceManagerService$wnUkAY8uXyjMGM59-bNpzLLMJ1I' INSTANCE>;

        r6 = (java.util.function.BiConsumer) $r1;

        $r2 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledRunnable obtainRunnable(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r6, r0, r5);

        $r3 = interfaceinvoke $r2.<com.android.internal.util.function.pooled.PooledRunnable: com.android.internal.util.function.pooled.PooledRunnable recycleOnUse()>();

        staticinvoke <android.os.Binder: void withCleanCallingIdentity(com.android.internal.util.FunctionalUtils$ThrowingRunnable)>($r3);

        return;
    }

    void addAssociation(int, java.lang.String, java.lang.String)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        int i0;
        java.lang.String r1, r2;
        android.companion.Association $r3;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = new android.companion.Association;

        specialinvoke $r3.<android.companion.Association: void <init>(int,java.lang.String,java.lang.String)>(i0, r2, r1);

        virtualinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void addAssociation(android.companion.Association)>($r3);

        return;
    }

    void addAssociation(android.companion.Association)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        android.companion.Association r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        r1 := @parameter0: android.companion.Association;

        $r2 = r1.<android.companion.Association: java.lang.String companionAppPackage>;

        $i0 = r1.<android.companion.Association: int userId>;

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void updateSpecialAccessPermissionForAssociatedPackage(java.lang.String,int)>($r2, $i0);

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void recordAssociation(android.companion.Association)>(r1);

        return;
    }

    public void binderDied()
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        android.os.Handler $r1;
        com.android.server.companion._$$Lambda$CompanionDeviceManagerService$pG_kG2extKjHVEAFcCd4MLP2mkk $r2;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        $r1 = staticinvoke <android.os.Handler: android.os.Handler getMain()>();

        $r2 = new com.android.server.companion._$$Lambda$CompanionDeviceManagerService$pG_kG2extKjHVEAFcCd4MLP2mkk;

        specialinvoke $r2.<com.android.server.companion._$$Lambda$CompanionDeviceManagerService$pG_kG2extKjHVEAFcCd4MLP2mkk: void <init>(com.android.server.companion.CompanionDeviceManagerService)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    void maybeGrantAutoRevokeExemptions()
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        int[] r1;
        int i0, i1, i2, i4;
        android.content.SharedPreferences r2;
        java.util.Iterator r3;
        android.companion.Association r4;
        java.lang.StringBuilder r5;
        android.content.Context $r6, $r9;
        java.lang.Object $r7, $r14;
        android.os.UserManagerInternal $r8;
        java.io.File $r10, $r11;
        boolean $z0, $z1;
        android.content.SharedPreferences$Editor $r12, $r13, $r17, $r18, $r20, $r21;
        java.lang.String $r15, $r16, $r24, $r26;
        java.lang.Throwable $r19;
        android.content.pm.PackageManager$NameNotFoundException $r22;
        android.content.pm.PackageManager r27;
        java.util.Set r28;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        $r6 = virtualinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: android.content.Context getContext()>();

        r27 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/UserManagerInternal;");

        $r8 = (android.os.UserManagerInternal) $r7;

        r1 = virtualinvoke $r8.<android.os.UserManagerInternal: int[] getUserIds()>();

        i0 = lengthof r1;

        i4 = 0;

     label01:
        if i4 >= i0 goto label14;

        i1 = r1[i4];

        $r9 = virtualinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: android.content.Context getContext()>();

        $r10 = new java.io.File;

        $r11 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i1);

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, "companion_device_preferences.xml");

        r2 = virtualinvoke $r9.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.io.File,int)>($r10, 0);

        $z0 = interfaceinvoke r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("auto_revoke_grants_done", 0);

        if $z0 == 0 goto label02;

        goto label12;

     label02:
        r28 = specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: java.util.Set readAllAssociations(int)>(i1);

     label03:
        if r28 != null goto label04;

        $r17 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r18 = interfaceinvoke $r17.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("auto_revoke_grants_done", 1);

        interfaceinvoke $r18.<android.content.SharedPreferences$Editor: void apply()>();

        goto label12;

     label04:
        r3 = interfaceinvoke r28.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.companion.Association) $r14;

     label06:
        $r15 = r4.<android.companion.Association: java.lang.String companionAppPackage>;

        i2 = virtualinvoke r27.<android.content.pm.PackageManager: int getPackageUidAsUser(java.lang.String,int)>($r15, i1);

        $r16 = r4.<android.companion.Association: java.lang.String companionAppPackage>;

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void exemptFromAutoRevoke(java.lang.String,int)>($r16, i2);

     label07:
        goto label10;

     label08:
        $r22 := @caughtexception;

     label09:
        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown companion package: ");

        $r24 = r4.<android.companion.Association: java.lang.String companionAppPackage>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("CompanionDeviceManagerService", $r26, $r22);

     label10:
        goto label05;

     label11:
        $r12 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r13 = interfaceinvoke $r12.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("auto_revoke_grants_done", 1);

        interfaceinvoke $r13.<android.content.SharedPreferences$Editor: void apply()>();

     label12:
        i4 = i4 + 1;

        goto label01;

     label13:
        $r19 := @caughtexception;

        $r20 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r21 = interfaceinvoke $r20.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("auto_revoke_grants_done", 1);

        interfaceinvoke $r21.<android.content.SharedPreferences$Editor: void apply()>();

        throw $r19;

     label14:
        return;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch android.content.pm.PackageManager$NameNotFoundException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
    }

    public void onStart()
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl $r1;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        $r1 = r0.<com.android.server.companion.CompanionDeviceManagerService: com.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl mImpl>;

        virtualinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void publishBinderService(java.lang.String,android.os.IBinder)>("companiondevice", $r1);

        return;
    }

    public void onUnlockUser(int)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        int i0;
        boolean $z0, $z1;
        java.lang.Object $r3, $r8;
        android.os.Handler $r4;
        com.android.server.companion.'-$$Lambda$WrLlS9vQWduMboBfcO05xQ9xJtA' $r5;
        android.os.Message $r6;
        java.util.concurrent.TimeUnit $r7;
        long $l1;
        android.companion.Association $r9;
        java.lang.String $r10;
        java.util.Set r11;
        java.util.Iterator r12;
        com.android.server.wm.ActivityTaskManagerInternal r13;
        java.util.HashSet r14;
        java.util.function.Consumer r15;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        i0 := @parameter0: int;

        r11 = specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: java.util.Set readAllAssociations(int)>(i0);

        if r11 == null goto label5;

        $z0 = interfaceinvoke r11.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label5;

     label1:
        r14 = new java.util.HashSet;

        specialinvoke r14.<java.util.HashSet: void <init>()>();

        r12 = interfaceinvoke r11.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.companion.Association) $r8;

        $r10 = $r9.<android.companion.Association: java.lang.String companionAppPackage>;

        interfaceinvoke r14.<java.util.Set: boolean add(java.lang.Object)>($r10);

        goto label2;

     label3:
        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/ActivityTaskManagerInternal;");

        r13 = (com.android.server.wm.ActivityTaskManagerInternal) $r3;

        if r13 == null goto label4;

        virtualinvoke r13.<com.android.server.wm.ActivityTaskManagerInternal: void setCompanionAppPackages(int,java.util.Set)>(i0, r14);

     label4:
        $r4 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r5 = <com.android.server.companion._$$Lambda$WrLlS9vQWduMboBfcO05xQ9xJtA: com.android.server.companion.'-$$Lambda$WrLlS9vQWduMboBfcO05xQ9xJtA' INSTANCE>;

        r15 = (java.util.function.Consumer) $r5;

        $r6 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.Consumer,java.lang.Object)>(r15, r0);

        $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;

        $l1 = virtualinvoke $r7.<java.util.concurrent.TimeUnit: long toMillis(long)>(10L);

        virtualinvoke $r4.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r6, $l1);

        return;

     label5:
        return;
    }

    void removeAssociation(int, java.lang.String, java.lang.String)
    {
        com.android.server.companion.CompanionDeviceManagerService r0;
        int i0;
        java.lang.String r1, r2;
        com.android.server.companion._$$Lambda$CompanionDeviceManagerService$IkTCYCPSwHv3PPP8etpa0xLh9Is $r3;

        r0 := @this: com.android.server.companion.CompanionDeviceManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = new com.android.server.companion._$$Lambda$CompanionDeviceManagerService$IkTCYCPSwHv3PPP8etpa0xLh9Is;

        specialinvoke $r3.<com.android.server.companion._$$Lambda$CompanionDeviceManagerService$IkTCYCPSwHv3PPP8etpa0xLh9Is: void <init>(int,java.lang.String,java.lang.String)>(i0, r2, r1);

        specialinvoke r0.<com.android.server.companion.CompanionDeviceManagerService: void updateAssociations(java.util.function.Function)>($r3);

        return;
    }
}
