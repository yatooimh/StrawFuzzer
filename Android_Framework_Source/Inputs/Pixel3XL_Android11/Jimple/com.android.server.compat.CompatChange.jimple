public final class com.android.server.compat.CompatChange extends com.android.internal.compat.CompatibilityChangeInfo
{
    private static final long CTS_SYSTEM_API_CHANGEID;
    com.android.server.compat.CompatChange$ChangeListener mListener;
    private java.util.Map mPackageOverrides;

    public void <init>(long)
    {
        com.android.server.compat.CompatChange r0;
        long l0;

        r0 := @this: com.android.server.compat.CompatChange;

        l0 := @parameter0: long;

        specialinvoke r0.<com.android.server.compat.CompatChange: void <init>(long,java.lang.String,int,boolean,boolean,java.lang.String)>(l0, null, -1, 0, 0, null);

        return;
    }

    public void <init>(long, java.lang.String, int, boolean, boolean, java.lang.String)
    {
        com.android.server.compat.CompatChange r0;
        long l0;
        java.lang.String r1, r2;
        int i1;
        boolean z0, z1;
        java.lang.Long $r3;

        r0 := @this: com.android.server.compat.CompatChange;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r2 := @parameter5: java.lang.String;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        specialinvoke r0.<com.android.internal.compat.CompatibilityChangeInfo: void <init>(java.lang.Long,java.lang.String,int,boolean,boolean,java.lang.String)>($r3, r1, i1, z0, z1, r2);

        r0.<com.android.server.compat.CompatChange: com.android.server.compat.CompatChange$ChangeListener mListener> = null;

        return;
    }

    public void <init>(com.android.server.compat.config.Change)
    {
        com.android.server.compat.CompatChange r0;
        com.android.server.compat.config.Change r1;
        long $l0;
        java.lang.Long $r2;
        java.lang.String $r3, $r4;
        int $i1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.compat.CompatChange;

        r1 := @parameter0: com.android.server.compat.config.Change;

        $l0 = virtualinvoke r1.<com.android.server.compat.config.Change: long getId()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = virtualinvoke r1.<com.android.server.compat.config.Change: java.lang.String getName()>();

        $i1 = virtualinvoke r1.<com.android.server.compat.config.Change: int getEnableAfterTargetSdk()>();

        $z0 = virtualinvoke r1.<com.android.server.compat.config.Change: boolean getDisabled()>();

        $z1 = virtualinvoke r1.<com.android.server.compat.config.Change: boolean getLoggingOnly()>();

        $r4 = virtualinvoke r1.<com.android.server.compat.config.Change: java.lang.String getDescription()>();

        specialinvoke r0.<com.android.internal.compat.CompatibilityChangeInfo: void <init>(java.lang.Long,java.lang.String,int,boolean,boolean,java.lang.String)>($r2, $r3, $i1, $z0, $z1, $r4);

        r0.<com.android.server.compat.CompatChange: com.android.server.compat.CompatChange$ChangeListener mListener> = null;

        return;
    }

    private void notifyListener(java.lang.String)
    {
        com.android.server.compat.CompatChange r0;
        java.lang.String r1;
        com.android.server.compat.CompatChange$ChangeListener r2;

        r0 := @this: com.android.server.compat.CompatChange;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.server.compat.CompatChange: com.android.server.compat.CompatChange$ChangeListener mListener>;

        if r2 == null goto label1;

        interfaceinvoke r2.<com.android.server.compat.CompatChange$ChangeListener: void onCompatChange(java.lang.String)>(r1);

     label1:
        return;
    }

    void addPackageOverride(java.lang.String, boolean)
    {
        com.android.server.compat.CompatChange r0;
        boolean z0, $z1;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r6, r12;
        java.lang.IllegalArgumentException $r5;
        java.util.Map $r7, $r8;
        java.lang.Boolean $r9;
        java.util.HashMap $r11;

        r0 := @this: com.android.server.compat.CompatChange;

        r12 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<com.android.server.compat.CompatChange: boolean getLoggingOnly()>();

        if $z1 != 0 goto label2;

        $r7 = r0.<com.android.server.compat.CompatChange: java.util.Map mPackageOverrides>;

        if $r7 != null goto label1;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.compat.CompatChange: java.util.Map mPackageOverrides> = $r11;

     label1:
        $r8 = r0.<com.android.server.compat.CompatChange: java.util.Map mPackageOverrides>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r9);

        specialinvoke r0.<com.android.server.compat.CompatChange: void notifyListener(java.lang.String)>(r12);

        return;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t add overrides for a logging only change ");

        $r3 = virtualinvoke r0.<com.android.server.compat.CompatChange: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    boolean hasOverride(java.lang.String)
    {
        com.android.server.compat.CompatChange r0;
        java.lang.String r1;
        java.util.Map r2;
        boolean $z0, z1;

        r0 := @this: com.android.server.compat.CompatChange;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.server.compat.CompatChange: java.util.Map mPackageOverrides>;

        if r2 == null goto label1;

        $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isEnabled(android.content.pm.ApplicationInfo)
    {
        com.android.server.compat.CompatChange r0;
        android.content.pm.ApplicationInfo r1;
        java.util.Map r2, $r5;
        boolean z0, $z1, $z2, z3;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r4;
        java.lang.Object $r6;
        java.lang.Boolean $r7;

        r0 := @this: com.android.server.compat.CompatChange;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 = r0.<com.android.server.compat.CompatChange: java.util.Map mPackageOverrides>;

        if r2 == null goto label1;

        $r3 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $r5 = r0.<com.android.server.compat.CompatChange: java.util.Map mPackageOverrides>;

        $r4 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r7 = (java.lang.Boolean) $r6;

        $z2 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;

     label1:
        z0 = virtualinvoke r0.<com.android.server.compat.CompatChange: boolean getDisabled()>();

        z3 = 0;

        if z0 == 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r0.<com.android.server.compat.CompatChange: int getEnableAfterTargetSdk()>();

        if $i0 == -1 goto label4;

        $i1 = r1.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $i2 = virtualinvoke r0.<com.android.server.compat.CompatChange: int getEnableAfterTargetSdk()>();

        if $i1 <= $i2 goto label3;

        z3 = 1;

     label3:
        return z3;

     label4:
        return 1;
    }

    void registerListener(com.android.server.compat.CompatChange$ChangeListener)
    {
        com.android.server.compat.CompatChange r0;
        com.android.server.compat.CompatChange$ChangeListener $r1, r9;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r8;
        java.lang.IllegalStateException $r7;

        r0 := @this: com.android.server.compat.CompatChange;

        r9 := @parameter0: com.android.server.compat.CompatChange$ChangeListener;

        $r1 = r0.<com.android.server.compat.CompatChange: com.android.server.compat.CompatChange$ChangeListener mListener>;

        if $r1 != null goto label1;

        r0.<com.android.server.compat.CompatChange: com.android.server.compat.CompatChange$ChangeListener mListener> = r9;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Listener for change ");

        $r4 = virtualinvoke r0.<com.android.server.compat.CompatChange: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already registered.");

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    void removePackageOverride(java.lang.String)
    {
        com.android.server.compat.CompatChange r0;
        java.lang.String r1;
        java.util.Map r2;
        java.lang.Object $r3;

        r0 := @this: com.android.server.compat.CompatChange;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.server.compat.CompatChange: java.util.Map mPackageOverrides>;

        if r2 == null goto label1;

        $r3 = interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        specialinvoke r0.<com.android.server.compat.CompatChange: void notifyListener(java.lang.String)>(r1);

     label1:
        return;
    }

    public java.lang.String toString()
    {
        com.android.server.compat.CompatChange r0;
        java.lang.StringBuilder r1, $r3;
        java.util.Map r2, $r7;
        long $l0;
        java.lang.String $r4, $r14, $r16;
        int $i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @this: com.android.server.compat.CompatChange;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("ChangeId(");

        $l0 = virtualinvoke r0.<com.android.server.compat.CompatChange: long getId()>();

        r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke r0.<com.android.server.compat.CompatChange: java.lang.String getName()>();

        if $r4 == null goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; name=");

        $r14 = virtualinvoke r0.<com.android.server.compat.CompatChange: java.lang.String getName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label1:
        $i1 = virtualinvoke r0.<com.android.server.compat.CompatChange: int getEnableAfterTargetSdk()>();

        if $i1 == -1 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; enableAfterTargetSdk=");

        $i3 = virtualinvoke r0.<com.android.server.compat.CompatChange: int getEnableAfterTargetSdk()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

     label2:
        $z0 = virtualinvoke r0.<com.android.server.compat.CompatChange: boolean getDisabled()>();

        if $z0 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; disabled");

     label3:
        $z1 = virtualinvoke r0.<com.android.server.compat.CompatChange: boolean getLoggingOnly()>();

        if $z1 == 0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; loggingOnly");

     label4:
        r2 = r0.<com.android.server.compat.CompatChange: java.util.Map mPackageOverrides>;

        if r2 == null goto label5;

        $i2 = interfaceinvoke r2.<java.util.Map: int size()>();

        if $i2 <= 0 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; packageOverrides=");

        $r7 = r0.<com.android.server.compat.CompatChange: java.util.Map mPackageOverrides>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public static void <clinit>()
    {
        <com.android.server.compat.CompatChange: long CTS_SYSTEM_API_CHANGEID> = 149391281L;

        return;
    }
}
