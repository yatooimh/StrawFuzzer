final class com.android.server.compat.CompatConfig extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.util.LongSparseArray mChanges;
    private com.android.internal.compat.IOverrideValidator mOverrideValidator;

    void <init>(com.android.internal.compat.AndroidBuildClassifier, android.content.Context)
    {
        com.android.server.compat.CompatConfig r0;
        com.android.internal.compat.AndroidBuildClassifier r1;
        android.content.Context r2;
        android.util.LongSparseArray $r3;
        com.android.server.compat.OverrideValidatorImpl $r4;

        r0 := @this: com.android.server.compat.CompatConfig;

        r1 := @parameter0: com.android.internal.compat.AndroidBuildClassifier;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.LongSparseArray;

        specialinvoke $r3.<android.util.LongSparseArray: void <init>()>();

        r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges> = $r3;

        $r4 = new com.android.server.compat.OverrideValidatorImpl;

        specialinvoke $r4.<com.android.server.compat.OverrideValidatorImpl: void <init>(com.android.internal.compat.AndroidBuildClassifier,android.content.Context,com.android.server.compat.CompatConfig)>(r1, r2, r0);

        r0.<com.android.server.compat.CompatConfig: com.android.internal.compat.IOverrideValidator mOverrideValidator> = $r4;

        return;
    }

    static com.android.server.compat.CompatConfig create(com.android.internal.compat.AndroidBuildClassifier, android.content.Context)
    {
        com.android.server.compat.CompatConfig $r0;
        java.io.File $r1, $r3, $r4, $r6, $r12, $r13;
        java.lang.String[] $r2, $r5, $r11;
        com.android.server.pm.ApexManager $r7;
        java.util.List $r8;
        boolean $z0;
        java.lang.Object $r9;
        com.android.server.pm.ApexManager$ActiveApexInfo $r10;
        com.android.internal.compat.AndroidBuildClassifier r14;
        android.content.Context r15;
        java.util.Iterator r17;

        r14 := @parameter0: com.android.internal.compat.AndroidBuildClassifier;

        r15 := @parameter1: android.content.Context;

        $r0 = new com.android.server.compat.CompatConfig;

        specialinvoke $r0.<com.android.server.compat.CompatConfig: void <init>(com.android.internal.compat.AndroidBuildClassifier,android.content.Context)>(r14, r15);

        $r1 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "etc";

        $r2[1] = "compatconfig";

        $r3 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r1, $r2);

        virtualinvoke $r0.<com.android.server.compat.CompatConfig: void initConfigFromLib(java.io.File)>($r3);

        $r4 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "system_ext";

        $r5[1] = "etc";

        $r5[2] = "compatconfig";

        $r6 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r4, $r5);

        virtualinvoke $r0.<com.android.server.compat.CompatConfig: void initConfigFromLib(java.io.File)>($r6);

        $r7 = staticinvoke <com.android.server.pm.ApexManager: com.android.server.pm.ApexManager getInstance()>();

        $r8 = virtualinvoke $r7.<com.android.server.pm.ApexManager: java.util.List getActiveApexInfos()>();

        r17 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.android.server.pm.ApexManager$ActiveApexInfo) $r9;

        $r12 = $r10.<com.android.server.pm.ApexManager$ActiveApexInfo: java.io.File apexDirectory>;

        $r11 = newarray (java.lang.String)[2];

        $r11[0] = "etc";

        $r11[1] = "compatconfig";

        $r13 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r12, $r11);

        virtualinvoke $r0.<com.android.server.compat.CompatConfig: void initConfigFromLib(java.io.File)>($r13);

        goto label1;

     label2:
        specialinvoke $r0.<com.android.server.compat.CompatConfig: void invalidateCache()>();

        return $r0;
    }

    private long[] getAllowedChangesAfterTargetSdkForPackage(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.server.compat.CompatConfig r0;
        int i0, i1, $i2, $i4, i6;
        android.util.LongSparseArray r2, $r4, $r6;
        android.util.LongArray $r3;
        long[] $r5;
        java.lang.Object $r7;
        com.android.internal.compat.IOverrideValidator $r8;
        long $l3, $l5;
        com.android.internal.compat.OverrideAllowedState $r9;
        java.lang.Throwable $r10;
        android.os.RemoteException $r11;
        java.lang.String r12;
        com.android.server.compat.CompatChange r13;
        java.lang.RuntimeException r15;

        r0 := @this: com.android.server.compat.CompatConfig;

        r12 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = new android.util.LongArray;

        specialinvoke $r3.<android.util.LongArray: void <init>()>();

        r2 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r2;

        i6 = 0;

     label01:
        $r4 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        i1 = virtualinvoke $r4.<android.util.LongSparseArray: int size()>();

     label02:
        if i6 >= i1 goto label09;

     label03:
        $r6 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r7 = virtualinvoke $r6.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i6);

        r13 = (com.android.server.compat.CompatChange) $r7;

        $i2 = virtualinvoke r13.<com.android.server.compat.CompatChange: int getEnableAfterTargetSdk()>();

        if $i2 == i0 goto label05;

     label04:
        goto label06;

     label05:
        $r8 = r0.<com.android.server.compat.CompatConfig: com.android.internal.compat.IOverrideValidator mOverrideValidator>;

        $l3 = virtualinvoke r13.<com.android.server.compat.CompatChange: long getId()>();

        $r9 = interfaceinvoke $r8.<com.android.internal.compat.IOverrideValidator: com.android.internal.compat.OverrideAllowedState getOverrideAllowedState(long,java.lang.String)>($l3, r12);

        $i4 = $r9.<com.android.internal.compat.OverrideAllowedState: int state>;

        if $i4 != 0 goto label06;

        $l5 = virtualinvoke r13.<com.android.server.compat.CompatChange: long getId()>();

        virtualinvoke $r3.<android.util.LongArray: void add(long)>($l5);

     label06:
        i6 = i6 + 1;

        goto label01;

     label07:
        $r11 := @caughtexception;

     label08:
        r15 = new java.lang.RuntimeException;

        specialinvoke r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to call override validator!", $r11);

        throw r15;

     label09:
        exitmonitor r2;

     label10:
        $r5 = virtualinvoke $r3.<android.util.LongArray: long[] toArray()>();

        return $r5;

     label11:
        $r10 := @caughtexception;

     label12:
        exitmonitor r2;

     label13:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch android.os.RemoteException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private void invalidateCache()
    {
        com.android.server.compat.CompatConfig r0;

        r0 := @this: com.android.server.compat.CompatConfig;

        staticinvoke <android.app.compat.ChangeIdStateCache: void invalidate()>();

        return;
    }

    private void readConfig(java.io.File)
    {
        com.android.server.compat.CompatConfig r0;
        com.android.server.compat.config.Config $r1;
        java.util.List $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String $r5, $r7;
        java.lang.Throwable $r8, $r9, $r10;
        java.io.File r11;
        java.io.BufferedInputStream r12;
        java.io.FileInputStream r13;
        java.util.Iterator r14;
        com.android.server.compat.config.Change r15;
        java.lang.StringBuilder r16;
        com.android.server.compat.CompatChange r17;

        r0 := @this: com.android.server.compat.CompatConfig;

        r11 := @parameter0: java.io.File;

     label01:
        r12 = new java.io.BufferedInputStream;

        r13 = new java.io.FileInputStream;

        specialinvoke r13.<java.io.FileInputStream: void <init>(java.io.File)>(r11);

        specialinvoke r12.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r13);

     label02:
        $r1 = staticinvoke <com.android.server.compat.config.XmlParser: com.android.server.compat.config.Config read(java.io.InputStream)>(r12);

        $r2 = virtualinvoke $r1.<com.android.server.compat.config.Config: java.util.List getCompatChange()>();

        r14 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r3 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.android.server.compat.config.Change) $r3;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding: ");

        $r5 = virtualinvoke r15.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("CompatConfig", $r7);

        r17 = new com.android.server.compat.CompatChange;

        specialinvoke r17.<com.android.server.compat.CompatChange: void <init>(com.android.server.compat.config.Change)>(r15);

        virtualinvoke r0.<com.android.server.compat.CompatConfig: void addChange(com.android.server.compat.CompatChange)>(r17);

     label04:
        goto label03;

     label05:
        virtualinvoke r12.<java.io.InputStream: void close()>();

     label06:
        goto label14;

     label07:
        $r8 := @caughtexception;

     label08:
        virtualinvoke r12.<java.io.InputStream: void close()>();

     label09:
        goto label12;

     label10:
        $r10 := @caughtexception;

     label11:
        virtualinvoke $r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r10);

     label12:
        throw $r8;

     label13:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CompatConfig", "Encountered an error while reading/parsing compat config file", $r9);

     label14:
        return;

        catch java.io.IOException from label01 to label02 with label13;
        catch javax.xml.datatype.DatatypeConfigurationException from label01 to label02 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.io.IOException from label05 to label06 with label13;
        catch javax.xml.datatype.DatatypeConfigurationException from label05 to label06 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.io.IOException from label11 to label12 with label13;
        catch javax.xml.datatype.DatatypeConfigurationException from label11 to label12 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label13;
        catch java.io.IOException from label12 to label13 with label13;
        catch javax.xml.datatype.DatatypeConfigurationException from label12 to label13 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label13;
    }

    void addChange(com.android.server.compat.CompatChange)
    {
        com.android.server.compat.CompatConfig r0;
        android.util.LongSparseArray r1, $r2;
        long $l0;
        java.lang.Throwable $r3;
        com.android.server.compat.CompatChange r4;

        r0 := @this: com.android.server.compat.CompatConfig;

        r4 := @parameter0: com.android.server.compat.CompatChange;

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $l0 = virtualinvoke r4.<com.android.server.compat.CompatChange: long getId()>();

        virtualinvoke $r2.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l0, r4);

        specialinvoke r0.<com.android.server.compat.CompatConfig: void invalidateCache()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean addOverride(long, java.lang.String, boolean) throws android.os.RemoteException, java.lang.SecurityException
    {
        com.android.server.compat.CompatConfig r0;
        long l0;
        boolean z0, z1;
        android.util.LongSparseArray r1, $r5;
        com.android.server.compat.CompatChange r2, r9;
        com.android.internal.compat.IOverrideValidator $r3;
        com.android.internal.compat.OverrideAllowedState $r4;
        java.lang.Object $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: com.android.server.compat.CompatConfig;

        l0 := @parameter0: long;

        r8 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 = 1;

        $r3 = r0.<com.android.server.compat.CompatConfig: com.android.internal.compat.IOverrideValidator mOverrideValidator>;

        $r4 = interfaceinvoke $r3.<com.android.internal.compat.IOverrideValidator: com.android.internal.compat.OverrideAllowedState getOverrideAllowedState(long,java.lang.String)>(l0, r8);

        virtualinvoke $r4.<com.android.internal.compat.OverrideAllowedState: void enforce(long,java.lang.String)>(l0, r8);

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r6 = virtualinvoke $r5.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r2 = (com.android.server.compat.CompatChange) $r6;

     label2:
        r9 = r2;

        if r2 != null goto label5;

        z1 = 0;

     label3:
        r9 = new com.android.server.compat.CompatChange;

        specialinvoke r9.<com.android.server.compat.CompatChange: void <init>(long)>(l0);

     label4:
        virtualinvoke r0.<com.android.server.compat.CompatConfig: void addChange(com.android.server.compat.CompatChange)>(r9);

     label5:
        virtualinvoke r9.<com.android.server.compat.CompatChange: void addPackageOverride(java.lang.String,boolean)>(r8, z0);

        specialinvoke r0.<com.android.server.compat.CompatConfig: void invalidateCache()>();

        exitmonitor r1;

     label6:
        return z1;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void addOverrides(com.android.internal.compat.CompatibilityChangeConfig, java.lang.String) throws android.os.RemoteException, java.lang.SecurityException
    {
        com.android.server.compat.CompatConfig r0;
        java.lang.String r1;
        android.util.LongSparseArray r2;
        java.util.Iterator r3, r12;
        java.util.Set $r4, $r5;
        boolean $z0, $z1;
        java.lang.Object $r6, $r8;
        java.lang.Long $r7, $r9;
        long $l0, $l1;
        java.lang.Throwable $r10;
        com.android.internal.compat.CompatibilityChangeConfig r11;

        r0 := @this: com.android.server.compat.CompatConfig;

        r11 := @parameter0: com.android.internal.compat.CompatibilityChangeConfig;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r2;

     label01:
        $r4 = virtualinvoke r11.<com.android.internal.compat.CompatibilityChangeConfig: java.util.Set enabledChanges()>();

        r3 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.Long) $r8;

        $l1 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<com.android.server.compat.CompatConfig: boolean addOverride(long,java.lang.String,boolean)>($l1, r1, 1);

     label03:
        goto label02;

     label04:
        $r5 = virtualinvoke r11.<com.android.internal.compat.CompatibilityChangeConfig: java.util.Set disabledChanges()>();

        r12 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r6 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.Long) $r6;

        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<com.android.server.compat.CompatConfig: boolean addOverride(long,java.lang.String,boolean)>($l0, r1, 0);

     label06:
        goto label05;

     label07:
        specialinvoke r0.<com.android.server.compat.CompatConfig: void invalidateCache()>();

        exitmonitor r2;

     label08:
        return;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void clearChanges()
    {
        com.android.server.compat.CompatConfig r0;
        android.util.LongSparseArray r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.compat.CompatConfig;

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        virtualinvoke $r3.<android.util.LongSparseArray: void clear()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int disableTargetSdkChangesForPackage(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.server.compat.CompatConfig r0;
        java.lang.String r1;
        long[] r2;
        int i0, $i1, i3, i4;
        long $l2;

        r0 := @this: com.android.server.compat.CompatConfig;

        r1 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        r2 = specialinvoke r0.<com.android.server.compat.CompatConfig: long[] getAllowedChangesAfterTargetSdkForPackage(java.lang.String,int)>(r1, i3);

        i0 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $l2 = r2[i4];

        virtualinvoke r0.<com.android.server.compat.CompatConfig: boolean addOverride(long,java.lang.String,boolean)>($l2, r1, 0);

        i4 = i4 + 1;

        goto label1;

     label2:
        $i1 = lengthof r2;

        return $i1;
    }

    com.android.internal.compat.CompatibilityChangeInfo[] dumpChanges()
    {
        com.android.server.compat.CompatConfig r0;
        android.util.LongSparseArray r1, $r3, $r4, $r5;
        com.android.server.compat.CompatChange r2;
        int $i0, $i1, $i3, i4;
        java.lang.Object $r6;
        com.android.internal.compat.CompatibilityChangeInfo $r7;
        long $l2;
        java.lang.Long $r8;
        java.lang.String $r9, $r10;
        boolean $z0, $z1;
        java.lang.Throwable $r11;
        com.android.internal.compat.CompatibilityChangeInfo[] r12;

        r0 := @this: com.android.server.compat.CompatConfig;

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $i0 = virtualinvoke $r3.<android.util.LongSparseArray: int size()>();

        r12 = newarray (com.android.internal.compat.CompatibilityChangeInfo)[$i0];

     label2:
        i4 = 0;

     label3:
        $r4 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $i1 = virtualinvoke $r4.<android.util.LongSparseArray: int size()>();

        if i4 >= $i1 goto label5;

        $r5 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r6 = virtualinvoke $r5.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i4);

        r2 = (com.android.server.compat.CompatChange) $r6;

        $r7 = new com.android.internal.compat.CompatibilityChangeInfo;

        $l2 = virtualinvoke r2.<com.android.server.compat.CompatChange: long getId()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r9 = virtualinvoke r2.<com.android.server.compat.CompatChange: java.lang.String getName()>();

        $i3 = virtualinvoke r2.<com.android.server.compat.CompatChange: int getEnableAfterTargetSdk()>();

        $z0 = virtualinvoke r2.<com.android.server.compat.CompatChange: boolean getDisabled()>();

        $z1 = virtualinvoke r2.<com.android.server.compat.CompatChange: boolean getLoggingOnly()>();

        $r10 = virtualinvoke r2.<com.android.server.compat.CompatChange: java.lang.String getDescription()>();

        specialinvoke $r7.<com.android.internal.compat.CompatibilityChangeInfo: void <init>(java.lang.Long,java.lang.String,int,boolean,boolean,java.lang.String)>($r8, $r9, $i3, $z0, $z1, $r10);

        r12[i4] = $r7;

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        exitmonitor r1;

     label6:
        return r12;

     label7:
        $r11 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void dumpConfig(java.io.PrintWriter)
    {
        com.android.server.compat.CompatConfig r0;
        android.util.LongSparseArray r1, $r2, $r3, $r4;
        int $i0, $i1, i2;
        java.lang.Object $r5;
        com.android.server.compat.CompatChange $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        java.io.PrintWriter r9;

        r0 := @this: com.android.server.compat.CompatConfig;

        r9 := @parameter0: java.io.PrintWriter;

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $i0 = virtualinvoke $r2.<android.util.LongSparseArray: int size()>();

        if $i0 != 0 goto label03;

        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>("No compat overrides.");

        exitmonitor r1;

     label02:
        return;

     label03:
        i2 = 0;

     label04:
        $r3 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $i1 = virtualinvoke $r3.<android.util.LongSparseArray: int size()>();

        if i2 >= $i1 goto label06;

        $r4 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r5 = virtualinvoke $r4.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i2);

        $r6 = (com.android.server.compat.CompatChange) $r5;

        $r7 = virtualinvoke $r6.<com.android.server.compat.CompatChange: java.lang.String toString()>();

        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>($r7);

     label05:
        i2 = i2 + 1;

        goto label04;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    int enableTargetSdkChangesForPackage(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.server.compat.CompatConfig r0;
        java.lang.String r1;
        long[] r2;
        int i0, $i1, i3, i4;
        long $l2;

        r0 := @this: com.android.server.compat.CompatConfig;

        r1 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        r2 = specialinvoke r0.<com.android.server.compat.CompatConfig: long[] getAllowedChangesAfterTargetSdkForPackage(java.lang.String,int)>(r1, i3);

        i0 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $l2 = r2[i4];

        virtualinvoke r0.<com.android.server.compat.CompatConfig: boolean addOverride(long,java.lang.String,boolean)>($l2, r1, 1);

        i4 = i4 + 1;

        goto label1;

     label2:
        $i1 = lengthof r2;

        return $i1;
    }

    com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)
    {
        com.android.server.compat.CompatConfig r0;
        android.util.LongSparseArray r3, $r7, $r10;
        com.android.server.compat.CompatChange r4;
        java.util.HashSet $r5, $r6;
        int $i0, i3;
        com.android.internal.compat.CompatibilityChangeConfig $r8;
        android.compat.Compatibility$ChangeConfig $r9;
        java.lang.Object $r11;
        boolean $z0;
        long $l1, $l2;
        java.lang.Long $r12, $r13;
        java.lang.Throwable $r14;
        android.content.pm.ApplicationInfo r15;

        r0 := @this: com.android.server.compat.CompatConfig;

        r15 := @parameter0: android.content.pm.ApplicationInfo;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r3 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r3;

        i3 = 0;

     label1:
        $r7 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $i0 = virtualinvoke $r7.<android.util.LongSparseArray: int size()>();

        if i3 >= $i0 goto label5;

        $r10 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r11 = virtualinvoke $r10.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i3);

        r4 = (com.android.server.compat.CompatChange) $r11;

        $z0 = virtualinvoke r4.<com.android.server.compat.CompatChange: boolean isEnabled(android.content.pm.ApplicationInfo)>(r15);

        if $z0 == 0 goto label3;

        $l2 = virtualinvoke r4.<com.android.server.compat.CompatChange: long getId()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r13);

     label2:
        goto label4;

     label3:
        $l1 = virtualinvoke r4.<com.android.server.compat.CompatChange: long getId()>();

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        exitmonitor r3;

     label6:
        $r8 = new com.android.internal.compat.CompatibilityChangeConfig;

        $r9 = new android.compat.Compatibility$ChangeConfig;

        specialinvoke $r9.<android.compat.Compatibility$ChangeConfig: void <init>(java.util.Set,java.util.Set)>($r5, $r6);

        specialinvoke $r8.<com.android.internal.compat.CompatibilityChangeConfig: void <init>(android.compat.Compatibility$ChangeConfig)>($r9);

        return $r8;

     label7:
        $r14 := @caughtexception;

     label8:
        exitmonitor r3;

     label9:
        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    long[] getDisabledChanges(android.content.pm.ApplicationInfo)
    {
        com.android.server.compat.CompatConfig r0;
        android.util.LongSparseArray r2, $r5, $r7;
        com.android.server.compat.CompatChange r3;
        android.util.LongArray $r4;
        int $i0, i2;
        long[] $r6;
        java.lang.Object $r8;
        boolean $z0;
        long $l1;
        java.lang.Throwable $r9;
        android.content.pm.ApplicationInfo r10;

        r0 := @this: com.android.server.compat.CompatConfig;

        r10 := @parameter0: android.content.pm.ApplicationInfo;

        $r4 = new android.util.LongArray;

        specialinvoke $r4.<android.util.LongArray: void <init>()>();

        r2 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r2;

        i2 = 0;

     label1:
        $r5 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $i0 = virtualinvoke $r5.<android.util.LongSparseArray: int size()>();

        if i2 >= $i0 goto label3;

        $r7 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r8 = virtualinvoke $r7.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i2);

        r3 = (com.android.server.compat.CompatChange) $r8;

        $z0 = virtualinvoke r3.<com.android.server.compat.CompatChange: boolean isEnabled(android.content.pm.ApplicationInfo)>(r10);

        if $z0 != 0 goto label2;

        $l1 = virtualinvoke r3.<com.android.server.compat.CompatChange: long getId()>();

        virtualinvoke $r4.<android.util.LongArray: void add(long)>($l1);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        exitmonitor r2;

     label4:
        $r6 = virtualinvoke $r4.<android.util.LongArray: long[] toArray()>();

        return $r6;

     label5:
        $r9 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    com.android.internal.compat.IOverrideValidator getOverrideValidator()
    {
        com.android.server.compat.CompatConfig r0;
        com.android.internal.compat.IOverrideValidator $r1;

        r0 := @this: com.android.server.compat.CompatConfig;

        $r1 = r0.<com.android.server.compat.CompatConfig: com.android.internal.compat.IOverrideValidator mOverrideValidator>;

        return $r1;
    }

    void initConfigFromLib(java.io.File)
    {
        com.android.server.compat.CompatConfig r0;
        int i0, i3;
        java.io.File r1, r12;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r6, $r9, $r11;
        java.io.File[] r13;

        r0 := @this: com.android.server.compat.CompatConfig;

        r12 := @parameter0: java.io.File;

        $z0 = virtualinvoke r12.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r12.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label1;

        goto label4;

     label1:
        r13 = virtualinvoke r12.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof r13;

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        r1 = r13[i3];

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found a config file: ");

        $r9 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("CompatConfig", $r11);

        specialinvoke r0.<com.android.server.compat.CompatConfig: void readConfig(java.io.File)>(r1);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No directory ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", skipping");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("CompatConfig", $r6);

        return;
    }

    boolean isChangeEnabled(long, android.content.pm.ApplicationInfo)
    {
        com.android.server.compat.CompatConfig r0;
        long l0;
        android.util.LongSparseArray r1, $r3;
        com.android.server.compat.CompatChange r2;
        boolean z0;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        android.content.pm.ApplicationInfo r6;

        r0 := @this: com.android.server.compat.CompatConfig;

        l0 := @parameter0: long;

        r6 := @parameter1: android.content.pm.ApplicationInfo;

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r4 = virtualinvoke $r3.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r2 = (com.android.server.compat.CompatChange) $r4;

     label2:
        if r2 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 1;

     label5:
        z0 = virtualinvoke r2.<com.android.server.compat.CompatChange: boolean isEnabled(android.content.pm.ApplicationInfo)>(r6);

        exitmonitor r1;

     label6:
        return z0;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean isDisabled(long)
    {
        com.android.server.compat.CompatConfig r0;
        long l0;
        android.util.LongSparseArray r1, $r2;
        boolean z0;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        com.android.server.compat.CompatChange r5;

        r0 := @this: com.android.server.compat.CompatConfig;

        l0 := @parameter0: long;

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r3 = virtualinvoke $r2.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r5 = (com.android.server.compat.CompatChange) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        z0 = virtualinvoke r5.<com.android.server.compat.CompatChange: boolean getDisabled()>();

        exitmonitor r1;

     label6:
        return z0;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean isKnownChangeId(long)
    {
        com.android.server.compat.CompatConfig r0;
        long l0;
        android.util.LongSparseArray r1, $r3;
        java.lang.Object $r4;
        com.android.server.compat.CompatChange $r5;
        java.lang.Throwable $r6;
        boolean z0;

        r0 := @this: com.android.server.compat.CompatConfig;

        l0 := @parameter0: long;

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r4 = virtualinvoke $r3.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        $r5 = (com.android.server.compat.CompatChange) $r4;

        if $r5 == null goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    boolean isLoggingOnly(long)
    {
        com.android.server.compat.CompatConfig r0;
        long l0;
        android.util.LongSparseArray r1, $r2;
        boolean z0;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        com.android.server.compat.CompatChange r5;

        r0 := @this: com.android.server.compat.CompatConfig;

        l0 := @parameter0: long;

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r3 = virtualinvoke $r2.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r5 = (com.android.server.compat.CompatChange) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        z0 = virtualinvoke r5.<com.android.server.compat.CompatChange: boolean getLoggingOnly()>();

        exitmonitor r1;

     label6:
        return z0;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    long lookupChangeId(java.lang.String)
    {
        com.android.server.compat.CompatConfig r0;
        android.util.LongSparseArray r1, $r2, $r3, $r7;
        long l0;
        int $i1, i2;
        java.lang.Object $r4;
        com.android.server.compat.CompatChange $r5;
        java.lang.String $r6, r9;
        boolean $z0;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.compat.CompatConfig;

        r9 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

        i2 = 0;

     label1:
        $r2 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $i1 = virtualinvoke $r2.<android.util.LongSparseArray: int size()>();

        if i2 >= $i1 goto label4;

        $r3 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r4 = virtualinvoke $r3.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i2);

        $r5 = (com.android.server.compat.CompatChange) $r4;

        $r6 = virtualinvoke $r5.<com.android.server.compat.CompatChange: java.lang.String getName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r6, r9);

        if $z0 == 0 goto label3;

        $r7 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        l0 = virtualinvoke $r7.<android.util.LongSparseArray: long keyAt(int)>(i2);

        exitmonitor r1;

     label2:
        return l0;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        exitmonitor r1;

     label5:
        return -1L;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    int minTargetSdkForChangeId(long)
    {
        com.android.server.compat.CompatConfig r0;
        long l0;
        android.util.LongSparseArray r1, $r2;
        int i1;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        com.android.server.compat.CompatChange r5;

        r0 := @this: com.android.server.compat.CompatConfig;

        l0 := @parameter0: long;

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r3 = virtualinvoke $r2.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r5 = (com.android.server.compat.CompatChange) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        i1 = virtualinvoke r5.<com.android.server.compat.CompatChange: int getEnableAfterTargetSdk()>();

        exitmonitor r1;

     label6:
        return i1;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean registerListener(long, com.android.server.compat.CompatChange$ChangeListener)
    {
        com.android.server.compat.CompatConfig r0;
        long l0;
        android.util.LongSparseArray r1, $r3;
        com.android.server.compat.CompatChange r2, r7;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        com.android.server.compat.CompatChange$ChangeListener r6;
        boolean z0;

        r0 := @this: com.android.server.compat.CompatConfig;

        l0 := @parameter0: long;

        r6 := @parameter1: com.android.server.compat.CompatChange$ChangeListener;

        z0 = 1;

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r4 = virtualinvoke $r3.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r2 = (com.android.server.compat.CompatChange) $r4;

     label2:
        r7 = r2;

        if r2 != null goto label5;

        z0 = 0;

     label3:
        r7 = new com.android.server.compat.CompatChange;

        specialinvoke r7.<com.android.server.compat.CompatChange: void <init>(long)>(l0);

     label4:
        virtualinvoke r0.<com.android.server.compat.CompatConfig: void addChange(com.android.server.compat.CompatChange)>(r7);

     label5:
        virtualinvoke r7.<com.android.server.compat.CompatChange: void registerListener(com.android.server.compat.CompatChange$ChangeListener)>(r6);

        exitmonitor r1;

     label6:
        return z0;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean removeOverride(long, java.lang.String) throws android.os.RemoteException, java.lang.SecurityException
    {
        com.android.server.compat.CompatConfig r0;
        long l0;
        android.util.LongSparseArray r1, $r2;
        boolean z0, z1;
        java.lang.Object $r3;
        com.android.internal.compat.IOverrideValidator $r4;
        com.android.internal.compat.OverrideAllowedState $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;
        java.lang.String r8;
        com.android.server.compat.CompatChange r9;
        java.lang.RuntimeException r11;

        r0 := @this: com.android.server.compat.CompatConfig;

        l0 := @parameter0: long;

        r8 := @parameter1: java.lang.String;

        z1 = 0;

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r3 = virtualinvoke $r2.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r9 = (com.android.server.compat.CompatChange) $r3;

     label02:
        if r9 == null goto label09;

     label03:
        z0 = virtualinvoke r9.<com.android.server.compat.CompatChange: boolean hasOverride(java.lang.String)>(r8);

     label04:
        z1 = z0;

        if z0 == 0 goto label09;

     label05:
        $r4 = r0.<com.android.server.compat.CompatConfig: com.android.internal.compat.IOverrideValidator mOverrideValidator>;

        $r5 = interfaceinvoke $r4.<com.android.internal.compat.IOverrideValidator: com.android.internal.compat.OverrideAllowedState getOverrideAllowedState(long,java.lang.String)>(l0, r8);

        virtualinvoke $r5.<com.android.internal.compat.OverrideAllowedState: void enforce(long,java.lang.String)>(l0, r8);

        virtualinvoke r9.<com.android.server.compat.CompatChange: void removePackageOverride(java.lang.String)>(r8);

     label06:
        z1 = z0;

        goto label09;

     label07:
        $r7 := @caughtexception;

     label08:
        r11 = new java.lang.RuntimeException;

        specialinvoke r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to call override validator!", $r7);

        throw r11;

     label09:
        specialinvoke r0.<com.android.server.compat.CompatConfig: void invalidateCache()>();

        exitmonitor r1;

     label10:
        return z1;

     label11:
        $r6 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch android.os.RemoteException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    void removePackageOverrides(java.lang.String) throws android.os.RemoteException, java.lang.SecurityException
    {
        com.android.server.compat.CompatConfig r0;
        android.util.LongSparseArray r1, $r2, $r3, $r7;
        int i0, i3;
        java.lang.Object $r4, $r8;
        boolean $z0;
        com.android.internal.compat.IOverrideValidator $r5;
        long $l1, $l2;
        com.android.internal.compat.OverrideAllowedState $r6;
        com.android.server.compat.CompatChange $r9, r13;
        android.os.RemoteException $r10;
        java.lang.Throwable $r11;
        java.lang.String r12;
        java.lang.RuntimeException r15;

        r0 := @this: com.android.server.compat.CompatConfig;

        r12 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        entermonitor r1;

        i3 = 0;

     label01:
        $r2 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        i0 = virtualinvoke $r2.<android.util.LongSparseArray: int size()>();

     label02:
        if i3 >= i0 goto label09;

     label03:
        $r3 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r4 = virtualinvoke $r3.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i3);

        r13 = (com.android.server.compat.CompatChange) $r4;

        $z0 = virtualinvoke r13.<com.android.server.compat.CompatChange: boolean hasOverride(java.lang.String)>(r12);

        if $z0 == 0 goto label06;

        $r5 = r0.<com.android.server.compat.CompatConfig: com.android.internal.compat.IOverrideValidator mOverrideValidator>;

        $l1 = virtualinvoke r13.<com.android.server.compat.CompatChange: long getId()>();

        $r6 = interfaceinvoke $r5.<com.android.internal.compat.IOverrideValidator: com.android.internal.compat.OverrideAllowedState getOverrideAllowedState(long,java.lang.String)>($l1, r12);

        $l2 = virtualinvoke r13.<com.android.server.compat.CompatChange: long getId()>();

        virtualinvoke $r6.<com.android.internal.compat.OverrideAllowedState: void enforce(long,java.lang.String)>($l2, r12);

     label04:
        if r13 == null goto label06;

     label05:
        $r7 = r0.<com.android.server.compat.CompatConfig: android.util.LongSparseArray mChanges>;

        $r8 = virtualinvoke $r7.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i3);

        $r9 = (com.android.server.compat.CompatChange) $r8;

        virtualinvoke $r9.<com.android.server.compat.CompatChange: void removePackageOverride(java.lang.String)>(r12);

     label06:
        i3 = i3 + 1;

        goto label01;

     label07:
        $r10 := @caughtexception;

     label08:
        r15 = new java.lang.RuntimeException;

        specialinvoke r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to call override validator!", $r10);

        throw r15;

     label09:
        specialinvoke r0.<com.android.server.compat.CompatConfig: void invalidateCache()>();

        exitmonitor r1;

     label10:
        return;

     label11:
        $r11 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch android.os.RemoteException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public static void <clinit>()
    {
        <com.android.server.compat.CompatConfig: java.lang.String TAG> = "CompatConfig";

        return;
    }
}
