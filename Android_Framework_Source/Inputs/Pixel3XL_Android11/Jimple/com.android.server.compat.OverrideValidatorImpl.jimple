public class com.android.server.compat.OverrideValidatorImpl extends com.android.internal.compat.IOverrideValidator$Stub
{
    private com.android.internal.compat.AndroidBuildClassifier mAndroidBuildClassifier;
    private com.android.server.compat.CompatConfig mCompatConfig;
    private android.content.Context mContext;

    void <init>(com.android.internal.compat.AndroidBuildClassifier, android.content.Context, com.android.server.compat.CompatConfig)
    {
        com.android.server.compat.OverrideValidatorImpl r0;
        com.android.internal.compat.AndroidBuildClassifier r1;
        android.content.Context r2;
        com.android.server.compat.CompatConfig r3;

        r0 := @this: com.android.server.compat.OverrideValidatorImpl;

        r1 := @parameter0: com.android.internal.compat.AndroidBuildClassifier;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: com.android.server.compat.CompatConfig;

        specialinvoke r0.<com.android.internal.compat.IOverrideValidator$Stub: void <init>()>();

        r0.<com.android.server.compat.OverrideValidatorImpl: com.android.internal.compat.AndroidBuildClassifier mAndroidBuildClassifier> = r1;

        r0.<com.android.server.compat.OverrideValidatorImpl: android.content.Context mContext> = r2;

        r0.<com.android.server.compat.OverrideValidatorImpl: com.android.server.compat.CompatConfig mCompatConfig> = r3;

        return;
    }

    public com.android.internal.compat.OverrideAllowedState getOverrideAllowedState(long, java.lang.String)
    {
        com.android.server.compat.OverrideValidatorImpl r0;
        long l0;
        boolean z0, z1, z2, $z3;
        int i1, i2, $i3, $i4;
        android.content.pm.PackageManager r1;
        com.android.server.compat.CompatConfig $r2, $r5, $r6;
        com.android.internal.compat.AndroidBuildClassifier $r3, $r4;
        android.content.Context $r7;
        java.lang.IllegalStateException $r8;
        com.android.internal.compat.OverrideAllowedState $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17;
        android.content.pm.PackageManager$NameNotFoundException $r16;
        java.lang.String r18;
        android.content.pm.ApplicationInfo r19;

        r0 := @this: com.android.server.compat.OverrideValidatorImpl;

        l0 := @parameter0: long;

        r18 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.compat.OverrideValidatorImpl: com.android.server.compat.CompatConfig mCompatConfig>;

        $z3 = virtualinvoke $r2.<com.android.server.compat.CompatConfig: boolean isLoggingOnly(long)>(l0);

        if $z3 == 0 goto label01;

        $r15 = new com.android.internal.compat.OverrideAllowedState;

        specialinvoke $r15.<com.android.internal.compat.OverrideAllowedState: void <init>(int,int,int)>(5, -1, -1);

        return $r15;

     label01:
        $r3 = r0.<com.android.server.compat.OverrideValidatorImpl: com.android.internal.compat.AndroidBuildClassifier mAndroidBuildClassifier>;

        z0 = virtualinvoke $r3.<com.android.internal.compat.AndroidBuildClassifier: boolean isDebuggableBuild()>();

        $r4 = r0.<com.android.server.compat.OverrideValidatorImpl: com.android.internal.compat.AndroidBuildClassifier mAndroidBuildClassifier>;

        z1 = virtualinvoke $r4.<com.android.internal.compat.AndroidBuildClassifier: boolean isFinalBuild()>();

        $r5 = r0.<com.android.server.compat.OverrideValidatorImpl: com.android.server.compat.CompatConfig mCompatConfig>;

        i1 = virtualinvoke $r5.<com.android.server.compat.CompatConfig: int minTargetSdkForChangeId(long)>(l0);

        $r6 = r0.<com.android.server.compat.OverrideValidatorImpl: com.android.server.compat.CompatConfig mCompatConfig>;

        z2 = virtualinvoke $r6.<com.android.server.compat.CompatConfig: boolean isDisabled(long)>(l0);

        if z0 == 0 goto label02;

        $r14 = new com.android.internal.compat.OverrideAllowedState;

        specialinvoke $r14.<com.android.internal.compat.OverrideAllowedState: void <init>(int,int,int)>(0, -1, -1);

        return $r14;

     label02:
        $r7 = r0.<com.android.server.compat.OverrideValidatorImpl: android.content.Context mContext>;

        r1 = virtualinvoke $r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        if r1 == null goto label11;

     label03:
        r19 = virtualinvoke r1.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r18, 0);

     label04:
        i2 = r19.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $i3 = r19.<android.content.pm.ApplicationInfo: int flags>;

        $i4 = $i3 & 2;

        if $i4 != 0 goto label05;

        $r13 = new com.android.internal.compat.OverrideAllowedState;

        specialinvoke $r13.<com.android.internal.compat.OverrideAllowedState: void <init>(int,int,int)>(1, -1, -1);

        return $r13;

     label05:
        if z1 != 0 goto label06;

        $r12 = new com.android.internal.compat.OverrideAllowedState;

        specialinvoke $r12.<com.android.internal.compat.OverrideAllowedState: void <init>(int,int,int)>(0, i2, i1);

        return $r12;

     label06:
        if i1 != -1 goto label07;

        if z2 != 0 goto label07;

        $r11 = new com.android.internal.compat.OverrideAllowedState;

        specialinvoke $r11.<com.android.internal.compat.OverrideAllowedState: void <init>(int,int,int)>(2, i2, i1);

        return $r11;

     label07:
        if z2 != 0 goto label09;

        if i2 > i1 goto label08;

        goto label09;

     label08:
        $r10 = new com.android.internal.compat.OverrideAllowedState;

        specialinvoke $r10.<com.android.internal.compat.OverrideAllowedState: void <init>(int,int,int)>(3, i2, i1);

        return $r10;

     label09:
        $r9 = new com.android.internal.compat.OverrideAllowedState;

        specialinvoke $r9.<com.android.internal.compat.OverrideAllowedState: void <init>(int,int,int)>(0, i2, i1);

        return $r9;

     label10:
        $r16 := @caughtexception;

        $r17 = new com.android.internal.compat.OverrideAllowedState;

        specialinvoke $r17.<com.android.internal.compat.OverrideAllowedState: void <init>(int,int,int)>(4, -1, -1);

        return $r17;

     label11:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No PackageManager!");

        throw $r8;

        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label10;
    }
}
