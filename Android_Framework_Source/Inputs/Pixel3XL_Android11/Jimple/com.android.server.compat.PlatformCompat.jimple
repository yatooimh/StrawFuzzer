public class com.android.server.compat.PlatformCompat extends com.android.internal.compat.IPlatformCompat$Stub
{
    private static final java.lang.String TAG;
    private static int sMaxTargetSdk;
    private static int sMinTargetSdk;
    private final com.android.internal.compat.ChangeReporter mChangeReporter;
    private final com.android.server.compat.CompatConfig mCompatConfig;
    private final android.content.Context mContext;

    static void <clinit>()
    {
        <com.android.server.compat.PlatformCompat: java.lang.String TAG> = "Compatibility";

        <com.android.server.compat.PlatformCompat: int sMinTargetSdk> = 28;

        <com.android.server.compat.PlatformCompat: int sMaxTargetSdk> = 29;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.compat.PlatformCompat r0;
        android.content.Context r1, $r4;
        com.android.internal.compat.ChangeReporter $r2;
        com.android.internal.compat.AndroidBuildClassifier $r3;
        com.android.server.compat.CompatConfig $r5;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.compat.IPlatformCompat$Stub: void <init>()>();

        r0.<com.android.server.compat.PlatformCompat: android.content.Context mContext> = r1;

        $r2 = new com.android.internal.compat.ChangeReporter;

        specialinvoke $r2.<com.android.internal.compat.ChangeReporter: void <init>(int)>(2);

        r0.<com.android.server.compat.PlatformCompat: com.android.internal.compat.ChangeReporter mChangeReporter> = $r2;

        $r3 = new com.android.internal.compat.AndroidBuildClassifier;

        specialinvoke $r3.<com.android.internal.compat.AndroidBuildClassifier: void <init>()>();

        $r4 = r0.<com.android.server.compat.PlatformCompat: android.content.Context mContext>;

        $r5 = staticinvoke <com.android.server.compat.CompatConfig: com.android.server.compat.CompatConfig create(com.android.internal.compat.AndroidBuildClassifier,android.content.Context)>($r3, $r4);

        r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig> = $r5;

        return;
    }

    void <init>(android.content.Context, com.android.server.compat.CompatConfig)
    {
        com.android.server.compat.PlatformCompat r0;
        android.content.Context r1;
        com.android.server.compat.CompatConfig r2;
        com.android.internal.compat.ChangeReporter $r3;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.compat.CompatConfig;

        specialinvoke r0.<com.android.internal.compat.IPlatformCompat$Stub: void <init>()>();

        r0.<com.android.server.compat.PlatformCompat: android.content.Context mContext> = r1;

        $r3 = new com.android.internal.compat.ChangeReporter;

        specialinvoke $r3.<com.android.internal.compat.ChangeReporter: void <init>(int)>(2);

        r0.<com.android.server.compat.PlatformCompat: com.android.internal.compat.ChangeReporter mChangeReporter> = $r3;

        r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig> = r2;

        return;
    }

    private void checkCompatChangeLogPermission() throws java.lang.SecurityException
    {
        com.android.server.compat.PlatformCompat r0;
        android.content.Context $r1;
        int $i0;
        java.lang.SecurityException $r2;

        r0 := @this: com.android.server.compat.PlatformCompat;

        $r1 = r0.<com.android.server.compat.PlatformCompat: android.content.Context mContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.LOG_COMPAT_CHANGE");

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Cannot log compat change usage");

        throw $r2;
    }

    private void checkCompatChangeOverridePermission() throws java.lang.SecurityException
    {
        com.android.server.compat.PlatformCompat r0;
        android.content.Context $r1;
        int $i0;
        java.lang.SecurityException $r2;

        r0 := @this: com.android.server.compat.PlatformCompat;

        $r1 = r0.<com.android.server.compat.PlatformCompat: android.content.Context mContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.OVERRIDE_COMPAT_CHANGE_CONFIG");

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Cannot override compat change");

        throw $r2;
    }

    private void checkCompatChangeReadAndLogPermission() throws java.lang.SecurityException
    {
        com.android.server.compat.PlatformCompat r0;

        r0 := @this: com.android.server.compat.PlatformCompat;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeReadPermission()>();

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeLogPermission()>();

        return;
    }

    private void checkCompatChangeReadPermission() throws java.lang.SecurityException
    {
        com.android.server.compat.PlatformCompat r0;
        android.content.Context $r1;
        int $i0;
        java.lang.SecurityException $r2;

        r0 := @this: com.android.server.compat.PlatformCompat;

        $r1 = r0.<com.android.server.compat.PlatformCompat: android.content.Context mContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.READ_COMPAT_CHANGE_CONFIG");

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Cannot read compat change");

        throw $r2;
    }

    private android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int)
    {
        com.android.server.compat.PlatformCompat r0;
        java.lang.String r1;
        int i0;
        java.lang.Object $r2;
        android.content.pm.PackageManagerInternal $r3;
        android.content.pm.ApplicationInfo $r4;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r3 = (android.content.pm.PackageManagerInternal) $r2;

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManagerInternal: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int,int)>(r1, 0, i0, i0);

        return $r4;
    }

    private boolean isShownInUI(com.android.internal.compat.CompatibilityChangeInfo)
    {
        com.android.server.compat.PlatformCompat r0;
        com.android.internal.compat.CompatibilityChangeInfo r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: com.android.internal.compat.CompatibilityChangeInfo;

        $z0 = virtualinvoke r1.<com.android.internal.compat.CompatibilityChangeInfo: boolean getLoggingOnly()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<com.android.internal.compat.CompatibilityChangeInfo: int getEnableAfterTargetSdk()>();

        if $i0 <= 0 goto label3;

        $i1 = virtualinvoke r1.<com.android.internal.compat.CompatibilityChangeInfo: int getEnableAfterTargetSdk()>();

        $i2 = <com.android.server.compat.PlatformCompat: int sMinTargetSdk>;

        if $i1 < $i2 goto label2;

        $i3 = virtualinvoke r1.<com.android.internal.compat.CompatibilityChangeInfo: int getEnableAfterTargetSdk()>();

        $i4 = <com.android.server.compat.PlatformCompat: int sMaxTargetSdk>;

        if $i3 <= $i4 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    private void killPackage(java.lang.String)
    {
        com.android.server.compat.PlatformCompat r0;
        java.lang.String r1, $r10, $r15;
        int i0, $i1, $i3;
        java.lang.Object $r2;
        android.content.pm.PackageManagerInternal $r3;
        java.lang.StringBuilder $r4, $r11;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r3 = (android.content.pm.PackageManagerInternal) $r2;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        i0 = virtualinvoke $r3.<android.content.pm.PackageManagerInternal: int getPackageUid(java.lang.String,int,int)>(r1, 0, $i1);

        if i0 >= 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Didn\'t find package ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on device.");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("Compatibility", $r15);

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Killing package ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (UID ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("Compatibility", $r10);

        $i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void killUid(int,int,java.lang.String)>($i3, -1, "PlatformCompat overrides");

        return;
    }

    private void killUid(int, int, java.lang.String)
    {
        com.android.server.compat.PlatformCompat r0;
        int i0, i1;
        long l2;
        android.app.IActivityManager r1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.compat.PlatformCompat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

     label2:
        if r1 == null goto label6;

     label3:
        interfaceinvoke r1.<android.app.IActivityManager: void killUid(int,int,java.lang.String)>(i0, i1, r4);

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label7:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    static com.android.internal.compat.CompatibilityChangeInfo[] lambda$listUIChanges$1(int)
    {
        int i0;
        com.android.internal.compat.CompatibilityChangeInfo[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (com.android.internal.compat.CompatibilityChangeInfo)[i0];

        return $r0;
    }

    private void reportChange(long, int, int)
    {
        com.android.server.compat.PlatformCompat r0;
        long l0;
        int i1, i2;
        com.android.internal.compat.ChangeReporter $r1;

        r0 := @this: com.android.server.compat.PlatformCompat;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.server.compat.PlatformCompat: com.android.internal.compat.ChangeReporter mChangeReporter>;

        virtualinvoke $r1.<com.android.internal.compat.ChangeReporter: void reportChange(int,long,int)>(i1, l0, i2);

        return;
    }

    public boolean clearOverride(long, java.lang.String) throws android.os.RemoteException, java.lang.SecurityException
    {
        com.android.server.compat.PlatformCompat r0;
        long l0;
        java.lang.String r1;
        boolean z0;
        com.android.server.compat.CompatConfig $r2;

        r0 := @this: com.android.server.compat.PlatformCompat;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeOverridePermission()>();

        $r2 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        z0 = virtualinvoke $r2.<com.android.server.compat.CompatConfig: boolean removeOverride(long,java.lang.String)>(l0, r1);

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void killPackage(java.lang.String)>(r1);

        return z0;
    }

    public void clearOverrides(java.lang.String) throws android.os.RemoteException, java.lang.SecurityException
    {
        com.android.server.compat.PlatformCompat r0;
        java.lang.String r1;
        com.android.server.compat.CompatConfig $r2;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeOverridePermission()>();

        $r2 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        virtualinvoke $r2.<com.android.server.compat.CompatConfig: void removePackageOverrides(java.lang.String)>(r1);

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void killPackage(java.lang.String)>(r1);

        return;
    }

    public void clearOverridesForTest(java.lang.String) throws android.os.RemoteException, java.lang.SecurityException
    {
        com.android.server.compat.PlatformCompat r0;
        java.lang.String r1;
        com.android.server.compat.CompatConfig $r2;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeOverridePermission()>();

        $r2 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        virtualinvoke $r2.<com.android.server.compat.CompatConfig: void removePackageOverrides(java.lang.String)>(r1);

        return;
    }

    public int disableTargetSdkChanges(java.lang.String, int) throws android.os.RemoteException, java.lang.SecurityException
    {
        com.android.server.compat.PlatformCompat r0;
        java.lang.String r1;
        com.android.server.compat.CompatConfig $r2;
        int i0, i1;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeOverridePermission()>();

        $r2 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        i1 = virtualinvoke $r2.<com.android.server.compat.CompatConfig: int disableTargetSdkChangesForPackage(java.lang.String,int)>(r1, i0);

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void killPackage(java.lang.String)>(r1);

        return i1;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.compat.PlatformCompat r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.content.Context $r4;
        boolean $z0;
        com.android.server.compat.CompatConfig $r5;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.compat.PlatformCompat: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpAndUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "platform_compat", r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeReadAndLogPermission()>();

        $r5 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        virtualinvoke $r5.<com.android.server.compat.CompatConfig: void dumpConfig(java.io.PrintWriter)>(r2);

        return;
    }

    public int enableTargetSdkChanges(java.lang.String, int) throws android.os.RemoteException, java.lang.SecurityException
    {
        com.android.server.compat.PlatformCompat r0;
        java.lang.String r1;
        com.android.server.compat.CompatConfig $r2;
        int i0, i1;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeOverridePermission()>();

        $r2 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        i1 = virtualinvoke $r2.<com.android.server.compat.CompatConfig: int enableTargetSdkChangesForPackage(java.lang.String,int)>(r1, i0);

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void killPackage(java.lang.String)>(r1);

        return i1;
    }

    public com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)
    {
        com.android.server.compat.PlatformCompat r0;
        android.content.pm.ApplicationInfo r1;
        com.android.server.compat.CompatConfig $r2;
        com.android.internal.compat.CompatibilityChangeConfig $r3;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeReadAndLogPermission()>();

        $r2 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        $r3 = virtualinvoke $r2.<com.android.server.compat.CompatConfig: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>(r1);

        return $r3;
    }

    public long[] getDisabledChanges(android.content.pm.ApplicationInfo)
    {
        com.android.server.compat.PlatformCompat r0;
        android.content.pm.ApplicationInfo r1;
        com.android.server.compat.CompatConfig $r2;
        long[] $r3;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        $r3 = virtualinvoke $r2.<com.android.server.compat.CompatConfig: long[] getDisabledChanges(android.content.pm.ApplicationInfo)>(r1);

        return $r3;
    }

    public com.android.internal.compat.IOverrideValidator getOverrideValidator()
    {
        com.android.server.compat.PlatformCompat r0;
        com.android.server.compat.CompatConfig $r1;
        com.android.internal.compat.IOverrideValidator $r2;

        r0 := @this: com.android.server.compat.PlatformCompat;

        $r1 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        $r2 = virtualinvoke $r1.<com.android.server.compat.CompatConfig: com.android.internal.compat.IOverrideValidator getOverrideValidator()>();

        return $r2;
    }

    public boolean isChangeEnabled(long, android.content.pm.ApplicationInfo)
    {
        com.android.server.compat.PlatformCompat r0;
        long l0;
        android.content.pm.ApplicationInfo r1;
        boolean $z0;

        r0 := @this: com.android.server.compat.PlatformCompat;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.pm.ApplicationInfo;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeReadAndLogPermission()>();

        $z0 = virtualinvoke r0.<com.android.server.compat.PlatformCompat: boolean isChangeEnabledInternal(long,android.content.pm.ApplicationInfo)>(l0, r1);

        return $z0;
    }

    public boolean isChangeEnabledByPackageName(long, java.lang.String, int)
    {
        com.android.server.compat.PlatformCompat r0;
        long l0;
        int i1;
        boolean $z0;
        java.lang.String r1;
        android.content.pm.ApplicationInfo r2;

        r0 := @this: com.android.server.compat.PlatformCompat;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeReadAndLogPermission()>();

        r2 = specialinvoke r0.<com.android.server.compat.PlatformCompat: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, i1);

        if r2 != null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.compat.PlatformCompat: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>(l0, r2);

        return $z0;
    }

    public boolean isChangeEnabledByUid(long, int)
    {
        com.android.server.compat.PlatformCompat r0;
        long l0;
        int i1, i2, $i3, $i4, i5;
        java.lang.String[] r1;
        java.lang.String r2;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        boolean $z0, z1;

        r0 := @this: com.android.server.compat.PlatformCompat;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeReadAndLogPermission()>();

        $r3 = r0.<com.android.server.compat.PlatformCompat: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i1);

        if r1 == null goto label6;

        $i3 = lengthof r1;

        if $i3 != 0 goto label1;

        goto label6;

     label1:
        z1 = 1;

        i2 = lengthof r1;

        i5 = 0;

     label2:
        if i5 >= i2 goto label5;

        r2 = r1[i5];

        if z1 == 0 goto label3;

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $z0 = virtualinvoke r0.<com.android.server.compat.PlatformCompat: boolean isChangeEnabledByPackageName(long,java.lang.String,int)>(l0, r2, $i4);

        if $z0 == 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        i5 = i5 + 1;

        goto label2;

     label5:
        return z1;

     label6:
        return 1;
    }

    public boolean isChangeEnabledInternal(long, android.content.pm.ApplicationInfo)
    {
        com.android.server.compat.PlatformCompat r0;
        long l0;
        android.content.pm.ApplicationInfo r1;
        com.android.server.compat.CompatConfig $r2;
        boolean $z0;
        int $i1, $i2;

        r0 := @this: com.android.server.compat.PlatformCompat;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.pm.ApplicationInfo;

        $r2 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        $z0 = virtualinvoke $r2.<com.android.server.compat.CompatConfig: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>(l0, r1);

        if $z0 == 0 goto label1;

        $i2 = r1.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void reportChange(long,int,int)>(l0, $i2, 1);

        return 1;

     label1:
        $i1 = r1.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void reportChange(long,int,int)>(l0, $i1, 2);

        return 0;
    }

    public boolean isKnownChangeId(long)
    {
        com.android.server.compat.PlatformCompat r0;
        long l0;
        com.android.server.compat.CompatConfig $r1;
        boolean $z0;

        r0 := @this: com.android.server.compat.PlatformCompat;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        $z0 = virtualinvoke $r1.<com.android.server.compat.CompatConfig: boolean isKnownChangeId(long)>(l0);

        return $z0;
    }

    public boolean lambda$listUIChanges$0$PlatformCompat(com.android.internal.compat.CompatibilityChangeInfo)
    {
        com.android.server.compat.PlatformCompat r0;
        com.android.internal.compat.CompatibilityChangeInfo r1;
        boolean $z0;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: com.android.internal.compat.CompatibilityChangeInfo;

        $z0 = specialinvoke r0.<com.android.server.compat.PlatformCompat: boolean isShownInUI(com.android.internal.compat.CompatibilityChangeInfo)>(r1);

        return $z0;
    }

    public com.android.internal.compat.CompatibilityChangeInfo[] listAllChanges()
    {
        com.android.server.compat.PlatformCompat r0;
        com.android.server.compat.CompatConfig $r1;
        com.android.internal.compat.CompatibilityChangeInfo[] $r2;

        r0 := @this: com.android.server.compat.PlatformCompat;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeReadPermission()>();

        $r1 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        $r2 = virtualinvoke $r1.<com.android.server.compat.CompatConfig: com.android.internal.compat.CompatibilityChangeInfo[] dumpChanges()>();

        return $r2;
    }

    public com.android.internal.compat.CompatibilityChangeInfo[] listUIChanges()
    {
        com.android.server.compat.PlatformCompat r0;
        com.android.internal.compat.CompatibilityChangeInfo[] $r1, $r7;
        java.util.stream.Stream $r2, $r4;
        com.android.server.compat.'-$$Lambda$PlatformCompat$5Wel5CZ9QNn2JE3j94F2PvQy404' $r5;
        java.lang.Object[] $r6;
        com.android.server.compat._$$Lambda$PlatformCompat$AtVEv4aAuZbcSh4W8E3Qv4I8wOY r8;
        java.util.function.IntFunction r9;

        r0 := @this: com.android.server.compat.PlatformCompat;

        $r1 = virtualinvoke r0.<com.android.server.compat.PlatformCompat: com.android.internal.compat.CompatibilityChangeInfo[] listAllChanges()>();

        $r2 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>($r1);

        r8 = new com.android.server.compat._$$Lambda$PlatformCompat$AtVEv4aAuZbcSh4W8E3Qv4I8wOY;

        specialinvoke r8.<com.android.server.compat._$$Lambda$PlatformCompat$AtVEv4aAuZbcSh4W8E3Qv4I8wOY: void <init>(com.android.server.compat.PlatformCompat)>(r0);

        $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r8);

        $r5 = <com.android.server.compat._$$Lambda$PlatformCompat$5Wel5CZ9QNn2JE3j94F2PvQy404: com.android.server.compat.'-$$Lambda$PlatformCompat$5Wel5CZ9QNn2JE3j94F2PvQy404' INSTANCE>;

        r9 = (java.util.function.IntFunction) $r5;

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>(r9);

        $r7 = (com.android.internal.compat.CompatibilityChangeInfo[]) $r6;

        return $r7;
    }

    public long lookupChangeId(java.lang.String)
    {
        com.android.server.compat.PlatformCompat r0;
        java.lang.String r1;
        com.android.server.compat.CompatConfig $r2;
        long $l0;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        $l0 = virtualinvoke $r2.<com.android.server.compat.CompatConfig: long lookupChangeId(java.lang.String)>(r1);

        return $l0;
    }

    public boolean registerListener(long, com.android.server.compat.CompatChange$ChangeListener)
    {
        com.android.server.compat.PlatformCompat r0;
        long l0;
        com.android.server.compat.CompatChange$ChangeListener r1;
        com.android.server.compat.CompatConfig $r2;
        boolean $z0;

        r0 := @this: com.android.server.compat.PlatformCompat;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.server.compat.CompatChange$ChangeListener;

        $r2 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        $z0 = virtualinvoke $r2.<com.android.server.compat.CompatConfig: boolean registerListener(long,com.android.server.compat.CompatChange$ChangeListener)>(l0, r1);

        return $z0;
    }

    public void reportChange(long, android.content.pm.ApplicationInfo)
    {
        com.android.server.compat.PlatformCompat r0;
        long l0;
        android.content.pm.ApplicationInfo r1;
        int $i1;

        r0 := @this: com.android.server.compat.PlatformCompat;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.pm.ApplicationInfo;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeLogPermission()>();

        $i1 = r1.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void reportChange(long,int,int)>(l0, $i1, 3);

        return;
    }

    public void reportChangeByPackageName(long, java.lang.String, int)
    {
        com.android.server.compat.PlatformCompat r0;
        long l0;
        int i1;
        java.lang.String r1;
        android.content.pm.ApplicationInfo r2;

        r0 := @this: com.android.server.compat.PlatformCompat;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeLogPermission()>();

        r2 = specialinvoke r0.<com.android.server.compat.PlatformCompat: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, i1);

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.server.compat.PlatformCompat: void reportChange(long,android.content.pm.ApplicationInfo)>(l0, r2);

        return;
    }

    public void reportChangeByUid(long, int)
    {
        com.android.server.compat.PlatformCompat r0;
        long l0;
        int i1;

        r0 := @this: com.android.server.compat.PlatformCompat;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeLogPermission()>();

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void reportChange(long,int,int)>(l0, i1, 3);

        return;
    }

    public void resetReporting(android.content.pm.ApplicationInfo)
    {
        com.android.server.compat.PlatformCompat r0;
        android.content.pm.ApplicationInfo r1;
        int $i0;
        com.android.internal.compat.ChangeReporter $r2;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = r0.<com.android.server.compat.PlatformCompat: com.android.internal.compat.ChangeReporter mChangeReporter>;

        $i0 = r1.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r2.<com.android.internal.compat.ChangeReporter: void resetReportedChanges(int)>($i0);

        return;
    }

    public void setOverrides(com.android.internal.compat.CompatibilityChangeConfig, java.lang.String) throws android.os.RemoteException, java.lang.SecurityException
    {
        com.android.server.compat.PlatformCompat r0;
        com.android.internal.compat.CompatibilityChangeConfig r1;
        java.lang.String r2;
        com.android.server.compat.CompatConfig $r3;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: com.android.internal.compat.CompatibilityChangeConfig;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeOverridePermission()>();

        $r3 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        virtualinvoke $r3.<com.android.server.compat.CompatConfig: void addOverrides(com.android.internal.compat.CompatibilityChangeConfig,java.lang.String)>(r1, r2);

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void killPackage(java.lang.String)>(r2);

        return;
    }

    public void setOverridesForTest(com.android.internal.compat.CompatibilityChangeConfig, java.lang.String) throws android.os.RemoteException, java.lang.SecurityException
    {
        com.android.server.compat.PlatformCompat r0;
        com.android.internal.compat.CompatibilityChangeConfig r1;
        java.lang.String r2;
        com.android.server.compat.CompatConfig $r3;

        r0 := @this: com.android.server.compat.PlatformCompat;

        r1 := @parameter0: com.android.internal.compat.CompatibilityChangeConfig;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.compat.PlatformCompat: void checkCompatChangeOverridePermission()>();

        $r3 = r0.<com.android.server.compat.PlatformCompat: com.android.server.compat.CompatConfig mCompatConfig>;

        virtualinvoke $r3.<com.android.server.compat.CompatConfig: void addOverrides(com.android.internal.compat.CompatibilityChangeConfig,java.lang.String)>(r1, r2);

        return;
    }
}
