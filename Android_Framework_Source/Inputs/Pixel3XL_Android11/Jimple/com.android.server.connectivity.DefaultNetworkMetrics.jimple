public class com.android.server.connectivity.DefaultNetworkMetrics extends java.lang.Object
{
    private static final int ROLLING_LOG_SIZE;
    public final long creationTimeMs;
    private android.net.metrics.DefaultNetworkEvent mCurrentDefaultNetwork;
    private final java.util.List mEvents;
    private final com.android.internal.util.RingBuffer mEventsLog;
    private boolean mIsCurrentlyValid;
    private int mLastTransports;
    private long mLastValidationTimeMs;

    public void <init>()
    {
        com.android.server.connectivity.DefaultNetworkMetrics r0;
        long $l0, $l1;
        java.util.ArrayList $r1;
        com.android.internal.util.RingBuffer $r2;

        r0 := @this: com.android.server.connectivity.DefaultNetworkMetrics;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.connectivity.DefaultNetworkMetrics: long creationTimeMs> = $l0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.connectivity.DefaultNetworkMetrics: java.util.List mEvents> = $r1;

        $r2 = new com.android.internal.util.RingBuffer;

        specialinvoke $r2.<com.android.internal.util.RingBuffer: void <init>(java.lang.Class,int)>(class "Landroid/net/metrics/DefaultNetworkEvent;", 64);

        r0.<com.android.server.connectivity.DefaultNetworkMetrics: com.android.internal.util.RingBuffer mEventsLog> = $r2;

        $l1 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: long creationTimeMs>;

        specialinvoke r0.<com.android.server.connectivity.DefaultNetworkMetrics: void newDefaultNetwork(long,com.android.server.connectivity.NetworkAgentInfo)>($l1, null);

        return;
    }

    private static void fillLinkInfo(android.net.metrics.DefaultNetworkEvent, com.android.server.connectivity.NetworkAgentInfo)
    {
        android.net.metrics.DefaultNetworkEvent r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        android.net.LinkProperties r2;
        boolean z0, $z2, $z3, z4, z5, $z6, z7, $z8, z9, $z10;
        android.net.Network $r3;
        int $i0, $i1, $i5;
        android.net.NetworkCapabilities $r4;
        long $l2, $l3, $l4;
        int[] $r5;

        r0 := @parameter0: android.net.metrics.DefaultNetworkEvent;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        r2 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        $r3 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network()>();

        $i0 = $r3.<android.net.Network: int netId>;

        r0.<android.net.metrics.DefaultNetworkEvent: int netId> = $i0;

        $i1 = r0.<android.net.metrics.DefaultNetworkEvent: int transports>;

        $l2 = (long) $i1;

        $r4 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkCapabilities networkCapabilities>;

        $r5 = virtualinvoke $r4.<android.net.NetworkCapabilities: int[] getTransportTypes()>();

        $l3 = staticinvoke <com.android.internal.util.BitUtils: long packBits(int[])>($r5);

        $l4 = $l2 | $l3;

        $i5 = (int) $l4;

        r0.<android.net.metrics.DefaultNetworkEvent: int transports> = $i5;

        z0 = r0.<android.net.metrics.DefaultNetworkEvent: boolean ipv4>;

        z4 = virtualinvoke r2.<android.net.LinkProperties: boolean hasIpv4Address()>();

        if z4 == 0 goto label1;

        $z3 = virtualinvoke r2.<android.net.LinkProperties: boolean hasIpv4DefaultRoute()>();

        if $z3 == 0 goto label1;

        z5 = 1;

        goto label2;

     label1:
        z5 = 0;

     label2:
        $z6 = z0 | z5;

        r0.<android.net.metrics.DefaultNetworkEvent: boolean ipv4> = $z6;

        z7 = r0.<android.net.metrics.DefaultNetworkEvent: boolean ipv6>;

        $z8 = virtualinvoke r2.<android.net.LinkProperties: boolean hasGlobalIpv6Address()>();

        if $z8 == 0 goto label3;

        $z2 = virtualinvoke r2.<android.net.LinkProperties: boolean hasIpv6DefaultRoute()>();

        if $z2 == 0 goto label3;

        z9 = 1;

        goto label4;

     label3:
        z9 = 0;

     label4:
        $z10 = z7 | z9;

        r0.<android.net.metrics.DefaultNetworkEvent: boolean ipv6> = $z10;

        return;
    }

    private void logCurrentDefaultNetwork(long, com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.connectivity.DefaultNetworkMetrics r0;
        long l0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        android.net.metrics.DefaultNetworkEvent r2;
        boolean $z0;
        int $i1, $i2, $i3, $i4;
        java.util.List $r3;
        com.android.internal.util.RingBuffer $r4;

        r0 := @this: com.android.server.connectivity.DefaultNetworkMetrics;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        $z0 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: boolean mIsCurrentlyValid>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.connectivity.DefaultNetworkMetrics: void updateValidationTime(long)>(l0);

     label1:
        r2 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: android.net.metrics.DefaultNetworkEvent mCurrentDefaultNetwork>;

        virtualinvoke r2.<android.net.metrics.DefaultNetworkEvent: void updateDuration(long)>(l0);

        $i1 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: int mLastTransports>;

        r2.<android.net.metrics.DefaultNetworkEvent: int previousTransports> = $i1;

        if r1 == null goto label2;

        staticinvoke <com.android.server.connectivity.DefaultNetworkMetrics: void fillLinkInfo(android.net.metrics.DefaultNetworkEvent,com.android.server.connectivity.NetworkAgentInfo)>(r2, r1);

        $i4 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        r2.<android.net.metrics.DefaultNetworkEvent: int finalScore> = $i4;

     label2:
        $i2 = r2.<android.net.metrics.DefaultNetworkEvent: int transports>;

        if $i2 == 0 goto label3;

        $i3 = r2.<android.net.metrics.DefaultNetworkEvent: int transports>;

        r0.<com.android.server.connectivity.DefaultNetworkMetrics: int mLastTransports> = $i3;

     label3:
        $r3 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: java.util.List mEvents>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r4 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: com.android.internal.util.RingBuffer mEventsLog>;

        virtualinvoke $r4.<com.android.internal.util.RingBuffer: void append(java.lang.Object)>(r2);

        return;
    }

    private void newDefaultNetwork(long, com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.connectivity.DefaultNetworkMetrics r0;
        long l0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        android.net.metrics.DefaultNetworkEvent $r3;
        int $i1;
        boolean $z0;

        r0 := @this: com.android.server.connectivity.DefaultNetworkMetrics;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        $r3 = new android.net.metrics.DefaultNetworkEvent;

        specialinvoke $r3.<android.net.metrics.DefaultNetworkEvent: void <init>(long)>(l0);

        $r3.<android.net.metrics.DefaultNetworkEvent: long durationMs> = l0;

        if r1 == null goto label1;

        staticinvoke <com.android.server.connectivity.DefaultNetworkMetrics: void fillLinkInfo(android.net.metrics.DefaultNetworkEvent,com.android.server.connectivity.NetworkAgentInfo)>($r3, r1);

        $i1 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        $r3.<android.net.metrics.DefaultNetworkEvent: int initialScore> = $i1;

        $z0 = r1.<com.android.server.connectivity.NetworkAgentInfo: boolean lastValidated>;

        if $z0 == 0 goto label2;

        r0.<com.android.server.connectivity.DefaultNetworkMetrics: boolean mIsCurrentlyValid> = 1;

        r0.<com.android.server.connectivity.DefaultNetworkMetrics: long mLastValidationTimeMs> = l0;

        goto label2;

     label1:
        r0.<com.android.server.connectivity.DefaultNetworkMetrics: boolean mIsCurrentlyValid> = 0;

     label2:
        r0.<com.android.server.connectivity.DefaultNetworkMetrics: android.net.metrics.DefaultNetworkEvent mCurrentDefaultNetwork> = $r3;

        return;
    }

    private static void printEvent(long, java.io.PrintWriter, android.net.metrics.DefaultNetworkEvent)
    {
        java.io.PrintWriter r0;
        android.net.metrics.DefaultNetworkEvent r1;
        long $l0, l1, l2;
        java.lang.Object[] $r2;
        java.lang.Long $r3, $r4;
        java.lang.String $r5;

        l1 := @parameter0: long;

        r0 := @parameter1: java.io.PrintWriter;

        r1 := @parameter2: android.net.metrics.DefaultNetworkEvent;

        $l0 = r1.<android.net.metrics.DefaultNetworkEvent: long durationMs>;

        l2 = l1 - $l0;

        $r2 = newarray (java.lang.Object)[3];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r2[1] = $r4;

        $r2[2] = r1;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%tT.%tL: %s", $r2);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        return;
    }

    private void updateValidationTime(long)
    {
        com.android.server.connectivity.DefaultNetworkMetrics r0;
        long l0, $l1, $l2, $l3, $l4;
        android.net.metrics.DefaultNetworkEvent r1;

        r0 := @this: com.android.server.connectivity.DefaultNetworkMetrics;

        l0 := @parameter0: long;

        r1 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: android.net.metrics.DefaultNetworkEvent mCurrentDefaultNetwork>;

        $l3 = r1.<android.net.metrics.DefaultNetworkEvent: long validatedMs>;

        $l1 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: long mLastValidationTimeMs>;

        $l2 = l0 - $l1;

        $l4 = $l3 + $l2;

        r1.<android.net.metrics.DefaultNetworkEvent: long validatedMs> = $l4;

        return;
    }

    public void flushEvents(java.util.List)
    {
        com.android.server.connectivity.DefaultNetworkMetrics r0;
        java.util.Iterator r1;
        java.util.List $r2, $r3, r8;
        boolean $z0;
        java.lang.Object $r4;
        android.net.metrics.DefaultNetworkEvent $r5;
        com.android.server.connectivity.metrics.nano.IpConnectivityLogClass$IpConnectivityEvent $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.connectivity.DefaultNetworkMetrics;

        r8 := @parameter0: java.util.List;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: java.util.List mEvents>;

        r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.net.metrics.DefaultNetworkEvent) $r4;

        $r6 = staticinvoke <com.android.server.connectivity.IpConnectivityEventBuilder: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass$IpConnectivityEvent toProto(android.net.metrics.DefaultNetworkEvent)>($r5);

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r6);

     label3:
        goto label2;

     label4:
        $r3 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: java.util.List mEvents>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

     label5:
        exitmonitor r0;

        return;

     label6:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void listEvents(java.io.PrintWriter)
    {
        com.android.server.connectivity.DefaultNetworkMetrics r0;
        long l0, l1;
        android.net.metrics.DefaultNetworkEvent[] r1;
        int i2, i3;
        com.android.internal.util.RingBuffer $r2;
        java.lang.Object[] $r3;
        android.net.metrics.DefaultNetworkEvent $r4, $r5, $r6;
        boolean $z0;
        java.lang.Throwable $r7;
        java.io.PrintWriter r8;

        r0 := @this: com.android.server.connectivity.DefaultNetworkMetrics;

        r8 := @parameter0: java.io.PrintWriter;

        entermonitor r0;

     label1:
        virtualinvoke r8.<java.io.PrintWriter: void println(java.lang.String)>("default network events:");

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r2 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: com.android.internal.util.RingBuffer mEventsLog>;

        $r3 = virtualinvoke $r2.<com.android.internal.util.RingBuffer: java.lang.Object[] toArray()>();

        r1 = (android.net.metrics.DefaultNetworkEvent[]) $r3;

        i2 = lengthof r1;

     label2:
        i3 = 0;

     label3:
        if i3 >= i2 goto label6;

     label4:
        $r6 = r1[i3];

        staticinvoke <com.android.server.connectivity.DefaultNetworkMetrics: void printEvent(long,java.io.PrintWriter,android.net.metrics.DefaultNetworkEvent)>(l0, r8, $r6);

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        $r4 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: android.net.metrics.DefaultNetworkEvent mCurrentDefaultNetwork>;

        virtualinvoke $r4.<android.net.metrics.DefaultNetworkEvent: void updateDuration(long)>(l1);

        $z0 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: boolean mIsCurrentlyValid>;

        if $z0 == 0 goto label7;

        specialinvoke r0.<com.android.server.connectivity.DefaultNetworkMetrics: void updateValidationTime(long)>(l1);

        r0.<com.android.server.connectivity.DefaultNetworkMetrics: long mLastValidationTimeMs> = l1;

     label7:
        $r5 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: android.net.metrics.DefaultNetworkEvent mCurrentDefaultNetwork>;

        staticinvoke <com.android.server.connectivity.DefaultNetworkMetrics: void printEvent(long,java.io.PrintWriter,android.net.metrics.DefaultNetworkEvent)>(l0, r8, $r5);

     label8:
        exitmonitor r0;

        return;

     label9:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public java.util.List listEventsAsProto()
    {
        com.android.server.connectivity.DefaultNetworkMetrics r0;
        android.net.metrics.DefaultNetworkEvent[] r1;
        int i0, i1;
        com.android.internal.util.RingBuffer $r2;
        java.lang.Object[] $r3;
        android.net.metrics.DefaultNetworkEvent $r4;
        com.android.server.connectivity.metrics.nano.IpConnectivityLogClass$IpConnectivityEvent $r5;
        java.lang.Throwable $r6;
        java.util.ArrayList r7;

        r0 := @this: com.android.server.connectivity.DefaultNetworkMetrics;

        entermonitor r0;

     label1:
        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: com.android.internal.util.RingBuffer mEventsLog>;

        $r3 = virtualinvoke $r2.<com.android.internal.util.RingBuffer: java.lang.Object[] toArray()>();

        r1 = (android.net.metrics.DefaultNetworkEvent[]) $r3;

        i0 = lengthof r1;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

     label4:
        $r4 = r1[i1];

        $r5 = staticinvoke <com.android.server.connectivity.IpConnectivityEventBuilder: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass$IpConnectivityEvent toProto(android.net.metrics.DefaultNetworkEvent)>($r4);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r5);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        exitmonitor r0;

        return r7;

     label7:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void logDefaultNetworkEvent(long, com.android.server.connectivity.NetworkAgentInfo, com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.connectivity.DefaultNetworkMetrics r0;
        long l0;
        com.android.server.connectivity.NetworkAgentInfo r1, r3;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.connectivity.DefaultNetworkMetrics;

        l0 := @parameter0: long;

        r3 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        r1 := @parameter2: com.android.server.connectivity.NetworkAgentInfo;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.connectivity.DefaultNetworkMetrics: void logCurrentDefaultNetwork(long,com.android.server.connectivity.NetworkAgentInfo)>(l0, r1);

        specialinvoke r0.<com.android.server.connectivity.DefaultNetworkMetrics: void newDefaultNetwork(long,com.android.server.connectivity.NetworkAgentInfo)>(l0, r3);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void logDefaultNetworkValidity(long, boolean)
    {
        com.android.server.connectivity.DefaultNetworkMetrics r0;
        long l0;
        boolean z0, $z1, $z2;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.connectivity.DefaultNetworkMetrics;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        entermonitor r0;

        if z0 != 0 goto label4;

     label1:
        $z2 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: boolean mIsCurrentlyValid>;

        if $z2 == 0 goto label4;

        r0.<com.android.server.connectivity.DefaultNetworkMetrics: boolean mIsCurrentlyValid> = 0;

        specialinvoke r0.<com.android.server.connectivity.DefaultNetworkMetrics: void updateValidationTime(long)>(l0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        goto label7;

     label4:
        if z0 == 0 goto label8;

     label5:
        $z1 = r0.<com.android.server.connectivity.DefaultNetworkMetrics: boolean mIsCurrentlyValid>;

        if $z1 != 0 goto label8;

        r0.<com.android.server.connectivity.DefaultNetworkMetrics: boolean mIsCurrentlyValid> = 1;

        r0.<com.android.server.connectivity.DefaultNetworkMetrics: long mLastValidationTimeMs> = l0;

     label6:
        goto label8;

     label7:
        exitmonitor r0;

        throw $r2;

     label8:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.connectivity.DefaultNetworkMetrics: int ROLLING_LOG_SIZE> = 64;

        return;
    }
}
