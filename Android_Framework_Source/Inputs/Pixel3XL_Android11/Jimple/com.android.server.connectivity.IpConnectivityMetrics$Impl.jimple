public final class com.android.server.connectivity.IpConnectivityMetrics$Impl extends android.net.IIpConnectivityMetrics$Stub
{
    static final java.lang.String CMD_DEFAULT;
    static final java.lang.String CMD_FLUSH;
    static final java.lang.String CMD_LIST;
    static final java.lang.String CMD_PROTO;
    static final java.lang.String CMD_PROTO_BIN;
    final com.android.server.connectivity.IpConnectivityMetrics this$0;

    public void <init>(com.android.server.connectivity.IpConnectivityMetrics)
    {
        com.android.server.connectivity.IpConnectivityMetrics$Impl r0;
        com.android.server.connectivity.IpConnectivityMetrics r1;

        r0 := @this: com.android.server.connectivity.IpConnectivityMetrics$Impl;

        r1 := @parameter0: com.android.server.connectivity.IpConnectivityMetrics;

        r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: com.android.server.connectivity.IpConnectivityMetrics this$0> = r1;

        specialinvoke r0.<android.net.IIpConnectivityMetrics$Stub: void <init>()>();

        return;
    }

    private void enforceDumpPermission()
    {
        com.android.server.connectivity.IpConnectivityMetrics$Impl r0;

        r0 := @this: com.android.server.connectivity.IpConnectivityMetrics$Impl;

        specialinvoke r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: void enforcePermission(java.lang.String)>("android.permission.DUMP");

        return;
    }

    private void enforceNetdEventListeningPermission()
    {
        com.android.server.connectivity.IpConnectivityMetrics$Impl r0;
        int i0;
        java.lang.SecurityException $r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.connectivity.IpConnectivityMetrics$Impl;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 != 1000 goto label1;

        return;

     label1:
        $r1 = new java.lang.SecurityException;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Uid %d has no permission to listen for netd events.", $r2);

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw $r1;
    }

    private void enforcePermission(java.lang.String)
    {
        com.android.server.connectivity.IpConnectivityMetrics$Impl r0;
        java.lang.String r1;
        com.android.server.connectivity.IpConnectivityMetrics $r2;
        android.content.Context $r3;

        r0 := @this: com.android.server.connectivity.IpConnectivityMetrics$Impl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: com.android.server.connectivity.IpConnectivityMetrics this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.connectivity.IpConnectivityMetrics: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>(r1, "IpConnectivityMetrics");

        return;
    }

    public boolean addNetdEventCallback(int, android.net.INetdEventCallback)
    {
        com.android.server.connectivity.IpConnectivityMetrics$Impl r0;
        int i0;
        android.net.INetdEventCallback r1;
        com.android.server.connectivity.IpConnectivityMetrics $r2, $r4;
        com.android.server.connectivity.NetdEventListenerService $r3, $r5;
        boolean $z0;

        r0 := @this: com.android.server.connectivity.IpConnectivityMetrics$Impl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.INetdEventCallback;

        specialinvoke r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: void enforceNetdEventListeningPermission()>();

        $r2 = r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: com.android.server.connectivity.IpConnectivityMetrics this$0>;

        $r3 = $r2.<com.android.server.connectivity.IpConnectivityMetrics: com.android.server.connectivity.NetdEventListenerService mNetdListener>;

        if $r3 != null goto label1;

        return 0;

     label1:
        $r4 = r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: com.android.server.connectivity.IpConnectivityMetrics this$0>;

        $r5 = $r4.<com.android.server.connectivity.IpConnectivityMetrics: com.android.server.connectivity.NetdEventListenerService mNetdListener>;

        $z0 = virtualinvoke $r5.<com.android.server.connectivity.NetdEventListenerService: boolean addNetdEventCallback(int,android.net.INetdEventCallback)>(i0, r1);

        return $z0;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.connectivity.IpConnectivityMetrics$Impl r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.connectivity.IpConnectivityMetrics $r3, $r4, $r6, $r7;
        java.io.FileOutputStream $r5;
        java.lang.String[] r8;
        byte b2;
        java.lang.String r9;

        r0 := @this: com.android.server.connectivity.IpConnectivityMetrics$Impl;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r8 := @parameter2: java.lang.String[];

        specialinvoke r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: void enforceDumpPermission()>();

        i0 = lengthof r8;

        b2 = 0;

        if i0 <= 0 goto label01;

        r9 = r8[0];

        goto label02;

     label01:
        r9 = "";

     label02:
        $i1 = virtualinvoke r9.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1616754616: goto label07;
            case 3322014: goto label06;
            case 97532676: goto label05;
            case 106940904: goto label04;
            default: goto label03;
        };

     label03:
        goto label08;

     label04:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("proto");

        if $z0 == 0 goto label03;

        b2 = 1;

        goto label09;

     label05:
        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("flush");

        if $z1 == 0 goto label03;

        goto label09;

     label06:
        $z2 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z2 == 0 goto label03;

        b2 = 3;

        goto label09;

     label07:
        $z3 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("--proto");

        if $z3 == 0 goto label03;

        b2 = 2;

        goto label09;

     label08:
        b2 = -1;

     label09:
        if b2 == 0 goto label12;

        if b2 == 1 goto label11;

        if b2 == 2 goto label10;

        $r7 = r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: com.android.server.connectivity.IpConnectivityMetrics this$0>;

        staticinvoke <com.android.server.connectivity.IpConnectivityMetrics: void access$500(com.android.server.connectivity.IpConnectivityMetrics,java.io.PrintWriter)>($r7, r2);

        return;

     label10:
        $r6 = r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: com.android.server.connectivity.IpConnectivityMetrics this$0>;

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r1);

        staticinvoke <com.android.server.connectivity.IpConnectivityMetrics: void access$400(com.android.server.connectivity.IpConnectivityMetrics,java.io.OutputStream)>($r6, $r5);

        return;

     label11:
        $r4 = r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: com.android.server.connectivity.IpConnectivityMetrics this$0>;

        staticinvoke <com.android.server.connectivity.IpConnectivityMetrics: void access$300(com.android.server.connectivity.IpConnectivityMetrics,java.io.PrintWriter)>($r4, r2);

        return;

     label12:
        $r3 = r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: com.android.server.connectivity.IpConnectivityMetrics this$0>;

        staticinvoke <com.android.server.connectivity.IpConnectivityMetrics: void access$200(com.android.server.connectivity.IpConnectivityMetrics,java.io.PrintWriter)>($r3, r2);

        return;
    }

    public int logEvent(android.net.ConnectivityMetricsEvent)
    {
        com.android.server.connectivity.IpConnectivityMetrics$Impl r0;
        android.net.ConnectivityMetricsEvent r1;
        com.android.server.connectivity.IpConnectivityMetrics $r2, $r4;
        android.content.Context $r3;
        int $i0;

        r0 := @this: com.android.server.connectivity.IpConnectivityMetrics$Impl;

        r1 := @parameter0: android.net.ConnectivityMetricsEvent;

        $r2 = r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: com.android.server.connectivity.IpConnectivityMetrics this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.connectivity.IpConnectivityMetrics: android.content.Context getContext()>();

        staticinvoke <android.net.NetworkStack: void checkNetworkStackPermission(android.content.Context)>($r3);

        $r4 = r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: com.android.server.connectivity.IpConnectivityMetrics this$0>;

        $i0 = staticinvoke <com.android.server.connectivity.IpConnectivityMetrics: int access$100(com.android.server.connectivity.IpConnectivityMetrics,android.net.ConnectivityMetricsEvent)>($r4, r1);

        return $i0;
    }

    public boolean removeNetdEventCallback(int)
    {
        com.android.server.connectivity.IpConnectivityMetrics$Impl r0;
        int i0;
        com.android.server.connectivity.IpConnectivityMetrics $r1, $r3;
        com.android.server.connectivity.NetdEventListenerService $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.server.connectivity.IpConnectivityMetrics$Impl;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: void enforceNetdEventListeningPermission()>();

        $r1 = r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: com.android.server.connectivity.IpConnectivityMetrics this$0>;

        $r2 = $r1.<com.android.server.connectivity.IpConnectivityMetrics: com.android.server.connectivity.NetdEventListenerService mNetdListener>;

        if $r2 != null goto label1;

        return 1;

     label1:
        $r3 = r0.<com.android.server.connectivity.IpConnectivityMetrics$Impl: com.android.server.connectivity.IpConnectivityMetrics this$0>;

        $r4 = $r3.<com.android.server.connectivity.IpConnectivityMetrics: com.android.server.connectivity.NetdEventListenerService mNetdListener>;

        $z0 = virtualinvoke $r4.<com.android.server.connectivity.NetdEventListenerService: boolean removeNetdEventCallback(int)>(i0);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.server.connectivity.IpConnectivityMetrics$Impl: java.lang.String CMD_PROTO_BIN> = "--proto";

        <com.android.server.connectivity.IpConnectivityMetrics$Impl: java.lang.String CMD_PROTO> = "proto";

        <com.android.server.connectivity.IpConnectivityMetrics$Impl: java.lang.String CMD_LIST> = "list";

        <com.android.server.connectivity.IpConnectivityMetrics$Impl: java.lang.String CMD_FLUSH> = "flush";

        <com.android.server.connectivity.IpConnectivityMetrics$Impl: java.lang.String CMD_DEFAULT> = "";

        return;
    }
}
