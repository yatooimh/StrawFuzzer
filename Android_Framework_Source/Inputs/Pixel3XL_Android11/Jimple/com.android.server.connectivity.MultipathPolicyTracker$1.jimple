class com.android.server.connectivity.MultipathPolicyTracker$1 extends android.net.ConnectivityManager$NetworkCallback
{
    final com.android.server.connectivity.MultipathPolicyTracker this$0;

    void <init>(com.android.server.connectivity.MultipathPolicyTracker)
    {
        com.android.server.connectivity.MultipathPolicyTracker$1 r0;
        com.android.server.connectivity.MultipathPolicyTracker r1;

        r0 := @this: com.android.server.connectivity.MultipathPolicyTracker$1;

        r1 := @parameter0: com.android.server.connectivity.MultipathPolicyTracker;

        r0.<com.android.server.connectivity.MultipathPolicyTracker$1: com.android.server.connectivity.MultipathPolicyTracker this$0> = r1;

        specialinvoke r0.<android.net.ConnectivityManager$NetworkCallback: void <init>()>();

        return;
    }

    public void onCapabilitiesChanged(android.net.Network, android.net.NetworkCapabilities)
    {
        com.android.server.connectivity.MultipathPolicyTracker$1 r0;
        android.net.Network r1;
        com.android.server.connectivity.MultipathPolicyTracker $r2, $r5, $r6;
        java.util.concurrent.ConcurrentHashMap $r3, r18;
        java.lang.Object $r4;
        java.lang.Throwable $r8;
        java.lang.String $r13, $r15, r21;
        android.net.NetworkCapabilities r16;
        com.android.server.connectivity.MultipathPolicyTracker$MultipathTracker r17, r23;
        java.lang.StringBuilder r24;
        java.lang.IllegalStateException r25;

        r0 := @this: com.android.server.connectivity.MultipathPolicyTracker$1;

        r1 := @parameter0: android.net.Network;

        r16 := @parameter1: android.net.NetworkCapabilities;

        $r2 = r0.<com.android.server.connectivity.MultipathPolicyTracker$1: com.android.server.connectivity.MultipathPolicyTracker this$0>;

        $r3 = staticinvoke <com.android.server.connectivity.MultipathPolicyTracker: java.util.concurrent.ConcurrentHashMap access$1100(com.android.server.connectivity.MultipathPolicyTracker)>($r2);

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r17 = (com.android.server.connectivity.MultipathPolicyTracker$MultipathTracker) $r4;

        if r17 == null goto label1;

        virtualinvoke r17.<com.android.server.connectivity.MultipathPolicyTracker$MultipathTracker: void setNetworkCapabilities(android.net.NetworkCapabilities)>(r16);

        virtualinvoke r17.<com.android.server.connectivity.MultipathPolicyTracker$MultipathTracker: void updateMultipathBudget()>();

        return;

     label1:
        $r5 = r0.<com.android.server.connectivity.MultipathPolicyTracker$1: com.android.server.connectivity.MultipathPolicyTracker this$0>;

        r18 = staticinvoke <com.android.server.connectivity.MultipathPolicyTracker: java.util.concurrent.ConcurrentHashMap access$1100(com.android.server.connectivity.MultipathPolicyTracker)>($r5);

        r23 = new com.android.server.connectivity.MultipathPolicyTracker$MultipathTracker;

        $r6 = r0.<com.android.server.connectivity.MultipathPolicyTracker$1: com.android.server.connectivity.MultipathPolicyTracker this$0>;

        specialinvoke r23.<com.android.server.connectivity.MultipathPolicyTracker$MultipathTracker: void <init>(com.android.server.connectivity.MultipathPolicyTracker,android.net.Network,android.net.NetworkCapabilities)>($r6, r1, r16);

        virtualinvoke r18.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r23);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r21 = staticinvoke <com.android.server.connectivity.MultipathPolicyTracker: java.lang.String access$400()>();

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t track mobile network ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        r25 = (java.lang.IllegalStateException) $r8;

        $r13 = virtualinvoke r25.<java.lang.IllegalStateException: java.lang.String getMessage()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r21, $r15);

     label4:
        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onLost(android.net.Network)
    {
        com.android.server.connectivity.MultipathPolicyTracker$1 r0;
        android.net.Network r1;
        com.android.server.connectivity.MultipathPolicyTracker$MultipathTracker r2;
        com.android.server.connectivity.MultipathPolicyTracker $r3, $r6;
        java.util.concurrent.ConcurrentHashMap $r4, $r7;
        java.lang.Object $r5;

        r0 := @this: com.android.server.connectivity.MultipathPolicyTracker$1;

        r1 := @parameter0: android.net.Network;

        $r3 = r0.<com.android.server.connectivity.MultipathPolicyTracker$1: com.android.server.connectivity.MultipathPolicyTracker this$0>;

        $r4 = staticinvoke <com.android.server.connectivity.MultipathPolicyTracker: java.util.concurrent.ConcurrentHashMap access$1100(com.android.server.connectivity.MultipathPolicyTracker)>($r3);

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.connectivity.MultipathPolicyTracker$MultipathTracker) $r5;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.server.connectivity.MultipathPolicyTracker$MultipathTracker: void shutdown()>();

        $r6 = r0.<com.android.server.connectivity.MultipathPolicyTracker$1: com.android.server.connectivity.MultipathPolicyTracker this$0>;

        $r7 = staticinvoke <com.android.server.connectivity.MultipathPolicyTracker: java.util.concurrent.ConcurrentHashMap access$1100(com.android.server.connectivity.MultipathPolicyTracker)>($r6);

        virtualinvoke $r7.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;
    }
}
