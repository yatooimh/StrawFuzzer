public class com.android.server.connectivity.NetdEventListenerService extends android.net.metrics.INetdEventListener$Stub
{
    private static final int[] ALLOWED_CALLBACK_TYPES;
    private static final int CONNECT_LATENCY_BURST_LIMIT;
    private static final int CONNECT_LATENCY_FILL_RATE;
    private static final boolean DBG;
    private static final int METRICS_SNAPSHOT_BUFFER_SIZE;
    private static final long METRICS_SNAPSHOT_SPAN_MS;
    public static final java.lang.String SERVICE_NAME;
    private static final java.lang.String TAG;
    static final int WAKEUP_EVENT_BUFFER_LENGTH;
    static final java.lang.String WAKEUP_EVENT_IFACE_PREFIX;
    private final android.net.ConnectivityManager mCm;
    private final com.android.internal.util.TokenBucket mConnectTb;
    private long mLastSnapshot;
    private android.net.INetdEventCallback[] mNetdEventCallbackList;
    private final android.util.SparseArray mNetworkMetrics;
    private final com.android.internal.util.RingBuffer mNetworkMetricsSnapshots;
    private final com.android.internal.util.RingBuffer mWakeupEvents;
    private final android.util.ArrayMap mWakeupStats;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        int[] $r2;

        <com.android.server.connectivity.NetdEventListenerService: java.lang.String WAKEUP_EVENT_IFACE_PREFIX> = "iface:";

        <com.android.server.connectivity.NetdEventListenerService: int WAKEUP_EVENT_BUFFER_LENGTH> = 1024;

        <com.android.server.connectivity.NetdEventListenerService: java.lang.String SERVICE_NAME> = "netd_listener";

        <com.android.server.connectivity.NetdEventListenerService: long METRICS_SNAPSHOT_SPAN_MS> = 300000L;

        <com.android.server.connectivity.NetdEventListenerService: int METRICS_SNAPSHOT_BUFFER_SIZE> = 48;

        <com.android.server.connectivity.NetdEventListenerService: boolean DBG> = 0;

        <com.android.server.connectivity.NetdEventListenerService: int CONNECT_LATENCY_FILL_RATE> = 15000;

        <com.android.server.connectivity.NetdEventListenerService: int CONNECT_LATENCY_BURST_LIMIT> = 5000;

        $r0 = class "Lcom/android/server/connectivity/NetdEventListenerService;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.connectivity.NetdEventListenerService: java.lang.String TAG> = $r1;

        $r2 = newarray (int)[3];

        $r2[0] = 0;

        $r2[1] = 1;

        $r2[2] = 2;

        <com.android.server.connectivity.NetdEventListenerService: int[] ALLOWED_CALLBACK_TYPES> = $r2;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.net.ConnectivityManager $r3;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/net/ConnectivityManager;");

        $r3 = (android.net.ConnectivityManager) $r2;

        specialinvoke r0.<com.android.server.connectivity.NetdEventListenerService: void <init>(android.net.ConnectivityManager)>($r3);

        return;
    }

    public void <init>(android.net.ConnectivityManager)
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        android.net.ConnectivityManager r1;
        android.util.SparseArray $r2;
        com.android.internal.util.RingBuffer $r3, $r5;
        android.util.ArrayMap $r4;
        com.android.internal.util.TokenBucket $r6;
        int[] $r7;
        int $i0;
        android.net.INetdEventCallback[] $r8;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        r1 := @parameter0: android.net.ConnectivityManager;

        specialinvoke r0.<android.net.metrics.INetdEventListener$Stub: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics> = $r2;

        $r3 = new com.android.internal.util.RingBuffer;

        specialinvoke $r3.<com.android.internal.util.RingBuffer: void <init>(java.lang.Class,int)>(class "Lcom/android/server/connectivity/NetdEventListenerService$NetworkMetricsSnapshot;", 48);

        r0.<com.android.server.connectivity.NetdEventListenerService: com.android.internal.util.RingBuffer mNetworkMetricsSnapshots> = $r3;

        r0.<com.android.server.connectivity.NetdEventListenerService: long mLastSnapshot> = 0L;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.connectivity.NetdEventListenerService: android.util.ArrayMap mWakeupStats> = $r4;

        $r5 = new com.android.internal.util.RingBuffer;

        specialinvoke $r5.<com.android.internal.util.RingBuffer: void <init>(java.lang.Class,int)>(class "Landroid/net/metrics/WakeupEvent;", 1024);

        r0.<com.android.server.connectivity.NetdEventListenerService: com.android.internal.util.RingBuffer mWakeupEvents> = $r5;

        $r6 = new com.android.internal.util.TokenBucket;

        specialinvoke $r6.<com.android.internal.util.TokenBucket: void <init>(int,int)>(15000, 5000);

        r0.<com.android.server.connectivity.NetdEventListenerService: com.android.internal.util.TokenBucket mConnectTb> = $r6;

        $r7 = <com.android.server.connectivity.NetdEventListenerService: int[] ALLOWED_CALLBACK_TYPES>;

        $i0 = lengthof $r7;

        $r8 = newarray (android.net.INetdEventCallback)[$i0];

        r0.<com.android.server.connectivity.NetdEventListenerService: android.net.INetdEventCallback[] mNetdEventCallbackList> = $r8;

        r0.<com.android.server.connectivity.NetdEventListenerService: android.net.ConnectivityManager mCm> = r1;

        return;
    }

    private void addWakeupEvent(android.net.metrics.WakeupEvent)
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        android.net.metrics.WakeupEvent r1;
        java.lang.String r2;
        android.net.metrics.WakeupStats r3, $r7, r10;
        com.android.internal.util.RingBuffer $r4;
        android.util.ArrayMap $r5, $r8;
        java.lang.Object $r6;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        r1 := @parameter0: android.net.metrics.WakeupEvent;

        r2 = r1.<android.net.metrics.WakeupEvent: java.lang.String iface>;

        $r4 = r0.<com.android.server.connectivity.NetdEventListenerService: com.android.internal.util.RingBuffer mWakeupEvents>;

        virtualinvoke $r4.<com.android.internal.util.RingBuffer: void append(java.lang.Object)>(r1);

        $r5 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.ArrayMap mWakeupStats>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (android.net.metrics.WakeupStats) $r6;

        r10 = r3;

        if r3 != null goto label1;

        $r7 = new android.net.metrics.WakeupStats;

        specialinvoke $r7.<android.net.metrics.WakeupStats: void <init>(java.lang.String)>(r2);

        r10 = $r7;

        $r8 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.ArrayMap mWakeupStats>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r7);

     label1:
        virtualinvoke r10.<android.net.metrics.WakeupStats: void countEvent(android.net.metrics.WakeupEvent)>(r1);

        return;
    }

    private void collectPendingMetricsSnapshot(long)
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        com.android.server.connectivity.NetdEventListenerService$NetworkMetricsSnapshot r1;
        long $l0, $l1, $l2, l4, l5;
        byte $b3;
        android.util.SparseArray $r2;
        java.util.List $r3;
        boolean $z0;
        com.android.internal.util.RingBuffer $r4;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        l4 := @parameter0: long;

        $l0 = r0.<com.android.server.connectivity.NetdEventListenerService: long mLastSnapshot>;

        $l1 = l4 - $l0;

        $l2 = staticinvoke <java.lang.Math: long abs(long)>($l1);

        $b3 = $l2 cmp 300000L;

        if $b3 > 0 goto label1;

        return;

     label1:
        l5 = staticinvoke <com.android.server.connectivity.NetdEventListenerService: long projectSnapshotTime(long)>(l4);

        r0.<com.android.server.connectivity.NetdEventListenerService: long mLastSnapshot> = l5;

        $r2 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        r1 = staticinvoke <com.android.server.connectivity.NetdEventListenerService$NetworkMetricsSnapshot: com.android.server.connectivity.NetdEventListenerService$NetworkMetricsSnapshot collect(long,android.util.SparseArray)>(l5, $r2);

        $r3 = r1.<com.android.server.connectivity.NetdEventListenerService$NetworkMetricsSnapshot: java.util.List stats>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $r4 = r0.<com.android.server.connectivity.NetdEventListenerService: com.android.internal.util.RingBuffer mNetworkMetricsSnapshots>;

        virtualinvoke $r4.<com.android.internal.util.RingBuffer: void append(java.lang.Object)>(r1);

        return;
    }

    private android.net.metrics.NetworkMetrics getMetricsForNetwork(long, int)
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        long l0, $l2;
        int i1;
        android.net.metrics.NetworkMetrics r1, $r4, r7;
        android.util.SparseArray $r2, $r6;
        java.lang.Object $r3;
        com.android.internal.util.TokenBucket $r5;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.server.connectivity.NetdEventListenerService: void collectPendingMetricsSnapshot(long)>(l0);

        $r2 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r1 = (android.net.metrics.NetworkMetrics) $r3;

        r7 = r1;

        if r1 != null goto label1;

        $r4 = new android.net.metrics.NetworkMetrics;

        $l2 = specialinvoke r0.<com.android.server.connectivity.NetdEventListenerService: long getTransports(int)>(i1);

        $r5 = r0.<com.android.server.connectivity.NetdEventListenerService: com.android.internal.util.TokenBucket mConnectTb>;

        specialinvoke $r4.<android.net.metrics.NetworkMetrics: void <init>(int,long,com.android.internal.util.TokenBucket)>(i1, $l2, $r5);

        r7 = $r4;

        $r6 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, $r4);

     label1:
        return r7;
    }

    private com.android.server.connectivity.NetdEventListenerService$NetworkMetricsSnapshot[] getNetworkMetricsSnapshots()
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        long $l0;
        com.android.internal.util.RingBuffer $r1;
        java.lang.Object[] $r2;
        com.android.server.connectivity.NetdEventListenerService$NetworkMetricsSnapshot[] $r3;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r0.<com.android.server.connectivity.NetdEventListenerService: void collectPendingMetricsSnapshot(long)>($l0);

        $r1 = r0.<com.android.server.connectivity.NetdEventListenerService: com.android.internal.util.RingBuffer mNetworkMetricsSnapshots>;

        $r2 = virtualinvoke $r1.<com.android.internal.util.RingBuffer: java.lang.Object[] toArray()>();

        $r3 = (com.android.server.connectivity.NetdEventListenerService$NetworkMetricsSnapshot[]) $r2;

        return $r3;
    }

    private long getTransports(int)
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        int i0;
        android.net.NetworkCapabilities r1;
        android.net.Network $r2;
        android.net.ConnectivityManager $r3;
        int[] $r4;
        long $l1;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.connectivity.NetdEventListenerService: android.net.ConnectivityManager mCm>;

        $r2 = new android.net.Network;

        specialinvoke $r2.<android.net.Network: void <init>(int)>(i0);

        r1 = virtualinvoke $r3.<android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>($r2);

        if r1 != null goto label1;

        return 0L;

     label1:
        $r4 = virtualinvoke r1.<android.net.NetworkCapabilities: int[] getTransportTypes()>();

        $l1 = staticinvoke <com.android.internal.util.BitUtils: long packBits(int[])>($r4);

        return $l1;
    }

    private static boolean isValidCallerType(int)
    {
        int i0, $i1, $i2, i3;
        int[] r0;

        i0 := @parameter0: int;

        i3 = 0;

     label1:
        r0 = <com.android.server.connectivity.NetdEventListenerService: int[] ALLOWED_CALLBACK_TYPES>;

        $i1 = lengthof r0;

        if i3 >= $i1 goto label3;

        $i2 = r0[i3];

        if i0 != $i2 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static transient void maybeLog(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0;
        java.lang.Object[] r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        return;
    }

    private static long projectSnapshotTime(long)
    {
        long l0, $l1, $l2;

        l0 := @parameter0: long;

        $l1 = l0 / 300000L;

        $l2 = $l1 * 300000L;

        return $l2;
    }

    public boolean addNetdEventCallback(int, android.net.INetdEventCallback)
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        int i0;
        java.lang.String r1, $r5;
        boolean $z0;
        android.net.INetdEventCallback[] $r2;
        java.lang.Throwable $r6;
        android.net.INetdEventCallback r7;
        java.lang.StringBuilder r8;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        i0 := @parameter0: int;

        r7 := @parameter1: android.net.INetdEventCallback;

        entermonitor r0;

     label1:
        $z0 = staticinvoke <com.android.server.connectivity.NetdEventListenerService: boolean isValidCallerType(int)>(i0);

        if $z0 != 0 goto label3;

        r1 = <com.android.server.connectivity.NetdEventListenerService: java.lang.String TAG>;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid caller type: ");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r1, $r5);

     label2:
        exitmonitor r0;

        return 0;

     label3:
        $r2 = r0.<com.android.server.connectivity.NetdEventListenerService: android.net.INetdEventCallback[] mNetdEventCallbackList>;

        $r2[i0] = r7;

     label4:
        exitmonitor r0;

        return 1;

     label5:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void flushStatistics(java.util.List)
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        android.util.SparseArray $r1, $r2, $r4, $r10, $r14;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        android.util.ArrayMap $r3, $r5, $r6;
        java.lang.Object $r7, $r11, $r15;
        android.net.metrics.WakeupStats $r8;
        com.android.server.connectivity.metrics.nano.IpConnectivityLogClass$IpConnectivityEvent $r9, $r13, $r17;
        android.net.metrics.NetworkMetrics $r12, $r16;
        java.lang.Throwable $r18;
        java.util.List r19;
        android.net.metrics.ConnectStats r20;
        android.net.metrics.DnsEvent r21;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        r19 := @parameter0: java.util.List;

        entermonitor r0;

        i5 = 0;

     label01:
        $r1 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i5 >= $i0 goto label05;

        $r14 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        $r16 = (android.net.metrics.NetworkMetrics) $r15;

        r20 = $r16.<android.net.metrics.NetworkMetrics: android.net.metrics.ConnectStats connectMetrics>;

        $i4 = r20.<android.net.metrics.ConnectStats: int eventCount>;

        if $i4 != 0 goto label03;

     label02:
        goto label04;

     label03:
        $r17 = staticinvoke <com.android.server.connectivity.IpConnectivityEventBuilder: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass$IpConnectivityEvent toProto(android.net.metrics.ConnectStats)>(r20);

        interfaceinvoke r19.<java.util.List: boolean add(java.lang.Object)>($r17);

     label04:
        i5 = i5 + 1;

        goto label01;

     label05:
        i6 = 0;

     label06:
        $r2 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i6 >= $i1 goto label10;

        $r10 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r12 = (android.net.metrics.NetworkMetrics) $r11;

        r21 = $r12.<android.net.metrics.NetworkMetrics: android.net.metrics.DnsEvent dnsMetrics>;

        $i3 = r21.<android.net.metrics.DnsEvent: int eventCount>;

        if $i3 != 0 goto label08;

     label07:
        goto label09;

     label08:
        $r13 = staticinvoke <com.android.server.connectivity.IpConnectivityEventBuilder: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass$IpConnectivityEvent toProto(android.net.metrics.DnsEvent)>(r21);

        interfaceinvoke r19.<java.util.List: boolean add(java.lang.Object)>($r13);

     label09:
        i6 = i6 + 1;

        goto label06;

     label10:
        i7 = 0;

     label11:
        $r3 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.ArrayMap mWakeupStats>;

        $i2 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        if i7 >= $i2 goto label13;

        $r6 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.ArrayMap mWakeupStats>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        $r8 = (android.net.metrics.WakeupStats) $r7;

        $r9 = staticinvoke <com.android.server.connectivity.IpConnectivityEventBuilder: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass$IpConnectivityEvent toProto(android.net.metrics.WakeupStats)>($r8);

        interfaceinvoke r19.<java.util.List: boolean add(java.lang.Object)>($r9);

     label12:
        i7 = i7 + 1;

        goto label11;

     label13:
        $r4 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        virtualinvoke $r4.<android.util.SparseArray: void clear()>();

        $r5 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.ArrayMap mWakeupStats>;

        virtualinvoke $r5.<android.util.ArrayMap: void clear()>();

     label14:
        exitmonitor r0;

        return;

     label15:
        $r18 := @caughtexception;

        exitmonitor r0;

        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public java.lang.String getInterfaceHash()
    {
        com.android.server.connectivity.NetdEventListenerService r0;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        return "8e27594d285ca7c567d87e8cf74766c27647e02b";
    }

    public int getInterfaceVersion() throws android.os.RemoteException
    {
        com.android.server.connectivity.NetdEventListenerService r0;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        return 1;
    }

    public void list(java.io.PrintWriter)
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        android.util.SparseArray $r1, $r2, $r10, $r14;
        int $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10;
        android.util.ArrayMap $r3, $r7;
        com.android.internal.util.RingBuffer $r4;
        java.lang.Object[] $r5;
        android.net.metrics.WakeupEvent $r6;
        java.lang.Object $r8, $r11, $r15;
        com.android.server.connectivity.NetdEventListenerService$NetworkMetricsSnapshot $r9;
        android.net.metrics.NetworkMetrics $r12, $r16;
        android.net.metrics.DnsEvent $r13;
        android.net.metrics.ConnectStats $r17;
        java.lang.Throwable $r18;
        java.io.PrintWriter r19;
        com.android.server.connectivity.NetdEventListenerService$NetworkMetricsSnapshot[] r20;
        android.net.metrics.WakeupEvent[] r21;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        r19 := @parameter0: java.io.PrintWriter;

        entermonitor r0;

     label01:
        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.String)>("dns/connect events:");

     label02:
        i4 = 0;

     label03:
        $r1 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        $i1 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i4 >= $i1 goto label05;

        $r14 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r16 = (android.net.metrics.NetworkMetrics) $r15;

        $r17 = $r16.<android.net.metrics.NetworkMetrics: android.net.metrics.ConnectStats connectMetrics>;

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.Object)>($r17);

     label04:
        i4 = i4 + 1;

        goto label03;

     label05:
        i5 = 0;

     label06:
        $r2 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        $i2 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i5 >= $i2 goto label08;

        $r10 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        $r12 = (android.net.metrics.NetworkMetrics) $r11;

        $r13 = $r12.<android.net.metrics.NetworkMetrics: android.net.metrics.DnsEvent dnsMetrics>;

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.Object)>($r13);

     label07:
        i5 = i5 + 1;

        goto label06;

     label08:
        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.String)>("network statistics:");

        r20 = specialinvoke r0.<com.android.server.connectivity.NetdEventListenerService: com.android.server.connectivity.NetdEventListenerService$NetworkMetricsSnapshot[] getNetworkMetricsSnapshots()>();

        i6 = lengthof r20;

     label09:
        i7 = 0;

     label10:
        if i7 >= i6 goto label13;

     label11:
        $r9 = r20[i7];

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.Object)>($r9);

     label12:
        i7 = i7 + 1;

        goto label10;

     label13:
        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.String)>("packet wakeup events:");

     label14:
        i8 = 0;

     label15:
        $r3 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.ArrayMap mWakeupStats>;

        $i3 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        if i8 >= $i3 goto label17;

        $r7 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.ArrayMap mWakeupStats>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.Object)>($r8);

     label16:
        i8 = i8 + 1;

        goto label15;

     label17:
        $r4 = r0.<com.android.server.connectivity.NetdEventListenerService: com.android.internal.util.RingBuffer mWakeupEvents>;

        $r5 = virtualinvoke $r4.<com.android.internal.util.RingBuffer: java.lang.Object[] toArray()>();

        r21 = (android.net.metrics.WakeupEvent[]) $r5;

        i9 = lengthof r21;

     label18:
        i10 = 0;

     label19:
        if i10 >= i9 goto label22;

     label20:
        $r6 = r21[i10];

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.Object)>($r6);

     label21:
        i10 = i10 + 1;

        goto label19;

     label22:
        exitmonitor r0;

        return;

     label23:
        $r18 := @caughtexception;

        exitmonitor r0;

        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
    }

    public java.util.List listAsProtos()
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        android.util.SparseArray $r1, $r2, $r8, $r13;
        int $i0, $i1, $i2, i3, i4, i5;
        android.util.ArrayMap $r3, $r4;
        java.lang.Object $r5, $r9, $r14;
        android.net.metrics.WakeupStats $r6;
        com.android.server.connectivity.metrics.nano.IpConnectivityLogClass$IpConnectivityEvent $r7, $r12, $r17;
        android.net.metrics.NetworkMetrics $r10, $r15;
        android.net.metrics.DnsEvent $r11;
        android.net.metrics.ConnectStats $r16;
        java.lang.Throwable $r18;
        java.util.ArrayList r19;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        entermonitor r0;

     label01:
        r19 = new java.util.ArrayList;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

     label02:
        i3 = 0;

     label03:
        $r1 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i3 >= $i0 goto label05;

        $r13 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        $r14 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r15 = (android.net.metrics.NetworkMetrics) $r14;

        $r16 = $r15.<android.net.metrics.NetworkMetrics: android.net.metrics.ConnectStats connectMetrics>;

        $r17 = staticinvoke <com.android.server.connectivity.IpConnectivityEventBuilder: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass$IpConnectivityEvent toProto(android.net.metrics.ConnectStats)>($r16);

        interfaceinvoke r19.<java.util.List: boolean add(java.lang.Object)>($r17);

     label04:
        i3 = i3 + 1;

        goto label03;

     label05:
        i4 = 0;

     label06:
        $r2 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i4 >= $i1 goto label08;

        $r8 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.SparseArray mNetworkMetrics>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r10 = (android.net.metrics.NetworkMetrics) $r9;

        $r11 = $r10.<android.net.metrics.NetworkMetrics: android.net.metrics.DnsEvent dnsMetrics>;

        $r12 = staticinvoke <com.android.server.connectivity.IpConnectivityEventBuilder: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass$IpConnectivityEvent toProto(android.net.metrics.DnsEvent)>($r11);

        interfaceinvoke r19.<java.util.List: boolean add(java.lang.Object)>($r12);

     label07:
        i4 = i4 + 1;

        goto label06;

     label08:
        i5 = 0;

     label09:
        $r3 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.ArrayMap mWakeupStats>;

        $i2 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        if i5 >= $i2 goto label11;

        $r4 = r0.<com.android.server.connectivity.NetdEventListenerService: android.util.ArrayMap mWakeupStats>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        $r6 = (android.net.metrics.WakeupStats) $r5;

        $r7 = staticinvoke <com.android.server.connectivity.IpConnectivityEventBuilder: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass$IpConnectivityEvent toProto(android.net.metrics.WakeupStats)>($r6);

        interfaceinvoke r19.<java.util.List: boolean add(java.lang.Object)>($r7);

     label10:
        i5 = i5 + 1;

        goto label09;

     label11:
        exitmonitor r0;

        return r19;

     label12:
        $r18 := @caughtexception;

        exitmonitor r0;

        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
    }

    public void onConnectEvent(int, int, int, java.lang.String, int, int) throws android.os.RemoteException
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        int i0, i1, i2, i4, i5, i6, i7;
        long l3;
        android.net.INetdEventCallback[] r1;
        android.net.INetdEventCallback r2;
        android.net.metrics.NetworkMetrics $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        r5 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        entermonitor r0;

     label1:
        l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = specialinvoke r0.<com.android.server.connectivity.NetdEventListenerService: android.net.metrics.NetworkMetrics getMetricsForNetwork(long,int)>(l3, i4);

        virtualinvoke $r3.<android.net.metrics.NetworkMetrics: void addConnectResult(int,int,java.lang.String)>(i5, i0, r5);

        r1 = r0.<com.android.server.connectivity.NetdEventListenerService: android.net.INetdEventCallback[] mNetdEventCallbackList>;

        i6 = lengthof r1;

     label2:
        i7 = 0;

     label3:
        if i7 >= i6 goto label6;

        r2 = r1[i7];

        if r2 == null goto label5;

     label4:
        interfaceinvoke r2.<android.net.INetdEventCallback: void onConnectEvent(java.lang.String,int,long,int)>(r5, i1, l3, i2);

     label5:
        i7 = i7 + 1;

        goto label3;

     label6:
        exitmonitor r0;

        return;

     label7:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void onDnsEvent(int, int, int, int, java.lang.String, java.lang.String[], int, int) throws android.os.RemoteException
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        int i0, i1, i2, i3, i4, i6, i7, i8;
        java.lang.String[] r1;
        long l5;
        android.net.INetdEventCallback[] r2;
        android.net.INetdEventCallback r3;
        android.net.metrics.NetworkMetrics $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i6 := @parameter3: int;

        r6 := @parameter4: java.lang.String;

        r1 := @parameter5: java.lang.String[];

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        entermonitor r0;

     label1:
        l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = specialinvoke r0.<com.android.server.connectivity.NetdEventListenerService: android.net.metrics.NetworkMetrics getMetricsForNetwork(long,int)>(l5, i0);

        virtualinvoke $r4.<android.net.metrics.NetworkMetrics: void addDnsResult(int,int,int)>(i1, i2, i6);

        r2 = r0.<com.android.server.connectivity.NetdEventListenerService: android.net.INetdEventCallback[] mNetdEventCallbackList>;

        i7 = lengthof r2;

     label2:
        i8 = 0;

     label3:
        if i8 >= i7 goto label7;

        r3 = r2[i8];

        if r3 == null goto label6;

     label4:
        interfaceinvoke r3.<android.net.INetdEventCallback: void onDnsEvent(int,int,int,java.lang.String,java.lang.String[],int,long,int)>(i0, i1, i2, r6, r1, i3, l5, i4);

     label5:
        goto label6;

     label6:
        i8 = i8 + 1;

        goto label3;

     label7:
        exitmonitor r0;

        return;

     label8:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
    }

    public void onNat64PrefixEvent(int, boolean, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        int i0, i1, i2, i3;
        boolean z0;
        android.net.INetdEventCallback[] r1;
        android.net.INetdEventCallback r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r4 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        entermonitor r0;

     label1:
        r1 = r0.<com.android.server.connectivity.NetdEventListenerService: android.net.INetdEventCallback[] mNetdEventCallbackList>;

        i2 = lengthof r1;

     label2:
        i3 = 0;

     label3:
        if i3 >= i2 goto label6;

        r2 = r1[i3];

        if r2 == null goto label5;

     label4:
        interfaceinvoke r2.<android.net.INetdEventCallback: void onNat64PrefixEvent(int,boolean,java.lang.String,int)>(i0, z0, r4, i1);

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        exitmonitor r0;

        return;

     label7:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void onPrivateDnsValidationEvent(int, java.lang.String, java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        int i0, i1, i2;
        java.lang.String r1, r5;
        boolean z0;
        android.net.INetdEventCallback[] r2;
        android.net.INetdEventCallback r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        entermonitor r0;

     label1:
        r2 = r0.<com.android.server.connectivity.NetdEventListenerService: android.net.INetdEventCallback[] mNetdEventCallbackList>;

        i1 = lengthof r2;

     label2:
        i2 = 0;

     label3:
        if i2 >= i1 goto label6;

        r3 = r2[i2];

        if r3 == null goto label5;

     label4:
        interfaceinvoke r3.<android.net.INetdEventCallback: void onPrivateDnsValidationEvent(int,java.lang.String,java.lang.String,boolean)>(i0, r5, r1, z0);

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        exitmonitor r0;

        return;

     label7:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void onTcpSocketStatsEvent(int[], int[], int[], int[], int[])
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        int[] r1, r2, r3, r4, r7;
        long l0;
        int i1, i2, i3, i4, i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        android.net.metrics.NetworkMetrics $r5;
        java.lang.Throwable $r6;
        java.lang.String $r8;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        r7 := @parameter0: int[];

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        r3 := @parameter3: int[];

        r4 := @parameter4: int[];

        entermonitor r0;

     label01:
        $i7 = lengthof r7;

        $i6 = lengthof r1;

        if $i7 != $i6 goto label10;

        $i10 = lengthof r7;

        $i9 = lengthof r2;

        if $i10 != $i9 goto label10;

        $i12 = lengthof r7;

        $i11 = lengthof r3;

        if $i12 != $i11 goto label10;

        $i14 = lengthof r7;

        $i13 = lengthof r4;

        if $i14 == $i13 goto label03;

     label02:
        goto label10;

     label03:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label04:
        i16 = 0;

     label05:
        $i15 = lengthof r7;

        if i16 >= $i15 goto label09;

     label06:
        i1 = r7[i16];

        i2 = r1[i16];

        i3 = r2[i16];

        i4 = r3[i16];

        i5 = r4[i16];

     label07:
        $r5 = specialinvoke r0.<com.android.server.connectivity.NetdEventListenerService: android.net.metrics.NetworkMetrics getMetricsForNetwork(long,int)>(l0, i1);

        virtualinvoke $r5.<android.net.metrics.NetworkMetrics: void addTcpStatsResult(int,int,int,int)>(i2, i3, i4, i5);

     label08:
        i16 = i16 + 1;

        goto label05;

     label09:
        exitmonitor r0;

        return;

     label10:
        $r8 = <com.android.server.connectivity.NetdEventListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r8, "Mismatched lengths of TCP socket stats data arrays");

     label11:
        exitmonitor r0;

        return;

     label12:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public void onWakeupEvent(java.lang.String, int, int, int, byte[], java.lang.String, java.lang.String, int, int, long)
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        int i0, i1, i2, i3, i4;
        byte[] r1;
        java.lang.String r2, r3, r4, $r7, r9;
        byte $b5;
        android.net.MacAddress $r5, $r6;
        java.lang.Throwable $r8;
        long l6, l7;
        android.net.metrics.WakeupEvent r10;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: byte[];

        r2 := @parameter5: java.lang.String;

        r3 := @parameter6: java.lang.String;

        i3 := @parameter7: int;

        i4 := @parameter8: int;

        l6 := @parameter9: long;

        entermonitor r0;

     label1:
        r4 = virtualinvoke r9.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("iface:", "");

     label2:
        $b5 = l6 cmp 0L;

        if $b5 <= 0 goto label5;

     label3:
        l7 = l6 / 1000000L;

     label4:
        goto label6;

     label5:
        l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label6:
        r10 = new android.net.metrics.WakeupEvent;

        specialinvoke r10.<android.net.metrics.WakeupEvent: void <init>()>();

        r10.<android.net.metrics.WakeupEvent: java.lang.String iface> = r4;

        r10.<android.net.metrics.WakeupEvent: long timestampMs> = l7;

        r10.<android.net.metrics.WakeupEvent: int uid> = i0;

        r10.<android.net.metrics.WakeupEvent: int ethertype> = i1;

        $r5 = staticinvoke <android.net.MacAddress: android.net.MacAddress fromBytes(byte[])>(r1);

        r10.<android.net.metrics.WakeupEvent: android.net.MacAddress dstHwAddr> = $r5;

        r10.<android.net.metrics.WakeupEvent: java.lang.String srcIp> = r2;

        r10.<android.net.metrics.WakeupEvent: java.lang.String dstIp> = r3;

        r10.<android.net.metrics.WakeupEvent: int ipNextHeader> = i2;

        r10.<android.net.metrics.WakeupEvent: int srcPort> = i3;

        r10.<android.net.metrics.WakeupEvent: int dstPort> = i4;

        specialinvoke r0.<com.android.server.connectivity.NetdEventListenerService: void addWakeupEvent(android.net.metrics.WakeupEvent)>(r10);

        $r6 = r10.<android.net.metrics.WakeupEvent: android.net.MacAddress dstHwAddr>;

        $r7 = virtualinvoke $r6.<android.net.MacAddress: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,int,int)>(44, i0, r4, i1, $r7, r2, r3, i2, i3, i4);

     label7:
        exitmonitor r0;

        return;

     label8:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean removeNetdEventCallback(int)
    {
        com.android.server.connectivity.NetdEventListenerService r0;
        int i0;
        java.lang.String r1, $r5;
        boolean $z0;
        android.net.INetdEventCallback[] $r2;
        java.lang.Throwable $r6;
        java.lang.StringBuilder r7;

        r0 := @this: com.android.server.connectivity.NetdEventListenerService;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $z0 = staticinvoke <com.android.server.connectivity.NetdEventListenerService: boolean isValidCallerType(int)>(i0);

        if $z0 != 0 goto label3;

        r1 = <com.android.server.connectivity.NetdEventListenerService: java.lang.String TAG>;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid caller type: ");

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r1, $r5);

     label2:
        exitmonitor r0;

        return 0;

     label3:
        $r2 = r0.<com.android.server.connectivity.NetdEventListenerService: android.net.INetdEventCallback[] mNetdEventCallbackList>;

        $r2[i0] = null;

     label4:
        exitmonitor r0;

        return 1;

     label5:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
