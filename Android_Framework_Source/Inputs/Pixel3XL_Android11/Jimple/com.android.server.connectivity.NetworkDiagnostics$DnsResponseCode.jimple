public final enum class com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode extends java.lang.Enum
{
    private static final com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode[] $VALUES;
    public static final enum com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode FORMERR;
    public static final enum com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode NOERROR;
    public static final enum com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode NOTIMP;
    public static final enum com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode NXDOMAIN;
    public static final enum com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode REFUSED;
    public static final enum com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode SERVFAIL;

    static void <clinit>()
    {
        com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12;
        com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode[] $r7;

        $r1 = new com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode;

        specialinvoke $r1.<com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: void <init>(java.lang.String,int)>("NOERROR", 0);

        <com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode NOERROR> = $r1;

        $r2 = new com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode;

        specialinvoke $r2.<com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: void <init>(java.lang.String,int)>("FORMERR", 1);

        <com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode FORMERR> = $r2;

        $r3 = new com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode;

        specialinvoke $r3.<com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: void <init>(java.lang.String,int)>("SERVFAIL", 2);

        <com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode SERVFAIL> = $r3;

        $r4 = new com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode;

        specialinvoke $r4.<com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: void <init>(java.lang.String,int)>("NXDOMAIN", 3);

        <com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode NXDOMAIN> = $r4;

        $r5 = new com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode;

        specialinvoke $r5.<com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: void <init>(java.lang.String,int)>("NOTIMP", 4);

        <com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode NOTIMP> = $r5;

        $r6 = new com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode;

        specialinvoke $r6.<com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: void <init>(java.lang.String,int)>("REFUSED", 5);

        <com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode REFUSED> = $r6;

        $r7 = newarray (com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode)[6];

        $r8 = <com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode NOERROR>;

        $r7[0] = $r8;

        $r9 = <com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode FORMERR>;

        $r7[1] = $r9;

        $r10 = <com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode SERVFAIL>;

        $r7[2] = $r10;

        $r11 = <com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode NXDOMAIN>;

        $r7[3] = $r11;

        $r12 = <com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode NOTIMP>;

        $r7[4] = $r12;

        $r7[5] = $r6;

        <com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode[] $VALUES> = $r7;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/android/server/connectivity/NetworkDiagnostics$DnsResponseCode;", r0);

        $r2 = (com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode) $r1;

        return $r2;
    }

    public static com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode[] values()
    {
        com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode[]) $r1;

        return $r2;
    }
}
