class com.android.server.connectivity.NetworkDiagnostics$IcmpCheck extends com.android.server.connectivity.NetworkDiagnostics$SimpleSocketCheck implements java.lang.Runnable
{
    private static final int PACKET_BUFSIZE;
    private static final int TIMEOUT_RECV;
    private static final int TIMEOUT_SEND;
    private final int mIcmpType;
    private final int mProtocol;
    final com.android.server.connectivity.NetworkDiagnostics this$0;

    public void <init>(com.android.server.connectivity.NetworkDiagnostics, java.net.InetAddress, com.android.server.connectivity.NetworkDiagnostics$Measurement)
    {
        com.android.server.connectivity.NetworkDiagnostics$IcmpCheck r0;
        com.android.server.connectivity.NetworkDiagnostics r1;
        java.net.InetAddress r2;
        com.android.server.connectivity.NetworkDiagnostics$Measurement r3;

        r0 := @this: com.android.server.connectivity.NetworkDiagnostics$IcmpCheck;

        r1 := @parameter0: com.android.server.connectivity.NetworkDiagnostics;

        r2 := @parameter1: java.net.InetAddress;

        r3 := @parameter2: com.android.server.connectivity.NetworkDiagnostics$Measurement;

        specialinvoke r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: void <init>(com.android.server.connectivity.NetworkDiagnostics,java.net.InetAddress,java.net.InetAddress,com.android.server.connectivity.NetworkDiagnostics$Measurement)>(r1, null, r2, r3);

        return;
    }

    public void <init>(com.android.server.connectivity.NetworkDiagnostics, java.net.InetAddress, java.net.InetAddress, com.android.server.connectivity.NetworkDiagnostics$Measurement)
    {
        com.android.server.connectivity.NetworkDiagnostics$IcmpCheck r0;
        java.net.InetAddress r1, $r8, r15;
        com.android.server.connectivity.NetworkDiagnostics$Measurement r2, $r3, $r13, r17;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r9, $r12;
        com.android.server.connectivity.NetworkDiagnostics r14;

        r0 := @this: com.android.server.connectivity.NetworkDiagnostics$IcmpCheck;

        r14 := @parameter0: com.android.server.connectivity.NetworkDiagnostics;

        r15 := @parameter1: java.net.InetAddress;

        r1 := @parameter2: java.net.InetAddress;

        r2 := @parameter3: com.android.server.connectivity.NetworkDiagnostics$Measurement;

        r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: com.android.server.connectivity.NetworkDiagnostics this$0> = r14;

        specialinvoke r0.<com.android.server.connectivity.NetworkDiagnostics$SimpleSocketCheck: void <init>(com.android.server.connectivity.NetworkDiagnostics,java.net.InetAddress,java.net.InetAddress,com.android.server.connectivity.NetworkDiagnostics$Measurement)>(r14, r15, r1, r2);

        $i1 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: int mAddressFamily>;

        $i0 = <android.system.OsConstants: int AF_INET6>;

        if $i1 != $i0 goto label1;

        $i3 = <android.system.OsConstants: int IPPROTO_ICMPV6>;

        r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: int mProtocol> = $i3;

        r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: int mIcmpType> = 128;

        $r13 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: com.android.server.connectivity.NetworkDiagnostics$Measurement mMeasurement>;

        $r13.<com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String description> = "ICMPv6";

        goto label2;

     label1:
        $i2 = <android.system.OsConstants: int IPPROTO_ICMP>;

        r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: int mProtocol> = $i2;

        r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: int mIcmpType> = 8;

        $r3 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: com.android.server.connectivity.NetworkDiagnostics$Measurement mMeasurement>;

        $r3.<com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String description> = "ICMPv4";

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r17 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: com.android.server.connectivity.NetworkDiagnostics$Measurement mMeasurement>;

        $r5 = r17.<com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String description>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst{");

        $r8 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: java.net.InetAddress mTarget>;

        $r9 = virtualinvoke $r8.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r17.<com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String description> = $r12;

        return;
    }

    public void run()
    {
        com.android.server.connectivity.NetworkDiagnostics$IcmpCheck r0;
        com.android.server.connectivity.NetworkDiagnostics$Measurement r1, $r11, $r23, $r26, r30, $r36, r37;
        boolean $z0;
        int $i0, $i1, $i2, $i17, $i20, $i21, i24, i25;
        java.lang.String $r3, $r7, $r10, $r16, $r21, $r24, $r27;
        java.net.SocketAddress $r6;
        byte $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b16, $b18, $b19, $b27;
        long $l12, $l13, $l14, $l15, $l26;
        com.android.server.connectivity.NetworkDiagnostics $r12;
        java.io.FileDescriptor $r17, $r18;
        java.lang.Throwable $r22, $r25, $r28;
        byte[] r31;
        java.nio.ByteBuffer r32;
        java.lang.StringBuilder r40, r41, r42;
        java.lang.Exception r43, r44;

        r0 := @this: com.android.server.connectivity.NetworkDiagnostics$IcmpCheck;

        $z0 = virtualinvoke r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: boolean ensureMeasurementNecessary()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $i1 = <android.system.OsConstants: int SOCK_DGRAM>;

        $i0 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: int mProtocol>;

        virtualinvoke r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: void setupSocket(int,int,long,long,int)>($i1, $i0, 100L, 300L, 0);

     label02:
        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        r30 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: com.android.server.connectivity.NetworkDiagnostics$Measurement mMeasurement>;

        $r3 = r30.<com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String description>;

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" src{");

        $r6 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: java.net.SocketAddress mSocketAddress>;

        $r7 = staticinvoke <com.android.server.connectivity.NetworkDiagnostics: java.lang.String access$400(java.net.SocketAddress)>($r6);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r10 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        r30.<com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String description> = $r10;

        r31 = newarray (byte)[8];

        $i2 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: int mIcmpType>;

        $b3 = (byte) $i2;

        $b4 = (byte) $b3;

        r31[0] = $b4;

        $b5 = (byte) 0;

        r31[1] = $b5;

        $b6 = (byte) 0;

        r31[2] = $b6;

        $b7 = (byte) 0;

        r31[3] = $b7;

        $b8 = (byte) 0;

        r31[4] = $b8;

        $b9 = (byte) 0;

        r31[5] = $b9;

        $b10 = (byte) 0;

        r31[6] = $b10;

        $b11 = (byte) 0;

        r31[7] = $b11;

        i24 = 0;

        $r11 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: com.android.server.connectivity.NetworkDiagnostics$Measurement mMeasurement>;

        $l12 = staticinvoke <com.android.server.connectivity.NetworkDiagnostics: long access$100()>();

        $r11.<com.android.server.connectivity.NetworkDiagnostics$Measurement: long startTime> = $l12;

     label03:
        i25 = i24;

        $l13 = staticinvoke <com.android.server.connectivity.NetworkDiagnostics: long access$100()>();

        $r12 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: com.android.server.connectivity.NetworkDiagnostics this$0>;

        $l14 = staticinvoke <com.android.server.connectivity.NetworkDiagnostics: long access$500(com.android.server.connectivity.NetworkDiagnostics)>($r12);

        $l15 = $l14 - 400L;

        $b16 = $l13 cmp $l15;

        if $b16 >= 0 goto label09;

        i24 = i24 + 1;

        $i17 = lengthof r31;

        $i20 = $i17 - 1;

        $b18 = (byte) i24;

        $b19 = (byte) $b18;

        r31[$i20] = $b19;

     label04:
        $r17 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: java.io.FileDescriptor mFileDescriptor>;

        $i21 = lengthof r31;

        staticinvoke <android.system.Os: int write(java.io.FileDescriptor,byte[],int,int)>($r17, r31, 0, $i21);

     label05:
        r32 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(512);

        $r18 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: java.io.FileDescriptor mFileDescriptor>;

        staticinvoke <android.system.Os: int read(java.io.FileDescriptor,java.nio.ByteBuffer)>($r18, r32);

        r1 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: com.android.server.connectivity.NetworkDiagnostics$Measurement mMeasurement>;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1/");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);

        $r21 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.connectivity.NetworkDiagnostics$Measurement: void recordSuccess(java.lang.String)>($r21);

     label06:
        i25 = i24;

        goto label09;

     label07:
        $r28 := @caughtexception;

        goto label03;

     label08:
        $r25 := @caughtexception;

        $r26 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: com.android.server.connectivity.NetworkDiagnostics$Measurement mMeasurement>;

        r43 = (java.lang.Exception) $r25;

        $r27 = virtualinvoke r43.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r26.<com.android.server.connectivity.NetworkDiagnostics$Measurement: void recordFailure(java.lang.String)>($r27);

        i25 = i24;

     label09:
        $r36 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: com.android.server.connectivity.NetworkDiagnostics$Measurement mMeasurement>;

        $l26 = $r36.<com.android.server.connectivity.NetworkDiagnostics$Measurement: long finishTime>;

        $b27 = $l26 cmp 0L;

        if $b27 != 0 goto label10;

        r37 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: com.android.server.connectivity.NetworkDiagnostics$Measurement mMeasurement>;

        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0/");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i25);

        $r16 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<com.android.server.connectivity.NetworkDiagnostics$Measurement: void recordFailure(java.lang.String)>($r16);

     label10:
        virtualinvoke r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: void close()>();

        return;

     label11:
        $r22 := @caughtexception;

        $r23 = r0.<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: com.android.server.connectivity.NetworkDiagnostics$Measurement mMeasurement>;

        r44 = (java.lang.Exception) $r22;

        $r24 = virtualinvoke r44.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r23.<com.android.server.connectivity.NetworkDiagnostics$Measurement: void recordFailure(java.lang.String)>($r24);

        return;

        catch android.system.ErrnoException from label01 to label02 with label11;
        catch java.io.IOException from label01 to label02 with label11;
        catch android.system.ErrnoException from label04 to label05 with label08;
        catch java.io.InterruptedIOException from label04 to label05 with label08;
        catch android.system.ErrnoException from label05 to label06 with label07;
        catch java.io.InterruptedIOException from label05 to label06 with label07;
    }

    public static void <clinit>()
    {
        <com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: int TIMEOUT_SEND> = 100;

        <com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: int TIMEOUT_RECV> = 300;

        <com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: int PACKET_BUFSIZE> = 512;

        return;
    }
}
