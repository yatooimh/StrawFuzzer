public class com.android.server.connectivity.NetworkDiagnostics$Measurement extends java.lang.Object
{
    private static final java.lang.String FAILED;
    private static final java.lang.String SUCCEEDED;
    java.lang.String description;
    long finishTime;
    java.lang.String result;
    long startTime;
    private boolean succeeded;
    final com.android.server.connectivity.NetworkDiagnostics this$0;
    java.lang.Thread thread;

    public void <init>(com.android.server.connectivity.NetworkDiagnostics)
    {
        com.android.server.connectivity.NetworkDiagnostics$Measurement r0;
        com.android.server.connectivity.NetworkDiagnostics r1;

        r0 := @this: com.android.server.connectivity.NetworkDiagnostics$Measurement;

        r1 := @parameter0: com.android.server.connectivity.NetworkDiagnostics;

        r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: com.android.server.connectivity.NetworkDiagnostics this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String description> = "";

        r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String result> = "";

        return;
    }

    private void maybeFixupTimes()
    {
        com.android.server.connectivity.NetworkDiagnostics$Measurement r0;
        long $l0, $l2, $l4, $l5;
        byte $b1, $b3;

        r0 := @this: com.android.server.connectivity.NetworkDiagnostics$Measurement;

        $l0 = r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: long finishTime>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $l5 = staticinvoke <com.android.server.connectivity.NetworkDiagnostics: long access$100()>();

        r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: long finishTime> = $l5;

     label1:
        $l2 = r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: long startTime>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label2;

        $l4 = r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: long finishTime>;

        r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: long startTime> = $l4;

     label2:
        return;
    }

    public boolean checkSucceeded()
    {
        com.android.server.connectivity.NetworkDiagnostics$Measurement r0;
        boolean $z0;

        r0 := @this: com.android.server.connectivity.NetworkDiagnostics$Measurement;

        $z0 = r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: boolean succeeded>;

        return $z0;
    }

    void recordFailure(java.lang.String)
    {
        com.android.server.connectivity.NetworkDiagnostics$Measurement r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r3;
        com.android.server.connectivity.NetworkDiagnostics $r7, $r9;
        java.util.concurrent.CountDownLatch $r8, $r10;

        r0 := @this: com.android.server.connectivity.NetworkDiagnostics$Measurement;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: void maybeFixupTimes()>();

        r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: boolean succeeded> = 0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAILED: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String result> = $r6;

        $r7 = r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: com.android.server.connectivity.NetworkDiagnostics this$0>;

        $r8 = staticinvoke <com.android.server.connectivity.NetworkDiagnostics: java.util.concurrent.CountDownLatch access$000(com.android.server.connectivity.NetworkDiagnostics)>($r7);

        if $r8 == null goto label1;

        $r9 = r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: com.android.server.connectivity.NetworkDiagnostics this$0>;

        $r10 = staticinvoke <com.android.server.connectivity.NetworkDiagnostics: java.util.concurrent.CountDownLatch access$000(com.android.server.connectivity.NetworkDiagnostics)>($r9);

        virtualinvoke $r10.<java.util.concurrent.CountDownLatch: void countDown()>();

     label1:
        return;
    }

    void recordSuccess(java.lang.String)
    {
        com.android.server.connectivity.NetworkDiagnostics$Measurement r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r3;
        com.android.server.connectivity.NetworkDiagnostics $r7, $r9;
        java.util.concurrent.CountDownLatch $r8, $r10;

        r0 := @this: com.android.server.connectivity.NetworkDiagnostics$Measurement;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: void maybeFixupTimes()>();

        r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: boolean succeeded> = 1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SUCCEEDED: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String result> = $r6;

        $r7 = r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: com.android.server.connectivity.NetworkDiagnostics this$0>;

        $r8 = staticinvoke <com.android.server.connectivity.NetworkDiagnostics: java.util.concurrent.CountDownLatch access$000(com.android.server.connectivity.NetworkDiagnostics)>($r7);

        if $r8 == null goto label1;

        $r9 = r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: com.android.server.connectivity.NetworkDiagnostics this$0>;

        $r10 = staticinvoke <com.android.server.connectivity.NetworkDiagnostics: java.util.concurrent.CountDownLatch access$000(com.android.server.connectivity.NetworkDiagnostics)>($r9);

        virtualinvoke $r10.<java.util.concurrent.CountDownLatch: void countDown()>();

     label1:
        return;
    }

    public java.lang.String toString()
    {
        com.android.server.connectivity.NetworkDiagnostics$Measurement r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6, $r11;
        long $l0, $l1, $l2;

        r0 := @this: com.android.server.connectivity.NetworkDiagnostics$Measurement;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String description>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String result>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $l1 = r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: long finishTime>;

        $l0 = r0.<com.android.server.connectivity.NetworkDiagnostics$Measurement: long startTime>;

        $l2 = $l1 - $l0;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms)");

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public static void <clinit>()
    {
        <com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String SUCCEEDED> = "SUCCEEDED";

        <com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String FAILED> = "FAILED";

        return;
    }
}
