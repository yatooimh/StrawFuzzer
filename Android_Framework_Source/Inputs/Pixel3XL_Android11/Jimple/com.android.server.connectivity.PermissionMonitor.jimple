public class com.android.server.connectivity.PermissionMonitor extends java.lang.Object
{
    private static final boolean DBG;
    protected static final java.lang.Boolean NETWORK;
    protected static final java.lang.Boolean SYSTEM;
    private static final java.lang.String TAG;
    private static final int VERSION_Q;
    private final java.util.Set mAllApps;
    private final java.util.Map mApps;
    private final android.net.INetd mNetd;
    private final android.content.pm.PackageManager mPackageManager;
    private final android.os.UserManager mUserManager;
    private final java.util.Set mUsers;
    private final java.util.Map mVpnUidRanges;

    static void <clinit>()
    {
        java.lang.Boolean $r0, $r1;

        <com.android.server.connectivity.PermissionMonitor: int VERSION_Q> = 29;

        <com.android.server.connectivity.PermissionMonitor: java.lang.String TAG> = "PermissionMonitor";

        <com.android.server.connectivity.PermissionMonitor: boolean DBG> = 1;

        $r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        <com.android.server.connectivity.PermissionMonitor: java.lang.Boolean SYSTEM> = $r0;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        <com.android.server.connectivity.PermissionMonitor: java.lang.Boolean NETWORK> = $r1;

        return;
    }

    public void <init>(android.content.Context, android.net.INetd)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        android.content.Context r1;
        android.net.INetd r2;
        java.util.HashSet $r3, $r6;
        java.util.HashMap $r4, $r5;
        android.content.pm.PackageManager $r7;
        java.lang.Object $r8;
        android.os.UserManager $r9;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.INetd;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mVpnUidRanges> = $r5;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mAllApps> = $r6;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.connectivity.PermissionMonitor: android.content.pm.PackageManager mPackageManager> = $r7;

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r9 = (android.os.UserManager) $r8;

        r0.<com.android.server.connectivity.PermissionMonitor: android.os.UserManager mUserManager> = $r9;

        r0.<com.android.server.connectivity.PermissionMonitor: android.net.INetd mNetd> = r2;

        return;
    }

    static android.content.pm.PackageManager access$000(com.android.server.connectivity.PermissionMonitor)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        android.content.pm.PackageManager $r1;

        r0 := @parameter0: com.android.server.connectivity.PermissionMonitor;

        $r1 = r0.<com.android.server.connectivity.PermissionMonitor: android.content.pm.PackageManager mPackageManager>;

        return $r1;
    }

    static android.content.pm.PackageInfo access$100(com.android.server.connectivity.PermissionMonitor, java.lang.String)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        java.lang.String r1;
        android.content.pm.PackageInfo $r2;

        r0 := @parameter0: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: android.content.pm.PackageInfo getPackageInfo(java.lang.String)>(r1);

        return $r2;
    }

    static int access$200(java.lang.String[], int[])
    {
        java.lang.String[] r0;
        int[] r1;
        int $i0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: int[];

        $i0 = staticinvoke <com.android.server.connectivity.PermissionMonitor: int getNetdPermissionMask(java.lang.String[],int[])>(r0, r1);

        return $i0;
    }

    private static int getNetdPermissionMask(java.lang.String[], int[])
    {
        java.lang.String[] r0;
        int[] r1;
        int $i0, $i1, $i2, $i3, $i4, i6;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;
        byte b5, b7;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: int[];

        b5 = 0;

        if r0 == null goto label6;

        if r1 != null goto label1;

        goto label6;

     label1:
        i6 = 0;

     label2:
        $i0 = lengthof r0;

        if i6 >= $i0 goto label5;

        b7 = b5;

        $r2 = r0[i6];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("android.permission.INTERNET");

        if $z0 == 0 goto label3;

        b7 = b5;

        $i3 = r1[i6];

        $i4 = $i3 & 2;

        if $i4 == 0 goto label3;

        b7 = b5 | 4;

     label3:
        b5 = b7;

        $r3 = r0[i6];

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("android.permission.UPDATE_DEVICE_STATS");

        if $z1 == 0 goto label4;

        b5 = b7;

        $i1 = r1[i6];

        $i2 = $i1 & 2;

        if $i2 == 0 goto label4;

        b5 = b7 | 8;

     label4:
        i6 = i6 + 1;

        goto label2;

     label5:
        return b5;

     label6:
        return 0;
    }

    private android.content.pm.PackageInfo getPackageInfo(java.lang.String)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        android.content.pm.PackageManager $r1;
        android.content.pm.PackageManager$NameNotFoundException $r2;
        java.lang.String r3;
        android.content.pm.PackageInfo r4;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r3 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<com.android.server.connectivity.PermissionMonitor: android.content.pm.PackageManager mPackageManager>;

        r4 = virtualinvoke $r1.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r3, 4198400);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private java.util.Set intersectUids(java.util.Set, java.util.Set)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        java.util.Set r1, r10;
        java.util.Iterator r3, r11;
        android.net.UidRange r4;
        int i0, $i1, $i2, i3;
        java.util.HashSet $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6, $r7;
        java.lang.Integer $r8, $r9;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r10 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r3 = interfaceinvoke r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.net.UidRange) $r6;

        i3 = virtualinvoke r4.<android.net.UidRange: int getStartUser()>();

     label2:
        $i1 = virtualinvoke r4.<android.net.UidRange: int getEndUser()>();

        if i3 > $i1 goto label6;

        r11 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.Integer) $r7;

        $i2 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        i0 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i3, $i2);

        $z2 = virtualinvoke r4.<android.net.UidRange: boolean contains(int)>(i0);

        if $z2 == 0 goto label4;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r9);

     label4:
        goto label3;

     label5:
        i3 = i3 + 1;

        goto label2;

     label6:
        goto label1;

     label7:
        return $r5;
    }

    static boolean isVendorApp(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $z0 = virtualinvoke r0.<android.content.pm.ApplicationInfo: boolean isVendor()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<android.content.pm.ApplicationInfo: boolean isOem()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<android.content.pm.ApplicationInfo: boolean isProduct()>();

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PermissionMonitor", r0);

        return;
    }

    private static void loge(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PermissionMonitor", r0);

        return;
    }

    private static void loge(java.lang.String, java.lang.Throwable)
    {
        java.lang.String r0;
        java.lang.Throwable r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Throwable;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PermissionMonitor", r0, r1);

        return;
    }

    private void removeBypassingUids(java.util.Set, int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        java.util.Set r1;
        int i0;
        java.lang.Integer $r2;
        com.android.server.connectivity._$$Lambda$PermissionMonitor$h_GPsXXwaQ_Mfu5_dqCp_VIYNOM $r3;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: java.util.Set;

        i0 := @parameter1: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r1.<java.util.Set: boolean remove(java.lang.Object)>($r2);

        $r3 = new com.android.server.connectivity._$$Lambda$PermissionMonitor$h_GPsXXwaQ_Mfu5_dqCp_VIYNOM;

        specialinvoke $r3.<com.android.server.connectivity._$$Lambda$PermissionMonitor$h_GPsXXwaQ_Mfu5_dqCp_VIYNOM: void <init>(com.android.server.connectivity.PermissionMonitor)>(r0);

        interfaceinvoke r1.<java.util.Set: boolean removeIf(java.util.function.Predicate)>($r3);

        return;
    }

    private int[] toIntArray(java.util.Collection)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int[] r1;
        int $i0, $i1, i2;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        java.util.Collection r4;
        java.util.Iterator r5;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r4 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r4.<java.util.Collection: int size()>();

        r1 = newarray (int)[$i0];

        i2 = 0;

        r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Integer) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        r1[i2] = $i1;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    private void update(java.util.Set, java.util.Map, boolean)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        boolean z0, $z1, $z2, $z4;
        java.util.Iterator r3, r5;
        java.util.Map$Entry r4;
        java.util.ArrayList $r6, $r7, r32;
        java.util.Set $r8, r30;
        android.net.INetd $r9, $r11, $r13, $r15;
        int[] $r10, $r12, $r14, $r16;
        java.lang.Object $r17, $r18, $r20, $r22;
        java.lang.Boolean $r19;
        java.lang.Integer $r21, $r23, $r24;
        int $i0, $i1, $i2;
        android.os.RemoteException $r25;
        java.lang.StringBuilder $r26;
        java.lang.String $r29;
        java.util.Map r31;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r30 := @parameter0: java.util.Set;

        r31 := @parameter1: java.util.Map;

        z0 := @parameter2: boolean;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = interfaceinvoke r31.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r17 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r17;

        $r18 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (java.lang.Boolean) $r18;

        $z2 = virtualinvoke $r19.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label02;

        r32 = $r7;

        goto label03;

     label02:
        r32 = $r6;

     label03:
        r5 = interfaceinvoke r30.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label05;

        $r20 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (java.lang.Integer) $r20;

        $i0 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();

        $r22 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r23 = (java.lang.Integer) $r22;

        $i1 = virtualinvoke $r23.<java.lang.Integer: int intValue()>();

        $i2 = staticinvoke <android.os.UserHandle: int getUid(int,int)>($i0, $i1);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r32.<java.util.List: boolean add(java.lang.Object)>($r24);

        goto label04;

     label05:
        goto label01;

     label06:
        if z0 == 0 goto label09;

     label07:
        $r13 = r0.<com.android.server.connectivity.PermissionMonitor: android.net.INetd mNetd>;

        $r14 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: int[] toIntArray(java.util.Collection)>($r6);

        interfaceinvoke $r13.<android.net.INetd: void networkSetPermissionForUser(int,int[])>(1, $r14);

        $r15 = r0.<com.android.server.connectivity.PermissionMonitor: android.net.INetd mNetd>;

        $r16 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: int[] toIntArray(java.util.Collection)>($r7);

        interfaceinvoke $r15.<android.net.INetd: void networkSetPermissionForUser(int,int[])>(2, $r16);

     label08:
        goto label10;

     label09:
        $r9 = r0.<com.android.server.connectivity.PermissionMonitor: android.net.INetd mNetd>;

        $r10 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: int[] toIntArray(java.util.Collection)>($r6);

        interfaceinvoke $r9.<android.net.INetd: void networkClearPermissionForUser(int[])>($r10);

        $r11 = r0.<com.android.server.connectivity.PermissionMonitor: android.net.INetd mNetd>;

        $r12 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: int[] toIntArray(java.util.Collection)>($r7);

        interfaceinvoke $r11.<android.net.INetd: void networkClearPermissionForUser(int[])>($r12);

     label10:
        goto label12;

     label11:
        $r25 := @caughtexception;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when updating permissions: ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>($r29);

     label12:
        return;

        catch android.os.RemoteException from label07 to label08 with label11;
        catch android.os.RemoteException from label09 to label10 with label11;
    }

    private void updateVpnUids(java.lang.String, java.util.Set, boolean)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        java.util.Set r1;
        boolean z0;
        int $i0, $i1, $i2;
        android.net.INetd $r2, $r4;
        int[] $r3, $r5;
        android.os.RemoteException $r6;
        android.os.ServiceSpecificException $r7;
        java.lang.String r8;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Set;

        z0 := @parameter2: boolean;

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        if z0 == 0 goto label4;

     label2:
        $r4 = r0.<com.android.server.connectivity.PermissionMonitor: android.net.INetd mNetd>;

        $r5 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: int[] toIntArray(java.util.Collection)>(r1);

        interfaceinvoke $r4.<android.net.INetd: void firewallAddUidInterfaceRules(java.lang.String,int[])>(r8, $r5);

     label3:
        goto label8;

     label4:
        $r2 = r0.<com.android.server.connectivity.PermissionMonitor: android.net.INetd mNetd>;

        $r3 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: int[] toIntArray(java.util.Collection)>(r1);

        interfaceinvoke $r2.<android.net.INetd: void firewallRemoveUidInterfaceRules(int[])>($r3);

     label5:
        goto label8;

     label6:
        $r6 := @caughtexception;

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String,java.lang.Throwable)>("Exception when updating permissions: ", $r6);

        goto label8;

     label7:
        $r7 := @caughtexception;

        $i2 = $r7.<android.os.ServiceSpecificException: int errorCode>;

        $i1 = <android.system.OsConstants: int EOPNOTSUPP>;

        if $i2 == $i1 goto label8;

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String,java.lang.Throwable)>("Exception when updating permissions: ", $r7);

     label8:
        return;

        catch android.os.ServiceSpecificException from label2 to label3 with label7;
        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.ServiceSpecificException from label4 to label5 with label7;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Map $r5;
        java.util.Set $r6, $r18;
        boolean $z0;
        java.lang.Object $r8, $r11, $r17;
        java.lang.StringBuilder $r9, $r15;
        java.lang.String $r12, $r14, $r19, $r21;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Interface filtering rules:");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r5 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mVpnUidRanges>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interface: ");

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UIDs: ");

        $r17 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.util.Set) $r17;

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r21);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        goto label1;

     label2:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    protected int getDeviceFirstSdkInt()
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int $i0;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        $i0 = <android.os.Build$VERSION: int FIRST_SDK_INT>;

        return $i0;
    }

    public java.util.Set getVpnUidRanges(java.lang.String)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.util.Set $r4;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mVpnUidRanges>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Set) $r3;

        return $r4;
    }

    boolean hasNetworkPermission(android.content.pm.PackageInfo)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        android.content.pm.PackageInfo r1;
        boolean $z0;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: android.content.pm.PackageInfo;

        $z0 = virtualinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasPermission(android.content.pm.PackageInfo,java.lang.String)>(r1, "android.permission.CHANGE_NETWORK_STATE");

        return $z0;
    }

    boolean hasPermission(android.content.pm.PackageInfo, java.lang.String)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        android.content.pm.PackageInfo r1;
        java.lang.String r2;
        java.lang.String[] r3, $r5;
        int i0, $i1, $i2, $i3;
        int[] $r4, $r6, $r7;
        boolean z0;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: android.content.pm.PackageInfo;

        r2 := @parameter1: java.lang.String;

        r3 = r1.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        z0 = 0;

        if r3 == null goto label5;

        $r4 = r1.<android.content.pm.PackageInfo: int[] requestedPermissionsFlags>;

        if $r4 != null goto label1;

        goto label5;

     label1:
        $r5 = r1.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        i0 = staticinvoke <com.android.internal.util.ArrayUtils: int indexOf(java.lang.Object[],java.lang.Object)>($r5, r2);

        if i0 < 0 goto label4;

        $r6 = r1.<android.content.pm.PackageInfo: int[] requestedPermissionsFlags>;

        $i1 = lengthof $r6;

        if i0 < $i1 goto label2;

        goto label4;

     label2:
        $r7 = r1.<android.content.pm.PackageInfo: int[] requestedPermissionsFlags>;

        $i2 = $r7[i0];

        $i3 = $i2 & 2;

        if $i3 == 0 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        return 0;

     label5:
        return 0;
    }

    boolean hasRestrictedNetworkPermission(android.content.pm.PackageInfo)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        android.content.pm.PackageInfo r1;
        android.content.pm.ApplicationInfo r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, z3, $z4;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: android.content.pm.PackageInfo;

        r2 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        z3 = 1;

        if r2 == null goto label2;

        $r3 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        if $i0 != 1000 goto label1;

        $i2 = virtualinvoke r0.<com.android.server.connectivity.PermissionMonitor: int getDeviceFirstSdkInt()>();

        if $i2 >= 29 goto label1;

        return 1;

     label1:
        $r4 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r4.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 >= 29 goto label2;

        $r5 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z2 = staticinvoke <com.android.server.connectivity.PermissionMonitor: boolean isVendorApp(android.content.pm.ApplicationInfo)>($r5);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        $z4 = virtualinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasPermission(android.content.pm.PackageInfo,java.lang.String)>(r1, "android.permission.MAINLINE_NETWORK_STACK");

        if $z4 != 0 goto label4;

        $z0 = virtualinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasPermission(android.content.pm.PackageInfo,java.lang.String)>(r1, "android.permission.NETWORK_STACK");

        if $z0 != 0 goto label4;

        $z1 = virtualinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasPermission(android.content.pm.PackageInfo,java.lang.String)>(r1, "android.permission.CONNECTIVITY_USE_RESTRICTED_NETWORKS");

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        z3 = 0;

        goto label4;

     label4:
        return z3;
    }

    public boolean hasUseBackgroundNetworksPermission(int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0;
        boolean z0;
        java.util.Map $r2;
        java.lang.Integer $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected java.lang.Boolean highestPermissionForUid(java.lang.Boolean, java.lang.String)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        java.lang.String r1, $r8;
        boolean z0, z1;
        java.lang.Boolean $r2, r9;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.StringBuilder $r5;
        android.content.pm.PackageInfo r10;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r9 := @parameter0: java.lang.Boolean;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.android.server.connectivity.PermissionMonitor: java.lang.Boolean SYSTEM>;

        if r9 != $r2 goto label1;

        return r9;

     label1:
        $r3 = r0.<com.android.server.connectivity.PermissionMonitor: android.content.pm.PackageManager mPackageManager>;

        r10 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 4096);

        z0 = virtualinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasNetworkPermission(android.content.pm.PackageInfo)>(r10);

        z1 = virtualinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasRestrictedNetworkPermission(android.content.pm.PackageInfo)>(r10);

     label2:
        if z0 != 0 goto label3;

        if z1 == 0 goto label4;

     label3:
        r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NameNotFoundException ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>($r8);

     label6:
        return r9;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
    }

    public boolean lambda$removeBypassingUids$0$PermissionMonitor(java.lang.Integer)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        java.lang.Integer r1;
        java.lang.Boolean $r2, $r5;
        java.util.Map $r3;
        java.lang.Object $r4;
        boolean z0;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: java.lang.Integer;

        $r3 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r2 = <com.android.server.connectivity.PermissionMonitor: java.lang.Boolean NETWORK>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r1, $r2);

        $r5 = <com.android.server.connectivity.PermissionMonitor: java.lang.Boolean SYSTEM>;

        if $r4 != $r5 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void onPackageAdded(java.lang.String, int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0, $i1;
        java.util.HashSet r1;
        java.util.Map $r2, $r6, $r9, $r19;
        java.lang.Integer $r3, $r7, $r12, $r16, $r20, $r22;
        java.lang.Object $r4, $r8, $r13, $r14, $r17;
        java.lang.Boolean $r5, r27;
        java.util.Set $r10, $r11, $r24;
        java.util.Collection $r15;
        boolean $z1, $z3;
        java.lang.String $r18, r26;
        java.lang.Throwable $r25;
        java.util.HashMap r28;
        java.util.Iterator r29;
        java.util.Map$Entry r30;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r26 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        r27 = virtualinvoke r0.<com.android.server.connectivity.PermissionMonitor: java.lang.Boolean highestPermissionForUid(java.lang.Boolean,java.lang.String)>($r5, r26);

        $r6 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        if r27 == $r8 goto label2;

        $r19 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r27);

        r28 = new java.util.HashMap;

        specialinvoke r28.<java.util.HashMap: void <init>()>();

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, r27);

        $r24 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void update(java.util.Set,java.util.Map,boolean)>($r24, r28, 1);

     label2:
        $r9 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mVpnUidRanges>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        r29 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r13 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.util.Map$Entry) $r13;

        $r14 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (java.util.Collection) $r14;

        $z1 = staticinvoke <android.net.UidRange: boolean containsUid(java.util.Collection,int)>($r15, i0);

        if $z1 == 0 goto label4;

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r16);

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void removeBypassingUids(java.util.Set,int)>(r1, -1);

        $r17 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (java.lang.String) $r17;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void updateVpnUids(java.lang.String,java.util.Set,boolean)>($r18, r1, 1);

     label4:
        goto label3;

     label5:
        $r11 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mAllApps>;

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label6:
        exitmonitor r0;

        return;

     label7:
        $r25 := @caughtexception;

        exitmonitor r0;

        throw $r25;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void onPackageRemoved(int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0, i1, $i2, $i3, i4;
        java.util.HashMap r1;
        java.lang.String[] r2;
        java.util.Map $r3, $r8, $r13, $r33;
        java.util.Set $r4, $r12, $r16, $r18;
        boolean $z0, $z1;
        android.content.pm.PackageManager $r5, $r7;
        java.lang.String $r6, $r17, $r25;
        java.lang.Integer $r9, $r10, $r14, $r15, $r19, $r23, $r34;
        java.lang.Boolean $r11, r30, r31, r32;
        java.lang.Object $r20, $r21, $r24, r35;
        java.util.Collection $r22;
        java.lang.Throwable $r26;
        java.util.Iterator r27;
        java.util.Map$Entry r28;
        java.util.HashSet r29;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        $r3 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mVpnUidRanges>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        r27 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r20 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.util.Map$Entry) $r20;

        $r21 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r22 = (java.util.Collection) $r21;

        $z1 = staticinvoke <android.net.UidRange: boolean containsUid(java.util.Collection,int)>($r22, i0);

        if $z1 == 0 goto label03;

        r29 = new java.util.HashSet;

        specialinvoke r29.<java.util.HashSet: void <init>()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r29.<java.util.Set: boolean add(java.lang.Object)>($r23);

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void removeBypassingUids(java.util.Set,int)>(r29, -1);

        $r24 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r25 = (java.lang.String) $r24;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void updateVpnUids(java.lang.String,java.util.Set,boolean)>($r25, r29, 0);

     label03:
        goto label02;

     label04:
        $r5 = r0.<com.android.server.connectivity.PermissionMonitor: android.content.pm.PackageManager mPackageManager>;

        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>(i0);

        if $r6 != null goto label05;

        $r18 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mAllApps>;

        $i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r18.<java.util.Set: boolean remove(java.lang.Object)>($r19);

     label05:
        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

     label06:
        r30 = null;

     label07:
        $r7 = r0.<com.android.server.connectivity.PermissionMonitor: android.content.pm.PackageManager mPackageManager>;

        r2 = virtualinvoke $r7.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

     label08:
        r31 = null;

        if r2 == null goto label15;

        r31 = null;

     label09:
        $i2 = lengthof r2;

        if $i2 <= 0 goto label15;

        i1 = lengthof r2;

     label10:
        i4 = 0;

     label11:
        r31 = r30;

        if i4 >= i1 goto label15;

     label12:
        $r17 = r2[i4];

        r30 = virtualinvoke r0.<com.android.server.connectivity.PermissionMonitor: java.lang.Boolean highestPermissionForUid(java.lang.Boolean,java.lang.String)>(r30, $r17);

        r32 = <com.android.server.connectivity.PermissionMonitor: java.lang.Boolean SYSTEM>;

     label13:
        if r30 != r32 goto label14;

        exitmonitor r0;

        return;

     label14:
        i4 = i4 + 1;

        goto label11;

     label15:
        $r33 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r35 = interfaceinvoke $r33.<java.util.Map: java.lang.Object get(java.lang.Object)>($r34);

     label16:
        if r31 != r35 goto label17;

        exitmonitor r0;

        return;

     label17:
        if r31 == null goto label20;

     label18:
        $r13 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r31);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, r31);

        $r16 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void update(java.util.Set,java.util.Map,boolean)>($r16, r1, 1);

     label19:
        goto label21;

     label20:
        $r8 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11 = <com.android.server.connectivity.PermissionMonitor: java.lang.Boolean NETWORK>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        $r12 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void update(java.util.Set,java.util.Map,boolean)>($r12, r1, 0);

     label21:
        exitmonitor r0;

        return;

     label22:
        $r26 := @caughtexception;

        exitmonitor r0;

        throw $r26;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
    }

    public void onUserAdded(int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0;
        java.util.Set $r1;
        java.lang.Integer $r2, $r3;
        java.util.Map $r4;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        java.lang.StringBuilder r9;
        java.util.HashSet r10;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        i0 := @parameter0: int;

        entermonitor r0;

        if i0 >= 0 goto label3;

     label1:
        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid user in onUserAdded: ");

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>($r7);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r2);

        r10 = new java.util.HashSet;

        specialinvoke r10.<java.util.HashSet: void <init>()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r10.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r4 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void update(java.util.Set,java.util.Map,boolean)>(r10, $r4, 1);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onUserRemoved(int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0;
        java.util.Set $r1;
        java.lang.Integer $r2, $r3;
        java.util.Map $r4;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        java.lang.StringBuilder r9;
        java.util.HashSet r10;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        i0 := @parameter0: int;

        entermonitor r0;

        if i0 >= 0 goto label3;

     label1:
        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid user in onUserRemoved: ");

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>($r7);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r1.<java.util.Set: boolean remove(java.lang.Object)>($r2);

        r10 = new java.util.HashSet;

        specialinvoke r10.<java.util.HashSet: void <init>()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r10.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r4 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void update(java.util.Set,java.util.Map,boolean)>(r10, $r4, 0);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onVpnUidRangesAdded(java.lang.String, java.util.Set, int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        java.util.Set r1, $r3, $r8, r11;
        int i0;
        java.util.Map r2, $r4, $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.Throwable $r9;
        java.lang.String r10;
        java.util.HashSet r12;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Set;

        i0 := @parameter2: int;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mAllApps>;

        r11 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set intersectUids(java.util.Set,java.util.Set)>(r1, $r3);

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void removeBypassingUids(java.util.Set,int)>(r11, i0);

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void updateVpnUids(java.lang.String,java.util.Set,boolean)>(r10, r11, 1);

        $r4 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mVpnUidRanges>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r10);

        if $z0 == 0 goto label3;

        $r6 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mVpnUidRanges>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        $r8 = (java.util.Set) $r7;

        interfaceinvoke $r8.<java.util.Set: boolean addAll(java.util.Collection)>(r1);

     label2:
        goto label4;

     label3:
        r2 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mVpnUidRanges>;

        r12 = new java.util.HashSet;

        specialinvoke r12.<java.util.HashSet: void <init>(java.util.Collection)>(r1);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r12);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onVpnUidRangesRemoved(java.lang.String, java.util.Set, int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0, $i1;
        java.util.Set $r1, r11, r12, r13;
        java.util.Map $r2, $r4;
        java.lang.Object $r3;
        java.lang.String $r8, r10;
        java.lang.Throwable $r9;
        java.lang.StringBuilder r14;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r10 := @parameter0: java.lang.String;

        r11 := @parameter1: java.util.Set;

        i0 := @parameter2: int;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mAllApps>;

        r12 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set intersectUids(java.util.Set,java.util.Set)>(r11, $r1);

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void removeBypassingUids(java.util.Set,int)>(r12, i0);

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void updateVpnUids(java.lang.String,java.util.Set,boolean)>(r10, r12, 0);

        $r2 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mVpnUidRanges>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r10, null);

        r13 = (java.util.Set) $r3;

     label2:
        if r13 != null goto label5;

     label3:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to remove unknown vpn uid Range iface = ");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r8 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>($r8);

     label4:
        exitmonitor r0;

        return;

     label5:
        interfaceinvoke r13.<java.util.Set: boolean removeAll(java.util.Collection)>(r11);

        $i1 = interfaceinvoke r13.<java.util.Set: int size()>();

        if $i1 != 0 goto label6;

        $r4 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mVpnUidRanges>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r10);

     label6:
        exitmonitor r0;

        return;

     label7:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    void sendPackagePermissionsForUid(int, int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0, i1;
        android.util.SparseIntArray $r2;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(i0, i1);

        virtualinvoke r0.<com.android.server.connectivity.PermissionMonitor: void sendPackagePermissionsToNetd(android.util.SparseIntArray)>($r2);

        return;
    }

    void sendPackagePermissionsToNetd(android.util.SparseIntArray)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, i16;
        android.net.INetd $r6, $r12, $r14, $r16, $r18, $r20;
        java.util.ArrayList $r7, $r8, $r9, $r10, $r11;
        int[] $r13, $r15, $r17, $r19, $r21;
        java.lang.Integer $r22, $r29, $r30, $r31, $r32;
        java.lang.StringBuilder $r23, $r34;
        java.lang.String $r28, $r37;
        android.os.RemoteException $r33;
        android.util.SparseIntArray r38;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r38 := @parameter0: android.util.SparseIntArray;

        $r6 = r0.<com.android.server.connectivity.PermissionMonitor: android.net.INetd mNetd>;

        if $r6 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PermissionMonitor", "Failed to get the netd service");

        return;

     label01:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        i16 = 0;

     label02:
        $i1 = virtualinvoke r38.<android.util.SparseIntArray: int size()>();

        if i16 >= $i1 goto label10;

        i0 = virtualinvoke r38.<android.util.SparseIntArray: int valueAt(int)>(i16);

        if i0 == -1 goto label07;

        if i0 == 0 goto label06;

        if i0 == 4 goto label05;

        if i0 == 8 goto label04;

        if i0 == 12 goto label03;

        goto label08;

     label03:
        $i13 = virtualinvoke r38.<android.util.SparseIntArray: int keyAt(int)>(i16);

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r32);

        goto label09;

     label04:
        $i12 = virtualinvoke r38.<android.util.SparseIntArray: int keyAt(int)>(i16);

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r31);

        goto label09;

     label05:
        $i11 = virtualinvoke r38.<android.util.SparseIntArray: int keyAt(int)>(i16);

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r30);

        goto label09;

     label06:
        $i10 = virtualinvoke r38.<android.util.SparseIntArray: int keyAt(int)>(i16);

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);

        goto label09;

     label07:
        $i7 = virtualinvoke r38.<android.util.SparseIntArray: int keyAt(int)>(i16);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label08:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown permission type: ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("for uid: ");

        $i8 = virtualinvoke r38.<android.util.SparseIntArray: int keyAt(int)>(i16);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PermissionMonitor", $r28);

     label09:
        i16 = i16 + 1;

        goto label02;

     label10:
        $i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i2 == 0 goto label11;

        $r20 = r0.<com.android.server.connectivity.PermissionMonitor: android.net.INetd mNetd>;

        $r21 = staticinvoke <com.android.internal.util.ArrayUtils: int[] convertToIntArray(java.util.List)>($r7);

        interfaceinvoke $r20.<android.net.INetd: void trafficSetNetPermForUids(int,int[])>(12, $r21);

     label11:
        $i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i3 == 0 goto label12;

        $r18 = r0.<com.android.server.connectivity.PermissionMonitor: android.net.INetd mNetd>;

        $r19 = staticinvoke <com.android.internal.util.ArrayUtils: int[] convertToIntArray(java.util.List)>($r8);

        interfaceinvoke $r18.<android.net.INetd: void trafficSetNetPermForUids(int,int[])>(4, $r19);

     label12:
        $i4 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i4 == 0 goto label13;

        $r16 = r0.<com.android.server.connectivity.PermissionMonitor: android.net.INetd mNetd>;

        $r17 = staticinvoke <com.android.internal.util.ArrayUtils: int[] convertToIntArray(java.util.List)>($r9);

        interfaceinvoke $r16.<android.net.INetd: void trafficSetNetPermForUids(int,int[])>(8, $r17);

     label13:
        $i5 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i5 == 0 goto label14;

        $r14 = r0.<com.android.server.connectivity.PermissionMonitor: android.net.INetd mNetd>;

        $r15 = staticinvoke <com.android.internal.util.ArrayUtils: int[] convertToIntArray(java.util.List)>($r10);

        interfaceinvoke $r14.<android.net.INetd: void trafficSetNetPermForUids(int,int[])>(0, $r15);

     label14:
        $i6 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i6 == 0 goto label15;

        $r12 = r0.<com.android.server.connectivity.PermissionMonitor: android.net.INetd mNetd>;

        $r13 = staticinvoke <com.android.internal.util.ArrayUtils: int[] convertToIntArray(java.util.List)>($r11);

        interfaceinvoke $r12.<android.net.INetd: void trafficSetNetPermForUids(int,int[])>(-1, $r13);

     label15:
        goto label17;

     label16:
        $r33 := @caughtexception;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pass appId list of special permission failed.");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PermissionMonitor", $r37);

     label17:
        return;

        catch android.os.RemoteException from label10 to label11 with label16;
        catch android.os.RemoteException from label11 to label12 with label16;
        catch android.os.RemoteException from label12 to label13 with label16;
        catch android.os.RemoteException from label13 to label14 with label16;
        catch android.os.RemoteException from label14 to label15 with label16;
    }

    public void startMonitoring()
    {
        com.android.server.connectivity.PermissionMonitor r0;
        android.content.pm.PackageInfo r1;
        boolean z0, $z1, $z2, $z5, z6, z7;
        int i0, $i1, $i2, $i4, $i5, i6, i7, $i8, $i9, i10, $i11, $i15, $i16;
        java.lang.Object $r2, $r15, $r16, $r19, $r25;
        android.content.pm.PackageManager $r3;
        android.os.UserManager $r4;
        com.android.server.SystemConfig $r5;
        java.util.Set $r7, $r14, $r17, $r21;
        java.util.Map $r10, $r13, $r23, $r26;
        java.lang.String $r12;
        byte $b3, b12, b13, b14;
        java.lang.Integer $r18, $r22, $r24, $r27;
        android.content.pm.ApplicationInfo $r20, $r31;
        java.lang.Boolean $r28, $r30, r39;
        java.lang.Throwable $r33;
        android.content.pm.PackageManagerInternal r34;
        com.android.server.connectivity.PermissionMonitor$PackageListObserver r35;
        java.util.List r36, r42;
        android.util.SparseIntArray r37;
        java.util.Iterator r38, r43;
        java.lang.String[] $r40;
        int[] $r41;
        android.content.pm.UserInfo r44;
        android.util.SparseArray r45;
        android.util.ArraySet r46;
        java.lang.StringBuilder r47;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.connectivity.PermissionMonitor: void log(java.lang.String)>("Monitoring");

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        r34 = (android.content.pm.PackageManagerInternal) $r2;

     label02:
        if r34 == null goto label05;

     label03:
        r35 = new com.android.server.connectivity.PermissionMonitor$PackageListObserver;

        specialinvoke r35.<com.android.server.connectivity.PermissionMonitor$PackageListObserver: void <init>(com.android.server.connectivity.PermissionMonitor,com.android.server.connectivity.PermissionMonitor$1)>(r0, null);

        virtualinvoke r34.<android.content.pm.PackageManagerInternal: com.android.server.pm.PackageList getPackageList(android.content.pm.PackageManagerInternal$PackageListObserver)>(r35);

     label04:
        goto label06;

     label05:
        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>("failed to get the PackageManagerInternal service");

     label06:
        $r3 = r0.<com.android.server.connectivity.PermissionMonitor: android.content.pm.PackageManager mPackageManager>;

        r36 = virtualinvoke $r3.<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>(4198400);

     label07:
        if r36 != null goto label10;

     label08:
        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>("No apps");

     label09:
        exitmonitor r0;

        return;

     label10:
        r37 = new android.util.SparseIntArray;

        specialinvoke r37.<android.util.SparseIntArray: void <init>()>();

        r38 = interfaceinvoke r36.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z5 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label23;

        $r19 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.content.pm.PackageInfo) $r19;

        $r20 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r20 == null goto label13;

        $r31 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i6 = $r31.<android.content.pm.ApplicationInfo: int uid>;

     label12:
        goto label14;

     label13:
        i6 = -1;

     label14:
        if i6 >= 0 goto label15;

        goto label11;

     label15:
        $r21 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mAllApps>;

        $i5 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i6);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>($r22);

        z0 = virtualinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasNetworkPermission(android.content.pm.PackageInfo)>(r1);

        z6 = virtualinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasRestrictedNetworkPermission(android.content.pm.PackageInfo)>(r1);

     label16:
        if z0 != 0 goto label17;

        if z6 == 0 goto label21;

     label17:
        $r23 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r25 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24);

        r39 = (java.lang.Boolean) $r25;

     label18:
        if r39 == null goto label20;

     label19:
        $r30 = <com.android.server.connectivity.PermissionMonitor: java.lang.Boolean NETWORK>;

        if r39 != $r30 goto label21;

     label20:
        $r26 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z6);

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r28);

     label21:
        $r40 = r1.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $r41 = r1.<android.content.pm.PackageInfo: int[] requestedPermissionsFlags>;

        i7 = staticinvoke <com.android.server.connectivity.PermissionMonitor: int getNetdPermissionMask(java.lang.String[],int[])>($r40, $r41);

        $i8 = virtualinvoke r37.<android.util.SparseIntArray: int get(int)>(i6);

        $i9 = $i8 | i7;

        virtualinvoke r37.<android.util.SparseIntArray: void put(int,int)>(i6, $i9);

     label22:
        goto label11;

     label23:
        $r4 = r0.<com.android.server.connectivity.PermissionMonitor: android.os.UserManager mUserManager>;

        r42 = virtualinvoke $r4.<android.os.UserManager: java.util.List getUsers(boolean)>(1);

     label24:
        if r42 == null goto label28;

     label25:
        r43 = interfaceinvoke r42.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z2 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label28;

        $r16 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r44 = (android.content.pm.UserInfo) $r16;

        $r17 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        $i4 = r44.<android.content.pm.UserInfo: int id>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>($r18);

     label27:
        goto label26;

     label28:
        $r5 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        r45 = virtualinvoke $r5.<com.android.server.SystemConfig: android.util.SparseArray getSystemPermissions()>();

     label29:
        i10 = 0;

     label30:
        $i11 = virtualinvoke r45.<android.util.SparseArray: int size()>();

        if i10 >= $i11 goto label40;

        $r15 = virtualinvoke r45.<android.util.SparseArray: java.lang.Object valueAt(int)>(i10);

        r46 = (android.util.ArraySet) $r15;

        i0 = virtualinvoke r45.<android.util.SparseArray: int keyAt(int)>(i10);

     label31:
        b12 = 0;

        if r46 == null goto label38;

     label32:
        z7 = virtualinvoke r46.<android.util.ArraySet: boolean contains(java.lang.Object)>("android.permission.UPDATE_DEVICE_STATS");

     label33:
        b13 = 0;

        if z7 == 0 goto label34;

        b14 = 8;

        goto label35;

     label34:
        b14 = 0;

     label35:
        $z1 = virtualinvoke r46.<android.util.ArraySet: boolean contains(java.lang.Object)>("android.permission.INTERNET");

        if $z1 == 0 goto label37;

     label36:
        b13 = 4;

        goto label37;

     label37:
        $b3 = 0 | b14;

        b12 = $b3 | b13;

     label38:
        $i15 = virtualinvoke r37.<android.util.SparseIntArray: int get(int)>(i0);

        $i16 = $i15 | b12;

        virtualinvoke r37.<android.util.SparseIntArray: void put(int,int)>(i0, $i16);

     label39:
        i10 = i10 + 1;

        goto label30;

     label40:
        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Users: ");

        $r7 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        $i1 = interfaceinvoke $r7.<java.util.Set: int size()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Apps: ");

        $r10 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $i2 = interfaceinvoke $r10.<java.util.Map: int size()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void log(java.lang.String)>($r12);

        $r14 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        $r13 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void update(java.util.Set,java.util.Map,boolean)>($r14, $r13, 1);

        virtualinvoke r0.<com.android.server.connectivity.PermissionMonitor: void sendPackagePermissionsToNetd(android.util.SparseIntArray)>(r37);

     label41:
        exitmonitor r0;

        return;

     label42:
        $r33 := @caughtexception;

        exitmonitor r0;

        throw $r33;

        catch java.lang.Throwable from label01 to label02 with label42;
        catch java.lang.Throwable from label03 to label04 with label42;
        catch java.lang.Throwable from label05 to label06 with label42;
        catch java.lang.Throwable from label06 to label07 with label42;
        catch java.lang.Throwable from label08 to label09 with label42;
        catch java.lang.Throwable from label10 to label11 with label42;
        catch java.lang.Throwable from label11 to label12 with label42;
        catch java.lang.Throwable from label15 to label16 with label42;
        catch java.lang.Throwable from label17 to label18 with label42;
        catch java.lang.Throwable from label19 to label20 with label42;
        catch java.lang.Throwable from label20 to label21 with label42;
        catch java.lang.Throwable from label21 to label22 with label42;
        catch java.lang.Throwable from label23 to label24 with label42;
        catch java.lang.Throwable from label25 to label26 with label42;
        catch java.lang.Throwable from label26 to label27 with label42;
        catch java.lang.Throwable from label28 to label29 with label42;
        catch java.lang.Throwable from label30 to label31 with label42;
        catch java.lang.Throwable from label32 to label33 with label42;
        catch java.lang.Throwable from label35 to label36 with label42;
        catch java.lang.Throwable from label38 to label39 with label42;
        catch java.lang.Throwable from label40 to label41 with label42;
    }
}
