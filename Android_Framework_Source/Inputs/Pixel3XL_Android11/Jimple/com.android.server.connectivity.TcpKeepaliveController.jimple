public class com.android.server.connectivity.TcpKeepaliveController extends java.lang.Object
{
    private static final boolean DBG;
    private static final int FD_EVENTS;
    private static final int SIOCINQ;
    private static final int SIOCOUTQ;
    private static final java.lang.String TAG;
    private static final int TCP_NO_QUEUE;
    private static final int TCP_QUEUE_SEQ;
    private static final int TCP_RECV_QUEUE;
    private static final int TCP_REPAIR;
    private static final int TCP_REPAIR_OFF;
    private static final int TCP_REPAIR_ON;
    private static final int TCP_REPAIR_QUEUE;
    private static final int TCP_SEND_QUEUE;
    private final android.os.MessageQueue mFdHandlerQueue;
    private final android.util.SparseArray mListeners;

    static void <clinit>()
    {
        int $i0, $i1;

        <com.android.server.connectivity.TcpKeepaliveController: int TCP_SEND_QUEUE> = 2;

        <com.android.server.connectivity.TcpKeepaliveController: int TCP_REPAIR_QUEUE> = 20;

        <com.android.server.connectivity.TcpKeepaliveController: int TCP_REPAIR_ON> = 1;

        <com.android.server.connectivity.TcpKeepaliveController: int TCP_REPAIR_OFF> = 0;

        <com.android.server.connectivity.TcpKeepaliveController: int TCP_REPAIR> = 19;

        <com.android.server.connectivity.TcpKeepaliveController: int TCP_RECV_QUEUE> = 1;

        <com.android.server.connectivity.TcpKeepaliveController: int TCP_QUEUE_SEQ> = 21;

        <com.android.server.connectivity.TcpKeepaliveController: int TCP_NO_QUEUE> = 0;

        <com.android.server.connectivity.TcpKeepaliveController: java.lang.String TAG> = "TcpKeepaliveController";

        <com.android.server.connectivity.TcpKeepaliveController: int FD_EVENTS> = 5;

        <com.android.server.connectivity.TcpKeepaliveController: boolean DBG> = 0;

        $i0 = <android.system.OsConstants: int FIONREAD>;

        <com.android.server.connectivity.TcpKeepaliveController: int SIOCINQ> = $i0;

        $i1 = <android.system.OsConstants: int TIOCOUTQ>;

        <com.android.server.connectivity.TcpKeepaliveController: int SIOCOUTQ> = $i1;

        return;
    }

    public void <init>(android.os.Handler)
    {
        com.android.server.connectivity.TcpKeepaliveController r0;
        android.os.Handler r1;
        android.util.SparseArray $r2;
        android.os.Looper $r3;
        android.os.MessageQueue $r4;

        r0 := @this: com.android.server.connectivity.TcpKeepaliveController;

        r1 := @parameter0: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.connectivity.TcpKeepaliveController: android.util.SparseArray mListeners> = $r2;

        $r3 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        $r4 = virtualinvoke $r3.<android.os.Looper: android.os.MessageQueue getQueue()>();

        r0.<com.android.server.connectivity.TcpKeepaliveController: android.os.MessageQueue mFdHandlerQueue> = $r4;

        return;
    }

    private static void dropAllIncomingPackets(java.io.FileDescriptor, boolean) throws android.net.SocketKeepalive$InvalidSocketException
    {
        boolean z0;
        java.lang.Throwable $r0;
        android.net.SocketKeepalive$InvalidSocketException $r1;
        java.io.FileDescriptor r2;

        r2 := @parameter0: java.io.FileDescriptor;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label3;

     label1:
        staticinvoke <android.net.NetworkUtils: void attachDropAllBPFFilter(java.io.FileDescriptor)>(r2);

     label2:
        goto label4;

     label3:
        staticinvoke <android.net.NetworkUtils: void detachBPFFilter(java.io.FileDescriptor)>(r2);

     label4:
        return;

     label5:
        $r0 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TcpKeepaliveController", "Socket Exception: ", $r0);

        $r1 = new android.net.SocketKeepalive$InvalidSocketException;

        specialinvoke $r1.<android.net.SocketKeepalive$InvalidSocketException: void <init>(int,java.lang.Throwable)>(-25, $r0);

        throw $r1;

        catch java.net.SocketException from label1 to label2 with label5;
        catch java.net.SocketException from label3 to label4 with label5;
    }

    private static byte[] getAddress(java.net.InetSocketAddress)
    {
        java.net.InetSocketAddress r0;
        java.net.InetAddress $r1;
        byte[] $r2;

        r0 := @parameter0: java.net.InetSocketAddress;

        $r1 = virtualinvoke r0.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $r2 = virtualinvoke $r1.<java.net.InetAddress: byte[] getAddress()>();

        return $r2;
    }

    private static int getPort(java.net.InetSocketAddress)
    {
        java.net.InetSocketAddress r0;
        int $i0;

        r0 := @parameter0: java.net.InetSocketAddress;

        $i0 = virtualinvoke r0.<java.net.InetSocketAddress: int getPort()>();

        return $i0;
    }

    public static android.net.TcpKeepalivePacketData getTcpKeepalivePacket(java.io.FileDescriptor) throws android.net.InvalidPacketException, android.net.SocketKeepalive$InvalidSocketException
    {
        java.io.FileDescriptor r0;
        android.net.TcpKeepalivePacketDataParcelable $r1;
        java.lang.Exception $r2;
        android.net.TcpKeepalivePacketData r3;

        r0 := @parameter0: java.io.FileDescriptor;

     label1:
        $r1 = staticinvoke <com.android.server.connectivity.TcpKeepaliveController: android.net.TcpKeepalivePacketDataParcelable switchToRepairMode(java.io.FileDescriptor)>(r0);

        r3 = staticinvoke <android.net.TcpKeepalivePacketData: android.net.TcpKeepalivePacketData tcpKeepalivePacket(android.net.TcpKeepalivePacketDataParcelable)>($r1);

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

        staticinvoke <com.android.server.connectivity.TcpKeepaliveController: void switchOutOfRepairMode(java.io.FileDescriptor)>(r0);

        throw $r2;

        catch android.net.InvalidPacketException from label1 to label2 with label3;
        catch android.net.SocketKeepalive$InvalidSocketException from label1 to label2 with label3;
    }

    private static boolean isReceiveQueueEmpty(java.io.FileDescriptor) throws android.system.ErrnoException
    {
        java.io.FileDescriptor r0;
        android.system.Int32Ref $r2;
        int $i0, $i2;

        r0 := @parameter0: java.io.FileDescriptor;

        $r2 = new android.system.Int32Ref;

        specialinvoke $r2.<android.system.Int32Ref: void <init>(int)>(-1);

        $i0 = <com.android.server.connectivity.TcpKeepaliveController: int SIOCINQ>;

        staticinvoke <android.system.Os: int ioctlInt(java.io.FileDescriptor,int,android.system.Int32Ref)>(r0, $i0, $r2);

        $i2 = $r2.<android.system.Int32Ref: int value>;

        if $i2 == 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TcpKeepaliveController", "Read queue has data");

        return 0;

     label1:
        return 1;
    }

    private static boolean isSendQueueEmpty(java.io.FileDescriptor) throws android.system.ErrnoException
    {
        java.io.FileDescriptor r0;
        android.system.Int32Ref $r2;
        int $i0, $i2;

        r0 := @parameter0: java.io.FileDescriptor;

        $r2 = new android.system.Int32Ref;

        specialinvoke $r2.<android.system.Int32Ref: void <init>(int)>(-1);

        $i0 = <com.android.server.connectivity.TcpKeepaliveController: int SIOCOUTQ>;

        staticinvoke <android.system.Os: int ioctlInt(java.io.FileDescriptor,int,android.system.Int32Ref)>(r0, $i0, $r2);

        $i2 = $r2.<android.system.Int32Ref: int value>;

        if $i2 == 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TcpKeepaliveController", "Write queue has data");

        return 0;

     label1:
        return 1;
    }

    private static boolean isSocketIdle(java.io.FileDescriptor) throws android.system.ErrnoException
    {
        java.io.FileDescriptor r0;
        boolean $z0, $z1, z2;

        r0 := @parameter0: java.io.FileDescriptor;

        $z0 = staticinvoke <com.android.server.connectivity.TcpKeepaliveController: boolean isReceiveQueueEmpty(java.io.FileDescriptor)>(r0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.android.server.connectivity.TcpKeepaliveController: boolean isSendQueueEmpty(java.io.FileDescriptor)>(r0);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    static int lambda$startSocketMonitor$0(com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo, java.io.FileDescriptor, int)
    {
        com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo r0;
        java.io.FileDescriptor r1;
        int $i0, i1;
        byte b2;

        r0 := @parameter0: com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo;

        r1 := @parameter1: java.io.FileDescriptor;

        i1 := @parameter2: int;

        $i0 = i1 & 4;

        if $i0 == 0 goto label1;

        b2 = -25;

        goto label2;

     label1:
        b2 = -2;

     label2:
        virtualinvoke r0.<com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo: void onFileDescriptorInitiatedStop(int)>(b2);

        return 0;
    }

    private static void switchOutOfRepairMode(java.io.FileDescriptor)
    {
        int $i0;
        java.lang.Throwable $r0;
        java.io.FileDescriptor r1;

        r1 := @parameter0: java.io.FileDescriptor;

     label1:
        $i0 = <android.system.OsConstants: int IPPROTO_TCP>;

        staticinvoke <android.system.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r1, $i0, 19, 0);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TcpKeepaliveController", "Cannot switch socket out of repair mode", $r0);

     label4:
        return;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    private static android.net.TcpKeepalivePacketDataParcelable switchToRepairMode(java.io.FileDescriptor) throws android.net.SocketKeepalive$InvalidSocketException
    {
        boolean z0, $z1, $z2, $z3, $z4;
        java.net.InetSocketAddress $r2, $r4, $r6, $r8;
        byte[] $r3, $r7, $r9;
        int $i1, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i29, $i30;
        java.lang.Throwable $r10, $r12, $r13, $r15;
        java.io.FileDescriptor r16;
        java.net.SocketAddress r18, r19;
        android.net.TcpRepairWindow r20;
        android.net.TcpKeepalivePacketDataParcelable r30;
        android.net.SocketKeepalive$InvalidSocketException r31, r32, r33, r34, r35, r36, r37, r38, r39;
        android.system.ErrnoException r40;

        r16 := @parameter0: java.io.FileDescriptor;

        r30 = new android.net.TcpKeepalivePacketDataParcelable;

        specialinvoke r30.<android.net.TcpKeepalivePacketDataParcelable: void <init>()>();

     label01:
        r18 = staticinvoke <android.system.Os: java.net.SocketAddress getsockname(java.io.FileDescriptor)>(r16);

     label02:
        $z1 = r18 instanceof java.net.InetSocketAddress;

        if $z1 == 0 goto label19;

        $r2 = (java.net.InetSocketAddress) r18;

        $r3 = staticinvoke <com.android.server.connectivity.TcpKeepaliveController: byte[] getAddress(java.net.InetSocketAddress)>($r2);

        r30.<android.net.TcpKeepalivePacketDataParcelable: byte[] srcAddress> = $r3;

        $r4 = (java.net.InetSocketAddress) r18;

        $i1 = staticinvoke <com.android.server.connectivity.TcpKeepaliveController: int getPort(java.net.InetSocketAddress)>($r4);

        r30.<android.net.TcpKeepalivePacketDataParcelable: int srcPort> = $i1;

     label03:
        r19 = staticinvoke <android.system.Os: java.net.SocketAddress getpeername(java.io.FileDescriptor)>(r16);

     label04:
        $z2 = r19 instanceof java.net.InetSocketAddress;

        if $z2 == 0 goto label17;

        $r6 = (java.net.InetSocketAddress) r19;

        $r7 = staticinvoke <com.android.server.connectivity.TcpKeepaliveController: byte[] getAddress(java.net.InetSocketAddress)>($r6);

        r30.<android.net.TcpKeepalivePacketDataParcelable: byte[] dstAddress> = $r7;

        $r8 = (java.net.InetSocketAddress) r19;

        $i3 = staticinvoke <com.android.server.connectivity.TcpKeepaliveController: int getPort(java.net.InetSocketAddress)>($r8);

        r30.<android.net.TcpKeepalivePacketDataParcelable: int dstPort> = $i3;

        staticinvoke <com.android.server.connectivity.TcpKeepaliveController: void dropAllIncomingPackets(java.io.FileDescriptor,boolean)>(r16, 1);

     label05:
        $i4 = <android.system.OsConstants: int IPPROTO_TCP>;

        staticinvoke <android.system.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r16, $i4, 19, 1);

        z0 = staticinvoke <com.android.server.connectivity.TcpKeepaliveController: boolean isSocketIdle(java.io.FileDescriptor)>(r16);

     label06:
        if z0 == 0 goto label11;

     label07:
        $i6 = <android.system.OsConstants: int IPPROTO_TCP>;

        staticinvoke <android.system.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r16, $i6, 20, 2);

        $i7 = <android.system.OsConstants: int IPPROTO_TCP>;

        $i8 = staticinvoke <android.system.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r16, $i7, 21);

        r30.<android.net.TcpKeepalivePacketDataParcelable: int seq> = $i8;

        $i9 = <android.system.OsConstants: int IPPROTO_TCP>;

        staticinvoke <android.system.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r16, $i9, 20, 1);

        $i10 = <android.system.OsConstants: int IPPROTO_TCP>;

        $i11 = staticinvoke <android.system.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r16, $i10, 21);

        r30.<android.net.TcpKeepalivePacketDataParcelable: int ack> = $i11;

        $i12 = <android.system.OsConstants: int IPPROTO_TCP>;

        staticinvoke <android.system.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r16, $i12, 20, 0);

        $z3 = staticinvoke <com.android.server.connectivity.TcpKeepaliveController: boolean isReceiveQueueEmpty(java.io.FileDescriptor)>(r16);

        if $z3 == 0 goto label10;

        $z4 = staticinvoke <com.android.server.connectivity.TcpKeepaliveController: boolean isSendQueueEmpty(java.io.FileDescriptor)>(r16);

        if $z4 == 0 goto label09;

        r20 = staticinvoke <android.net.NetworkUtils: android.net.TcpRepairWindow getTcpRepairWindow(java.io.FileDescriptor)>(r16);

        $i15 = r20.<android.net.TcpRepairWindow: int rcvWnd>;

        r30.<android.net.TcpKeepalivePacketDataParcelable: int rcvWnd> = $i15;

        $i16 = r20.<android.net.TcpRepairWindow: int rcvWndScale>;

        r30.<android.net.TcpKeepalivePacketDataParcelable: int rcvWndScale> = $i16;

        $r9 = r30.<android.net.TcpKeepalivePacketDataParcelable: byte[] srcAddress>;

        $i17 = lengthof $r9;

        if $i17 != 4 goto label08;

        $i21 = <android.system.OsConstants: int IPPROTO_IP>;

        $i20 = <android.system.OsConstants: int IP_TOS>;

        $i22 = staticinvoke <android.system.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r16, $i21, $i20);

        r30.<android.net.TcpKeepalivePacketDataParcelable: int tos> = $i22;

        $i24 = <android.system.OsConstants: int IPPROTO_IP>;

        $i23 = <android.system.OsConstants: int IP_TTL>;

        $i25 = staticinvoke <android.system.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r16, $i24, $i23);

        r30.<android.net.TcpKeepalivePacketDataParcelable: int ttl> = $i25;

     label08:
        staticinvoke <com.android.server.connectivity.TcpKeepaliveController: void dropAllIncomingPackets(java.io.FileDescriptor,boolean)>(r16, 0);

        $i18 = r30.<android.net.TcpKeepalivePacketDataParcelable: int seq>;

        $i19 = $i18 - 1;

        r30.<android.net.TcpKeepalivePacketDataParcelable: int seq> = $i19;

        return r30;

     label09:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TcpKeepaliveController", "Socket is not idle");

        r31 = new android.net.SocketKeepalive$InvalidSocketException;

        specialinvoke r31.<android.net.SocketKeepalive$InvalidSocketException: void <init>(int)>(-26);

        throw r31;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TcpKeepaliveController", "Fatal: receive queue of this socket is not empty");

        r32 = new android.net.SocketKeepalive$InvalidSocketException;

        specialinvoke r32.<android.net.SocketKeepalive$InvalidSocketException: void <init>(int)>(-25);

        throw r32;

     label11:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TcpKeepaliveController", "Socket is not idle");

        r33 = new android.net.SocketKeepalive$InvalidSocketException;

        specialinvoke r33.<android.net.SocketKeepalive$InvalidSocketException: void <init>(int)>(-26);

        throw r33;

     label12:
        $r12 := @caughtexception;

        goto label16;

     label13:
        $r15 := @caughtexception;

     label14:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TcpKeepaliveController", "Exception reading TCP state from socket", $r15);

        r40 = (android.system.ErrnoException) $r15;

        $i30 = r40.<android.system.ErrnoException: int errno>;

        $i29 = <android.system.OsConstants: int ENOPROTOOPT>;

        if $i30 != $i29 goto label15;

        r34 = new android.net.SocketKeepalive$InvalidSocketException;

        specialinvoke r34.<android.net.SocketKeepalive$InvalidSocketException: void <init>(int,java.lang.Throwable)>(-30, $r15);

        throw r34;

     label15:
        r35 = new android.net.SocketKeepalive$InvalidSocketException;

        specialinvoke r35.<android.net.SocketKeepalive$InvalidSocketException: void <init>(int,java.lang.Throwable)>(-25, $r15);

        throw r35;

     label16:
        staticinvoke <com.android.server.connectivity.TcpKeepaliveController: void dropAllIncomingPackets(java.io.FileDescriptor,boolean)>(r16, 0);

        throw $r12;

     label17:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TcpKeepaliveController", "Invalid or mismatched peer SocketAddress");

        r36 = new android.net.SocketKeepalive$InvalidSocketException;

        specialinvoke r36.<android.net.SocketKeepalive$InvalidSocketException: void <init>(int)>(-25);

        throw r36;

     label18:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TcpKeepaliveController", "Get peername fail: ", $r13);

        r37 = new android.net.SocketKeepalive$InvalidSocketException;

        specialinvoke r37.<android.net.SocketKeepalive$InvalidSocketException: void <init>(int,java.lang.Throwable)>(-25, $r13);

        throw r37;

     label19:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TcpKeepaliveController", "Invalid or mismatched SocketAddress");

        r38 = new android.net.SocketKeepalive$InvalidSocketException;

        specialinvoke r38.<android.net.SocketKeepalive$InvalidSocketException: void <init>(int)>(-25);

        throw r38;

     label20:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TcpKeepaliveController", "Get sockname fail: ", $r10);

        r39 = new android.net.SocketKeepalive$InvalidSocketException;

        specialinvoke r39.<android.net.SocketKeepalive$InvalidSocketException: void <init>(int,java.lang.Throwable)>(-25, $r10);

        throw r39;

        catch android.system.ErrnoException from label01 to label02 with label20;
        catch android.system.ErrnoException from label03 to label04 with label18;
        catch android.system.ErrnoException from label05 to label06 with label13;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch android.system.ErrnoException from label07 to label08 with label13;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch android.system.ErrnoException from label09 to label10 with label13;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch android.system.ErrnoException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch android.system.ErrnoException from label11 to label12 with label13;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label14 to label15 with label12;
        catch java.lang.Throwable from label15 to label16 with label12;
    }

    public void startSocketMonitor(java.io.FileDescriptor, com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo, int) throws java.lang.IllegalArgumentException, android.net.SocketKeepalive$InvalidSocketException
    {
        com.android.server.connectivity.TcpKeepaliveController r0;
        com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo r1;
        int i0, $i1, i3;
        android.util.SparseArray r2, $r5, $r7, $r8, $r9;
        android.os.MessageQueue r3;
        com.android.server.connectivity._$$Lambda$TcpKeepaliveController$mLZJWrEAOnfgV5N3ZSa2J3iTmxE r4;
        java.lang.Object $r6, $r10;
        boolean $z0;
        java.lang.Throwable $r11;
        java.io.FileDescriptor r12;
        android.net.SocketKeepalive$InvalidSocketException r13;
        java.lang.IllegalArgumentException r14;

        r0 := @this: com.android.server.connectivity.TcpKeepaliveController;

        r12 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo;

        i0 := @parameter2: int;

        r2 = r0.<com.android.server.connectivity.TcpKeepaliveController: android.util.SparseArray mListeners>;

        entermonitor r2;

     label01:
        $r5 = r0.<com.android.server.connectivity.TcpKeepaliveController: android.util.SparseArray mListeners>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r6 != null goto label08;

     label02:
        i3 = 0;

     label03:
        $r7 = r0.<com.android.server.connectivity.TcpKeepaliveController: android.util.SparseArray mListeners>;

        $i1 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if i3 >= $i1 goto label06;

        $r9 = r0.<com.android.server.connectivity.TcpKeepaliveController: android.util.SparseArray mListeners>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $z0 = virtualinvoke r12.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label05;

     label04:
        i3 = i3 + 1;

        goto label03;

     label05:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TcpKeepaliveController", "This fd is already registered.");

        r13 = new android.net.SocketKeepalive$InvalidSocketException;

        specialinvoke r13.<android.net.SocketKeepalive$InvalidSocketException: void <init>(int)>(-25);

        throw r13;

     label06:
        r3 = r0.<com.android.server.connectivity.TcpKeepaliveController: android.os.MessageQueue mFdHandlerQueue>;

        r4 = new com.android.server.connectivity._$$Lambda$TcpKeepaliveController$mLZJWrEAOnfgV5N3ZSa2J3iTmxE;

        specialinvoke r4.<com.android.server.connectivity._$$Lambda$TcpKeepaliveController$mLZJWrEAOnfgV5N3ZSa2J3iTmxE: void <init>(com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo)>(r1);

        virtualinvoke r3.<android.os.MessageQueue: void addOnFileDescriptorEventListener(java.io.FileDescriptor,int,android.os.MessageQueue$OnFileDescriptorEventListener)>(r12, 5, r4);

        $r8 = r0.<com.android.server.connectivity.TcpKeepaliveController: android.util.SparseArray mListeners>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r12);

        exitmonitor r2;

     label07:
        return;

     label08:
        r14 = new java.lang.IllegalArgumentException;

        specialinvoke r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("This slot is already taken");

        throw r14;

     label09:
        $r11 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void stopSocketMonitor(int)
    {
        com.android.server.connectivity.TcpKeepaliveController r0;
        int i0;
        android.util.SparseArray r1, $r2, $r4;
        java.lang.Object $r3;
        android.os.MessageQueue $r5;
        java.lang.Throwable $r6;
        java.io.FileDescriptor r7;

        r0 := @this: com.android.server.connectivity.TcpKeepaliveController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.connectivity.TcpKeepaliveController: android.util.SparseArray mListeners>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.connectivity.TcpKeepaliveController: android.util.SparseArray mListeners>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r7 = (java.io.FileDescriptor) $r3;

     label2:
        if r7 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r4 = r0.<com.android.server.connectivity.TcpKeepaliveController: android.util.SparseArray mListeners>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label6:
        $r5 = r0.<com.android.server.connectivity.TcpKeepaliveController: android.os.MessageQueue mFdHandlerQueue>;

        virtualinvoke $r5.<android.os.MessageQueue: void removeOnFileDescriptorEventListener(java.io.FileDescriptor)>(r7);

        staticinvoke <com.android.server.connectivity.TcpKeepaliveController: void switchOutOfRepairMode(java.io.FileDescriptor)>(r7);

        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }
}
