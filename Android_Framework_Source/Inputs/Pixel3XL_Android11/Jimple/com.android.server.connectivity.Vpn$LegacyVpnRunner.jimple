class com.android.server.connectivity.Vpn$LegacyVpnRunner extends com.android.server.connectivity.Vpn$VpnRunner
{
    private static final java.lang.String TAG;
    private final java.lang.String[][] mArguments;
    private long mBringupStartTime;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private final java.lang.String[] mDaemons;
    private final java.util.concurrent.atomic.AtomicInteger mOuterConnection;
    private final java.lang.String mOuterInterface;
    private final com.android.internal.net.VpnProfile mProfile;
    private final android.net.LocalSocket[] mSockets;
    final com.android.server.connectivity.Vpn this$0;

    void <init>(com.android.server.connectivity.Vpn, com.android.internal.net.VpnConfig, java.lang.String[], java.lang.String[], com.android.internal.net.VpnProfile)
    {
        com.android.server.connectivity.Vpn$LegacyVpnRunner r0;
        com.android.server.connectivity.Vpn r1;
        int i0, $i1, $i2, i3;
        java.util.concurrent.atomic.AtomicInteger $r2, $r14;
        com.android.server.connectivity.Vpn$LegacyVpnRunner$1 $r3;
        java.lang.String[][] $r4;
        android.net.LocalSocket[] $r5;
        com.android.internal.net.VpnConfig $r6, r15;
        boolean $z0, $z1;
        android.content.IntentFilter $r7;
        android.content.Context $r8, $r11;
        android.content.BroadcastReceiver $r9;
        java.util.List $r12;
        java.lang.String $r13, r20;
        java.lang.String[] r16, r17, r19;
        com.android.internal.net.VpnProfile r18;
        android.net.ConnectivityManager r21;
        android.net.Network[] r22;
        android.net.Network r23;
        android.net.LinkProperties r24;
        android.net.NetworkInfo r25;

        r0 := @this: com.android.server.connectivity.Vpn$LegacyVpnRunner;

        r1 := @parameter0: com.android.server.connectivity.Vpn;

        r15 := @parameter1: com.android.internal.net.VpnConfig;

        r16 := @parameter2: java.lang.String[];

        r17 := @parameter3: java.lang.String[];

        r18 := @parameter4: com.android.internal.net.VpnProfile;

        r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0> = r1;

        specialinvoke r0.<com.android.server.connectivity.Vpn$VpnRunner: void <init>(com.android.server.connectivity.Vpn,java.lang.String)>(r1, "LegacyVpnRunner");

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(-1);

        r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.util.concurrent.atomic.AtomicInteger mOuterConnection> = $r2;

        r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: long mBringupStartTime> = -1L;

        $r3 = new com.android.server.connectivity.Vpn$LegacyVpnRunner$1;

        specialinvoke $r3.<com.android.server.connectivity.Vpn$LegacyVpnRunner$1: void <init>(com.android.server.connectivity.Vpn$LegacyVpnRunner)>(r0);

        r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: android.content.BroadcastReceiver mBroadcastReceiver> = $r3;

        r1.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig> = r15;

        r19 = newarray (java.lang.String)[2];

        r19[0] = "racoon";

        r19[1] = "mtpd";

        r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[] mDaemons> = r19;

        i3 = 0;

        $r4 = newarray (java.lang.String[])[2];

        $r4[0] = r16;

        $r4[1] = r17;

        r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[][] mArguments> = $r4;

        $i1 = lengthof r19;

        $r5 = newarray (android.net.LocalSocket)[$i1];

        r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: android.net.LocalSocket[] mSockets> = $r5;

        $r6 = r1.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        r20 = $r6.<com.android.internal.net.VpnConfig: java.lang.String interfaze>;

        r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String mOuterInterface> = r20;

        r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.internal.net.VpnProfile mProfile> = r18;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r20);

        if $z0 != 0 goto label3;

        $r11 = staticinvoke <com.android.server.connectivity.Vpn: android.content.Context access$500(com.android.server.connectivity.Vpn)>(r1);

        r21 = staticinvoke <android.net.ConnectivityManager: android.net.ConnectivityManager 'from'(android.content.Context)>($r11);

        r22 = virtualinvoke r21.<android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>();

        i0 = lengthof r22;

     label1:
        if i3 >= i0 goto label3;

        r23 = r22[i3];

        r24 = virtualinvoke r21.<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(android.net.Network)>(r23);

        if r24 == null goto label2;

        $r12 = virtualinvoke r24.<android.net.LinkProperties: java.util.List getAllInterfaceNames()>();

        $r13 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String mOuterInterface>;

        $z1 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>($r13);

        if $z1 == 0 goto label2;

        r25 = virtualinvoke r21.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>(r23);

        if r25 == null goto label2;

        $r14 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.util.concurrent.atomic.AtomicInteger mOuterConnection>;

        $i2 = virtualinvoke r25.<android.net.NetworkInfo: int getType()>();

        virtualinvoke $r14.<java.util.concurrent.atomic.AtomicInteger: void set(int)>($i2);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r7 = new android.content.IntentFilter;

        specialinvoke $r7.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r7.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.conn.CONNECTIVITY_CHANGE");

        $r8 = staticinvoke <com.android.server.connectivity.Vpn: android.content.Context access$500(com.android.server.connectivity.Vpn)>(r1);

        $r9 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r8.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r9, $r7);

        return;
    }

    static java.util.concurrent.atomic.AtomicInteger access$1400(com.android.server.connectivity.Vpn$LegacyVpnRunner)
    {
        com.android.server.connectivity.Vpn$LegacyVpnRunner r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @parameter0: com.android.server.connectivity.Vpn$LegacyVpnRunner;

        $r1 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.util.concurrent.atomic.AtomicInteger mOuterConnection>;

        return $r1;
    }

    static java.lang.String access$1500(com.android.server.connectivity.Vpn$LegacyVpnRunner)
    {
        com.android.server.connectivity.Vpn$LegacyVpnRunner r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.connectivity.Vpn$LegacyVpnRunner;

        $r1 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String mOuterInterface>;

        return $r1;
    }

    private void bringup()
    {
        com.android.server.connectivity.Vpn$LegacyVpnRunner r0;
        boolean z0, $z2, $z4, $z5, $z6, $z7, $z8, $z11, $z12, $z13, $z14, z15, $z16;
        long $l0, $l23;
        android.net.NetworkInfo$DetailedState $r1, $r83;
        com.android.server.connectivity.Vpn $r2, $r5, $r9, $r12, $r15, $r20, $r26, $r29, $r31, $r32, $r36, $r38, $r41, $r45, $r48, $r52, $r55, $r78, $r82, $r113, $r117, r133, $r134, $r136, $r137;
        java.lang.String[] $r3, $r43, $r50, $r58, $r59, $r61, $r66, r92, r97, r98, r112;
        int $i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i14, i15, i16, i17, i18, i19, i20, i21, i22, $i24;
        java.lang.String $r4, $r6, $r8, $r10, $r16, $r18, $r19, $r22, $r25, $r28, $r35, $r64, $r77, $r84, $r90, r93, r99, r109, r116, r120, $r121, r122, $r139;
        com.android.internal.net.VpnConfig $r7, $r11, $r13, $r17, $r21, $r27, $r37, $r39, $r42, $r46, $r49, $r53, $r56, $r114, $r118, $r135, $r138;
        java.util.List $r14, $r44, $r47, $r51, $r54, $r57, $r115, $r119, r124, r127;
        com.android.internal.net.VpnProfile $r40;
        java.lang.String[][] $r60, $r65, r96;
        android.net.LocalSocketAddress$Namespace $r67;
        android.net.LocalSocket[] $r68, $r70, $r72, $r74, r100;
        android.net.LocalSocket $r69, $r71, $r73, $r75, r101;
        java.nio.charset.Charset $r76;
        java.lang.Throwable $r79, $r85;
        java.lang.Exception $r80, $r81, $r91;
        java.io.File r94, r95;
        android.net.LocalSocketAddress r102;
        java.io.OutputStream r103;
        byte[] r104;
        java.lang.IllegalArgumentException r105;
        java.io.InputStream r106;
        java.lang.IllegalStateException r110, r140, r143, r144;
        java.lang.StringBuilder r111, r130, r132, r141;
        java.net.InetAddress r123;
        android.net.RouteInfo r125, r128;
        android.net.IpPrefix r126, r129;

        r0 := @this: com.android.server.connectivity.Vpn$LegacyVpnRunner;

     label01:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: long mBringupStartTime> = $l0;

        r92 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[] mDaemons>;

        i14 = lengthof r92;

     label02:
        i15 = 0;

     label03:
        if i15 >= i14 goto label07;

        r93 = r92[i15];

     label04:
        $z14 = staticinvoke <android.os.SystemService: boolean isStopped(java.lang.String)>(r93);

        if $z14 != 0 goto label06;

        specialinvoke r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: void checkInterruptAndDelay(boolean)>(1);

     label05:
        goto label04;

     label06:
        i15 = i15 + 1;

        goto label03;

     label07:
        r94 = new java.io.File;

        specialinvoke r94.<java.io.File: void <init>(java.lang.String)>("/data/misc/vpn/state");

        virtualinvoke r94.<java.io.File: boolean delete()>();

        $z2 = virtualinvoke r94.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label79;

        r95 = new java.io.File;

        specialinvoke r95.<java.io.File: void <init>(java.lang.String)>("/data/misc/vpn/abort");

        virtualinvoke r95.<java.io.File: boolean delete()>();

        r96 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[][] mArguments>;

        i16 = lengthof r96;

     label08:
        z15 = 0;

        i17 = 0;

     label09:
        if i17 >= i16 goto label13;

        r97 = r96[i17];

        if z15 != 0 goto label11;

        if r97 == null goto label10;

        goto label11;

     label10:
        z15 = 0;

        goto label12;

     label11:
        z15 = 1;

     label12:
        i17 = i17 + 1;

        goto label09;

     label13:
        if z15 != 0 goto label16;

     label14:
        $r78 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        staticinvoke <com.android.server.connectivity.Vpn: void access$1700(com.android.server.connectivity.Vpn)>($r78);

     label15:
        return;

     label16:
        $r2 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r1 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTING>;

        virtualinvoke $r2.<com.android.server.connectivity.Vpn: void updateState(android.net.NetworkInfo$DetailedState,java.lang.String)>($r1, "execute");

     label17:
        i18 = 0;

     label18:
        $r3 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[] mDaemons>;

        $i1 = lengthof $r3;

        if i18 >= $i1 goto label44;

        $r65 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[][] mArguments>;

        r98 = $r65[i18];

     label19:
        if r98 != null goto label20;

        goto label36;

     label20:
        $r66 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[] mDaemons>;

        r99 = $r66[i18];

        staticinvoke <android.os.SystemService: void start(java.lang.String)>(r99);

     label21:
        $z13 = staticinvoke <android.os.SystemService: boolean isRunning(java.lang.String)>(r99);

        if $z13 != 0 goto label23;

        specialinvoke r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: void checkInterruptAndDelay(boolean)>(1);

     label22:
        goto label21;

     label23:
        r100 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: android.net.LocalSocket[] mSockets>;

        r101 = new android.net.LocalSocket;

        specialinvoke r101.<android.net.LocalSocket: void <init>()>();

     label24:
        r100[i18] = r101;

     label25:
        r102 = new android.net.LocalSocketAddress;

        $r67 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

        specialinvoke r102.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>(r99, $r67);

     label26:
        $r68 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: android.net.LocalSocket[] mSockets>;

        $r69 = $r68[i18];

        virtualinvoke $r69.<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>(r102);

     label27:
        $r70 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: android.net.LocalSocket[] mSockets>;

        $r71 = $r70[i18];

        virtualinvoke $r71.<android.net.LocalSocket: void setSoTimeout(int)>(500);

        $r72 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: android.net.LocalSocket[] mSockets>;

        $r73 = $r72[i18];

        r103 = virtualinvoke $r73.<android.net.LocalSocket: java.io.OutputStream getOutputStream()>();

        i19 = lengthof r98;

     label28:
        i20 = 0;

     label29:
        if i20 >= i19 goto label33;

     label30:
        $r77 = r98[i20];

        $r76 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        r104 = virtualinvoke $r77.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r76);

        $i8 = lengthof r104;

        if $i8 >= 65535 goto label32;

        $i9 = lengthof r104;

        $i10 = $i9 >> 8;

        virtualinvoke r103.<java.io.OutputStream: void write(int)>($i10);

        $i11 = lengthof r104;

        virtualinvoke r103.<java.io.OutputStream: void write(int)>($i11);

        virtualinvoke r103.<java.io.OutputStream: void write(byte[])>(r104);

        specialinvoke r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: void checkInterruptAndDelay(boolean)>(0);

     label31:
        i20 = i20 + 1;

        goto label29;

     label32:
        r105 = new java.lang.IllegalArgumentException;

        specialinvoke r105.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Argument is too large");

        throw r105;

     label33:
        virtualinvoke r103.<java.io.OutputStream: void write(int)>(255);

        virtualinvoke r103.<java.io.OutputStream: void write(int)>(255);

        $r74 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: android.net.LocalSocket[] mSockets>;

        $r75 = $r74[i18];

        r106 = virtualinvoke $r75.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

     label34:
        i21 = virtualinvoke r106.<java.io.InputStream: int read()>();

     label35:
        if i21 != -1 goto label37;

     label36:
        i18 = i18 + 1;

        goto label18;

     label37:
        goto label39;

     label38:
        $r80 := @caughtexception;

     label39:
        specialinvoke r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: void checkInterruptAndDelay(boolean)>(1);

     label40:
        goto label34;

     label41:
        $r91 := @caughtexception;

     label42:
        specialinvoke r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: void checkInterruptAndDelay(boolean)>(1);

     label43:
        goto label26;

     label44:
        $z4 = virtualinvoke r94.<java.io.File: boolean exists()>();

        if $z4 != 0 goto label52;

     label45:
        i22 = 0;

     label46:
        $r58 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[] mDaemons>;

        $i7 = lengthof $r58;

        if i22 >= $i7 goto label50;

        $r59 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[] mDaemons>;

        r109 = $r59[i22];

        $r60 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[][] mArguments>;

        $r61 = $r60[i22];

        if $r61 == null goto label49;

        $z12 = staticinvoke <android.os.SystemService: boolean isRunning(java.lang.String)>(r109);

        if $z12 == 0 goto label48;

     label47:
        goto label49;

     label48:
        r110 = new java.lang.IllegalStateException;

        r111 = new java.lang.StringBuilder;

        specialinvoke r111.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r109);

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is dead");

        $r64 = virtualinvoke r111.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r110.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r64);

        throw r110;

     label49:
        i22 = i22 + 1;

        goto label46;

     label50:
        specialinvoke r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: void checkInterruptAndDelay(boolean)>(1);

     label51:
        goto label44;

     label52:
        $r4 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>(r94, 0, null);

        r112 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\n", -1);

        $i2 = lengthof r112;

        if $i2 != 7 goto label78;

        $r5 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r7 = $r5.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r6 = r112[0];

        $r8 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $r7.<com.android.internal.net.VpnConfig: java.lang.String interfaze> = $r8;

        $r9 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r11 = $r9.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r10 = r112[1];

        virtualinvoke $r11.<com.android.internal.net.VpnConfig: void addLegacyAddresses(java.lang.String)>($r10);

        $r12 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r13 = $r12.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r14 = $r13.<com.android.internal.net.VpnConfig: java.util.List routes>;

        if $r14 == null goto label53;

        $r55 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r56 = $r55.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r57 = $r56.<com.android.internal.net.VpnConfig: java.util.List routes>;

        $z11 = interfaceinvoke $r57.<java.util.List: boolean isEmpty()>();

        if $z11 == 0 goto label54;

     label53:
        $r15 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r17 = $r15.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r16 = r112[2];

        virtualinvoke $r17.<com.android.internal.net.VpnConfig: void addLegacyRoutes(java.lang.String)>($r16);

     label54:
        $r113 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r114 = $r113.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r115 = $r114.<com.android.internal.net.VpnConfig: java.util.List dnsServers>;

        if $r115 == null goto label55;

        $r52 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r53 = $r52.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r54 = $r53.<com.android.internal.net.VpnConfig: java.util.List dnsServers>;

        $i6 = interfaceinvoke $r54.<java.util.List: int size()>();

        if $i6 != 0 goto label56;

     label55:
        $r18 = r112[3];

        r116 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>();

        $z5 = virtualinvoke r116.<java.lang.String: boolean isEmpty()>();

        if $z5 != 0 goto label56;

        $r48 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r49 = $r48.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r50 = virtualinvoke r116.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r51 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r50);

        $r49.<com.android.internal.net.VpnConfig: java.util.List dnsServers> = $r51;

     label56:
        $r117 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r118 = $r117.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r119 = $r118.<com.android.internal.net.VpnConfig: java.util.List searchDomains>;

        if $r119 == null goto label57;

        $r45 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r46 = $r45.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r47 = $r46.<com.android.internal.net.VpnConfig: java.util.List searchDomains>;

        $i5 = interfaceinvoke $r47.<java.util.List: int size()>();

        if $i5 != 0 goto label58;

     label57:
        $r19 = r112[4];

        r120 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>();

        $z6 = virtualinvoke r120.<java.lang.String: boolean isEmpty()>();

        if $z6 != 0 goto label58;

        $r41 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r42 = $r41.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r43 = virtualinvoke r120.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r44 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r43);

        $r42.<com.android.internal.net.VpnConfig: java.util.List searchDomains> = $r44;

     label58:
        $r121 = r112[5];

        $z16 = virtualinvoke $r121.<java.lang.String: boolean isEmpty()>();

        if $z16 == 0 goto label60;

        $r40 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.internal.net.VpnProfile mProfile>;

        r122 = $r40.<com.android.internal.net.VpnProfile: java.lang.String server>;

     label59:
        goto label61;

     label60:
        r122 = r112[5];

     label61:
        z0 = virtualinvoke r122.<java.lang.String: boolean isEmpty()>();

     label62:
        if z0 != 0 goto label71;

     label63:
        r123 = staticinvoke <java.net.InetAddress: java.net.InetAddress parseNumericAddress(java.lang.String)>(r122);

        $z7 = r123 instanceof java.net.Inet4Address;

        if $z7 == 0 goto label65;

        $r38 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r39 = $r38.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        r124 = $r39.<com.android.internal.net.VpnConfig: java.util.List routes>;

        r125 = new android.net.RouteInfo;

        r126 = new android.net.IpPrefix;

        specialinvoke r126.<android.net.IpPrefix: void <init>(java.net.InetAddress,int)>(r123, 32);

        specialinvoke r125.<android.net.RouteInfo: void <init>(android.net.IpPrefix,int)>(r126, 9);

        interfaceinvoke r124.<java.util.List: boolean add(java.lang.Object)>(r125);

     label64:
        goto label68;

     label65:
        $z8 = r123 instanceof java.net.Inet6Address;

        if $z8 == 0 goto label67;

        $r36 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r37 = $r36.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        r127 = $r37.<com.android.internal.net.VpnConfig: java.util.List routes>;

        r128 = new android.net.RouteInfo;

        r129 = new android.net.IpPrefix;

        specialinvoke r129.<android.net.IpPrefix: void <init>(java.net.InetAddress,int)>(r123, 128);

        specialinvoke r128.<android.net.RouteInfo: void <init>(android.net.IpPrefix,int)>(r129, 9);

        interfaceinvoke r127.<java.util.List: boolean add(java.lang.Object)>(r128);

     label66:
        goto label68;

     label67:
        r130 = new java.lang.StringBuilder;

        specialinvoke r130.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown IP address family for VPN endpoint: ");

        virtualinvoke r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r122);

        $r35 = virtualinvoke r130.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LegacyVpnRunner", $r35);

     label68:
        goto label71;

     label69:
        $r85 := @caughtexception;

     label70:
        r132 = new java.lang.StringBuilder;

        specialinvoke r132.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception constructing throw route to ");

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r122);

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r85);

        $r90 = virtualinvoke r132.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LegacyVpnRunner", $r90);

     label71:
        r133 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        entermonitor r133;

     label72:
        $r134 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r135 = $r134.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $l23 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r135.<com.android.internal.net.VpnConfig: long startTime> = $l23;

        specialinvoke r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: void checkInterruptAndDelay(boolean)>(0);

        $r136 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r137 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r138 = $r137.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r139 = $r138.<com.android.internal.net.VpnConfig: java.lang.String interfaze>;

        $i24 = staticinvoke <com.android.server.connectivity.Vpn: int access$300(com.android.server.connectivity.Vpn,java.lang.String)>($r136, $r139);

        if $i24 == 0 goto label74;

        $r29 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r26 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r27 = $r26.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r28 = $r27.<com.android.internal.net.VpnConfig: java.lang.String interfaze>;

        staticinvoke <com.android.server.connectivity.Vpn: java.lang.String access$202(com.android.server.connectivity.Vpn,java.lang.String)>($r29, $r28);

        $r31 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        staticinvoke <com.android.server.connectivity.Vpn: void access$800(com.android.server.connectivity.Vpn)>($r31);

        $r32 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        staticinvoke <com.android.server.connectivity.Vpn: void access$900(com.android.server.connectivity.Vpn)>($r32);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("LegacyVpnRunner", "Connected!");

        exitmonitor r133;

     label73:
        goto label81;

     label74:
        r140 = new java.lang.IllegalStateException;

        r141 = new java.lang.StringBuilder;

        specialinvoke r141.<java.lang.StringBuilder: void <init>()>();

        $r20 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r21 = $r20.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig mConfig>;

        $r22 = $r21.<com.android.internal.net.VpnConfig: java.lang.String interfaze>;

        virtualinvoke r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is gone");

        $r25 = virtualinvoke r141.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r140.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r25);

        throw r140;

     label75:
        $r79 := @caughtexception;

     label76:
        exitmonitor r133;

     label77:
        throw $r79;

     label78:
        r143 = new java.lang.IllegalStateException;

        specialinvoke r143.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot parse the state");

        throw r143;

     label79:
        r144 = new java.lang.IllegalStateException;

        specialinvoke r144.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot delete the state");

        throw r144;

     label80:
        $r81 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("LegacyVpnRunner", "Aborting", $r81);

        $r82 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r83 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState FAILED>;

        $r84 = virtualinvoke $r81.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r82.<com.android.server.connectivity.Vpn: void updateState(android.net.NetworkInfo$DetailedState,java.lang.String)>($r83, $r84);

        virtualinvoke r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: void exitVpnRunner()>();

     label81:
        return;

        catch java.lang.Exception from label01 to label02 with label80;
        catch java.lang.Exception from label04 to label05 with label80;
        catch java.lang.Exception from label07 to label08 with label80;
        catch java.lang.Exception from label14 to label15 with label80;
        catch java.lang.Exception from label16 to label17 with label80;
        catch java.lang.Exception from label18 to label19 with label80;
        catch java.lang.Exception from label20 to label21 with label80;
        catch java.lang.Exception from label21 to label22 with label80;
        catch java.lang.Exception from label23 to label24 with label80;
        catch java.lang.Exception from label25 to label26 with label80;
        catch java.lang.Exception from label26 to label27 with label41;
        catch java.lang.Exception from label27 to label28 with label80;
        catch java.lang.Exception from label30 to label31 with label80;
        catch java.lang.Exception from label32 to label33 with label80;
        catch java.lang.Exception from label33 to label34 with label80;
        catch java.lang.Exception from label34 to label35 with label38;
        catch java.lang.Exception from label39 to label40 with label80;
        catch java.lang.Exception from label42 to label43 with label80;
        catch java.lang.Exception from label44 to label45 with label80;
        catch java.lang.Exception from label46 to label47 with label80;
        catch java.lang.Exception from label48 to label49 with label80;
        catch java.lang.Exception from label50 to label51 with label80;
        catch java.lang.Exception from label52 to label53 with label80;
        catch java.lang.Exception from label53 to label54 with label80;
        catch java.lang.Exception from label54 to label55 with label80;
        catch java.lang.Exception from label55 to label56 with label80;
        catch java.lang.Exception from label56 to label57 with label80;
        catch java.lang.Exception from label57 to label58 with label80;
        catch java.lang.Exception from label58 to label59 with label80;
        catch java.lang.Exception from label61 to label62 with label80;
        catch java.lang.IllegalArgumentException from label63 to label64 with label69;
        catch java.lang.Exception from label63 to label64 with label80;
        catch java.lang.IllegalArgumentException from label65 to label66 with label69;
        catch java.lang.Exception from label65 to label66 with label80;
        catch java.lang.IllegalArgumentException from label67 to label68 with label69;
        catch java.lang.Exception from label67 to label68 with label80;
        catch java.lang.Exception from label70 to label71 with label80;
        catch java.lang.Exception from label71 to label72 with label80;
        catch java.lang.Throwable from label72 to label73 with label75;
        catch java.lang.Throwable from label74 to label75 with label75;
        catch java.lang.Throwable from label76 to label77 with label75;
        catch java.lang.Exception from label77 to label78 with label80;
        catch java.lang.Exception from label78 to label79 with label80;
        catch java.lang.Exception from label79 to label80 with label80;
    }

    private void checkInterruptAndDelay(boolean) throws java.lang.InterruptedException
    {
        com.android.server.connectivity.Vpn$LegacyVpnRunner r0;
        boolean z0;
        long $l0, $l1, $l2, l4;
        byte $b3;
        android.net.NetworkInfo$DetailedState $r1;
        com.android.server.connectivity.Vpn $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: com.android.server.connectivity.Vpn$LegacyVpnRunner;

        z0 := @parameter0: boolean;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: long mBringupStartTime>;

        $l2 = $l0 - $l1;

        $b3 = $l2 cmp 60000L;

        if $b3 > 0 goto label3;

        if z0 == 0 goto label1;

        l4 = 200L;

        goto label2;

     label1:
        l4 = 1L;

     label2:
        staticinvoke <java.lang.Thread: void sleep(long)>(l4);

        return;

     label3:
        $r2 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r1 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState FAILED>;

        virtualinvoke $r2.<com.android.server.connectivity.Vpn: void updateState(android.net.NetworkInfo$DetailedState,java.lang.String)>($r1, "checkpoint");

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("VPN bringup took too long");

        throw $r3;
    }

    private void waitForDaemonsToStop() throws java.lang.InterruptedException
    {
        com.android.server.connectivity.Vpn$LegacyVpnRunner r0;
        java.lang.String[] r1, $r5;
        com.android.server.connectivity.Vpn $r2;
        android.net.NetworkInfo $r3;
        boolean $z0, $z1;
        java.lang.String[][] $r4;
        java.lang.String $r6;
        int i0, $i1;

        r0 := @this: com.android.server.connectivity.Vpn$LegacyVpnRunner;

        $r2 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r3 = staticinvoke <com.android.server.connectivity.Vpn: android.net.NetworkInfo access$1800(com.android.server.connectivity.Vpn)>($r2);

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(2000L);

        i0 = 0;

     label2:
        r1 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[] mDaemons>;

        $i1 = lengthof r1;

        if i0 >= $i1 goto label4;

        $r4 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[][] mArguments>;

        $r5 = $r4[i0];

        if $r5 == null goto label3;

        $r6 = r1[i0];

        $z1 = staticinvoke <android.os.SystemService: boolean isStopped(java.lang.String)>($r6);

        if $z1 == 0 goto label3;

        return;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        goto label1;
    }

    public void exitIfOuterInterfaceIs(java.lang.String)
    {
        com.android.server.connectivity.Vpn$LegacyVpnRunner r0;
        java.lang.String r1, $r3, $r7;
        boolean $z0;
        java.lang.StringBuilder $r4;

        r0 := @this: com.android.server.connectivity.Vpn$LegacyVpnRunner;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String mOuterInterface>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Legacy VPN is going down with ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("LegacyVpnRunner", $r7);

        virtualinvoke r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: void exitVpnRunner()>();

     label1:
        return;
    }

    public void exitVpnRunner()
    {
        com.android.server.connectivity.Vpn$LegacyVpnRunner r0;
        com.android.server.connectivity.Vpn $r2, $r3;
        android.content.Context $r4;
        android.content.BroadcastReceiver $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.connectivity.Vpn$LegacyVpnRunner;

        virtualinvoke r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: void interrupt()>();

        $r2 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        staticinvoke <com.android.server.connectivity.Vpn: void access$1700(com.android.server.connectivity.Vpn)>($r2);

     label1:
        $r3 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        $r4 = staticinvoke <com.android.server.connectivity.Vpn: android.content.Context access$500(com.android.server.connectivity.Vpn)>($r3);

        $r5 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r4.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void run()
    {
        com.android.server.connectivity.Vpn$LegacyVpnRunner r0;
        com.android.server.connectivity.Vpn $r1;
        java.lang.String $r2, $r5, $r8;
        android.net.LocalSocket $r3, $r6, $r10;
        java.lang.Throwable $r4, $r7, $r9, $r11, $r12, $r13;
        android.net.LocalSocket[] r14, r18, r22;
        int i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16;
        java.lang.String[] r16, r20, r24;

        r0 := @this: com.android.server.connectivity.Vpn$LegacyVpnRunner;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LegacyVpnRunner", "Waiting");

        entermonitor "LegacyVpnRunner";

     label01:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LegacyVpnRunner", "Executing");

     label02:
        specialinvoke r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: void bringup()>();

        specialinvoke r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: void waitForDaemonsToStop()>();

        staticinvoke <com.android.server.connectivity.Vpn$LegacyVpnRunner: boolean interrupted()>();

     label03:
        r14 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: android.net.LocalSocket[] mSockets>;

        i5 = lengthof r14;

     label04:
        i6 = 0;

     label05:
        if i6 >= i5 goto label08;

     label06:
        $r3 = r14[i6];

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r3);

     label07:
        i6 = i6 + 1;

        goto label05;

     label08:
        staticinvoke <java.lang.Thread: void sleep(long)>(50L);

     label09:
        goto label11;

     label10:
        $r12 := @caughtexception;

     label11:
        r16 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[] mDaemons>;

        i7 = lengthof r16;

     label12:
        i8 = 0;

     label13:
        if i8 >= i7 goto label45;

     label14:
        $r2 = r16[i8];

        staticinvoke <android.os.SystemService: void stop(java.lang.String)>($r2);

     label15:
        i8 = i8 + 1;

        goto label13;

     label16:
        $r4 := @caughtexception;

     label17:
        r18 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: android.net.LocalSocket[] mSockets>;

        i9 = lengthof r18;

     label18:
        i10 = 0;

     label19:
        if i10 >= i9 goto label22;

     label20:
        $r6 = r18[i10];

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r6);

     label21:
        i10 = i10 + 1;

        goto label19;

     label22:
        staticinvoke <java.lang.Thread: void sleep(long)>(50L);

     label23:
        goto label25;

     label24:
        $r11 := @caughtexception;

     label25:
        r20 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[] mDaemons>;

        i11 = lengthof r20;

     label26:
        i12 = 0;

     label27:
        if i12 >= i11 goto label30;

     label28:
        $r5 = r20[i12];

        staticinvoke <android.os.SystemService: void stop(java.lang.String)>($r5);

     label29:
        i12 = i12 + 1;

        goto label27;

     label30:
        throw $r4;

     label31:
        $r9 := @caughtexception;

     label32:
        r22 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: android.net.LocalSocket[] mSockets>;

        i13 = lengthof r22;

     label33:
        i14 = 0;

     label34:
        if i14 >= i13 goto label37;

     label35:
        $r10 = r22[i14];

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r10);

     label36:
        i14 = i14 + 1;

        goto label34;

     label37:
        staticinvoke <java.lang.Thread: void sleep(long)>(50L);

     label38:
        goto label40;

     label39:
        $r7 := @caughtexception;

     label40:
        r24 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String[] mDaemons>;

        i15 = lengthof r24;

     label41:
        i16 = 0;

     label42:
        if i16 >= i15 goto label45;

     label43:
        $r8 = r24[i16];

        staticinvoke <android.os.SystemService: void stop(java.lang.String)>($r8);

     label44:
        i16 = i16 + 1;

        goto label42;

     label45:
        $r1 = r0.<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.server.connectivity.Vpn this$0>;

        staticinvoke <com.android.server.connectivity.Vpn: void access$1700(com.android.server.connectivity.Vpn)>($r1);

        exitmonitor "LegacyVpnRunner";

     label46:
        return;

     label47:
        $r13 := @caughtexception;

     label48:
        exitmonitor "LegacyVpnRunner";

     label49:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label47;
        catch java.lang.InterruptedException from label02 to label03 with label31;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label03 to label04 with label47;
        catch java.lang.Throwable from label06 to label07 with label47;
        catch java.lang.InterruptedException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label47;
        catch java.lang.Throwable from label11 to label12 with label47;
        catch java.lang.Throwable from label14 to label15 with label47;
        catch java.lang.Throwable from label17 to label18 with label47;
        catch java.lang.Throwable from label20 to label21 with label47;
        catch java.lang.InterruptedException from label22 to label23 with label24;
        catch java.lang.Throwable from label22 to label23 with label47;
        catch java.lang.Throwable from label25 to label26 with label47;
        catch java.lang.Throwable from label28 to label29 with label47;
        catch java.lang.Throwable from label30 to label31 with label47;
        catch java.lang.Throwable from label32 to label33 with label47;
        catch java.lang.Throwable from label35 to label36 with label47;
        catch java.lang.InterruptedException from label37 to label38 with label39;
        catch java.lang.Throwable from label37 to label38 with label47;
        catch java.lang.Throwable from label40 to label41 with label47;
        catch java.lang.Throwable from label43 to label44 with label47;
        catch java.lang.Throwable from label45 to label46 with label47;
        catch java.lang.Throwable from label48 to label49 with label47;
    }

    public static void <clinit>()
    {
        <com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String TAG> = "LegacyVpnRunner";

        return;
    }
}
