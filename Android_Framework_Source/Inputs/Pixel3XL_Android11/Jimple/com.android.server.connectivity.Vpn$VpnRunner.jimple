abstract class com.android.server.connectivity.Vpn$VpnRunner extends java.lang.Thread
{
    final com.android.server.connectivity.Vpn this$0;

    protected void <init>(com.android.server.connectivity.Vpn, java.lang.String)
    {
        com.android.server.connectivity.Vpn$VpnRunner r0;
        com.android.server.connectivity.Vpn r1;
        java.lang.String r2;

        r0 := @this: com.android.server.connectivity.Vpn$VpnRunner;

        r1 := @parameter0: com.android.server.connectivity.Vpn;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.server.connectivity.Vpn$VpnRunner: com.android.server.connectivity.Vpn this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r2);

        return;
    }

    protected final void exit()
    {
        com.android.server.connectivity.Vpn$VpnRunner r0;
        com.android.server.connectivity.Vpn r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.connectivity.Vpn$VpnRunner;

        r1 = r0.<com.android.server.connectivity.Vpn$VpnRunner: com.android.server.connectivity.Vpn this$0>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.server.connectivity.Vpn$VpnRunner: void exitVpnRunner()>();

        $r3 = r0.<com.android.server.connectivity.Vpn$VpnRunner: com.android.server.connectivity.Vpn this$0>;

        staticinvoke <com.android.server.connectivity.Vpn: void access$600(com.android.server.connectivity.Vpn)>($r3);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected abstract void exitVpnRunner();

    public abstract void run();
}
