class com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl extends java.lang.Object implements android.net.ipsec.ike.IkeSessionCallback
{
    private final com.android.server.connectivity.Vpn$IkeV2VpnRunnerCallback mCallback;
    private final android.net.Network mNetwork;
    private final java.lang.String mTag;

    void <init>(java.lang.String, com.android.server.connectivity.Vpn$IkeV2VpnRunnerCallback, android.net.Network)
    {
        com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl r0;
        java.lang.String r1;
        com.android.server.connectivity.Vpn$IkeV2VpnRunnerCallback r2;
        android.net.Network r3;

        r0 := @this: com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.connectivity.Vpn$IkeV2VpnRunnerCallback;

        r3 := @parameter2: android.net.Network;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: java.lang.String mTag> = r1;

        r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: com.android.server.connectivity.Vpn$IkeV2VpnRunnerCallback mCallback> = r2;

        r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: android.net.Network mNetwork> = r3;

        return;
    }

    public void onClosed()
    {
        com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r3;
        android.net.Network $r5, $r8;
        com.android.server.connectivity.Vpn$IkeV2VpnRunnerCallback $r9;

        r0 := @this: com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl;

        r1 = r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: java.lang.String mTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IkeClosed for network ");

        $r5 = r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: android.net.Network mNetwork>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r1, $r7);

        $r9 = r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: com.android.server.connectivity.Vpn$IkeV2VpnRunnerCallback mCallback>;

        $r8 = r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: android.net.Network mNetwork>;

        interfaceinvoke $r9.<com.android.server.connectivity.Vpn$IkeV2VpnRunnerCallback: void onSessionLost(android.net.Network)>($r8);

        return;
    }

    public void onClosedExceptionally(android.net.ipsec.ike.exceptions.IkeException)
    {
        com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl r0;
        android.net.ipsec.ike.exceptions.IkeException r1;
        java.lang.String r2, $r8;
        android.net.Network $r6, $r9;
        com.android.server.connectivity.Vpn$IkeV2VpnRunnerCallback $r10;
        java.lang.StringBuilder r11;
        java.lang.Throwable r12;

        r0 := @this: com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl;

        r1 := @parameter0: android.net.ipsec.ike.exceptions.IkeException;

        r2 = r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: java.lang.String mTag>;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IkeClosedExceptionally for network ");

        $r6 = r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: android.net.Network mNetwork>;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r12 = (java.lang.Throwable) r1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>(r2, $r8, r12);

        $r10 = r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: com.android.server.connectivity.Vpn$IkeV2VpnRunnerCallback mCallback>;

        $r9 = r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: android.net.Network mNetwork>;

        interfaceinvoke $r10.<com.android.server.connectivity.Vpn$IkeV2VpnRunnerCallback: void onSessionLost(android.net.Network)>($r9);

        return;
    }

    public void onError(android.net.ipsec.ike.exceptions.IkeProtocolException)
    {
        com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl r0;
        android.net.ipsec.ike.exceptions.IkeProtocolException r1;
        java.lang.String r2, $r8;
        android.net.Network $r6;
        java.lang.StringBuilder r9;
        java.lang.Throwable r10;

        r0 := @this: com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl;

        r1 := @parameter0: android.net.ipsec.ike.exceptions.IkeProtocolException;

        r2 = r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: java.lang.String mTag>;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IkeError for network ");

        $r6 = r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: android.net.Network mNetwork>;

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r10 = (java.lang.Throwable) r1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>(r2, $r8, r10);

        return;
    }

    public void onOpened(android.net.ipsec.ike.IkeSessionConfiguration)
    {
        com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2;
        android.net.Network $r4;
        android.net.ipsec.ike.IkeSessionConfiguration r7;

        r0 := @this: com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl;

        r7 := @parameter0: android.net.ipsec.ike.IkeSessionConfiguration;

        r1 = r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: java.lang.String mTag>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IkeOpened for network ");

        $r4 = r0.<com.android.server.connectivity.VpnIkev2Utils$IkeSessionCallbackImpl: android.net.Network mNetwork>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r1, $r6);

        return;
    }
}
