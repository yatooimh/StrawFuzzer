public class com.android.server.connectivity.VpnIkev2Utils extends java.lang.Object
{
    private static final int DH_GROUP_3072_BIT_MODP;
    private static final int DH_GROUP_4096_BIT_MODP;
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.connectivity.VpnIkev2Utils: int DH_GROUP_4096_BIT_MODP> = 16;

        <com.android.server.connectivity.VpnIkev2Utils: int DH_GROUP_3072_BIT_MODP> = 15;

        $r0 = class "Lcom/android/server/connectivity/VpnIkev2Utils;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.connectivity.VpnIkev2Utils: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>()
    {
        com.android.server.connectivity.VpnIkev2Utils r0;

        r0 := @this: com.android.server.connectivity.VpnIkev2Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.net.ipsec.ike.ChildSessionParams buildChildSessionParams(java.util.List)
    {
        java.util.List $r2, r11;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.net.ipsec.ike.TunnelModeChildSessionParams $r7;
        java.lang.Object $r8;
        android.net.ipsec.ike.ChildSaProposal $r9;
        java.util.Iterator r12;
        android.net.ipsec.ike.TunnelModeChildSessionParams$Builder r13;
        android.net.ipsec.ike.ChildSessionParams r14;

        r11 := @parameter0: java.util.List;

        r13 = new android.net.ipsec.ike.TunnelModeChildSessionParams$Builder;

        specialinvoke r13.<android.net.ipsec.ike.TunnelModeChildSessionParams$Builder: void <init>()>();

        $r2 = staticinvoke <com.android.server.connectivity.VpnIkev2Utils: java.util.List getChildSaProposals(java.util.List)>(r11);

        r12 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.net.ipsec.ike.ChildSaProposal) $r8;

        virtualinvoke r13.<android.net.ipsec.ike.TunnelModeChildSessionParams$Builder: android.net.ipsec.ike.TunnelModeChildSessionParams$Builder addSaProposal(android.net.ipsec.ike.ChildSaProposal)>($r9);

        goto label1;

     label2:
        $i0 = <android.system.OsConstants: int AF_INET>;

        virtualinvoke r13.<android.net.ipsec.ike.TunnelModeChildSessionParams$Builder: android.net.ipsec.ike.TunnelModeChildSessionParams$Builder addInternalAddressRequest(int)>($i0);

        $i1 = <android.system.OsConstants: int AF_INET6>;

        virtualinvoke r13.<android.net.ipsec.ike.TunnelModeChildSessionParams$Builder: android.net.ipsec.ike.TunnelModeChildSessionParams$Builder addInternalAddressRequest(int)>($i1);

        $i2 = <android.system.OsConstants: int AF_INET>;

        virtualinvoke r13.<android.net.ipsec.ike.TunnelModeChildSessionParams$Builder: android.net.ipsec.ike.TunnelModeChildSessionParams$Builder addInternalDnsServerRequest(int)>($i2);

        $i3 = <android.system.OsConstants: int AF_INET6>;

        virtualinvoke r13.<android.net.ipsec.ike.TunnelModeChildSessionParams$Builder: android.net.ipsec.ike.TunnelModeChildSessionParams$Builder addInternalDnsServerRequest(int)>($i3);

        $r7 = virtualinvoke r13.<android.net.ipsec.ike.TunnelModeChildSessionParams$Builder: android.net.ipsec.ike.TunnelModeChildSessionParams build()>();

        r14 = (android.net.ipsec.ike.ChildSessionParams) $r7;

        return r14;
    }

    static android.net.ipsec.ike.IkeSessionParams buildIkeSessionParams(android.content.Context, android.net.Ikev2VpnProfile, android.net.Network)
    {
        android.net.Network r0;
        android.net.ipsec.ike.IkeIdentification r1, r2;
        java.lang.String $r3, $r4, $r6;
        android.net.ipsec.ike.IkeSessionParams$Builder $r5, $r7, $r8, $r9, r17;
        java.util.List $r10;
        boolean $z0;
        android.net.ipsec.ike.IkeSessionParams $r11;
        java.lang.Object $r12;
        android.net.ipsec.ike.IkeSaProposal $r13;
        android.content.Context r15;
        android.net.Ikev2VpnProfile r16;
        java.util.Iterator r18;

        r15 := @parameter0: android.content.Context;

        r16 := @parameter1: android.net.Ikev2VpnProfile;

        r0 := @parameter2: android.net.Network;

        $r3 = virtualinvoke r16.<android.net.Ikev2VpnProfile: java.lang.String getUserIdentity()>();

        r1 = staticinvoke <com.android.server.connectivity.VpnIkev2Utils: android.net.ipsec.ike.IkeIdentification parseIkeIdentification(java.lang.String)>($r3);

        $r4 = virtualinvoke r16.<android.net.Ikev2VpnProfile: java.lang.String getServerAddr()>();

        r2 = staticinvoke <com.android.server.connectivity.VpnIkev2Utils: android.net.ipsec.ike.IkeIdentification parseIkeIdentification(java.lang.String)>($r4);

        $r5 = new android.net.ipsec.ike.IkeSessionParams$Builder;

        specialinvoke $r5.<android.net.ipsec.ike.IkeSessionParams$Builder: void <init>(android.content.Context)>(r15);

        $r6 = virtualinvoke r16.<android.net.Ikev2VpnProfile: java.lang.String getServerAddr()>();

        $r7 = virtualinvoke $r5.<android.net.ipsec.ike.IkeSessionParams$Builder: android.net.ipsec.ike.IkeSessionParams$Builder setServerHostname(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<android.net.ipsec.ike.IkeSessionParams$Builder: android.net.ipsec.ike.IkeSessionParams$Builder setNetwork(android.net.Network)>(r0);

        $r9 = virtualinvoke $r8.<android.net.ipsec.ike.IkeSessionParams$Builder: android.net.ipsec.ike.IkeSessionParams$Builder setLocalIdentification(android.net.ipsec.ike.IkeIdentification)>(r1);

        r17 = virtualinvoke $r9.<android.net.ipsec.ike.IkeSessionParams$Builder: android.net.ipsec.ike.IkeSessionParams$Builder setRemoteIdentification(android.net.ipsec.ike.IkeIdentification)>(r2);

        staticinvoke <com.android.server.connectivity.VpnIkev2Utils: void setIkeAuth(android.net.Ikev2VpnProfile,android.net.ipsec.ike.IkeSessionParams$Builder)>(r16, r17);

        $r10 = staticinvoke <com.android.server.connectivity.VpnIkev2Utils: java.util.List getIkeSaProposals()>();

        r18 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (android.net.ipsec.ike.IkeSaProposal) $r12;

        virtualinvoke r17.<android.net.ipsec.ike.IkeSessionParams$Builder: android.net.ipsec.ike.IkeSessionParams$Builder addSaProposal(android.net.ipsec.ike.IkeSaProposal)>($r13);

        goto label1;

     label2:
        $r11 = virtualinvoke r17.<android.net.ipsec.ike.IkeSessionParams$Builder: android.net.ipsec.ike.IkeSessionParams build()>();

        return $r11;
    }

    private static java.util.List getChildSaProposals(java.util.List)
    {
        java.util.ArrayList $r2;
        boolean $z0, $z2, $z3, $z4, $z5, $z7;
        android.net.ipsec.ike.ChildSaProposal$Builder $r3, $r14;
        android.net.ipsec.ike.ChildSaProposal $r13, $r18, $r20;
        java.util.List $r19, r25;
        java.lang.String $r21;

        r25 := @parameter0: java.util.List;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $z0 = staticinvoke <android.net.Ikev2VpnProfile: boolean hasNormalModeAlgorithms(java.util.List)>(r25);

        if $z0 == 0 goto label5;

        $r14 = new android.net.ipsec.ike.ChildSaProposal$Builder;

        specialinvoke $r14.<android.net.ipsec.ike.ChildSaProposal$Builder: void <init>()>();

        virtualinvoke $r14.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addEncryptionAlgorithm(int,int)>(12, 256);

        virtualinvoke $r14.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addEncryptionAlgorithm(int,int)>(12, 192);

        virtualinvoke $r14.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addEncryptionAlgorithm(int,int)>(12, 128);

        $z2 = interfaceinvoke r25.<java.util.List: boolean contains(java.lang.Object)>("hmac(sha512)");

        if $z2 == 0 goto label1;

        virtualinvoke $r14.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addIntegrityAlgorithm(int)>(14);

     label1:
        $z3 = interfaceinvoke r25.<java.util.List: boolean contains(java.lang.Object)>("hmac(sha384)");

        if $z3 == 0 goto label2;

        virtualinvoke $r14.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addIntegrityAlgorithm(int)>(13);

     label2:
        $z4 = interfaceinvoke r25.<java.util.List: boolean contains(java.lang.Object)>("hmac(sha256)");

        if $z4 == 0 goto label3;

        virtualinvoke $r14.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addIntegrityAlgorithm(int)>(12);

     label3:
        $r18 = virtualinvoke $r14.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal build()>();

        $r19 = virtualinvoke $r18.<android.net.ipsec.ike.ChildSaProposal: java.util.List getIntegrityAlgorithms()>();

        $z5 = interfaceinvoke $r19.<java.util.List: boolean isEmpty()>();

        if $z5 == 0 goto label4;

        $r21 = <com.android.server.connectivity.VpnIkev2Utils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>($r21, "Missing integrity algorithm when buildling Child SA proposal");

        goto label5;

     label4:
        $r20 = virtualinvoke $r14.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal build()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r20);

     label5:
        $z7 = staticinvoke <android.net.Ikev2VpnProfile: boolean hasAeadAlgorithms(java.util.List)>(r25);

        if $z7 == 0 goto label6;

        $r3 = new android.net.ipsec.ike.ChildSaProposal$Builder;

        specialinvoke $r3.<android.net.ipsec.ike.ChildSaProposal$Builder: void <init>()>();

        virtualinvoke $r3.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addEncryptionAlgorithm(int,int)>(20, 256);

        virtualinvoke $r3.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addEncryptionAlgorithm(int,int)>(19, 256);

        virtualinvoke $r3.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addEncryptionAlgorithm(int,int)>(18, 256);

        virtualinvoke $r3.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addEncryptionAlgorithm(int,int)>(20, 192);

        virtualinvoke $r3.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addEncryptionAlgorithm(int,int)>(19, 192);

        virtualinvoke $r3.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addEncryptionAlgorithm(int,int)>(18, 192);

        virtualinvoke $r3.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addEncryptionAlgorithm(int,int)>(20, 128);

        virtualinvoke $r3.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addEncryptionAlgorithm(int,int)>(19, 128);

        virtualinvoke $r3.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal$Builder addEncryptionAlgorithm(int,int)>(18, 128);

        $r13 = virtualinvoke $r3.<android.net.ipsec.ike.ChildSaProposal$Builder: android.net.ipsec.ike.ChildSaProposal build()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r13);

     label6:
        return $r2;
    }

    private static java.util.List getIkeSaProposals()
    {
        java.util.Iterator r3;
        android.net.ipsec.ike.IkeSaProposal$Builder r4, $r6, $r14;
        java.util.ArrayList $r5;
        android.net.ipsec.ike.IkeSaProposal$Builder[] $r24;
        java.util.List $r25;
        boolean $z0;
        android.net.ipsec.ike.IkeSaProposal $r26, $r27;
        java.lang.Object $r28;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new android.net.ipsec.ike.IkeSaProposal$Builder;

        specialinvoke $r6.<android.net.ipsec.ike.IkeSaProposal$Builder: void <init>()>();

        virtualinvoke $r6.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addEncryptionAlgorithm(int,int)>(12, 256);

        virtualinvoke $r6.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addEncryptionAlgorithm(int,int)>(12, 192);

        virtualinvoke $r6.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addEncryptionAlgorithm(int,int)>(12, 128);

        virtualinvoke $r6.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addIntegrityAlgorithm(int)>(14);

        virtualinvoke $r6.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addIntegrityAlgorithm(int)>(13);

        virtualinvoke $r6.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addIntegrityAlgorithm(int)>(12);

        virtualinvoke $r6.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addIntegrityAlgorithm(int)>(5);

        $r14 = new android.net.ipsec.ike.IkeSaProposal$Builder;

        specialinvoke $r14.<android.net.ipsec.ike.IkeSaProposal$Builder: void <init>()>();

        virtualinvoke $r14.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addEncryptionAlgorithm(int,int)>(20, 256);

        virtualinvoke $r14.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addEncryptionAlgorithm(int,int)>(19, 256);

        virtualinvoke $r14.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addEncryptionAlgorithm(int,int)>(18, 256);

        virtualinvoke $r14.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addEncryptionAlgorithm(int,int)>(20, 192);

        virtualinvoke $r14.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addEncryptionAlgorithm(int,int)>(19, 192);

        virtualinvoke $r14.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addEncryptionAlgorithm(int,int)>(18, 192);

        virtualinvoke $r14.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addEncryptionAlgorithm(int,int)>(20, 128);

        virtualinvoke $r14.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addEncryptionAlgorithm(int,int)>(19, 128);

        virtualinvoke $r14.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addEncryptionAlgorithm(int,int)>(18, 128);

        $r24 = newarray (android.net.ipsec.ike.IkeSaProposal$Builder)[2];

        $r24[0] = $r6;

        $r24[1] = $r14;

        $r25 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r24);

        r3 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r28 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.net.ipsec.ike.IkeSaProposal$Builder) $r28;

        virtualinvoke r4.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addDhGroup(int)>(16);

        virtualinvoke r4.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addDhGroup(int)>(15);

        virtualinvoke r4.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addDhGroup(int)>(14);

        virtualinvoke r4.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addPseudorandomFunction(int)>(4);

        virtualinvoke r4.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal$Builder addPseudorandomFunction(int)>(2);

        goto label1;

     label2:
        $r26 = virtualinvoke $r6.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal build()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r26);

        $r27 = virtualinvoke $r14.<android.net.ipsec.ike.IkeSaProposal$Builder: android.net.ipsec.ike.IkeSaProposal build()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r27);

        return $r5;
    }

    static java.util.Collection getRoutesFromTrafficSelectors(java.util.List)
    {
        java.util.HashSet $r1;
        boolean $z0, $z1;
        java.lang.Object $r2, $r8;
        android.net.util.IpRange $r3;
        java.net.InetAddress $r4, $r5;
        java.util.List $r6, r10;
        android.net.RouteInfo $r7;
        android.net.IpPrefix $r9;
        java.util.Iterator r11, r13;
        android.net.ipsec.ike.IkeTrafficSelector r12;

        r10 := @parameter0: java.util.List;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r11 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.net.ipsec.ike.IkeTrafficSelector) $r2;

        $r3 = new android.net.util.IpRange;

        $r5 = r12.<android.net.ipsec.ike.IkeTrafficSelector: java.net.InetAddress startingAddress>;

        $r4 = r12.<android.net.ipsec.ike.IkeTrafficSelector: java.net.InetAddress endingAddress>;

        specialinvoke $r3.<android.net.util.IpRange: void <init>(java.net.InetAddress,java.net.InetAddress)>($r5, $r4);

        $r6 = virtualinvoke $r3.<android.net.util.IpRange: java.util.List asIpPrefixes()>();

        r13 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = new android.net.RouteInfo;

        $r8 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.net.IpPrefix) $r8;

        specialinvoke $r7.<android.net.RouteInfo: void <init>(android.net.IpPrefix,java.net.InetAddress)>($r9, null);

        virtualinvoke $r1.<java.util.HashSet: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        goto label1;

     label4:
        return $r1;
    }

    private static android.net.ipsec.ike.IkeIdentification parseIkeIdentification(java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        byte[] $r2, $r15;
        java.net.Inet6Address $r5;
        java.net.Inet4Address $r7;
        java.lang.String $r10, $r12, $r14, r16;
        java.net.InetAddress r17;
        android.net.ipsec.ike.IkeKeyIdIdentification r18, r25;
        android.net.ipsec.ike.IkeRfc822AddrIdentification r19, r21;
        android.net.ipsec.ike.IkeFqdnIdentification r20, r26;
        android.net.ipsec.ike.IkeIpv4AddrIdentification r22;
        android.net.ipsec.ike.IkeIpv6AddrIdentification r23;
        java.lang.IllegalArgumentException r24;
        android.net.ipsec.ike.IkeIdentification r27, r28, r29, r30, r31, r32, r33, r34;

        r16 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r16.<java.lang.String: boolean contains(java.lang.CharSequence)>("@");

        if $z0 == 0 goto label4;

        $z5 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("@#");

        if $z5 == 0 goto label1;

        r18 = new android.net.ipsec.ike.IkeKeyIdIdentification;

        $r14 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int)>(2);

        $r15 = staticinvoke <com.android.internal.util.HexDump: byte[] hexStringToByteArray(java.lang.String)>($r14);

        specialinvoke r18.<android.net.ipsec.ike.IkeKeyIdIdentification: void <init>(byte[])>($r15);

        r27 = (android.net.ipsec.ike.IkeIdentification) r18;

        return r27;

     label1:
        $z6 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("@@");

        if $z6 == 0 goto label2;

        r19 = new android.net.ipsec.ike.IkeRfc822AddrIdentification;

        $r12 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int)>(2);

        specialinvoke r19.<android.net.ipsec.ike.IkeRfc822AddrIdentification: void <init>(java.lang.String)>($r12);

        r28 = (android.net.ipsec.ike.IkeIdentification) r19;

        return r28;

     label2:
        $z7 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("@");

        if $z7 == 0 goto label3;

        r20 = new android.net.ipsec.ike.IkeFqdnIdentification;

        $r10 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int)>(1);

        specialinvoke r20.<android.net.ipsec.ike.IkeFqdnIdentification: void <init>(java.lang.String)>($r10);

        r29 = (android.net.ipsec.ike.IkeIdentification) r20;

        return r29;

     label3:
        r21 = new android.net.ipsec.ike.IkeRfc822AddrIdentification;

        specialinvoke r21.<android.net.ipsec.ike.IkeRfc822AddrIdentification: void <init>(java.lang.String)>(r16);

        r30 = (android.net.ipsec.ike.IkeIdentification) r21;

        return r30;

     label4:
        $z1 = staticinvoke <android.net.InetAddresses: boolean isNumericAddress(java.lang.String)>(r16);

        if $z1 == 0 goto label7;

        r17 = staticinvoke <android.net.InetAddresses: java.net.InetAddress parseNumericAddress(java.lang.String)>(r16);

        $z3 = r17 instanceof java.net.Inet4Address;

        if $z3 == 0 goto label5;

        r22 = new android.net.ipsec.ike.IkeIpv4AddrIdentification;

        $r7 = (java.net.Inet4Address) r17;

        specialinvoke r22.<android.net.ipsec.ike.IkeIpv4AddrIdentification: void <init>(java.net.Inet4Address)>($r7);

        r31 = (android.net.ipsec.ike.IkeIdentification) r22;

        return r31;

     label5:
        $z4 = r17 instanceof java.net.Inet6Address;

        if $z4 == 0 goto label6;

        r23 = new android.net.ipsec.ike.IkeIpv6AddrIdentification;

        $r5 = (java.net.Inet6Address) r17;

        specialinvoke r23.<android.net.ipsec.ike.IkeIpv6AddrIdentification: void <init>(java.net.Inet6Address)>($r5);

        r32 = (android.net.ipsec.ike.IkeIdentification) r23;

        return r32;

     label6:
        r24 = new java.lang.IllegalArgumentException;

        specialinvoke r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("IP version not supported");

        throw r24;

     label7:
        $z2 = virtualinvoke r16.<java.lang.String: boolean contains(java.lang.CharSequence)>(":");

        if $z2 == 0 goto label8;

        r25 = new android.net.ipsec.ike.IkeKeyIdIdentification;

        $r2 = virtualinvoke r16.<java.lang.String: byte[] getBytes()>();

        specialinvoke r25.<android.net.ipsec.ike.IkeKeyIdIdentification: void <init>(byte[])>($r2);

        r33 = (android.net.ipsec.ike.IkeIdentification) r25;

        return r33;

     label8:
        r26 = new android.net.ipsec.ike.IkeFqdnIdentification;

        specialinvoke r26.<android.net.ipsec.ike.IkeFqdnIdentification: void <init>(java.lang.String)>(r16);

        r34 = (android.net.ipsec.ike.IkeIdentification) r26;

        return r34;
    }

    private static void setIkeAuth(android.net.Ikev2VpnProfile, android.net.ipsec.ike.IkeSessionParams$Builder)
    {
        android.net.Ikev2VpnProfile r0;
        android.net.ipsec.ike.IkeSessionParams$Builder r1;
        int i0;
        android.net.eap.EapSessionConfig r2;
        android.net.eap.EapSessionConfig$Builder $r3, $r6;
        java.lang.String $r4, $r5;
        java.security.cert.X509Certificate $r7, $r12, $r13;
        byte[] $r9;
        java.lang.IllegalArgumentException $r11;
        java.security.PrivateKey $r14;

        r0 := @parameter0: android.net.Ikev2VpnProfile;

        r1 := @parameter1: android.net.ipsec.ike.IkeSessionParams$Builder;

        i0 = virtualinvoke r0.<android.net.Ikev2VpnProfile: int getType()>();

        if i0 == 6 goto label3;

        if i0 == 7 goto label2;

        if i0 != 8 goto label1;

        $r12 = virtualinvoke r0.<android.net.Ikev2VpnProfile: java.security.cert.X509Certificate getServerRootCaCert()>();

        $r13 = virtualinvoke r0.<android.net.Ikev2VpnProfile: java.security.cert.X509Certificate getUserCert()>();

        $r14 = virtualinvoke r0.<android.net.Ikev2VpnProfile: java.security.PrivateKey getRsaPrivateKey()>();

        virtualinvoke r1.<android.net.ipsec.ike.IkeSessionParams$Builder: android.net.ipsec.ike.IkeSessionParams$Builder setAuthDigitalSignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.security.PrivateKey)>($r12, $r13, $r14);

        goto label4;

     label1:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown auth method set");

        throw $r11;

     label2:
        $r9 = virtualinvoke r0.<android.net.Ikev2VpnProfile: byte[] getPresharedKey()>();

        virtualinvoke r1.<android.net.ipsec.ike.IkeSessionParams$Builder: android.net.ipsec.ike.IkeSessionParams$Builder setAuthPsk(byte[])>($r9);

        goto label4;

     label3:
        $r3 = new android.net.eap.EapSessionConfig$Builder;

        specialinvoke $r3.<android.net.eap.EapSessionConfig$Builder: void <init>()>();

        $r4 = virtualinvoke r0.<android.net.Ikev2VpnProfile: java.lang.String getUsername()>();

        $r5 = virtualinvoke r0.<android.net.Ikev2VpnProfile: java.lang.String getPassword()>();

        $r6 = virtualinvoke $r3.<android.net.eap.EapSessionConfig$Builder: android.net.eap.EapSessionConfig$Builder setEapMsChapV2Config(java.lang.String,java.lang.String)>($r4, $r5);

        r2 = virtualinvoke $r6.<android.net.eap.EapSessionConfig$Builder: android.net.eap.EapSessionConfig build()>();

        $r7 = virtualinvoke r0.<android.net.Ikev2VpnProfile: java.security.cert.X509Certificate getServerRootCaCert()>();

        virtualinvoke r1.<android.net.ipsec.ike.IkeSessionParams$Builder: android.net.ipsec.ike.IkeSessionParams$Builder setAuthEap(java.security.cert.X509Certificate,android.net.eap.EapSessionConfig)>($r7, r2);

     label4:
        return;
    }
}
