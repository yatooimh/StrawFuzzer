public class com.android.server.content.SyncJobService extends android.app.job.JobService
{
    private static final java.lang.String TAG;
    private static com.android.server.content.SyncJobService sInstance;
    private static final android.util.SparseArray sJobParamsMap;
    private static final android.util.SparseLongArray sJobStartUptimes;
    private static final java.lang.Object sLock;
    private static final com.android.server.content.SyncLogger sLogger;
    private static final android.util.SparseBooleanArray sStartedSyncs;

    static void <clinit>()
    {
        java.lang.Object $r0;
        android.util.SparseArray $r1;
        android.util.SparseBooleanArray $r2;
        android.util.SparseLongArray $r3;
        com.android.server.content.SyncLogger $r4;

        <com.android.server.content.SyncJobService: java.lang.String TAG> = "SyncManager";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.server.content.SyncJobService: java.lang.Object sLock> = $r0;

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        <com.android.server.content.SyncJobService: android.util.SparseArray sJobParamsMap> = $r1;

        $r2 = new android.util.SparseBooleanArray;

        specialinvoke $r2.<android.util.SparseBooleanArray: void <init>()>();

        <com.android.server.content.SyncJobService: android.util.SparseBooleanArray sStartedSyncs> = $r2;

        $r3 = new android.util.SparseLongArray;

        specialinvoke $r3.<android.util.SparseLongArray: void <init>()>();

        <com.android.server.content.SyncJobService: android.util.SparseLongArray sJobStartUptimes> = $r3;

        $r4 = staticinvoke <com.android.server.content.SyncLogger: com.android.server.content.SyncLogger getInstance()>();

        <com.android.server.content.SyncJobService: com.android.server.content.SyncLogger sLogger> = $r4;

        return;
    }

    public void <init>()
    {
        com.android.server.content.SyncJobService r0;

        r0 := @this: com.android.server.content.SyncJobService;

        specialinvoke r0.<android.app.job.JobService: void <init>()>();

        return;
    }

    public static void callJobFinished(int, boolean, java.lang.String)
    {
        int i0;
        boolean z0;
        java.lang.String r0;
        com.android.server.content.SyncJobService r1;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0 := @parameter2: java.lang.String;

        r1 = staticinvoke <com.android.server.content.SyncJobService: com.android.server.content.SyncJobService getInstance()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.content.SyncJobService: void callJobFinishedInner(int,boolean,java.lang.String)>(i0, z0, r0);

     label1:
        return;
    }

    private static com.android.server.content.SyncJobService getInstance()
    {
        java.lang.Object r0;
        com.android.server.content.SyncJobService $r1, r3;
        java.lang.Throwable $r2;

        r0 = <com.android.server.content.SyncJobService: java.lang.Object sLock>;

        entermonitor r0;

     label1:
        $r1 = <com.android.server.content.SyncJobService: com.android.server.content.SyncJobService sInstance>;

        if $r1 != null goto label2;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("SyncManager", "sInstance == null");

     label2:
        r3 = <com.android.server.content.SyncJobService: com.android.server.content.SyncJobService sInstance>;

        exitmonitor r0;

     label3:
        return r3;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static boolean isReady()
    {
        java.lang.Object r0;
        com.android.server.content.SyncJobService $r2;
        java.lang.Throwable $r3;
        boolean z0;

        r0 = <com.android.server.content.SyncJobService: java.lang.Object sLock>;

        entermonitor r0;

     label1:
        $r2 = <com.android.server.content.SyncJobService: com.android.server.content.SyncJobService sInstance>;

        if $r2 == null goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r0;

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public static java.lang.String jobParametersToString(android.app.job.JobParameters)
    {
        android.app.job.JobParameters r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        java.lang.String $r8, $r14;
        android.os.PersistableBundle $r11;
        com.android.server.content.SyncOperation $r12;

        r0 := @parameter0: android.app.job.JobParameters;

        if r0 != null goto label1;

        return "job:null";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("job:#");

        $i0 = virtualinvoke r0.<android.app.job.JobParameters: int getJobId()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":sr=[");

        $i1 = virtualinvoke r0.<android.app.job.JobParameters: int getStopReason()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke r0.<android.app.job.JobParameters: java.lang.String getDebugStopReason()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]:");

        $r11 = virtualinvoke r0.<android.app.job.JobParameters: android.os.PersistableBundle getExtras()>();

        $r12 = staticinvoke <com.android.server.content.SyncOperation: com.android.server.content.SyncOperation maybeCreateFromJobExtras(android.os.PersistableBundle)>($r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public static void markSyncStarted(int)
    {
        int i0;
        java.lang.Object r0;
        android.util.SparseBooleanArray $r2;
        java.lang.Throwable $r3;

        i0 := @parameter0: int;

        r0 = <com.android.server.content.SyncJobService: java.lang.Object sLock>;

        entermonitor r0;

     label1:
        $r2 = <com.android.server.content.SyncJobService: android.util.SparseBooleanArray sStartedSyncs>;

        virtualinvoke $r2.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void updateInstance()
    {
        com.android.server.content.SyncJobService r0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.content.SyncJobService;

        entermonitor class "Lcom/android/server/content/SyncJobService;";

     label1:
        <com.android.server.content.SyncJobService: com.android.server.content.SyncJobService sInstance> = r0;

        exitmonitor class "Lcom/android/server/content/SyncJobService;";

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor class "Lcom/android/server/content/SyncJobService;";

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private static void wtf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Object[] $r1;
        com.android.server.content.SyncLogger $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.android.server.content.SyncJobService: com.android.server.content.SyncLogger sLogger>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r0;

        virtualinvoke $r2.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r1);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("SyncManager", r0);

        return;
    }

    public void callJobFinishedInner(int, boolean, java.lang.String)
    {
        com.android.server.content.SyncJobService r0;
        int i0;
        boolean z0;
        java.lang.Object r1, $r4;
        android.app.job.JobParameters r2;
        android.util.SparseArray $r3, $r15;
        java.lang.Object[] $r5;
        com.android.server.content.SyncLogger $r6, $r9;
        java.lang.Integer $r7;
        java.lang.Boolean $r8;
        java.lang.String $r10, $r12, $r14, r17;
        java.lang.Throwable $r16;
        java.lang.StringBuilder r18;

        r0 := @this: com.android.server.content.SyncJobService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r17 := @parameter2: java.lang.String;

        r1 = <com.android.server.content.SyncJobService: java.lang.Object sLock>;

        entermonitor r1;

     label01:
        $r3 = <com.android.server.content.SyncJobService: android.util.SparseArray sJobParamsMap>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.app.job.JobParameters) $r4;

        $r6 = <com.android.server.content.SyncJobService: com.android.server.content.SyncLogger sLogger>;

        $r5 = newarray (java.lang.Object)[9];

        $r5[0] = "callJobFinished()";

        $r5[1] = " jobid=";

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5[2] = $r7;

        $r5[3] = " needsReschedule=";

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r5[4] = $r8;

        $r5[5] = " ";

        $r9 = <com.android.server.content.SyncJobService: com.android.server.content.SyncLogger sLogger>;

        $r10 = virtualinvoke $r9.<com.android.server.content.SyncLogger: java.lang.String jobParametersToString(android.app.job.JobParameters)>(r2);

        $r5[6] = $r10;

        $r5[7] = " why=";

        $r5[8] = r17;

        virtualinvoke $r6.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r5);

     label02:
        if r2 == null goto label05;

     label03:
        virtualinvoke r0.<com.android.server.content.SyncJobService: void jobFinished(android.app.job.JobParameters,boolean)>(r2, z0);

        $r15 = <com.android.server.content.SyncJobService: android.util.SparseArray sJobParamsMap>;

        virtualinvoke $r15.<android.util.SparseArray: void remove(int)>(i0);

     label04:
        goto label06;

     label05:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job params not found for ");

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyncManager", $r14);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r16 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean onStartJob(android.app.job.JobParameters)
    {
        com.android.server.content.SyncJobService r0;
        int i0, $i1, $i2, $i5;
        com.android.server.content.SyncLogger $r1, $r5;
        android.os.PersistableBundle $r2;
        com.android.server.content.SyncStorageEngine$EndPoint $r3, $r13;
        java.lang.Object[] $r4;
        java.lang.Integer $r6;
        java.lang.Boolean $r7;
        android.util.SparseArray $r8;
        android.util.SparseBooleanArray $r9;
        android.util.SparseLongArray $r10;
        long $l3;
        java.lang.StringBuilder $r11, $r16;
        java.lang.String $r15, $r19;
        boolean $z0, $z1, z2, z3;
        java.lang.Throwable $r20;
        android.app.job.JobParameters r21;
        com.android.server.content.SyncOperation r22;
        java.lang.Object r24;
        android.os.Message r25;

        r0 := @this: com.android.server.content.SyncJobService;

        r21 := @parameter0: android.app.job.JobParameters;

        specialinvoke r0.<com.android.server.content.SyncJobService: void updateInstance()>();

        $r1 = <com.android.server.content.SyncJobService: com.android.server.content.SyncLogger sLogger>;

        virtualinvoke $r1.<com.android.server.content.SyncLogger: void purgeOldLogs()>();

        $r2 = virtualinvoke r21.<android.app.job.JobParameters: android.os.PersistableBundle getExtras()>();

        r22 = staticinvoke <com.android.server.content.SyncOperation: com.android.server.content.SyncOperation maybeCreateFromJobExtras(android.os.PersistableBundle)>($r2);

        if r22 != null goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got invalid job ");

        $i5 = virtualinvoke r21.<android.app.job.JobParameters: int getJobId()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("SyncManager", $r19);

        return 0;

     label1:
        $r3 = r22.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $i1 = $r3.<com.android.server.content.SyncStorageEngine$EndPoint: int userId>;

        z2 = staticinvoke <com.android.server.content.SyncManager: boolean readyToSync(int)>($i1);

        $r5 = <com.android.server.content.SyncJobService: com.android.server.content.SyncLogger sLogger>;

        $r4 = newarray (java.lang.Object)[6];

        $r4[0] = "onStartJob() jobid=";

        $i2 = virtualinvoke r21.<android.app.job.JobParameters: int getJobId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[1] = $r6;

        $r4[2] = " op=";

        $r4[3] = r22;

        $r4[4] = " readyToSync";

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        $r4[5] = $r7;

        virtualinvoke $r5.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r4);

        if z2 != 0 goto label2;

        $z0 = r22.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        $z1 = $z0 ^ 1;

        virtualinvoke r0.<com.android.server.content.SyncJobService: void jobFinished(android.app.job.JobParameters,boolean)>(r21, $z1);

        return 1;

     label2:
        z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        r24 = <com.android.server.content.SyncJobService: java.lang.Object sLock>;

        entermonitor r24;

     label3:
        i0 = virtualinvoke r21.<android.app.job.JobParameters: int getJobId()>();

        $r8 = <com.android.server.content.SyncJobService: android.util.SparseArray sJobParamsMap>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r21);

        $r9 = <com.android.server.content.SyncJobService: android.util.SparseBooleanArray sStartedSyncs>;

        virtualinvoke $r9.<android.util.SparseBooleanArray: void delete(int)>(i0);

        $r10 = <com.android.server.content.SyncJobService: android.util.SparseLongArray sJobStartUptimes>;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r10.<android.util.SparseLongArray: void put(int,long)>(i0, $l3);

        exitmonitor r24;

     label4:
        r25 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r25.<android.os.Message: int what> = 10;

        if z3 == 0 goto label5;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got start job message ");

        $r13 = r22.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", $r15);

     label5:
        r25.<android.os.Message: java.lang.Object obj> = r22;

        staticinvoke <com.android.server.content.SyncManager: void sendMessage(android.os.Message)>(r25);

        return 1;

     label6:
        $r20 := @caughtexception;

     label7:
        exitmonitor r24;

     label8:
        throw $r20;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean onStopJob(android.app.job.JobParameters)
    {
        com.android.server.content.SyncJobService r0;
        boolean z0, $z1, $z2;
        long l1, l2, $l4;
        android.os.PersistableBundle $r1;
        com.android.server.content.SyncStorageEngine$EndPoint $r2;
        int $i3, $i6, $i7, $i9, $i10, i12, $i13;
        java.lang.Object[] $r3;
        java.lang.Boolean $r4;
        android.util.SparseArray $r5;
        android.util.SparseLongArray $r6, $r38;
        byte $b5, b14, b15;
        android.util.SparseBooleanArray $r7, $r37;
        java.lang.String $r15, $r17, $r21, $r27, r34;
        java.lang.StringBuilder $r18, $r22, r36;
        java.lang.Throwable $r28;
        android.app.job.JobParameters r29;
        com.android.server.content.SyncOperation r31;
        com.android.server.content.SyncLogger r33;
        java.lang.Object r35;
        android.os.Message r39;

        r0 := @this: com.android.server.content.SyncJobService;

        r29 := @parameter0: android.app.job.JobParameters;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z1 == 0 goto label01;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onStopJob called ");

        $i9 = virtualinvoke r29.<android.app.job.JobParameters: int getJobId()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reason: ");

        $i10 = virtualinvoke r29.<android.app.job.JobParameters: int getStopReason()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", $r27);

     label01:
        $r1 = virtualinvoke r29.<android.app.job.JobParameters: android.os.PersistableBundle getExtras()>();

        r31 = staticinvoke <com.android.server.content.SyncOperation: com.android.server.content.SyncOperation maybeCreateFromJobExtras(android.os.PersistableBundle)>($r1);

        if r31 != null goto label02;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got invalid job ");

        $i7 = virtualinvoke r29.<android.app.job.JobParameters: int getJobId()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("SyncManager", $r21);

        return 0;

     label02:
        $r2 = r31.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $i3 = $r2.<com.android.server.content.SyncStorageEngine$EndPoint: int userId>;

        z0 = staticinvoke <com.android.server.content.SyncManager: boolean readyToSync(int)>($i3);

        r33 = <com.android.server.content.SyncJobService: com.android.server.content.SyncLogger sLogger>;

        r34 = virtualinvoke r33.<com.android.server.content.SyncLogger: java.lang.String jobParametersToString(android.app.job.JobParameters)>(r29);

        $r3 = newarray (java.lang.Object)[4];

        $r3[0] = "onStopJob() ";

        $r3[1] = r34;

        $r3[2] = " readyToSync=";

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r3[3] = $r4;

        virtualinvoke r33.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r3);

        r35 = <com.android.server.content.SyncJobService: java.lang.Object sLock>;

        entermonitor r35;

     label03:
        i12 = virtualinvoke r29.<android.app.job.JobParameters: int getJobId()>();

        $r5 = <com.android.server.content.SyncJobService: android.util.SparseArray sJobParamsMap>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i12);

        $r6 = <com.android.server.content.SyncJobService: android.util.SparseLongArray sJobStartUptimes>;

        l1 = virtualinvoke $r6.<android.util.SparseLongArray: long get(int)>(i12);

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label04:
        $l4 = l2 - l1;

        $b5 = $l4 cmp 60000L;

        if $b5 <= 0 goto label06;

        if z0 == 0 goto label06;

     label05:
        $r7 = <com.android.server.content.SyncJobService: android.util.SparseBooleanArray sStartedSyncs>;

        $z2 = virtualinvoke $r7.<android.util.SparseBooleanArray: boolean get(int)>(i12);

        if $z2 != 0 goto label06;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job ");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" didn\'t start:  startUptime=");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nowUptime=");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" params=");

        $r15 = staticinvoke <com.android.server.content.SyncJobService: java.lang.String jobParametersToString(android.app.job.JobParameters)>(r29);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.content.SyncJobService: void wtf(java.lang.String)>($r17);

     label06:
        $r37 = <com.android.server.content.SyncJobService: android.util.SparseBooleanArray sStartedSyncs>;

        virtualinvoke $r37.<android.util.SparseBooleanArray: void delete(int)>(i12);

        $r38 = <com.android.server.content.SyncJobService: android.util.SparseLongArray sJobStartUptimes>;

        virtualinvoke $r38.<android.util.SparseLongArray: void delete(int)>(i12);

        exitmonitor r35;

     label07:
        r39 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r39.<android.os.Message: int what> = 11;

        r39.<android.os.Message: java.lang.Object obj> = r31;

        $i13 = virtualinvoke r29.<android.app.job.JobParameters: int getStopReason()>();

        if $i13 == 0 goto label08;

        b14 = 1;

        goto label09;

     label08:
        b14 = 0;

     label09:
        r39.<android.os.Message: int arg1> = b14;

        $i6 = virtualinvoke r29.<android.app.job.JobParameters: int getStopReason()>();

        if $i6 != 3 goto label10;

        b15 = 1;

        goto label11;

     label10:
        b15 = 0;

     label11:
        r39.<android.os.Message: int arg2> = b15;

        staticinvoke <com.android.server.content.SyncManager: void sendMessage(android.os.Message)>(r39);

        return 0;

     label12:
        $r28 := @caughtexception;

     label13:
        exitmonitor r35;

     label14:
        throw $r28;

        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }
}
