public class com.android.server.content.SyncManager extends java.lang.Object
{
    private static final boolean DEBUG_ACCOUNT_ACCESS;
    private static final int DELAY_RETRY_SYNC_IN_PROGRESS_IN_SECONDS;
    private static final boolean ENABLE_SUSPICIOUS_CHECK;
    private static final java.lang.String HANDLE_SYNC_ALARM_WAKE_LOCK;
    private static final android.accounts.AccountAndUser[] INITIAL_ACCOUNTS_ARRAY;
    private static final long LOCAL_SYNC_DELAY;
    private static final int MAX_SYNC_JOB_ID;
    private static final int MIN_SYNC_JOB_ID;
    private static final int SYNC_ADAPTER_CONNECTION_FLAGS;
    private static final long SYNC_DELAY_ON_CONFLICT;
    private static final long SYNC_DELAY_ON_LOW_STORAGE;
    private static final java.lang.String SYNC_LOOP_WAKE_LOCK;
    private static final int SYNC_MONITOR_PROGRESS_THRESHOLD_BYTES;
    private static final long SYNC_MONITOR_WINDOW_LENGTH_MILLIS;
    private static final int SYNC_OP_STATE_INVALID_NOT_SYNCABLE;
    private static final int SYNC_OP_STATE_INVALID_NO_ACCOUNT;
    private static final int SYNC_OP_STATE_INVALID_NO_ACCOUNT_ACCESS;
    private static final int SYNC_OP_STATE_INVALID_SYNC_DISABLED;
    private static final int SYNC_OP_STATE_VALID;
    private static final java.lang.String SYNC_WAKE_LOCK_PREFIX;
    static final java.lang.String TAG;
    private static com.android.server.content.SyncManager sInstance;
    private static final java.util.Comparator sOpDumpComparator;
    private static final java.util.Comparator sOpRuntimeComparator;
    private final android.accounts.AccountManager mAccountManager;
    private final android.accounts.AccountManagerInternal mAccountManagerInternal;
    private final android.content.BroadcastReceiver mAccountsUpdatedReceiver;
    protected final java.util.ArrayList mActiveSyncContexts;
    private final com.android.internal.app.IBatteryStats mBatteryStats;
    private android.net.ConnectivityManager mConnManagerDoNotUseDirectly;
    private android.content.BroadcastReceiver mConnectivityIntentReceiver;
    private final com.android.server.content.SyncManagerConstants mConstants;
    private android.content.Context mContext;
    private volatile boolean mDataConnectionIsConnected;
    private volatile boolean mDeviceIsIdle;
    private android.app.job.JobScheduler mJobScheduler;
    private com.android.server.job.JobSchedulerInternal mJobSchedulerInternal;
    private final com.android.server.content.SyncLogger mLogger;
    private final android.app.NotificationManager mNotificationMgr;
    private final android.content.BroadcastReceiver mOtherIntentsReceiver;
    private final android.content.pm.PackageManagerInternal mPackageManagerInternal;
    private final android.os.PowerManager mPowerManager;
    private volatile boolean mProvisioned;
    private final java.util.Random mRand;
    private volatile boolean mReportedSyncActive;
    private volatile android.accounts.AccountAndUser[] mRunningAccounts;
    private android.content.BroadcastReceiver mShutdownIntentReceiver;
    private final android.content.BroadcastReceiver mStorageIntentReceiver;
    private volatile boolean mStorageIsLow;
    protected final android.content.SyncAdaptersCache mSyncAdapters;
    private final com.android.server.content.SyncManager$SyncHandler mSyncHandler;
    private volatile android.os.PowerManager$WakeLock mSyncManagerWakeLock;
    private com.android.server.content.SyncStorageEngine mSyncStorageEngine;
    private final android.os.HandlerThread mThread;
    private final android.util.SparseBooleanArray mUnlockedUsers;
    private android.content.BroadcastReceiver mUserIntentReceiver;
    private final android.os.UserManager mUserManager;

    static void <clinit>()
    {
        boolean $z0;
        long $l0;
        android.accounts.AccountAndUser[] $r0;
        com.android.server.content.'-$$Lambda$SyncManager$bVs0A6OYdmGkOiq_lbp5MiBwelw' $r1;
        com.android.server.content.'-$$Lambda$SyncManager$68MEyNkTh36YmYoFlURJoRa_-cY' $r2;
        java.util.Comparator r3, r4;

        <com.android.server.content.SyncManager: java.lang.String TAG> = "SyncManager";

        <com.android.server.content.SyncManager: java.lang.String SYNC_WAKE_LOCK_PREFIX> = "*sync*/";

        <com.android.server.content.SyncManager: int SYNC_OP_STATE_VALID> = 0;

        <com.android.server.content.SyncManager: int SYNC_OP_STATE_INVALID_SYNC_DISABLED> = 5;

        <com.android.server.content.SyncManager: int SYNC_OP_STATE_INVALID_NO_ACCOUNT_ACCESS> = 2;

        <com.android.server.content.SyncManager: int SYNC_OP_STATE_INVALID_NO_ACCOUNT> = 3;

        <com.android.server.content.SyncManager: int SYNC_OP_STATE_INVALID_NOT_SYNCABLE> = 4;

        <com.android.server.content.SyncManager: long SYNC_MONITOR_WINDOW_LENGTH_MILLIS> = 60000L;

        <com.android.server.content.SyncManager: int SYNC_MONITOR_PROGRESS_THRESHOLD_BYTES> = 10;

        <com.android.server.content.SyncManager: java.lang.String SYNC_LOOP_WAKE_LOCK> = "SyncLoopWakeLock";

        <com.android.server.content.SyncManager: long SYNC_DELAY_ON_LOW_STORAGE> = 3600000L;

        <com.android.server.content.SyncManager: long SYNC_DELAY_ON_CONFLICT> = 10000L;

        <com.android.server.content.SyncManager: int SYNC_ADAPTER_CONNECTION_FLAGS> = 21;

        <com.android.server.content.SyncManager: int MIN_SYNC_JOB_ID> = 100000;

        <com.android.server.content.SyncManager: int MAX_SYNC_JOB_ID> = 110000;

        <com.android.server.content.SyncManager: java.lang.String HANDLE_SYNC_ALARM_WAKE_LOCK> = "SyncManagerHandleSyncAlarm";

        <com.android.server.content.SyncManager: int DELAY_RETRY_SYNC_IN_PROGRESS_IN_SECONDS> = 10;

        <com.android.server.content.SyncManager: boolean DEBUG_ACCOUNT_ACCESS> = 0;

        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        <com.android.server.content.SyncManager: boolean ENABLE_SUSPICIOUS_CHECK> = $z0;

        $l0 = staticinvoke <android.os.SystemProperties: long getLong(java.lang.String,long)>("sync.local_sync_delay", 30000L);

        <com.android.server.content.SyncManager: long LOCAL_SYNC_DELAY> = $l0;

        $r0 = newarray (android.accounts.AccountAndUser)[0];

        <com.android.server.content.SyncManager: android.accounts.AccountAndUser[] INITIAL_ACCOUNTS_ARRAY> = $r0;

        $r1 = <com.android.server.content._$$Lambda$SyncManager$bVs0A6OYdmGkOiq_lbp5MiBwelw: com.android.server.content.'-$$Lambda$SyncManager$bVs0A6OYdmGkOiq_lbp5MiBwelw' INSTANCE>;

        r3 = (java.util.Comparator) $r1;

        <com.android.server.content.SyncManager: java.util.Comparator sOpDumpComparator> = r3;

        $r2 = <com.android.server.content._$$Lambda$SyncManager$68MEyNkTh36YmYoFlURJoRa__cY: com.android.server.content.'-$$Lambda$SyncManager$68MEyNkTh36YmYoFlURJoRa_-cY' INSTANCE>;

        r4 = (java.util.Comparator) $r2;

        <com.android.server.content.SyncManager: java.util.Comparator sOpRuntimeComparator> = r4;

        return;
    }

    public void <init>(android.content.Context, boolean)
    {
        com.android.server.content.SyncManager r0, $r11;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.accounts.AccountAndUser[] $r2;
        java.util.ArrayList $r3;
        com.android.server.content.SyncManager$1 $r4;
        com.android.server.content.SyncManager$2 $r5;
        com.android.server.content.SyncManager$3 $r6;
        com.android.server.content.SyncManager$4 $r7;
        com.android.server.content.SyncManager$5 $r8;
        com.android.server.content.SyncManager$6 $r9;
        android.util.SparseBooleanArray $r10;
        com.android.server.content.SyncLogger $r12, r95;
        com.android.internal.os.BackgroundThread $r13;
        android.os.Looper $r14, $r25;
        com.android.server.content.SyncManager$8 $r15;
        com.android.server.content.SyncManager$9 $r16;
        com.android.server.content.SyncStorageEngine $r17, $r19, r85;
        com.android.server.content.SyncManager$10 $r18;
        android.content.SyncAdaptersCache $r20, $r27;
        android.content.Context $r21, $r43, $r50, $r53, $r74, r84;
        android.os.HandlerThread $r22, $r24;
        com.android.server.content.SyncManager$SyncHandler $r23, $r28, r93;
        com.android.server.content.SyncManager$11 $r26;
        java.util.Random $r29;
        long $l1;
        com.android.server.content.SyncManagerConstants $r30;
        android.content.IntentFilter $r31, $r34, $r37, $r40, $r45, $r73;
        android.content.BroadcastReceiver $r32, $r35, $r38, $r42, $r46, $r75;
        android.os.UserHandle $r41, $r76;
        java.lang.Object $r48, $r51, $r54, $r56, $r58, $r80;
        android.os.PowerManager $r49, $r64;
        android.os.UserManager $r52;
        android.accounts.AccountManager $r55;
        android.accounts.AccountManagerInternal $r57, $r61;
        android.content.pm.PackageManagerInternal $r59;
        com.android.server.content._$$Lambda$SyncManager$HhiSFjEoPA_Hnv3xYZGfwkalc68 $r60;
        android.os.IBinder $r62;
        com.android.internal.app.IBatteryStats $r63;
        android.os.PowerManager$WakeLock $r65, $r66;
        java.lang.StringBuilder $r67;
        java.lang.String $r69, $r72;
        java.lang.Object[] $r71;
        com.android.server.content.SyncManager$12 $r78;
        android.net.Uri $r79;
        android.app.NotificationManager $r81;
        java.lang.Throwable $r82, $r83;
        android.content.ContentResolver r92;

        r0 := @this: com.android.server.content.SyncManager;

        r84 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <com.android.server.content.SyncManager: android.accounts.AccountAndUser[] INITIAL_ACCOUNTS_ARRAY>;

        r0.<com.android.server.content.SyncManager: android.accounts.AccountAndUser[] mRunningAccounts> = $r2;

        r0.<com.android.server.content.SyncManager: boolean mDataConnectionIsConnected> = 0;

        r0.<com.android.server.content.SyncManager: boolean mStorageIsLow> = 0;

        r0.<com.android.server.content.SyncManager: boolean mDeviceIsIdle> = 0;

        r0.<com.android.server.content.SyncManager: boolean mReportedSyncActive> = 0;

        $r3 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        r0.<com.android.server.content.SyncManager: java.util.ArrayList mActiveSyncContexts> = $r3;

        $r4 = new com.android.server.content.SyncManager$1;

        specialinvoke $r4.<com.android.server.content.SyncManager$1: void <init>(com.android.server.content.SyncManager)>(r0);

        r0.<com.android.server.content.SyncManager: android.content.BroadcastReceiver mStorageIntentReceiver> = $r4;

        $r5 = new com.android.server.content.SyncManager$2;

        specialinvoke $r5.<com.android.server.content.SyncManager$2: void <init>(com.android.server.content.SyncManager)>(r0);

        r0.<com.android.server.content.SyncManager: android.content.BroadcastReceiver mAccountsUpdatedReceiver> = $r5;

        $r6 = new com.android.server.content.SyncManager$3;

        specialinvoke $r6.<com.android.server.content.SyncManager$3: void <init>(com.android.server.content.SyncManager)>(r0);

        r0.<com.android.server.content.SyncManager: android.content.BroadcastReceiver mConnectivityIntentReceiver> = $r6;

        $r7 = new com.android.server.content.SyncManager$4;

        specialinvoke $r7.<com.android.server.content.SyncManager$4: void <init>(com.android.server.content.SyncManager)>(r0);

        r0.<com.android.server.content.SyncManager: android.content.BroadcastReceiver mShutdownIntentReceiver> = $r7;

        $r8 = new com.android.server.content.SyncManager$5;

        specialinvoke $r8.<com.android.server.content.SyncManager$5: void <init>(com.android.server.content.SyncManager)>(r0);

        r0.<com.android.server.content.SyncManager: android.content.BroadcastReceiver mOtherIntentsReceiver> = $r8;

        $r9 = new com.android.server.content.SyncManager$6;

        specialinvoke $r9.<com.android.server.content.SyncManager$6: void <init>(com.android.server.content.SyncManager)>(r0);

        r0.<com.android.server.content.SyncManager: android.content.BroadcastReceiver mUserIntentReceiver> = $r9;

        $r10 = new android.util.SparseBooleanArray;

        specialinvoke $r10.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.content.SyncManager: android.util.SparseBooleanArray mUnlockedUsers> = $r10;

        entermonitor class "Lcom/android/server/content/SyncManager;";

     label01:
        $r11 = <com.android.server.content.SyncManager: com.android.server.content.SyncManager sInstance>;

        if $r11 != null goto label03;

        <com.android.server.content.SyncManager: com.android.server.content.SyncManager sInstance> = r0;

     label02:
        goto label04;

     label03:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("SyncManager", "SyncManager instantiated multiple times");

     label04:
        exitmonitor class "Lcom/android/server/content/SyncManager;";

     label05:
        r0.<com.android.server.content.SyncManager: android.content.Context mContext> = r84;

        $r12 = staticinvoke <com.android.server.content.SyncLogger: com.android.server.content.SyncLogger getInstance()>();

        r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger> = $r12;

        $r13 = staticinvoke <com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread get()>();

        $r14 = virtualinvoke $r13.<com.android.internal.os.BackgroundThread: android.os.Looper getLooper()>();

        staticinvoke <com.android.server.content.SyncStorageEngine: void init(android.content.Context,android.os.Looper)>(r84, $r14);

        r85 = staticinvoke <com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine getSingleton()>();

        r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine> = r85;

        $r15 = new com.android.server.content.SyncManager$8;

        specialinvoke $r15.<com.android.server.content.SyncManager$8: void <init>(com.android.server.content.SyncManager)>(r0);

        virtualinvoke r85.<com.android.server.content.SyncStorageEngine: void setOnSyncRequestListener(com.android.server.content.SyncStorageEngine$OnSyncRequestListener)>($r15);

        $r17 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $r16 = new com.android.server.content.SyncManager$9;

        specialinvoke $r16.<com.android.server.content.SyncManager$9: void <init>(com.android.server.content.SyncManager)>(r0);

        virtualinvoke $r17.<com.android.server.content.SyncStorageEngine: void setPeriodicSyncAddedListener(com.android.server.content.SyncStorageEngine$PeriodicSyncAddedListener)>($r16);

        $r19 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $r18 = new com.android.server.content.SyncManager$10;

        specialinvoke $r18.<com.android.server.content.SyncManager$10: void <init>(com.android.server.content.SyncManager)>(r0);

        virtualinvoke $r19.<com.android.server.content.SyncStorageEngine: void setOnAuthorityRemovedListener(com.android.server.content.SyncStorageEngine$OnAuthorityRemovedListener)>($r18);

        $r20 = new android.content.SyncAdaptersCache;

        $r21 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        specialinvoke $r20.<android.content.SyncAdaptersCache: void <init>(android.content.Context)>($r21);

        r0.<com.android.server.content.SyncManager: android.content.SyncAdaptersCache mSyncAdapters> = $r20;

        $r22 = new android.os.HandlerThread;

        specialinvoke $r22.<android.os.HandlerThread: void <init>(java.lang.String,int)>("SyncManager", 10);

        r0.<com.android.server.content.SyncManager: android.os.HandlerThread mThread> = $r22;

        virtualinvoke $r22.<android.os.HandlerThread: void start()>();

        $r23 = new com.android.server.content.SyncManager$SyncHandler;

        $r24 = r0.<com.android.server.content.SyncManager: android.os.HandlerThread mThread>;

        $r25 = virtualinvoke $r24.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r23.<com.android.server.content.SyncManager$SyncHandler: void <init>(com.android.server.content.SyncManager,android.os.Looper)>(r0, $r25);

        r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler> = $r23;

        $r27 = r0.<com.android.server.content.SyncManager: android.content.SyncAdaptersCache mSyncAdapters>;

        $r26 = new com.android.server.content.SyncManager$11;

        specialinvoke $r26.<com.android.server.content.SyncManager$11: void <init>(com.android.server.content.SyncManager)>(r0);

        $r28 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        virtualinvoke $r27.<android.content.SyncAdaptersCache: void setListener(android.content.pm.RegisteredServicesCacheListener,android.os.Handler)>($r26, $r28);

        $r29 = new java.util.Random;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r29.<java.util.Random: void <init>(long)>($l1);

        r0.<com.android.server.content.SyncManager: java.util.Random mRand> = $r29;

        $r30 = new com.android.server.content.SyncManagerConstants;

        specialinvoke $r30.<com.android.server.content.SyncManagerConstants: void <init>(android.content.Context)>(r84);

        r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManagerConstants mConstants> = $r30;

        $r31 = new android.content.IntentFilter;

        specialinvoke $r31.<android.content.IntentFilter: void <init>(java.lang.String)>("android.net.conn.CONNECTIVITY_CHANGE");

        $r32 = r0.<com.android.server.content.SyncManager: android.content.BroadcastReceiver mConnectivityIntentReceiver>;

        virtualinvoke r84.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r32, $r31);

        $r34 = new android.content.IntentFilter;

        specialinvoke $r34.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.DEVICE_STORAGE_LOW");

        virtualinvoke $r34.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DEVICE_STORAGE_OK");

        $r35 = r0.<com.android.server.content.SyncManager: android.content.BroadcastReceiver mStorageIntentReceiver>;

        virtualinvoke r84.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r35, $r34);

        $r37 = new android.content.IntentFilter;

        specialinvoke $r37.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.ACTION_SHUTDOWN");

        virtualinvoke $r37.<android.content.IntentFilter: void setPriority(int)>(100);

        $r38 = r0.<com.android.server.content.SyncManager: android.content.BroadcastReceiver mShutdownIntentReceiver>;

        virtualinvoke r84.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r38, $r37);

        $r40 = new android.content.IntentFilter;

        specialinvoke $r40.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r40.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_REMOVED");

        virtualinvoke $r40.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_UNLOCKED");

        virtualinvoke $r40.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_STOPPED");

        $r43 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        $r42 = r0.<com.android.server.content.SyncManager: android.content.BroadcastReceiver mUserIntentReceiver>;

        $r41 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r43.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r42, $r41, $r40, null, null);

        $r45 = new android.content.IntentFilter;

        specialinvoke $r45.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.TIME_SET");

        $r46 = r0.<com.android.server.content.SyncManager: android.content.BroadcastReceiver mOtherIntentsReceiver>;

        virtualinvoke r84.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r46, $r45);

        if z0 != 0 goto label06;

        $r80 = virtualinvoke r84.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("notification");

        $r81 = (android.app.NotificationManager) $r80;

        r0.<com.android.server.content.SyncManager: android.app.NotificationManager mNotificationMgr> = $r81;

        goto label07;

     label06:
        r0.<com.android.server.content.SyncManager: android.app.NotificationManager mNotificationMgr> = null;

     label07:
        $r48 = virtualinvoke r84.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r49 = (android.os.PowerManager) $r48;

        r0.<com.android.server.content.SyncManager: android.os.PowerManager mPowerManager> = $r49;

        $r50 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        $r51 = virtualinvoke $r50.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r52 = (android.os.UserManager) $r51;

        r0.<com.android.server.content.SyncManager: android.os.UserManager mUserManager> = $r52;

        $r53 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        $r54 = virtualinvoke $r53.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("account");

        $r55 = (android.accounts.AccountManager) $r54;

        r0.<com.android.server.content.SyncManager: android.accounts.AccountManager mAccountManager> = $r55;

        $r56 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/accounts/AccountManagerInternal;");

        $r57 = (android.accounts.AccountManagerInternal) $r56;

        r0.<com.android.server.content.SyncManager: android.accounts.AccountManagerInternal mAccountManagerInternal> = $r57;

        $r58 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r59 = (android.content.pm.PackageManagerInternal) $r58;

        r0.<com.android.server.content.SyncManager: android.content.pm.PackageManagerInternal mPackageManagerInternal> = $r59;

        $r61 = r0.<com.android.server.content.SyncManager: android.accounts.AccountManagerInternal mAccountManagerInternal>;

        $r60 = new com.android.server.content._$$Lambda$SyncManager$HhiSFjEoPA_Hnv3xYZGfwkalc68;

        specialinvoke $r60.<com.android.server.content._$$Lambda$SyncManager$HhiSFjEoPA_Hnv3xYZGfwkalc68: void <init>(com.android.server.content.SyncManager)>(r0);

        virtualinvoke $r61.<android.accounts.AccountManagerInternal: void addOnAppPermissionChangeListener(android.accounts.AccountManagerInternal$OnAppPermissionChangeListener)>($r60);

        $r62 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("batterystats");

        $r63 = staticinvoke <com.android.internal.app.IBatteryStats$Stub: com.android.internal.app.IBatteryStats asInterface(android.os.IBinder)>($r62);

        r0.<com.android.server.content.SyncManager: com.android.internal.app.IBatteryStats mBatteryStats> = $r63;

        $r64 = r0.<com.android.server.content.SyncManager: android.os.PowerManager mPowerManager>;

        $r65 = virtualinvoke $r64.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "SyncLoopWakeLock");

        r0.<com.android.server.content.SyncManager: android.os.PowerManager$WakeLock mSyncManagerWakeLock> = $r65;

        $r66 = r0.<com.android.server.content.SyncManager: android.os.PowerManager$WakeLock mSyncManagerWakeLock>;

        virtualinvoke $r66.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        $z1 = specialinvoke r0.<com.android.server.content.SyncManager: boolean isDeviceProvisioned()>();

        r0.<com.android.server.content.SyncManager: boolean mProvisioned> = $z1;

        $z2 = r0.<com.android.server.content.SyncManager: boolean mProvisioned>;

        if $z2 != 0 goto label14;

        r92 = virtualinvoke r84.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r78 = new com.android.server.content.SyncManager$12;

        specialinvoke $r78.<com.android.server.content.SyncManager$12: void <init>(com.android.server.content.SyncManager,android.os.Handler,android.content.ContentResolver)>(r0, null, r92);

        r93 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        entermonitor r93;

     label08:
        $r79 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("device_provisioned");

        virtualinvoke r92.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r79, 0, $r78);

        $z3 = r0.<com.android.server.content.SyncManager: boolean mProvisioned>;

        $z4 = specialinvoke r0.<com.android.server.content.SyncManager: boolean isDeviceProvisioned()>();

        $z5 = $z3 | $z4;

        r0.<com.android.server.content.SyncManager: boolean mProvisioned> = $z5;

        $z6 = r0.<com.android.server.content.SyncManager: boolean mProvisioned>;

        if $z6 == 0 goto label09;

        virtualinvoke r92.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r78);

     label09:
        exitmonitor r93;

     label10:
        goto label14;

     label11:
        $r82 := @caughtexception;

     label12:
        exitmonitor r93;

     label13:
        throw $r82;

     label14:
        if z0 != 0 goto label15;

        $r74 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        $r75 = r0.<com.android.server.content.SyncManager: android.content.BroadcastReceiver mAccountsUpdatedReceiver>;

        $r76 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r73 = new android.content.IntentFilter;

        specialinvoke $r73.<android.content.IntentFilter: void <init>(java.lang.String)>("android.accounts.LOGIN_ACCOUNTS_CHANGED");

        virtualinvoke $r74.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r75, $r76, $r73, null, null);

     label15:
        specialinvoke r0.<com.android.server.content.SyncManager: void whiteListExistingSyncAdaptersIfNeeded()>();

        r95 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sync manager initialized: ");

        $r69 = <android.os.Build: java.lang.String FINGERPRINT>;

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = newarray (java.lang.Object)[1];

        $r72 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        $r71[0] = $r72;

        virtualinvoke r95.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r71);

        return;

     label16:
        $r83 := @caughtexception;

     label17:
        exitmonitor class "Lcom/android/server/content/SyncManager;";

     label18:
        throw $r83;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    static boolean access$000(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $z0 = r0.<com.android.server.content.SyncManager: boolean mStorageIsLow>;

        return $z0;
    }

    static boolean access$002(com.android.server.content.SyncManager, boolean)
    {
        com.android.server.content.SyncManager r0;
        boolean z0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        z0 := @parameter1: boolean;

        r0.<com.android.server.content.SyncManager: boolean mStorageIsLow> = z0;

        return z0;
    }

    static void access$100(com.android.server.content.SyncManager, com.android.server.content.SyncStorageEngine$EndPoint, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncStorageEngine$EndPoint;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.content.SyncManager: void rescheduleSyncs(com.android.server.content.SyncStorageEngine$EndPoint,java.lang.String)>(r1, r2);

        return;
    }

    static void access$1000(com.android.server.content.SyncManager, int)
    {
        com.android.server.content.SyncManager r0;
        int i0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.content.SyncManager: void onUserUnlocked(int)>(i0);

        return;
    }

    static void access$1100(com.android.server.content.SyncManager, int)
    {
        com.android.server.content.SyncManager r0;
        int i0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.content.SyncManager: void onUserStopped(int)>(i0);

        return;
    }

    static java.util.List access$1200(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $r1 = specialinvoke r0.<com.android.server.content.SyncManager: java.util.List getAllPendingSyncs()>();

        return $r1;
    }

    static void access$1300(com.android.server.content.SyncManager, com.android.server.content.SyncOperation, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncOperation r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncOperation;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.content.SyncManager: void cancelJob(com.android.server.content.SyncOperation,java.lang.String)>(r1, r2);

        return;
    }

    static void access$1400(com.android.server.content.SyncManager, com.android.server.content.SyncStorageEngine$EndPoint, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncStorageEngine$EndPoint;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.content.SyncManager: void removeSyncsForAuthority(com.android.server.content.SyncStorageEngine$EndPoint,java.lang.String)>(r1, r2);

        return;
    }

    static boolean access$1500(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $z0 = r0.<com.android.server.content.SyncManager: boolean mProvisioned>;

        return $z0;
    }

    static boolean access$1576(com.android.server.content.SyncManager, int)
    {
        com.android.server.content.SyncManager r0;
        int i0, $i2, i3;
        byte b1;
        boolean $z0, z2, z3;

        r0 := @parameter0: com.android.server.content.SyncManager;

        i0 := @parameter1: int;

        $z0 = r0.<com.android.server.content.SyncManager: boolean mProvisioned>;

        i3 = (int) $z0;

        $i2 = i3 | i0;

        b1 = (byte) $i2;

        z2 = (boolean) b1;

        r0.<com.android.server.content.SyncManager: boolean mProvisioned> = z2;

        z3 = (boolean) b1;

        return z3;
    }

    static boolean access$1600(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $z0 = specialinvoke r0.<com.android.server.content.SyncManager: boolean isDeviceProvisioned()>();

        return $z0;
    }

    static com.android.server.content.SyncManager$SyncHandler access$1700(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncManager$SyncHandler $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        return $r1;
    }

    static void access$1900(com.android.server.content.SyncManager, com.android.server.content.SyncManager$ActiveSyncContext, android.content.SyncResult)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncManager$ActiveSyncContext r1;
        android.content.SyncResult r2;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncManager$ActiveSyncContext;

        r2 := @parameter2: android.content.SyncResult;

        specialinvoke r0.<com.android.server.content.SyncManager: void sendSyncFinishedOrCanceledMessage(com.android.server.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>(r1, r2);

        return;
    }

    static void access$200(com.android.server.content.SyncManager, com.android.server.content.SyncStorageEngine$EndPoint)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke r0.<com.android.server.content.SyncManager: void updateRunningAccounts(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        return;
    }

    static android.content.Context access$2000(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        return $r1;
    }

    static com.android.internal.app.IBatteryStats access$2100(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        com.android.internal.app.IBatteryStats $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: com.android.internal.app.IBatteryStats mBatteryStats>;

        return $r1;
    }

    static android.os.PowerManager$WakeLock access$2600(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: android.os.PowerManager$WakeLock mSyncManagerWakeLock>;

        return $r1;
    }

    static void access$2700(com.android.server.content.SyncManager, com.android.server.content.SyncOperation, long)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncOperation r1;
        long l0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncOperation;

        l0 := @parameter2: long;

        specialinvoke r0.<com.android.server.content.SyncManager: void scheduleSyncOperationH(com.android.server.content.SyncOperation,long)>(r1, l0);

        return;
    }

    static void access$2800(com.android.server.content.SyncManager, com.android.server.content.SyncStorageEngine$EndPoint)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke r0.<com.android.server.content.SyncManager: void increaseBackoffSetting(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        return;
    }

    static boolean access$2900(com.android.server.content.SyncManager, com.android.server.content.SyncManager$ActiveSyncContext)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncManager$ActiveSyncContext r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncManager$ActiveSyncContext;

        $z0 = specialinvoke r0.<com.android.server.content.SyncManager: boolean isSyncStillActiveH(com.android.server.content.SyncManager$ActiveSyncContext)>(r1);

        return $z0;
    }

    static boolean access$300(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $z0 = r0.<com.android.server.content.SyncManager: boolean mDataConnectionIsConnected>;

        return $z0;
    }

    static void access$3000(com.android.server.content.SyncManager, com.android.server.content.SyncManager$ActiveSyncContext)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncManager$ActiveSyncContext r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncManager$ActiveSyncContext;

        specialinvoke r0.<com.android.server.content.SyncManager: void postMonitorSyncProgressMessage(com.android.server.content.SyncManager$ActiveSyncContext)>(r1);

        return;
    }

    static boolean access$302(com.android.server.content.SyncManager, boolean)
    {
        com.android.server.content.SyncManager r0;
        boolean z0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        z0 := @parameter1: boolean;

        r0.<com.android.server.content.SyncManager: boolean mDataConnectionIsConnected> = z0;

        return z0;
    }

    static android.os.PowerManager access$3100(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        android.os.PowerManager $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: android.os.PowerManager mPowerManager>;

        return $r1;
    }

    static boolean access$3200(com.android.server.content.SyncManager, com.android.server.content.SyncStorageEngine$EndPoint)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncStorageEngine$EndPoint;

        $z0 = specialinvoke r0.<com.android.server.content.SyncManager: boolean isAdapterDelayed(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        return $z0;
    }

    static void access$3300(com.android.server.content.SyncManager, com.android.server.content.SyncStorageEngine$EndPoint)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke r0.<com.android.server.content.SyncManager: void setAuthorityPendingState(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        return;
    }

    static android.accounts.AccountAndUser[] access$3400(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        android.accounts.AccountAndUser[] $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: android.accounts.AccountAndUser[] mRunningAccounts>;

        return $r1;
    }

    static android.accounts.AccountAndUser[] access$3402(com.android.server.content.SyncManager, android.accounts.AccountAndUser[])
    {
        com.android.server.content.SyncManager r0;
        android.accounts.AccountAndUser[] r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: android.accounts.AccountAndUser[];

        r0.<com.android.server.content.SyncManager: android.accounts.AccountAndUser[] mRunningAccounts> = r1;

        return r1;
    }

    static void access$3500(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        specialinvoke r0.<com.android.server.content.SyncManager: void removeStaleAccounts()>();

        return;
    }

    static boolean access$3600(com.android.server.content.SyncManager, android.accounts.AccountAndUser[], android.accounts.Account, int)
    {
        com.android.server.content.SyncManager r0;
        android.accounts.AccountAndUser[] r1;
        android.accounts.Account r2;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: android.accounts.AccountAndUser[];

        r2 := @parameter2: android.accounts.Account;

        i0 := @parameter3: int;

        $z0 = specialinvoke r0.<com.android.server.content.SyncManager: boolean containsAccountAndUser(android.accounts.AccountAndUser[],android.accounts.Account,int)>(r1, r2, i0);

        return $z0;
    }

    static void access$3700(com.android.server.content.SyncManager, com.android.server.content.SyncOperation)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncOperation r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncOperation;

        specialinvoke r0.<com.android.server.content.SyncManager: void scheduleSyncOperationH(com.android.server.content.SyncOperation)>(r1);

        return;
    }

    static void access$3800(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        specialinvoke r0.<com.android.server.content.SyncManager: void verifyJobScheduler()>();

        return;
    }

    static boolean access$3900(com.android.server.content.SyncManager, java.lang.String, int)
    {
        com.android.server.content.SyncManager r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.content.SyncManager: boolean wasPackageEverLaunched(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    static boolean access$400(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $z0 = specialinvoke r0.<com.android.server.content.SyncManager: boolean readDataConnectionState()>();

        return $z0;
    }

    static android.accounts.AccountManagerInternal access$4000(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        android.accounts.AccountManagerInternal $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: android.accounts.AccountManagerInternal mAccountManagerInternal>;

        return $r1;
    }

    static long access$4100(com.android.server.content.SyncManager, int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        long $l1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        i0 := @parameter1: int;

        $l1 = specialinvoke r0.<com.android.server.content.SyncManager: long getTotalBytesTransferredByUid(int)>(i0);

        return $l1;
    }

    static void access$4200(com.android.server.content.SyncManager, com.android.server.content.SyncStorageEngine$EndPoint, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncStorageEngine$EndPoint;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.content.SyncManager: void clearBackoffSetting(com.android.server.content.SyncStorageEngine$EndPoint,java.lang.String)>(r1, r2);

        return;
    }

    static com.android.server.content.SyncManagerConstants access$4300(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncManagerConstants $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManagerConstants mConstants>;

        return $r1;
    }

    static void access$4400(com.android.server.content.SyncManager, android.content.SyncResult, com.android.server.content.SyncOperation)
    {
        com.android.server.content.SyncManager r0;
        android.content.SyncResult r1;
        com.android.server.content.SyncOperation r2;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: android.content.SyncResult;

        r2 := @parameter2: com.android.server.content.SyncOperation;

        specialinvoke r0.<com.android.server.content.SyncManager: void maybeRescheduleSync(android.content.SyncResult,com.android.server.content.SyncOperation)>(r1, r2);

        return;
    }

    static void access$4500(com.android.server.content.SyncManager, com.android.server.content.SyncOperation, long)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncOperation r1;
        long l0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncOperation;

        l0 := @parameter2: long;

        specialinvoke r0.<com.android.server.content.SyncManager: void postScheduleSyncMessage(com.android.server.content.SyncOperation,long)>(r1, l0);

        return;
    }

    static void access$4600(com.android.server.content.SyncManager, com.android.server.content.SyncStorageEngine$EndPoint, long)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;
        long l0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: com.android.server.content.SyncStorageEngine$EndPoint;

        l0 := @parameter2: long;

        specialinvoke r0.<com.android.server.content.SyncManager: void setDelayUntilTime(com.android.server.content.SyncStorageEngine$EndPoint,long)>(r1, l0);

        return;
    }

    static android.app.NotificationManager access$4700(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        android.app.NotificationManager $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: android.app.NotificationManager mNotificationMgr>;

        return $r1;
    }

    static android.content.Context access$4800(com.android.server.content.SyncManager, android.os.UserHandle)
    {
        com.android.server.content.SyncManager r0;
        android.os.UserHandle r1;
        android.content.Context $r2;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: android.os.UserHandle;

        $r2 = specialinvoke r0.<com.android.server.content.SyncManager: android.content.Context getContextForUser(android.os.UserHandle)>(r1);

        return $r2;
    }

    static void access$500(com.android.server.content.SyncManager, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.content.SyncManager: void clearAllBackoffs(java.lang.String)>(r1);

        return;
    }

    static java.lang.String access$600(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $r1 = specialinvoke r0.<com.android.server.content.SyncManager: java.lang.String getJobStats()>();

        return $r1;
    }

    static com.android.server.content.SyncLogger access$700(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncLogger $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        return $r1;
    }

    static com.android.server.content.SyncStorageEngine access$800(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        return $r1;
    }

    static void access$900(com.android.server.content.SyncManager, int)
    {
        com.android.server.content.SyncManager r0;
        int i0;

        r0 := @parameter0: com.android.server.content.SyncManager;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.content.SyncManager: void onUserRemoved(int)>(i0);

        return;
    }

    private boolean canAccessAccount(android.accounts.Account, java.lang.String, int)
    {
        com.android.server.content.SyncManager r0;
        java.lang.String r1;
        int i0, $i1;
        android.accounts.AccountManager $r2;
        android.os.UserHandle $r3;
        boolean $z0;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;
        android.content.pm.PackageManager$NameNotFoundException $r7;
        android.accounts.Account r8;

        r0 := @this: com.android.server.content.SyncManager;

        r8 := @parameter0: android.accounts.Account;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = r0.<com.android.server.content.SyncManager: android.accounts.AccountManager mAccountManager>;

        $r3 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        $z0 = virtualinvoke $r2.<android.accounts.AccountManager: boolean hasAccountAccess(android.accounts.Account,java.lang.String,android.os.UserHandle)>(r8, r1, $r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r4 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,int)>(r1, 1048576, $i1);

     label2:
        return 1;

     label3:
        $r7 := @caughtexception;

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private void cancelJob(com.android.server.content.SyncOperation, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncOperation r1;
        java.lang.String r2;
        boolean $z0;
        android.app.job.JobScheduler $r3;
        int $i0;
        java.lang.Object[] $r4;
        com.android.server.content.SyncLogger $r5;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncOperation;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("SyncManager", "Null sync operation detected.");

        return;

     label1:
        $z0 = r1.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r4 = newarray (java.lang.Object)[4];

        $r4[0] = "Removing periodic sync ";

        $r4[1] = r1;

        $r4[2] = " for ";

        $r4[3] = r2;

        virtualinvoke $r5.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r4);

     label2:
        $r3 = specialinvoke r0.<com.android.server.content.SyncManager: android.app.job.JobScheduler getJobScheduler()>();

        $i0 = r1.<com.android.server.content.SyncOperation: int jobId>;

        virtualinvoke $r3.<android.app.job.JobScheduler: void cancel(int)>($i0);

        return;
    }

    private void cleanupJobs()
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncManager$7 $r1;
        com.android.server.content.SyncManager$SyncHandler $r2;

        r0 := @this: com.android.server.content.SyncManager;

        $r2 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        $r1 = new com.android.server.content.SyncManager$7;

        specialinvoke $r1.<com.android.server.content.SyncManager$7: void <init>(com.android.server.content.SyncManager)>(r0);

        virtualinvoke $r2.<com.android.server.content.SyncManager$SyncHandler: boolean postAtFrontOfQueue(java.lang.Runnable)>($r1);

        return;
    }

    private void clearAllBackoffs(java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        java.lang.String r1;
        com.android.server.content.SyncStorageEngine $r2;
        com.android.server.content.SyncStorageEngine$EndPoint $r3;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        virtualinvoke $r2.<com.android.server.content.SyncStorageEngine: void clearAllBackoffsLocked()>();

        $r3 = <com.android.server.content.SyncStorageEngine$EndPoint: com.android.server.content.SyncStorageEngine$EndPoint USER_ALL_PROVIDER_ALL_ACCOUNTS_ALL>;

        specialinvoke r0.<com.android.server.content.SyncManager: void rescheduleSyncs(com.android.server.content.SyncStorageEngine$EndPoint,java.lang.String)>($r3, r1);

        return;
    }

    private void clearBackoffSetting(com.android.server.content.SyncStorageEngine$EndPoint, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;
        java.lang.String r2, $r8;
        com.android.server.content.SyncStorageEngine $r3, $r4;
        java.lang.StringBuilder $r5;
        java.lang.Object $r9, $r11;
        java.lang.Long $r10, $r12;
        long $l1, $l3;
        byte $b2, $b4;
        android.util.Pair r13;
        boolean $z0;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        r13 = virtualinvoke $r3.<com.android.server.content.SyncStorageEngine: android.util.Pair getBackoff(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        if r13 == null goto label1;

        $r9 = r13.<android.util.Pair: java.lang.Object first>;

        $r10 = (java.lang.Long) $r9;

        $l1 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label1;

        $r11 = r13.<android.util.Pair: java.lang.Object second>;

        $r12 = (java.lang.Long) $r11;

        $l3 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $b4 = $l3 cmp -1L;

        if $b4 != 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing backoffs for ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", $r8);

     label2:
        $r4 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        virtualinvoke $r4.<com.android.server.content.SyncStorageEngine: void setBackoff(com.android.server.content.SyncStorageEngine$EndPoint,long,long)>(r1, -1L, -1L);

        specialinvoke r0.<com.android.server.content.SyncManager: void rescheduleSyncs(com.android.server.content.SyncStorageEngine$EndPoint,java.lang.String)>(r1, r2);

        return;
    }

    private boolean containsAccountAndUser(android.accounts.AccountAndUser[], android.accounts.Account, int)
    {
        com.android.server.content.SyncManager r0;
        android.accounts.AccountAndUser[] r1;
        android.accounts.Account r2, $r5;
        int i0, $i1, $i2, i3;
        android.accounts.AccountAndUser $r3, $r4;
        boolean $z1, z2;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: android.accounts.AccountAndUser[];

        r2 := @parameter1: android.accounts.Account;

        i0 := @parameter2: int;

        i3 = 0;

     label1:
        z2 = 0;

        $i1 = lengthof r1;

        if i3 >= $i1 goto label3;

        $r3 = r1[i3];

        $i2 = $r3.<android.accounts.AccountAndUser: int userId>;

        if $i2 != i0 goto label2;

        $r4 = r1[i3];

        $r5 = $r4.<android.accounts.AccountAndUser: android.accounts.Account account>;

        $z1 = virtualinvoke $r5.<android.accounts.Account: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        z2 = 1;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return z2;
    }

    private static int countIf(java.util.Collection, java.util.function.Predicate)
    {
        java.util.function.Predicate r0;
        boolean $z0, $z1;
        java.lang.Object $r1;
        java.util.Collection r2;
        int i0, i1;
        java.util.Iterator r3;

        r2 := @parameter0: java.util.Collection;

        r0 := @parameter1: java.util.function.Predicate;

        i0 = 0;

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        i1 = i0;

        $r1 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r0.<java.util.function.Predicate: boolean test(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        i1 = i0 + 1;

     label2:
        i0 = i1;

        goto label1;

     label3:
        return i0;
    }

    private void dumpDayStatistic(java.io.PrintWriter, com.android.server.content.SyncStorageEngine$DayStats)
    {
        com.android.server.content.SyncManager r0;
        java.io.PrintWriter r1;
        com.android.server.content.SyncStorageEngine$DayStats r2;
        int $i0, $i1, $i2, $i3, $i5, $i10;
        long $l4, $l6, $l7, $l8, $l9, $l11, $l12, $l13;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: com.android.server.content.SyncStorageEngine$DayStats;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Success (");

        $i0 = r2.<com.android.server.content.SyncStorageEngine$DayStats: int successCount>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i0);

        $i1 = r2.<com.android.server.content.SyncStorageEngine$DayStats: int successCount>;

        if $i1 <= 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" for ");

        $l9 = r2.<com.android.server.content.SyncStorageEngine$DayStats: long successTime>;

        specialinvoke r0.<com.android.server.content.SyncManager: void dumpTimeSec(java.io.PrintWriter,long)>(r1, $l9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" avg=");

        $l12 = r2.<com.android.server.content.SyncStorageEngine$DayStats: long successTime>;

        $i10 = r2.<com.android.server.content.SyncStorageEngine$DayStats: int successCount>;

        $l11 = (long) $i10;

        $l13 = $l12 / $l11;

        specialinvoke r0.<com.android.server.content.SyncManager: void dumpTimeSec(java.io.PrintWriter,long)>(r1, $l13);

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(") Failure (");

        $i2 = r2.<com.android.server.content.SyncStorageEngine$DayStats: int failureCount>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i2);

        $i3 = r2.<com.android.server.content.SyncStorageEngine$DayStats: int failureCount>;

        if $i3 <= 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" for ");

        $l4 = r2.<com.android.server.content.SyncStorageEngine$DayStats: long failureTime>;

        specialinvoke r0.<com.android.server.content.SyncManager: void dumpTimeSec(java.io.PrintWriter,long)>(r1, $l4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" avg=");

        $l7 = r2.<com.android.server.content.SyncStorageEngine$DayStats: long failureTime>;

        $i5 = r2.<com.android.server.content.SyncStorageEngine$DayStats: int failureCount>;

        $l6 = (long) $i5;

        $l8 = $l7 / $l6;

        specialinvoke r0.<com.android.server.content.SyncManager: void dumpTimeSec(java.io.PrintWriter,long)>(r1, $l8);

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(")");

        return;
    }

    private void dumpDayStatistics(java.io.PrintWriter)
    {
        com.android.server.content.SyncManager r0;
        java.io.PrintWriter r1;
        com.android.server.content.SyncStorageEngine$DayStats[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i13, $i14, $i15, $i19, $i20, i21, i22, i23, $i24, i25;
        com.android.server.content.SyncStorageEngine$DayStats r3, $r5, $r6, $r7, $r8, r9, r10, r11;
        com.android.server.content.SyncStorageEngine $r4;
        long $l10, $l11, $l12, $l16, $l17, $l18;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: java.io.PrintWriter;

        $r4 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        r2 = virtualinvoke $r4.<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine$DayStats[] getDayStatistics()>();

        if r2 == null goto label12;

        $r5 = r2[0];

        if $r5 == null goto label12;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Sync Statistics");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Today:  ");

        $r6 = r2[0];

        specialinvoke r0.<com.android.server.content.SyncManager: void dumpDayStatistic(java.io.PrintWriter,com.android.server.content.SyncStorageEngine$DayStats)>(r1, $r6);

        $r7 = r2[0];

        i0 = $r7.<com.android.server.content.SyncStorageEngine$DayStats: int day>;

        i21 = 1;

     label01:
        if i21 > 6 goto label04;

        $i19 = lengthof r2;

        if i21 >= $i19 goto label04;

        r9 = r2[i21];

        if r9 != null goto label02;

        goto label04;

     label02:
        $i20 = r9.<com.android.server.content.SyncStorageEngine$DayStats: int day>;

        i22 = i0 - $i20;

        if i22 <= 6 goto label03;

        goto label04;

     label03:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Day-");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i22);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":  ");

        specialinvoke r0.<com.android.server.content.SyncManager: void dumpDayStatistic(java.io.PrintWriter,com.android.server.content.SyncStorageEngine$DayStats)>(r1, r9);

        i21 = i21 + 1;

        goto label01;

     label04:
        i23 = i0;

     label05:
        $i24 = lengthof r2;

        if i21 >= $i24 goto label12;

        r10 = null;

        i1 = i23 - 7;

        i25 = i21;

     label06:
        i21 = i25;

        $i2 = lengthof r2;

        if i25 >= $i2 goto label10;

        r3 = r2[i25];

        if r3 != null goto label07;

        i21 = lengthof r2;

        goto label10;

     label07:
        $i5 = r3.<com.android.server.content.SyncStorageEngine$DayStats: int day>;

        $i6 = i1 - $i5;

        if $i6 <= 6 goto label08;

        i21 = i25;

        goto label10;

     label08:
        i25 = i25 + 1;

        r11 = r10;

        if r10 != null goto label09;

        $r8 = new com.android.server.content.SyncStorageEngine$DayStats;

        specialinvoke $r8.<com.android.server.content.SyncStorageEngine$DayStats: void <init>(int)>(i1);

        r11 = $r8;

     label09:
        $i8 = r11.<com.android.server.content.SyncStorageEngine$DayStats: int successCount>;

        $i7 = r3.<com.android.server.content.SyncStorageEngine$DayStats: int successCount>;

        $i9 = $i8 + $i7;

        r11.<com.android.server.content.SyncStorageEngine$DayStats: int successCount> = $i9;

        $l11 = r11.<com.android.server.content.SyncStorageEngine$DayStats: long successTime>;

        $l10 = r3.<com.android.server.content.SyncStorageEngine$DayStats: long successTime>;

        $l12 = $l11 + $l10;

        r11.<com.android.server.content.SyncStorageEngine$DayStats: long successTime> = $l12;

        $i14 = r11.<com.android.server.content.SyncStorageEngine$DayStats: int failureCount>;

        $i13 = r3.<com.android.server.content.SyncStorageEngine$DayStats: int failureCount>;

        $i15 = $i14 + $i13;

        r11.<com.android.server.content.SyncStorageEngine$DayStats: int failureCount> = $i15;

        $l17 = r11.<com.android.server.content.SyncStorageEngine$DayStats: long failureTime>;

        $l16 = r3.<com.android.server.content.SyncStorageEngine$DayStats: long failureTime>;

        $l18 = $l17 + $l16;

        r11.<com.android.server.content.SyncStorageEngine$DayStats: long failureTime> = $l18;

        r10 = r11;

        goto label06;

     label10:
        if r10 == null goto label11;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Week-");

        $i3 = i0 - i1;

        $i4 = $i3 / 7;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        specialinvoke r0.<com.android.server.content.SyncManager: void dumpDayStatistic(java.io.PrintWriter,com.android.server.content.SyncStorageEngine$DayStats)>(r1, r10);

     label11:
        i23 = i1;

        goto label05;

     label12:
        return;
    }

    private void dumpRecentHistory(java.io.PrintWriter)
    {
        com.android.server.content.SyncManager r0;
        java.io.PrintWriter r1;
        boolean z0, $z1, $z2, $z3;
        java.lang.String r2, r4, $r17, $r19, $r27, $r32, $r52, $r53, $r55, $r64, $r69, $r81, $r94, $r108, $r122, $r127, r139, r141, r153, r158, r159, r162, r163, r166, r171, r173, r174, r176, r178, $r182, $r184, $r187, $r192, r193, r200, r202;
        com.android.server.content.SyncManager$AccountSyncStats r3, $r114, r146, r148;
        long l0, l1, $l7, $l11, $l12, $l15, $l16, $l17, $l18, $l20, $l22, $l23, $l25, $l32, $l33, $l34, $l36, $l37, $l38, $l39, $l40, $l42, $l43, $l45, $l46, $l49, $l50, l54, l55, l63, l66, l68, l74, l75, $l81, $l82;
        com.android.server.content.SyncStorageEngine $r5, $r14, $r38, $r111;
        int $i2, $i4, $i5, $i6, $i8, $i9, $i10, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i35, $i41, $i44, $i47, $i48, $i51, $i52, $i53, i56, i57, i58, i59, i60, i61, i62, i64, i67, i69, i71, i72, i73, $i76, $i77, $i78, $i79, i80, i83;
        byte $b3, $b13, $b14, $b19, $b21;
        java.lang.StringBuilder $r6, $r24, $r39, $r61, $r119;
        android.content.Context $r12;
        java.lang.Object $r13, $r37, $r43, $r86, $r100, $r110, $r112, $r113;
        java.lang.Object[] $r15, $r21, $r44, $r54, $r57, $r74, $r82, $r84, $r87, $r90, $r91, $r101, $r104, $r107, $r180, $r186, $r188;
        java.lang.Integer $r16, $r83, $r85, $r92, $r105, $r181, $r189;
        java.lang.String[] $r18, $r183;
        com.android.server.content.SyncStorageEngine$EndPoint $r23, $r25, $r30, $r35, $r60, $r62, $r67, $r72, $r118, $r120, $r125, $r130;
        android.accounts.Account $r26, $r31, $r63, $r68, $r121, $r126;
        java.lang.Long $r45, $r46, $r47, $r58, $r59, $r75, $r76, $r88, $r89, $r93, $r102, $r103, $r106, r177, $r179, $r190, $r191;
        java.util.ArrayList $r78, $r96, r133;
        java.util.Collection $r79, $r98;
        com.android.server.content.SyncManager$14 $r80;
        java.util.Map $r97, r145;
        com.android.server.content.SyncManager$15 $r99;
        com.android.server.content.SyncManager$AuthoritySyncStats $r116, r142, r144, r157;
        java.util.HashMap r134, r167;
        java.util.Iterator r135, r154, r161;
        com.android.server.content.SyncStorageEngine$SyncHistoryItem r137, r169, r197;
        com.android.server.content.SyncStorageEngine$AuthorityInfo r138, r170, r199;
        char[] r151;
        android.content.pm.PackageManager r168;
        float $f0, $f1;
        java.lang.Float $r185;
        android.os.Bundle r198;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: java.io.PrintWriter;

        $r5 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        r133 = virtualinvoke $r5.<com.android.server.content.SyncStorageEngine: java.util.ArrayList getSyncHistory()>();

        if r133 == null goto label35;

        $i2 = virtualinvoke r133.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label35;

        r134 = staticinvoke <com.google.android.collect.Maps: java.util.HashMap newHashMap()>();

        l54 = 0L;

        l55 = 0L;

        i56 = virtualinvoke r133.<java.util.ArrayList: int size()>();

        i57 = 0;

        i58 = 0;

        r135 = virtualinvoke r133.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        z0 = interfaceinvoke r135.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label10;

        $r110 = interfaceinvoke r135.<java.util.Iterator: java.lang.Object next()>();

        r137 = (com.android.server.content.SyncStorageEngine$SyncHistoryItem) $r110;

        $r111 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $i44 = r137.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: int authorityId>;

        r138 = virtualinvoke $r111.<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine$AuthorityInfo getAuthority(int)>($i44);

        if r138 == null goto label02;

        $r118 = r138.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        r139 = $r118.<com.android.server.content.SyncStorageEngine$EndPoint: java.lang.String provider>;

        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();

        $r120 = r138.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r121 = $r120.<com.android.server.content.SyncStorageEngine$EndPoint: android.accounts.Account account>;

        $r122 = $r121.<android.accounts.Account: java.lang.String name>;

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122);

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r125 = r138.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r126 = $r125.<com.android.server.content.SyncStorageEngine$EndPoint: android.accounts.Account account>;

        $r127 = $r126.<android.accounts.Account: java.lang.String type>;

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r127);

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u");

        $r130 = r138.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $i53 = $r130.<com.android.server.content.SyncStorageEngine$EndPoint: int userId>;

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i53);

        r141 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label02:
        r139 = "Unknown";

        r141 = "Unknown";

     label03:
        i59 = virtualinvoke r139.<java.lang.String: int length()>();

        i60 = i57;

        if i59 <= i57 goto label04;

        i60 = i59;

     label04:
        i61 = virtualinvoke r141.<java.lang.String: int length()>();

        i62 = i58;

        if i61 <= i58 goto label05;

        i62 = i61;

     label05:
        l63 = r137.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: long elapsedTime>;

        $r112 = interfaceinvoke r134.<java.util.Map: java.lang.Object get(java.lang.Object)>(r139);

        r142 = (com.android.server.content.SyncManager$AuthoritySyncStats) $r112;

        if r142 != null goto label06;

        $r116 = new com.android.server.content.SyncManager$AuthoritySyncStats;

        specialinvoke $r116.<com.android.server.content.SyncManager$AuthoritySyncStats: void <init>(java.lang.String,com.android.server.content.SyncManager$1)>(r139, null);

        interfaceinvoke r134.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r139, $r116);

        r144 = $r116;

        goto label07;

     label06:
        r144 = r142;

     label07:
        $l45 = r144.<com.android.server.content.SyncManager$AuthoritySyncStats: long elapsedTime>;

        $l46 = $l45 + l63;

        r144.<com.android.server.content.SyncManager$AuthoritySyncStats: long elapsedTime> = $l46;

        $i47 = r144.<com.android.server.content.SyncManager$AuthoritySyncStats: int times>;

        $i48 = $i47 + 1;

        r144.<com.android.server.content.SyncManager$AuthoritySyncStats: int times> = $i48;

        r145 = r144.<com.android.server.content.SyncManager$AuthoritySyncStats: java.util.Map accountMap>;

        $r113 = interfaceinvoke r145.<java.util.Map: java.lang.Object get(java.lang.Object)>(r141);

        r146 = (com.android.server.content.SyncManager$AccountSyncStats) $r113;

        if r146 != null goto label08;

        $r114 = new com.android.server.content.SyncManager$AccountSyncStats;

        specialinvoke $r114.<com.android.server.content.SyncManager$AccountSyncStats: void <init>(java.lang.String,com.android.server.content.SyncManager$1)>(r141, null);

        interfaceinvoke r145.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r141, $r114);

        r148 = $r114;

        goto label09;

     label08:
        r148 = r146;

     label09:
        $l49 = r148.<com.android.server.content.SyncManager$AccountSyncStats: long elapsedTime>;

        $l50 = $l49 + l63;

        r148.<com.android.server.content.SyncManager$AccountSyncStats: long elapsedTime> = $l50;

        $i51 = r148.<com.android.server.content.SyncManager$AccountSyncStats: int times>;

        $i52 = $i51 + 1;

        r148.<com.android.server.content.SyncManager$AccountSyncStats: int times> = $i52;

        i58 = i62;

        l54 = l54 + l63;

        l55 = l55 + 1L;

        i57 = i60;

        goto label01;

     label10:
        $b3 = l54 cmp 0L;

        if $b3 <= 0 goto label15;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $r74 = newarray (java.lang.Object)[2];

        $r75 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l55);

        $r74[0] = $r75;

        $l25 = l54 / 1000L;

        $r76 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l25);

        $r74[1] = $r76;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Detailed Statistics (Recent history):  %d (# of times) %ds (sync time)\n", $r74);

        $r78 = new java.util.ArrayList;

        $r79 = interfaceinvoke r134.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r78.<java.util.ArrayList: void <init>(java.util.Collection)>($r79);

        $r80 = new com.android.server.content.SyncManager$14;

        specialinvoke $r80.<com.android.server.content.SyncManager$14: void <init>(com.android.server.content.SyncManager)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r78, $r80);

        $i26 = i58 + 3;

        i64 = staticinvoke <java.lang.Math: int max(int,int)>(i57, $i26);

        $i27 = i64 + 4;

        $i28 = $i27 + 2;

        $i29 = $i28 + 10;

        $i30 = $i29 + 11;

        r151 = newarray (char)[$i30];

        staticinvoke <java.util.Arrays: void fill(char[],char)>(r151, 45);

        $r81 = new java.lang.String;

        specialinvoke $r81.<java.lang.String: void <init>(char[])>(r151);

        $r82 = newarray (java.lang.Object)[1];

        $i31 = i64 + 2;

        $r83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i31);

        $r82[0] = $r83;

        r153 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  %%-%ds: %%-9s  %%-11s\n", $r82);

        $r84 = newarray (java.lang.Object)[1];

        $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i64);

        $r84[0] = $r85;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("    %%-%ds:   %%-9s  %%-11s\n", $r84);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r81);

        r154 = interfaceinvoke $r78.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke r154.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r86 = interfaceinvoke r154.<java.util.Iterator: java.lang.Object next()>();

        r157 = (com.android.server.content.SyncManager$AuthoritySyncStats) $r86;

        r158 = r157.<com.android.server.content.SyncManager$AuthoritySyncStats: java.lang.String name>;

        l66 = r157.<com.android.server.content.SyncManager$AuthoritySyncStats: long elapsedTime>;

        i67 = r157.<com.android.server.content.SyncManager$AuthoritySyncStats: int times>;

        $r87 = newarray (java.lang.Object)[2];

        $l32 = l66 / 1000L;

        $r88 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l32);

        $r87[0] = $r88;

        $l33 = l66 * 100L;

        $l34 = $l33 / l54;

        $r89 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l34);

        $r87[1] = $r89;

        r159 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%ds/%d%%", $r87);

        $r90 = newarray (java.lang.Object)[3];

        $r90[0] = r158;

        $r91 = newarray (java.lang.Object)[2];

        $r92 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i67);

        $r91[0] = $r92;

        $i35 = i67 * 100;

        $l36 = (long) $i35;

        $l37 = $l36 / l55;

        $r93 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l37);

        $r91[1] = $r93;

        $r94 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d/%d%%", $r91);

        $r90[1] = $r94;

        $r90[2] = r159;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(r153, $r90);

        $r96 = new java.util.ArrayList;

        $r97 = r157.<com.android.server.content.SyncManager$AuthoritySyncStats: java.util.Map accountMap>;

        $r98 = interfaceinvoke $r97.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r96.<java.util.ArrayList: void <init>(java.util.Collection)>($r98);

        $r99 = new com.android.server.content.SyncManager$15;

        specialinvoke $r99.<com.android.server.content.SyncManager$15: void <init>(com.android.server.content.SyncManager)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r96, $r99);

        r161 = interfaceinvoke $r96.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z3 = interfaceinvoke r161.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        $r100 = interfaceinvoke r161.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.content.SyncManager$AccountSyncStats) $r100;

        l68 = r3.<com.android.server.content.SyncManager$AccountSyncStats: long elapsedTime>;

        i69 = r3.<com.android.server.content.SyncManager$AccountSyncStats: int times>;

        $r101 = newarray (java.lang.Object)[2];

        $l38 = l68 / 1000L;

        $r102 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l38);

        $r101[0] = $r102;

        $l39 = l68 * 100L;

        $l40 = $l39 / l54;

        $r103 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l40);

        $r101[1] = $r103;

        r162 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%ds/%d%%", $r101);

        $r104 = newarray (java.lang.Object)[2];

        $r105 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i69);

        $r104[0] = $r105;

        $i41 = i69 * 100;

        $l42 = (long) $i41;

        $l43 = $l42 / l55;

        $r106 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l43);

        $r104[1] = $r106;

        r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d/%d%%", $r104);

        $r107 = newarray (java.lang.Object)[3];

        $r108 = r3.<com.android.server.content.SyncManager$AccountSyncStats: java.lang.String name>;

        $r107[0] = $r108;

        $r107[1] = r4;

        $r107[2] = r162;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(r2, $r107);

        goto label12;

     label13:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r81);

        goto label11;

     label14:
        r163 = "/";

        i71 = i56;

        i72 = i58;

        goto label16;

     label15:
        r163 = "/";

        i72 = i58;

        i71 = i56;

     label16:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Recent Sync History");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("(SERVER is now split up to FEED and OTHER)");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  %-");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i72);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s  %-");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i57);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s %s\n");

        r166 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r167 = staticinvoke <com.google.android.collect.Maps: java.util.HashMap newHashMap()>();

        $r12 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        r168 = virtualinvoke $r12.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        i73 = 0;

     label17:
        if i73 >= i71 goto label28;

        $r37 = virtualinvoke r133.<java.util.ArrayList: java.lang.Object get(int)>(i73);

        r169 = (com.android.server.content.SyncStorageEngine$SyncHistoryItem) $r37;

        $r38 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $i10 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: int authorityId>;

        r170 = virtualinvoke $r38.<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine$AuthorityInfo getAuthority(int)>($i10);

        if r170 == null goto label18;

        $r60 = r170.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        r171 = $r60.<com.android.server.content.SyncStorageEngine$EndPoint: java.lang.String provider>;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r62 = r170.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r63 = $r62.<com.android.server.content.SyncStorageEngine$EndPoint: android.accounts.Account account>;

        $r64 = $r63.<android.accounts.Account: java.lang.String name>;

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r163);

        $r67 = r170.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r68 = $r67.<com.android.server.content.SyncStorageEngine$EndPoint: android.accounts.Account account>;

        $r69 = $r68.<android.accounts.Account: java.lang.String type>;

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u");

        $r72 = r170.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $i24 = $r72.<com.android.server.content.SyncStorageEngine$EndPoint: int userId>;

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        r173 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label19;

     label18:
        r171 = "Unknown";

        r173 = "Unknown";

     label19:
        r174 = r163;

        l0 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: long elapsedTime>;

        l1 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: long eventTime>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r171);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r163);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r173);

        r176 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r43 = interfaceinvoke r167.<java.util.Map: java.lang.Object get(java.lang.Object)>(r176);

        r177 = (java.lang.Long) $r43;

        if r177 != null goto label20;

        r178 = "";

        goto label23;

     label20:
        $l11 = virtualinvoke r177.<java.lang.Long: long longValue()>();

        $l12 = $l11 - l1;

        l74 = $l12 / 1000L;

        $b13 = l74 cmp 60L;

        if $b13 >= 0 goto label21;

        r178 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l74);

        goto label23;

     label21:
        $b14 = l74 cmp 3600L;

        if $b14 >= 0 goto label22;

        $r57 = newarray (java.lang.Object)[2];

        $l22 = l74 / 60L;

        $r58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l22);

        $r57[0] = $r58;

        $l23 = l74 % 60L;

        $r59 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l23);

        $r57[1] = $r59;

        r178 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d:%02d", $r57);

        goto label23;

     label22:
        l75 = l74 % 3600L;

        $r44 = newarray (java.lang.Object)[3];

        $l15 = l74 / 3600L;

        $r45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l15);

        $r44[0] = $r45;

        $l16 = l75 / 60L;

        $r46 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l16);

        $r44[1] = $r46;

        $l17 = l75 % 60L;

        $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l17);

        $r44[2] = $r47;

        r178 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d:%02d:%02d", $r44);

     label23:
        $r179 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        interfaceinvoke r167.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r176, $r179);

        $r180 = newarray (java.lang.Object)[5];

        $i76 = i73 + 1;

        $r181 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i76);

        $r180[0] = $r181;

        $r182 = staticinvoke <com.android.server.content.SyncManager: java.lang.String formatTime(long)>(l1);

        $r180[1] = $r182;

        $r183 = <com.android.server.content.SyncStorageEngine: java.lang.String[] SOURCES>;

        $i77 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: int source>;

        $r184 = $r183[$i77];

        $r180[2] = $r184;

        $f0 = (float) l0;

        $f1 = $f0 / 1000.0F;

        $r185 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r180[3] = $r185;

        $r180[4] = r178;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("  #%-3d: %s %8s  %5.1fs  %8s", $r180);

        $r186 = newarray (java.lang.Object)[3];

        $r186[0] = r173;

        $r186[1] = r171;

        $i78 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: int reason>;

        $r187 = staticinvoke <com.android.server.content.SyncOperation: java.lang.String reasonToString(android.content.pm.PackageManager,int)>(r168, $i78);

        $r186[2] = $r187;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(r166, $r186);

        $i79 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: int event>;

        if $i79 != 1 goto label25;

        $l18 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: long upstreamActivity>;

        $b19 = $l18 cmp 0L;

        if $b19 != 0 goto label25;

        $l20 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: long downstreamActivity>;

        $b21 = $l20 cmp 0L;

        if $b21 == 0 goto label24;

        goto label25;

     label24:
        goto label26;

     label25:
        i80 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: int event>;

        $r188 = newarray (java.lang.Object)[3];

        $r189 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i80);

        $r188[0] = $r189;

        $l81 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: long upstreamActivity>;

        $r190 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l81);

        $r188[1] = $r190;

        $l82 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: long downstreamActivity>;

        $r191 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l82);

        $r188[2] = $r191;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("    event=%d upstreamActivity=%d downstreamActivity=%d\n", $r188);

     label26:
        $r192 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: java.lang.String mesg>;

        if $r192 == null goto label27;

        $r53 = "success";

        $r52 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: java.lang.String mesg>;

        $z1 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>($r52);

        if $z1 != 0 goto label27;

        $r54 = newarray (java.lang.Object)[1];

        $r55 = r169.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: java.lang.String mesg>;

        $r54[0] = $r55;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("    mesg=%s\n", $r54);

     label27:
        i73 = i73 + 1;

        r163 = r174;

        goto label17;

     label28:
        r193 = r163;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Recent Sync History Extras");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("(SERVER is now split up to FEED and OTHER)");

        i83 = 0;

     label29:
        if i83 >= i71 goto label34;

        $r13 = virtualinvoke r133.<java.util.ArrayList: java.lang.Object get(int)>(i83);

        r197 = (com.android.server.content.SyncStorageEngine$SyncHistoryItem) $r13;

        r198 = r197.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: android.os.Bundle extras>;

        if r198 == null goto label33;

        $i4 = virtualinvoke r198.<android.os.Bundle: int size()>();

        if $i4 != 0 goto label30;

        goto label33;

     label30:
        $r14 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $i5 = r197.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: int authorityId>;

        r199 = virtualinvoke $r14.<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine$AuthorityInfo getAuthority(int)>($i5);

        if r199 == null goto label31;

        $r23 = r199.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        r200 = $r23.<com.android.server.content.SyncStorageEngine$EndPoint: java.lang.String provider>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = r199.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r26 = $r25.<com.android.server.content.SyncStorageEngine$EndPoint: android.accounts.Account account>;

        $r27 = $r26.<android.accounts.Account: java.lang.String name>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r193);

        $r30 = r199.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r31 = $r30.<com.android.server.content.SyncStorageEngine$EndPoint: android.accounts.Account account>;

        $r32 = $r31.<android.accounts.Account: java.lang.String type>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u");

        $r35 = r199.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $i9 = $r35.<com.android.server.content.SyncStorageEngine$EndPoint: int userId>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        r202 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label32;

     label31:
        r200 = "Unknown";

        r202 = "Unknown";

     label32:
        $r15 = newarray (java.lang.Object)[3];

        $i6 = i83 + 1;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r15[0] = $r16;

        $l7 = r197.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: long eventTime>;

        $r17 = staticinvoke <com.android.server.content.SyncManager: java.lang.String formatTime(long)>($l7);

        $r15[1] = $r17;

        $r18 = <com.android.server.content.SyncStorageEngine: java.lang.String[] SOURCES>;

        $i8 = r197.<com.android.server.content.SyncStorageEngine$SyncHistoryItem: int source>;

        $r19 = $r18[$i8];

        $r15[2] = $r19;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("  #%-3d: %s %8s ", $r15);

        $r21 = newarray (java.lang.Object)[3];

        $r21[0] = r202;

        $r21[1] = r200;

        $r21[2] = r198;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(r166, $r21);

        goto label33;

     label33:
        i83 = i83 + 1;

        goto label29;

     label34:
        goto label35;

     label35:
        return;
    }

    private void dumpSyncAdapters(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.content.SyncManager r0;
        com.android.internal.util.IndentingPrintWriter r1;
        boolean $z0, $z1;
        java.lang.Object $r3, $r13;
        java.lang.StringBuilder $r4;
        java.lang.String $r8;
        int $i0;
        android.content.SyncAdaptersCache $r10;
        java.util.Collection $r11;
        android.content.pm.RegisteredServicesCache$ServiceInfo $r14;
        java.util.List r15;
        java.util.Iterator r16, r18;
        android.content.pm.UserInfo r17;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        r15 = specialinvoke r0.<com.android.server.content.SyncManager: java.util.List getAllUsers()>();

        if r15 == null goto label4;

        r16 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (android.content.pm.UserInfo) $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sync adapters for ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r10 = r0.<com.android.server.content.SyncManager: android.content.SyncAdaptersCache mSyncAdapters>;

        $i0 = r17.<android.content.pm.UserInfo: int id>;

        $r11 = virtualinvoke $r10.<android.content.SyncAdaptersCache: java.util.Collection getAllServices(int)>($i0);

        r18 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r13 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r13;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>($r14);

        goto label2;

     label3:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        goto label1;

     label4:
        return;
    }

    private void dumpTimeSec(java.io.PrintWriter, long)
    {
        com.android.server.content.SyncManager r0;
        java.io.PrintWriter r1;
        long l0, $l1, $l2, $l3;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: java.io.PrintWriter;

        l0 := @parameter1: long;

        $l1 = l0 / 1000L;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l1);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(46);

        $l2 = l0 / 100L;

        $l3 = $l2 % 10L;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l3);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(115);

        return;
    }

    public static java.lang.StringBuilder formatDurationHMS(java.lang.StringBuilder, long)
    {
        java.lang.StringBuilder r0;
        long l0, l1, $l4, $l5, $l6, l7, l8, l9, l10;
        byte $b2, $b3;
        boolean $z0, $z1, $z2, z3;

        r0 := @parameter0: java.lang.StringBuilder;

        l7 := @parameter1: long;

        l8 = l7 / 1000L;

        l9 = l8;

        $b2 = l8 cmp 0L;

        if $b2 >= 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        l9 = neg l8;

     label1:
        l10 = l9 / 60L;

        l0 = l10 / 60L;

        l1 = l0 / 24L;

        z3 = 0;

        $b3 = l1 cmp 0L;

        if $b3 <= 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(100);

        z3 = 1;

     label2:
        $l5 = l9 % 60L;

        $l6 = l10 % 60L;

        $l4 = l0 % 24L;

        $z0 = staticinvoke <com.android.server.content.SyncManager: boolean printTwoDigitNumber(java.lang.StringBuilder,long,char,boolean)>(r0, $l4, 104, z3);

        $z1 = staticinvoke <com.android.server.content.SyncManager: boolean printTwoDigitNumber(java.lang.StringBuilder,long,char,boolean)>(r0, $l6, 109, $z0);

        $z2 = staticinvoke <com.android.server.content.SyncManager: boolean printTwoDigitNumber(java.lang.StringBuilder,long,char,boolean)>(r0, $l5, 115, $z1);

        if $z2 != 0 goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0s");

     label3:
        return r0;
    }

    static java.lang.String formatTime(long)
    {
        long l0;
        byte $b1;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        return "N/A";

     label1:
        $r0 = staticinvoke <android.text.format.TimeMigrationUtils: java.lang.String formatMillisWithFixedFormat(long)>(l0);

        return $r0;
    }

    static android.content.Intent getAdapterBindIntent(android.content.Context, android.content.ComponentName, int)
    {
        android.content.Context r0;
        android.content.ComponentName r1;
        int i0;
        android.content.Intent $r3, $r7;
        android.os.UserHandle $r8;
        android.app.PendingIntent $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.content.SyncAdapter");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r1);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.client_label", 17041333);

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.settings.SYNC_SETTINGS");

        $r8 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        $r9 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>(r0, 0, $r7, 67108864, null, $r8);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.client_intent", $r9);

        return $r3;
    }

    private java.util.List getAllPendingSyncs()
    {
        com.android.server.content.SyncManager r0;
        java.util.Iterator r2;
        com.android.server.job.JobSchedulerInternal $r3;
        java.util.ArrayList $r4;
        int $i0;
        boolean $z0;
        java.lang.Object $r5;
        android.app.job.JobInfo $r6;
        android.os.PersistableBundle $r7;
        java.util.List r8;
        com.android.server.content.SyncOperation r9;

        r0 := @this: com.android.server.content.SyncManager;

        specialinvoke r0.<com.android.server.content.SyncManager: void verifyJobScheduler()>();

        $r3 = r0.<com.android.server.content.SyncManager: com.android.server.job.JobSchedulerInternal mJobSchedulerInternal>;

        r8 = interfaceinvoke $r3.<com.android.server.job.JobSchedulerInternal: java.util.List getSystemScheduledPendingJobs()>();

        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke r8.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.app.job.JobInfo) $r5;

        $r7 = virtualinvoke $r6.<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>();

        r9 = staticinvoke <com.android.server.content.SyncOperation: com.android.server.content.SyncOperation maybeCreateFromJobExtras(android.os.PersistableBundle)>($r7);

        if r9 == null goto label2;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r9);

     label2:
        goto label1;

     label3:
        return $r4;
    }

    private java.util.List getAllUsers()
    {
        com.android.server.content.SyncManager r0;
        android.os.UserManager $r1;
        java.util.List $r2;

        r0 := @this: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: android.os.UserManager mUserManager>;

        $r2 = virtualinvoke $r1.<android.os.UserManager: java.util.List getUsers()>();

        return $r2;
    }

    private android.net.ConnectivityManager getConnectivityManager()
    {
        com.android.server.content.SyncManager r0;
        android.net.ConnectivityManager $r1, $r4, r6;
        android.content.Context $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.content.SyncManager;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.content.SyncManager: android.net.ConnectivityManager mConnManagerDoNotUseDirectly>;

        if $r1 != null goto label2;

        $r2 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r4 = (android.net.ConnectivityManager) $r3;

        r0.<com.android.server.content.SyncManager: android.net.ConnectivityManager mConnManagerDoNotUseDirectly> = $r4;

     label2:
        r6 = r0.<com.android.server.content.SyncManager: android.net.ConnectivityManager mConnManagerDoNotUseDirectly>;

        exitmonitor r0;

     label3:
        return r6;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private android.content.Context getContextForUser(android.os.UserHandle)
    {
        com.android.server.content.SyncManager r0;
        android.content.Context $r1, $r2, $r5, r7;
        java.lang.String $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        android.os.UserHandle r6;

        r0 := @this: com.android.server.content.SyncManager;

        r6 := @parameter0: android.os.UserHandle;

     label1:
        $r2 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        $r1 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        r7 = virtualinvoke $r2.<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>($r3, 0, r6);

     label2:
        return r7;

     label3:
        $r4 := @caughtexception;

        $r5 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        return $r5;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private static com.android.server.content.SyncManager getInstance()
    {
        com.android.server.content.SyncManager $r0, r2;
        java.lang.Throwable $r1;

        entermonitor class "Lcom/android/server/content/SyncManager;";

     label1:
        $r0 = <com.android.server.content.SyncManager: com.android.server.content.SyncManager sInstance>;

        if $r0 != null goto label2;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("SyncManager", "sInstance == null");

     label2:
        r2 = <com.android.server.content.SyncManager: com.android.server.content.SyncManager sInstance>;

        exitmonitor class "Lcom/android/server/content/SyncManager;";

     label3:
        return r2;

     label4:
        $r1 := @caughtexception;

     label5:
        exitmonitor class "Lcom/android/server/content/SyncManager;";

     label6:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private int getIsSyncable(android.accounts.Account, int, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        int i0, i1;
        android.content.pm.UserInfo r1;
        com.android.server.content.SyncStorageEngine $r2;
        android.content.Context $r3;
        android.os.UserManager $r4;
        boolean $z0, $z1;
        java.lang.String $r5, $r10, $r11, $r12, $r13, r16;
        android.content.SyncAdaptersCache $r6;
        android.content.SyncAdapterType $r7;
        android.content.pm.IPackageManager $r8;
        android.content.ComponentName $r9;
        android.os.RemoteException $r14;
        android.accounts.Account r15;
        android.content.pm.RegisteredServicesCache$ServiceInfo r17;
        android.content.pm.PackageInfo r18;

        r0 := @this: com.android.server.content.SyncManager;

        r15 := @parameter0: android.accounts.Account;

        i0 := @parameter1: int;

        r16 := @parameter2: java.lang.String;

        $r2 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        i1 = virtualinvoke $r2.<com.android.server.content.SyncStorageEngine: int getIsSyncable(android.accounts.Account,int,java.lang.String)>(r15, i0, r16);

        $r3 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        $r4 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>($r3);

        r1 = virtualinvoke $r4.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if r1 == null goto label7;

        $z0 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isRestricted()>();

        if $z0 != 0 goto label1;

        goto label7;

     label1:
        $r6 = r0.<com.android.server.content.SyncManager: android.content.SyncAdaptersCache mSyncAdapters>;

        $r5 = r15.<android.accounts.Account: java.lang.String type>;

        $r7 = staticinvoke <android.content.SyncAdapterType: android.content.SyncAdapterType newKey(java.lang.String,java.lang.String)>(r16, $r5);

        r17 = virtualinvoke $r6.<android.content.SyncAdaptersCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(java.lang.Object,int)>($r7, i0);

        if r17 != null goto label2;

        return 0;

     label2:
        $r8 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r9 = r17.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        $r10 = virtualinvoke $r9.<android.content.ComponentName: java.lang.String getPackageName()>();

        r18 = interfaceinvoke $r8.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>($r10, 0, i0);

     label3:
        if r18 != null goto label4;

        return 0;

     label4:
        $r11 = r18.<android.content.pm.PackageInfo: java.lang.String restrictedAccountType>;

        if $r11 == null goto label5;

        $r13 = r18.<android.content.pm.PackageInfo: java.lang.String restrictedAccountType>;

        $r12 = r15.<android.accounts.Account: java.lang.String type>;

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label5;

        return i1;

     label5:
        return 0;

     label6:
        $r14 := @caughtexception;

        return 0;

     label7:
        return i1;

        catch android.os.RemoteException from label2 to label3 with label6;
    }

    private android.app.job.JobScheduler getJobScheduler()
    {
        com.android.server.content.SyncManager r0;
        android.app.job.JobScheduler $r1;

        r0 := @this: com.android.server.content.SyncManager;

        specialinvoke r0.<com.android.server.content.SyncManager: void verifyJobScheduler()>();

        $r1 = r0.<com.android.server.content.SyncManager: android.app.job.JobScheduler mJobScheduler>;

        return $r1;
    }

    private java.lang.String getJobStats()
    {
        com.android.server.content.SyncManager r0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3;
        com.android.server.job.JobSchedulerInternal$JobStorePersistStats $r5;
        java.lang.String $r7, r9;
        com.android.server.job.JobSchedulerInternal r8;

        r0 := @this: com.android.server.content.SyncManager;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/job/JobSchedulerInternal;");

        r8 = (com.android.server.job.JobSchedulerInternal) $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JobStats: ");

        if r8 != null goto label1;

        r9 = "(JobSchedulerInternal==null)";

        goto label2;

     label1:
        $r5 = interfaceinvoke r8.<com.android.server.job.JobSchedulerInternal: com.android.server.job.JobSchedulerInternal$JobStorePersistStats getPersistStats()>();

        r9 = virtualinvoke $r5.<com.android.server.job.JobSchedulerInternal$JobStorePersistStats: java.lang.String toString()>();

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private long getTotalBytesTransferredByUid(int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        long $l1, $l2, $l3;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        $l1 = staticinvoke <android.net.TrafficStats: long getUidRxBytes(int)>(i0);

        $l2 = staticinvoke <android.net.TrafficStats: long getUidTxBytes(int)>(i0);

        $l3 = $l1 + $l2;

        return $l3;
    }

    private int getUnusedJobIdH()
    {
        com.android.server.content.SyncManager r0;
        int i0, $i1;
        java.util.Random $r1;
        com.android.server.job.JobSchedulerInternal $r2;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: com.android.server.content.SyncManager;

     label1:
        $r1 = r0.<com.android.server.content.SyncManager: java.util.Random mRand>;

        $i1 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(10000);

        i0 = $i1 + 100000;

        $r2 = r0.<com.android.server.content.SyncManager: com.android.server.job.JobSchedulerInternal mJobSchedulerInternal>;

        $r3 = interfaceinvoke $r2.<com.android.server.job.JobSchedulerInternal: java.util.List getSystemScheduledPendingJobs()>();

        $z0 = specialinvoke r0.<com.android.server.content.SyncManager: boolean isJobIdInUseLockedH(int,java.util.List)>(i0, $r3);

        if $z0 != 0 goto label2;

        return i0;

     label2:
        goto label1;
    }

    private void increaseBackoffSetting(com.android.server.content.SyncStorageEngine$EndPoint)
    {
        com.android.server.content.SyncManager r0;
        long l0, $l3, $l8, $l9, $l11, $l12, $l13, $l14, l16, l17, l18, l19, l20;
        com.android.server.content.SyncStorageEngine $r1, $r3;
        byte $b1, $b4, $b10;
        com.android.server.content.SyncManagerConstants $r2, $r10, $r15;
        int $i2, $i6, $i7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r16;
        java.lang.String $r9, $r22;
        double $d0, $d1;
        java.lang.Object $r11, $r13, $r18;
        java.lang.Long $r12, $r14, $r19;
        float $f0, $f1, $f2;
        com.android.server.content.SyncStorageEngine$EndPoint r23;
        android.util.Pair r24;

        r0 := @this: com.android.server.content.SyncManager;

        r23 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        r24 = virtualinvoke $r1.<com.android.server.content.SyncStorageEngine: android.util.Pair getBackoff(com.android.server.content.SyncStorageEngine$EndPoint)>(r23);

        l16 = -1L;

        if r24 == null goto label3;

        $r11 = r24.<android.util.Pair: java.lang.Object first>;

        $r12 = (java.lang.Long) $r11;

        $l9 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $b10 = l0 cmp $l9;

        if $b10 >= 0 goto label2;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z1 == 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Still in backoff, do not increase it. Remaining: ");

        $r18 = r24.<android.util.Pair: java.lang.Object first>;

        $r19 = (java.lang.Long) $r18;

        $l12 = virtualinvoke $r19.<java.lang.Long: long longValue()>();

        $l13 = $l12 - l0;

        $l14 = $l13 / 1000L;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds.");

        $r22 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", $r22);

     label1:
        return;

     label2:
        $r13 = r24.<android.util.Pair: java.lang.Object second>;

        $r14 = (java.lang.Long) $r13;

        $l11 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        $f0 = (float) $l11;

        $r15 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManagerConstants mConstants>;

        $f1 = virtualinvoke $r15.<com.android.server.content.SyncManagerConstants: float getRetryTimeIncreaseFactor()>();

        $f2 = $f0 * $f1;

        l16 = (long) $f2;

     label3:
        l17 = l16;

        $b1 = l16 cmp 0L;

        if $b1 > 0 goto label4;

        $r10 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManagerConstants mConstants>;

        $i6 = virtualinvoke $r10.<com.android.server.content.SyncManagerConstants: int getInitialSyncRetryTimeInSeconds()>();

        $i7 = $i6 * 1000;

        l18 = (long) $i7;

        $d0 = (double) l18;

        $d1 = $d0 * 1.1;

        $l8 = (long) $d1;

        l17 = specialinvoke r0.<com.android.server.content.SyncManager: long jitterize(long,long)>(l18, $l8);

     label4:
        $r2 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManagerConstants mConstants>;

        $i2 = virtualinvoke $r2.<com.android.server.content.SyncManagerConstants: int getMaxSyncRetryTimeInSeconds()>();

        l19 = (long) $i2;

        $l3 = l19 * 1000L;

        $b4 = l17 cmp $l3;

        if $b4 <= 0 goto label5;

        l17 = l19 * 1000L;

        goto label5;

     label5:
        l20 = l0 + l17;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label6;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Backoff until: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l20);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", delayTime: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l17);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", $r9);

     label6:
        $r3 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        virtualinvoke $r3.<com.android.server.content.SyncStorageEngine: void setBackoff(com.android.server.content.SyncStorageEngine$EndPoint,long,long)>(r23, l20, l17);

        specialinvoke r0.<com.android.server.content.SyncManager: void rescheduleSyncs(com.android.server.content.SyncStorageEngine$EndPoint,java.lang.String)>(r23, "increaseBackoffSetting");

        return;
    }

    private boolean isAdapterDelayed(com.android.server.content.SyncStorageEngine$EndPoint)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;
        long l0, $l1, $l3, $l5;
        android.util.Pair r2;
        com.android.server.content.SyncStorageEngine $r3, $r8;
        java.lang.Object $r4, $r6;
        java.lang.Long $r5, $r7;
        byte $b2, $b4, $b6;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r3 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        r2 = virtualinvoke $r3.<com.android.server.content.SyncStorageEngine: android.util.Pair getBackoff(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        if r2 == null goto label1;

        $r4 = r2.<android.util.Pair: java.lang.Object first>;

        $r5 = (java.lang.Long) $r4;

        $l1 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label1;

        $r6 = r2.<android.util.Pair: java.lang.Object first>;

        $r7 = (java.lang.Long) $r6;

        $l3 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $b4 = $l3 cmp l0;

        if $b4 <= 0 goto label1;

        return 1;

     label1:
        $r8 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $l5 = virtualinvoke $r8.<com.android.server.content.SyncStorageEngine: long getDelayUntilTime(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        $b6 = $l5 cmp l0;

        if $b6 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean isDeviceProvisioned()
    {
        com.android.server.content.SyncManager r0;
        android.content.ContentResolver r1;
        android.content.Context $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.content.SyncManager;

        $r2 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z0 = 0;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "device_provisioned", 0);

        if $i0 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    private boolean isJobIdInUseLockedH(int, java.util.List)
    {
        com.android.server.content.SyncManager r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        java.util.ArrayList $r1;
        java.lang.Object $r2, $r5;
        com.android.server.content.SyncManager$ActiveSyncContext $r3;
        com.android.server.content.SyncOperation $r4;
        android.app.job.JobInfo $r6;
        java.util.List r7;
        java.util.Iterator r8, r9;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        r7 := @parameter1: java.util.List;

        r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.app.job.JobInfo) $r5;

        $i2 = virtualinvoke $r6.<android.app.job.JobInfo: int getId()>();

        if $i2 != i0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        $r1 = r0.<com.android.server.content.SyncManager: java.util.ArrayList mActiveSyncContexts>;

        r9 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r2 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.android.server.content.SyncManager$ActiveSyncContext) $r2;

        $r4 = $r3.<com.android.server.content.SyncManager$ActiveSyncContext: com.android.server.content.SyncOperation mSyncOperation>;

        $i1 = $r4.<com.android.server.content.SyncOperation: int jobId>;

        if $i1 != i0 goto label5;

        return 1;

     label5:
        goto label4;

     label6:
        return 0;
    }

    private static boolean isSyncSetting(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("expedited");

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ignore_settings");

        if $z1 == 0 goto label02;

        return 1;

     label02:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ignore_backoff");

        if $z2 == 0 goto label03;

        return 1;

     label03:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("do_not_retry");

        if $z3 == 0 goto label04;

        return 1;

     label04:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("force");

        if $z4 == 0 goto label05;

        return 1;

     label05:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("upload");

        if $z5 == 0 goto label06;

        return 1;

     label06:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("deletions_override");

        if $z6 == 0 goto label07;

        return 1;

     label07:
        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("discard_deletions");

        if $z7 == 0 goto label08;

        return 1;

     label08:
        $z8 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("expected_upload");

        if $z8 == 0 goto label09;

        return 1;

     label09:
        $z9 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("expected_download");

        if $z9 == 0 goto label10;

        return 1;

     label10:
        $z10 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("sync_priority");

        if $z10 == 0 goto label11;

        return 1;

     label11:
        $z11 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("allow_metered");

        if $z11 == 0 goto label12;

        return 1;

     label12:
        $z12 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("initialize");

        if $z12 == 0 goto label13;

        return 1;

     label13:
        return 0;
    }

    private boolean isSyncStillActiveH(com.android.server.content.SyncManager$ActiveSyncContext)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncManager$ActiveSyncContext r1, $r5;
        java.util.Iterator r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncManager$ActiveSyncContext;

        $r3 = r0.<com.android.server.content.SyncManager: java.util.ArrayList mActiveSyncContexts>;

        r2 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.server.content.SyncManager$ActiveSyncContext) $r4;

        if $r5 != r1 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private boolean isUserUnlocked(int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        android.util.SparseBooleanArray r1, $r3;
        boolean z0;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.content.SyncManager: android.util.SparseBooleanArray mUnlockedUsers>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.content.SyncManager: android.util.SparseBooleanArray mUnlockedUsers>;

        z0 = virtualinvoke $r3.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private long jitterize(long, long)
    {
        com.android.server.content.SyncManager r0;
        long l0, $l1, $l5, $l6, l7, l8;
        java.util.Random $r2;
        byte $b2;
        java.lang.IllegalArgumentException $r3;
        int $i3, $i4;

        r0 := @this: com.android.server.content.SyncManager;

        l0 := @parameter0: long;

        l7 := @parameter1: long;

        $r2 = new java.util.Random;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r2.<java.util.Random: void <init>(long)>($l1);

        l8 = l7 - l0;

        $b2 = l8 cmp 2147483647L;

        if $b2 > 0 goto label1;

        $i3 = (int) l8;

        $i4 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>($i3);

        $l5 = (long) $i4;

        $l6 = $l5 + l0;

        return $l6;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("the difference between the maxValue and the minValue must be less than 2147483647");

        throw $r3;
    }

    public static java.lang.String lambda$EMXCZP9LDjgUTYbLsEoVu9Ccntw(com.android.server.content.SyncManager, int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.content.SyncManager;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.content.SyncManager: java.lang.String zeroToEmpty(int)>(i0);

        return $r1;
    }

    static boolean lambda$dumpPendingSyncs$8(com.android.server.content.SyncOperation)
    {
        com.android.server.content.SyncOperation r0;
        boolean $z0, $z1;

        r0 := @parameter0: com.android.server.content.SyncOperation;

        $z0 = r0.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        $z1 = $z0 ^ 1;

        return $z1;
    }

    static boolean lambda$dumpPeriodicSyncs$9(com.android.server.content.SyncOperation)
    {
        com.android.server.content.SyncOperation r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.content.SyncOperation;

        $z0 = r0.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        return $z0;
    }

    static void lambda$dumpSyncState$10(java.lang.StringBuilder, com.android.server.content.SyncManager$PrintTable, java.lang.String, android.content.SyncStatusInfo$Stats, java.util.function.Function, java.lang.Integer)
    {
        java.lang.StringBuilder r0, $r25;
        com.android.server.content.SyncManager$PrintTable r1;
        java.lang.String r2;
        android.content.SyncStatusInfo$Stats r3;
        java.util.function.Function r4;
        java.lang.Integer r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object[] $r6;
        java.lang.Object $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24;
        long $l10;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: com.android.server.content.SyncManager$PrintTable;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.content.SyncStatusInfo$Stats;

        r4 := @parameter4: java.util.function.Function;

        r5 := @parameter5: java.lang.Integer;

        virtualinvoke r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        $r6 = newarray (java.lang.Object)[11];

        $r6[0] = r2;

        $i1 = r3.<android.content.SyncStatusInfo$Stats: int numSourceLocal>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r8 = interfaceinvoke r4.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r7);

        $r6[1] = $r8;

        $i2 = r3.<android.content.SyncStatusInfo$Stats: int numSourcePoll>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r10 = interfaceinvoke r4.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r9);

        $r6[2] = $r10;

        $i3 = r3.<android.content.SyncStatusInfo$Stats: int numSourcePeriodic>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r12 = interfaceinvoke r4.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r11);

        $r6[3] = $r12;

        $i4 = r3.<android.content.SyncStatusInfo$Stats: int numSourceFeed>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r14 = interfaceinvoke r4.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r13);

        $r6[4] = $r14;

        $i5 = r3.<android.content.SyncStatusInfo$Stats: int numSourceUser>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r16 = interfaceinvoke r4.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r15);

        $r6[5] = $r16;

        $i6 = r3.<android.content.SyncStatusInfo$Stats: int numSourceOther>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r18 = interfaceinvoke r4.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r17);

        $r6[6] = $r18;

        $i7 = r3.<android.content.SyncStatusInfo$Stats: int numSyncs>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r20 = interfaceinvoke r4.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r19);

        $r6[7] = $r20;

        $i8 = r3.<android.content.SyncStatusInfo$Stats: int numFailures>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r22 = interfaceinvoke r4.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r21);

        $r6[8] = $r22;

        $i9 = r3.<android.content.SyncStatusInfo$Stats: int numCancels>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r24 = interfaceinvoke r4.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r23);

        $r6[9] = $r24;

        $l10 = r3.<android.content.SyncStatusInfo$Stats: long totalElapsedTime>;

        $r25 = staticinvoke <com.android.server.content.SyncManager: java.lang.StringBuilder formatDurationHMS(java.lang.StringBuilder,long)>(r0, $l10);

        $r6[10] = $r25;

        virtualinvoke r1.<com.android.server.content.SyncManager$PrintTable: void set(int,int,java.lang.Object[])>($i0, 3, $r6);

        return;
    }

    static java.lang.String lambda$dumpSyncState$11(java.lang.Integer)
    {
        java.lang.Integer r0;
        int $i0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Integer;

        $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r1;
    }

    static void lambda$sendOnUnsyncableAccount$12(android.content.Context, com.android.server.content.SyncManager$OnUnsyncableAccountCheck)
    {
        android.content.Context r0;
        com.android.server.content.SyncManager$OnUnsyncableAccountCheck r1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.server.content.SyncManager$OnUnsyncableAccountCheck;

        virtualinvoke r0.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r1);

        return;
    }

    static int lambda$static$6(com.android.server.content.SyncOperation, com.android.server.content.SyncOperation)
    {
        com.android.server.content.SyncOperation r0, r1;
        java.util.Comparator r2;
        com.android.server.content.SyncStorageEngine$EndPoint $r3, $r4, $r5, $r7, $r11, $r13, $r17, $r18;
        int $i0, $i1, $i2, $i3, $i8, $i9, i12, i13, i14, i15, i16, i17, i18, i19;
        android.accounts.Account $r6, $r8, $r12, $r14;
        java.lang.String $r9, $r10, $r15, $r16, $r19, $r20;
        long $l4, $l5, $l6, $l7, $l10, $l11;

        r0 := @parameter0: com.android.server.content.SyncOperation;

        r1 := @parameter1: com.android.server.content.SyncOperation;

        $r3 = r0.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $i1 = $r3.<com.android.server.content.SyncStorageEngine$EndPoint: int userId>;

        $r4 = r1.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $i0 = $r4.<com.android.server.content.SyncStorageEngine$EndPoint: int userId>;

        i12 = staticinvoke <java.lang.Integer: int compare(int,int)>($i1, $i0);

        if i12 == 0 goto label1;

        return i12;

     label1:
        r2 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        $r5 = r0.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r6 = $r5.<com.android.server.content.SyncStorageEngine$EndPoint: android.accounts.Account account>;

        $r10 = $r6.<android.accounts.Account: java.lang.String type>;

        $r7 = r1.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r8 = $r7.<com.android.server.content.SyncStorageEngine$EndPoint: android.accounts.Account account>;

        $r9 = $r8.<android.accounts.Account: java.lang.String type>;

        i13 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r10, $r9);

        if i13 == 0 goto label2;

        return i13;

     label2:
        $r11 = r0.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r12 = $r11.<com.android.server.content.SyncStorageEngine$EndPoint: android.accounts.Account account>;

        $r16 = $r12.<android.accounts.Account: java.lang.String name>;

        $r13 = r1.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r14 = $r13.<com.android.server.content.SyncStorageEngine$EndPoint: android.accounts.Account account>;

        $r15 = $r14.<android.accounts.Account: java.lang.String name>;

        i14 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r16, $r15);

        if i14 == 0 goto label3;

        return i14;

     label3:
        $r17 = r0.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r20 = $r17.<com.android.server.content.SyncStorageEngine$EndPoint: java.lang.String provider>;

        $r18 = r1.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r19 = $r18.<com.android.server.content.SyncStorageEngine$EndPoint: java.lang.String provider>;

        i15 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r20, $r19);

        if i15 == 0 goto label4;

        return i15;

     label4:
        $i3 = r0.<com.android.server.content.SyncOperation: int reason>;

        $i2 = r1.<com.android.server.content.SyncOperation: int reason>;

        i16 = staticinvoke <java.lang.Integer: int compare(int,int)>($i3, $i2);

        if i16 == 0 goto label5;

        return i16;

     label5:
        $l5 = r0.<com.android.server.content.SyncOperation: long periodMillis>;

        $l4 = r1.<com.android.server.content.SyncOperation: long periodMillis>;

        i17 = staticinvoke <java.lang.Long: int compare(long,long)>($l5, $l4);

        if i17 == 0 goto label6;

        return i17;

     label6:
        $l7 = r0.<com.android.server.content.SyncOperation: long expectedRuntime>;

        $l6 = r1.<com.android.server.content.SyncOperation: long expectedRuntime>;

        i18 = staticinvoke <java.lang.Long: int compare(long,long)>($l7, $l6);

        if i18 == 0 goto label7;

        return i18;

     label7:
        $i8 = r0.<com.android.server.content.SyncOperation: int jobId>;

        $l11 = (long) $i8;

        $i9 = r1.<com.android.server.content.SyncOperation: int jobId>;

        $l10 = (long) $i9;

        i19 = staticinvoke <java.lang.Long: int compare(long,long)>($l11, $l10);

        if i19 == 0 goto label8;

        return i19;

     label8:
        return 0;
    }

    static int lambda$static$7(com.android.server.content.SyncOperation, com.android.server.content.SyncOperation)
    {
        com.android.server.content.SyncOperation r0, r1;
        int i0, $i3;
        long $l1, $l2;
        java.util.Comparator $r2;

        r0 := @parameter0: com.android.server.content.SyncOperation;

        r1 := @parameter1: com.android.server.content.SyncOperation;

        $l2 = r0.<com.android.server.content.SyncOperation: long expectedRuntime>;

        $l1 = r1.<com.android.server.content.SyncOperation: long expectedRuntime>;

        i0 = staticinvoke <java.lang.Long: int compare(long,long)>($l2, $l1);

        if i0 == 0 goto label1;

        return i0;

     label1:
        $r2 = <com.android.server.content.SyncManager: java.util.Comparator sOpDumpComparator>;

        $i3 = interfaceinvoke $r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, r1);

        return $i3;
    }

    private boolean likelyHasPeriodicSyncs()
    {
        com.android.server.content.SyncManager r0;
        int i0;
        com.android.server.content.SyncStorageEngine $r2;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.server.content.SyncManager;

        z0 = 0;

     label1:
        $r2 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        i0 = virtualinvoke $r2.<com.android.server.content.SyncStorageEngine: int getAuthorityCount()>();

     label2:
        if i0 < 6 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private void maybeRescheduleSync(android.content.SyncResult, com.android.server.content.SyncOperation)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncOperation r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.StringBuilder $r3, $r8, $r12, $r16, $r20, $r24, $r28;
        java.lang.String $r5, $r7, $r11, $r15, $r19, $r23, $r27, $r33;
        android.content.SyncResult r34;

        r0 := @this: com.android.server.content.SyncManager;

        r34 := @parameter0: android.content.SyncResult;

        r1 := @parameter1: com.android.server.content.SyncOperation;

        z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 3);

        if z0 == 0 goto label01;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encountered error(s) during the sync: ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncManager", $r33);

     label01:
        virtualinvoke r1.<com.android.server.content.SyncOperation: void enableBackoff()>();

        $z1 = virtualinvoke r1.<com.android.server.content.SyncOperation: boolean hasDoNotRetry()>();

        if $z1 == 0 goto label02;

        $z8 = r34.<android.content.SyncResult: boolean syncAlreadyInProgress>;

        if $z8 != 0 goto label02;

        if z0 == 0 goto label12;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not retrying sync operation because SYNC_EXTRAS_DO_NOT_RETRY was specified ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncManager", $r27);

        goto label12;

     label02:
        $z2 = virtualinvoke r1.<com.android.server.content.SyncOperation: boolean isUpload()>();

        if $z2 == 0 goto label04;

        $z7 = r34.<android.content.SyncResult: boolean syncAlreadyInProgress>;

        if $z7 != 0 goto label04;

        virtualinvoke r1.<com.android.server.content.SyncOperation: void enableTwoWaySync()>();

        if z0 == 0 goto label03;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("retrying sync operation as a two-way sync because an upload-only sync encountered an error: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncManager", $r23);

     label03:
        specialinvoke r0.<com.android.server.content.SyncManager: void scheduleSyncOperationH(com.android.server.content.SyncOperation)>(r1);

        goto label12;

     label04:
        $z3 = r34.<android.content.SyncResult: boolean tooManyRetries>;

        if $z3 == 0 goto label05;

        if z0 == 0 goto label12;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not retrying sync operation because it retried too many times: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncManager", $r19);

        goto label12;

     label05:
        $z4 = virtualinvoke r34.<android.content.SyncResult: boolean madeSomeProgress()>();

        if $z4 == 0 goto label07;

        if z0 == 0 goto label06;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncManager", "retrying sync operation because even though it had an error it achieved some success");

     label06:
        specialinvoke r0.<com.android.server.content.SyncManager: void scheduleSyncOperationH(com.android.server.content.SyncOperation)>(r1);

        goto label12;

     label07:
        $z5 = r34.<android.content.SyncResult: boolean syncAlreadyInProgress>;

        if $z5 == 0 goto label09;

        if z0 == 0 goto label08;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("retrying sync operation that failed because there was already a sync in progress: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncManager", $r15);

     label08:
        specialinvoke r0.<com.android.server.content.SyncManager: void scheduleSyncOperationH(com.android.server.content.SyncOperation,long)>(r1, 10000L);

        goto label12;

     label09:
        $z6 = virtualinvoke r34.<android.content.SyncResult: boolean hasSoftError()>();

        if $z6 == 0 goto label11;

        if z0 == 0 goto label10;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("retrying sync operation because it encountered a soft error: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncManager", $r11);

     label10:
        specialinvoke r0.<com.android.server.content.SyncManager: void scheduleSyncOperationH(com.android.server.content.SyncOperation)>(r1);

        goto label12;

     label11:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not retrying sync operation because the error is a hard error: ");

        $r5 = staticinvoke <com.android.server.content.SyncLogger: java.lang.String logSafe(com.android.server.content.SyncOperation)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SyncManager", $r7);

     label12:
        return;
    }

    private void onUserRemoved(int)
    {
        com.android.server.content.SyncManager r0;
        int i0, $i1;
        java.util.Iterator r1;
        com.android.server.content.SyncOperation r2;
        java.lang.Object[] $r4;
        com.android.server.content.SyncLogger $r5;
        java.lang.Integer $r6;
        com.android.server.content.SyncStorageEngine $r7;
        java.util.List $r8;
        boolean $z0;
        java.lang.Object $r9;
        com.android.server.content.SyncStorageEngine$EndPoint $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r14;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        $r5 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = "onUserRemoved: u";

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[1] = $r6;

        virtualinvoke $r5.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r4);

        specialinvoke r0.<com.android.server.content.SyncManager: void updateRunningAccounts(com.android.server.content.SyncStorageEngine$EndPoint)>(null);

        $r7 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        virtualinvoke $r7.<com.android.server.content.SyncStorageEngine: void removeStaleAccounts(android.accounts.Account[],int)>(null, i0);

        $r8 = specialinvoke r0.<com.android.server.content.SyncManager: java.util.List getAllPendingSyncs()>();

        r1 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.content.SyncOperation) $r9;

        $r10 = r2.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $i1 = $r10.<com.android.server.content.SyncStorageEngine$EndPoint: int userId>;

        if $i1 != i0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user removed u");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.content.SyncManager: void cancelJob(com.android.server.content.SyncOperation,java.lang.String)>(r2, $r14);

     label2:
        goto label1;

     label3:
        return;
    }

    private void onUserStopped(int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        com.android.server.content.SyncStorageEngine$EndPoint $r1;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.content.SyncManager: void updateRunningAccounts(com.android.server.content.SyncStorageEngine$EndPoint)>(null);

        $r1 = new com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke $r1.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>(null, null, i0);

        virtualinvoke r0.<com.android.server.content.SyncManager: void cancelActiveSync(com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle,java.lang.String)>($r1, null, "onUserStopped");

        return;
    }

    private void onUserUnlocked(int)
    {
        com.android.server.content.SyncManager r0;
        int i0, i1, $i2, i3;
        android.accounts.Account[] r1;
        com.android.server.accounts.AccountManagerService $r2, $r5;
        android.content.SyncAdaptersCache $r3;
        com.android.server.content.SyncStorageEngine$EndPoint $r4;
        android.content.Context $r6;
        java.lang.String $r7;
        android.accounts.Account $r8;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        $r2 = staticinvoke <com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService getSingleton()>();

        virtualinvoke $r2.<com.android.server.accounts.AccountManagerService: void validateAccounts(int)>(i0);

        $r3 = r0.<com.android.server.content.SyncManager: android.content.SyncAdaptersCache mSyncAdapters>;

        virtualinvoke $r3.<android.content.SyncAdaptersCache: void invalidateCache(int)>(i0);

        $r4 = new com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke $r4.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>(null, null, i0);

        specialinvoke r0.<com.android.server.content.SyncManager: void updateRunningAccounts(com.android.server.content.SyncStorageEngine$EndPoint)>($r4);

        $r5 = staticinvoke <com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService getSingleton()>();

        $r6 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getOpPackageName()>();

        r1 = virtualinvoke $r5.<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccounts(int,java.lang.String)>(i0, $r7);

        i1 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        $r8 = r1[i3];

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        virtualinvoke r0.<com.android.server.content.SyncManager: void scheduleSync(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,int,int,int,int,java.lang.String)>($r8, i0, -8, null, null, -1, 0, $i2, -3, null);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private void postMonitorSyncProgressMessage(com.android.server.content.SyncManager$ActiveSyncContext)
    {
        com.android.server.content.SyncManager r0;
        boolean $z0;
        int $i0;
        long $l1, $l2;
        com.android.server.content.SyncManager$SyncHandler $r1, $r2;
        com.android.server.content.SyncManager$ActiveSyncContext r3;
        android.os.Message r4;

        r0 := @this: com.android.server.content.SyncManager;

        r3 := @parameter0: com.android.server.content.SyncManager$ActiveSyncContext;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", "posting MESSAGE_SYNC_MONITOR in 60s");

     label1:
        $i0 = r3.<com.android.server.content.SyncManager$ActiveSyncContext: int mSyncAdapterUid>;

        $l1 = specialinvoke r0.<com.android.server.content.SyncManager: long getTotalBytesTransferredByUid(int)>($i0);

        r3.<com.android.server.content.SyncManager$ActiveSyncContext: long mBytesTransferredAtLastPoll> = $l1;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r3.<com.android.server.content.SyncManager$ActiveSyncContext: long mLastPolledTimeElapsed> = $l2;

        $r1 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        r4 = virtualinvoke $r1.<com.android.server.content.SyncManager$SyncHandler: android.os.Message obtainMessage(int,java.lang.Object)>(8, r3);

        $r2 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        virtualinvoke $r2.<com.android.server.content.SyncManager$SyncHandler: boolean sendMessageDelayed(android.os.Message,long)>(r4, 60000L);

        return;
    }

    private void postScheduleSyncMessage(com.android.server.content.SyncOperation, long)
    {
        com.android.server.content.SyncManager r0;
        long l0;
        com.android.server.content.SyncManager$ScheduleSyncMessagePayload $r1;
        com.android.server.content.SyncManager$SyncHandler $r2;
        android.os.Message $r3;
        com.android.server.content.SyncOperation r4;

        r0 := @this: com.android.server.content.SyncManager;

        r4 := @parameter0: com.android.server.content.SyncOperation;

        l0 := @parameter1: long;

        $r1 = new com.android.server.content.SyncManager$ScheduleSyncMessagePayload;

        specialinvoke $r1.<com.android.server.content.SyncManager$ScheduleSyncMessagePayload: void <init>(com.android.server.content.SyncOperation,long)>(r4, l0);

        $r2 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        $r3 = virtualinvoke $r2.<com.android.server.content.SyncManager$SyncHandler: android.os.Message obtainMessage(int,java.lang.Object)>(12, $r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    private static boolean printTwoDigitNumber(java.lang.StringBuilder, long, char, boolean)
    {
        java.lang.StringBuilder r0;
        long l0;
        char c1;
        boolean z0;
        byte $b2, $b3;

        r0 := @parameter0: java.lang.StringBuilder;

        l0 := @parameter1: long;

        c1 := @parameter2: char;

        z0 := @parameter3: boolean;

        if z0 != 0 goto label1;

        $b3 = l0 cmp 0L;

        if $b3 != 0 goto label1;

        return 0;

     label1:
        if z0 == 0 goto label2;

        $b2 = l0 cmp 10L;

        if $b2 >= 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label2:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        return 1;
    }

    private boolean readDataConnectionState()
    {
        com.android.server.content.SyncManager r0;
        android.net.NetworkInfo r1;
        android.net.ConnectivityManager $r2;
        boolean $z0, z1;

        r0 := @this: com.android.server.content.SyncManager;

        $r2 = specialinvoke r0.<com.android.server.content.SyncManager: android.net.ConnectivityManager getConnectivityManager()>();

        r1 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static boolean readyToSync(int)
    {
        int i0;
        com.android.server.content.SyncManager r0;
        boolean $z0, $z1, $z2, z3;

        i0 := @parameter0: int;

        r0 = staticinvoke <com.android.server.content.SyncManager: com.android.server.content.SyncManager getInstance()>();

        if r0 == null goto label1;

        $z0 = staticinvoke <com.android.server.content.SyncJobService: boolean isReady()>();

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.content.SyncManager: boolean mProvisioned>;

        if $z1 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.content.SyncManager: boolean isUserUnlocked(int)>(i0);

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    private void removeStaleAccounts()
    {
        com.android.server.content.SyncManager r0;
        java.util.Iterator r1;
        android.content.pm.UserInfo r2;
        android.accounts.Account[] r3;
        android.os.UserManager $r4;
        java.util.List $r5;
        java.lang.Object $r6;
        boolean $z0, $z1;
        com.android.server.accounts.AccountManagerService $r7;
        android.content.Context $r8;
        int $i0, $i1;
        java.lang.String $r9;
        com.android.server.content.SyncStorageEngine $r10;

        r0 := @this: com.android.server.content.SyncManager;

        $r4 = r0.<com.android.server.content.SyncManager: android.os.UserManager mUserManager>;

        $r5 = virtualinvoke $r4.<android.os.UserManager: java.util.List getUsers(boolean)>(1);

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.pm.UserInfo) $r6;

        $z0 = r2.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r7 = staticinvoke <com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService getSingleton()>();

        $i0 = r2.<android.content.pm.UserInfo: int id>;

        $r8 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.String getOpPackageName()>();

        r3 = virtualinvoke $r7.<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccounts(int,java.lang.String)>($i0, $r9);

        $r10 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $i1 = r2.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r10.<com.android.server.content.SyncStorageEngine: void removeStaleAccounts(android.accounts.Account[],int)>(r3, $i1);

        goto label1;

     label3:
        return;
    }

    private void removeSyncsForAuthority(com.android.server.content.SyncStorageEngine$EndPoint, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1, $r9;
        java.lang.String r2;
        java.util.Iterator r3;
        com.android.server.content.SyncOperation r4;
        java.lang.Object[] $r5, $r10;
        com.android.server.content.SyncLogger $r6, $r11;
        java.util.List $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = "removeSyncsForAuthority: ";

        $r5[1] = r1;

        $r5[2] = r2;

        virtualinvoke $r6.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r5);

        specialinvoke r0.<com.android.server.content.SyncManager: void verifyJobScheduler()>();

        $r7 = specialinvoke r0.<com.android.server.content.SyncManager: java.util.List getAllPendingSyncs()>();

        r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.content.SyncOperation) $r8;

        $r9 = r4.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $z1 = virtualinvoke $r9.<com.android.server.content.SyncStorageEngine$EndPoint: boolean matchesSpec(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        if $z1 == 0 goto label2;

        $r11 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = "canceling: ";

        $r10[1] = r4;

        virtualinvoke $r11.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r10);

        specialinvoke r0.<com.android.server.content.SyncManager: void cancelJob(com.android.server.content.SyncOperation,java.lang.String)>(r4, r2);

     label2:
        goto label1;

     label3:
        return;
    }

    private void rescheduleSyncs(com.android.server.content.SyncStorageEngine$EndPoint, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1, $r12;
        com.android.server.content.SyncOperation r2;
        java.lang.Object[] $r3;
        com.android.server.content.SyncLogger $r4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r5;
        java.lang.String $r10, r13;
        java.lang.Object $r11;
        java.util.List r14;
        int i1, i2;
        java.util.Iterator r15;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        r13 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r3 = newarray (java.lang.Object)[4];

        $r3[0] = "rescheduleSyncs() ep=";

        $r3[1] = r1;

        $r3[2] = " why=";

        $r3[3] = r13;

        virtualinvoke $r4.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r3);

        r14 = specialinvoke r0.<com.android.server.content.SyncManager: java.util.List getAllPendingSyncs()>();

        i1 = 0;

        r15 = interfaceinvoke r14.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.content.SyncOperation) $r11;

        i2 = i1;

        $z2 = r2.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        if $z2 != 0 goto label2;

        i2 = i1;

        $r12 = r2.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $z3 = virtualinvoke $r12.<com.android.server.content.SyncStorageEngine$EndPoint: boolean matchesSpec(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        if $z3 == 0 goto label2;

        i2 = i1 + 1;

        specialinvoke r0.<com.android.server.content.SyncManager: void cancelJob(com.android.server.content.SyncOperation,java.lang.String)>(r2, r13);

        specialinvoke r0.<com.android.server.content.SyncManager: void postScheduleSyncMessage(com.android.server.content.SyncOperation,long)>(r2, 0L);

     label2:
        i1 = i2;

        goto label1;

     label3:
        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z1 == 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rescheduled ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" syncs for ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", $r10);

     label4:
        return;
    }

    private void scheduleSync(android.accounts.Account, int, int, java.lang.String, android.os.Bundle, int, long, boolean, int, int, int, java.lang.String)
    {
        com.android.server.content.SyncManager r0, r69, r80;
        int i0, i1, i2, i4, i5, i6, i7, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i23, i24, i25, i26, i27, i29, i30, $i31, i32, i38;
        java.lang.String r1, r2, $r7, $r50, r88, r91, r96;
        long l3;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z10, z11, $z13, z14, z15, $z16, z17, $z18, z19, z20, z21;
        android.accounts.Account r3, $r5, $r6, $r17, $r23, $r30, $r37, $r39, $r53, r67;
        java.lang.Object $r4, $r10, $r12, $r14, $r46, $r48;
        android.content.SyncAdaptersCache $r8, $r84;
        android.content.SyncAdapterType $r9, $r11, $r13, $r15, $r49;
        com.android.server.content.SyncStorageEngine$EndPoint $r16;
        com.android.server.content.SyncStorageEngine $r18, $r36, $r38, r93;
        android.content.ComponentName $r19, $r43;
        java.lang.Object[] $r20, $r24, $r27, $r34, $r40, $r51, $r54, $r57;
        com.android.server.content.SyncLogger $r21, $r25, $r28, $r35, $r41, $r52, $r58;
        com.android.server.content.SyncOperation $r22, $r29;
        android.os.Bundle $r26, $r31, $r42, $r66, r68, r71, r79;
        com.android.server.content._$$Lambda$SyncManager$XKEiBZ17uDgUCTwf_kh9_pH7usQ $r32;
        android.content.Context $r33;
        android.os.RemoteCallback $r44;
        com.android.server.content._$$Lambda$SyncManager$BRG_YMU_C9QC6JWVXAvsoEZC6Zc $r45;
        android.content.pm.RegisteredServicesCache$ServiceInfo $r47, r89;
        android.accounts.AccountAndUser[] $r55, r72, r73, r74, r76, r81;
        android.accounts.AccountAndUser $r56, r75, r78;
        java.lang.Integer $r59, $r60, $r61, $r62, $r65;
        java.lang.Long $r63;
        java.lang.Boolean $r64;
        java.util.HashSet $r82;
        java.util.Collection $r85;
        java.util.Iterator r86, r87;
        android.accounts.AccountManagerInternal r92;

        r0 := @this: com.android.server.content.SyncManager;

        r67 := @parameter0: android.accounts.Account;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r68 := @parameter4: android.os.Bundle;

        i2 := @parameter5: int;

        l3 := @parameter6: long;

        z0 := @parameter7: boolean;

        i4 := @parameter8: int;

        i5 := @parameter9: int;

        i6 := @parameter10: int;

        r2 := @parameter11: java.lang.String;

        r69 = r0;

        if r68 != null goto label01;

        $r66 = new android.os.Bundle;

        specialinvoke $r66.<android.os.Bundle: void <init>()>();

        r71 = $r66;

        goto label02;

     label01:
        r71 = r68;

     label02:
        virtualinvoke r71.<android.os.Bundle: int size()>();

        z11 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if z11 == 0 goto label03;

        $r58 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r57 = newarray (java.lang.Object)[22];

        $r57[0] = "scheduleSync: account=";

        $r57[1] = r67;

        $r57[2] = " u";

        $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r57[3] = $r59;

        $r57[4] = " authority=";

        $r57[5] = r1;

        $r57[6] = " reason=";

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r57[7] = $r60;

        $r57[8] = " extras=";

        $r57[9] = r71;

        $r57[10] = " cuid=";

        $r61 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r57[11] = $r61;

        $r57[12] = " cpid=";

        $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r57[13] = $r62;

        $r57[14] = " cpkg=";

        $r57[15] = r2;

        $r57[16] = " mdm=";

        $r63 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r57[17] = $r63;

        $r57[18] = " ciar=";

        $r64 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r57[19] = $r64;

        $r57[20] = " sef=";

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r57[21] = $r65;

        virtualinvoke $r58.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r57);

     label03:
        r72 = null;

        if r67 == null goto label08;

        if i0 == -1 goto label04;

        $r55 = newarray (android.accounts.AccountAndUser)[1];

        $r56 = new android.accounts.AccountAndUser;

        specialinvoke $r56.<android.accounts.AccountAndUser: void <init>(android.accounts.Account,int)>(r67, i0);

        $r55[0] = $r56;

        r73 = $r55;

        goto label09;

     label04:
        r74 = r0.<com.android.server.content.SyncManager: android.accounts.AccountAndUser[] mRunningAccounts>;

        i23 = lengthof r74;

        i24 = 0;

     label05:
        if i24 >= i23 goto label07;

        r75 = r74[i24];

        r76 = r72;

        $r53 = r75.<android.accounts.AccountAndUser: android.accounts.Account account>;

        $z10 = virtualinvoke r67.<android.accounts.Account: boolean equals(java.lang.Object)>($r53);

        if $z10 == 0 goto label06;

        $r54 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] appendElement(java.lang.Class,java.lang.Object[],java.lang.Object)>(class "Landroid/accounts/AccountAndUser;", r72, r75);

        r76 = (android.accounts.AccountAndUser[]) $r54;

     label06:
        i24 = i24 + 1;

        r72 = r76;

        goto label05;

     label07:
        r73 = r72;

        goto label09;

     label08:
        r73 = r0.<com.android.server.content.SyncManager: android.accounts.AccountAndUser[] mRunningAccounts>;

     label09:
        $z13 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r73);

        if $z13 == 0 goto label10;

        $r52 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r51 = newarray (java.lang.Object)[1];

        $r51[0] = "scheduleSync: no accounts configured, dropping";

        virtualinvoke $r52.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r51);

        return;

     label10:
        z1 = virtualinvoke r71.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("upload", 0);

        z14 = virtualinvoke r71.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("force", 0);

        if z14 == 0 goto label11;

        virtualinvoke r71.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("ignore_backoff", 1);

        virtualinvoke r71.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("ignore_settings", 1);

     label11:
        z15 = virtualinvoke r71.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("ignore_settings", 0);

        if z1 == 0 goto label12;

        i25 = 1;

        goto label16;

     label12:
        if z14 == 0 goto label13;

        i25 = 3;

        goto label16;

     label13:
        if r1 != null goto label14;

        i25 = 2;

        goto label16;

     label14:
        $z2 = virtualinvoke r71.<android.os.Bundle: boolean containsKey(java.lang.String)>("feed");

        if $z2 == 0 goto label15;

        i25 = 5;

        goto label16;

     label15:
        i25 = 0;

     label16:
        i26 = lengthof r73;

        i27 = 0;

     label17:
        if i27 >= i26 goto label41;

        r78 = r73[i27];

        if i0 < 0 goto label18;

        $i19 = r78.<android.accounts.AccountAndUser: int userId>;

        if $i19 < 0 goto label18;

        $i20 = r78.<android.accounts.AccountAndUser: int userId>;

        if i0 == $i20 goto label18;

        i29 = i27;

        i30 = i26;

        r79 = r71;

        r80 = r69;

        r81 = r73;

        goto label40;

     label18:
        $r82 = new java.util.HashSet;

        specialinvoke $r82.<java.util.HashSet: void <init>()>();

        $r84 = r69.<com.android.server.content.SyncManager: android.content.SyncAdaptersCache mSyncAdapters>;

        $i31 = r78.<android.accounts.AccountAndUser: int userId>;

        $r85 = virtualinvoke $r84.<android.content.SyncAdaptersCache: java.util.Collection getAllServices(int)>($i31);

        r86 = interfaceinvoke $r85.<java.util.Collection: java.util.Iterator iterator()>();

     label19:
        $z16 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label20;

        $r46 = interfaceinvoke r86.<java.util.Iterator: java.lang.Object next()>();

        $r47 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r46;

        $r48 = $r47.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $r49 = (android.content.SyncAdapterType) $r48;

        $r50 = $r49.<android.content.SyncAdapterType: java.lang.String authority>;

        virtualinvoke $r82.<java.util.HashSet: boolean add(java.lang.Object)>($r50);

        goto label19;

     label20:
        if r1 == null goto label21;

        z17 = virtualinvoke $r82.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        virtualinvoke $r82.<java.util.HashSet: void clear()>();

        if z17 == 0 goto label21;

        virtualinvoke $r82.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

     label21:
        r87 = virtualinvoke $r82.<java.util.HashSet: java.util.Iterator iterator()>();

     label22:
        $z18 = interfaceinvoke r87.<java.util.Iterator: boolean hasNext()>();

        if $z18 == 0 goto label39;

        $r4 = interfaceinvoke r87.<java.util.Iterator: java.lang.Object next()>();

        r88 = (java.lang.String) $r4;

        $r5 = r78.<android.accounts.AccountAndUser: android.accounts.Account account>;

        $i9 = r78.<android.accounts.AccountAndUser: int userId>;

        $z3 = z0 ^ 1;

        i32 = virtualinvoke r69.<com.android.server.content.SyncManager: int computeSyncable(android.accounts.Account,int,java.lang.String,boolean)>($r5, $i9, r88, $z3);

        if i32 != 0 goto label23;

        goto label22;

     label23:
        $r8 = r69.<com.android.server.content.SyncManager: android.content.SyncAdaptersCache mSyncAdapters>;

        $r6 = r78.<android.accounts.AccountAndUser: android.accounts.Account account>;

        $r7 = $r6.<android.accounts.Account: java.lang.String type>;

        $r9 = staticinvoke <android.content.SyncAdapterType: android.content.SyncAdapterType newKey(java.lang.String,java.lang.String)>(r88, $r7);

        $i10 = r78.<android.accounts.AccountAndUser: int userId>;

        r89 = virtualinvoke $r8.<android.content.SyncAdaptersCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(java.lang.Object,int)>($r9, $i10);

        if r89 != null goto label24;

        goto label22;

     label24:
        i7 = r89.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        if i32 != 3 goto label26;

        $r41 = r69.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r40 = newarray (java.lang.Object)[1];

        $r40[0] = "scheduleSync: Not scheduling sync operation: isSyncable == SYNCABLE_NO_ACCOUNT_ACCESS";

        virtualinvoke $r41.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r40);

        $r42 = new android.os.Bundle;

        specialinvoke $r42.<android.os.Bundle: void <init>(android.os.Bundle)>(r71);

        $r43 = r89.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        r91 = virtualinvoke $r43.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z7 = specialinvoke r69.<com.android.server.content.SyncManager: boolean wasPackageEverLaunched(java.lang.String,int)>(r91, i0);

        if $z7 != 0 goto label25;

        goto label22;

     label25:
        r92 = r69.<com.android.server.content.SyncManager: android.accounts.AccountManagerInternal mAccountManagerInternal>;

        r3 = r78.<android.accounts.AccountAndUser: android.accounts.Account account>;

        $r44 = new android.os.RemoteCallback;

        $r45 = new com.android.server.content._$$Lambda$SyncManager$BRG_YMU_C9QC6JWVXAvsoEZC6Zc;

        specialinvoke $r45.<com.android.server.content._$$Lambda$SyncManager$BRG_YMU_C9QC6JWVXAvsoEZC6Zc: void <init>(com.android.server.content.SyncManager,android.accounts.AccountAndUser,int,int,java.lang.String,android.os.Bundle,int,long,int,int,int,java.lang.String)>(r0, r78, i0, i1, r88, $r42, i2, l3, i4, i5, i6, r2);

        specialinvoke $r44.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r45);

        virtualinvoke r92.<android.accounts.AccountManagerInternal: void requestAccountAccess(android.accounts.Account,java.lang.String,int,android.os.RemoteCallback)>(r3, r91, i0, $r44);

        r69 = r0;

        goto label22;

     label26:
        $r10 = r89.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $r11 = (android.content.SyncAdapterType) $r10;

        z19 = virtualinvoke $r11.<android.content.SyncAdapterType: boolean allowParallelSyncs()>();

        $r12 = r89.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $r13 = (android.content.SyncAdapterType) $r12;

        z20 = virtualinvoke $r13.<android.content.SyncAdapterType: boolean isAlwaysSyncable()>();

        if z0 != 0 goto label27;

        if i32 >= 0 goto label27;

        if z20 == 0 goto label27;

        r93 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $r39 = r78.<android.accounts.AccountAndUser: android.accounts.Account account>;

        $i18 = r78.<android.accounts.AccountAndUser: int userId>;

        virtualinvoke r93.<com.android.server.content.SyncStorageEngine: void setIsSyncable(android.accounts.Account,int,java.lang.String,int,int,int)>($r39, $i18, r88, 1, i5, i6);

        i32 = 1;

        goto label27;

     label27:
        r69 = r0;

        if i2 == -2 goto label28;

        if i2 == i32 goto label28;

        goto label22;

     label28:
        $r14 = r89.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $r15 = (android.content.SyncAdapterType) $r14;

        $z4 = virtualinvoke $r15.<android.content.SyncAdapterType: boolean supportsUploading()>();

        if $z4 != 0 goto label29;

        if z1 == 0 goto label29;

        goto label22;

     label29:
        if i32 < 0 goto label31;

        if z15 != 0 goto label31;

        $r36 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $i16 = r78.<android.accounts.AccountAndUser: int userId>;

        $z5 = virtualinvoke $r36.<com.android.server.content.SyncStorageEngine: boolean getMasterSyncAutomatically(int)>($i16);

        if $z5 == 0 goto label30;

        $r38 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $r37 = r78.<android.accounts.AccountAndUser: android.accounts.Account account>;

        $i17 = r78.<android.accounts.AccountAndUser: int userId>;

        $z6 = virtualinvoke $r38.<com.android.server.content.SyncStorageEngine: boolean getSyncAutomatically(android.accounts.Account,int,java.lang.String)>($r37, $i17, r88);

        if $z6 == 0 goto label30;

        goto label31;

     label30:
        z21 = 0;

        goto label32;

     label31:
        z21 = 1;

     label32:
        if z21 != 0 goto label33;

        $r35 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r34 = newarray (java.lang.Object)[5];

        $r34[0] = "scheduleSync: sync of ";

        $r34[1] = r78;

        $r34[2] = " ";

        $r34[3] = r88;

        $r34[4] = " is not allowed, dropping request";

        virtualinvoke $r35.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r34);

        goto label22;

     label33:
        $r16 = new com.android.server.content.SyncStorageEngine$EndPoint;

        $r17 = r78.<android.accounts.AccountAndUser: android.accounts.Account account>;

        $i11 = r78.<android.accounts.AccountAndUser: int userId>;

        specialinvoke $r16.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>($r17, r88, $i11);

        $r18 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        virtualinvoke $r18.<com.android.server.content.SyncStorageEngine: long getDelayUntilTime(com.android.server.content.SyncStorageEngine$EndPoint)>($r16);

        $r19 = r89.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        r96 = virtualinvoke $r19.<android.content.ComponentName: java.lang.String getPackageName()>();

        if i32 != -1 goto label35;

        if z0 == 0 goto label34;

        $r31 = new android.os.Bundle;

        specialinvoke $r31.<android.os.Bundle: void <init>(android.os.Bundle)>(r71);

        $r33 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        $i15 = r78.<android.accounts.AccountAndUser: int userId>;

        $r32 = new com.android.server.content._$$Lambda$SyncManager$XKEiBZ17uDgUCTwf_kh9_pH7usQ;

        specialinvoke $r32.<com.android.server.content._$$Lambda$SyncManager$XKEiBZ17uDgUCTwf_kh9_pH7usQ: void <init>(com.android.server.content.SyncManager,android.accounts.AccountAndUser,int,java.lang.String,android.os.Bundle,int,long,int,int,int,java.lang.String)>(r0, r78, i1, r88, $r31, i2, l3, i4, i5, i6, r2);

        staticinvoke <com.android.server.content.SyncManager: void sendOnUnsyncableAccount(android.content.Context,android.content.pm.RegisteredServicesCache$ServiceInfo,int,com.android.server.content.SyncManager$OnReadyCallback)>($r33, r89, $i15, $r32);

        r69 = r0;

        goto label38;

     label34:
        $r26 = new android.os.Bundle;

        specialinvoke $r26.<android.os.Bundle: void <init>()>();

        virtualinvoke $r26.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("initialize", 1);

        r69 = r0;

        $r28 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r27 = newarray (java.lang.Object)[4];

        $r27[0] = "scheduleSync: schedule initialisation sync ";

        $r27[1] = r78;

        $r27[2] = " ";

        $r27[3] = r88;

        virtualinvoke $r28.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r27);

        $r29 = new com.android.server.content.SyncOperation;

        $r30 = r78.<android.accounts.AccountAndUser: android.accounts.Account account>;

        $i14 = r78.<android.accounts.AccountAndUser: int userId>;

        specialinvoke $r29.<com.android.server.content.SyncOperation: void <init>(android.accounts.Account,int,int,java.lang.String,int,int,java.lang.String,android.os.Bundle,boolean,int)>($r30, $i14, i7, r96, i1, i25, r88, $r26, z19, i4);

        specialinvoke r0.<com.android.server.content.SyncManager: void postScheduleSyncMessage(com.android.server.content.SyncOperation,long)>($r29, l3);

        goto label38;

     label35:
        if i2 == -2 goto label37;

        if i2 != i32 goto label36;

        goto label37;

     label36:
        $r25 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r24 = newarray (java.lang.Object)[4];

        $r24[0] = "scheduleSync: not handling ";

        $r24[1] = r78;

        $r24[2] = " ";

        $r24[3] = r88;

        virtualinvoke $r25.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r24);

        goto label38;

     label37:
        $r21 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r20 = newarray (java.lang.Object)[4];

        $r20[0] = "scheduleSync: scheduling sync ";

        $r20[1] = r78;

        $r20[2] = " ";

        $r20[3] = r88;

        virtualinvoke $r21.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r20);

        $r22 = new com.android.server.content.SyncOperation;

        $r23 = r78.<android.accounts.AccountAndUser: android.accounts.Account account>;

        $i13 = r78.<android.accounts.AccountAndUser: int userId>;

        specialinvoke $r22.<com.android.server.content.SyncOperation: void <init>(android.accounts.Account,int,int,java.lang.String,int,int,java.lang.String,android.os.Bundle,boolean,int)>($r23, $i13, i7, r96, i1, i25, r88, r71, z19, i4);

        specialinvoke r0.<com.android.server.content.SyncManager: void postScheduleSyncMessage(com.android.server.content.SyncOperation,long)>($r22, l3);

     label38:
        goto label22;

     label39:
        i29 = i27;

        i30 = i26;

        r79 = r71;

        r80 = r69;

        r81 = r73;

     label40:
        i38 = i29 + 1;

        i26 = i30;

        i27 = i38;

        r73 = r81;

        r71 = r79;

        r69 = r80;

        goto label17;

     label41:
        return;
    }

    private void scheduleSyncOperationH(com.android.server.content.SyncOperation)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncOperation r1;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncOperation;

        specialinvoke r0.<com.android.server.content.SyncManager: void scheduleSyncOperationH(com.android.server.content.SyncOperation,long)>(r1, 0L);

        return;
    }

    private void scheduleSyncOperationH(com.android.server.content.SyncOperation, long)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncOperation r1, $r56, r93, r94, r95, r98, r100;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, $z16;
        long l0, $l13, $l15, $l16, $l19, $l30, $l31, $l34, $l36, $l38, l42, l43, l44, l45, l46, l49;
        java.util.Iterator r2, r90, r99;
        int i1, $i3, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i14, $i18, $i21, $i24, $i25, $i26, $i27, $i28, i48, i50, i51, $i52;
        byte $b2, $b4, $b23, $b32, $b35, $b37, b53, b54;
        android.app.job.JobInfo$Builder $r3, $r7, $r8, $r9, $r10, r103;
        android.content.ComponentName $r4;
        android.content.Context $r5;
        android.os.PersistableBundle $r6;
        com.android.server.content.SyncStorageEngine $r11, $r64, $r70;
        com.android.server.content.SyncStorageEngine$EndPoint $r12, $r15, $r47, $r50, $r63, $r69, $r79;
        android.app.job.JobScheduler $r13;
        android.app.job.JobInfo $r14;
        java.lang.String $r16, $r17, $r18, $r21, $r27, $r29, $r32, $r33, $r37, $r42, $r49, $r52, $r53, $r57, $r58, $r62, $r76, $r80, $r82, r97;
        java.lang.Object $r19, $r31, $r51, $r54, $r65, $r67, $r105;
        com.android.server.content.SyncManagerConstants $r20;
        java.lang.StringBuilder $r25, $r34, $r38, $r59, $r71, $r77;
        java.util.ArrayList $r30;
        com.android.server.content.SyncManager$ActiveSyncContext $r55;
        java.lang.Long $r66, $r68, $r84, $r85;
        android.util.Pair $r83, r86, r87;
        java.util.List r92;
        com.android.server.DeviceIdleInternal r104;
        android.app.usage.UsageStatsManagerInternal r106;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncOperation;

        l42 := @parameter1: long;

        z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyncManager", "Can\'t schedule null sync operation.");

        return;

     label01:
        $z1 = virtualinvoke r1.<com.android.server.content.SyncOperation: boolean hasIgnoreBackoff()>();

        if $z1 != 0 goto label08;

        $r64 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $r63 = r1.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        r86 = virtualinvoke $r64.<com.android.server.content.SyncStorageEngine: android.util.Pair getBackoff(com.android.server.content.SyncStorageEngine$EndPoint)>($r63);

        r87 = r86;

        if r86 != null goto label02;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find backoff values for ");

        $r79 = r1.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r80 = staticinvoke <com.android.server.content.SyncLogger: java.lang.String logSafe(com.android.server.content.SyncStorageEngine$EndPoint)>($r79);

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r82 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyncManager", $r82);

        $r83 = new android.util.Pair;

        $r84 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L);

        $r85 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L);

        specialinvoke $r83.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r84, $r85);

        r87 = $r83;

     label02:
        l43 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r65 = r87.<android.util.Pair: java.lang.Object first>;

        $r66 = (java.lang.Long) $r65;

        $l34 = virtualinvoke $r66.<java.lang.Long: long longValue()>();

        $b35 = $l34 cmp -1L;

        if $b35 != 0 goto label03;

        l44 = 0L;

        goto label04;

     label03:
        $r67 = r87.<android.util.Pair: java.lang.Object first>;

        $r68 = (java.lang.Long) $r67;

        $l36 = virtualinvoke $r68.<java.lang.Long: long longValue()>();

        l44 = $l36 - l43;

     label04:
        $r70 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $r69 = r1.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        l0 = virtualinvoke $r70.<com.android.server.content.SyncStorageEngine: long getDelayUntilTime(com.android.server.content.SyncStorageEngine$EndPoint)>($r69);

        $b37 = l0 cmp l43;

        if $b37 <= 0 goto label05;

        l45 = l0 - l43;

        goto label06;

     label05:
        l45 = 0L;

     label06:
        if z0 == 0 goto label07;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("backoff delay:");

        virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l44);

        virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" delayUntil delay:");

        virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l45);

        $r76 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", $r76);

     label07:
        $l38 = staticinvoke <java.lang.Math: long max(long,long)>(l44, l45);

        l42 = staticinvoke <java.lang.Math: long max(long,long)>(l42, $l38);

        goto label08;

     label08:
        l46 = l42;

        $b2 = l42 cmp 0L;

        if $b2 >= 0 goto label09;

        l46 = 0L;

     label09:
        $z2 = r1.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        if $z2 != 0 goto label30;

        $r30 = r0.<com.android.server.content.SyncManager: java.util.ArrayList mActiveSyncContexts>;

        r90 = virtualinvoke $r30.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $z7 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label13;

        $r54 = interfaceinvoke r90.<java.util.Iterator: java.lang.Object next()>();

        $r55 = (com.android.server.content.SyncManager$ActiveSyncContext) $r54;

        $r56 = $r55.<com.android.server.content.SyncManager$ActiveSyncContext: com.android.server.content.SyncOperation mSyncOperation>;

        $r58 = $r56.<com.android.server.content.SyncOperation: java.lang.String key>;

        $r57 = r1.<com.android.server.content.SyncOperation: java.lang.String key>;

        $z12 = virtualinvoke $r58.<java.lang.String: boolean equals(java.lang.Object)>($r57);

        if $z12 == 0 goto label12;

        if z0 == 0 goto label11;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate sync is already running. Not scheduling ");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SyncManager", $r62);

     label11:
        return;

     label12:
        goto label10;

     label13:
        i48 = 0;

        l49 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l19 = l49 + l46;

        r1.<com.android.server.content.SyncOperation: long expectedRuntime> = $l19;

        r92 = specialinvoke r0.<com.android.server.content.SyncManager: java.util.List getAllPendingSyncs()>();

        r93 = r1;

        r2 = interfaceinvoke r92.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z13 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label18;

        $r51 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r94 = (com.android.server.content.SyncOperation) $r51;

        $z10 = r94.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        if $z10 == 0 goto label15;

        goto label14;

     label15:
        $r53 = r94.<com.android.server.content.SyncOperation: java.lang.String key>;

        $r52 = r1.<com.android.server.content.SyncOperation: java.lang.String key>;

        $z11 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>($r52);

        if $z11 == 0 goto label17;

        r95 = r93;

        $l31 = r93.<com.android.server.content.SyncOperation: long expectedRuntime>;

        $l30 = r94.<com.android.server.content.SyncOperation: long expectedRuntime>;

        $b32 = $l31 cmp $l30;

        if $b32 <= 0 goto label16;

        r95 = r94;

     label16:
        i48 = i48 + 1;

        r93 = r95;

        goto label17;

     label17:
        goto label14;

     label18:
        if i48 <= 1 goto label21;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("duplicates found when scheduling a sync operation: owningUid=");

        $i27 = r1.<com.android.server.content.SyncOperation: int owningUid>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; owningPackage=");

        $r42 = r1.<com.android.server.content.SyncOperation: java.lang.String owningPackage>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; source=");

        $i28 = r1.<com.android.server.content.SyncOperation: int syncSource>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; adapter=");

        $r47 = r1.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        if $r47 == null goto label19;

        $r50 = r1.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        r97 = $r50.<com.android.server.content.SyncStorageEngine$EndPoint: java.lang.String provider>;

        goto label20;

     label19:
        r97 = "unknown";

     label20:
        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r97);

        $r49 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("SyncManager", $r49);

     label21:
        i50 = 0;

        r98 = r93;

        if r1 == r93 goto label22;

        i50 = 0;

        r98 = r93;

        $b23 = l46 cmp 0L;

        if $b23 != 0 goto label22;

        i50 = 0;

        r98 = r93;

        $i25 = r93.<com.android.server.content.SyncOperation: int syncExemptionFlag>;

        $i24 = r1.<com.android.server.content.SyncOperation: int syncExemptionFlag>;

        if $i25 >= $i24 goto label22;

        r98 = r1;

        $i26 = r1.<com.android.server.content.SyncOperation: int syncExemptionFlag>;

        i50 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i26);

     label22:
        r99 = interfaceinvoke r92.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $z14 = interfaceinvoke r99.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label27;

        $r31 = interfaceinvoke r99.<java.util.Iterator: java.lang.Object next()>();

        r100 = (com.android.server.content.SyncOperation) $r31;

        $z8 = r100.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        if $z8 == 0 goto label24;

        goto label23;

     label24:
        i51 = i50;

        $r33 = r100.<com.android.server.content.SyncOperation: java.lang.String key>;

        $r32 = r1.<com.android.server.content.SyncOperation: java.lang.String key>;

        $z9 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>($r32);

        if $z9 == 0 goto label26;

        i51 = i50;

        if r100 == r98 goto label26;

        if z0 == 0 goto label25;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cancelling duplicate sync ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r100);

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", $r37);

     label25:
        $i21 = r100.<com.android.server.content.SyncOperation: int syncExemptionFlag>;

        i51 = staticinvoke <java.lang.Math: int max(int,int)>(i50, $i21);

        specialinvoke r0.<com.android.server.content.SyncManager: void cancelJob(com.android.server.content.SyncOperation,java.lang.String)>(r100, "scheduleSyncOperationH-duplicate");

     label26:
        i50 = i51;

        goto label23;

     label27:
        if r98 == r1 goto label29;

        if z0 == 0 goto label28;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", "Not scheduling because a duplicate exists.");

     label28:
        return;

     label29:
        z15 = z0;

        if i50 <= 0 goto label31;

        r1.<com.android.server.content.SyncOperation: int syncExemptionFlag> = i50;

        z15 = z0;

        goto label31;

     label30:
        z15 = z0;

     label31:
        $i52 = r1.<com.android.server.content.SyncOperation: int jobId>;

        if $i52 != -1 goto label32;

        $i18 = specialinvoke r0.<com.android.server.content.SyncManager: int getUnusedJobIdH()>();

        r1.<com.android.server.content.SyncOperation: int jobId> = $i18;

     label32:
        if z15 == 0 goto label33;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduling sync operation ");

        $r27 = virtualinvoke r1.<com.android.server.content.SyncOperation: java.lang.String toString()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", $r29);

     label33:
        i1 = virtualinvoke r1.<com.android.server.content.SyncOperation: int findPriority()>();

        $z3 = virtualinvoke r1.<com.android.server.content.SyncOperation: boolean isNotAllowedOnMetered()>();

        if $z3 == 0 goto label34;

        b53 = 2;

        goto label35;

     label34:
        b53 = 1;

     label35:
        $z4 = virtualinvoke r1.<com.android.server.content.SyncOperation: boolean isAppStandbyExempted()>();

        if $z4 == 0 goto label36;

        b54 = 8;

        goto label37;

     label36:
        b54 = 0;

     label37:
        $r3 = new android.app.job.JobInfo$Builder;

        $i3 = r1.<com.android.server.content.SyncOperation: int jobId>;

        $r4 = new android.content.ComponentName;

        $r5 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        specialinvoke $r4.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>($r5, class "Lcom/android/server/content/SyncJobService;");

        specialinvoke $r3.<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>($i3, $r4);

        $r6 = virtualinvoke r1.<com.android.server.content.SyncOperation: android.os.PersistableBundle toJobInfoExtras()>();

        $r7 = virtualinvoke $r3.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setExtras(android.os.PersistableBundle)>($r6);

        $r8 = virtualinvoke $r7.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiredNetworkType(int)>(b53);

        $r9 = virtualinvoke $r8.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPersisted(boolean)>(1);

        $r10 = virtualinvoke $r9.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPriority(int)>(i1);

        r103 = virtualinvoke $r10.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setFlags(int)>(b54);

        $z5 = r1.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        if $z5 == 0 goto label38;

        $l16 = r1.<com.android.server.content.SyncOperation: long periodMillis>;

        $l15 = r1.<com.android.server.content.SyncOperation: long flexMillis>;

        virtualinvoke r103.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPeriodic(long,long)>($l16, $l15);

        goto label40;

     label38:
        $b4 = l46 cmp 0L;

        if $b4 <= 0 goto label39;

        virtualinvoke r103.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setMinimumLatency(long)>(l46);

     label39:
        $r11 = virtualinvoke r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        $r12 = r1.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        virtualinvoke $r11.<com.android.server.content.SyncStorageEngine: void markPending(com.android.server.content.SyncStorageEngine$EndPoint,boolean)>($r12, 1);

     label40:
        $z16 = virtualinvoke r1.<com.android.server.content.SyncOperation: boolean hasRequireCharging()>();

        if $z16 == 0 goto label41;

        virtualinvoke r103.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresCharging(boolean)>(1);

     label41:
        $i5 = r1.<com.android.server.content.SyncOperation: int syncExemptionFlag>;

        if $i5 != 2 goto label42;

        $r19 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/DeviceIdleInternal;");

        r104 = (com.android.server.DeviceIdleInternal) $r19;

        if r104 == null goto label42;

        $r21 = r1.<com.android.server.content.SyncOperation: java.lang.String owningPackage>;

        $r20 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManagerConstants mConstants>;

        $i10 = virtualinvoke $r20.<com.android.server.content.SyncManagerConstants: int getKeyExemptionTempWhitelistDurationInSeconds()>();

        $i11 = $i10 * 1000;

        $l13 = (long) $i11;

        $i12 = r1.<com.android.server.content.SyncOperation: int owningUid>;

        $i14 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i12);

        interfaceinvoke r104.<com.android.server.DeviceIdleInternal: void addPowerSaveTempWhitelistApp(int,java.lang.String,long,int,boolean,java.lang.String)>(1000, $r21, $l13, $i14, 0, "sync by top app");

     label42:
        $r105 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/usage/UsageStatsManagerInternal;");

        r106 = (android.app.usage.UsageStatsManagerInternal) $r105;

        if r106 == null goto label43;

        $r18 = r1.<com.android.server.content.SyncOperation: java.lang.String owningPackage>;

        $i8 = r1.<com.android.server.content.SyncOperation: int owningUid>;

        $i9 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i8);

        $z6 = virtualinvoke r1.<com.android.server.content.SyncOperation: boolean isAppStandbyExempted()>();

        virtualinvoke r106.<android.app.usage.UsageStatsManagerInternal: void reportSyncScheduled(java.lang.String,int,boolean)>($r18, $i9, $z6);

     label43:
        $r13 = specialinvoke r0.<com.android.server.content.SyncManager: android.app.job.JobScheduler getJobScheduler()>();

        $r14 = virtualinvoke r103.<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>();

        $r16 = r1.<com.android.server.content.SyncOperation: java.lang.String owningPackage>;

        $r15 = r1.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $i6 = $r15.<com.android.server.content.SyncStorageEngine$EndPoint: int userId>;

        $r17 = virtualinvoke r1.<com.android.server.content.SyncOperation: java.lang.String wakeLockName()>();

        virtualinvoke $r13.<android.app.job.JobScheduler: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>($r14, $r16, $i6, $r17);

        return;
    }

    private void sendCancelSyncsMessage(com.android.server.content.SyncStorageEngine$EndPoint, android.os.Bundle, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;
        android.os.Bundle r2;
        boolean $z0;
        java.lang.Object[] $r3;
        com.android.server.content.SyncLogger $r4;
        com.android.server.content.SyncManager$SyncHandler $r5, $r6;
        java.lang.String r7;
        android.os.Message r8;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        r2 := @parameter1: android.os.Bundle;

        r7 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", "sending MESSAGE_CANCEL");

     label1:
        $r4 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r3 = newarray (java.lang.Object)[4];

        $r3[0] = "sendCancelSyncsMessage() ep=";

        $r3[1] = r1;

        $r3[2] = " why=";

        $r3[3] = r7;

        virtualinvoke $r4.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r3);

        $r5 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        r8 = virtualinvoke $r5.<com.android.server.content.SyncManager$SyncHandler: android.os.Message obtainMessage()>();

        r8.<android.os.Message: int what> = 6;

        virtualinvoke r8.<android.os.Message: void setData(android.os.Bundle)>(r2);

        r8.<android.os.Message: java.lang.Object obj> = r1;

        $r6 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        virtualinvoke $r6.<com.android.server.content.SyncManager$SyncHandler: boolean sendMessage(android.os.Message)>(r8);

        return;
    }

    public static void sendMessage(android.os.Message)
    {
        android.os.Message r0;
        com.android.server.content.SyncManager r1;
        com.android.server.content.SyncManager$SyncHandler $r2;

        r0 := @parameter0: android.os.Message;

        r1 = staticinvoke <com.android.server.content.SyncManager: com.android.server.content.SyncManager getInstance()>();

        if r1 == null goto label1;

        $r2 = r1.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        virtualinvoke $r2.<com.android.server.content.SyncManager$SyncHandler: boolean sendMessage(android.os.Message)>(r0);

     label1:
        return;
    }

    static void sendOnUnsyncableAccount(android.content.Context, android.content.pm.RegisteredServicesCache$ServiceInfo, int, com.android.server.content.SyncManager$OnReadyCallback)
    {
        android.content.Context r0;
        android.content.pm.RegisteredServicesCache$ServiceInfo r1;
        int i0;
        com.android.server.content.SyncManager$OnUnsyncableAccountCheck $r2;
        android.content.ComponentName $r3;
        android.content.Intent $r4;
        android.os.UserHandle $r5;
        boolean $z0;
        android.os.Handler $r6;
        android.os.Looper $r7;
        com.android.server.content._$$Lambda$SyncManager$zZUXjd_GLFQgHtMQ3vq0EWHvir8 $r8;
        com.android.server.content.SyncManager$OnReadyCallback r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.pm.RegisteredServicesCache$ServiceInfo;

        i0 := @parameter2: int;

        r9 := @parameter3: com.android.server.content.SyncManager$OnReadyCallback;

        $r2 = new com.android.server.content.SyncManager$OnUnsyncableAccountCheck;

        specialinvoke $r2.<com.android.server.content.SyncManager$OnUnsyncableAccountCheck: void <init>(android.content.pm.RegisteredServicesCache$ServiceInfo,com.android.server.content.SyncManager$OnReadyCallback)>(r1, r9);

        $r3 = r1.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        $r4 = staticinvoke <com.android.server.content.SyncManager: android.content.Intent getAdapterBindIntent(android.content.Context,android.content.ComponentName,int)>(r0, $r3, i0);

        $r5 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        $z0 = virtualinvoke r0.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>($r4, $r2, 21, $r5);

        if $z0 == 0 goto label1;

        $r6 = new android.os.Handler;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Looper)>($r7);

        $r8 = new com.android.server.content._$$Lambda$SyncManager$zZUXjd_GLFQgHtMQ3vq0EWHvir8;

        specialinvoke $r8.<com.android.server.content._$$Lambda$SyncManager$zZUXjd_GLFQgHtMQ3vq0EWHvir8: void <init>(android.content.Context,com.android.server.content.SyncManager$OnUnsyncableAccountCheck)>(r0, $r2);

        virtualinvoke $r6.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r8, 5000L);

        goto label2;

     label1:
        staticinvoke <com.android.server.content.SyncManager$OnUnsyncableAccountCheck: void access$2400(com.android.server.content.SyncManager$OnUnsyncableAccountCheck)>($r2);

     label2:
        return;
    }

    private void sendSyncFinishedOrCanceledMessage(com.android.server.content.SyncManager$ActiveSyncContext, android.content.SyncResult)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncManager$ActiveSyncContext r1;
        android.content.SyncResult r2;
        android.os.Message r3;
        boolean $z0;
        com.android.server.content.SyncManager$SyncHandler $r4, $r6;
        com.android.server.content.SyncManager$SyncFinishedOrCancelledMessagePayload $r5;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncManager$ActiveSyncContext;

        r2 := @parameter1: android.content.SyncResult;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", "sending MESSAGE_SYNC_FINISHED");

     label1:
        $r4 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        r3 = virtualinvoke $r4.<com.android.server.content.SyncManager$SyncHandler: android.os.Message obtainMessage()>();

        r3.<android.os.Message: int what> = 1;

        $r5 = new com.android.server.content.SyncManager$SyncFinishedOrCancelledMessagePayload;

        specialinvoke $r5.<com.android.server.content.SyncManager$SyncFinishedOrCancelledMessagePayload: void <init>(com.android.server.content.SyncManager,com.android.server.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>(r0, r1, r2);

        r3.<android.os.Message: java.lang.Object obj> = $r5;

        $r6 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        virtualinvoke $r6.<com.android.server.content.SyncManager$SyncHandler: boolean sendMessage(android.os.Message)>(r3);

        return;
    }

    private void setAuthorityPendingState(com.android.server.content.SyncStorageEngine$EndPoint)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1, $r7;
        java.util.Iterator r2;
        com.android.server.content.SyncOperation r3;
        java.util.List $r4;
        boolean $z0, $z1, $z2;
        com.android.server.content.SyncStorageEngine $r5, $r8;
        java.lang.Object $r6;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        $r4 = specialinvoke r0.<com.android.server.content.SyncManager: java.util.List getAllPendingSyncs()>();

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.content.SyncOperation) $r6;

        $z1 = r3.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        if $z1 != 0 goto label2;

        $r7 = r3.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $z2 = virtualinvoke $r7.<com.android.server.content.SyncStorageEngine$EndPoint: boolean matchesSpec(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        if $z2 == 0 goto label2;

        $r8 = virtualinvoke r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        virtualinvoke $r8.<com.android.server.content.SyncStorageEngine: void markPending(com.android.server.content.SyncStorageEngine$EndPoint,boolean)>(r1, 1);

        return;

     label2:
        goto label1;

     label3:
        $r5 = virtualinvoke r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        virtualinvoke $r5.<com.android.server.content.SyncStorageEngine: void markPending(com.android.server.content.SyncStorageEngine$EndPoint,boolean)>(r1, 0);

        return;
    }

    private void setDelayUntilTime(com.android.server.content.SyncStorageEngine$EndPoint, long)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;
        long l0, $l3, $l4, l5, l6, l7;
        byte $b1;
        com.android.server.content.SyncStorageEngine $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r6, $r12;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        l5 := @parameter1: long;

        l0 = 1000L * l5;

        l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b1 = l0 cmp l6;

        if $b1 <= 0 goto label1;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = l0 - l6;

        l7 = $l3 + $l4;

        goto label2;

     label1:
        l7 = 0L;

     label2:
        $r2 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        virtualinvoke $r2.<com.android.server.content.SyncStorageEngine: void setDelayUntilTime(com.android.server.content.SyncStorageEngine$EndPoint,long)>(r1, l7);

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delay Until time set to ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l7);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", $r12);

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delayUntil newDelayUntilTime: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l7);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.content.SyncManager: void rescheduleSyncs(com.android.server.content.SyncStorageEngine$EndPoint,java.lang.String)>(r1, $r6);

        return;
    }

    public static boolean syncExtrasEquals(android.os.Bundle, android.os.Bundle, boolean)
    {
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.Set $r1;
        java.lang.Object $r2, $r3, $r4;
        android.os.Bundle r5, r6, r7;
        java.util.Iterator r8;

        r5 := @parameter0: android.os.Bundle;

        r6 := @parameter1: android.os.Bundle;

        z0 := @parameter2: boolean;

        if r5 != r6 goto label01;

        return 1;

     label01:
        if z0 == 0 goto label02;

        $i4 = virtualinvoke r5.<android.os.Bundle: int size()>();

        $i5 = virtualinvoke r6.<android.os.Bundle: int size()>();

        if $i4 == $i5 goto label02;

        return 0;

     label02:
        $i0 = virtualinvoke r5.<android.os.Bundle: int size()>();

        $i1 = virtualinvoke r6.<android.os.Bundle: int size()>();

        if $i0 <= $i1 goto label03;

        r7 = r5;

        goto label04;

     label03:
        r7 = r6;

     label04:
        $i2 = virtualinvoke r5.<android.os.Bundle: int size()>();

        $i3 = virtualinvoke r6.<android.os.Bundle: int size()>();

        if $i2 <= $i3 goto label05;

        r5 = r6;

        goto label05;

     label05:
        $r1 = virtualinvoke r7.<android.os.Bundle: java.util.Set keySet()>();

        r8 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r2 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r0 = (java.lang.String) $r2;

        if z0 != 0 goto label07;

        $z3 = staticinvoke <com.android.server.content.SyncManager: boolean isSyncSetting(java.lang.String)>(r0);

        if $z3 == 0 goto label07;

        goto label06;

     label07:
        $z1 = virtualinvoke r5.<android.os.Bundle: boolean containsKey(java.lang.String)>(r0);

        if $z1 != 0 goto label08;

        return 0;

     label08:
        $r3 = virtualinvoke r7.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r0);

        $r4 = virtualinvoke r5.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r0);

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z2 != 0 goto label09;

        return 0;

     label09:
        goto label06;

     label10:
        return 1;
    }

    private void updateRunningAccounts(com.android.server.content.SyncStorageEngine$EndPoint)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;
        android.os.Message r2;
        boolean $z0;
        com.android.server.content.SyncManager$SyncHandler $r3;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SyncManager", "sending MESSAGE_ACCOUNTS_UPDATED");

     label1:
        $r3 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        r2 = virtualinvoke $r3.<com.android.server.content.SyncManager$SyncHandler: android.os.Message obtainMessage(int)>(9);

        r2.<android.os.Message: java.lang.Object obj> = r1;

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void verifyJobScheduler()
    {
        com.android.server.content.SyncManager r0;
        long l0;
        com.android.server.content.SyncOperation r1;
        android.content.Context $r2;
        java.lang.Object $r3, $r5, $r22;
        android.app.job.JobScheduler $r4, $r7, r30;
        com.android.server.job.JobSchedulerInternal $r6;
        int $i1, i5, i6, i7, i8;
        java.lang.String $r15, $r21, r35;
        java.lang.Object[] $r17;
        com.android.server.content.SyncLogger $r18;
        boolean $z0, $z1, z2, z3, z4;
        android.app.job.JobInfo $r23;
        android.os.PersistableBundle $r24;
        com.android.server.content.SyncStorageEngine$EndPoint $r25;
        com.android.server.content.SyncStorageEngine $r26;
        java.lang.Throwable $r27, $r28, $r29, r31;
        java.util.List r32;
        java.util.Iterator r33;
        java.lang.StringBuilder r34, r36;

        r0 := @this: com.android.server.content.SyncManager;

        entermonitor r0;

     label01:
        r30 = r0.<com.android.server.content.SyncManager: android.app.job.JobScheduler mJobScheduler>;

     label02:
        if r30 == null goto label03;

        exitmonitor r0;

        return;

     label03:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

     label05:
        if z2 == 0 goto label09;

     label06:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncManager", "initializing JobScheduler object.");

     label07:
        goto label09;

     label08:
        $r27 := @caughtexception;

        r31 = $r27;

        goto label28;

     label09:
        $r2 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("jobscheduler");

        $r4 = (android.app.job.JobScheduler) $r3;

        r0.<com.android.server.content.SyncManager: android.app.job.JobScheduler mJobScheduler> = $r4;

        $r5 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/job/JobSchedulerInternal;");

        $r6 = (com.android.server.job.JobSchedulerInternal) $r5;

        r0.<com.android.server.content.SyncManager: com.android.server.job.JobSchedulerInternal mJobSchedulerInternal> = $r6;

        $r7 = r0.<com.android.server.content.SyncManager: android.app.job.JobScheduler mJobScheduler>;

        r32 = virtualinvoke $r7.<android.app.job.JobScheduler: java.util.List getAllPendingJobs()>();

     label10:
        i5 = 0;

        i6 = 0;

     label11:
        r33 = interfaceinvoke r32.<java.util.List: java.util.Iterator iterator()>();

     label12:
        z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

     label13:
        if z3 == 0 goto label22;

     label14:
        $r22 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (android.app.job.JobInfo) $r22;

        $r24 = virtualinvoke $r23.<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>();

        r1 = staticinvoke <com.android.server.content.SyncOperation: com.android.server.content.SyncOperation maybeCreateFromJobExtras(android.os.PersistableBundle)>($r24);

     label15:
        i7 = i5;

        i8 = i6;

        if r1 == null goto label21;

     label16:
        $z1 = r1.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        if $z1 == 0 goto label18;

     label17:
        i7 = i5 + 1;

        i8 = i6;

        goto label21;

     label18:
        i8 = i6 + 1;

     label19:
        $r26 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $r25 = r1.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        virtualinvoke $r26.<com.android.server.content.SyncStorageEngine: void markPending(com.android.server.content.SyncStorageEngine$EndPoint,boolean)>($r25, 1);

     label20:
        i7 = i5;

     label21:
        i5 = i7;

        i6 = i8;

        goto label12;

     label22:
        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded persisted syncs: ");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" periodic syncs, ");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" oneshot syncs, ");

        $i1 = interfaceinvoke r32.<java.util.List: int size()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total system server jobs, ");

        $r15 = specialinvoke r0.<com.android.server.content.SyncManager: java.lang.String getJobStats()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        r35 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SyncManager", r35);

        $r18 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = r35;

        virtualinvoke $r18.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r17);

        specialinvoke r0.<com.android.server.content.SyncManager: void cleanupJobs()>();

        z4 = <com.android.server.content.SyncManager: boolean ENABLE_SUSPICIOUS_CHECK>;

     label23:
        if z4 == 0 goto label25;

        if i5 != 0 goto label25;

     label24:
        $z0 = specialinvoke r0.<com.android.server.content.SyncManager: boolean likelyHasPeriodicSyncs()>();

        if $z0 == 0 goto label25;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Device booted with no persisted periodic syncs: ");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r21 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("SyncManager", $r21);

     label25:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label26:
        exitmonitor r0;

        return;

     label27:
        $r28 := @caughtexception;

        r31 = $r28;

     label28:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r31;

     label29:
        $r29 := @caughtexception;

        exitmonitor r0;

        throw $r29;

        catch java.lang.Throwable from label01 to label02 with label29;
        catch java.lang.Throwable from label03 to label04 with label29;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.lang.Throwable from label14 to label15 with label08;
        catch java.lang.Throwable from label16 to label17 with label08;
        catch java.lang.Throwable from label19 to label20 with label08;
        catch java.lang.Throwable from label22 to label23 with label27;
        catch java.lang.Throwable from label24 to label25 with label08;
        catch java.lang.Throwable from label25 to label26 with label29;
        catch java.lang.Throwable from label28 to label29 with label29;
    }

    private boolean wasPackageEverLaunched(java.lang.String, int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        boolean z0;
        android.content.pm.PackageManagerInternal $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.content.SyncManager;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<com.android.server.content.SyncManager: android.content.pm.PackageManagerInternal mPackageManagerInternal>;

        z0 = virtualinvoke $r1.<android.content.pm.PackageManagerInternal: boolean wasPackageEverLaunched(java.lang.String,int)>(r3, i0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    private void whiteListExistingSyncAdaptersIfNeeded()
    {
        com.android.server.content.SyncManager r0;
        java.util.List r1;
        int i0, i1, i2, $i3, i4, i5;
        android.os.UserHandle r2;
        java.util.Iterator r3;
        android.content.pm.RegisteredServicesCache$ServiceInfo r4;
        java.lang.String r5, $r18;
        android.accounts.Account[] r6;
        android.accounts.Account r7;
        com.android.server.content.SyncStorageEngine $r8;
        boolean $z0, $z1, $z2;
        android.os.UserManager $r9;
        java.lang.Object $r10, $r14, $r16;
        android.content.pm.UserInfo $r11;
        android.content.SyncAdaptersCache $r12;
        java.util.Collection $r13;
        android.content.ComponentName $r15;
        android.content.SyncAdapterType $r17;
        android.accounts.AccountManager $r19, $r20;

        r0 := @this: com.android.server.content.SyncManager;

        $r8 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $z0 = virtualinvoke $r8.<com.android.server.content.SyncStorageEngine: boolean shouldGrantSyncAdaptersAccountAccess()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r9 = r0.<com.android.server.content.SyncManager: android.os.UserManager mUserManager>;

        r1 = virtualinvoke $r9.<android.os.UserManager: java.util.List getUsers(boolean)>(1);

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i4 = 0;

     label2:
        if i4 >= i0 goto label8;

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);

        $r11 = (android.content.pm.UserInfo) $r10;

        r2 = virtualinvoke $r11.<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>();

        i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $r12 = r0.<com.android.server.content.SyncManager: android.content.SyncAdaptersCache mSyncAdapters>;

        $r13 = virtualinvoke $r12.<android.content.SyncAdaptersCache: java.util.Collection getAllServices(int)>(i1);

        r3 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r14;

        $r15 = r4.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        r5 = virtualinvoke $r15.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r19 = r0.<com.android.server.content.SyncManager: android.accounts.AccountManager mAccountManager>;

        $r16 = r4.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $r17 = (android.content.SyncAdapterType) $r16;

        $r18 = $r17.<android.content.SyncAdapterType: java.lang.String accountType>;

        r6 = virtualinvoke $r19.<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeAsUser(java.lang.String,android.os.UserHandle)>($r18, r2);

        i2 = lengthof r6;

        i5 = 0;

     label4:
        if i5 >= i2 goto label6;

        r7 = r6[i5];

        $z2 = specialinvoke r0.<com.android.server.content.SyncManager: boolean canAccessAccount(android.accounts.Account,java.lang.String,int)>(r7, r5, i1);

        if $z2 != 0 goto label5;

        $r20 = r0.<com.android.server.content.SyncManager: android.accounts.AccountManager mAccountManager>;

        $i3 = r4.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        virtualinvoke $r20.<android.accounts.AccountManager: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>(r7, "com.android.AccountManager.ACCOUNT_ACCESS_TOKEN_TYPE", $i3, 1);

     label5:
        i5 = i5 + 1;

        goto label4;

     label6:
        goto label3;

     label7:
        i4 = i4 + 1;

        goto label2;

     label8:
        return;
    }

    private java.lang.String zeroToEmpty(int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        goto label2;

     label1:
        r1 = "";

     label2:
        return r1;
    }

    public void cancelActiveSync(com.android.server.content.SyncStorageEngine$EndPoint, android.os.Bundle, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1;
        android.os.Bundle r2;
        java.lang.String r3;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.content.SyncManager: void sendCancelSyncsMessage(com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle,java.lang.String)>(r1, r2, r3);

        return;
    }

    public void cancelScheduledSyncOperation(com.android.server.content.SyncStorageEngine$EndPoint, android.os.Bundle)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1, $r9;
        android.os.Bundle r2;
        java.util.Iterator r3;
        com.android.server.content.SyncOperation r4;
        java.util.List $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.server.content.SyncStorageEngine $r6, $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        r2 := @parameter1: android.os.Bundle;

        $r5 = specialinvoke r0.<com.android.server.content.SyncManager: java.util.List getAllPendingSyncs()>();

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.content.SyncOperation) $r8;

        $z2 = r4.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        if $z2 != 0 goto label2;

        $r9 = r4.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $z3 = virtualinvoke $r9.<com.android.server.content.SyncStorageEngine$EndPoint: boolean matchesSpec(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        if $z3 == 0 goto label2;

        $z4 = virtualinvoke r4.<com.android.server.content.SyncOperation: boolean areExtrasEqual(android.os.Bundle,boolean)>(r2, 0);

        if $z4 == 0 goto label2;

        specialinvoke r0.<com.android.server.content.SyncManager: void cancelJob(com.android.server.content.SyncOperation,java.lang.String)>(r4, "cancelScheduledSyncOperation");

     label2:
        goto label1;

     label3:
        specialinvoke r0.<com.android.server.content.SyncManager: void setAuthorityPendingState(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        $r6 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $z1 = virtualinvoke $r6.<com.android.server.content.SyncStorageEngine: boolean isSyncPending(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        if $z1 != 0 goto label4;

        $r7 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        virtualinvoke $r7.<com.android.server.content.SyncStorageEngine: void setBackoff(com.android.server.content.SyncStorageEngine$EndPoint,long,long)>(r1, -1L, -1L);

     label4:
        return;
    }

    public void clearScheduledSyncOperations(com.android.server.content.SyncStorageEngine$EndPoint)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1, $r7, $r9;
        java.util.Iterator r2;
        com.android.server.content.SyncOperation r3;
        java.util.List $r4;
        boolean $z0, $z1, $z2;
        com.android.server.content.SyncStorageEngine $r5, $r8;
        java.lang.Object $r6;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        $r4 = specialinvoke r0.<com.android.server.content.SyncManager: java.util.List getAllPendingSyncs()>();

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.content.SyncOperation) $r6;

        $z1 = r3.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        if $z1 != 0 goto label2;

        $r7 = r3.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $z2 = virtualinvoke $r7.<com.android.server.content.SyncStorageEngine$EndPoint: boolean matchesSpec(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        if $z2 == 0 goto label2;

        specialinvoke r0.<com.android.server.content.SyncManager: void cancelJob(com.android.server.content.SyncOperation,java.lang.String)>(r3, "clearScheduledSyncOperations");

        $r8 = virtualinvoke r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        $r9 = r3.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        virtualinvoke $r8.<com.android.server.content.SyncStorageEngine: void markPending(com.android.server.content.SyncStorageEngine$EndPoint,boolean)>($r9, 0);

     label2:
        goto label1;

     label3:
        $r5 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        virtualinvoke $r5.<com.android.server.content.SyncStorageEngine: void setBackoff(com.android.server.content.SyncStorageEngine$EndPoint,long,long)>(r1, -1L, -1L);

        return;
    }

    public int computeSyncable(android.accounts.Account, int, java.lang.String, boolean)
    {
        com.android.server.content.SyncManager r0;
        android.accounts.Account r1;
        boolean z0, $z1, $z2;
        int i0, $i1, $i3, i5, i6;
        android.content.pm.RegisteredServicesCache$ServiceInfo r2;
        java.lang.String $r3, $r9, $r15, $r22, r24, r26;
        android.content.SyncAdaptersCache $r4;
        android.content.ComponentName $r5, $r19;
        android.app.IActivityManager $r6;
        java.lang.StringBuilder $r7, r27;
        android.os.RemoteException $r23;
        android.content.SyncAdapterType r25;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: android.accounts.Account;

        i5 := @parameter1: int;

        r24 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        i0 = specialinvoke r0.<com.android.server.content.SyncManager: int getIsSyncable(android.accounts.Account,int,java.lang.String)>(r1, i5, r24);

        if i0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r1.<android.accounts.Account: java.lang.String type>;

        r25 = staticinvoke <android.content.SyncAdapterType: android.content.SyncAdapterType newKey(java.lang.String,java.lang.String)>(r24, $r3);

        $r4 = r0.<com.android.server.content.SyncManager: android.content.SyncAdaptersCache mSyncAdapters>;

        r2 = virtualinvoke $r4.<android.content.SyncAdaptersCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(java.lang.Object,int)>(r25, i5);

        if r2 != null goto label2;

        return 0;

     label2:
        i6 = r2.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        $r5 = r2.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        r26 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getPackageName()>();

     label3:
        $r6 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $z1 = interfaceinvoke $r6.<android.app.IActivityManager: boolean isAppStartModeDisabled(int,java.lang.String)>(i6, r26);

        if $z1 == 0 goto label5;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not scheduling job ");

        $i3 = r2.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r19 = r2.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- package not allowed to start");

        $r22 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SyncManager", $r22);

     label4:
        return 0;

     label5:
        goto label7;

     label6:
        $r23 := @caughtexception;

     label7:
        if z0 == 0 goto label8;

        $z2 = specialinvoke r0.<com.android.server.content.SyncManager: boolean canAccessAccount(android.accounts.Account,java.lang.String,int)>(r1, r26, i6);

        if $z2 != 0 goto label8;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Access to ");

        $r9 = staticinvoke <com.android.server.content.SyncLogger: java.lang.String logSafe(android.accounts.Account)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" denied for package ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in UID ");

        $i1 = r2.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SyncManager", $r15);

        return 3;

     label8:
        return i0;

        catch android.os.RemoteException from label3 to label4 with label6;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, boolean)
    {
        com.android.server.content.SyncManager r0;
        java.io.PrintWriter r1;
        boolean z0;
        com.android.internal.util.IndentingPrintWriter $r2;
        com.android.server.content.SyncAdapterStateFetcher $r3;
        com.android.server.content.SyncManagerConstants $r4;
        com.android.server.content.SyncLogger $r5;
        java.io.FileDescriptor r6;

        r0 := @this: com.android.server.content.SyncManager;

        r6 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        z0 := @parameter2: boolean;

        $r2 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r1, "  ");

        $r3 = new com.android.server.content.SyncAdapterStateFetcher;

        specialinvoke $r3.<com.android.server.content.SyncAdapterStateFetcher: void <init>()>();

        virtualinvoke r0.<com.android.server.content.SyncManager: void dumpSyncState(java.io.PrintWriter,com.android.server.content.SyncAdapterStateFetcher)>($r2, $r3);

        $r4 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManagerConstants mConstants>;

        virtualinvoke $r4.<com.android.server.content.SyncManagerConstants: void dump(java.io.PrintWriter,java.lang.String)>(r1, "");

        specialinvoke r0.<com.android.server.content.SyncManager: void dumpSyncAdapters(com.android.internal.util.IndentingPrintWriter)>($r2);

        if z0 == 0 goto label1;

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Detailed Sync History");

        $r5 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        virtualinvoke $r5.<com.android.server.content.SyncLogger: void dumpAll(java.io.PrintWriter)>(r1);

     label1:
        return;
    }

    protected void dumpPendingSyncs(java.io.PrintWriter, com.android.server.content.SyncAdapterStateFetcher)
    {
        com.android.server.content.SyncManager r0;
        java.io.PrintWriter r1;
        com.android.server.content.SyncAdapterStateFetcher r2;
        java.util.Iterator r3;
        com.android.server.content.'-$$Lambda$SyncManager$rDUHWai3SU0BXk1TE0bLDap9gVc' $r4;
        int $i0;
        java.util.Comparator $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.String $r7;
        java.util.List r8;
        com.android.server.content.SyncOperation r9;
        java.util.function.Predicate r10;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: com.android.server.content.SyncAdapterStateFetcher;

        r8 = specialinvoke r0.<com.android.server.content.SyncManager: java.util.List getAllPendingSyncs()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Pending Syncs: ");

        $r4 = <com.android.server.content._$$Lambda$SyncManager$rDUHWai3SU0BXk1TE0bLDap9gVc: com.android.server.content.'-$$Lambda$SyncManager$rDUHWai3SU0BXk1TE0bLDap9gVc' INSTANCE>;

        r10 = (java.util.function.Predicate) $r4;

        $i0 = staticinvoke <com.android.server.content.SyncManager: int countIf(java.util.Collection,java.util.function.Predicate)>(r8, r10);

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i0);

        $r5 = <com.android.server.content.SyncManager: java.util.Comparator sOpRuntimeComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r8, $r5);

        r3 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.android.server.content.SyncOperation) $r6;

        $z1 = r9.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        if $z1 != 0 goto label2;

        $r7 = virtualinvoke r9.<com.android.server.content.SyncOperation: java.lang.String dump(android.content.pm.PackageManager,boolean,com.android.server.content.SyncAdapterStateFetcher,boolean)>(null, 0, r2, 0);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

     label2:
        goto label1;

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    protected void dumpPeriodicSyncs(java.io.PrintWriter, com.android.server.content.SyncAdapterStateFetcher)
    {
        com.android.server.content.SyncManager r0;
        java.io.PrintWriter r1;
        com.android.server.content.SyncAdapterStateFetcher r2;
        java.util.Iterator r3;
        com.android.server.content.'-$$Lambda$SyncManager$ag0YGuZ1oL06fytmNlyErbNyYcw' $r4;
        int $i0;
        java.util.Comparator $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.String $r7;
        java.util.List r8;
        com.android.server.content.SyncOperation r9;
        java.util.function.Predicate r10;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: com.android.server.content.SyncAdapterStateFetcher;

        r8 = specialinvoke r0.<com.android.server.content.SyncManager: java.util.List getAllPendingSyncs()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Periodic Syncs: ");

        $r4 = <com.android.server.content._$$Lambda$SyncManager$ag0YGuZ1oL06fytmNlyErbNyYcw: com.android.server.content.'-$$Lambda$SyncManager$ag0YGuZ1oL06fytmNlyErbNyYcw' INSTANCE>;

        r10 = (java.util.function.Predicate) $r4;

        $i0 = staticinvoke <com.android.server.content.SyncManager: int countIf(java.util.Collection,java.util.function.Predicate)>(r8, r10);

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i0);

        $r5 = <com.android.server.content.SyncManager: java.util.Comparator sOpDumpComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r8, $r5);

        r3 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.android.server.content.SyncOperation) $r6;

        $z1 = r9.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke r9.<com.android.server.content.SyncOperation: java.lang.String dump(android.content.pm.PackageManager,boolean,com.android.server.content.SyncAdapterStateFetcher,boolean)>(null, 0, r2, 0);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

     label2:
        goto label1;

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    protected void dumpSyncHistory(java.io.PrintWriter)
    {
        com.android.server.content.SyncManager r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: java.io.PrintWriter;

        specialinvoke r0.<com.android.server.content.SyncManager: void dumpRecentHistory(java.io.PrintWriter)>(r1);

        specialinvoke r0.<com.android.server.content.SyncManager: void dumpDayStatistics(java.io.PrintWriter)>(r1);

        return;
    }

    protected void dumpSyncState(java.io.PrintWriter, com.android.server.content.SyncAdapterStateFetcher)
    {
        com.android.server.content.SyncManager r0;
        java.util.List r2;
        android.accounts.AccountAndUser[] r3, $r10;
        long l0, l1, $l3, $l4, $l11, $l12, $l13, $l21, $l23, $l26, $l28, $l29, $l30, $l31, $l32, $l34, $l35, $l36, $l37, $l38, $l41, $l51;
        com.android.server.content.SyncStorageEngine$AuthorityInfo r4;
        android.content.SyncStatusInfo r5, $r48, $r50, $r52, $r55, $r62, $r66;
        java.lang.String r6, $r13, $r16, $r27, $r36, $r40, $r45, $r53, $r56, $r59, $r60, $r64, $r68, $r84, $r85, $r89, $r112, $r116, $r118, $r120, $r123, $r127, $r129, $r134, $r139, $r145, $r154, r166, r175, r176, r177, r187;
        int i2, $i5, $i6, $i7, $i8, $i9, $i10, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i25, $i27, $i39, $i40, $i42, $i43, $i44, i45, i46, i47, i48, i49, i50, i53, i54, i55, i56, i57, i58;
        java.lang.StringBuilder $r7, $r11, $r17, $r20, $r23, $r110, $r121, $r130, $r135, $r143, $r147;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z9, $z10, $z11, $z12, z13, $z14, z15, $z16;
        com.android.server.content.SyncStorageEngine $r8, $r31, $r91, $r151;
        com.android.server.accounts.AccountManagerService $r9;
        com.android.server.content.SyncManager$SyncHandler $r18, $r21;
        com.android.server.content.SyncManager$SyncTimeTracker $r19, $r22;
        java.util.ArrayList $r25, $r29, $r30, r171, r179, r181;
        android.content.Context $r28;
        java.lang.Object $r32, $r33, $r37, $r41, $r43, $r47, $r49, $r51, $r54, $r61, $r65, $r80, $r81, $r87, $r92, $r93, $r142, $r146;
        com.android.server.content.SyncStorageEngine$EndPoint $r34, $r38, $r42, $r44, $r86, $r94, $r96;
        android.accounts.Account $r35, $r39, $r70, $r71, $r83, $r90;
        java.lang.String[] $r46, $r58, $r111, $r122;
        java.lang.Object[] $r57, $r72, $r76, $r97, $r115, $r117, $r119, $r126, $r128, $r133, $r138, $r140;
        long[] $r63, $r67;
        android.util.SparseBooleanArray $r69, r174;
        java.lang.Integer $r73, $r98, $r103, $r106, $r109;
        com.android.server.content.SyncManager$PrintTable $r75;
        android.content.SyncAdaptersCache $r77;
        java.util.Collection $r78;
        com.android.server.content.SyncManager$13 $r79;
        android.content.SyncAdapterType $r82, $r88;
        android.util.Pair $r95, r186, r194;
        java.lang.Boolean $r99;
        com.android.server.content._$$Lambda$SyncManager$9EoLpTk5JrHZn9R_uS0lqCVrpRw $r100;
        android.content.SyncStatusInfo$Stats $r101, $r105, $r108;
        com.android.server.content.'-$$Lambda$SyncManager$pdoEVnuSkmOrvULQ9M7Ic-lU5vw' $r102;
        com.android.server.content._$$Lambda$SyncManager$EMXCZP9LDjgUTYbLsEoVu9Ccntw $r104, $r107;
        byte $b22, $b24, $b33, $b52;
        java.lang.Long $r141;
        com.android.server.content.SyncOperation $r144;
        java.lang.Throwable $r155, $r156, r193;
        java.io.PrintWriter r157;
        com.android.server.content.SyncAdapterStateFetcher r158;
        android.os.PowerManager r160;
        android.net.ConnectivityManager r161;
        java.util.Iterator r162, r169, r180;
        android.content.pm.UserInfo r163;
        android.content.pm.PackageManager r168;
        com.android.server.content.SyncManager$ActiveSyncContext r170;
        android.accounts.AccountAndUser r173;
        android.content.pm.RegisteredServicesCache$ServiceInfo r185;

        r0 := @this: com.android.server.content.SyncManager;

        r157 := @parameter0: java.io.PrintWriter;

        r158 := @parameter1: com.android.server.content.SyncAdapterStateFetcher;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("Data connected: ");

        $z0 = r0.<com.android.server.content.SyncManager: boolean mDataConnectionIsConnected>;

        virtualinvoke r157.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("Battery saver: ");

        r160 = r0.<com.android.server.content.SyncManager: android.os.PowerManager mPowerManager>;

        if r160 == null goto label01;

        $z12 = virtualinvoke r160.<android.os.PowerManager: boolean isPowerSaveMode()>();

        if $z12 == 0 goto label01;

        z13 = 1;

        goto label02;

     label01:
        z13 = 0;

     label02:
        virtualinvoke r157.<java.io.PrintWriter: void println(boolean)>(z13);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("Background network restriction: ");

        r161 = specialinvoke r0.<com.android.server.content.SyncManager: android.net.ConnectivityManager getConnectivityManager()>();

        if r161 != null goto label03;

        i45 = -1;

        goto label04;

     label03:
        i45 = virtualinvoke r161.<android.net.ConnectivityManager: int getRestrictBackgroundStatus()>();

     label04:
        if i45 == 1 goto label07;

        if i45 == 2 goto label06;

        if i45 == 3 goto label05;

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("Unknown(");

        virtualinvoke r157.<java.io.PrintWriter: void print(int)>(i45);

        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>(")");

        goto label08;

     label05:
        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>(" enabled");

        goto label08;

     label06:
        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>(" whitelisted");

        goto label08;

     label07:
        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>(" disabled");

     label08:
        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("Auto sync: ");

        r2 = specialinvoke r0.<com.android.server.content.SyncManager: java.util.List getAllUsers()>();

        if r2 == null goto label11;

        r162 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z10 = interfaceinvoke r162.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label10;

        $r146 = interfaceinvoke r162.<java.util.Iterator: java.lang.Object next()>();

        r163 = (android.content.pm.UserInfo) $r146;

        $r147 = new java.lang.StringBuilder;

        specialinvoke $r147.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("u");

        $i43 = r163.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i43);

        virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r151 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $i44 = r163.<android.content.pm.UserInfo: int id>;

        $z11 = virtualinvoke $r151.<com.android.server.content.SyncStorageEngine: boolean getMasterSyncAutomatically(int)>($i44);

        virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r154 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>($r154);

        goto label09;

     label10:
        virtualinvoke r157.<java.io.PrintWriter: void println()>();

     label11:
        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("Memory low: ");

        $z1 = r0.<com.android.server.content.SyncManager: boolean mStorageIsLow>;

        virtualinvoke r157.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("Device idle: ");

        $z2 = r0.<com.android.server.content.SyncManager: boolean mDeviceIsIdle>;

        virtualinvoke r157.<java.io.PrintWriter: void println(boolean)>($z2);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("Reported active: ");

        $z3 = r0.<com.android.server.content.SyncManager: boolean mReportedSyncActive>;

        virtualinvoke r157.<java.io.PrintWriter: void println(boolean)>($z3);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("Clock valid: ");

        $r8 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $z4 = virtualinvoke $r8.<com.android.server.content.SyncStorageEngine: boolean isClockValid()>();

        virtualinvoke r157.<java.io.PrintWriter: void println(boolean)>($z4);

        $r9 = staticinvoke <com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService getSingleton()>();

        r3 = virtualinvoke $r9.<com.android.server.accounts.AccountManagerService: android.accounts.AccountAndUser[] getAllAccounts()>();

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("Accounts: ");

        $r10 = <com.android.server.content.SyncManager: android.accounts.AccountAndUser[] INITIAL_ACCOUNTS_ARRAY>;

        if r3 == $r10 goto label12;

        $i42 = lengthof r3;

        virtualinvoke r157.<java.io.PrintWriter: void println(int)>($i42);

        goto label13;

     label12:
        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>("not known yet");

     label13:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("Now: ");

        virtualinvoke r157.<java.io.PrintWriter: void print(long)>(l0);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r13 = staticinvoke <com.android.server.content.SyncManager: java.lang.String formatTime(long)>($l3);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        virtualinvoke $r7.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("Uptime: ");

        $r17 = staticinvoke <com.android.server.content.SyncManager: java.lang.StringBuilder formatDurationHMS(java.lang.StringBuilder,long)>($r7, l0);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.Object)>($r17);

        virtualinvoke r157.<java.io.PrintWriter: void println()>();

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("Time spent syncing: ");

        virtualinvoke $r7.<java.lang.StringBuilder: void setLength(int)>(0);

        $r18 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        $r19 = $r18.<com.android.server.content.SyncManager$SyncHandler: com.android.server.content.SyncManager$SyncTimeTracker mSyncTimeTracker>;

        $l4 = virtualinvoke $r19.<com.android.server.content.SyncManager$SyncTimeTracker: long timeSpentSyncing()>();

        $r20 = staticinvoke <com.android.server.content.SyncManager: java.lang.StringBuilder formatDurationHMS(java.lang.StringBuilder,long)>($r7, $l4);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.Object)>($r20);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>(", sync ");

        $r21 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        $r22 = $r21.<com.android.server.content.SyncManager$SyncHandler: com.android.server.content.SyncManager$SyncTimeTracker mSyncTimeTracker>;

        $z5 = $r22.<com.android.server.content.SyncManager$SyncTimeTracker: boolean mLastWasSyncing>;

        if $z5 == 0 goto label14;

        r166 = "";

        goto label15;

     label14:
        r166 = "not ";

     label15:
        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>(r166);

        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>("in progress");

        virtualinvoke r157.<java.io.PrintWriter: void println()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Active Syncs: ");

        $r25 = r0.<com.android.server.content.SyncManager: java.util.ArrayList mActiveSyncContexts>;

        $i5 = virtualinvoke $r25.<java.util.ArrayList: int size()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        $r28 = r0.<com.android.server.content.SyncManager: android.content.Context mContext>;

        r168 = virtualinvoke $r28.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r29 = r0.<com.android.server.content.SyncManager: java.util.ArrayList mActiveSyncContexts>;

        r169 = virtualinvoke $r29.<java.util.ArrayList: java.util.Iterator iterator()>();

     label16:
        $z14 = interfaceinvoke r169.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label17;

        $r142 = interfaceinvoke r169.<java.util.Iterator: java.lang.Object next()>();

        r170 = (com.android.server.content.SyncManager$ActiveSyncContext) $r142;

        l1 = r170.<com.android.server.content.SyncManager$ActiveSyncContext: long mStartTime>;

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke $r7.<java.lang.StringBuilder: void setLength(int)>(0);

        $l41 = l0 - l1;

        $r143 = staticinvoke <com.android.server.content.SyncManager: java.lang.StringBuilder formatDurationHMS(java.lang.StringBuilder,long)>($r7, $l41);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.Object)>($r143);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>(" - ");

        $r144 = r170.<com.android.server.content.SyncManager$ActiveSyncContext: com.android.server.content.SyncOperation mSyncOperation>;

        $r145 = virtualinvoke $r144.<com.android.server.content.SyncOperation: java.lang.String dump(android.content.pm.PackageManager,boolean,com.android.server.content.SyncAdapterStateFetcher,boolean)>(r168, 0, r158, 0);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>($r145);

        virtualinvoke r157.<java.io.PrintWriter: void println()>();

        goto label16;

     label17:
        virtualinvoke r157.<java.io.PrintWriter: void println()>();

        virtualinvoke r0.<com.android.server.content.SyncManager: void dumpPendingSyncs(java.io.PrintWriter,com.android.server.content.SyncAdapterStateFetcher)>(r157, r158);

        virtualinvoke r0.<com.android.server.content.SyncManager: void dumpPeriodicSyncs(java.io.PrintWriter,com.android.server.content.SyncAdapterStateFetcher)>(r157, r158);

        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>("Sync Status");

        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r171 = $r30;

        $r31 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        virtualinvoke $r31.<com.android.server.content.SyncStorageEngine: void resetTodayStats(boolean)>(0);

        i46 = lengthof r3;

        i47 = 0;

     label18:
        if i47 >= i46 goto label35;

        r173 = r3[i47];

        r174 = r0.<com.android.server.content.SyncManager: android.util.SparseBooleanArray mUnlockedUsers>;

        entermonitor r174;

     label19:
        $r69 = r0.<com.android.server.content.SyncManager: android.util.SparseBooleanArray mUnlockedUsers>;

        $i14 = r173.<android.accounts.AccountAndUser: int userId>;

        z15 = virtualinvoke $r69.<android.util.SparseBooleanArray: boolean get(int)>($i14);

        exitmonitor r174;

     label20:
        $r70 = r173.<android.accounts.AccountAndUser: android.accounts.Account account>;

        r175 = $r70.<android.accounts.Account: java.lang.String name>;

        i48 = r173.<android.accounts.AccountAndUser: int userId>;

        $r71 = r173.<android.accounts.AccountAndUser: android.accounts.Account account>;

        r176 = $r71.<android.accounts.Account: java.lang.String type>;

        if z15 == 0 goto label21;

        r177 = "";

        goto label22;

     label21:
        r177 = " (locked)";

     label22:
        $r72 = newarray (java.lang.Object)[4];

        $r72[0] = r175;

        $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i48);

        $r72[1] = $r73;

        $r72[2] = r176;

        $r72[3] = r177;

        virtualinvoke r157.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Account %s u%d %s%s\n", $r72);

        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>("=======================================================================");

        $r75 = new com.android.server.content.SyncManager$PrintTable;

        specialinvoke $r75.<com.android.server.content.SyncManager$PrintTable: void <init>(int)>(16);

        $r76 = newarray (java.lang.Object)[16];

        $r76[0] = "Authority";

        $r76[1] = "Syncable";

        $r76[2] = "Enabled";

        $r76[3] = "Stats";

        $r76[4] = "Loc";

        $r76[5] = "Poll";

        $r76[6] = "Per";

        $r76[7] = "Feed";

        $r76[8] = "User";

        $r76[9] = "Othr";

        $r76[10] = "Tot";

        $r76[11] = "Fail";

        $r76[12] = "Can";

        $r76[13] = "Time";

        $r76[14] = "Last Sync";

        $r76[15] = "Backoff";

        virtualinvoke $r75.<com.android.server.content.SyncManager$PrintTable: void set(int,int,java.lang.Object[])>(0, 0, $r76);

        r179 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        $r77 = r0.<com.android.server.content.SyncManager: android.content.SyncAdaptersCache mSyncAdapters>;

        $i15 = r173.<android.accounts.AccountAndUser: int userId>;

        $r78 = virtualinvoke $r77.<android.content.SyncAdaptersCache: java.util.Collection getAllServices(int)>($i15);

        interfaceinvoke r179.<java.util.List: boolean addAll(java.util.Collection)>($r78);

        $r79 = new com.android.server.content.SyncManager$13;

        specialinvoke $r79.<com.android.server.content.SyncManager$13: void <init>(com.android.server.content.SyncManager)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r179, $r79);

        r180 = interfaceinvoke r179.<java.util.List: java.util.Iterator iterator()>();

        r181 = r171;

     label23:
        $z16 = interfaceinvoke r180.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label30;

        $r80 = interfaceinvoke r180.<java.util.Iterator: java.lang.Object next()>();

        r185 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r80;

        $r81 = r185.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $r82 = (android.content.SyncAdapterType) $r81;

        $r85 = $r82.<android.content.SyncAdapterType: java.lang.String accountType>;

        $r83 = r173.<android.accounts.AccountAndUser: android.accounts.Account account>;

        $r84 = $r83.<android.accounts.Account: java.lang.String type>;

        $z7 = virtualinvoke $r85.<java.lang.String: boolean equals(java.lang.Object)>($r84);

        if $z7 != 0 goto label24;

        goto label23;

     label24:
        i49 = virtualinvoke $r75.<com.android.server.content.SyncManager$PrintTable: int getNumRows()>();

        $r91 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        $r86 = new com.android.server.content.SyncStorageEngine$EndPoint;

        $r90 = r173.<android.accounts.AccountAndUser: android.accounts.Account account>;

        $r87 = r185.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $r88 = (android.content.SyncAdapterType) $r87;

        $r89 = $r88.<android.content.SyncAdapterType: java.lang.String authority>;

        $i16 = r173.<android.accounts.AccountAndUser: int userId>;

        specialinvoke $r86.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>($r90, $r89, $i16);

        r186 = virtualinvoke $r91.<com.android.server.content.SyncStorageEngine: android.util.Pair getCopyOfAuthorityWithSyncStatus(com.android.server.content.SyncStorageEngine$EndPoint)>($r86);

        $r92 = r186.<android.util.Pair: java.lang.Object first>;

        r4 = (com.android.server.content.SyncStorageEngine$AuthorityInfo) $r92;

        $r93 = r186.<android.util.Pair: java.lang.Object second>;

        r5 = (android.content.SyncStatusInfo) $r93;

        $r94 = r4.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r95 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r94, r5);

        virtualinvoke r181.<java.util.ArrayList: boolean add(java.lang.Object)>($r95);

        $r96 = r4.<com.android.server.content.SyncStorageEngine$AuthorityInfo: com.android.server.content.SyncStorageEngine$EndPoint target>;

        r6 = $r96.<com.android.server.content.SyncStorageEngine$EndPoint: java.lang.String provider>;

        r187 = r6;

        $i17 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i17 <= 50 goto label25;

        $i39 = virtualinvoke r6.<java.lang.String: int length()>();

        $i40 = $i39 - 50;

        r187 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i40);

     label25:
        $r97 = newarray (java.lang.Object)[3];

        $r97[0] = r187;

        $i18 = r4.<com.android.server.content.SyncStorageEngine$AuthorityInfo: int syncable>;

        $r98 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r97[1] = $r98;

        $z9 = r4.<com.android.server.content.SyncStorageEngine$AuthorityInfo: boolean enabled>;

        $r99 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9);

        $r97[2] = $r99;

        virtualinvoke $r75.<com.android.server.content.SyncManager$PrintTable: void set(int,int,java.lang.Object[])>(i49, 0, $r97);

        $r100 = new com.android.server.content._$$Lambda$SyncManager$9EoLpTk5JrHZn9R_uS0lqCVrpRw;

        specialinvoke $r100.<com.android.server.content._$$Lambda$SyncManager$9EoLpTk5JrHZn9R_uS0lqCVrpRw: void <init>(java.lang.StringBuilder,com.android.server.content.SyncManager$PrintTable)>($r7, $r75);

        $r101 = r5.<android.content.SyncStatusInfo: android.content.SyncStatusInfo$Stats totalStats>;

        $r102 = <com.android.server.content._$$Lambda$SyncManager$pdoEVnuSkmOrvULQ9M7Ic_lU5vw: com.android.server.content.'-$$Lambda$SyncManager$pdoEVnuSkmOrvULQ9M7Ic-lU5vw' INSTANCE>;

        $r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i49);

        interfaceinvoke $r100.<com.android.internal.util.function.QuadConsumer: void accept(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("Total", $r101, $r102, $r103);

        $r105 = r5.<android.content.SyncStatusInfo: android.content.SyncStatusInfo$Stats todayStats>;

        $r104 = new com.android.server.content._$$Lambda$SyncManager$EMXCZP9LDjgUTYbLsEoVu9Ccntw;

        specialinvoke $r104.<com.android.server.content._$$Lambda$SyncManager$EMXCZP9LDjgUTYbLsEoVu9Ccntw: void <init>(com.android.server.content.SyncManager)>(r0);

        $i19 = i49 + 1;

        $r106 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        interfaceinvoke $r100.<com.android.internal.util.function.QuadConsumer: void accept(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("Today", $r105, $r104, $r106);

        $r108 = r5.<android.content.SyncStatusInfo: android.content.SyncStatusInfo$Stats yesterdayStats>;

        $r107 = new com.android.server.content._$$Lambda$SyncManager$EMXCZP9LDjgUTYbLsEoVu9Ccntw;

        specialinvoke $r107.<com.android.server.content._$$Lambda$SyncManager$EMXCZP9LDjgUTYbLsEoVu9Ccntw: void <init>(com.android.server.content.SyncManager)>(r0);

        $i20 = i49 + 2;

        $r109 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        interfaceinvoke $r100.<com.android.internal.util.function.QuadConsumer: void accept(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("Yestr", $r108, $r107, $r109);

        $l21 = r4.<com.android.server.content.SyncStorageEngine$AuthorityInfo: long delayUntil>;

        $b22 = $l21 cmp l0;

        if $b22 <= 0 goto label27;

        i2 = i49 + 1;

        $r130 = new java.lang.StringBuilder;

        specialinvoke $r130.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("D: ");

        $l29 = r4.<com.android.server.content.SyncStorageEngine$AuthorityInfo: long delayUntil>;

        $l30 = $l29 - l0;

        $l31 = $l30 / 1000L;

        virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l31);

        $r133 = newarray (java.lang.Object)[1];

        $r134 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.String toString()>();

        $r133[0] = $r134;

        virtualinvoke $r75.<com.android.server.content.SyncManager$PrintTable: void set(int,int,java.lang.Object[])>(i49, 15, $r133);

        $l32 = r4.<com.android.server.content.SyncStorageEngine$AuthorityInfo: long backoffTime>;

        $b33 = $l32 cmp l0;

        if $b33 <= 0 goto label26;

        i50 = i2 + 1;

        $r135 = new java.lang.StringBuilder;

        specialinvoke $r135.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("B: ");

        $l34 = r4.<com.android.server.content.SyncStorageEngine$AuthorityInfo: long backoffTime>;

        $l35 = $l34 - l0;

        $l36 = $l35 / 1000L;

        virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l36);

        $r138 = newarray (java.lang.Object)[1];

        $r139 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.String toString()>();

        $r138[0] = $r139;

        virtualinvoke $r75.<com.android.server.content.SyncManager$PrintTable: void set(int,int,java.lang.Object[])>(i2, 15, $r138);

        $r140 = newarray (java.lang.Object)[1];

        $l37 = r4.<com.android.server.content.SyncStorageEngine$AuthorityInfo: long backoffDelay>;

        $l38 = $l37 / 1000L;

        $r141 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l38);

        $r140[0] = $r141;

        virtualinvoke $r75.<com.android.server.content.SyncManager$PrintTable: void set(int,int,java.lang.Object[])>(i50, 15, $r140);

        goto label27;

     label26:
        goto label27;

     label27:
        $l51 = r5.<android.content.SyncStatusInfo: long lastSuccessTime>;

        $b52 = $l51 cmp 0L;

        if $b52 == 0 goto label28;

        i53 = i49 + 1;

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r122 = <com.android.server.content.SyncStorageEngine: java.lang.String[] SOURCES>;

        $i27 = r5.<android.content.SyncStatusInfo: int lastSuccessSource>;

        $r123 = $r122[$i27];

        virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123);

        virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SUCCESS");

        $r126 = newarray (java.lang.Object)[1];

        $r127 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        $r126[0] = $r127;

        virtualinvoke $r75.<com.android.server.content.SyncManager$PrintTable: void set(int,int,java.lang.Object[])>(i49, 14, $r126);

        i49 = i53 + 1;

        $r128 = newarray (java.lang.Object)[1];

        $l28 = r5.<android.content.SyncStatusInfo: long lastSuccessTime>;

        $r129 = staticinvoke <com.android.server.content.SyncManager: java.lang.String formatTime(long)>($l28);

        $r128[0] = $r129;

        virtualinvoke $r75.<com.android.server.content.SyncManager$PrintTable: void set(int,int,java.lang.Object[])>(i53, 14, $r128);

        goto label28;

     label28:
        $l23 = r5.<android.content.SyncStatusInfo: long lastFailureTime>;

        $b24 = $l23 cmp 0L;

        if $b24 == 0 goto label29;

        i54 = i49 + 1;

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r111 = <com.android.server.content.SyncStorageEngine: java.lang.String[] SOURCES>;

        $i25 = r5.<android.content.SyncStatusInfo: int lastFailureSource>;

        $r112 = $r111[$i25];

        virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112);

        virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FAILURE");

        $r115 = newarray (java.lang.Object)[1];

        $r116 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        $r115[0] = $r116;

        virtualinvoke $r75.<com.android.server.content.SyncManager$PrintTable: void set(int,int,java.lang.Object[])>(i49, 14, $r115);

        i55 = i54 + 1;

        $r117 = newarray (java.lang.Object)[1];

        $l26 = r5.<android.content.SyncStatusInfo: long lastFailureTime>;

        $r118 = staticinvoke <com.android.server.content.SyncManager: java.lang.String formatTime(long)>($l26);

        $r117[0] = $r118;

        virtualinvoke $r75.<com.android.server.content.SyncManager$PrintTable: void set(int,int,java.lang.Object[])>(i54, 14, $r117);

        $r119 = newarray (java.lang.Object)[1];

        $r120 = r5.<android.content.SyncStatusInfo: java.lang.String lastFailureMesg>;

        $r119[0] = $r120;

        virtualinvoke $r75.<com.android.server.content.SyncManager$PrintTable: void set(int,int,java.lang.Object[])>(i55, 14, $r119);

        goto label29;

     label29:
        goto label23;

     label30:
        virtualinvoke $r75.<com.android.server.content.SyncManager$PrintTable: void writeTo(java.io.PrintWriter)>(r157);

        i47 = i47 + 1;

        r171 = r181;

        goto label18;

     label31:
        $r156 := @caughtexception;

        r193 = $r156;

     label32:
        exitmonitor r174;

     label33:
        throw r193;

     label34:
        $r155 := @caughtexception;

        r193 = $r155;

        goto label32;

     label35:
        virtualinvoke r0.<com.android.server.content.SyncManager: void dumpSyncHistory(java.io.PrintWriter)>(r157);

        virtualinvoke r157.<java.io.PrintWriter: void println()>();

        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>("Per Adapter History");

        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>("(SERVER is now split up to FEED and OTHER)");

        i56 = 0;

     label36:
        $i6 = virtualinvoke r171.<java.util.ArrayList: int size()>();

        if i56 >= $i6 goto label42;

        $r32 = virtualinvoke r171.<java.util.ArrayList: java.lang.Object get(int)>(i56);

        r194 = (android.util.Pair) $r32;

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r33 = r194.<android.util.Pair: java.lang.Object first>;

        $r34 = (com.android.server.content.SyncStorageEngine$EndPoint) $r33;

        $r35 = $r34.<com.android.server.content.SyncStorageEngine$EndPoint: android.accounts.Account account>;

        $r36 = $r35.<android.accounts.Account: java.lang.String name>;

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>($r36);

        virtualinvoke r157.<java.io.PrintWriter: void print(char)>(47);

        $r37 = r194.<android.util.Pair: java.lang.Object first>;

        $r38 = (com.android.server.content.SyncStorageEngine$EndPoint) $r37;

        $r39 = $r38.<com.android.server.content.SyncStorageEngine$EndPoint: android.accounts.Account account>;

        $r40 = $r39.<android.accounts.Account: java.lang.String type>;

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>($r40);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>(" u");

        $r41 = r194.<android.util.Pair: java.lang.Object first>;

        $r42 = (com.android.server.content.SyncStorageEngine$EndPoint) $r41;

        $i7 = $r42.<com.android.server.content.SyncStorageEngine$EndPoint: int userId>;

        virtualinvoke r157.<java.io.PrintWriter: void print(int)>($i7);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>(" [");

        $r43 = r194.<android.util.Pair: java.lang.Object first>;

        $r44 = (com.android.server.content.SyncStorageEngine$EndPoint) $r43;

        $r45 = $r44.<com.android.server.content.SyncStorageEngine$EndPoint: java.lang.String provider>;

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>($r45);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("]");

        virtualinvoke r157.<java.io.PrintWriter: void println()>();

        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>("    Per source last syncs:");

        i57 = 0;

     label37:
        $r46 = <com.android.server.content.SyncStorageEngine: java.lang.String[] SOURCES>;

        $i8 = lengthof $r46;

        if i57 >= $i8 goto label38;

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        $r57 = newarray (java.lang.Object)[1];

        $r58 = <com.android.server.content.SyncStorageEngine: java.lang.String[] SOURCES>;

        $r59 = $r58[i57];

        $r57[0] = $r59;

        $r60 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%8s", $r57);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>($r60);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("  Success: ");

        $r61 = r194.<android.util.Pair: java.lang.Object second>;

        $r62 = (android.content.SyncStatusInfo) $r61;

        $r63 = $r62.<android.content.SyncStatusInfo: long[] perSourceLastSuccessTimes>;

        $l12 = $r63[i57];

        $r64 = staticinvoke <com.android.server.content.SyncManager: java.lang.String formatTime(long)>($l12);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>($r64);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("  Failure: ");

        $r65 = r194.<android.util.Pair: java.lang.Object second>;

        $r66 = (android.content.SyncStatusInfo) $r65;

        $r67 = $r66.<android.content.SyncStatusInfo: long[] perSourceLastFailureTimes>;

        $l13 = $r67[i57];

        $r68 = staticinvoke <com.android.server.content.SyncManager: java.lang.String formatTime(long)>($l13);

        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>($r68);

        i57 = i57 + 1;

        goto label37;

     label38:
        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>("    Last syncs:");

        i58 = 0;

     label39:
        $r47 = r194.<android.util.Pair: java.lang.Object second>;

        $r48 = (android.content.SyncStatusInfo) $r47;

        $i9 = virtualinvoke $r48.<android.content.SyncStatusInfo: int getEventCount()>();

        if i58 >= $i9 goto label40;

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        $r51 = r194.<android.util.Pair: java.lang.Object second>;

        $r52 = (android.content.SyncStatusInfo) $r51;

        $l11 = virtualinvoke $r52.<android.content.SyncStatusInfo: long getEventTime(int)>(i58);

        $r53 = staticinvoke <com.android.server.content.SyncManager: java.lang.String formatTime(long)>($l11);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>($r53);

        virtualinvoke r157.<java.io.PrintWriter: void print(char)>(32);

        $r54 = r194.<android.util.Pair: java.lang.Object second>;

        $r55 = (android.content.SyncStatusInfo) $r54;

        $r56 = virtualinvoke $r55.<android.content.SyncStatusInfo: java.lang.String getEvent(int)>(i58);

        virtualinvoke r157.<java.io.PrintWriter: void print(java.lang.String)>($r56);

        virtualinvoke r157.<java.io.PrintWriter: void println()>();

        i58 = i58 + 1;

        goto label39;

     label40:
        $r49 = r194.<android.util.Pair: java.lang.Object second>;

        $r50 = (android.content.SyncStatusInfo) $r49;

        $i10 = virtualinvoke $r50.<android.content.SyncStatusInfo: int getEventCount()>();

        if $i10 != 0 goto label41;

        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>("      N/A");

     label41:
        i56 = i56 + 1;

        goto label36;

     label42:
        return;

        catch java.lang.Throwable from label19 to label20 with label31;
        catch java.lang.Throwable from label32 to label33 with label34;
    }

    public java.util.List getPeriodicSyncs(com.android.server.content.SyncStorageEngine$EndPoint)
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine$EndPoint r1, $r6, $r8, $r9;
        java.util.Iterator r3;
        java.util.ArrayList $r4;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;
        android.content.PeriodicSync $r7;
        android.accounts.Account $r10;
        java.lang.String $r11;
        android.os.Bundle $r12;
        long $l0, $l1, $l2, $l3;
        java.util.List r13;
        com.android.server.content.SyncOperation r14;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        r13 = specialinvoke r0.<com.android.server.content.SyncManager: java.util.List getAllPendingSyncs()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r3 = interfaceinvoke r13.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.android.server.content.SyncOperation) $r5;

        $z1 = r14.<com.android.server.content.SyncOperation: boolean isPeriodic>;

        if $z1 == 0 goto label2;

        $r6 = r14.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $z2 = virtualinvoke $r6.<com.android.server.content.SyncStorageEngine$EndPoint: boolean matchesSpec(com.android.server.content.SyncStorageEngine$EndPoint)>(r1);

        if $z2 == 0 goto label2;

        $r7 = new android.content.PeriodicSync;

        $r8 = r14.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r10 = $r8.<com.android.server.content.SyncStorageEngine$EndPoint: android.accounts.Account account>;

        $r9 = r14.<com.android.server.content.SyncOperation: com.android.server.content.SyncStorageEngine$EndPoint target>;

        $r11 = $r9.<com.android.server.content.SyncStorageEngine$EndPoint: java.lang.String provider>;

        $r12 = virtualinvoke r14.<com.android.server.content.SyncOperation: android.os.Bundle getClonedExtras()>();

        $l0 = r14.<com.android.server.content.SyncOperation: long periodMillis>;

        $l3 = $l0 / 1000L;

        $l1 = r14.<com.android.server.content.SyncOperation: long flexMillis>;

        $l2 = $l1 / 1000L;

        specialinvoke $r7.<android.content.PeriodicSync: void <init>(android.accounts.Account,java.lang.String,android.os.Bundle,long,long)>($r10, $r11, $r12, $l3, $l2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label2;

     label2:
        goto label1;

     label3:
        return $r4;
    }

    public java.lang.String[] getSyncAdapterPackagesForAuthorityAsUser(java.lang.String, int)
    {
        com.android.server.content.SyncManager r0;
        java.lang.String r1;
        int i0;
        android.content.SyncAdaptersCache $r2;
        java.lang.String[] $r3;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.content.SyncManager: android.content.SyncAdaptersCache mSyncAdapters>;

        $r3 = virtualinvoke $r2.<android.content.SyncAdaptersCache: java.lang.String[] getSyncAdapterPackagesForAuthority(java.lang.String,int)>(r1, i0);

        return $r3;
    }

    public android.content.SyncAdapterType[] getSyncAdapterTypes(int)
    {
        com.android.server.content.SyncManager r0;
        android.content.SyncAdapterType[] r1;
        android.content.SyncAdaptersCache $r2;
        int $i0, i1, i2;
        boolean $z0;
        java.lang.Object $r3, $r5;
        android.content.pm.RegisteredServicesCache$ServiceInfo $r4;
        android.content.SyncAdapterType $r6;
        java.util.Collection r7;
        java.util.Iterator r8;

        r0 := @this: com.android.server.content.SyncManager;

        i1 := @parameter0: int;

        $r2 = r0.<com.android.server.content.SyncManager: android.content.SyncAdaptersCache mSyncAdapters>;

        r7 = virtualinvoke $r2.<android.content.SyncAdaptersCache: java.util.Collection getAllServices(int)>(i1);

        $i0 = interfaceinvoke r7.<java.util.Collection: int size()>();

        r1 = newarray (android.content.SyncAdapterType)[$i0];

        i2 = 0;

        r8 = interfaceinvoke r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r3;

        $r5 = $r4.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $r6 = (android.content.SyncAdapterType) $r5;

        r1[i2] = $r6;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public com.android.server.content.SyncStorageEngine getSyncStorageEngine()
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine $r1;

        r0 := @this: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        return $r1;
    }

    public void lambda$new$0$SyncManager(android.accounts.Account, int)
    {
        com.android.server.content.SyncManager r0;
        android.accounts.Account r1;
        int i0, $i1, $i2;
        android.accounts.AccountManagerInternal $r2;
        boolean $z0;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: android.accounts.Account;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.content.SyncManager: android.accounts.AccountManagerInternal mAccountManagerInternal>;

        $z0 = virtualinvoke $r2.<android.accounts.AccountManagerInternal: boolean hasAccountAccess(android.accounts.Account,int)>(r1, i0);

        if $z0 == 0 goto label1;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        virtualinvoke r0.<com.android.server.content.SyncManager: void scheduleSync(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,int,int,int,int,java.lang.String)>(r1, $i1, -2, null, null, 3, 0, $i2, -2, null);

     label1:
        return;
    }

    public void lambda$onStartUser$1$SyncManager(int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        java.lang.Object[] $r1;
        com.android.server.content.SyncLogger $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = "onStartUser: user=";

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[1] = $r3;

        virtualinvoke $r2.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r1);

        return;
    }

    public void lambda$onStopUser$3$SyncManager(int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        java.lang.Object[] $r1;
        com.android.server.content.SyncLogger $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = "onStopUser: user=";

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[1] = $r3;

        virtualinvoke $r2.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r1);

        return;
    }

    public void lambda$onUnlockUser$2$SyncManager(int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        java.lang.Object[] $r1;
        com.android.server.content.SyncLogger $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncLogger mLogger>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = "onUnlockUser: user=";

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[1] = $r3;

        virtualinvoke $r2.<com.android.server.content.SyncLogger: void log(java.lang.Object[])>($r1);

        return;
    }

    public void lambda$scheduleSync$4$SyncManager(android.accounts.AccountAndUser, int, int, java.lang.String, android.os.Bundle, int, long, int, int, int, java.lang.String, android.os.Bundle)
    {
        com.android.server.content.SyncManager r0;
        android.accounts.AccountAndUser r1;
        int i0, i1, i2, i4, i5, i6;
        java.lang.String r2, r4;
        android.os.Bundle r3, r5;
        long l3;
        boolean $z0;
        android.accounts.Account $r6;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: android.accounts.AccountAndUser;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.os.Bundle;

        i2 := @parameter5: int;

        l3 := @parameter6: long;

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        i6 := @parameter9: int;

        r4 := @parameter10: java.lang.String;

        r5 := @parameter11: android.os.Bundle;

        if r5 == null goto label2;

        $z0 = virtualinvoke r5.<android.os.Bundle: boolean getBoolean(java.lang.String)>("booleanResult");

        if $z0 == 0 goto label1;

        $r6 = r1.<android.accounts.AccountAndUser: android.accounts.Account account>;

        specialinvoke r0.<com.android.server.content.SyncManager: void scheduleSync(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,int,long,boolean,int,int,int,java.lang.String)>($r6, i0, i1, r2, r3, i2, l3, 1, i4, i5, i6, r4);

        goto label2;

     label1:
        goto label2;

     label2:
        return;
    }

    public void lambda$scheduleSync$5$SyncManager(android.accounts.AccountAndUser, int, java.lang.String, android.os.Bundle, int, long, int, int, int, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        android.accounts.AccountAndUser r1;
        int i0, i1, i3, i4, i5, $i6;
        java.lang.String r2, r4;
        android.os.Bundle r3;
        long l2;
        android.accounts.Account $r5;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: android.accounts.AccountAndUser;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        r4 := @parameter9: java.lang.String;

        $r5 = r1.<android.accounts.AccountAndUser: android.accounts.Account account>;

        $i6 = r1.<android.accounts.AccountAndUser: int userId>;

        specialinvoke r0.<com.android.server.content.SyncManager: void scheduleSync(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,int,long,boolean,int,int,int,java.lang.String)>($r5, $i6, i0, r2, r3, i1, l2, 0, i3, i4, i5, r4);

        return;
    }

    public void onBootPhase(int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        com.android.server.content.SyncManagerConstants $r1;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        if i0 == 550 goto label1;

        goto label2;

     label1:
        $r1 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManagerConstants mConstants>;

        virtualinvoke $r1.<com.android.server.content.SyncManagerConstants: void start()>();

     label2:
        return;
    }

    public void onStartUser(int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        com.android.server.content._$$Lambda$SyncManager$CjX_2uO4O4xJPQnKzeqvGwd87Dc $r1;
        com.android.server.content.SyncManager$SyncHandler $r2;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        $r1 = new com.android.server.content._$$Lambda$SyncManager$CjX_2uO4O4xJPQnKzeqvGwd87Dc;

        specialinvoke $r1.<com.android.server.content._$$Lambda$SyncManager$CjX_2uO4O4xJPQnKzeqvGwd87Dc: void <init>(com.android.server.content.SyncManager,int)>(r0, i0);

        virtualinvoke $r2.<com.android.server.content.SyncManager$SyncHandler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void onStopUser(int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        android.util.SparseBooleanArray r1, $r3;
        com.android.server.content._$$Lambda$SyncManager$4nklbtZn_JuPLOkU32f34xZoiug $r4;
        com.android.server.content.SyncManager$SyncHandler $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.content.SyncManager: android.util.SparseBooleanArray mUnlockedUsers>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.content.SyncManager: android.util.SparseBooleanArray mUnlockedUsers>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 0);

        exitmonitor r1;

     label2:
        $r5 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        $r4 = new com.android.server.content._$$Lambda$SyncManager$4nklbtZn_JuPLOkU32f34xZoiug;

        specialinvoke $r4.<com.android.server.content._$$Lambda$SyncManager$4nklbtZn_JuPLOkU32f34xZoiug: void <init>(com.android.server.content.SyncManager,int)>(r0, i0);

        virtualinvoke $r5.<com.android.server.content.SyncManager$SyncHandler: boolean post(java.lang.Runnable)>($r4);

        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onUnlockUser(int)
    {
        com.android.server.content.SyncManager r0;
        int i0;
        android.util.SparseBooleanArray r1, $r3;
        com.android.server.content._$$Lambda$SyncManager$6y_gkGdDn_rSLmR9G8Pz_n9zy2A $r4;
        com.android.server.content.SyncManager$SyncHandler $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.content.SyncManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.content.SyncManager: android.util.SparseBooleanArray mUnlockedUsers>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.content.SyncManager: android.util.SparseBooleanArray mUnlockedUsers>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        exitmonitor r1;

     label2:
        $r5 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        $r4 = new com.android.server.content._$$Lambda$SyncManager$6y_gkGdDn_rSLmR9G8Pz_n9zy2A;

        specialinvoke $r4.<com.android.server.content._$$Lambda$SyncManager$6y_gkGdDn_rSLmR9G8Pz_n9zy2A: void <init>(com.android.server.content.SyncManager,int)>(r0, i0);

        virtualinvoke $r5.<com.android.server.content.SyncManager$SyncHandler: boolean post(java.lang.Runnable)>($r4);

        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removePeriodicSync(com.android.server.content.SyncStorageEngine$EndPoint, android.os.Bundle, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        android.os.Bundle r1;
        java.lang.String r2;
        com.android.server.content.SyncManager$SyncHandler $r3;
        android.util.Pair $r4;
        com.android.server.content.SyncStorageEngine$EndPoint r5;
        android.os.Message r6;

        r0 := @this: com.android.server.content.SyncManager;

        r5 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        $r4 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r5, r2);

        r6 = virtualinvoke $r3.<com.android.server.content.SyncManager$SyncHandler: android.os.Message obtainMessage(int,java.lang.Object)>(14, $r4);

        virtualinvoke r6.<android.os.Message: void setData(android.os.Bundle)>(r1);

        virtualinvoke r6.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void resetTodayStats()
    {
        com.android.server.content.SyncManager r0;
        com.android.server.content.SyncStorageEngine $r1;

        r0 := @this: com.android.server.content.SyncManager;

        $r1 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine mSyncStorageEngine>;

        virtualinvoke $r1.<com.android.server.content.SyncStorageEngine: void resetTodayStats(boolean)>(1);

        return;
    }

    public void scheduleLocalSync(android.accounts.Account, int, int, java.lang.String, int, int, int, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        android.accounts.Account r1;
        int i0, i1, i2, i3, i4;
        java.lang.String r2, r3;
        android.os.Bundle $r5;
        long $l5;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: android.accounts.Account;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        r3 := @parameter7: java.lang.String;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        virtualinvoke $r5.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("upload", 1);

        $l5 = <com.android.server.content.SyncManager: long LOCAL_SYNC_DELAY>;

        specialinvoke r0.<com.android.server.content.SyncManager: void scheduleSync(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,int,long,boolean,int,int,int,java.lang.String)>(r1, i0, i1, r2, $r5, -2, $l5, 1, i2, i3, i4, r3);

        return;
    }

    public void scheduleSync(android.accounts.Account, int, int, java.lang.String, android.os.Bundle, int, int, int, int, java.lang.String)
    {
        com.android.server.content.SyncManager r0;
        android.accounts.Account r1;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String r2, r4;
        android.os.Bundle r3;

        r0 := @this: com.android.server.content.SyncManager;

        r1 := @parameter0: android.accounts.Account;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.os.Bundle;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        r4 := @parameter9: java.lang.String;

        specialinvoke r0.<com.android.server.content.SyncManager: void scheduleSync(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,int,long,boolean,int,int,int,java.lang.String)>(r1, i0, i1, r2, r3, i2, 0L, 1, i3, i4, i5, r4);

        return;
    }

    public void updateOrAddPeriodicSync(com.android.server.content.SyncStorageEngine$EndPoint, long, long, android.os.Bundle)
    {
        com.android.server.content.SyncManager r0;
        long l0, l1;
        android.os.Bundle r1;
        com.android.server.content.SyncManager$UpdatePeriodicSyncMessagePayload $r2;
        com.android.server.content.SyncManager$SyncHandler $r3;
        android.os.Message $r4;
        com.android.server.content.SyncStorageEngine$EndPoint r5;

        r0 := @this: com.android.server.content.SyncManager;

        r5 := @parameter0: com.android.server.content.SyncStorageEngine$EndPoint;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: android.os.Bundle;

        $r2 = new com.android.server.content.SyncManager$UpdatePeriodicSyncMessagePayload;

        specialinvoke $r2.<com.android.server.content.SyncManager$UpdatePeriodicSyncMessagePayload: void <init>(com.android.server.content.SyncManager,com.android.server.content.SyncStorageEngine$EndPoint,long,long,android.os.Bundle)>(r0, r5, l0, l1, r1);

        $r3 = r0.<com.android.server.content.SyncManager: com.android.server.content.SyncManager$SyncHandler mSyncHandler>;

        $r4 = virtualinvoke $r3.<com.android.server.content.SyncManager$SyncHandler: android.os.Message obtainMessage(int,java.lang.Object)>(13, $r2);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }
}
