public class com.android.server.content.SyncManagerConstants extends android.database.ContentObserver
{
    private static final int DEF_EXEMPTION_TEMP_WHITELIST_DURATION_IN_SECONDS;
    private static final int DEF_INITIAL_SYNC_RETRY_TIME_IN_SECONDS;
    private static final int DEF_MAX_RETRIES_WITH_APP_STANDBY_EXEMPTION;
    private static final int DEF_MAX_SYNC_RETRY_TIME_IN_SECONDS;
    private static final float DEF_RETRY_TIME_INCREASE_FACTOR;
    private static final java.lang.String KEY_EXEMPTION_TEMP_WHITELIST_DURATION_IN_SECONDS;
    private static final java.lang.String KEY_INITIAL_SYNC_RETRY_TIME_IN_SECONDS;
    private static final java.lang.String KEY_MAX_RETRIES_WITH_APP_STANDBY_EXEMPTION;
    private static final java.lang.String KEY_MAX_SYNC_RETRY_TIME_IN_SECONDS;
    private static final java.lang.String KEY_RETRY_TIME_INCREASE_FACTOR;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private int mInitialSyncRetryTimeInSeconds;
    private int mKeyExemptionTempWhitelistDurationInSeconds;
    private final java.lang.Object mLock;
    private int mMaxRetriesWithAppStandbyExemption;
    private int mMaxSyncRetryTimeInSeconds;
    private float mRetryTimeIncreaseFactor;

    protected void <init>(android.content.Context)
    {
        com.android.server.content.SyncManagerConstants r0;
        android.content.Context r1;
        java.lang.Object $r2;

        r0 := @this: com.android.server.content.SyncManagerConstants;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(null);

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.content.SyncManagerConstants: java.lang.Object mLock> = $r2;

        r0.<com.android.server.content.SyncManagerConstants: int mInitialSyncRetryTimeInSeconds> = 30;

        r0.<com.android.server.content.SyncManagerConstants: float mRetryTimeIncreaseFactor> = 2.0F;

        r0.<com.android.server.content.SyncManagerConstants: int mMaxSyncRetryTimeInSeconds> = 3600;

        r0.<com.android.server.content.SyncManagerConstants: int mMaxRetriesWithAppStandbyExemption> = 5;

        r0.<com.android.server.content.SyncManagerConstants: int mKeyExemptionTempWhitelistDurationInSeconds> = 600;

        r0.<com.android.server.content.SyncManagerConstants: android.content.Context mContext> = r1;

        return;
    }

    private void refresh()
    {
        com.android.server.content.SyncManagerConstants r0;
        java.lang.Object r1;
        android.util.KeyValueListParser r2;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        int $i0, $i1, $i2, $i3;
        float $f0;
        java.lang.Throwable $r5, $r9;
        java.lang.String $r8, r10;
        java.lang.StringBuilder r12;

        r0 := @this: com.android.server.content.SyncManagerConstants;

        r1 = r0.<com.android.server.content.SyncManagerConstants: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.content.SyncManagerConstants: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r10 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r4, "sync_manager_constants");

        r2 = new android.util.KeyValueListParser;

        specialinvoke r2.<android.util.KeyValueListParser: void <init>(char)>(44);

     label02:
        virtualinvoke r2.<android.util.KeyValueListParser: void setString(java.lang.String)>(r10);

     label03:
        goto label06;

     label04:
        $r5 := @caughtexception;

     label05:
        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad constants: ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r8 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("SyncManagerConfig", $r8);

     label06:
        $i0 = virtualinvoke r2.<android.util.KeyValueListParser: int getInt(java.lang.String,int)>("initial_sync_retry_time_in_seconds", 30);

        r0.<com.android.server.content.SyncManagerConstants: int mInitialSyncRetryTimeInSeconds> = $i0;

        $i1 = virtualinvoke r2.<android.util.KeyValueListParser: int getInt(java.lang.String,int)>("max_sync_retry_time_in_seconds", 3600);

        r0.<com.android.server.content.SyncManagerConstants: int mMaxSyncRetryTimeInSeconds> = $i1;

        $f0 = virtualinvoke r2.<android.util.KeyValueListParser: float getFloat(java.lang.String,float)>("retry_time_increase_factor", 2.0F);

        r0.<com.android.server.content.SyncManagerConstants: float mRetryTimeIncreaseFactor> = $f0;

        $i2 = virtualinvoke r2.<android.util.KeyValueListParser: int getInt(java.lang.String,int)>("max_retries_with_app_standby_exemption", 5);

        r0.<com.android.server.content.SyncManagerConstants: int mMaxRetriesWithAppStandbyExemption> = $i2;

        $i3 = virtualinvoke r2.<android.util.KeyValueListParser: int getInt(java.lang.String,int)>("exemption_temp_whitelist_duration_in_seconds", 600);

        r0.<com.android.server.content.SyncManagerConstants: int mKeyExemptionTempWhitelistDurationInSeconds> = $i3;

        exitmonitor r1;

     label07:
        return;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.IllegalArgumentException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.content.SyncManagerConstants r0;
        java.lang.String r1;
        java.lang.Object r2;
        int $i0, $i1, $i2, $i3;
        float $f0;
        java.lang.Throwable $r3;
        java.io.PrintWriter r4;

        r0 := @this: com.android.server.content.SyncManagerConstants;

        r4 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<com.android.server.content.SyncManagerConstants: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("SyncManager Config:");

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>("  mInitialSyncRetryTimeInSeconds=");

        $i0 = r0.<com.android.server.content.SyncManagerConstants: int mInitialSyncRetryTimeInSeconds>;

        virtualinvoke r4.<java.io.PrintWriter: void println(int)>($i0);

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>("  mRetryTimeIncreaseFactor=");

        $f0 = r0.<com.android.server.content.SyncManagerConstants: float mRetryTimeIncreaseFactor>;

        virtualinvoke r4.<java.io.PrintWriter: void println(float)>($f0);

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>("  mMaxSyncRetryTimeInSeconds=");

        $i1 = r0.<com.android.server.content.SyncManagerConstants: int mMaxSyncRetryTimeInSeconds>;

        virtualinvoke r4.<java.io.PrintWriter: void println(int)>($i1);

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>("  mMaxRetriesWithAppStandbyExemption=");

        $i2 = r0.<com.android.server.content.SyncManagerConstants: int mMaxRetriesWithAppStandbyExemption>;

        virtualinvoke r4.<java.io.PrintWriter: void println(int)>($i2);

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>("  mKeyExemptionTempWhitelistDurationInSeconds=");

        $i3 = r0.<com.android.server.content.SyncManagerConstants: int mKeyExemptionTempWhitelistDurationInSeconds>;

        virtualinvoke r4.<java.io.PrintWriter: void println(int)>($i3);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getInitialSyncRetryTimeInSeconds()
    {
        com.android.server.content.SyncManagerConstants r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.content.SyncManagerConstants;

        r1 = r0.<com.android.server.content.SyncManagerConstants: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<com.android.server.content.SyncManagerConstants: int mInitialSyncRetryTimeInSeconds>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getKeyExemptionTempWhitelistDurationInSeconds()
    {
        com.android.server.content.SyncManagerConstants r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.content.SyncManagerConstants;

        r1 = r0.<com.android.server.content.SyncManagerConstants: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<com.android.server.content.SyncManagerConstants: int mKeyExemptionTempWhitelistDurationInSeconds>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getMaxRetriesWithAppStandbyExemption()
    {
        com.android.server.content.SyncManagerConstants r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.content.SyncManagerConstants;

        r1 = r0.<com.android.server.content.SyncManagerConstants: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<com.android.server.content.SyncManagerConstants: int mMaxRetriesWithAppStandbyExemption>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getMaxSyncRetryTimeInSeconds()
    {
        com.android.server.content.SyncManagerConstants r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.content.SyncManagerConstants;

        r1 = r0.<com.android.server.content.SyncManagerConstants: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<com.android.server.content.SyncManagerConstants: int mMaxSyncRetryTimeInSeconds>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public float getRetryTimeIncreaseFactor()
    {
        com.android.server.content.SyncManagerConstants r0;
        java.lang.Object r1;
        float f0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.content.SyncManagerConstants;

        r1 = r0.<com.android.server.content.SyncManagerConstants: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        f0 = r0.<com.android.server.content.SyncManagerConstants: float mRetryTimeIncreaseFactor>;

        exitmonitor r1;

     label2:
        return f0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$start$0$SyncManagerConstants()
    {
        com.android.server.content.SyncManagerConstants r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        android.net.Uri $r3;

        r0 := @this: com.android.server.content.SyncManagerConstants;

        $r1 = r0.<com.android.server.content.SyncManagerConstants: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("sync_manager_constants");

        virtualinvoke $r2.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r3, 0, r0);

        specialinvoke r0.<com.android.server.content.SyncManagerConstants: void refresh()>();

        return;
    }

    public void onChange(boolean)
    {
        com.android.server.content.SyncManagerConstants r0;
        boolean z0;

        r0 := @this: com.android.server.content.SyncManagerConstants;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.server.content.SyncManagerConstants: void refresh()>();

        return;
    }

    public void start()
    {
        com.android.server.content.SyncManagerConstants r0;
        android.os.Handler $r1;
        com.android.server.content._$$Lambda$SyncManagerConstants$qo5ldQVp10jCUY9aavBZDKP2k6Q $r2;

        r0 := @this: com.android.server.content.SyncManagerConstants;

        $r1 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r2 = new com.android.server.content._$$Lambda$SyncManagerConstants$qo5ldQVp10jCUY9aavBZDKP2k6Q;

        specialinvoke $r2.<com.android.server.content._$$Lambda$SyncManagerConstants$qo5ldQVp10jCUY9aavBZDKP2k6Q: void <init>(com.android.server.content.SyncManagerConstants)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.content.SyncManagerConstants: java.lang.String TAG> = "SyncManagerConfig";

        <com.android.server.content.SyncManagerConstants: java.lang.String KEY_RETRY_TIME_INCREASE_FACTOR> = "retry_time_increase_factor";

        <com.android.server.content.SyncManagerConstants: java.lang.String KEY_MAX_SYNC_RETRY_TIME_IN_SECONDS> = "max_sync_retry_time_in_seconds";

        <com.android.server.content.SyncManagerConstants: java.lang.String KEY_MAX_RETRIES_WITH_APP_STANDBY_EXEMPTION> = "max_retries_with_app_standby_exemption";

        <com.android.server.content.SyncManagerConstants: java.lang.String KEY_INITIAL_SYNC_RETRY_TIME_IN_SECONDS> = "initial_sync_retry_time_in_seconds";

        <com.android.server.content.SyncManagerConstants: java.lang.String KEY_EXEMPTION_TEMP_WHITELIST_DURATION_IN_SECONDS> = "exemption_temp_whitelist_duration_in_seconds";

        <com.android.server.content.SyncManagerConstants: float DEF_RETRY_TIME_INCREASE_FACTOR> = 2.0F;

        <com.android.server.content.SyncManagerConstants: int DEF_MAX_SYNC_RETRY_TIME_IN_SECONDS> = 3600;

        <com.android.server.content.SyncManagerConstants: int DEF_MAX_RETRIES_WITH_APP_STANDBY_EXEMPTION> = 5;

        <com.android.server.content.SyncManagerConstants: int DEF_INITIAL_SYNC_RETRY_TIME_IN_SECONDS> = 30;

        <com.android.server.content.SyncManagerConstants: int DEF_EXEMPTION_TEMP_WHITELIST_DURATION_IN_SECONDS> = 600;

        return;
    }
}
