class com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate extends android.service.contentcapture.IDataShareCallback$Stub
{
    private final android.view.contentcapture.IDataShareWriteAdapter mClientAdapter;
    private final android.view.contentcapture.DataShareRequest mDataShareRequest;
    private final java.util.concurrent.atomic.AtomicBoolean mLoggedWriteFinish;
    private final com.android.server.contentcapture.ContentCaptureManagerService mParentService;

    void <init>(android.view.contentcapture.DataShareRequest, android.view.contentcapture.IDataShareWriteAdapter, com.android.server.contentcapture.ContentCaptureManagerService)
    {
        com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate r0;
        android.view.contentcapture.DataShareRequest r1;
        android.view.contentcapture.IDataShareWriteAdapter r2;
        com.android.server.contentcapture.ContentCaptureManagerService r3;
        java.util.concurrent.atomic.AtomicBoolean $r4;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate;

        r1 := @parameter0: android.view.contentcapture.DataShareRequest;

        r2 := @parameter1: android.view.contentcapture.IDataShareWriteAdapter;

        r3 := @parameter2: com.android.server.contentcapture.ContentCaptureManagerService;

        specialinvoke r0.<android.service.contentcapture.IDataShareCallback$Stub: void <init>()>();

        $r4 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: java.util.concurrent.atomic.AtomicBoolean mLoggedWriteFinish> = $r4;

        r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.DataShareRequest mDataShareRequest> = r1;

        r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter> = r2;

        r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: com.android.server.contentcapture.ContentCaptureManagerService mParentService> = r3;

        return;
    }

    private void bestEffortCloseFileDescriptor(android.os.ParcelFileDescriptor)
    {
        com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;
        android.os.ParcelFileDescriptor r3;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate;

        r3 := @parameter0: android.os.ParcelFileDescriptor;

     label1:
        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Failed to close a file descriptor", $r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private transient void bestEffortCloseFileDescriptors(android.os.ParcelFileDescriptor[])
    {
        com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate r0;
        android.os.ParcelFileDescriptor[] r1;
        int i0, i1;
        android.os.ParcelFileDescriptor $r2;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate;

        r1 := @parameter0: android.os.ParcelFileDescriptor[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r1[i1];

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void bestEffortCloseFileDescriptor(android.os.ParcelFileDescriptor)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private android.util.Pair createPipe()
    {
        com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate r0;
        int $i0;
        android.os.ParcelFileDescriptor $r1, $r4, $r6, $r7;
        java.io.FileDescriptor $r2, $r5;
        boolean $z0, $z1;
        java.lang.String $r3, $r9, $r11;
        android.util.Pair $r8;
        java.lang.Throwable $r10;
        android.os.ParcelFileDescriptor[] r12;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate;

     label1:
        r12 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

     label2:
        $i0 = lengthof r12;

        if $i0 == 2 goto label3;

        $r9 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r9, "Failed to create a content capture data-sharing pipe, unexpected number of file descriptors");

        return null;

     label3:
        $r1 = r12[0];

        $r2 = virtualinvoke $r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $z0 = virtualinvoke $r2.<java.io.FileDescriptor: boolean valid()>();

        if $z0 == 0 goto label5;

        $r4 = r12[1];

        $r5 = virtualinvoke $r4.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $z1 = virtualinvoke $r5.<java.io.FileDescriptor: boolean valid()>();

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        $r7 = r12[0];

        $r6 = r12[1];

        $r8 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r7, $r6);

        return $r8;

     label5:
        $r3 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r3, "Failed to create a content capture data-sharing pipe, didn\'t receive a pair of valid file descriptors.");

        return null;

     label6:
        $r10 := @caughtexception;

        $r11 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r11, "Failed to create a content capture data-sharing pipe", $r10);

        return null;

        catch java.io.IOException from label1 to label2 with label6;
    }

    private void enforceDataSharingTtl(android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.service.contentcapture.IDataShareReadAdapter)
    {
        com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate r0;
        android.os.ParcelFileDescriptor r1, r2, r3, r30;
        android.service.contentcapture.IDataShareReadAdapter r4;
        java.lang.Object r5;
        com.android.server.contentcapture.ContentCaptureManagerService $r6, $r7;
        java.util.Set $r8;
        android.view.contentcapture.DataShareRequest $r9, $r13, $r22;
        java.lang.String $r10, $r14, $r17, $r23, $r26, r31, r33;
        java.io.FileDescriptor $r11, $r28;
        boolean $z1, $z2, $z3, z4;
        android.os.ParcelFileDescriptor[] $r18;
        android.view.contentcapture.IDataShareWriteAdapter $r19;
        java.util.concurrent.atomic.AtomicBoolean $r20, $r27;
        java.lang.Throwable $r29;
        java.lang.StringBuilder r32, r34;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate;

        r30 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.os.ParcelFileDescriptor;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        r3 := @parameter3: android.os.ParcelFileDescriptor;

        r4 := @parameter4: android.service.contentcapture.IDataShareReadAdapter;

        $r6 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: com.android.server.contentcapture.ContentCaptureManagerService mParentService>;

        r5 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.Object access$4000(com.android.server.contentcapture.ContentCaptureManagerService)>($r6);

        entermonitor r5;

     label01:
        $r7 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: com.android.server.contentcapture.ContentCaptureManagerService mParentService>;

        $r8 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.util.Set access$1800(com.android.server.contentcapture.ContentCaptureManagerService)>($r7);

        $r9 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.DataShareRequest mDataShareRequest>;

        $r10 = virtualinvoke $r9.<android.view.contentcapture.DataShareRequest: java.lang.String getPackageName()>();

        interfaceinvoke $r8.<java.util.Set: boolean remove(java.lang.Object)>($r10);

        $r11 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $z1 = virtualinvoke $r11.<java.io.FileDescriptor: boolean valid()>();

        if $z1 != 0 goto label03;

        $r28 = virtualinvoke r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $z3 = virtualinvoke $r28.<java.io.FileDescriptor: boolean valid()>();

        if $z3 != 0 goto label03;

     label02:
        z4 = 1;

        goto label04;

     label03:
        z4 = 0;

     label04:
        if z4 == 0 goto label08;

     label05:
        $r20 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: java.util.concurrent.atomic.AtomicBoolean mLoggedWriteFinish>;

        $z2 = virtualinvoke $r20.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z2 != 0 goto label06;

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(9);

        $r27 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: java.util.concurrent.atomic.AtomicBoolean mLoggedWriteFinish>;

        virtualinvoke $r27.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label06:
        r31 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content capture data sharing session terminated successfully for package \'");

        $r22 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.DataShareRequest mDataShareRequest>;

        $r23 = virtualinvoke $r22.<android.view.contentcapture.DataShareRequest: java.lang.String getPackageName()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r26 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r31, $r26);

     label07:
        goto label09;

     label08:
        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(15);

        r33 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reached the timeout of Content Capture data sharing session for package \'");

        $r13 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.DataShareRequest mDataShareRequest>;

        $r14 = virtualinvoke $r13.<android.view.contentcapture.DataShareRequest: java.lang.String getPackageName()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', terminating the pipe.");

        $r17 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r33, $r17);

     label09:
        $r18 = newarray (android.os.ParcelFileDescriptor)[4];

        $r18[0] = r30;

        $r18[1] = r1;

        $r18[2] = r2;

        $r18[3] = r3;

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void bestEffortCloseFileDescriptors(android.os.ParcelFileDescriptor[])>($r18);

     label10:
        if z4 != 0 goto label12;

     label11:
        $r19 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void sendErrorSignal(android.view.contentcapture.IDataShareWriteAdapter,android.service.contentcapture.IDataShareReadAdapter,int)>($r19, r4, 3);

     label12:
        exitmonitor r5;

     label13:
        return;

     label14:
        $r29 := @caughtexception;

     label15:
        exitmonitor r5;

     label16:
        throw $r29;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    private void logServiceEvent(int)
    {
        com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate r0;
        int i0, i1;
        com.android.server.contentcapture.ContentCaptureManagerService $r1;
        com.android.server.infra.ServiceNameResolver $r2;
        java.lang.String $r3, $r5;
        android.view.contentcapture.DataShareRequest $r4;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r1 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: com.android.server.contentcapture.ContentCaptureManagerService mParentService>;

        $r2 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: com.android.server.infra.ServiceNameResolver access$4100(com.android.server.contentcapture.ContentCaptureManagerService)>($r1);

        $r3 = interfaceinvoke $r2.<com.android.server.infra.ServiceNameResolver: java.lang.String getServiceName(int)>(i1);

        $r4 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.DataShareRequest mDataShareRequest>;

        $r5 = virtualinvoke $r4.<android.view.contentcapture.DataShareRequest: java.lang.String getPackageName()>();

        staticinvoke <com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeServiceEvent(int,java.lang.String,java.lang.String)>(i0, $r3, $r5);

        return;
    }

    private static void sendErrorSignal(android.view.contentcapture.IDataShareWriteAdapter, android.service.contentcapture.IDataShareReadAdapter, int)
    {
        android.service.contentcapture.IDataShareReadAdapter r0;
        int i0;
        android.os.RemoteException $r1, $r3;
        java.lang.String $r2, $r4;
        android.view.contentcapture.IDataShareWriteAdapter r5;

        r5 := @parameter0: android.view.contentcapture.IDataShareWriteAdapter;

        r0 := @parameter1: android.service.contentcapture.IDataShareReadAdapter;

        i0 := @parameter2: int;

     label1:
        interfaceinvoke r5.<android.view.contentcapture.IDataShareWriteAdapter: void error(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Failed to call error() the client operation", $r3);

     label4:
        interfaceinvoke r0.<android.service.contentcapture.IDataShareReadAdapter: void error(int)>(i0);

     label5:
        goto label7;

     label6:
        $r1 := @caughtexception;

        $r2 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Failed to call error() the service operation", $r1);

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public void accept(android.service.contentcapture.IDataShareReadAdapter)
    {
        com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate r0;
        android.service.contentcapture.IDataShareReadAdapter r1;
        android.os.ParcelFileDescriptor r2, r30, r31, r33;
        java.lang.String $r3, $r11, $r24, $r27;
        java.lang.Object $r4, $r5, $r6, $r7;
        com.android.server.contentcapture.ContentCaptureManagerService $r8, $r14, $r17;
        java.util.Set $r9;
        android.view.contentcapture.DataShareRequest $r10;
        android.view.contentcapture.IDataShareWriteAdapter $r12, $r21, $r22, $r25, $r28;
        android.os.ParcelFileDescriptor[] $r13, $r20;
        java.util.concurrent.Executor $r15;
        com.android.server.contentcapture._$$Lambda$ContentCaptureManagerService$DataShareCallbackDelegate$RfORIok5BEnBfxE_2EzvPUqnoY8 $r16;
        android.os.Handler $r18;
        com.android.server.contentcapture._$$Lambda$ContentCaptureManagerService$DataShareCallbackDelegate$x2Qz6JROlFUZJrFhBfDpz3lEo0Q $r19;
        android.os.RemoteException $r23, $r26;
        android.util.Pair r29, r32;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate;

        r1 := @parameter0: android.service.contentcapture.IDataShareReadAdapter;

        $r3 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r3, "Data share request accepted by Content Capture service");

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(7);

        r29 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.util.Pair createPipe()>();

        if r29 != null goto label1;

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(12);

        $r22 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void sendErrorSignal(android.view.contentcapture.IDataShareWriteAdapter,android.service.contentcapture.IDataShareReadAdapter,int)>($r22, r1, 1);

        return;

     label1:
        $r4 = r29.<android.util.Pair: java.lang.Object second>;

        r30 = (android.os.ParcelFileDescriptor) $r4;

        $r5 = r29.<android.util.Pair: java.lang.Object first>;

        r31 = (android.os.ParcelFileDescriptor) $r5;

        r32 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.util.Pair createPipe()>();

        if r32 != null goto label2;

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(13);

        $r20 = newarray (android.os.ParcelFileDescriptor)[2];

        $r20[0] = r30;

        $r20[1] = r31;

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void bestEffortCloseFileDescriptors(android.os.ParcelFileDescriptor[])>($r20);

        $r21 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void sendErrorSignal(android.view.contentcapture.IDataShareWriteAdapter,android.service.contentcapture.IDataShareReadAdapter,int)>($r21, r1, 1);

        return;

     label2:
        $r6 = r32.<android.util.Pair: java.lang.Object second>;

        r2 = (android.os.ParcelFileDescriptor) $r6;

        $r7 = r32.<android.util.Pair: java.lang.Object first>;

        r33 = (android.os.ParcelFileDescriptor) $r7;

        $r8 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: com.android.server.contentcapture.ContentCaptureManagerService mParentService>;

        $r9 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.util.Set access$1800(com.android.server.contentcapture.ContentCaptureManagerService)>($r8);

        $r10 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.DataShareRequest mDataShareRequest>;

        $r11 = virtualinvoke $r10.<android.view.contentcapture.DataShareRequest: java.lang.String getPackageName()>();

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r11);

     label3:
        $r12 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        interfaceinvoke $r12.<android.view.contentcapture.IDataShareWriteAdapter: void write(android.os.ParcelFileDescriptor)>(r30);

     label4:
        interfaceinvoke r1.<android.service.contentcapture.IDataShareReadAdapter: void start(android.os.ParcelFileDescriptor)>(r33);

     label5:
        $r13 = newarray (android.os.ParcelFileDescriptor)[2];

        $r13[0] = r30;

        $r13[1] = r33;

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void bestEffortCloseFileDescriptors(android.os.ParcelFileDescriptor[])>($r13);

        $r14 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: com.android.server.contentcapture.ContentCaptureManagerService mParentService>;

        $r15 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.util.concurrent.Executor access$3800(com.android.server.contentcapture.ContentCaptureManagerService)>($r14);

        $r16 = new com.android.server.contentcapture._$$Lambda$ContentCaptureManagerService$DataShareCallbackDelegate$RfORIok5BEnBfxE_2EzvPUqnoY8;

        specialinvoke $r16.<com.android.server.contentcapture._$$Lambda$ContentCaptureManagerService$DataShareCallbackDelegate$RfORIok5BEnBfxE_2EzvPUqnoY8: void <init>(com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.service.contentcapture.IDataShareReadAdapter)>(r0, r31, r2, r1);

        interfaceinvoke $r15.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r16);

        $r17 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: com.android.server.contentcapture.ContentCaptureManagerService mParentService>;

        $r18 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: android.os.Handler access$3900(com.android.server.contentcapture.ContentCaptureManagerService)>($r17);

        $r19 = new com.android.server.contentcapture._$$Lambda$ContentCaptureManagerService$DataShareCallbackDelegate$x2Qz6JROlFUZJrFhBfDpz3lEo0Q;

        specialinvoke $r19.<com.android.server.contentcapture._$$Lambda$ContentCaptureManagerService$DataShareCallbackDelegate$x2Qz6JROlFUZJrFhBfDpz3lEo0Q: void <init>(com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.service.contentcapture.IDataShareReadAdapter)>(r0, r30, r31, r2, r33, r1);

        virtualinvoke $r18.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r19, 300000L);

        return;

     label6:
        $r26 := @caughtexception;

        $r27 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r27, "Failed to call start() the service operation", $r26);

        $r28 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void sendErrorSignal(android.view.contentcapture.IDataShareWriteAdapter,android.service.contentcapture.IDataShareReadAdapter,int)>($r28, r1, 1);

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(13);

        return;

     label7:
        $r23 := @caughtexception;

        $r24 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r24, "Failed to call write() the client operation", $r23);

        $r25 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void sendErrorSignal(android.view.contentcapture.IDataShareWriteAdapter,android.service.contentcapture.IDataShareReadAdapter,int)>($r25, r1, 1);

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(12);

        return;

        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public void lambda$accept$0$ContentCaptureManagerService$DataShareCallbackDelegate(android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.service.contentcapture.IDataShareReadAdapter)
    {
        com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate r0;
        android.service.contentcapture.IDataShareReadAdapter r1;
        android.os.ParcelFileDescriptor$AutoCloseInputStream r2;
        com.android.server.contentcapture.ContentCaptureManagerService $r3, $r4, $r15, $r16, $r26, $r27;
        java.util.Set $r5, $r17, $r28;
        android.view.contentcapture.DataShareRequest $r6, $r18, $r29;
        java.lang.String $r7, $r13, $r19, $r30, $r36, $r39, $r41, $r43, $r49;
        android.view.contentcapture.IDataShareWriteAdapter $r8, $r10, $r14, $r21, $r31, $r33;
        java.util.concurrent.atomic.AtomicBoolean $r9, $r11, $r20, $r22, $r32, $r34;
        boolean $z4, $z6, $z8, z10, z11, z12, z13, z14;
        java.lang.Throwable $r12, $r23, $r24, $r25, $r37, $r44, $r45, $r46, $r47;
        android.os.RemoteException $r35, $r38, $r40, $r42, $r48;
        android.os.ParcelFileDescriptor r50, r51;
        android.os.ParcelFileDescriptor$AutoCloseOutputStream r52;
        byte[] r53;
        int i6;
        java.lang.Object r54, r64, r67;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate;

        r50 := @parameter0: android.os.ParcelFileDescriptor;

        r51 := @parameter1: android.os.ParcelFileDescriptor;

        r1 := @parameter2: android.service.contentcapture.IDataShareReadAdapter;

        z10 = 0;

        z11 = 0;

        z12 = 0;

     label01:
        r2 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

     label02:
        z11 = 0;

        z12 = 0;

     label03:
        specialinvoke r2.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>(r50);

     label04:
        z13 = 0;

     label05:
        r52 = new android.os.ParcelFileDescriptor$AutoCloseOutputStream;

     label06:
        z13 = 0;

     label07:
        specialinvoke r52.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>(r51);

     label08:
        z14 = 0;

     label09:
        r53 = newarray (byte)[1024];

     label10:
        z14 = z10;

     label11:
        i6 = virtualinvoke r2.<java.io.InputStream: int read(byte[])>(r53);

     label12:
        if i6 != -1 goto label29;

        z13 = z10;

     label13:
        virtualinvoke r52.<java.io.OutputStream: void close()>();

     label14:
        z11 = z10;

        z12 = z10;

     label15:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label16:
        $r3 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: com.android.server.contentcapture.ContentCaptureManagerService mParentService>;

        r54 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.Object access$4200(com.android.server.contentcapture.ContentCaptureManagerService)>($r3);

        entermonitor r54;

     label17:
        $r4 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: com.android.server.contentcapture.ContentCaptureManagerService mParentService>;

        $r5 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.util.Set access$1800(com.android.server.contentcapture.ContentCaptureManagerService)>($r4);

        $r6 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.DataShareRequest mDataShareRequest>;

        $r7 = virtualinvoke $r6.<android.view.contentcapture.DataShareRequest: java.lang.String getPackageName()>();

        interfaceinvoke $r5.<java.util.Set: boolean remove(java.lang.Object)>($r7);

        exitmonitor r54;

     label18:
        if z10 == 0 goto label25;

        $r9 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: java.util.concurrent.atomic.AtomicBoolean mLoggedWriteFinish>;

        $z4 = virtualinvoke $r9.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z4 != 0 goto label19;

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(9);

        $r11 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: java.util.concurrent.atomic.AtomicBoolean mLoggedWriteFinish>;

        virtualinvoke $r11.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label19:
        $r10 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        interfaceinvoke $r10.<android.view.contentcapture.IDataShareWriteAdapter: void finish()>();

     label20:
        goto label22;

     label21:
        $r35 := @caughtexception;

        $r36 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r36, "Failed to call finish() the client operation", $r35);

     label22:
        interfaceinvoke r1.<android.service.contentcapture.IDataShareReadAdapter: void finish()>();

     label23:
        goto label61;

     label24:
        $r40 := @caughtexception;

        $r41 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r41, "Failed to call finish() the service operation", $r40);

        goto label23;

     label25:
        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(11);

        $r8 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void sendErrorSignal(android.view.contentcapture.IDataShareWriteAdapter,android.service.contentcapture.IDataShareReadAdapter,int)>($r8, r1, 1);

        goto label61;

     label26:
        $r47 := @caughtexception;

     label27:
        exitmonitor r54;

     label28:
        throw $r47;

     label29:
        z14 = z10;

     label30:
        virtualinvoke r52.<java.io.OutputStream: void write(byte[],int,int)>(r53, 0, i6);

     label31:
        z10 = 1;

        goto label10;

     label32:
        $r46 := @caughtexception;

     label33:
        virtualinvoke r52.<java.io.OutputStream: void close()>();

     label34:
        goto label37;

     label35:
        $r45 := @caughtexception;

        z13 = z14;

     label36:
        virtualinvoke $r46.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r45);

     label37:
        z13 = z14;

     label38:
        throw $r46;

     label39:
        $r23 := @caughtexception;

     label40:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label41:
        goto label44;

     label42:
        $r44 := @caughtexception;

        z11 = z13;

        z12 = z13;

     label43:
        virtualinvoke $r23.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r44);

     label44:
        z11 = z13;

        z12 = z13;

     label45:
        throw $r23;

     label46:
        $r25 := @caughtexception;

        goto label65;

     label47:
        $r12 := @caughtexception;

        z11 = z12;

     label48:
        $r13 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r13, "Failed to pipe client and service streams", $r12);

     label49:
        z11 = z12;

     label50:
        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(10);

     label51:
        z11 = z12;

     label52:
        $r14 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void sendErrorSignal(android.view.contentcapture.IDataShareWriteAdapter,android.service.contentcapture.IDataShareReadAdapter,int)>($r14, r1, 1);

     label53:
        $r15 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: com.android.server.contentcapture.ContentCaptureManagerService mParentService>;

        r64 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.Object access$4200(com.android.server.contentcapture.ContentCaptureManagerService)>($r15);

        entermonitor r64;

     label54:
        $r16 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: com.android.server.contentcapture.ContentCaptureManagerService mParentService>;

        $r17 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.util.Set access$1800(com.android.server.contentcapture.ContentCaptureManagerService)>($r16);

        $r18 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.DataShareRequest mDataShareRequest>;

        $r19 = virtualinvoke $r18.<android.view.contentcapture.DataShareRequest: java.lang.String getPackageName()>();

        interfaceinvoke $r17.<java.util.Set: boolean remove(java.lang.Object)>($r19);

        exitmonitor r64;

     label55:
        if z12 == 0 goto label25;

        $r20 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: java.util.concurrent.atomic.AtomicBoolean mLoggedWriteFinish>;

        $z6 = virtualinvoke $r20.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z6 != 0 goto label56;

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(9);

        $r22 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: java.util.concurrent.atomic.AtomicBoolean mLoggedWriteFinish>;

        virtualinvoke $r22.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label56:
        $r21 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        interfaceinvoke $r21.<android.view.contentcapture.IDataShareWriteAdapter: void finish()>();

     label57:
        goto label59;

     label58:
        $r48 := @caughtexception;

        $r49 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r49, "Failed to call finish() the client operation", $r48);

     label59:
        interfaceinvoke r1.<android.service.contentcapture.IDataShareReadAdapter: void finish()>();

     label60:
        goto label23;

     label61:
        return;

     label62:
        $r37 := @caughtexception;

     label63:
        exitmonitor r64;

     label64:
        throw $r37;

     label65:
        $r26 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: com.android.server.contentcapture.ContentCaptureManagerService mParentService>;

        r67 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.Object access$4200(com.android.server.contentcapture.ContentCaptureManagerService)>($r26);

        entermonitor r67;

     label66:
        $r27 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: com.android.server.contentcapture.ContentCaptureManagerService mParentService>;

        $r28 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.util.Set access$1800(com.android.server.contentcapture.ContentCaptureManagerService)>($r27);

        $r29 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.DataShareRequest mDataShareRequest>;

        $r30 = virtualinvoke $r29.<android.view.contentcapture.DataShareRequest: java.lang.String getPackageName()>();

        interfaceinvoke $r28.<java.util.Set: boolean remove(java.lang.Object)>($r30);

        exitmonitor r67;

     label67:
        if z11 == 0 goto label74;

        $r32 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: java.util.concurrent.atomic.AtomicBoolean mLoggedWriteFinish>;

        $z8 = virtualinvoke $r32.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z8 != 0 goto label68;

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(9);

        $r34 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: java.util.concurrent.atomic.AtomicBoolean mLoggedWriteFinish>;

        virtualinvoke $r34.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label68:
        $r33 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        interfaceinvoke $r33.<android.view.contentcapture.IDataShareWriteAdapter: void finish()>();

     label69:
        goto label71;

     label70:
        $r42 := @caughtexception;

        $r43 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r43, "Failed to call finish() the client operation", $r42);

     label71:
        interfaceinvoke r1.<android.service.contentcapture.IDataShareReadAdapter: void finish()>();

     label72:
        goto label75;

     label73:
        $r38 := @caughtexception;

        $r39 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r39, "Failed to call finish() the service operation", $r38);

        goto label72;

     label74:
        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(11);

        $r31 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void sendErrorSignal(android.view.contentcapture.IDataShareWriteAdapter,android.service.contentcapture.IDataShareReadAdapter,int)>($r31, r1, 1);

     label75:
        throw $r25;

     label76:
        $r24 := @caughtexception;

     label77:
        exitmonitor r67;

     label78:
        throw $r24;

        catch java.io.IOException from label01 to label02 with label47;
        catch java.lang.Throwable from label01 to label02 with label46;
        catch java.io.IOException from label03 to label04 with label47;
        catch java.lang.Throwable from label03 to label04 with label46;
        catch java.lang.Throwable from label05 to label06 with label39;
        catch java.lang.Throwable from label07 to label08 with label39;
        catch java.lang.Throwable from label09 to label10 with label32;
        catch java.lang.Throwable from label11 to label12 with label32;
        catch java.lang.Throwable from label13 to label14 with label39;
        catch java.io.IOException from label15 to label16 with label47;
        catch java.lang.Throwable from label15 to label16 with label46;
        catch java.lang.Throwable from label17 to label18 with label26;
        catch android.os.RemoteException from label19 to label20 with label21;
        catch android.os.RemoteException from label22 to label23 with label24;
        catch java.lang.Throwable from label27 to label28 with label26;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label33 to label34 with label35;
        catch java.lang.Throwable from label36 to label37 with label39;
        catch java.lang.Throwable from label38 to label39 with label39;
        catch java.lang.Throwable from label40 to label41 with label42;
        catch java.io.IOException from label43 to label44 with label47;
        catch java.lang.Throwable from label43 to label44 with label46;
        catch java.io.IOException from label45 to label46 with label47;
        catch java.lang.Throwable from label45 to label46 with label46;
        catch java.lang.Throwable from label48 to label49 with label46;
        catch java.lang.Throwable from label50 to label51 with label46;
        catch java.lang.Throwable from label52 to label53 with label46;
        catch java.lang.Throwable from label54 to label55 with label62;
        catch android.os.RemoteException from label56 to label57 with label58;
        catch android.os.RemoteException from label59 to label60 with label24;
        catch java.lang.Throwable from label63 to label64 with label62;
        catch java.lang.Throwable from label66 to label67 with label76;
        catch android.os.RemoteException from label68 to label69 with label70;
        catch android.os.RemoteException from label71 to label72 with label73;
        catch java.lang.Throwable from label77 to label78 with label76;
    }

    public void lambda$accept$1$ContentCaptureManagerService$DataShareCallbackDelegate(android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.service.contentcapture.IDataShareReadAdapter)
    {
        com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate r0;
        android.os.ParcelFileDescriptor r1, r2, r3, r4;
        android.service.contentcapture.IDataShareReadAdapter r5;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        r4 := @parameter3: android.os.ParcelFileDescriptor;

        r5 := @parameter4: android.service.contentcapture.IDataShareReadAdapter;

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void enforceDataSharingTtl(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.service.contentcapture.IDataShareReadAdapter)>(r1, r2, r3, r4, r5);

        return;
    }

    public void reject()
    {
        com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate r0;
        java.lang.String $r1, $r4, $r6;
        android.view.contentcapture.IDataShareWriteAdapter $r2, $r7;
        android.os.RemoteException $r3, $r5;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate;

        $r1 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r1, "Data share request rejected by Content Capture service");

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: void logServiceEvent(int)>(8);

     label1:
        $r2 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        interfaceinvoke $r2.<android.view.contentcapture.IDataShareWriteAdapter: void rejected()>();

     label2:
        goto label7;

     label3:
        $r5 := @caughtexception;

        $r6 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Failed to call rejected() the client operation", $r5);

     label4:
        $r7 = r0.<com.android.server.contentcapture.ContentCaptureManagerService$DataShareCallbackDelegate: android.view.contentcapture.IDataShareWriteAdapter mClientAdapter>;

        interfaceinvoke $r7.<android.view.contentcapture.IDataShareWriteAdapter: void error(int)>(1);

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        $r4 = staticinvoke <com.android.server.contentcapture.ContentCaptureManagerService: java.lang.String access$1100()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Failed to call error() the client operation", $r3);

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }
}
