public final class com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand extends android.os.ShellCommand
{
    private final com.android.server.contentcapture.ContentCaptureManagerService mService;

    public void <init>(com.android.server.contentcapture.ContentCaptureManagerService)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        com.android.server.contentcapture.ContentCaptureManagerService r1;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: com.android.server.contentcapture.ContentCaptureManagerService;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: com.android.server.contentcapture.ContentCaptureManagerService mService> = r1;

        return;
    }

    private int getBindInstantService(java.io.PrintWriter)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        com.android.server.contentcapture.ContentCaptureManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: com.android.server.contentcapture.ContentCaptureManagerService mService>;

        $z0 = virtualinvoke $r2.<com.android.server.contentcapture.ContentCaptureManagerService: boolean getAllowInstantService()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("true");

        goto label2;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("false");

     label2:
        return 0;
    }

    private int getDefaultServiceEnabled(java.io.PrintWriter)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        int i0;
        com.android.server.contentcapture.ContentCaptureManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        i0 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int getNextIntArgRequired()>();

        $r2 = r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: com.android.server.contentcapture.ContentCaptureManagerService mService>;

        $z0 = virtualinvoke $r2.<com.android.server.contentcapture.ContentCaptureManagerService: boolean isDefaultServiceEnabled(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        return 0;
    }

    private int getNextIntArgRequired()
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        $r1 = virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        return $i0;
    }

    private int getUserIdFromArgsOrAllUsers()
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        $r1 = "--user";

        $r2 = virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: java.lang.String getNextArg()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        $i0 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r3);

        return $i0;

     label1:
        return -1;
    }

    private boolean isNextArgSessions(java.io.PrintWriter)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("sessions");

        if $z0 != 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: invalid list type");

        return 0;

     label1:
        return 1;
    }

    private int requestDestroy(java.io.PrintWriter)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        int i0, $i1;
        boolean $z0;
        java.util.concurrent.CountDownLatch $r3;
        com.android.server.contentcapture._$$Lambda$ContentCaptureManagerServiceShellCommand$JID7gMfFJshMFIl2pXHCkZLd6tI $r4;
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand$1 $r5;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $z0 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: boolean isNextArgSessions(java.io.PrintWriter)>(r1);

        if $z0 != 0 goto label1;

        return -1;

     label1:
        i0 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int getUserIdFromArgsOrAllUsers()>();

        $r3 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r3.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r4 = new com.android.server.contentcapture._$$Lambda$ContentCaptureManagerServiceShellCommand$JID7gMfFJshMFIl2pXHCkZLd6tI;

        $r5 = new com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand$1;

        specialinvoke $r5.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand$1: void <init>(com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand,java.util.concurrent.CountDownLatch)>(r0, $r3);

        specialinvoke $r4.<com.android.server.contentcapture._$$Lambda$ContentCaptureManagerServiceShellCommand$JID7gMfFJshMFIl2pXHCkZLd6tI: void <init>(com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand,int,com.android.internal.os.IResultReceiver)>(r0, i0, $r5);

        $i1 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int requestSessionCommon(java.io.PrintWriter,java.util.concurrent.CountDownLatch,java.lang.Runnable)>(r1, $r3, $r4);

        return $i1;
    }

    private int requestGet(java.io.PrintWriter)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r7;
        boolean $z0, $z1;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r4;
        byte b3;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r2 = virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        i2 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        if i2 == 529654941 goto label3;

        if i2 == 809633044 goto label2;

     label1:
        goto label4;

     label2:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("bind-instant-service-allowed");

        if $z1 == 0 goto label1;

        b3 = 0;

        goto label5;

     label3:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("default-service-enabled");

        if $z0 == 0 goto label1;

        b3 = 1;

        goto label5;

     label4:
        b3 = -1;

     label5:
        if b3 == 0 goto label7;

        if b3 == 1 goto label6;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid set: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return -1;

     label6:
        $i1 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int getDefaultServiceEnabled(java.io.PrintWriter)>(r1);

        return $i1;

     label7:
        $i0 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int getBindInstantService(java.io.PrintWriter)>(r1);

        return $i0;
    }

    private int requestList(java.io.PrintWriter)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        int i0, $i1;
        boolean $z0;
        java.util.concurrent.CountDownLatch $r3;
        com.android.server.contentcapture._$$Lambda$ContentCaptureManagerServiceShellCommand$vv2l3dpITkvTtrSG9p_nNuz8Nsc $r4;
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand$2 $r5;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $z0 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: boolean isNextArgSessions(java.io.PrintWriter)>(r1);

        if $z0 != 0 goto label1;

        return -1;

     label1:
        i0 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int getUserIdFromArgsOrAllUsers()>();

        $r3 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r3.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r4 = new com.android.server.contentcapture._$$Lambda$ContentCaptureManagerServiceShellCommand$vv2l3dpITkvTtrSG9p_nNuz8Nsc;

        $r5 = new com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand$2;

        specialinvoke $r5.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand$2: void <init>(com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand,java.io.PrintWriter,java.util.concurrent.CountDownLatch)>(r0, r1, $r3);

        specialinvoke $r4.<com.android.server.contentcapture._$$Lambda$ContentCaptureManagerServiceShellCommand$vv2l3dpITkvTtrSG9p_nNuz8Nsc: void <init>(com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand,int,com.android.internal.os.IResultReceiver)>(r0, i0, $r5);

        $i1 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int requestSessionCommon(java.io.PrintWriter,java.util.concurrent.CountDownLatch,java.lang.Runnable)>(r1, $r3, $r4);

        return $i1;
    }

    private int requestSessionCommon(java.io.PrintWriter, java.util.concurrent.CountDownLatch, java.lang.Runnable)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.util.concurrent.CountDownLatch r2;
        java.lang.Runnable r3;
        int $i0;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.util.concurrent.CountDownLatch;

        r3 := @parameter2: java.lang.Runnable;

        interfaceinvoke r3.<java.lang.Runnable: void run()>();

        $i0 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int waitForLatch(java.io.PrintWriter,java.util.concurrent.CountDownLatch)>(r1, r2);

        return $i0;
    }

    private int requestSet(java.io.PrintWriter)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r7;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, i3;
        java.lang.StringBuilder $r4;
        byte b4;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r2 = virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        i3 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        if i3 == 529654941 goto label4;

        if i3 == 809633044 goto label3;

        if i3 == 2003978041 goto label2;

     label1:
        goto label5;

     label2:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("temporary-service");

        if $z2 == 0 goto label1;

        b4 = 1;

        goto label6;

     label3:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("bind-instant-service-allowed");

        if $z1 == 0 goto label1;

        b4 = 0;

        goto label6;

     label4:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("default-service-enabled");

        if $z0 == 0 goto label1;

        b4 = 2;

        goto label6;

     label5:
        b4 = -1;

     label6:
        if b4 == 0 goto label9;

        if b4 == 1 goto label8;

        if b4 == 2 goto label7;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid set: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return -1;

     label7:
        $i2 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int setDefaultServiceEnabled(java.io.PrintWriter)>(r1);

        return $i2;

     label8:
        $i1 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int setTemporaryService(java.io.PrintWriter)>(r1);

        return $i1;

     label9:
        $i0 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int setBindInstantService(java.io.PrintWriter)>(r1);

        return $i0;
    }

    private int setBindInstantService(java.io.PrintWriter)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r8, r9;
        boolean $z0, $z1;
        com.android.server.contentcapture.ContentCaptureManagerService $r3, $r4;
        java.lang.StringBuilder $r5;
        int i0;
        byte b1;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r2 = virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        r9 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        i0 = virtualinvoke r9.<java.lang.String: int hashCode()>();

        if i0 == 3569038 goto label3;

        if i0 == 97196323 goto label2;

     label1:
        goto label4;

     label2:
        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("false");

        if $z1 == 0 goto label1;

        b1 = 1;

        goto label5;

     label3:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label1;

        b1 = 0;

        goto label5;

     label4:
        b1 = -1;

     label5:
        if b1 == 0 goto label7;

        if b1 == 1 goto label6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return -1;

     label6:
        $r4 = r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: com.android.server.contentcapture.ContentCaptureManagerService mService>;

        virtualinvoke $r4.<com.android.server.contentcapture.ContentCaptureManagerService: void setAllowInstantService(boolean)>(0);

        return 0;

     label7:
        $r3 = r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: com.android.server.contentcapture.ContentCaptureManagerService mService>;

        virtualinvoke $r3.<com.android.server.contentcapture.ContentCaptureManagerService: void setAllowInstantService(boolean)>(1);

        return 0;
    }

    private int setDefaultServiceEnabled(java.io.PrintWriter)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        int i0;
        boolean z0, $z1;
        java.lang.String $r3, $r8;
        com.android.server.contentcapture.ContentCaptureManagerService $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        i0 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int getNextIntArgRequired()>();

        $r3 = virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r3);

        $r4 = r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: com.android.server.contentcapture.ContentCaptureManagerService mService>;

        $z1 = virtualinvoke $r4.<com.android.server.contentcapture.ContentCaptureManagerService: boolean setDefaultServiceEnabled(int,boolean)>(i0, z0);

        if $z1 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("already ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

     label1:
        return 0;
    }

    private int setTemporaryService(java.io.PrintWriter)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        int i0, i1;
        java.lang.String r2, $r11;
        com.android.server.contentcapture.ContentCaptureManagerService $r4, $r12;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        i0 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int getNextIntArgRequired()>();

        r2 = virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: java.lang.String getNextArg()>();

        if r2 != null goto label1;

        $r12 = r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: com.android.server.contentcapture.ContentCaptureManagerService mService>;

        virtualinvoke $r12.<com.android.server.contentcapture.ContentCaptureManagerService: void resetTemporaryService(int)>(i0);

        return 0;

     label1:
        i1 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int getNextIntArgRequired()>();

        $r4 = r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: com.android.server.contentcapture.ContentCaptureManagerService mService>;

        virtualinvoke $r4.<com.android.server.contentcapture.ContentCaptureManagerService: void setTemporaryService(int,java.lang.String,int)>(i0, r2, i1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ContentCaptureService temporarily set to ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        return 0;
    }

    private int waitForLatch(java.io.PrintWriter, java.util.concurrent.CountDownLatch)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.util.concurrent.TimeUnit $r2;
        boolean $z0;
        java.lang.Throwable $r3;
        java.lang.Thread $r4;
        java.util.concurrent.CountDownLatch r5;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r5 := @parameter1: java.util.concurrent.CountDownLatch;

     label1:
        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $z0 = virtualinvoke r5.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(5L, $r2);

        if $z0 != 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Timed out after 5 seconds");

     label2:
        return -1;

     label3:
        return 0;

     label4:
        $r3 := @caughtexception;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("System call interrupted");

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r4.<java.lang.Thread: void interrupt()>();

        return -1;

        catch java.lang.InterruptedException from label1 to label2 with label4;
    }

    public void lambda$requestDestroy$0$ContentCaptureManagerServiceShellCommand(int, com.android.internal.os.IResultReceiver)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        int i0;
        com.android.internal.os.IResultReceiver r1;
        com.android.server.contentcapture.ContentCaptureManagerService $r2;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.os.IResultReceiver;

        $r2 = r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: com.android.server.contentcapture.ContentCaptureManagerService mService>;

        virtualinvoke $r2.<com.android.server.contentcapture.ContentCaptureManagerService: void destroySessions(int,com.android.internal.os.IResultReceiver)>(i0, r1);

        return;
    }

    public void lambda$requestList$1$ContentCaptureManagerServiceShellCommand(int, com.android.internal.os.IResultReceiver)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        int i0;
        com.android.internal.os.IResultReceiver r1;
        com.android.server.contentcapture.ContentCaptureManagerService $r2;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.os.IResultReceiver;

        $r2 = r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: com.android.server.contentcapture.ContentCaptureManagerService mService>;

        virtualinvoke $r2.<com.android.server.contentcapture.ContentCaptureManagerService: void listSessions(int,com.android.internal.os.IResultReceiver)>(i0, r1);

        return;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.lang.String r1;
        java.io.PrintWriter r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1, $z2, $z3;
        byte b7;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label01;

        $i6 = virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int handleDefaultCommands(java.lang.String)>(r1);

        return $i6;

     label01:
        r2 = virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        b7 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case 102230: goto label06;
            case 113762: goto label05;
            case 3322014: goto label04;
            case 1557372922: goto label03;
            default: goto label02;
        };

     label02:
        goto label07;

     label03:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("destroy");

        if $z0 == 0 goto label02;

        b7 = 1;

        goto label07;

     label04:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z1 == 0 goto label02;

        b7 = 0;

        goto label07;

     label05:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z2 == 0 goto label02;

        b7 = 3;

        goto label07;

     label06:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("get");

        if $z3 == 0 goto label02;

        b7 = 2;

     label07:
        if b7 == 0 goto label11;

        if b7 == 1 goto label10;

        if b7 == 2 goto label09;

        if b7 == 3 goto label08;

        $i5 = virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int handleDefaultCommands(java.lang.String)>(r1);

        return $i5;

     label08:
        $i4 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int requestSet(java.io.PrintWriter)>(r2);

        return $i4;

     label09:
        $i3 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int requestGet(java.io.PrintWriter)>(r2);

        return $i3;

     label10:
        $i2 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int requestDestroy(java.io.PrintWriter)>(r2);

        return $i2;

     label11:
        $i1 = specialinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int requestList(java.io.PrintWriter)>(r2);

        return $i1;
    }

    public void onHelp()
    {
        com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand r0;
        java.lang.Throwable $r2, $r3;
        java.io.PrintWriter r4;

        r0 := @this: com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand;

        r4 = virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label1:
        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("ContentCapture Service (content_capture) commands:");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Prints this help text.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  get bind-instant-service-allowed");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Gets whether binding to services provided by instant apps is allowed");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set bind-instant-service-allowed [true | false]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Sets whether binding to services provided by instant apps is allowed");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set temporary-service USER_ID [COMPONENT_NAME DURATION]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Temporarily (for DURATION ms) changes the service implemtation.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    To reset, call with just the USER_ID argument.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set default-service-enabled USER_ID [true|false]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Enable / disable the default service for the user.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  get default-service-enabled USER_ID");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Checks whether the default service is enabled for the user.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  list sessions [--user USER_ID]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Lists all pending sessions.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  destroy sessions [--user USER_ID]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Destroys all pending sessions.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<java.io.PrintWriter: void close()>();

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        if r4 == null goto label8;

     label5:
        virtualinvoke r4.<java.io.PrintWriter: void close()>();

     label6:
        goto label8;

     label7:
        $r2 := @caughtexception;

        virtualinvoke $r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r2);

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
}
