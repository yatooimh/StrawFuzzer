final class com.android.server.contentcapture.ContentCapturePerUserService extends com.android.server.infra.AbstractPerUserSystemService implements com.android.server.contentcapture.RemoteContentCaptureService$ContentCaptureServiceCallbacks
{
    private static final java.lang.String TAG;
    private final android.util.ArrayMap mConditionsByPkg;
    private android.service.contentcapture.ContentCaptureServiceInfo mInfo;
    com.android.server.contentcapture.RemoteContentCaptureService mRemoteService;
    private final com.android.server.contentcapture.ContentCapturePerUserService$ContentCaptureServiceRemoteCallback mRemoteServiceCallback;
    private final android.util.SparseArray mSessions;
    private boolean mZombie;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Lcom/android/server/contentcapture/ContentCapturePerUserService;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG> = $r1;

        return;
    }

    void <init>(com.android.server.contentcapture.ContentCaptureManagerService, java.lang.Object, boolean, int)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        com.android.server.contentcapture.ContentCaptureManagerService r1;
        java.lang.Object r2;
        boolean z0;
        int i0;
        android.util.SparseArray $r3;
        com.android.server.contentcapture.ContentCapturePerUserService$ContentCaptureServiceRemoteCallback $r4;
        android.util.ArrayMap $r5;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r1 := @parameter0: com.android.server.contentcapture.ContentCaptureManagerService;

        r2 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: void <init>(com.android.server.infra.AbstractMasterSystemService,java.lang.Object,int)>(r1, r2, i0);

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions> = $r3;

        $r4 = new com.android.server.contentcapture.ContentCapturePerUserService$ContentCaptureServiceRemoteCallback;

        specialinvoke $r4.<com.android.server.contentcapture.ContentCapturePerUserService$ContentCaptureServiceRemoteCallback: void <init>(com.android.server.contentcapture.ContentCapturePerUserService,com.android.server.contentcapture.ContentCapturePerUserService$1)>(r0, null);

        r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.ContentCapturePerUserService$ContentCaptureServiceRemoteCallback mRemoteServiceCallback> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.ArrayMap mConditionsByPkg> = $r5;

        specialinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: void updateRemoteServiceLocked(boolean)>(z0);

        return;
    }

    static com.android.server.infra.AbstractMasterSystemService access$100(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        return $r1;
    }

    static java.lang.Object access$1000(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractMasterSystemService access$1100(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        return $r1;
    }

    static com.android.server.infra.AbstractMasterSystemService access$1200(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        return $r1;
    }

    static java.lang.Object access$1300(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: java.lang.Object mLock>;

        return $r1;
    }

    static android.util.ArrayMap access$1400(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.ArrayMap mConditionsByPkg>;

        return $r1;
    }

    static com.android.server.infra.AbstractMasterSystemService access$1500(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        return $r1;
    }

    static android.content.Context access$1600(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.content.Context getContext()>();

        return $r1;
    }

    static int access$1700(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        int $i0;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $i0 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: int mUserId>;

        return $i0;
    }

    static java.lang.String access$200()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        return $r0;
    }

    static int access$300(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        int $i0;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $i0 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: int mUserId>;

        return $i0;
    }

    static int access$400(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        int $i0;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $i0 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: int mUserId>;

        return $i0;
    }

    static com.android.server.infra.AbstractMasterSystemService access$500(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        return $r1;
    }

    static android.util.SparseArray access$600(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        return $r1;
    }

    static int access$700(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        int $i0;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $i0 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: int mUserId>;

        return $i0;
    }

    static com.android.server.infra.AbstractMasterSystemService access$800(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        return $r1;
    }

    static com.android.server.infra.AbstractMasterSystemService access$900(com.android.server.contentcapture.ContentCapturePerUserService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;

        r0 := @parameter0: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        return $r1;
    }

    private void assertCallerLocked(java.lang.String)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        java.lang.String r1, r2, $r19, $r24, $r30, r33;
        int i0, i1, $i2;
        android.content.Context $r4;
        java.lang.Object $r5;
        android.app.ActivityManagerInternal $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r10, $r20, $r26;
        java.lang.SecurityException $r23, $r29;
        android.content.pm.PackageManager$NameNotFoundException $r25;
        android.content.pm.PackageManager r31;
        java.lang.String[] r32;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r1 := @parameter0: java.lang.String;

        $r4 = virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.content.Context getContext()>();

        r31 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label1:
        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        i1 = virtualinvoke r31.<android.content.pm.PackageManager: int getPackageUidAsUser(java.lang.String,int)>(r1, $i2);

     label2:
        if i0 == i1 goto label5;

        $r5 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        $r6 = (android.app.ActivityManagerInternal) $r5;

        $z0 = virtualinvoke $r6.<android.app.ActivityManagerInternal: boolean hasRunningActivity(int,java.lang.String)>(i0, r1);

        if $z0 != 0 goto label5;

        r32 = virtualinvoke r31.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        if r32 == null goto label3;

        r33 = r32[0];

        goto label4;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uid-");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r33 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        r2 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("App (package=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", UID=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") passed package (");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") owned by UID ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r2, $r19);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid package: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = new java.lang.SecurityException;

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.SecurityException: void <init>(java.lang.String)>($r24);

        throw $r23;

     label5:
        return;

     label6:
        $r25 := @caughtexception;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not verify UID for ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r29 = new java.lang.SecurityException;

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.SecurityException: void <init>(java.lang.String)>($r30);

        throw $r29;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label6;
    }

    private com.android.server.contentcapture.ContentCaptureServerSession getSession(android.os.IBinder)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        android.os.IBinder r1, $r6;
        com.android.server.contentcapture.ContentCaptureServerSession r2;
        android.util.SparseArray $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r1 := @parameter0: android.os.IBinder;

        i1 = 0;

     label1:
        $r3 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r2 = (com.android.server.contentcapture.ContentCaptureServerSession) $r5;

        $r6 = r2.<com.android.server.contentcapture.ContentCaptureServerSession: android.os.IBinder mActivityToken>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private int getSessionId(android.os.IBinder)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        android.os.IBinder r1;
        android.util.SparseArray $r2, $r3, $r6;
        int $i0, $i1, i2;
        java.lang.Object $r4;
        com.android.server.contentcapture.ContentCaptureServerSession $r5;
        boolean $z0;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r1 := @parameter0: android.os.IBinder;

        i2 = 0;

     label1:
        $r2 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i2 >= $i0 goto label3;

        $r3 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r5 = (com.android.server.contentcapture.ContentCaptureServerSession) $r4;

        $z0 = virtualinvoke $r5.<com.android.server.contentcapture.ContentCaptureServerSession: boolean isActivitySession(android.os.IBinder)>(r1);

        if $z0 == 0 goto label2;

        $r6 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $i1 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i2);

        return $i1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void resetContentCaptureWhitelistLocked()
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        com.android.server.infra.AbstractMasterSystemService $r1, $r3;
        com.android.server.contentcapture.ContentCaptureManagerService $r2, $r4;
        boolean $z0;
        int $i0;
        com.android.server.contentcapture.ContentCaptureManagerService$GlobalContentCaptureOptions $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r2 = (com.android.server.contentcapture.ContentCaptureManagerService) $r1;

        $z0 = $r2.<com.android.server.contentcapture.ContentCaptureManagerService: boolean verbose>;

        if $z0 == 0 goto label1;

        $r6 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r6, "resetting content capture whitelist");

     label1:
        $r3 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r4 = (com.android.server.contentcapture.ContentCaptureManagerService) $r3;

        $r5 = $r4.<com.android.server.contentcapture.ContentCaptureManagerService: com.android.server.contentcapture.ContentCaptureManagerService$GlobalContentCaptureOptions mGlobalContentCaptureOptions>;

        $i0 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: int mUserId>;

        virtualinvoke $r5.<com.android.server.contentcapture.ContentCaptureManagerService$GlobalContentCaptureOptions: void resetWhitelist(int)>($i0);

        return;
    }

    private void resurrectSessionsLocked()
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        int i0, i2;
        java.lang.String r1, $r16;
        android.util.SparseArray $r3, $r6;
        com.android.server.infra.AbstractMasterSystemService $r4;
        com.android.server.contentcapture.ContentCaptureManagerService $r5;
        boolean $z0;
        java.lang.Object $r7;
        com.android.server.contentcapture.ContentCaptureServerSession $r8;
        java.lang.StringBuilder $r9;
        com.android.server.contentcapture.RemoteContentCaptureService $r11;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        $r3 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        $r4 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r5 = (com.android.server.contentcapture.ContentCaptureManagerService) $r4;

        $z0 = $r5.<com.android.server.contentcapture.ContentCaptureManagerService: boolean debug>;

        if $z0 == 0 goto label1;

        r1 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ressurrecting remote service (");

        $r11 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") on ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sessions");

        $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r1, $r16);

     label1:
        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $r6 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r8 = (com.android.server.contentcapture.ContentCaptureServerSession) $r7;

        virtualinvoke $r8.<com.android.server.contentcapture.ContentCaptureServerSession: void resurrectLocked()>();

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    private void updateRemoteServiceLocked(boolean)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.server.infra.AbstractMasterSystemService $r2, $r5, $r8, $r11, $r14, $r16, $r22, $r25;
        com.android.server.contentcapture.ContentCaptureManagerService $r3, $r6, $r9, $r12, $r15, $r17, $r23, $r26;
        com.android.server.contentcapture.RemoteContentCaptureService $r4, $r7, $r27;
        android.content.Context $r10;
        com.android.server.contentcapture.ContentCapturePerUserService$ContentCaptureServiceRemoteCallback $r13;
        int $i0, $i1;
        java.lang.StringBuilder $r18, $r29;
        java.lang.String $r21, $r24, $r28, $r33, r34, r37;
        android.content.ComponentName r36;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r3 = (com.android.server.contentcapture.ContentCaptureManagerService) $r2;

        $z1 = $r3.<com.android.server.contentcapture.ContentCaptureManagerService: boolean verbose>;

        if $z1 == 0 goto label1;

        r34 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateRemoteService(disabled=");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r34, $r33);

     label1:
        $r4 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        if $r4 == null goto label3;

        $r25 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r26 = (com.android.server.contentcapture.ContentCaptureManagerService) $r25;

        $z6 = $r26.<com.android.server.contentcapture.ContentCaptureManagerService: boolean debug>;

        if $z6 == 0 goto label2;

        $r28 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r28, "updateRemoteService(): destroying old remote service");

     label2:
        $r27 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        virtualinvoke $r27.<com.android.server.contentcapture.RemoteContentCaptureService: void destroy()>();

        r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService> = null;

        specialinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: void resetContentCaptureWhitelistLocked()>();

     label3:
        r36 = virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.content.ComponentName updateServiceInfoLocked()>();

        if r36 != null goto label5;

        $r22 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r23 = (com.android.server.contentcapture.ContentCaptureManagerService) $r22;

        $z5 = $r23.<com.android.server.contentcapture.ContentCaptureManagerService: boolean debug>;

        if $z5 == 0 goto label4;

        $r24 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r24, "updateRemoteService(): no service component name");

     label4:
        return;

     label5:
        if z0 != 0 goto label7;

        $r5 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r6 = (com.android.server.contentcapture.ContentCaptureManagerService) $r5;

        $z2 = $r6.<com.android.server.contentcapture.ContentCaptureManagerService: boolean debug>;

        if $z2 == 0 goto label6;

        r37 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateRemoteService(): creating new remote service for ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r37, $r21);

     label6:
        $r7 = new com.android.server.contentcapture.RemoteContentCaptureService;

        $r8 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r9 = (com.android.server.contentcapture.ContentCaptureManagerService) $r8;

        $r10 = virtualinvoke $r9.<com.android.server.contentcapture.ContentCaptureManagerService: android.content.Context getContext()>();

        $r13 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.ContentCapturePerUserService$ContentCaptureServiceRemoteCallback mRemoteServiceCallback>;

        $i0 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: int mUserId>;

        $r11 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r12 = (com.android.server.contentcapture.ContentCaptureManagerService) $r11;

        $z3 = virtualinvoke $r12.<com.android.server.contentcapture.ContentCaptureManagerService: boolean isBindInstantServiceAllowed()>();

        $r14 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r15 = (com.android.server.contentcapture.ContentCaptureManagerService) $r14;

        $z4 = $r15.<com.android.server.contentcapture.ContentCaptureManagerService: boolean verbose>;

        $r16 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r17 = (com.android.server.contentcapture.ContentCaptureManagerService) $r16;

        $i1 = $r17.<com.android.server.contentcapture.ContentCaptureManagerService: int mDevCfgIdleUnbindTimeoutMs>;

        specialinvoke $r7.<com.android.server.contentcapture.RemoteContentCaptureService: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.service.contentcapture.IContentCaptureServiceCallback,int,com.android.server.contentcapture.ContentCapturePerUserService,boolean,boolean,int)>($r10, "android.service.contentcapture.ContentCaptureService", r36, $r13, $i0, r0, $z3, $z4, $i1);

        r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService> = $r7;

     label7:
        return;
    }

    public void destroyLocked()
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        com.android.server.contentcapture.RemoteContentCaptureService r1;
        com.android.server.infra.AbstractMasterSystemService $r2;
        com.android.server.contentcapture.ContentCaptureManagerService $r3;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        $r2 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r3 = (com.android.server.contentcapture.ContentCaptureManagerService) $r2;

        $z0 = $r3.<com.android.server.contentcapture.ContentCaptureManagerService: boolean debug>;

        if $z0 == 0 goto label1;

        $r4 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r4, "destroyLocked()");

     label1:
        r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        if r1 == null goto label2;

        virtualinvoke r1.<com.android.server.contentcapture.RemoteContentCaptureService: void destroy()>();

     label2:
        virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: void destroySessionsLocked()>();

        return;
    }

    void destroySessionsLocked()
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        int i0, i1;
        android.util.SparseArray $r1, $r2, $r3;
        java.lang.Object $r4;
        com.android.server.contentcapture.ContentCaptureServerSession $r5;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.server.contentcapture.ContentCaptureServerSession) $r4;

        virtualinvoke $r5.<com.android.server.contentcapture.ContentCaptureServerSession: void destroyLocked(boolean)>(1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        virtualinvoke $r2.<android.util.SparseArray: void clear()>();

        return;
    }

    protected void dumpLocked(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        java.lang.String r1, r16;
        java.io.PrintWriter r2;
        int i0, $i1, i2;
        java.lang.StringBuilder $r3;
        android.service.contentcapture.ContentCaptureServiceInfo $r6, $r7;
        boolean $z0;
        com.android.server.contentcapture.RemoteContentCaptureService $r8, $r14;
        android.util.SparseArray $r9, $r10, $r11;
        java.lang.Object $r12;
        com.android.server.contentcapture.ContentCaptureServerSession $r13;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: void dumpLocked(java.lang.String,java.io.PrintWriter)>(r1, r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r16 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Service Info: ");

        $r6 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.service.contentcapture.ContentCaptureServiceInfo mInfo>;

        if $r6 != null goto label1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("N/A");

        goto label2;

     label1:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $r7 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.service.contentcapture.ContentCaptureServiceInfo mInfo>;

        virtualinvoke $r7.<android.service.contentcapture.ContentCaptureServiceInfo: void dump(java.lang.String,java.io.PrintWriter)>(r16, r2);

     label2:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Zombie: ");

        $z0 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: boolean mZombie>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z0);

        $r8 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        if $r8 == null goto label3;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("remote service:");

        $r14 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        virtualinvoke $r14.<com.android.server.contentcapture.RemoteContentCaptureService: void dump(java.lang.String,java.io.PrintWriter)>(r16, r2);

     label3:
        $r9 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $i1 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        if $i1 != 0 goto label4;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("no sessions");

        goto label6;

     label4:
        $r10 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        i0 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("number sessions: ");

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>(i0);

        i2 = 0;

     label5:
        if i2 >= i0 goto label6;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("#");

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>(i2);

        $r11 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r13 = (com.android.server.contentcapture.ContentCaptureServerSession) $r12;

        virtualinvoke $r13.<com.android.server.contentcapture.ContentCaptureServerSession: void dumpLocked(java.lang.String,java.io.PrintWriter)>(r16, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        i2 = i2 + 1;

        goto label5;

     label6:
        return;
    }

    public void finishSessionLocked(int)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        int i0;
        java.lang.String r1, $r9, $r15, r17;
        boolean $z0, $z1, $z2;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        com.android.server.infra.AbstractMasterSystemService $r4, $r10;
        com.android.server.contentcapture.ContentCaptureManagerService $r5, $r11;
        java.lang.StringBuilder $r6, $r12;
        com.android.server.contentcapture.ContentCaptureServerSession r16;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: boolean isEnabledLocked()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r16 = (com.android.server.contentcapture.ContentCaptureServerSession) $r3;

        if r16 != null goto label3;

        $r10 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r11 = (com.android.server.contentcapture.ContentCaptureManagerService) $r10;

        $z2 = $r11.<com.android.server.contentcapture.ContentCaptureManagerService: boolean debug>;

        if $z2 == 0 goto label2;

        r17 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finishSession(): no session with id");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r17, $r15);

     label2:
        return;

     label3:
        $r4 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r5 = (com.android.server.contentcapture.ContentCaptureManagerService) $r4;

        $z1 = $r5.<com.android.server.contentcapture.ContentCaptureManagerService: boolean verbose>;

        if $z1 == 0 goto label4;

        r1 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finishSession(): id=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r9);

     label4:
        virtualinvoke r16.<com.android.server.contentcapture.ContentCaptureServerSession: void removeSelfLocked(boolean)>(1);

        return;
    }

    android.util.ArraySet getContentCaptureConditionsLocked(java.lang.String)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        android.util.ArraySet $r4;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.ArrayMap mConditionsByPkg>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.util.ArraySet) $r3;

        return $r4;
    }

    public android.content.ComponentName getServiceSettingsActivityLocked()
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        android.content.ComponentName $r1;
        android.service.contentcapture.ContentCaptureServiceInfo $r2, r5;
        android.content.pm.ServiceInfo $r3;
        java.lang.String $r4, r6;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r5 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.service.contentcapture.ContentCaptureServiceInfo mInfo>;

        if r5 != null goto label1;

        return null;

     label1:
        r6 = virtualinvoke r5.<android.service.contentcapture.ContentCaptureServiceInfo: java.lang.String getSettingsActivity()>();

        if r6 != null goto label2;

        return null;

     label2:
        $r1 = new android.content.ComponentName;

        $r2 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.service.contentcapture.ContentCaptureServiceInfo mInfo>;

        $r3 = virtualinvoke $r2.<android.service.contentcapture.ContentCaptureServiceInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r4 = $r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r4, r6);

        return $r1;
    }

    public boolean isContentCaptureServiceForUserLocked(int)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: int getServiceUidLocked()>();

        if i0 != $i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void listSessionsLocked(java.util.ArrayList)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        java.util.ArrayList r1;
        int i0, i1;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;
        com.android.server.contentcapture.ContentCaptureServerSession $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r1 := @parameter0: java.util.ArrayList;

        $r2 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.server.contentcapture.ContentCaptureServerSession) $r4;

        $r6 = virtualinvoke $r5.<com.android.server.contentcapture.ContentCaptureServerSession: java.lang.String toShortString()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected android.content.pm.ServiceInfo newServiceInfoLocked(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        android.service.contentcapture.ContentCaptureServiceInfo $r1;
        android.content.Context $r2;
        boolean $z0;
        int $i0;
        android.content.pm.ServiceInfo $r3;
        android.content.ComponentName r4;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r4 := @parameter0: android.content.ComponentName;

        $r1 = new android.service.contentcapture.ContentCaptureServiceInfo;

        $r2 = virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.content.Context getContext()>();

        $z0 = virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: boolean isTemporaryServiceSetLocked()>();

        $i0 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: int mUserId>;

        specialinvoke $r1.<android.service.contentcapture.ContentCaptureServiceInfo: void <init>(android.content.Context,android.content.ComponentName,boolean,int)>($r2, r4, $z0, $i0);

        r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.service.contentcapture.ContentCaptureServiceInfo mInfo> = $r1;

        $r3 = virtualinvoke $r1.<android.service.contentcapture.ContentCaptureServiceInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        return $r3;
    }

    void onActivityEventLocked(android.content.ComponentName, int)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        int i0;
        java.lang.String r1, $r11, $r14;
        com.android.server.contentcapture.RemoteContentCaptureService $r3, $r7;
        android.service.contentcapture.ActivityEvent $r4;
        com.android.server.infra.AbstractMasterSystemService $r5, $r12;
        com.android.server.contentcapture.ContentCaptureManagerService $r6, $r13;
        boolean $z0, $z1;
        java.lang.StringBuilder $r8;
        android.content.ComponentName r15;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r15 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        if $r3 != null goto label2;

        $r12 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r13 = (com.android.server.contentcapture.ContentCaptureManagerService) $r12;

        $z1 = $r13.<com.android.server.contentcapture.ContentCaptureManagerService: boolean debug>;

        if $z1 == 0 goto label1;

        $r14 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String mTag>;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r14, "onActivityEvent(): no remote service");

     label1:
        return;

     label2:
        $r4 = new android.service.contentcapture.ActivityEvent;

        specialinvoke $r4.<android.service.contentcapture.ActivityEvent: void <init>(android.content.ComponentName,int)>(r15, i0);

        $r5 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r6 = (com.android.server.contentcapture.ContentCaptureManagerService) $r5;

        $z0 = $r6.<com.android.server.contentcapture.ContentCaptureManagerService: boolean verbose>;

        if $z0 == 0 goto label3;

        r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String mTag>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onActivityEvent(): ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r11);

     label3:
        $r7 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        virtualinvoke $r7.<com.android.server.contentcapture.RemoteContentCaptureService: void onActivityLifecycleEvent(android.service.contentcapture.ActivityEvent)>($r4);

        return;
    }

    void onConnected()
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        java.lang.Object r1;
        boolean $z0;
        com.android.server.contentcapture.RemoteContentCaptureService $r3;
        java.lang.String $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: boolean mZombie>;

        if $z0 == 0 goto label4;

        $r3 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        if $r3 != null goto label3;

        $r4 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r4, "Cannot ressurect sessions because remote service is null");

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<com.android.server.contentcapture.ContentCapturePerUserService: boolean mZombie> = 0;

        specialinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: void resurrectSessionsLocked()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void onDataSharedLocked(android.view.contentcapture.DataShareRequest, android.service.contentcapture.IDataShareCallback$Stub)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        android.view.contentcapture.DataShareRequest r1;
        android.service.contentcapture.IDataShareCallback$Stub r2;
        boolean $z0;
        java.lang.String $r3;
        com.android.server.contentcapture.RemoteContentCaptureService $r4;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r1 := @parameter0: android.view.contentcapture.DataShareRequest;

        r2 := @parameter1: android.service.contentcapture.IDataShareCallback$Stub;

        $z0 = virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: boolean isEnabledLocked()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<android.view.contentcapture.DataShareRequest: java.lang.String getPackageName()>();

        specialinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: void assertCallerLocked(java.lang.String)>($r3);

        $r4 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        virtualinvoke $r4.<com.android.server.contentcapture.RemoteContentCaptureService: void onDataShareRequest(android.view.contentcapture.DataShareRequest,android.service.contentcapture.IDataShareCallback$Stub)>(r1, r2);

        return;
    }

    void onPackageUpdatedLocked()
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        $z0 = virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: boolean isEnabledLocked()>();

        $z1 = $z0 ^ 1;

        specialinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: void updateRemoteServiceLocked(boolean)>($z1);

        specialinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: void resurrectSessionsLocked()>();

        return;
    }

    void onPackageUpdatingLocked()
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        int i0, i2;
        java.lang.String r1, $r13;
        android.util.SparseArray $r3, $r6;
        com.android.server.infra.AbstractMasterSystemService $r4;
        com.android.server.contentcapture.ContentCaptureManagerService $r5;
        boolean $z0;
        java.lang.Object $r7;
        com.android.server.contentcapture.ContentCaptureServerSession $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        $r3 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        $r4 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r5 = (com.android.server.contentcapture.ContentCaptureManagerService) $r4;

        $z0 = $r5.<com.android.server.contentcapture.ContentCaptureManagerService: boolean debug>;

        if $z0 == 0 goto label1;

        r1 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pausing ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sessions while package is updating");

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r1, $r13);

     label1:
        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $r6 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r8 = (com.android.server.contentcapture.ContentCaptureServerSession) $r7;

        virtualinvoke $r8.<com.android.server.contentcapture.ContentCaptureServerSession: void pauseLocked()>();

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    public void onServiceDied(com.android.server.contentcapture.RemoteContentCaptureService)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2;
        java.lang.Throwable $r6;
        com.android.server.contentcapture.RemoteContentCaptureService r7;
        java.lang.Object r9;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r7 := @parameter0: com.android.server.contentcapture.RemoteContentCaptureService;

        r1 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remote service died: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r1, $r5);

        r9 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: java.lang.Object mLock>;

        entermonitor r9;

     label1:
        r0.<com.android.server.contentcapture.ContentCapturePerUserService: boolean mZombie> = 1;

        exitmonitor r9;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r9;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public volatile void onServiceDied(java.lang.Object)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        java.lang.Object r1;
        com.android.server.contentcapture.RemoteContentCaptureService $r2;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.server.contentcapture.RemoteContentCaptureService) r1;

        virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: void onServiceDied(com.android.server.contentcapture.RemoteContentCaptureService)>($r2);

        return;
    }

    public void removeDataLocked(android.view.contentcapture.DataRemovalRequest)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        android.view.contentcapture.DataRemovalRequest r1;
        boolean $z0;
        java.lang.String $r2;
        com.android.server.contentcapture.RemoteContentCaptureService $r3;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r1 := @parameter0: android.view.contentcapture.DataRemovalRequest;

        $z0 = virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: boolean isEnabledLocked()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r1.<android.view.contentcapture.DataRemovalRequest: java.lang.String getPackageName()>();

        specialinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: void assertCallerLocked(java.lang.String)>($r2);

        $r3 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        virtualinvoke $r3.<com.android.server.contentcapture.RemoteContentCaptureService: void onDataRemovalRequest(android.view.contentcapture.DataRemovalRequest)>(r1);

        return;
    }

    public void removeSessionLocked(int)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        int i0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>(i0);

        return;
    }

    public boolean sendActivityAssistDataLocked(android.os.IBinder, android.os.Bundle)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        android.os.IBinder r1;
        int i0;
        android.service.contentcapture.SnapshotData $r2;
        android.os.Bundle $r3, r16;
        android.os.Parcelable $r4, $r6;
        android.app.assist.AssistStructure $r5;
        android.app.assist.AssistContent $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r12, r19;
        android.util.SparseArray $r13;
        java.lang.Object $r14;
        com.android.server.contentcapture.ContentCaptureServerSession $r15;
        com.android.server.contentcapture.RemoteContentCaptureService r18;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r1 := @parameter0: android.os.IBinder;

        r16 := @parameter1: android.os.Bundle;

        i0 = specialinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: int getSessionId(android.os.IBinder)>(r1);

        $r2 = new android.service.contentcapture.SnapshotData;

        $r3 = virtualinvoke r16.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("data");

        $r4 = virtualinvoke r16.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("structure");

        $r5 = (android.app.assist.AssistStructure) $r4;

        $r6 = virtualinvoke r16.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("content");

        $r7 = (android.app.assist.AssistContent) $r6;

        specialinvoke $r2.<android.service.contentcapture.SnapshotData: void <init>(android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent)>($r3, $r5, $r7);

        if i0 == 0 goto label1;

        $r13 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $r14 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r15 = (com.android.server.contentcapture.ContentCaptureServerSession) $r14;

        virtualinvoke $r15.<com.android.server.contentcapture.ContentCaptureServerSession: void sendActivitySnapshotLocked(android.service.contentcapture.SnapshotData)>($r2);

        return 1;

     label1:
        r18 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        if r18 == null goto label2;

        virtualinvoke r18.<com.android.server.contentcapture.RemoteContentCaptureService: void onActivitySnapshotRequest(int,android.service.contentcapture.SnapshotData)>(0, $r2);

        r19 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notified activity assist data for activity: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without a session Id");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r19, $r12);

        return 1;

     label2:
        return 0;
    }

    public void startSessionLocked(android.os.IBinder, android.content.pm.ActivityPresentationInfo, int, int, int, com.android.internal.os.IResultReceiver)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        int i0, i1, i2, i3, i4, $i5, $i11, $i12;
        android.content.ComponentName r1, r83;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;
        com.android.server.infra.AbstractMasterSystemService $r2, $r10, $r36, $r43, $r72, $r75, $r84;
        com.android.server.contentcapture.ContentCaptureManagerService $r3, $r11, $r37, $r44, $r73, $r76, $r85;
        com.android.server.contentcapture.ContentCaptureManagerService$GlobalContentCaptureOptions $r4, $r77;
        android.util.SparseArray $r5, $r12;
        java.lang.Object $r6, $r9;
        com.android.server.contentcapture.RemoteContentCaptureService $r7, r97;
        com.android.server.contentcapture.ContentCaptureServerSession $r8, r94;
        java.lang.StringBuilder $r13, $r20, $r27, $r38, $r45, $r50;
        java.lang.String $r15, $r19, $r26, $r35, $r42, $r49, $r56, $r63, $r78, $r79, r88, r89, r90, r92, r95, r98, r101;
        android.os.IBinder $r33, r80;
        android.util.LocalLog $r74, $r86;
        android.content.pm.ActivityPresentationInfo r81;
        com.android.internal.os.IResultReceiver r82;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        r80 := @parameter0: android.os.IBinder;

        r81 := @parameter1: android.content.pm.ActivityPresentationInfo;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r82 := @parameter5: com.android.internal.os.IResultReceiver;

        if r81 != null goto label01;

        $r79 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r79, "basic activity info is null");

        staticinvoke <android.service.contentcapture.ContentCaptureService: void setClientState(com.android.internal.os.IResultReceiver,int,android.os.IBinder)>(r82, 260, null);

        return;

     label01:
        i3 = r81.<android.content.pm.ActivityPresentationInfo: int taskId>;

        i4 = r81.<android.content.pm.ActivityPresentationInfo: int displayId>;

        r1 = r81.<android.content.pm.ActivityPresentationInfo: android.content.ComponentName componentName>;

        $r2 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r3 = (com.android.server.contentcapture.ContentCaptureManagerService) $r2;

        $r4 = $r3.<com.android.server.contentcapture.ContentCaptureManagerService: com.android.server.contentcapture.ContentCaptureManagerService$GlobalContentCaptureOptions mGlobalContentCaptureOptions>;

        $i5 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: int mUserId>;

        $z1 = virtualinvoke $r4.<com.android.server.contentcapture.ContentCaptureManagerService$GlobalContentCaptureOptions: boolean isWhitelisted(int,android.content.ComponentName)>($i5, r1);

        if $z1 != 0 goto label03;

        $r75 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r76 = (com.android.server.contentcapture.ContentCaptureManagerService) $r75;

        $r77 = $r76.<com.android.server.contentcapture.ContentCaptureManagerService: com.android.server.contentcapture.ContentCaptureManagerService$GlobalContentCaptureOptions mGlobalContentCaptureOptions>;

        $i12 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: int mUserId>;

        $r78 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z5 = virtualinvoke $r77.<com.android.server.contentcapture.ContentCaptureManagerService$GlobalContentCaptureOptions: boolean isWhitelisted(int,java.lang.String)>($i12, $r78);

        if $z5 == 0 goto label02;

        goto label03;

     label02:
        z6 = 0;

        goto label04;

     label03:
        z6 = 1;

     label04:
        r83 = virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.content.ComponentName getServiceComponentName()>();

        z0 = virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: boolean isEnabledLocked()>();

        $r84 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r85 = (com.android.server.contentcapture.ContentCaptureManagerService) $r84;

        $r86 = $r85.<com.android.server.contentcapture.ContentCaptureManagerService: android.util.LocalLog mRequestsHistory>;

        if $r86 == null goto label07;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id=");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" a=");

        $r56 = staticinvoke <android.content.ComponentName: java.lang.String flattenToShortString(android.content.ComponentName)>(r1);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t=");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" d=");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" s=");

        $r63 = staticinvoke <android.content.ComponentName: java.lang.String flattenToShortString(android.content.ComponentName)>(r83);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u=");

        $i11 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: int mUserId>;

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" f=");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        if z0 == 0 goto label05;

        r88 = "";

        goto label06;

     label05:
        r88 = " (disabled)";

     label06:
        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r88);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" w=");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z6);

        r89 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        $r72 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r73 = (com.android.server.contentcapture.ContentCaptureManagerService) $r72;

        $r74 = $r73.<com.android.server.contentcapture.ContentCaptureManagerService: android.util.LocalLog mRequestsHistory>;

        virtualinvoke $r74.<android.util.LocalLog: void log(java.lang.String)>(r89);

        goto label07;

     label07:
        if z0 != 0 goto label08;

        staticinvoke <android.service.contentcapture.ContentCaptureService: void setClientState(com.android.internal.os.IResultReceiver,int,android.os.IBinder)>(r82, 20, null);

        staticinvoke <com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeSessionEvent(int,int,int,android.content.ComponentName,android.content.ComponentName,boolean)>(i0, 3, 20, r83, r1, 0);

        return;

     label08:
        if r83 != null goto label10;

        $r43 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r44 = (com.android.server.contentcapture.ContentCaptureManagerService) $r43;

        $z4 = $r44.<com.android.server.contentcapture.ContentCaptureManagerService: boolean debug>;

        if $z4 == 0 goto label09;

        r90 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startSession(");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r80);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): hold your horses");

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r90, $r49);

     label09:
        return;

     label10:
        if z6 != 0 goto label12;

        $r36 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r37 = (com.android.server.contentcapture.ContentCaptureManagerService) $r36;

        $z3 = $r37.<com.android.server.contentcapture.ContentCaptureManagerService: boolean debug>;

        if $z3 == 0 goto label11;

        r92 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startSession(");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): package or component not whitelisted");

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r92, $r42);

     label11:
        staticinvoke <android.service.contentcapture.ContentCaptureService: void setClientState(com.android.internal.os.IResultReceiver,int,android.os.IBinder)>(r82, 516, null);

        staticinvoke <com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeSessionEvent(int,int,int,android.content.ComponentName,android.content.ComponentName,boolean)>(i0, 3, 516, r83, r1, 0);

        return;

     label12:
        $r5 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r94 = (com.android.server.contentcapture.ContentCaptureServerSession) $r6;

        if r94 == null goto label13;

        r95 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startSession(id=");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r94);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", token=");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r80);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ignoring because it already exists for ");

        $r33 = r94.<com.android.server.contentcapture.ContentCaptureServerSession: android.os.IBinder mActivityToken>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r35 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r95, $r35);

        staticinvoke <android.service.contentcapture.ContentCaptureService: void setClientState(com.android.internal.os.IResultReceiver,int,android.os.IBinder)>(r82, 12, null);

        staticinvoke <com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeSessionEvent(int,int,int,android.content.ComponentName,android.content.ComponentName,boolean)>(i0, 3, 12, r83, r1, 0);

        return;

     label13:
        $r7 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        if $r7 != null goto label14;

        specialinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: void updateRemoteServiceLocked(boolean)>(0);

     label14:
        r97 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        if r97 != null goto label15;

        r98 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startSession(id=");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r94);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", token=");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r80);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ignoring because service is not set");

        $r26 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r98, $r26);

        staticinvoke <android.service.contentcapture.ContentCaptureService: void setClientState(com.android.internal.os.IResultReceiver,int,android.os.IBinder)>(r82, 20, null);

        staticinvoke <com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeSessionEvent(int,int,int,android.content.ComponentName,android.content.ComponentName,boolean)>(i0, 3, 20, r83, r1, 0);

        return;

     label15:
        virtualinvoke r97.<com.android.server.contentcapture.RemoteContentCaptureService: void ensureBoundLocked()>();

        $r8 = new com.android.server.contentcapture.ContentCaptureServerSession;

        $r9 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: java.lang.Object mLock>;

        specialinvoke $r8.<com.android.server.contentcapture.ContentCaptureServerSession: void <init>(java.lang.Object,android.os.IBinder,com.android.server.contentcapture.ContentCapturePerUserService,android.content.ComponentName,com.android.internal.os.IResultReceiver,int,int,int,int,int)>($r9, r80, r0, r1, r82, i3, i4, i0, i1, i2);

        $r10 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r11 = (com.android.server.contentcapture.ContentCaptureManagerService) $r10;

        $z2 = $r11.<com.android.server.contentcapture.ContentCaptureManagerService: boolean verbose>;

        if $z2 == 0 goto label16;

        r101 = <com.android.server.contentcapture.ContentCapturePerUserService: java.lang.String TAG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startSession(): new session for ");

        $r15 = staticinvoke <android.content.ComponentName: java.lang.String flattenToShortString(android.content.ComponentName)>(r1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and id ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r101, $r19);

     label16:
        $r12 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        virtualinvoke $r12.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r8);

        virtualinvoke $r8.<com.android.server.contentcapture.ContentCaptureServerSession: void notifySessionStartedLocked(com.android.internal.os.IResultReceiver)>(r82);

        return;
    }

    protected boolean updateLocked(boolean)
    {
        com.android.server.contentcapture.ContentCapturePerUserService r0;
        boolean z0, z1, $z2;
        android.util.SparseArray $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        com.android.server.contentcapture.ContentCaptureServerSession $r4;

        r0 := @this: com.android.server.contentcapture.ContentCapturePerUserService;

        z0 := @parameter0: boolean;

        z1 = specialinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: boolean updateLocked(boolean)>(z0);

        if z1 == 0 goto label2;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = r0.<com.android.server.contentcapture.ContentCapturePerUserService: android.util.SparseArray mSessions>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r4 = (com.android.server.contentcapture.ContentCaptureServerSession) $r3;

        $z2 = z0 ^ 1;

        virtualinvoke $r4.<com.android.server.contentcapture.ContentCaptureServerSession: void setContentCaptureEnabledLocked(boolean)>($z2);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: void destroyLocked()>();

        specialinvoke r0.<com.android.server.contentcapture.ContentCapturePerUserService: void updateRemoteServiceLocked(boolean)>(z0);

        return z1;
    }
}
