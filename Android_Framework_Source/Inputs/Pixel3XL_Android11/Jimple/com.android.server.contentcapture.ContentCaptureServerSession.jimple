final class com.android.server.contentcapture.ContentCaptureServerSession extends java.lang.Object
{
    private static final java.lang.String TAG;
    public final android.content.ComponentName appComponentName;
    final android.os.IBinder mActivityToken;
    private final android.view.contentcapture.ContentCaptureContext mContentCaptureContext;
    private final int mId;
    private final java.lang.Object mLock;
    private final com.android.server.contentcapture.ContentCapturePerUserService mService;
    private final com.android.internal.os.IResultReceiver mSessionStateReceiver;
    private final int mUid;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Lcom/android/server/contentcapture/ContentCaptureServerSession;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.contentcapture.ContentCaptureServerSession: java.lang.String TAG> = $r1;

        return;
    }

    void <init>(java.lang.Object, android.os.IBinder, com.android.server.contentcapture.ContentCapturePerUserService, android.content.ComponentName, com.android.internal.os.IResultReceiver, int, int, int, int, int)
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;
        android.os.IBinder r1, r12;
        android.content.ComponentName r2;
        com.android.internal.os.IResultReceiver r3;
        int i0, i1, i2, i3, i4;
        android.view.contentcapture.ContentCaptureContext $r4;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9, r15;
        java.lang.Object r10;
        com.android.server.contentcapture.ContentCapturePerUserService r11;
        boolean z0;
        com.android.server.contentcapture._$$Lambda$ContentCaptureServerSession$PKv4_aNj3xMYOeCpzUQZDD2iG0o r13;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        r10 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.os.IBinder;

        r11 := @parameter2: com.android.server.contentcapture.ContentCapturePerUserService;

        r2 := @parameter3: android.content.ComponentName;

        r3 := @parameter4: com.android.internal.os.IResultReceiver;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        i3 := @parameter8: int;

        i4 := @parameter9: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z0);

        r0.<com.android.server.contentcapture.ContentCaptureServerSession: java.lang.Object mLock> = r10;

        r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.os.IBinder mActivityToken> = r1;

        r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.content.ComponentName appComponentName> = r2;

        r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService> = r11;

        r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mId> = i2;

        r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mUid> = i3;

        $r4 = new android.view.contentcapture.ContentCaptureContext;

        specialinvoke $r4.<android.view.contentcapture.ContentCaptureContext: void <init>(android.view.contentcapture.ContentCaptureContext,android.content.ComponentName,int,int,int)>(null, r2, i0, i1, i4);

        r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.view.contentcapture.ContentCaptureContext mContentCaptureContext> = $r4;

        r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.internal.os.IResultReceiver mSessionStateReceiver> = r3;

     label3:
        r12 = interfaceinvoke r3.<com.android.internal.os.IResultReceiver: android.os.IBinder asBinder()>();

        r13 = new com.android.server.contentcapture._$$Lambda$ContentCaptureServerSession$PKv4_aNj3xMYOeCpzUQZDD2iG0o;

        specialinvoke r13.<com.android.server.contentcapture._$$Lambda$ContentCaptureServerSession$PKv4_aNj3xMYOeCpzUQZDD2iG0o: void <init>(com.android.server.contentcapture.ContentCaptureServerSession)>(r0);

        interfaceinvoke r12.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r13, 0);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        r15 = <com.android.server.contentcapture.ContentCaptureServerSession: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not register DeathRecipient for ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r15, $r9);

     label6:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    private void onClientDeath()
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;
        com.android.server.contentcapture.ContentCapturePerUserService $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        android.os.IBinder $r4;
        int $i0;
        java.lang.String $r8, r10;
        java.lang.Throwable $r9;
        java.lang.Object r12;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        $r1 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        $z0 = virtualinvoke $r1.<com.android.server.contentcapture.ContentCapturePerUserService: boolean isVerbose()>();

        if $z0 == 0 goto label1;

        r10 = <com.android.server.contentcapture.ContentCaptureServerSession: java.lang.String TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onClientDeath(");

        $r4 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.os.IBinder mActivityToken>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): removing session ");

        $i0 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r10, $r8);

     label1:
        r12 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: java.lang.Object mLock>;

        entermonitor r12;

     label2:
        virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureServerSession: void removeSelfLocked(boolean)>(1);

        exitmonitor r12;

     label3:
        return;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r12;

     label6:
        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void destroyLocked(boolean)
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;
        boolean z0, $z1;
        java.lang.String r1, $r8, $r13;
        com.android.server.contentcapture.ContentCapturePerUserService $r3, $r4, $r6;
        com.android.server.contentcapture.RemoteContentCaptureService $r5, $r7;
        int $i0;
        java.lang.StringBuilder $r9;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        $z1 = virtualinvoke $r3.<com.android.server.contentcapture.ContentCapturePerUserService: boolean isVerbose()>();

        if $z1 == 0 goto label1;

        r1 = <com.android.server.contentcapture.ContentCaptureServerSession: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("destroy(notifyRemoteService=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r13);

     label1:
        if z0 == 0 goto label3;

        $r4 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        $r5 = $r4.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        if $r5 != null goto label2;

        $r8 = <com.android.server.contentcapture.ContentCaptureServerSession: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r8, "destroyLocked(): no remote service");

        return;

     label2:
        $r6 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        $r7 = $r6.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        $i0 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mId>;

        virtualinvoke $r7.<com.android.server.contentcapture.RemoteContentCaptureService: void onSessionFinished(int)>($i0);

     label3:
        return;
    }

    public void dumpLocked(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;
        java.lang.String r1;
        java.io.PrintWriter r2;
        int $i0, $i1;
        android.view.contentcapture.ContentCaptureContext $r3;
        android.os.IBinder $r4;
        android.content.ComponentName $r5;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("id: ");

        $i0 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mId>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("uid: ");

        $i1 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mUid>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("context: ");

        $r3 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.view.contentcapture.ContentCaptureContext mContentCaptureContext>;

        virtualinvoke $r3.<android.view.contentcapture.ContentCaptureContext: void dump(java.io.PrintWriter)>(r2);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("activity token: ");

        $r4 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.os.IBinder mActivityToken>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("app component: ");

        $r5 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.content.ComponentName appComponentName>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("has autofill callback: ");

        return;
    }

    boolean isActivitySession(android.os.IBinder)
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;
        android.os.IBinder r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.os.IBinder mActivityToken>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public void lambda$new$0$ContentCaptureServerSession()
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        specialinvoke r0.<com.android.server.contentcapture.ContentCaptureServerSession: void onClientDeath()>();

        return;
    }

    public void notifySessionStartedLocked(com.android.internal.os.IResultReceiver)
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;
        com.android.internal.os.IResultReceiver r1;
        com.android.server.contentcapture.ContentCapturePerUserService $r2, $r4;
        com.android.server.contentcapture.RemoteContentCaptureService $r3, $r6;
        int $i0, $i1;
        android.view.contentcapture.ContentCaptureContext $r5;
        java.lang.String $r7;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        r1 := @parameter0: com.android.internal.os.IResultReceiver;

        $r2 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        $r3 = $r2.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        if $r3 != null goto label1;

        $r7 = <com.android.server.contentcapture.ContentCaptureServerSession: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r7, "notifySessionStartedLocked(): no remote service");

        return;

     label1:
        $r4 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        $r6 = $r4.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        $r5 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.view.contentcapture.ContentCaptureContext mContentCaptureContext>;

        $i1 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mId>;

        $i0 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mUid>;

        virtualinvoke $r6.<com.android.server.contentcapture.RemoteContentCaptureService: void onSessionStarted(android.view.contentcapture.ContentCaptureContext,int,int,com.android.internal.os.IResultReceiver,int)>($r5, $i1, $i0, r1, 2);

        return;
    }

    public void pauseLocked()
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;
        java.lang.String r1, $r9;
        com.android.server.contentcapture.ContentCapturePerUserService $r3;
        boolean $z0;
        com.android.internal.os.IResultReceiver $r4;
        java.lang.StringBuilder $r5;
        android.os.IBinder $r7;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        $r3 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        $z0 = virtualinvoke $r3.<com.android.server.contentcapture.ContentCapturePerUserService: boolean isVerbose()>();

        if $z0 == 0 goto label1;

        r1 = <com.android.server.contentcapture.ContentCaptureServerSession: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pausing ");

        $r7 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.os.IBinder mActivityToken>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r9);

     label1:
        $r4 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.internal.os.IResultReceiver mSessionStateReceiver>;

        staticinvoke <android.service.contentcapture.ContentCaptureService: void setClientState(com.android.internal.os.IResultReceiver,int,android.os.IBinder)>($r4, 2052, null);

        return;
    }

    public void removeSelfLocked(boolean)
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;
        boolean z0;
        int $i0, $i1;
        com.android.server.contentcapture.ContentCapturePerUserService $r2, $r4;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        z0 := @parameter0: boolean;

     label1:
        virtualinvoke r0.<com.android.server.contentcapture.ContentCaptureServerSession: void destroyLocked(boolean)>(z0);

     label2:
        $r2 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        $i0 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mId>;

        virtualinvoke $r2.<com.android.server.contentcapture.ContentCapturePerUserService: void removeSessionLocked(int)>($i0);

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        $i1 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mId>;

        virtualinvoke $r4.<com.android.server.contentcapture.ContentCapturePerUserService: void removeSessionLocked(int)>($i1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void resurrectLocked()
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;
        com.android.server.contentcapture.RemoteContentCaptureService r1;
        java.lang.String r2, $r15, $r16;
        com.android.server.contentcapture.ContentCapturePerUserService $r4, $r5;
        boolean $z0;
        android.view.contentcapture.ContentCaptureContext $r6, $r7;
        com.android.internal.os.IResultReceiver $r8;
        int $i0, $i1;
        java.lang.StringBuilder $r9;
        android.os.IBinder $r11;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        $r4 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        r1 = $r4.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        if r1 != null goto label1;

        $r16 = <com.android.server.contentcapture.ContentCaptureServerSession: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r16, "destroyLocked(: no remote service");

        return;

     label1:
        $r5 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        $z0 = virtualinvoke $r5.<com.android.server.contentcapture.ContentCapturePerUserService: boolean isVerbose()>();

        if $z0 == 0 goto label2;

        r2 = <com.android.server.contentcapture.ContentCaptureServerSession: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resurrecting ");

        $r11 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.os.IBinder mActivityToken>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r2, $r15);

     label2:
        $r6 = new android.view.contentcapture.ContentCaptureContext;

        $r7 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.view.contentcapture.ContentCaptureContext mContentCaptureContext>;

        specialinvoke $r6.<android.view.contentcapture.ContentCaptureContext: void <init>(android.view.contentcapture.ContentCaptureContext,int)>($r7, 4);

        $i1 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mId>;

        $i0 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mUid>;

        $r8 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.internal.os.IResultReceiver mSessionStateReceiver>;

        virtualinvoke r1.<com.android.server.contentcapture.RemoteContentCaptureService: void onSessionStarted(android.view.contentcapture.ContentCaptureContext,int,int,com.android.internal.os.IResultReceiver,int)>($r6, $i1, $i0, $r8, 4098);

        return;
    }

    public void sendActivitySnapshotLocked(android.service.contentcapture.SnapshotData)
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;
        android.service.contentcapture.SnapshotData r1;
        android.util.LocalLog r2;
        com.android.server.contentcapture.ContentCapturePerUserService $r4, $r7, $r9;
        com.android.server.infra.AbstractMasterSystemService $r5;
        com.android.server.contentcapture.ContentCaptureManagerService $r6;
        com.android.server.contentcapture.RemoteContentCaptureService $r8, $r10;
        int $i0, $i2;
        java.lang.String $r11, $r15;
        java.lang.StringBuilder $r12;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        r1 := @parameter0: android.service.contentcapture.SnapshotData;

        $r4 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        $r5 = virtualinvoke $r4.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.infra.AbstractMasterSystemService getMaster()>();

        $r6 = (com.android.server.contentcapture.ContentCaptureManagerService) $r5;

        r2 = $r6.<com.android.server.contentcapture.ContentCaptureManagerService: android.util.LocalLog mRequestsHistory>;

        if r2 == null goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("snapshot: id=");

        $i2 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mId>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<android.util.LocalLog: void log(java.lang.String)>($r15);

     label1:
        $r7 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        $r8 = $r7.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        if $r8 != null goto label2;

        $r11 = <com.android.server.contentcapture.ContentCaptureServerSession: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r11, "sendActivitySnapshotLocked(): no remote service");

        return;

     label2:
        $r9 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.server.contentcapture.ContentCapturePerUserService mService>;

        $r10 = $r9.<com.android.server.contentcapture.ContentCapturePerUserService: com.android.server.contentcapture.RemoteContentCaptureService mRemoteService>;

        $i0 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mId>;

        virtualinvoke $r10.<com.android.server.contentcapture.RemoteContentCaptureService: void onActivitySnapshotRequest(int,android.service.contentcapture.SnapshotData)>($i0, r1);

        return;
    }

    public void setContentCaptureEnabledLocked(boolean)
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;
        boolean z0;
        java.lang.String r1, $r6;
        android.os.RemoteException $r2;
        java.lang.StringBuilder $r3;
        android.os.Bundle r7;
        byte b1;
        com.android.internal.os.IResultReceiver r8;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        z0 := @parameter0: boolean;

     label1:
        r7 = new android.os.Bundle;

        specialinvoke r7.<android.os.Bundle: void <init>()>();

     label2:
        b1 = 1;

     label3:
        virtualinvoke r7.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("enabled", 1);

        r8 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: com.android.internal.os.IResultReceiver mSessionStateReceiver>;

     label4:
        if z0 == 0 goto label5;

        goto label6;

     label5:
        b1 = 2;

     label6:
        interfaceinvoke r8.<com.android.internal.os.IResultReceiver: void send(int,android.os.Bundle)>(b1, r7);

     label7:
        goto label9;

     label8:
        $r2 := @caughtexception;

        r1 = <com.android.server.contentcapture.ContentCaptureServerSession: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error async reporting result to client: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r1, $r6);

     label9:
        return;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    java.lang.String toShortString()
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;
        java.lang.StringBuilder $r2;
        int $i0;
        android.os.IBinder $r5;
        java.lang.String $r7;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.os.IBinder mActivityToken>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String toString()
    {
        com.android.server.contentcapture.ContentCaptureServerSession r0;
        java.lang.StringBuilder $r2;
        int $i0;
        android.os.IBinder $r6;
        java.lang.String $r9;

        r0 := @this: com.android.server.contentcapture.ContentCaptureServerSession;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ContentCaptureSession[id=");

        $i0 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: int mId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", act=");

        $r6 = r0.<com.android.server.contentcapture.ContentCaptureServerSession: android.os.IBinder mActivityToken>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
