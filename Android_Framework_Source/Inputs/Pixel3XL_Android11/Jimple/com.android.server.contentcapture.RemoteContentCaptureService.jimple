final class com.android.server.contentcapture.RemoteContentCaptureService extends com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService
{
    private final int mIdleUnbindTimeoutMs;
    private final com.android.server.contentcapture.ContentCapturePerUserService mPerUserService;
    private final android.os.IBinder mServerCallback;

    void <init>(android.content.Context, java.lang.String, android.content.ComponentName, android.service.contentcapture.IContentCaptureServiceCallback, int, com.android.server.contentcapture.ContentCapturePerUserService, boolean, boolean, int)
    {
        com.android.server.contentcapture.RemoteContentCaptureService r0;
        android.content.Context r1;
        java.lang.String r2;
        android.content.ComponentName r3;
        android.service.contentcapture.IContentCaptureServiceCallback r4;
        int i0, i1, $i2, i3;
        com.android.server.contentcapture.ContentCapturePerUserService r5;
        boolean z0, z1;
        android.os.Handler r6;
        android.os.IBinder $r7;

        r0 := @this: com.android.server.contentcapture.RemoteContentCaptureService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        r4 := @parameter3: android.service.contentcapture.IContentCaptureServiceCallback;

        i0 := @parameter4: int;

        r5 := @parameter5: com.android.server.contentcapture.ContentCapturePerUserService;

        z0 := @parameter6: boolean;

        z1 := @parameter7: boolean;

        i1 := @parameter8: int;

        r6 = virtualinvoke r1.<android.content.Context: android.os.Handler getMainThreadHandler()>();

        if z0 == 0 goto label1;

        i3 = 4194304;

        goto label2;

     label1:
        i3 = 0;

     label2:
        $i2 = i3 | 4096;

        specialinvoke r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,int,com.android.internal.infra.AbstractRemoteService$VultureCallback,android.os.Handler,int,boolean,int)>(r1, r2, r3, i0, r5, r6, $i2, z1, 2);

        r0.<com.android.server.contentcapture.RemoteContentCaptureService: com.android.server.contentcapture.ContentCapturePerUserService mPerUserService> = r5;

        $r7 = interfaceinvoke r4.<android.service.contentcapture.IContentCaptureServiceCallback: android.os.IBinder asBinder()>();

        r0.<com.android.server.contentcapture.RemoteContentCaptureService: android.os.IBinder mServerCallback> = $r7;

        r0.<com.android.server.contentcapture.RemoteContentCaptureService: int mIdleUnbindTimeoutMs> = i1;

        virtualinvoke r0.<com.android.server.contentcapture.RemoteContentCaptureService: void ensureBoundLocked()>();

        return;
    }

    static void lambda$onActivityLifecycleEvent$5(android.service.contentcapture.ActivityEvent, android.service.contentcapture.IContentCaptureService) throws android.os.RemoteException
    {
        android.service.contentcapture.ActivityEvent r0;
        android.service.contentcapture.IContentCaptureService r1;

        r0 := @parameter0: android.service.contentcapture.ActivityEvent;

        r1 := @parameter1: android.service.contentcapture.IContentCaptureService;

        interfaceinvoke r1.<android.service.contentcapture.IContentCaptureService: void onActivityEvent(android.service.contentcapture.ActivityEvent)>(r0);

        return;
    }

    static void lambda$onActivitySnapshotRequest$2(int, android.service.contentcapture.SnapshotData, android.service.contentcapture.IContentCaptureService) throws android.os.RemoteException
    {
        int i0;
        android.service.contentcapture.SnapshotData r0;
        android.service.contentcapture.IContentCaptureService r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.service.contentcapture.SnapshotData;

        r1 := @parameter2: android.service.contentcapture.IContentCaptureService;

        interfaceinvoke r1.<android.service.contentcapture.IContentCaptureService: void onActivitySnapshot(int,android.service.contentcapture.SnapshotData)>(i0, r0);

        return;
    }

    static void lambda$onDataRemovalRequest$3(android.view.contentcapture.DataRemovalRequest, android.service.contentcapture.IContentCaptureService) throws android.os.RemoteException
    {
        android.view.contentcapture.DataRemovalRequest r0;
        android.service.contentcapture.IContentCaptureService r1;

        r0 := @parameter0: android.view.contentcapture.DataRemovalRequest;

        r1 := @parameter1: android.service.contentcapture.IContentCaptureService;

        interfaceinvoke r1.<android.service.contentcapture.IContentCaptureService: void onDataRemovalRequest(android.view.contentcapture.DataRemovalRequest)>(r0);

        return;
    }

    static void lambda$onDataShareRequest$4(android.view.contentcapture.DataShareRequest, android.service.contentcapture.IDataShareCallback$Stub, android.service.contentcapture.IContentCaptureService) throws android.os.RemoteException
    {
        android.view.contentcapture.DataShareRequest r0;
        android.service.contentcapture.IDataShareCallback$Stub r1;
        android.service.contentcapture.IContentCaptureService r2;

        r0 := @parameter0: android.view.contentcapture.DataShareRequest;

        r1 := @parameter1: android.service.contentcapture.IDataShareCallback$Stub;

        r2 := @parameter2: android.service.contentcapture.IContentCaptureService;

        interfaceinvoke r2.<android.service.contentcapture.IContentCaptureService: void onDataShared(android.view.contentcapture.DataShareRequest,android.service.contentcapture.IDataShareCallback)>(r0, r1);

        return;
    }

    static void lambda$onSessionFinished$1(int, android.service.contentcapture.IContentCaptureService) throws android.os.RemoteException
    {
        int i0;
        android.service.contentcapture.IContentCaptureService r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.service.contentcapture.IContentCaptureService;

        interfaceinvoke r0.<android.service.contentcapture.IContentCaptureService: void onSessionFinished(int)>(i0);

        return;
    }

    static void lambda$onSessionStarted$0(android.view.contentcapture.ContentCaptureContext, int, int, com.android.internal.os.IResultReceiver, int, android.service.contentcapture.IContentCaptureService) throws android.os.RemoteException
    {
        android.view.contentcapture.ContentCaptureContext r0;
        int i0, i1, i2;
        com.android.internal.os.IResultReceiver r1;
        android.service.contentcapture.IContentCaptureService r2;

        r0 := @parameter0: android.view.contentcapture.ContentCaptureContext;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: com.android.internal.os.IResultReceiver;

        i2 := @parameter4: int;

        r2 := @parameter5: android.service.contentcapture.IContentCaptureService;

        interfaceinvoke r2.<android.service.contentcapture.IContentCaptureService: void onSessionStarted(android.view.contentcapture.ContentCaptureContext,int,int,com.android.internal.os.IResultReceiver,int)>(r0, i0, i1, r1, i2);

        return;
    }

    public void ensureBoundLocked()
    {
        com.android.server.contentcapture.RemoteContentCaptureService r0;

        r0 := @this: com.android.server.contentcapture.RemoteContentCaptureService;

        virtualinvoke r0.<com.android.server.contentcapture.RemoteContentCaptureService: void scheduleBind()>();

        return;
    }

    protected volatile android.os.IInterface getServiceInterface(android.os.IBinder)
    {
        com.android.server.contentcapture.RemoteContentCaptureService r0;
        android.os.IBinder r1;
        android.service.contentcapture.IContentCaptureService $r2;

        r0 := @this: com.android.server.contentcapture.RemoteContentCaptureService;

        r1 := @parameter0: android.os.IBinder;

        $r2 = virtualinvoke r0.<com.android.server.contentcapture.RemoteContentCaptureService: android.service.contentcapture.IContentCaptureService getServiceInterface(android.os.IBinder)>(r1);

        return $r2;
    }

    protected android.service.contentcapture.IContentCaptureService getServiceInterface(android.os.IBinder)
    {
        com.android.server.contentcapture.RemoteContentCaptureService r0;
        android.os.IBinder r1;
        android.service.contentcapture.IContentCaptureService $r2;

        r0 := @this: com.android.server.contentcapture.RemoteContentCaptureService;

        r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService asInterface(android.os.IBinder)>(r1);

        return $r2;
    }

    protected long getTimeoutIdleBindMillis()
    {
        com.android.server.contentcapture.RemoteContentCaptureService r0;
        int $i0;
        long $l1;

        r0 := @this: com.android.server.contentcapture.RemoteContentCaptureService;

        $i0 = r0.<com.android.server.contentcapture.RemoteContentCaptureService: int mIdleUnbindTimeoutMs>;

        $l1 = (long) $i0;

        return $l1;
    }

    protected void handleOnConnectedStateChanged(boolean)
    {
        com.android.server.contentcapture.RemoteContentCaptureService r0;
        boolean z0, $z1, $z2;
        java.lang.String r1, $r19;
        android.os.IInterface $r3, $r6;
        android.service.contentcapture.IContentCaptureService $r4, $r8;
        android.content.ComponentName $r5, $r9;
        android.os.IBinder $r7;
        com.android.server.contentcapture.ContentCapturePerUserService $r10, $r12;
        long $l0;
        byte $b1;
        java.lang.Throwable $r11;
        java.lang.Exception $r13;
        java.lang.StringBuilder $r14;

        r0 := @this: com.android.server.contentcapture.RemoteContentCaptureService;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label01;

        $l0 = virtualinvoke r0.<com.android.server.contentcapture.RemoteContentCaptureService: long getTimeoutIdleBindMillis()>();

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label01;

        virtualinvoke r0.<com.android.server.contentcapture.RemoteContentCaptureService: void scheduleUnbind()>();

     label01:
        if z0 == 0 goto label08;

     label02:
        $r6 = r0.<com.android.server.contentcapture.RemoteContentCaptureService: android.os.IInterface mService>;

        $r8 = (android.service.contentcapture.IContentCaptureService) $r6;

        $r7 = r0.<com.android.server.contentcapture.RemoteContentCaptureService: android.os.IBinder mServerCallback>;

        $z2 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        $z1 = <android.view.contentcapture.ContentCaptureHelper: boolean sDebug>;

        interfaceinvoke $r8.<android.service.contentcapture.IContentCaptureService: void onConnected(android.os.IBinder,boolean,boolean)>($r7, $z2, $z1);

        $r9 = r0.<com.android.server.contentcapture.RemoteContentCaptureService: android.content.ComponentName mComponentName>;

        staticinvoke <com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeServiceEvent(int,android.content.ComponentName)>(1, $r9);

     label03:
        $r10 = r0.<com.android.server.contentcapture.RemoteContentCaptureService: com.android.server.contentcapture.ContentCapturePerUserService mPerUserService>;

        virtualinvoke $r10.<com.android.server.contentcapture.ContentCapturePerUserService: void onConnected()>();

     label04:
        goto label09;

     label05:
        $r11 := @caughtexception;

     label06:
        $r12 = r0.<com.android.server.contentcapture.RemoteContentCaptureService: com.android.server.contentcapture.ContentCapturePerUserService mPerUserService>;

        virtualinvoke $r12.<com.android.server.contentcapture.ContentCapturePerUserService: void onConnected()>();

     label07:
        throw $r11;

     label08:
        $r3 = r0.<com.android.server.contentcapture.RemoteContentCaptureService: android.os.IInterface mService>;

        $r4 = (android.service.contentcapture.IContentCaptureService) $r3;

        interfaceinvoke $r4.<android.service.contentcapture.IContentCaptureService: void onDisconnected()>();

        $r5 = r0.<com.android.server.contentcapture.RemoteContentCaptureService: android.content.ComponentName mComponentName>;

        staticinvoke <com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeServiceEvent(int,android.content.ComponentName)>(2, $r5);

     label09:
        goto label11;

     label10:
        $r13 := @caughtexception;

        r1 = r0.<com.android.server.contentcapture.RemoteContentCaptureService: java.lang.String mTag>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception calling onConnectedStateChanged(");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r1, $r19);

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label07 to label08 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    public void onActivityLifecycleEvent(android.service.contentcapture.ActivityEvent)
    {
        com.android.server.contentcapture.RemoteContentCaptureService r0;
        android.service.contentcapture.ActivityEvent r1;
        com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$12wkbjo54EUwTPFKOuEn42KWKFg $r2;

        r0 := @this: com.android.server.contentcapture.RemoteContentCaptureService;

        r1 := @parameter0: android.service.contentcapture.ActivityEvent;

        $r2 = new com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$12wkbjo54EUwTPFKOuEn42KWKFg;

        specialinvoke $r2.<com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$12wkbjo54EUwTPFKOuEn42KWKFg: void <init>(android.service.contentcapture.ActivityEvent)>(r1);

        virtualinvoke r0.<com.android.server.contentcapture.RemoteContentCaptureService: void scheduleAsyncRequest(com.android.internal.infra.AbstractRemoteService$AsyncRequest)>($r2);

        return;
    }

    public void onActivitySnapshotRequest(int, android.service.contentcapture.SnapshotData)
    {
        com.android.server.contentcapture.RemoteContentCaptureService r0;
        int i0;
        android.service.contentcapture.SnapshotData r1;
        com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$WZi4_GWL57wurriOS0cLTQHXrS8 $r2;

        r0 := @this: com.android.server.contentcapture.RemoteContentCaptureService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.service.contentcapture.SnapshotData;

        $r2 = new com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$WZi4_GWL57wurriOS0cLTQHXrS8;

        specialinvoke $r2.<com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$WZi4_GWL57wurriOS0cLTQHXrS8: void <init>(int,android.service.contentcapture.SnapshotData)>(i0, r1);

        virtualinvoke r0.<com.android.server.contentcapture.RemoteContentCaptureService: void scheduleAsyncRequest(com.android.internal.infra.AbstractRemoteService$AsyncRequest)>($r2);

        return;
    }

    public void onDataRemovalRequest(android.view.contentcapture.DataRemovalRequest)
    {
        com.android.server.contentcapture.RemoteContentCaptureService r0;
        android.view.contentcapture.DataRemovalRequest r1;
        com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$haMfPWsaVUWwKcAPgM3AadAkvOQ $r2;
        android.content.ComponentName $r3;

        r0 := @this: com.android.server.contentcapture.RemoteContentCaptureService;

        r1 := @parameter0: android.view.contentcapture.DataRemovalRequest;

        $r2 = new com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$haMfPWsaVUWwKcAPgM3AadAkvOQ;

        specialinvoke $r2.<com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$haMfPWsaVUWwKcAPgM3AadAkvOQ: void <init>(android.view.contentcapture.DataRemovalRequest)>(r1);

        virtualinvoke r0.<com.android.server.contentcapture.RemoteContentCaptureService: void scheduleAsyncRequest(com.android.internal.infra.AbstractRemoteService$AsyncRequest)>($r2);

        $r3 = r0.<com.android.server.contentcapture.RemoteContentCaptureService: android.content.ComponentName mComponentName>;

        staticinvoke <com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeServiceEvent(int,android.content.ComponentName)>(5, $r3);

        return;
    }

    public void onDataShareRequest(android.view.contentcapture.DataShareRequest, android.service.contentcapture.IDataShareCallback$Stub)
    {
        com.android.server.contentcapture.RemoteContentCaptureService r0;
        android.view.contentcapture.DataShareRequest r1;
        android.service.contentcapture.IDataShareCallback$Stub r2;
        com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$_mh_Du6CgOoVdmP9EpDMBTIRjro $r3;
        android.content.ComponentName $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.contentcapture.RemoteContentCaptureService;

        r1 := @parameter0: android.view.contentcapture.DataShareRequest;

        r2 := @parameter1: android.service.contentcapture.IDataShareCallback$Stub;

        $r3 = new com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$_mh_Du6CgOoVdmP9EpDMBTIRjro;

        specialinvoke $r3.<com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$_mh_Du6CgOoVdmP9EpDMBTIRjro: void <init>(android.view.contentcapture.DataShareRequest,android.service.contentcapture.IDataShareCallback$Stub)>(r1, r2);

        virtualinvoke r0.<com.android.server.contentcapture.RemoteContentCaptureService: void scheduleAsyncRequest(com.android.internal.infra.AbstractRemoteService$AsyncRequest)>($r3);

        $r4 = r0.<com.android.server.contentcapture.RemoteContentCaptureService: android.content.ComponentName mComponentName>;

        $r5 = virtualinvoke r1.<android.view.contentcapture.DataShareRequest: java.lang.String getPackageName()>();

        staticinvoke <com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeServiceEvent(int,android.content.ComponentName,java.lang.String)>(6, $r4, $r5);

        return;
    }

    public void onSessionFinished(int)
    {
        com.android.server.contentcapture.RemoteContentCaptureService r0;
        int i0;
        com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$QbbzaxOFnxJI34vQptxzLE9Vvog $r1;
        android.content.ComponentName $r2;

        r0 := @this: com.android.server.contentcapture.RemoteContentCaptureService;

        i0 := @parameter0: int;

        $r1 = new com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$QbbzaxOFnxJI34vQptxzLE9Vvog;

        specialinvoke $r1.<com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$QbbzaxOFnxJI34vQptxzLE9Vvog: void <init>(int)>(i0);

        virtualinvoke r0.<com.android.server.contentcapture.RemoteContentCaptureService: void scheduleAsyncRequest(com.android.internal.infra.AbstractRemoteService$AsyncRequest)>($r1);

        $r2 = virtualinvoke r0.<com.android.server.contentcapture.RemoteContentCaptureService: android.content.ComponentName getComponentName()>();

        staticinvoke <com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeSessionEvent(int,int,int,android.content.ComponentName,android.content.ComponentName,boolean)>(i0, 2, 0, $r2, null, 0);

        return;
    }

    public void onSessionStarted(android.view.contentcapture.ContentCaptureContext, int, int, com.android.internal.os.IResultReceiver, int)
    {
        com.android.server.contentcapture.RemoteContentCaptureService r0;
        android.view.contentcapture.ContentCaptureContext r1;
        int i0, i1, i2;
        com.android.internal.os.IResultReceiver r2;
        com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$PMsA3CmwChlM0Qy__Uy6Yr5CFzk $r3;
        android.content.ComponentName $r4, $r5;

        r0 := @this: com.android.server.contentcapture.RemoteContentCaptureService;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureContext;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.internal.os.IResultReceiver;

        i2 := @parameter4: int;

        $r3 = new com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$PMsA3CmwChlM0Qy__Uy6Yr5CFzk;

        specialinvoke $r3.<com.android.server.contentcapture._$$Lambda$RemoteContentCaptureService$PMsA3CmwChlM0Qy__Uy6Yr5CFzk: void <init>(android.view.contentcapture.ContentCaptureContext,int,int,com.android.internal.os.IResultReceiver,int)>(r1, i0, i1, r2, i2);

        virtualinvoke r0.<com.android.server.contentcapture.RemoteContentCaptureService: void scheduleAsyncRequest(com.android.internal.infra.AbstractRemoteService$AsyncRequest)>($r3);

        $r4 = virtualinvoke r0.<com.android.server.contentcapture.RemoteContentCaptureService: android.content.ComponentName getComponentName()>();

        $r5 = virtualinvoke r1.<android.view.contentcapture.ContentCaptureContext: android.content.ComponentName getActivityComponent()>();

        staticinvoke <com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeSessionEvent(int,int,int,android.content.ComponentName,android.content.ComponentName,boolean)>(i0, 1, i2, $r4, $r5, 0);

        return;
    }
}
