public final class com.android.server.contentsuggestions.ContentSuggestionsPerUserService extends com.android.server.infra.AbstractPerUserSystemService
{
    private static final java.lang.String TAG;
    private final com.android.server.wm.ActivityTaskManagerInternal mActivityTaskManagerInternal;
    private com.android.server.contentsuggestions.RemoteContentSuggestionsService mRemoteService;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Lcom/android/server/contentsuggestions/ContentSuggestionsPerUserService;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.contentsuggestions.ContentSuggestionsPerUserService: java.lang.String TAG> = $r1;

        return;
    }

    void <init>(com.android.server.contentsuggestions.ContentSuggestionsManagerService, java.lang.Object, int)
    {
        com.android.server.contentsuggestions.ContentSuggestionsPerUserService r0;
        com.android.server.contentsuggestions.ContentSuggestionsManagerService r1;
        java.lang.Object r2, $r3;
        int i0;
        com.android.server.wm.ActivityTaskManagerInternal $r4;

        r0 := @this: com.android.server.contentsuggestions.ContentSuggestionsPerUserService;

        r1 := @parameter0: com.android.server.contentsuggestions.ContentSuggestionsManagerService;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: void <init>(com.android.server.infra.AbstractMasterSystemService,java.lang.Object,int)>(r1, r2, i0);

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/ActivityTaskManagerInternal;");

        $r4 = (com.android.server.wm.ActivityTaskManagerInternal) $r3;

        r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: com.android.server.wm.ActivityTaskManagerInternal mActivityTaskManagerInternal> = $r4;

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.contentsuggestions.ContentSuggestionsPerUserService: java.lang.String TAG>;

        return $r0;
    }

    static void access$100(com.android.server.contentsuggestions.ContentSuggestionsPerUserService)
    {
        com.android.server.contentsuggestions.ContentSuggestionsPerUserService r0;

        r0 := @parameter0: com.android.server.contentsuggestions.ContentSuggestionsPerUserService;

        specialinvoke r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: void updateRemoteServiceLocked()>();

        return;
    }

    private com.android.server.contentsuggestions.RemoteContentSuggestionsService ensureRemoteServiceLocked()
    {
        com.android.server.contentsuggestions.ContentSuggestionsPerUserService r0;
        com.android.server.contentsuggestions.RemoteContentSuggestionsService $r1, $r2, $r3;
        android.content.Context $r4;
        com.android.server.contentsuggestions.ContentSuggestionsPerUserService$1 $r5;
        int $i0;
        com.android.server.infra.AbstractMasterSystemService $r6, $r8, $r10;
        com.android.server.contentsuggestions.ContentSuggestionsManagerService $r7, $r9, $r11;
        boolean $z0, $z1, $z2;
        java.lang.String $r12, r13;
        android.content.ComponentName r14;

        r0 := @this: com.android.server.contentsuggestions.ContentSuggestionsPerUserService;

        $r1 = r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: com.android.server.contentsuggestions.RemoteContentSuggestionsService mRemoteService>;

        if $r1 != null goto label3;

        r13 = virtualinvoke r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: java.lang.String getComponentNameLocked()>();

        if r13 != null goto label2;

        $r10 = r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r11 = (com.android.server.contentsuggestions.ContentSuggestionsManagerService) $r10;

        $z2 = $r11.<com.android.server.contentsuggestions.ContentSuggestionsManagerService: boolean verbose>;

        if $z2 == 0 goto label1;

        $r12 = <com.android.server.contentsuggestions.ContentSuggestionsPerUserService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r12, "ensureRemoteServiceLocked(): not set");

     label1:
        return null;

     label2:
        r14 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r13);

        $r3 = new com.android.server.contentsuggestions.RemoteContentSuggestionsService;

        $r4 = virtualinvoke r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: android.content.Context getContext()>();

        $i0 = r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: int mUserId>;

        $r5 = new com.android.server.contentsuggestions.ContentSuggestionsPerUserService$1;

        specialinvoke $r5.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService$1: void <init>(com.android.server.contentsuggestions.ContentSuggestionsPerUserService)>(r0);

        $r6 = r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r7 = (com.android.server.contentsuggestions.ContentSuggestionsManagerService) $r6;

        $z0 = virtualinvoke $r7.<com.android.server.contentsuggestions.ContentSuggestionsManagerService: boolean isBindInstantServiceAllowed()>();

        $r8 = r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r9 = (com.android.server.contentsuggestions.ContentSuggestionsManagerService) $r8;

        $z1 = $r9.<com.android.server.contentsuggestions.ContentSuggestionsManagerService: boolean verbose>;

        specialinvoke $r3.<com.android.server.contentsuggestions.RemoteContentSuggestionsService: void <init>(android.content.Context,android.content.ComponentName,int,com.android.server.contentsuggestions.RemoteContentSuggestionsService$Callbacks,boolean,boolean)>($r4, r14, $i0, $r5, $z0, $z1);

        r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: com.android.server.contentsuggestions.RemoteContentSuggestionsService mRemoteService> = $r3;

     label3:
        $r2 = r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: com.android.server.contentsuggestions.RemoteContentSuggestionsService mRemoteService>;

        return $r2;
    }

    private void updateRemoteServiceLocked()
    {
        com.android.server.contentsuggestions.ContentSuggestionsPerUserService r0;
        com.android.server.contentsuggestions.RemoteContentSuggestionsService r1;

        r0 := @this: com.android.server.contentsuggestions.ContentSuggestionsPerUserService;

        r1 = r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: com.android.server.contentsuggestions.RemoteContentSuggestionsService mRemoteService>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.contentsuggestions.RemoteContentSuggestionsService: void destroy()>();

        r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: com.android.server.contentsuggestions.RemoteContentSuggestionsService mRemoteService> = null;

     label1:
        return;
    }

    void classifyContentSelectionsLocked(android.app.contentsuggestions.ClassificationsRequest, android.app.contentsuggestions.IClassificationsCallback)
    {
        com.android.server.contentsuggestions.ContentSuggestionsPerUserService r0;
        android.app.contentsuggestions.ClassificationsRequest r1;
        android.app.contentsuggestions.IClassificationsCallback r2;
        com.android.server.contentsuggestions.RemoteContentSuggestionsService r3;

        r0 := @this: com.android.server.contentsuggestions.ContentSuggestionsPerUserService;

        r1 := @parameter0: android.app.contentsuggestions.ClassificationsRequest;

        r2 := @parameter1: android.app.contentsuggestions.IClassificationsCallback;

        r3 = specialinvoke r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: com.android.server.contentsuggestions.RemoteContentSuggestionsService ensureRemoteServiceLocked()>();

        if r3 == null goto label1;

        virtualinvoke r3.<com.android.server.contentsuggestions.RemoteContentSuggestionsService: void classifyContentSelections(android.app.contentsuggestions.ClassificationsRequest,android.app.contentsuggestions.IClassificationsCallback)>(r1, r2);

     label1:
        return;
    }

    protected android.content.pm.ServiceInfo newServiceInfoLocked(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        com.android.server.contentsuggestions.ContentSuggestionsPerUserService r0;
        android.content.pm.IPackageManager $r2;
        int $i0;
        java.lang.String $r3, $r4, $r7, $r11, $r18, r21;
        boolean $z0;
        java.lang.StringBuilder $r5, $r14;
        java.lang.SecurityException $r12;
        android.os.RemoteException $r13;
        android.content.pm.PackageManager$NameNotFoundException $r17;
        android.content.ComponentName r19;
        android.content.pm.ServiceInfo r20;

        r0 := @this: com.android.server.contentsuggestions.ContentSuggestionsPerUserService;

        r19 := @parameter0: android.content.ComponentName;

     label1:
        $r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i0 = r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: int mUserId>;

        r20 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r19, 128, $i0);

     label2:
        $r4 = "android.permission.BIND_CONTENT_SUGGESTIONS_SERVICE";

        $r3 = r20.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        return r20;

     label3:
        r21 = <com.android.server.contentsuggestions.ContentSuggestionsPerUserService: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ContentSuggestionsService from \'");

        $r7 = r20.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not require permission ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_CONTENT_SUGGESTIONS_SERVICE");

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r21, $r11);

        $r12 = new java.lang.SecurityException;

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>("Service does not require permission android.permission.BIND_CONTENT_SUGGESTIONS_SERVICE");

        throw $r12;

     label4:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get service for ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r17 = new android.content.pm.PackageManager$NameNotFoundException;

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r18);

        throw $r17;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    void notifyInteractionLocked(java.lang.String, android.os.Bundle)
    {
        com.android.server.contentsuggestions.ContentSuggestionsPerUserService r0;
        java.lang.String r1;
        android.os.Bundle r2;
        com.android.server.contentsuggestions.RemoteContentSuggestionsService r3;

        r0 := @this: com.android.server.contentsuggestions.ContentSuggestionsPerUserService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 = specialinvoke r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: com.android.server.contentsuggestions.RemoteContentSuggestionsService ensureRemoteServiceLocked()>();

        if r3 == null goto label1;

        virtualinvoke r3.<com.android.server.contentsuggestions.RemoteContentSuggestionsService: void notifyInteraction(java.lang.String,android.os.Bundle)>(r1, r2);

     label1:
        return;
    }

    void provideContextImageFromBitmapLocked(android.os.Bundle)
    {
        com.android.server.contentsuggestions.ContentSuggestionsPerUserService r0;
        android.os.Bundle r1;

        r0 := @this: com.android.server.contentsuggestions.ContentSuggestionsPerUserService;

        r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: void provideContextImageLocked(int,android.graphics.GraphicBuffer,int,android.os.Bundle)>(-1, null, 0, r1);

        return;
    }

    void provideContextImageLocked(int, android.graphics.GraphicBuffer, int, android.os.Bundle)
    {
        com.android.server.contentsuggestions.ContentSuggestionsPerUserService r0;
        int i0, i1;
        android.graphics.GraphicBuffer r1;
        android.os.Bundle r2;
        com.android.server.contentsuggestions.RemoteContentSuggestionsService r3;

        r0 := @this: com.android.server.contentsuggestions.ContentSuggestionsPerUserService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.GraphicBuffer;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Bundle;

        r3 = specialinvoke r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: com.android.server.contentsuggestions.RemoteContentSuggestionsService ensureRemoteServiceLocked()>();

        if r3 == null goto label1;

        virtualinvoke r3.<com.android.server.contentsuggestions.RemoteContentSuggestionsService: void provideContextImage(int,android.graphics.GraphicBuffer,int,android.os.Bundle)>(i0, r1, i1, r2);

     label1:
        return;
    }

    void suggestContentSelectionsLocked(android.app.contentsuggestions.SelectionsRequest, android.app.contentsuggestions.ISelectionsCallback)
    {
        com.android.server.contentsuggestions.ContentSuggestionsPerUserService r0;
        android.app.contentsuggestions.SelectionsRequest r1;
        android.app.contentsuggestions.ISelectionsCallback r2;
        com.android.server.contentsuggestions.RemoteContentSuggestionsService r3;

        r0 := @this: com.android.server.contentsuggestions.ContentSuggestionsPerUserService;

        r1 := @parameter0: android.app.contentsuggestions.SelectionsRequest;

        r2 := @parameter1: android.app.contentsuggestions.ISelectionsCallback;

        r3 = specialinvoke r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: com.android.server.contentsuggestions.RemoteContentSuggestionsService ensureRemoteServiceLocked()>();

        if r3 == null goto label1;

        virtualinvoke r3.<com.android.server.contentsuggestions.RemoteContentSuggestionsService: void suggestContentSelections(android.app.contentsuggestions.SelectionsRequest,android.app.contentsuggestions.ISelectionsCallback)>(r1, r2);

     label1:
        return;
    }

    protected boolean updateLocked(boolean)
    {
        com.android.server.contentsuggestions.ContentSuggestionsPerUserService r0;
        boolean z0, z1;

        r0 := @this: com.android.server.contentsuggestions.ContentSuggestionsPerUserService;

        z0 := @parameter0: boolean;

        z1 = specialinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: boolean updateLocked(boolean)>(z0);

        specialinvoke r0.<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: void updateRemoteServiceLocked()>();

        return z1;
    }
}
