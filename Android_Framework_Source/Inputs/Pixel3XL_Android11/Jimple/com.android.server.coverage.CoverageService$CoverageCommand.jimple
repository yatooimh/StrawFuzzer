class com.android.server.coverage.CoverageService$CoverageCommand extends android.os.ShellCommand
{

    private void <init>()
    {
        com.android.server.coverage.CoverageService$CoverageCommand r0;

        r0 := @this: com.android.server.coverage.CoverageService$CoverageCommand;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        return;
    }

    void <init>(com.android.server.coverage.CoverageService$1)
    {
        com.android.server.coverage.CoverageService$CoverageCommand r0;
        com.android.server.coverage.CoverageService$1 r1;

        r0 := @this: com.android.server.coverage.CoverageService$CoverageCommand;

        r1 := @parameter0: com.android.server.coverage.CoverageService$1;

        specialinvoke r0.<com.android.server.coverage.CoverageService$CoverageCommand: void <init>()>();

        return;
    }

    private int onDump()
    {
        com.android.server.coverage.CoverageService$CoverageCommand r0;
        android.os.ParcelFileDescriptor r1;
        boolean $z0;
        org.jacoco.agent.rt.IAgent $r3;
        byte[] $r4;
        java.io.PrintWriter $r5, r24;
        java.lang.Object[] $r6;
        java.lang.String $r7, $r14, $r16, r17;
        java.lang.Throwable $r9, $r10, $r11;
        java.io.File r26, r27;
        android.os.ParcelFileDescriptor$AutoCloseOutputStream r28;
        java.io.BufferedOutputStream r29;
        java.lang.StringBuilder r30;
        java.io.IOException r31;

        r0 := @this: com.android.server.coverage.CoverageService$CoverageCommand;

        r17 = virtualinvoke r0.<com.android.server.coverage.CoverageService$CoverageCommand: java.lang.String getNextArg()>();

        if r17 != null goto label01;

        r17 = "/data/local/tmp/coverage.ec";

        goto label02;

     label01:
        r26 = new java.io.File;

        specialinvoke r26.<java.io.File: void <init>(java.lang.String)>(r17);

        $z0 = virtualinvoke r26.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label02;

        r27 = new java.io.File;

        specialinvoke r27.<java.io.File: void <init>(java.io.File,java.lang.String)>(r26, "coverage.ec");

        r17 = virtualinvoke r27.<java.io.File: java.lang.String getAbsolutePath()>();

     label02:
        r1 = virtualinvoke r0.<com.android.server.coverage.CoverageService$CoverageCommand: android.os.ParcelFileDescriptor openFileForSystem(java.lang.String,java.lang.String)>(r17, "w");

        if r1 != null goto label03;

        return -1;

     label03:
        r29 = new java.io.BufferedOutputStream;

        r28 = new android.os.ParcelFileDescriptor$AutoCloseOutputStream;

        specialinvoke r28.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>(r1);

        specialinvoke r29.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r28);

     label04:
        $r3 = staticinvoke <org.jacoco.agent.rt.RT: org.jacoco.agent.rt.IAgent getAgent()>();

        $r4 = interfaceinvoke $r3.<org.jacoco.agent.rt.IAgent: byte[] getExecutionData(boolean)>(0);

        virtualinvoke r29.<java.io.BufferedOutputStream: void write(byte[])>($r4);

        virtualinvoke r29.<java.io.BufferedOutputStream: void flush()>();

        $r5 = virtualinvoke r0.<com.android.server.coverage.CoverageService$CoverageCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r17;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Dumped coverage data to %s", $r6);

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>($r7);

     label05:
        virtualinvoke r29.<java.io.BufferedOutputStream: void close()>();

     label06:
        return 0;

     label07:
        $r10 := @caughtexception;

     label08:
        virtualinvoke r29.<java.io.BufferedOutputStream: void close()>();

     label09:
        goto label12;

     label10:
        $r9 := @caughtexception;

     label11:
        virtualinvoke $r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r9);

     label12:
        throw $r10;

     label13:
        $r11 := @caughtexception;

        r24 = virtualinvoke r0.<com.android.server.coverage.CoverageService$CoverageCommand: java.io.PrintWriter getErrPrintWriter()>();

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to dump coverage data: ");

        r31 = (java.io.IOException) $r11;

        $r14 = virtualinvoke r31.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r24.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        return -1;

        catch java.io.IOException from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label12 to label13 with label13;
    }

    private int onReset()
    {
        com.android.server.coverage.CoverageService$CoverageCommand r0;
        org.jacoco.agent.rt.IAgent $r1;
        java.io.PrintWriter $r2;

        r0 := @this: com.android.server.coverage.CoverageService$CoverageCommand;

        $r1 = staticinvoke <org.jacoco.agent.rt.RT: org.jacoco.agent.rt.IAgent getAgent()>();

        interfaceinvoke $r1.<org.jacoco.agent.rt.IAgent: void reset()>();

        $r2 = virtualinvoke r0.<com.android.server.coverage.CoverageService$CoverageCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Reset coverage data");

        return 0;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.coverage.CoverageService$CoverageCommand r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.coverage.CoverageService$CoverageCommand;

        r1 := @parameter0: java.lang.String;

        $r2 = "dump";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $i2 = specialinvoke r0.<com.android.server.coverage.CoverageService$CoverageCommand: int onDump()>();

        return $i2;

     label1:
        $r3 = "reset";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $i1 = specialinvoke r0.<com.android.server.coverage.CoverageService$CoverageCommand: int onReset()>();

        return $i1;

     label2:
        $i0 = virtualinvoke r0.<com.android.server.coverage.CoverageService$CoverageCommand: int handleDefaultCommands(java.lang.String)>(r1);

        return $i0;
    }

    public void onHelp()
    {
        com.android.server.coverage.CoverageService$CoverageCommand r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.coverage.CoverageService$CoverageCommand;

        r1 = virtualinvoke r0.<com.android.server.coverage.CoverageService$CoverageCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Coverage commands:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  dump [FILE]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Dump code coverage to FILE.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  reset");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Reset coverage information.");

        return;
    }
}
