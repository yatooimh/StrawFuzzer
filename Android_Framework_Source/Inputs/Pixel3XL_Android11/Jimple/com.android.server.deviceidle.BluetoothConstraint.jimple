public class com.android.server.deviceidle.BluetoothConstraint extends java.lang.Object implements com.android.server.deviceidle.IDeviceIdleConstraint
{
    private static final long INACTIVITY_TIMEOUT_MS;
    private static final java.lang.String TAG;
    private final android.bluetooth.BluetoothManager mBluetoothManager;
    private volatile boolean mConnected;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final com.android.server.DeviceIdleInternal mLocalService;
    private volatile boolean mMonitoring;
    final android.content.BroadcastReceiver mReceiver;
    private final java.lang.Runnable mTimeoutCallback;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.deviceidle.BluetoothConstraint: long INACTIVITY_TIMEOUT_MS> = 1200000L;

        $r0 = class "Lcom/android/server/deviceidle/BluetoothConstraint;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.deviceidle.BluetoothConstraint: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context, android.os.Handler, com.android.server.DeviceIdleInternal)
    {
        com.android.server.deviceidle.BluetoothConstraint r0;
        android.content.Context r1;
        android.os.Handler r2;
        com.android.server.DeviceIdleInternal r3;
        com.android.server.deviceidle.BluetoothConstraint$1 $r4;
        com.android.server.deviceidle._$$Lambda$BluetoothConstraint$ix_cz35TWbQB96MNXR8MW8BQtww $r5;
        java.lang.Object $r6;
        android.bluetooth.BluetoothManager $r7;

        r0 := @this: com.android.server.deviceidle.BluetoothConstraint;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: com.android.server.DeviceIdleInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.deviceidle.BluetoothConstraint: boolean mConnected> = 1;

        r0.<com.android.server.deviceidle.BluetoothConstraint: boolean mMonitoring> = 0;

        $r4 = new com.android.server.deviceidle.BluetoothConstraint$1;

        specialinvoke $r4.<com.android.server.deviceidle.BluetoothConstraint$1: void <init>(com.android.server.deviceidle.BluetoothConstraint)>(r0);

        r0.<com.android.server.deviceidle.BluetoothConstraint: android.content.BroadcastReceiver mReceiver> = $r4;

        $r5 = new com.android.server.deviceidle._$$Lambda$BluetoothConstraint$ix_cz35TWbQB96MNXR8MW8BQtww;

        specialinvoke $r5.<com.android.server.deviceidle._$$Lambda$BluetoothConstraint$ix_cz35TWbQB96MNXR8MW8BQtww: void <init>(com.android.server.deviceidle.BluetoothConstraint)>(r0);

        r0.<com.android.server.deviceidle.BluetoothConstraint: java.lang.Runnable mTimeoutCallback> = $r5;

        r0.<com.android.server.deviceidle.BluetoothConstraint: android.content.Context mContext> = r1;

        r0.<com.android.server.deviceidle.BluetoothConstraint: android.os.Handler mHandler> = r2;

        r0.<com.android.server.deviceidle.BluetoothConstraint: com.android.server.DeviceIdleInternal mLocalService> = r3;

        $r6 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/bluetooth/BluetoothManager;");

        $r7 = (android.bluetooth.BluetoothManager) $r6;

        r0.<com.android.server.deviceidle.BluetoothConstraint: android.bluetooth.BluetoothManager mBluetoothManager> = $r7;

        return;
    }

    static com.android.server.DeviceIdleInternal access$000(com.android.server.deviceidle.BluetoothConstraint)
    {
        com.android.server.deviceidle.BluetoothConstraint r0;
        com.android.server.DeviceIdleInternal $r1;

        r0 := @parameter0: com.android.server.deviceidle.BluetoothConstraint;

        $r1 = r0.<com.android.server.deviceidle.BluetoothConstraint: com.android.server.DeviceIdleInternal mLocalService>;

        return $r1;
    }

    static void access$100(com.android.server.deviceidle.BluetoothConstraint)
    {
        com.android.server.deviceidle.BluetoothConstraint r0;

        r0 := @parameter0: com.android.server.deviceidle.BluetoothConstraint;

        specialinvoke r0.<com.android.server.deviceidle.BluetoothConstraint: void updateAndReportActiveLocked()>();

        return;
    }

    private void cancelMonitoringDueToTimeout()
    {
        com.android.server.deviceidle.BluetoothConstraint r0;
        boolean $z0;
        com.android.server.DeviceIdleInternal $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.deviceidle.BluetoothConstraint;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.server.deviceidle.BluetoothConstraint: boolean mMonitoring>;

        if $z0 == 0 goto label2;

        r0.<com.android.server.deviceidle.BluetoothConstraint: boolean mMonitoring> = 0;

        $r2 = r0.<com.android.server.deviceidle.BluetoothConstraint: com.android.server.DeviceIdleInternal mLocalService>;

        interfaceinvoke $r2.<com.android.server.DeviceIdleInternal: void onConstraintStateChanged(com.android.server.deviceidle.IDeviceIdleConstraint,boolean)>(r0, 0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static boolean isBluetoothConnected(android.bluetooth.BluetoothManager)
    {
        android.bluetooth.BluetoothManager r0;
        android.bluetooth.BluetoothAdapter r1;
        boolean $z0, z1;
        java.util.List $r2;
        int $i0;

        r0 := @parameter0: android.bluetooth.BluetoothManager;

        r1 = virtualinvoke r0.<android.bluetooth.BluetoothManager: android.bluetooth.BluetoothAdapter getAdapter()>();

        z1 = 0;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.bluetooth.BluetoothAdapter: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<android.bluetooth.BluetoothManager: java.util.List getConnectedDevices(int)>(7);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        z1 = 1;

     label1:
        return z1;

     label2:
        return 0;
    }

    private void updateAndReportActiveLocked()
    {
        com.android.server.deviceidle.BluetoothConstraint r0;
        boolean z0, $z1, $z2;
        android.bluetooth.BluetoothManager $r1;
        com.android.server.DeviceIdleInternal $r2;

        r0 := @this: com.android.server.deviceidle.BluetoothConstraint;

        $r1 = r0.<com.android.server.deviceidle.BluetoothConstraint: android.bluetooth.BluetoothManager mBluetoothManager>;

        z0 = staticinvoke <com.android.server.deviceidle.BluetoothConstraint: boolean isBluetoothConnected(android.bluetooth.BluetoothManager)>($r1);

        $z1 = r0.<com.android.server.deviceidle.BluetoothConstraint: boolean mConnected>;

        if z0 == $z1 goto label1;

        r0.<com.android.server.deviceidle.BluetoothConstraint: boolean mConnected> = z0;

        $r2 = r0.<com.android.server.deviceidle.BluetoothConstraint: com.android.server.DeviceIdleInternal mLocalService>;

        $z2 = r0.<com.android.server.deviceidle.BluetoothConstraint: boolean mConnected>;

        interfaceinvoke $r2.<com.android.server.DeviceIdleInternal: void onConstraintStateChanged(com.android.server.deviceidle.IDeviceIdleConstraint,boolean)>(r0, $z2);

     label1:
        return;
    }

    public void lambda$new$0$BluetoothConstraint()
    {
        com.android.server.deviceidle.BluetoothConstraint r0;

        r0 := @this: com.android.server.deviceidle.BluetoothConstraint;

        specialinvoke r0.<com.android.server.deviceidle.BluetoothConstraint: void cancelMonitoringDueToTimeout()>();

        return;
    }

    public void startMonitoring()
    {
        com.android.server.deviceidle.BluetoothConstraint r0;
        android.content.BroadcastReceiver $r1;
        android.content.Context $r2;
        java.lang.Runnable $r4;
        android.os.Handler $r5, $r6;
        android.os.Message $r7;
        java.lang.Throwable $r8;
        android.content.IntentFilter r9;

        r0 := @this: com.android.server.deviceidle.BluetoothConstraint;

        entermonitor r0;

     label1:
        r0.<com.android.server.deviceidle.BluetoothConstraint: boolean mConnected> = 1;

        r0.<com.android.server.deviceidle.BluetoothConstraint: boolean mMonitoring> = 1;

        r9 = new android.content.IntentFilter;

        specialinvoke r9.<android.content.IntentFilter: void <init>()>();

        virtualinvoke r9.<android.content.IntentFilter: void addAction(java.lang.String)>("android.bluetooth.device.action.ACL_DISCONNECTED");

        virtualinvoke r9.<android.content.IntentFilter: void addAction(java.lang.String)>("android.bluetooth.device.action.ACL_CONNECTED");

        virtualinvoke r9.<android.content.IntentFilter: void addAction(java.lang.String)>("android.bluetooth.adapter.action.STATE_CHANGED");

        $r2 = r0.<com.android.server.deviceidle.BluetoothConstraint: android.content.Context mContext>;

        $r1 = r0.<com.android.server.deviceidle.BluetoothConstraint: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r2.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r1, r9);

        $r6 = r0.<com.android.server.deviceidle.BluetoothConstraint: android.os.Handler mHandler>;

        $r5 = r0.<com.android.server.deviceidle.BluetoothConstraint: android.os.Handler mHandler>;

        $r4 = r0.<com.android.server.deviceidle.BluetoothConstraint: java.lang.Runnable mTimeoutCallback>;

        $r7 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>($r5, $r4);

        virtualinvoke $r6.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r7, 1200000L);

        specialinvoke r0.<com.android.server.deviceidle.BluetoothConstraint: void updateAndReportActiveLocked()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void stopMonitoring()
    {
        com.android.server.deviceidle.BluetoothConstraint r0;
        android.content.BroadcastReceiver $r2;
        android.content.Context $r3;
        java.lang.Runnable $r4;
        android.os.Handler $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.deviceidle.BluetoothConstraint;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.deviceidle.BluetoothConstraint: android.content.Context mContext>;

        $r2 = r0.<com.android.server.deviceidle.BluetoothConstraint: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r3.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        $r5 = r0.<com.android.server.deviceidle.BluetoothConstraint: android.os.Handler mHandler>;

        $r4 = r0.<com.android.server.deviceidle.BluetoothConstraint: java.lang.Runnable mTimeoutCallback>;

        virtualinvoke $r5.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

        r0.<com.android.server.deviceidle.BluetoothConstraint: boolean mMonitoring> = 0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
