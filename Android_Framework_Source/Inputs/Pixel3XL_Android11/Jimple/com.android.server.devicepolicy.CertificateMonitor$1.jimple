class com.android.server.devicepolicy.CertificateMonitor$1 extends android.content.BroadcastReceiver
{
    final com.android.server.devicepolicy.CertificateMonitor this$0;

    void <init>(com.android.server.devicepolicy.CertificateMonitor)
    {
        com.android.server.devicepolicy.CertificateMonitor$1 r0;
        com.android.server.devicepolicy.CertificateMonitor r1;

        r0 := @this: com.android.server.devicepolicy.CertificateMonitor$1;

        r1 := @parameter0: com.android.server.devicepolicy.CertificateMonitor;

        r0.<com.android.server.devicepolicy.CertificateMonitor$1: com.android.server.devicepolicy.CertificateMonitor this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.devicepolicy.CertificateMonitor$1 r0;
        android.content.Context r1;
        android.content.Intent r2;
        int i0, $i1;
        boolean $z0;
        com.android.server.devicepolicy.CertificateMonitor $r3;
        android.os.UserHandle $r4;

        r0 := @this: com.android.server.devicepolicy.CertificateMonitor$1;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $z0 = staticinvoke <android.os.storage.StorageManager: boolean inCryptKeeperBounce()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $i1 = virtualinvoke r0.<com.android.server.devicepolicy.CertificateMonitor$1: int getSendingUserId()>();

        i0 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.user_handle", $i1);

        $r3 = r0.<com.android.server.devicepolicy.CertificateMonitor$1: com.android.server.devicepolicy.CertificateMonitor this$0>;

        $r4 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        staticinvoke <com.android.server.devicepolicy.CertificateMonitor: void access$000(com.android.server.devicepolicy.CertificateMonitor,android.os.UserHandle)>($r3, $r4);

        return;
    }
}
