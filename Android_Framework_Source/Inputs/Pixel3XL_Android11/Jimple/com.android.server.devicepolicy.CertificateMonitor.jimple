public class com.android.server.devicepolicy.CertificateMonitor extends java.lang.Object
{
    protected static final java.lang.String LOG_TAG;
    protected static final int MONITORING_CERT_NOTIFICATION_ID;
    private final android.os.Handler mHandler;
    private final com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector;
    private final android.content.BroadcastReceiver mRootCaReceiver;
    private final com.android.server.devicepolicy.DevicePolicyManagerService mService;

    public void <init>(com.android.server.devicepolicy.DevicePolicyManagerService, com.android.server.devicepolicy.DevicePolicyManagerService$Injector, android.os.Handler)
    {
        com.android.server.devicepolicy.CertificateMonitor r0;
        com.android.server.devicepolicy.DevicePolicyManagerService$Injector r1, $r5;
        android.os.Handler r2, $r6;
        com.android.server.devicepolicy.CertificateMonitor$1 $r3;
        android.content.IntentFilter $r4;
        android.os.UserHandle $r7;
        android.content.BroadcastReceiver $r8;
        android.content.Context $r9;
        com.android.server.devicepolicy.DevicePolicyManagerService r11;

        r0 := @this: com.android.server.devicepolicy.CertificateMonitor;

        r11 := @parameter0: com.android.server.devicepolicy.DevicePolicyManagerService;

        r1 := @parameter1: com.android.server.devicepolicy.DevicePolicyManagerService$Injector;

        r2 := @parameter2: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new com.android.server.devicepolicy.CertificateMonitor$1;

        specialinvoke $r3.<com.android.server.devicepolicy.CertificateMonitor$1: void <init>(com.android.server.devicepolicy.CertificateMonitor)>(r0);

        r0.<com.android.server.devicepolicy.CertificateMonitor: android.content.BroadcastReceiver mRootCaReceiver> = $r3;

        r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService mService> = r11;

        r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector> = r1;

        r0.<com.android.server.devicepolicy.CertificateMonitor: android.os.Handler mHandler> = r2;

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r4.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_STARTED");

        virtualinvoke $r4.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_UNLOCKED");

        virtualinvoke $r4.<android.content.IntentFilter: void addAction(java.lang.String)>("android.security.action.TRUST_STORE_CHANGED");

        virtualinvoke $r4.<android.content.IntentFilter: void setPriority(int)>(1000);

        $r5 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        $r9 = $r5.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.content.Context mContext>;

        $r8 = r0.<com.android.server.devicepolicy.CertificateMonitor: android.content.BroadcastReceiver mRootCaReceiver>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r6 = r0.<com.android.server.devicepolicy.CertificateMonitor: android.os.Handler mHandler>;

        virtualinvoke $r9.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r8, $r7, $r4, null, $r6);

        return;
    }

    static void access$000(com.android.server.devicepolicy.CertificateMonitor, android.os.UserHandle)
    {
        com.android.server.devicepolicy.CertificateMonitor r0;
        android.os.UserHandle r1;

        r0 := @parameter0: com.android.server.devicepolicy.CertificateMonitor;

        r1 := @parameter1: android.os.UserHandle;

        specialinvoke r0.<com.android.server.devicepolicy.CertificateMonitor: void updateInstalledCertificates(android.os.UserHandle)>(r1);

        return;
    }

    private android.app.Notification buildNotification(android.os.UserHandle, int)
    {
        com.android.server.devicepolicy.CertificateMonitor r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i7, i8, $i9;
        android.content.res.Resources r1;
        com.android.server.devicepolicy.DevicePolicyManagerService$Injector $r3, $r4, $r11, $r44;
        com.android.server.devicepolicy.DevicePolicyManagerService $r5, $r7, $r25, $r28, $r31, $r33;
        android.content.ComponentName $r6, $r23;
        android.os.UserHandle $r12, r40;
        android.app.Notification$Builder $r13, $r15, $r17, $r18, $r19, $r20, $r21;
        java.lang.String $r14, $r29, $r32, $r39, r42;
        java.lang.CharSequence $r16;
        android.app.Notification $r22;
        java.lang.Object[] $r27, $r30;
        android.content.pm.PackageManager$NameNotFoundException $r34;
        java.lang.StringBuilder $r35;
        android.content.Context r41;
        android.content.Intent $r43;
        android.content.pm.PackageManager $r45;
        android.content.pm.ActivityInfo r46;
        android.app.PendingIntent r47;

        r0 := @this: com.android.server.devicepolicy.CertificateMonitor;

        r40 := @parameter0: android.os.UserHandle;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        r41 = virtualinvoke $r3.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.content.Context createContextAsUser(android.os.UserHandle)>(r40);

     label2:
        $r4 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        r1 = virtualinvoke $r4.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.content.res.Resources getResources()>();

        i7 = virtualinvoke r40.<android.os.UserHandle: int getIdentifier()>();

        $r5 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService mService>;

        $i1 = virtualinvoke r40.<android.os.UserHandle: int getIdentifier()>();

        $r6 = virtualinvoke $r5.<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getProfileOwner(int)>($i1);

        if $r6 == null goto label3;

        $r30 = newarray (java.lang.Object)[1];

        $r31 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService mService>;

        $i4 = virtualinvoke r40.<android.os.UserHandle: int getIdentifier()>();

        $r32 = virtualinvoke $r31.<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getProfileOwnerName(int)>($i4);

        $r30[0] = $r32;

        r42 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17041280, $r30);

        $r33 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService mService>;

        $i5 = virtualinvoke r40.<android.os.UserHandle: int getIdentifier()>();

        i7 = virtualinvoke $r33.<com.android.server.devicepolicy.DevicePolicyManagerService: int getProfileParentId(int)>($i5);

        i8 = 17303577;

        goto label5;

     label3:
        $r7 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService mService>;

        $i2 = virtualinvoke $r7.<com.android.server.devicepolicy.DevicePolicyManagerService: int getDeviceOwnerUserId()>();

        $i3 = virtualinvoke r40.<android.os.UserHandle: int getIdentifier()>();

        if $i2 != $i3 goto label4;

        $r25 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService mService>;

        virtualinvoke $r25.<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getDeviceOwnerName()>();

        $r27 = newarray (java.lang.Object)[1];

        $r28 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService mService>;

        $r29 = virtualinvoke $r28.<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getDeviceOwnerName()>();

        $r27[0] = $r29;

        r42 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17041280, $r27);

        i8 = 17303577;

        goto label5;

     label4:
        r42 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17041279);

        i8 = 17301642;

     label5:
        $r43 = new android.content.Intent;

        specialinvoke $r43.<android.content.Intent: void <init>(java.lang.String)>("com.android.settings.MONITORING_CERT_INFO");

        virtualinvoke $r43.<android.content.Intent: android.content.Intent setFlags(int)>(268468224);

        virtualinvoke $r43.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.settings.extra.number_of_certificates", i0);

        $i9 = virtualinvoke r40.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke $r43.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.USER_ID", $i9);

        $r44 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        $r45 = virtualinvoke $r44.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.content.pm.PackageManager getPackageManager()>();

        r46 = virtualinvoke $r43.<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>($r45, 1048576);

        if r46 == null goto label6;

        $r23 = virtualinvoke r46.<android.content.pm.ActivityInfo: android.content.ComponentName getComponentName()>();

        virtualinvoke $r43.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r23);

     label6:
        $r11 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        $r12 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i7);

        r47 = virtualinvoke $r11.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.app.PendingIntent pendingIntentGetActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>(r41, 0, $r43, 134217728, null, $r12);

        $r13 = new android.app.Notification$Builder;

        $r14 = <com.android.internal.notification.SystemNotificationChannels: java.lang.String SECURITY>;

        specialinvoke $r13.<android.app.Notification$Builder: void <init>(android.content.Context,java.lang.String)>(r41, $r14);

        $r15 = virtualinvoke $r13.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>(i8);

        $r16 = virtualinvoke r1.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(18153497, i0);

        $r17 = virtualinvoke $r15.<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>($r16);

        $r18 = virtualinvoke $r17.<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>(r42);

        $r19 = virtualinvoke $r18.<android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>(r47);

        $r20 = virtualinvoke $r19.<android.app.Notification$Builder: android.app.Notification$Builder setShowWhen(boolean)>(0);

        $r21 = virtualinvoke $r20.<android.app.Notification$Builder: android.app.Notification$Builder setColor(int)>(17170460);

        $r22 = virtualinvoke $r21.<android.app.Notification$Builder: android.app.Notification build()>();

        return $r22;

     label7:
        $r34 := @caughtexception;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Create context as ");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyManager", $r39, $r34);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label7;
    }

    private java.util.List getInstalledCaCertificates(android.os.UserHandle) throws android.os.RemoteException, java.lang.RuntimeException
    {
        com.android.server.devicepolicy.CertificateMonitor r0;
        com.android.server.devicepolicy.DevicePolicyManagerService$Injector $r1;
        android.security.IKeyChainService $r2;
        android.content.pm.StringParceledListSlice $r3;
        java.lang.AssertionError $r4;
        java.lang.RuntimeException $r5, $r10;
        java.lang.Throwable $r6, $r7, $r8;
        java.lang.Thread $r9;
        android.os.UserHandle r11;
        android.security.KeyChain$KeyChainConnection r12;
        java.util.List r13;

        r0 := @this: com.android.server.devicepolicy.CertificateMonitor;

        r11 := @parameter0: android.os.UserHandle;

     label01:
        $r1 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        r12 = virtualinvoke $r1.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.security.KeyChain$KeyChainConnection keyChainBindAsUser(android.os.UserHandle)>(r11);

     label02:
        $r2 = virtualinvoke r12.<android.security.KeyChain$KeyChainConnection: android.security.IKeyChainService getService()>();

        $r3 = interfaceinvoke $r2.<android.security.IKeyChainService: android.content.pm.StringParceledListSlice getUserCaAliases()>();

        r13 = virtualinvoke $r3.<android.content.pm.StringParceledListSlice: java.util.List getList()>();

     label03:
        if r12 == null goto label05;

     label04:
        virtualinvoke r12.<android.security.KeyChain$KeyChainConnection: void close()>();

     label05:
        return r13;

     label06:
        $r6 := @caughtexception;

        if r12 == null goto label11;

     label07:
        virtualinvoke r12.<android.security.KeyChain$KeyChainConnection: void close()>();

     label08:
        goto label11;

     label09:
        $r7 := @caughtexception;

     label10:
        virtualinvoke $r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r7);

     label11:
        throw $r6;

     label12:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label13:
        $r8 := @caughtexception;

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r9.<java.lang.Thread: void interrupt()>();

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r10;

        catch java.lang.InterruptedException from label01 to label02 with label13;
        catch java.lang.AssertionError from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.InterruptedException from label04 to label05 with label13;
        catch java.lang.AssertionError from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.InterruptedException from label10 to label11 with label13;
        catch java.lang.AssertionError from label10 to label11 with label12;
        catch java.lang.InterruptedException from label11 to label12 with label13;
        catch java.lang.AssertionError from label11 to label12 with label12;
    }

    private static java.security.cert.X509Certificate parseCert(byte[]) throws java.security.cert.CertificateException
    {
        byte[] r0;
        java.security.cert.CertificateFactory $r1;
        java.io.ByteArrayInputStream $r2;
        java.security.cert.Certificate $r3;
        java.security.cert.X509Certificate $r4;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        $r3 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r2);

        $r4 = (java.security.cert.X509Certificate) $r3;

        return $r4;
    }

    private void updateInstalledCertificates(android.os.UserHandle)
    {
        com.android.server.devicepolicy.CertificateMonitor r0;
        int i0, $i1, $i2, $i3;
        com.android.server.devicepolicy.DevicePolicyManagerService$Injector $r1, $r6, $r8;
        android.os.UserManager $r2;
        boolean $z0;
        com.android.server.devicepolicy.DevicePolicyManagerService $r3, $r4;
        java.util.Set $r5;
        android.app.NotificationManager $r7, $r9;
        java.lang.Exception $r10;
        android.os.UserHandle r11;
        java.util.List r12;
        android.app.Notification r13;

        r0 := @this: com.android.server.devicepolicy.CertificateMonitor;

        r11 := @parameter0: android.os.UserHandle;

        $r1 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        $r2 = virtualinvoke $r1.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.os.UserManager getUserManager()>();

        $i1 = virtualinvoke r11.<android.os.UserHandle: int getIdentifier()>();

        $z0 = virtualinvoke $r2.<android.os.UserManager: boolean isUserUnlocked(int)>($i1);

        if $z0 != 0 goto label1;

        return;

     label1:
        r12 = specialinvoke r0.<com.android.server.devicepolicy.CertificateMonitor: java.util.List getInstalledCaCertificates(android.os.UserHandle)>(r11);

     label2:
        $r3 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService mService>;

        virtualinvoke $r3.<com.android.server.devicepolicy.DevicePolicyManagerService: void onInstalledCertificatesChanged(android.os.UserHandle,java.util.Collection)>(r11, r12);

        $i2 = interfaceinvoke r12.<java.util.List: int size()>();

        $r4 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService mService>;

        $r5 = virtualinvoke $r4.<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.Set getAcceptedCaCertificates(android.os.UserHandle)>(r11);

        $i3 = interfaceinvoke $r5.<java.util.Set: int size()>();

        i0 = $i2 - $i3;

        if i0 == 0 goto label3;

        r13 = specialinvoke r0.<com.android.server.devicepolicy.CertificateMonitor: android.app.Notification buildNotification(android.os.UserHandle,int)>(r11, i0);

        $r8 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        $r9 = virtualinvoke $r8.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.app.NotificationManager getNotificationManager()>();

        virtualinvoke $r9.<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>("DevicePolicyManager", 33, r13, r11);

        goto label4;

     label3:
        $r6 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        $r7 = virtualinvoke $r6.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.app.NotificationManager getNotificationManager()>();

        virtualinvoke $r7.<android.app.NotificationManager: void cancelAsUser(java.lang.String,int,android.os.UserHandle)>("DevicePolicyManager", 33, r11);

     label4:
        return;

     label5:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyManager", "Could not retrieve certificates from KeyChain service", $r10);

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    public java.lang.String installCaCert(android.os.UserHandle, byte[])
    {
        com.android.server.devicepolicy.CertificateMonitor r0;
        java.lang.Object[] $r1;
        java.security.cert.X509Certificate $r2;
        com.android.server.devicepolicy.DevicePolicyManagerService$Injector $r3;
        android.security.IKeyChainService $r4;
        java.lang.Throwable $r5, $r6, $r8, $r9;
        java.lang.Thread $r7;
        android.os.RemoteException $r10;
        android.os.UserHandle r11;
        byte[] r12, r13;
        android.security.KeyChain$KeyChainConnection r14;
        java.lang.String r15;
        java.security.cert.Certificate[] r21;

        r0 := @this: com.android.server.devicepolicy.CertificateMonitor;

        r11 := @parameter0: android.os.UserHandle;

        r12 := @parameter1: byte[];

     label01:
        $r1 = newarray (java.security.cert.Certificate)[1];

        $r2 = staticinvoke <com.android.server.devicepolicy.CertificateMonitor: java.security.cert.X509Certificate parseCert(byte[])>(r12);

        $r1[0] = $r2;

        r21 = (java.security.cert.Certificate[]) $r1;

        r13 = staticinvoke <android.security.Credentials: byte[] convertToPem(java.security.cert.Certificate[])>(r21);

     label02:
        $r3 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        r14 = virtualinvoke $r3.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.security.KeyChain$KeyChainConnection keyChainBindAsUser(android.os.UserHandle)>(r11);

     label03:
        $r4 = virtualinvoke r14.<android.security.KeyChain$KeyChainConnection: android.security.IKeyChainService getService()>();

        r15 = interfaceinvoke $r4.<android.security.IKeyChainService: java.lang.String installCaCertificate(byte[])>(r13);

     label04:
        if r14 == null goto label06;

     label05:
        virtualinvoke r14.<android.security.KeyChain$KeyChainConnection: void close()>();

     label06:
        return r15;

     label07:
        $r8 := @caughtexception;

        if r14 == null goto label12;

     label08:
        virtualinvoke r14.<android.security.KeyChain$KeyChainConnection: void close()>();

     label09:
        goto label12;

     label10:
        $r5 := @caughtexception;

     label11:
        virtualinvoke $r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r5);

     label12:
        throw $r8;

     label13:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyManager", "installCaCertsToKeyChain(): ", $r6);

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r7.<java.lang.Thread: void interrupt()>();

        goto label15;

     label14:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyManager", "installCaCertsToKeyChain(): ", $r10);

     label15:
        return null;

     label16:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyManager", "Problem converting cert", $r9);

        return null;

        catch java.security.cert.CertificateException from label01 to label02 with label16;
        catch java.io.IOException from label01 to label02 with label16;
        catch android.os.RemoteException from label02 to label03 with label14;
        catch java.lang.InterruptedException from label02 to label03 with label13;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch android.os.RemoteException from label05 to label06 with label14;
        catch java.lang.InterruptedException from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch android.os.RemoteException from label11 to label12 with label14;
        catch java.lang.InterruptedException from label11 to label12 with label13;
        catch android.os.RemoteException from label12 to label13 with label14;
        catch java.lang.InterruptedException from label12 to label13 with label13;
    }

    public void lambda$onCertificateApprovalsChanged$0$CertificateMonitor(int)
    {
        com.android.server.devicepolicy.CertificateMonitor r0;
        int i0;
        android.os.UserHandle $r1;

        r0 := @this: com.android.server.devicepolicy.CertificateMonitor;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        specialinvoke r0.<com.android.server.devicepolicy.CertificateMonitor: void updateInstalledCertificates(android.os.UserHandle)>($r1);

        return;
    }

    public void onCertificateApprovalsChanged(int)
    {
        com.android.server.devicepolicy.CertificateMonitor r0;
        int i0;
        com.android.server.devicepolicy._$$Lambda$CertificateMonitor$nzwzuvk_fK7AIlili6jDKrKWLJM $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.devicepolicy.CertificateMonitor;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.devicepolicy.CertificateMonitor: android.os.Handler mHandler>;

        $r1 = new com.android.server.devicepolicy._$$Lambda$CertificateMonitor$nzwzuvk_fK7AIlili6jDKrKWLJM;

        specialinvoke $r1.<com.android.server.devicepolicy._$$Lambda$CertificateMonitor$nzwzuvk_fK7AIlili6jDKrKWLJM: void <init>(com.android.server.devicepolicy.CertificateMonitor,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void uninstallCaCerts(android.os.UserHandle, java.lang.String[])
    {
        com.android.server.devicepolicy.CertificateMonitor r0;
        com.android.server.devicepolicy.DevicePolicyManagerService$Injector $r1;
        int $i0, i3;
        android.security.IKeyChainService $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4, $r6, $r7;
        android.os.RemoteException $r5;
        java.lang.Thread $r8;
        android.os.UserHandle r9;
        java.lang.String[] r10;
        android.security.KeyChain$KeyChainConnection r11;

        r0 := @this: com.android.server.devicepolicy.CertificateMonitor;

        r9 := @parameter0: android.os.UserHandle;

        r10 := @parameter1: java.lang.String[];

     label01:
        $r1 = r0.<com.android.server.devicepolicy.CertificateMonitor: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        r11 = virtualinvoke $r1.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.security.KeyChain$KeyChainConnection keyChainBindAsUser(android.os.UserHandle)>(r9);

     label02:
        i3 = 0;

     label03:
        $i0 = lengthof r10;

        if i3 >= $i0 goto label05;

        $r2 = virtualinvoke r11.<android.security.KeyChain$KeyChainConnection: android.security.IKeyChainService getService()>();

        $r3 = r10[i3];

        interfaceinvoke $r2.<android.security.IKeyChainService: boolean deleteCaCertificate(java.lang.String)>($r3);

     label04:
        i3 = i3 + 1;

        goto label03;

     label05:
        if r11 == null goto label16;

     label06:
        virtualinvoke r11.<android.security.KeyChain$KeyChainConnection: void close()>();

     label07:
        goto label16;

     label08:
        $r4 := @caughtexception;

        if r11 == null goto label13;

     label09:
        virtualinvoke r11.<android.security.KeyChain$KeyChainConnection: void close()>();

     label10:
        goto label13;

     label11:
        $r6 := @caughtexception;

     label12:
        virtualinvoke $r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r6);

     label13:
        throw $r4;

     label14:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyManager", "CaCertUninstaller: ", $r7);

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r8.<java.lang.Thread: void interrupt()>();

        goto label16;

     label15:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyManager", "from CaCertUninstaller: ", $r5);

     label16:
        return;

        catch android.os.RemoteException from label01 to label02 with label15;
        catch java.lang.InterruptedException from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch android.os.RemoteException from label06 to label07 with label15;
        catch java.lang.InterruptedException from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch android.os.RemoteException from label12 to label13 with label15;
        catch java.lang.InterruptedException from label12 to label13 with label14;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.InterruptedException from label13 to label14 with label14;
    }

    public static void <clinit>()
    {
        <com.android.server.devicepolicy.CertificateMonitor: int MONITORING_CERT_NOTIFICATION_ID> = 33;

        <com.android.server.devicepolicy.CertificateMonitor: java.lang.String LOG_TAG> = "DevicePolicyManager";

        return;
    }
}
