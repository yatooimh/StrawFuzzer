public class com.android.server.devicepolicy.DevicePolicyCacheImpl extends android.app.admin.DevicePolicyCache
{
    private final java.lang.Object mLock;
    private final android.util.SparseIntArray mPasswordQuality;
    private final android.util.SparseBooleanArray mScreenCaptureDisabled;

    public void <init>()
    {
        com.android.server.devicepolicy.DevicePolicyCacheImpl r0;
        java.lang.Object $r1;
        android.util.SparseBooleanArray $r2;
        android.util.SparseIntArray $r3;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyCacheImpl;

        specialinvoke r0.<android.app.admin.DevicePolicyCache: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: java.lang.Object mLock> = $r1;

        $r2 = new android.util.SparseBooleanArray;

        specialinvoke $r2.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: android.util.SparseBooleanArray mScreenCaptureDisabled> = $r2;

        $r3 = new android.util.SparseIntArray;

        specialinvoke $r3.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: android.util.SparseIntArray mPasswordQuality> = $r3;

        return;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.devicepolicy.DevicePolicyCacheImpl r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.lang.StringBuilder $r3, $r9;
        android.util.SparseBooleanArray $r5;
        java.lang.String $r6, $r8, $r12, $r14;
        android.util.SparseIntArray $r11;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyCacheImpl;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Device policy cache:");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Screen capture disabled: ");

        $r5 = r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: android.util.SparseBooleanArray mScreenCaptureDisabled>;

        $r6 = virtualinvoke $r5.<android.util.SparseBooleanArray: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Password quality: ");

        $r11 = r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: android.util.SparseIntArray mPasswordQuality>;

        $r12 = virtualinvoke $r11.<android.util.SparseIntArray: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r14);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    public int getPasswordQuality(int)
    {
        com.android.server.devicepolicy.DevicePolicyCacheImpl r0;
        java.lang.Object r1;
        android.util.SparseIntArray $r3;
        java.lang.Throwable $r4;
        int i0, i1;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyCacheImpl;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: android.util.SparseIntArray mPasswordQuality>;

        i1 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int,int)>(i0, 0);

        exitmonitor r1;

     label2:
        return i1;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isScreenCaptureAllowed(int, boolean)
    {
        com.android.server.devicepolicy.DevicePolicyCacheImpl r0;
        int i0;
        java.lang.Object r1;
        android.util.SparseBooleanArray $r3;
        boolean $z0, z1, z2;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyCacheImpl;

        i0 := @parameter0: int;

        z1 := @parameter1: boolean;

        r1 = r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: android.util.SparseBooleanArray mScreenCaptureDisabled>;

        $z0 = virtualinvoke $r3.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z0 == 0 goto label4;

     label2:
        if z1 == 0 goto label3;

        goto label4;

     label3:
        z2 = 0;

        goto label5;

     label4:
        z2 = 1;

     label5:
        exitmonitor r1;

     label6:
        return z2;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void onUserRemoved(int)
    {
        com.android.server.devicepolicy.DevicePolicyCacheImpl r0;
        int i0;
        java.lang.Object r1;
        android.util.SparseBooleanArray $r3;
        android.util.SparseIntArray $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyCacheImpl;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: android.util.SparseBooleanArray mScreenCaptureDisabled>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void delete(int)>(i0);

        $r4 = r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: android.util.SparseIntArray mPasswordQuality>;

        virtualinvoke $r4.<android.util.SparseIntArray: void delete(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setPasswordQuality(int, int)
    {
        com.android.server.devicepolicy.DevicePolicyCacheImpl r0;
        int i0, i1;
        java.lang.Object r1;
        android.util.SparseIntArray $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyCacheImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: android.util.SparseIntArray mPasswordQuality>;

        virtualinvoke $r3.<android.util.SparseIntArray: void put(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setScreenCaptureAllowed(int, boolean)
    {
        com.android.server.devicepolicy.DevicePolicyCacheImpl r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        boolean z0, z1;
        android.util.SparseBooleanArray r3;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyCacheImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.devicepolicy.DevicePolicyCacheImpl: android.util.SparseBooleanArray mScreenCaptureDisabled>;

     label2:
        if z0 != 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        virtualinvoke r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z1);

        exitmonitor r1;

     label5:
        return;

     label6:
        $r2 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
