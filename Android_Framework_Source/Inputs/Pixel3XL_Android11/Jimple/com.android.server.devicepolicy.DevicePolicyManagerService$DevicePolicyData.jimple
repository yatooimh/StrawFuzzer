public class com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData extends java.lang.Object
{
    boolean doNotAskCredentialsOnBoot;
    final android.util.ArraySet mAcceptedCaCertificates;
    boolean mAdminBroadcastPending;
    final java.util.ArrayList mAdminList;
    final android.util.ArrayMap mAdminMap;
    java.util.Set mAffiliationIds;
    boolean mAppsSuspended;
    boolean mCurrentInputMethodSet;
    final android.util.ArrayMap mDelegationMap;
    boolean mDeviceProvisioningConfigApplied;
    int mFailedPasswordAttempts;
    android.os.PersistableBundle mInitBundle;
    long mLastBugReportRequestTime;
    long mLastMaximumTimeToLock;
    long mLastNetworkLogsRetrievalTime;
    long mLastSecurityLogRetrievalTime;
    int mLockTaskFeatures;
    java.util.List mLockTaskPackages;
    java.util.Set mOwnerInstalledCaCerts;
    boolean mPaired;
    int mPasswordOwner;
    long mPasswordTokenHandle;
    boolean mPasswordValidAtLastCheckpoint;
    int mPermissionPolicy;
    final java.util.ArrayList mRemovingAdmins;
    android.content.ComponentName mRestrictionsProvider;
    boolean mSecondaryLockscreenEnabled;
    boolean mStatusBarDisabled;
    java.util.List mUserControlDisabledPackages;
    int mUserHandle;
    int mUserProvisioningState;
    boolean mUserSetupComplete;

    public void <init>(int)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData r0;
        int i0;
        android.util.ArrayMap $r1, $r7;
        java.util.ArrayList $r2, $r3, $r5, $r6;
        android.util.ArraySet $r4, $r8, $r9;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: int mFailedPasswordAttempts> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: boolean mPasswordValidAtLastCheckpoint> = 1;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: int mPasswordOwner> = -1;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: long mLastMaximumTimeToLock> = -1L;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: boolean mUserSetupComplete> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: boolean mPaired> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: boolean mDeviceProvisioningConfigApplied> = 0;

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: android.util.ArrayMap mAdminMap> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: java.util.ArrayList mAdminList> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: java.util.ArrayList mRemovingAdmins> = $r3;

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: android.util.ArraySet mAcceptedCaCertificates> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: java.util.List mLockTaskPackages> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: java.util.List mUserControlDisabledPackages> = $r6;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: int mLockTaskFeatures> = 16;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: boolean mStatusBarDisabled> = 0;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: android.util.ArrayMap mDelegationMap> = $r7;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: boolean doNotAskCredentialsOnBoot> = 0;

        $r8 = new android.util.ArraySet;

        specialinvoke $r8.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: java.util.Set mAffiliationIds> = $r8;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: long mLastSecurityLogRetrievalTime> = -1L;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: long mLastBugReportRequestTime> = -1L;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: long mLastNetworkLogsRetrievalTime> = -1L;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: boolean mCurrentInputMethodSet> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: boolean mSecondaryLockscreenEnabled> = 0;

        $r9 = new android.util.ArraySet;

        specialinvoke $r9.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: java.util.Set mOwnerInstalledCaCerts> = $r9;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: boolean mAdminBroadcastPending> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: android.os.PersistableBundle mInitBundle> = null;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: long mPasswordTokenHandle> = 0L;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: boolean mAppsSuspended> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: int mUserHandle> = i0;

        return;
    }
}
