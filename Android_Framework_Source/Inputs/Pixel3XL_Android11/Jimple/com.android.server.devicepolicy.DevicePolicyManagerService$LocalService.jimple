final class com.android.server.devicepolicy.DevicePolicyManagerService$LocalService extends android.app.admin.DevicePolicyManagerInternal
{
    private java.util.List mWidgetProviderListeners;
    final com.android.server.devicepolicy.DevicePolicyManagerService this$0;

    void <init>(com.android.server.devicepolicy.DevicePolicyManagerService)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        com.android.server.devicepolicy.DevicePolicyManagerService r1;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        r1 := @parameter0: com.android.server.devicepolicy.DevicePolicyManagerService;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0> = r1;

        specialinvoke r0.<android.app.admin.DevicePolicyManagerInternal: void <init>()>();

        return;
    }

    static void access$2700(com.android.server.devicepolicy.DevicePolicyManagerService$LocalService, int, java.util.List)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        int i0;
        java.util.List r1;

        r0 := @parameter0: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        specialinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: void notifyCrossProfileProvidersChanged(int,java.util.List)>(i0, r1);

        return;
    }

    private boolean checkCrossProfilePackagePermissions(java.lang.String, int, boolean)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        java.lang.String r1, $r8;
        int i0;
        java.lang.Object $r2, $r4;
        android.content.pm.PackageManagerInternal $r3;
        boolean $z0, $z1, z2, z3;
        android.content.pm.CrossProfileAppsInternal $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.Object[] $r7;
        com.android.server.pm.parsing.pkg.AndroidPackage r9;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z2 := @parameter2: boolean;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r3 = (android.content.pm.PackageManagerInternal) $r2;

        r9 = virtualinvoke $r3.<android.content.pm.PackageManagerInternal: com.android.server.pm.parsing.pkg.AndroidPackage getPackage(java.lang.String)>(r1);

        if r9 == null goto label6;

        $z0 = interfaceinvoke r9.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isCrossProfile()>();

        if $z0 != 0 goto label1;

        goto label6;

     label1:
        if z2 != 0 goto label2;

        return 1;

     label2:
        $z1 = specialinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: boolean isPackageEnabled(java.lang.String,int)>(r1, i0);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/CrossProfileAppsInternal;");

        $r5 = (android.content.pm.CrossProfileAppsInternal) $r4;

        z3 = virtualinvoke $r5.<android.content.pm.CrossProfileAppsInternal: boolean verifyPackageHasInteractAcrossProfilePermission(java.lang.String,int)>(r1, i0);

     label4:
        return z3;

     label5:
        $r6 := @caughtexception;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r1;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot find the package %s to check for permissions.", $r7);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DevicePolicyManager", $r8);

        return 0;

     label6:
        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }

    private boolean checkModifyQuietModePermission(java.lang.String, int)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        java.lang.String r1, $r5, $r10;
        com.android.server.devicepolicy.DevicePolicyManagerService $r2;
        com.android.server.devicepolicy.DevicePolicyManagerService$Injector $r3;
        android.content.pm.ApplicationInfo $r7, r12;
        int $i0, i2, i3;
        android.content.pm.PackageManager$NameNotFoundException $r8;
        java.lang.Object[] $r9;
        boolean z0;
        android.content.pm.PackageManager r11;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        r1 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        z0 = 1;

     label1:
        $r2 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r3 = $r2.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        r11 = virtualinvoke $r3.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.content.pm.PackageManager getPackageManager()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (java.lang.String) r1;

        r12 = virtualinvoke r11.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,int)>($r5, 0, i2);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r12);

        $r7 = (android.content.pm.ApplicationInfo) r12;

        $i0 = $r7.<android.content.pm.ApplicationInfo: int uid>;

        i3 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>("android.permission.MODIFY_QUIET_MODE", $i0, -1, 1);

     label2:
        if i3 != 0 goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        return z0;

     label5:
        $r8 := @caughtexception;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r1;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot find the package %s to check for permissions.", $r9);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DevicePolicyManager", $r10);

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
    }

    private boolean isPackageEnabled(java.lang.String, int)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        int i0, i1;
        long l2;
        com.android.server.devicepolicy.DevicePolicyManagerService $r1;
        com.android.server.devicepolicy.DevicePolicyManagerService$Injector $r2;
        android.content.pm.PackageManagerInternal $r3;
        android.content.pm.ApplicationInfo $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.content.pm.PackageInfo r7;
        boolean z0, z1;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r2 = $r1.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        $r3 = virtualinvoke $r2.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.content.pm.PackageManagerInternal getPackageManagerInternal()>();

        r7 = virtualinvoke $r3.<android.content.pm.PackageManagerInternal: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int,int)>(r6, 786432, i1, i0);

     label2:
        if r7 == null goto label5;

     label3:
        $r4 = r7.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        z0 = $r4.<android.content.pm.ApplicationInfo: boolean enabled>;

     label4:
        if z0 == 0 goto label5;

        z1 = 1;

        goto label6;

     label5:
        z1 = 0;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return z1;

     label7:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    static android.content.pm.PackageInfo lambda$getPrintingDisabledReasonForUser$1(android.content.pm.PackageManager, java.lang.String) throws java.lang.Exception
    {
        java.lang.String r0;
        android.content.pm.PackageManager$NameNotFoundException $r1;
        android.content.pm.PackageManager r2;
        android.content.pm.PackageInfo r3;

        r2 := @parameter0: android.content.pm.PackageManager;

        r0 := @parameter1: java.lang.String;

     label1:
        r3 = virtualinvoke r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r0, 0);

     label2:
        return r3;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyManager", "getPackageInfo error", $r1);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private void notifyCrossProfileProvidersChanged(int, java.util.List)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        int i0, i1, i2;
        java.lang.Object r1, $r5;
        java.util.ArrayList r2;
        com.android.server.devicepolicy.DevicePolicyManagerService $r3;
        java.util.List $r4, r8;
        android.app.admin.DevicePolicyManagerInternal$OnCrossProfileWidgetProvidersChangeListener $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        i0 := @parameter0: int;

        r8 := @parameter1: java.util.List;

        $r3 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        r1 = virtualinvoke $r3.<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.Object getLockObject()>();

        entermonitor r1;

     label1:
        r2 = new java.util.ArrayList;

        $r4 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: java.util.List mWidgetProviderListeners>;

        specialinvoke r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        exitmonitor r1;

     label2:
        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        i2 = 0;

     label3:
        if i2 >= i1 goto label4;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (android.app.admin.DevicePolicyManagerInternal$OnCrossProfileWidgetProvidersChangeListener) $r5;

        interfaceinvoke $r6.<android.app.admin.DevicePolicyManagerInternal$OnCrossProfileWidgetProvidersChangeListener: void onCrossProfileWidgetProvidersChanged(int,java.util.List)>(i0, r8);

        i2 = i2 + 1;

        goto label3;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void addOnCrossProfileWidgetProvidersChangeListener(android.app.admin.DevicePolicyManagerInternal$OnCrossProfileWidgetProvidersChangeListener)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        java.lang.Object r1;
        java.util.ArrayList r2;
        com.android.server.devicepolicy.DevicePolicyManagerService $r3;
        java.util.List $r4, $r5, $r6;
        boolean $z0;
        java.lang.Throwable $r7;
        android.app.admin.DevicePolicyManagerInternal$OnCrossProfileWidgetProvidersChangeListener r8;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        r8 := @parameter0: android.app.admin.DevicePolicyManagerInternal$OnCrossProfileWidgetProvidersChangeListener;

        $r3 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        r1 = virtualinvoke $r3.<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.Object getLockObject()>();

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: java.util.List mWidgetProviderListeners>;

        if $r4 != null goto label2;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: java.util.List mWidgetProviderListeners> = r2;

     label2:
        $r5 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: java.util.List mWidgetProviderListeners>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r8);

        if $z0 != 0 goto label3;

        $r6 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: java.util.List mWidgetProviderListeners>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r8);

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void broadcastIntentToCrossProfileManifestReceiversAsUser(android.content.Intent, android.os.UserHandle, boolean)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        android.content.Intent r1, $r19, r29, r30;
        boolean z0, $z1, $z2, $z3;
        int i0, $i2;
        java.util.Iterator r2;
        java.lang.Object[] $r5, $r14, $r23;
        java.lang.String $r6, $r7, $r15, $r16, $r24, $r25, r28;
        com.android.server.devicepolicy.DevicePolicyManagerService $r8, $r20;
        android.content.pm.IPackageManager $r9;
        android.content.pm.ParceledListSlice $r10;
        java.util.List $r11;
        java.lang.Object $r12;
        android.content.pm.ComponentInfo $r13, $r17;
        android.content.ComponentName $r18;
        android.content.Context $r21;
        android.os.RemoteException $r22;
        android.os.UserHandle r26;
        android.content.pm.ResolveInfo r27;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        r1 := @parameter0: android.content.Intent;

        r26 := @parameter1: android.os.UserHandle;

        z0 := @parameter2: boolean;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r26);

        i0 = virtualinvoke r26.<android.os.UserHandle: int getIdentifier()>();

        $r5 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Sending %s broadcast to manifest receivers.", $r5);

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("DevicePolicyManager", $r7);

     label1:
        $r8 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r9 = $r8.<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.pm.IPackageManager mIPackageManager>;

        $i2 = virtualinvoke r26.<android.os.UserHandle: int getIdentifier()>();

        $r10 = interfaceinvoke $r9.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r1, null, 1024, $i2);

        $r11 = virtualinvoke $r10.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        r2 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r27 = (android.content.pm.ResolveInfo) $r12;

        $r13 = virtualinvoke r27.<android.content.pm.ResolveInfo: android.content.pm.ComponentInfo getComponentInfo()>();

        r28 = $r13.<android.content.pm.ComponentInfo: java.lang.String packageName>;

        $z2 = specialinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: boolean checkCrossProfilePackagePermissions(java.lang.String,int,boolean)>(r28, i0, z0);

        if $z2 != 0 goto label3;

        $z3 = specialinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: boolean checkModifyQuietModePermission(java.lang.String,int)>(r28, i0);

        if $z3 == 0 goto label4;

     label3:
        $r14 = newarray (java.lang.Object)[2];

        $r15 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $r14[0] = $r15;

        $r14[1] = r28;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Sending %s broadcast to %s.", $r14);

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("DevicePolicyManager", $r16);

        r29 = new android.content.Intent;

        specialinvoke r29.<android.content.Intent: void <init>(android.content.Intent)>(r1);

        $r17 = virtualinvoke r27.<android.content.pm.ResolveInfo: android.content.pm.ComponentInfo getComponentInfo()>();

        $r18 = virtualinvoke $r17.<android.content.pm.ComponentInfo: android.content.ComponentName getComponentName()>();

        $r19 = virtualinvoke r29.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r18);

        r30 = virtualinvoke $r19.<android.content.Intent: android.content.Intent addFlags(int)>(16777216);

        $r20 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r21 = $r20.<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Context mContext>;

        virtualinvoke $r21.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r30, r26);

     label4:
        goto label2;

     label5:
        goto label7;

     label6:
        $r22 := @caughtexception;

        $r23 = newarray (java.lang.Object)[2];

        $r24 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $r23[0] = $r24;

        $r23[1] = $r22;

        $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot get list of broadcast receivers for %s because: %s.", $r23);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DevicePolicyManager", $r25);

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public boolean canSilentlyInstallPackage(java.lang.String, int)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        java.lang.String r1;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return 0;

     label1:
        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $z0 = virtualinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: boolean isUserAffiliatedWithDevice(int)>($i1);

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: boolean isActiveAdminWithPolicy(int,int)>(i0, -1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public android.content.Intent createShowAdminSupportIntent(int, boolean)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        int i0, $i1;
        boolean z0;
        com.android.server.devicepolicy.DevicePolicyManagerService $r1, $r3, $r5, $r11, $r13;
        com.android.server.devicepolicy.Owners $r2, $r4;
        android.content.Intent $r6, $r12, $r14;
        java.lang.Object $r7, $r9;
        java.lang.Integer $r8;
        android.content.ComponentName $r10, r15;
        android.util.Pair r16;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r2 = $r1.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.Owners mOwners>;

        r15 = virtualinvoke $r2.<com.android.server.devicepolicy.Owners: android.content.ComponentName getProfileOwnerComponent(int)>(i0);

        if r15 == null goto label1;

        $r13 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r14 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Intent access$3300(com.android.server.devicepolicy.DevicePolicyManagerService,android.content.ComponentName,int)>($r13, r15, i0);

        return $r14;

     label1:
        $r3 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r4 = $r3.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.Owners mOwners>;

        r16 = virtualinvoke $r4.<com.android.server.devicepolicy.Owners: android.util.Pair getDeviceOwnerUserIdAndComponent()>();

        if r16 == null goto label2;

        $r7 = r16.<android.util.Pair: java.lang.Object first>;

        $r8 = (java.lang.Integer) $r7;

        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        if $i1 != i0 goto label2;

        $r11 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r9 = r16.<android.util.Pair: java.lang.Object second>;

        $r10 = (android.content.ComponentName) $r9;

        $r12 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Intent access$3300(com.android.server.devicepolicy.DevicePolicyManagerService,android.content.ComponentName,int)>($r11, $r10, i0);

        return $r12;

     label2:
        if z0 == 0 goto label3;

        $r5 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r6 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Intent access$3300(com.android.server.devicepolicy.DevicePolicyManagerService,android.content.ComponentName,int)>($r5, null, i0);

        return $r6;

     label3:
        return null;
    }

    public android.content.Intent createUserRestrictionSupportIntent(int, java.lang.String)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        long l0;
        int i1, $i2, $i3, i4, i5;
        com.android.server.devicepolicy.DevicePolicyManagerService $r1, $r3, $r6, $r10, $r12, $r17, $r19, $r21, $r23, $r24, $r26, $r27, $r30, $r40;
        com.android.server.devicepolicy.DevicePolicyManagerService$Injector $r2, $r7, $r11, $r20, $r25, $r28, $r31, $r41;
        android.os.UserManager $r4;
        android.os.UserHandle $r5, $r9;
        boolean $z0;
        java.lang.Object $r8, $r14, $r15;
        com.android.server.devicepolicy.Owners $r13, $r22;
        java.lang.Integer $r16;
        android.content.ComponentName $r18, r36;
        java.lang.Throwable $r29;
        java.lang.String r32;
        java.util.List r33;
        android.content.Intent r34, r37, r39;
        android.os.UserManager$EnforcingUser r35;
        android.util.Pair r38;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        i4 := @parameter0: int;

        r32 := @parameter1: java.lang.String;

        $r1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r2 = $r1.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        l0 = virtualinvoke $r2.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: long binderClearCallingIdentity()>();

     label01:
        $r3 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r4 = $r3.<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.UserManager mUserManager>;

        $r5 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i4);

        r33 = virtualinvoke $r4.<android.os.UserManager: java.util.List getUserRestrictionSources(java.lang.String,android.os.UserHandle)>(r32, $r5);

     label02:
        if r33 == null goto label22;

     label03:
        $z0 = interfaceinvoke r33.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label05;

     label04:
        goto label22;

     label05:
        $i2 = interfaceinvoke r33.<java.util.List: int size()>();

        if $i2 <= 1 goto label07;

        $r26 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        r34 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Intent access$3300(com.android.server.devicepolicy.DevicePolicyManagerService,android.content.ComponentName,int)>($r26, null, i4);

     label06:
        $r27 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r28 = $r27.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        virtualinvoke $r28.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: void binderRestoreCallingIdentity(long)>(l0);

        return r34;

     label07:
        $r8 = interfaceinvoke r33.<java.util.List: java.lang.Object get(int)>(0);

        r35 = (android.os.UserManager$EnforcingUser) $r8;

        i1 = virtualinvoke r35.<android.os.UserManager$EnforcingUser: int getUserRestrictionSource()>();

        $r9 = virtualinvoke r35.<android.os.UserManager$EnforcingUser: android.os.UserHandle getUserHandle()>();

        i5 = virtualinvoke $r9.<android.os.UserHandle: int getIdentifier()>();

     label08:
        if i1 != 4 goto label14;

     label09:
        $r21 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r22 = $r21.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.Owners mOwners>;

        r36 = virtualinvoke $r22.<com.android.server.devicepolicy.Owners: android.content.ComponentName getProfileOwnerComponent(int)>(i5);

     label10:
        if r36 == null goto label13;

     label11:
        $r23 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        r37 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Intent access$3300(com.android.server.devicepolicy.DevicePolicyManagerService,android.content.ComponentName,int)>($r23, r36, i5);

     label12:
        $r24 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r25 = $r24.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        virtualinvoke $r25.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: void binderRestoreCallingIdentity(long)>(l0);

        return r37;

     label13:
        goto label21;

     label14:
        if i1 != 2 goto label20;

     label15:
        $r12 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r13 = $r12.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.Owners mOwners>;

        r38 = virtualinvoke $r13.<com.android.server.devicepolicy.Owners: android.util.Pair getDeviceOwnerUserIdAndComponent()>();

     label16:
        if r38 == null goto label19;

     label17:
        $r17 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r14 = r38.<android.util.Pair: java.lang.Object second>;

        $r18 = (android.content.ComponentName) $r14;

        $r15 = r38.<android.util.Pair: java.lang.Object first>;

        $r16 = (java.lang.Integer) $r15;

        $i3 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        r39 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Intent access$3300(com.android.server.devicepolicy.DevicePolicyManagerService,android.content.ComponentName,int)>($r17, $r18, $i3);

     label18:
        $r19 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r20 = $r19.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        virtualinvoke $r20.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: void binderRestoreCallingIdentity(long)>(l0);

        return r39;

     label19:
        goto label21;

     label20:
        if i1 != 1 goto label21;

        $r10 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r11 = $r10.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        virtualinvoke $r11.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: void binderRestoreCallingIdentity(long)>(l0);

        return null;

     label21:
        $r40 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r41 = $r40.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        virtualinvoke $r41.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: void binderRestoreCallingIdentity(long)>(l0);

        return null;

     label22:
        $r6 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r7 = $r6.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        virtualinvoke $r7.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: void binderRestoreCallingIdentity(long)>(l0);

        return null;

     label23:
        $r29 := @caughtexception;

        $r30 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r31 = $r30.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        virtualinvoke $r31.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: void binderRestoreCallingIdentity(long)>(l0);

        throw $r29;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
    }

    public java.util.List getAllCrossProfilePackages()
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        com.android.server.devicepolicy.DevicePolicyManagerService $r1;
        java.util.List $r2;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        $r1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getAllCrossProfilePackages()>();

        return $r2;
    }

    public java.util.List getCrossProfileWidgetProviders(int)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        int i0;
        java.lang.Object r1, $r10;
        com.android.server.devicepolicy.DevicePolicyManagerService $r2, $r3, $r5, $r7;
        com.android.server.devicepolicy.Owners $r4, $r6;
        com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData $r8;
        android.util.ArrayMap $r9;
        java.util.List $r11, $r12, r14, r16, r18, r19;
        boolean $z0;
        java.lang.Throwable $r13;
        android.content.ComponentName r15;
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r17;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        r1 = virtualinvoke $r2.<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.Object getLockObject()>();

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r4 = $r3.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.Owners mOwners>;

        if $r4 != null goto label03;

        r14 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        exitmonitor r1;

     label02:
        return r14;

     label03:
        $r5 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r6 = $r5.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.Owners mOwners>;

        r15 = virtualinvoke $r6.<com.android.server.devicepolicy.Owners: android.content.ComponentName getProfileOwnerComponent(int)>(i0);

     label04:
        if r15 != null goto label07;

     label05:
        r16 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        exitmonitor r1;

     label06:
        return r16;

     label07:
        $r7 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r8 = virtualinvoke $r7.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData getUserDataUnchecked(int)>(i0);

        $r9 = $r8.<com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData: android.util.ArrayMap mAdminMap>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r15);

        r17 = (com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin) $r10;

     label08:
        if r17 == null goto label13;

     label09:
        $r11 = r17.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List crossProfileWidgetProviders>;

        if $r11 == null goto label13;

        $r12 = r17.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List crossProfileWidgetProviders>;

        $z0 = interfaceinvoke $r12.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label11;

     label10:
        goto label13;

     label11:
        r18 = r17.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List crossProfileWidgetProviders>;

        exitmonitor r1;

     label12:
        return r18;

     label13:
        r19 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        exitmonitor r1;

     label14:
        return r19;

     label15:
        $r13 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public java.util.List getDefaultCrossProfilePackages()
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        com.android.server.devicepolicy.DevicePolicyManagerService $r1;
        java.util.List $r2;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        $r1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getDefaultCrossProfilePackages()>();

        return $r2;
    }

    protected android.app.admin.DevicePolicyCache getDevicePolicyCache()
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        com.android.server.devicepolicy.DevicePolicyManagerService $r1;
        com.android.server.devicepolicy.DevicePolicyCacheImpl $r2;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        $r1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r2 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyCacheImpl access$3500(com.android.server.devicepolicy.DevicePolicyManagerService)>($r1);

        return $r2;
    }

    protected android.app.admin.DeviceStateCache getDeviceStateCache()
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        com.android.server.devicepolicy.DevicePolicyManagerService $r1;
        com.android.server.devicepolicy.DeviceStateCacheImpl $r2;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        $r1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r2 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DeviceStateCacheImpl access$3600(com.android.server.devicepolicy.DevicePolicyManagerService)>($r1);

        return $r2;
    }

    public java.lang.CharSequence getPrintingDisabledReasonForUser(int)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        int i0;
        java.lang.Object r1, $r13;
        com.android.server.devicepolicy.DevicePolicyManagerService$Injector r2, $r11;
        com.android.server.devicepolicy._$$Lambda$DevicePolicyManagerService$LocalService$ba6AfSyqJmx_GvlIKBK_H5Jsypg r3;
        com.android.server.devicepolicy.DevicePolicyManagerService $r4, $r5, $r8, $r10, $r12, $r18;
        android.os.UserManager $r6;
        android.os.UserHandle $r7;
        boolean $z0;
        com.android.server.devicepolicy.Owners $r9, $r19;
        android.app.ActivityThread $r14;
        android.app.ContextImpl $r15;
        android.content.res.Resources $r16;
        java.lang.Object[] $r17;
        java.lang.Throwable $r20;
        java.lang.String r21, r22, r27;
        android.content.pm.PackageManager r23;
        android.content.pm.PackageInfo r24;
        android.content.pm.ApplicationInfo r25;
        java.lang.CharSequence r26;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        r1 = virtualinvoke $r4.<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.Object getLockObject()>();

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r6 = $r5.<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.UserManager mUserManager>;

        $r7 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        $z0 = virtualinvoke $r6.<android.os.UserManager: boolean hasUserRestriction(java.lang.String,android.os.UserHandle)>("no_printing", $r7);

        if $z0 != 0 goto label03;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DevicePolicyManager", "printing is enabled");

        exitmonitor r1;

     label02:
        return null;

     label03:
        $r8 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r9 = $r8.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.Owners mOwners>;

        r21 = virtualinvoke $r9.<com.android.server.devicepolicy.Owners: java.lang.String getProfileOwnerPackage(int)>(i0);

     label04:
        r22 = r21;

        if r21 != null goto label06;

     label05:
        $r18 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r19 = $r18.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.Owners mOwners>;

        r22 = virtualinvoke $r19.<com.android.server.devicepolicy.Owners: java.lang.String getDeviceOwnerPackageName()>();

     label06:
        $r10 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r11 = $r10.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        r23 = virtualinvoke $r11.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: android.content.pm.PackageManager getPackageManager()>();

        $r12 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        r2 = $r12.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        r3 = new com.android.server.devicepolicy._$$Lambda$DevicePolicyManagerService$LocalService$ba6AfSyqJmx_GvlIKBK_H5Jsypg;

        specialinvoke r3.<com.android.server.devicepolicy._$$Lambda$DevicePolicyManagerService$LocalService$ba6AfSyqJmx_GvlIKBK_H5Jsypg: void <init>(android.content.pm.PackageManager,java.lang.String)>(r23, r22);

        $r13 = virtualinvoke r2.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: java.lang.Object binderWithCleanCallingIdentity(com.android.internal.util.FunctionalUtils$ThrowingSupplier)>(r3);

        r24 = (android.content.pm.PackageInfo) $r13;

     label07:
        if r24 != null goto label10;

     label08:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DevicePolicyManager", "packageInfo is inexplicably null");

        exitmonitor r1;

     label09:
        return null;

     label10:
        r25 = r24.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label11:
        if r25 != null goto label14;

     label12:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DevicePolicyManager", "appInfo is inexplicably null");

        exitmonitor r1;

     label13:
        return null;

     label14:
        r26 = virtualinvoke r23.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>(r25);

     label15:
        if r26 != null goto label18;

     label16:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DevicePolicyManager", "appLabel is inexplicably null");

        exitmonitor r1;

     label17:
        return null;

     label18:
        $r14 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r15 = virtualinvoke $r14.<android.app.ActivityThread: android.app.ContextImpl getSystemUiContext()>();

        $r16 = virtualinvoke $r15.<android.content.Context: android.content.res.Resources getResources()>();

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = r26;

        r27 = virtualinvoke $r16.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17041087, $r17);

        exitmonitor r1;

     label19:
        return r27;

     label20:
        $r20 := @caughtexception;

     label21:
        exitmonitor r1;

     label22:
        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    public android.content.ComponentName getProfileOwnerAsUser(int)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        int i0;
        com.android.server.devicepolicy.DevicePolicyManagerService $r1;
        android.content.ComponentName $r2;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getProfileOwnerAsUser(int)>(i0);

        return $r2;
    }

    public boolean isActiveAdminWithPolicy(int, int)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        int i0, i1;
        java.lang.Object r1;
        com.android.server.devicepolicy.DevicePolicyManagerService $r3, $r4;
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin $r5;
        java.lang.Throwable $r6;
        boolean z0;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        r1 = virtualinvoke $r3.<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.Object getLockObject()>();

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r5 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin access$3200(com.android.server.devicepolicy.DevicePolicyManagerService,android.content.ComponentName,int,int)>($r4, null, i1, i0);

        if $r5 == null goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isActiveSupervisionApp(int)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        com.android.server.devicepolicy.DevicePolicyManagerService $r2, $r3, $r4;
        android.content.Context $r5;
        android.content.res.Resources $r6;
        android.app.admin.DeviceAdminInfo $r7;
        android.content.ComponentName $r8, r12;
        java.lang.Throwable $r9;
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r10;
        java.lang.String r11;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        r1 = virtualinvoke $r2.<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.Object getLockObject()>();

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        r10 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin access$3200(com.android.server.devicepolicy.DevicePolicyManagerService,android.content.ComponentName,int,int)>($r3, null, -1, i0);

     label02:
        if r10 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return 0;

     label05:
        $r4 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r5 = $r4.<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        r11 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>(17039870);

     label06:
        if r11 != null goto label09;

     label07:
        exitmonitor r1;

     label08:
        return 0;

     label09:
        r12 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r11);

        $r7 = r10.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info>;

        $r8 = virtualinvoke $r7.<android.app.admin.DeviceAdminInfo: android.content.ComponentName getComponent()>();

        z0 = virtualinvoke $r8.<android.content.ComponentName: boolean equals(java.lang.Object)>(r12);

        exitmonitor r1;

     label10:
        return z0;

     label11:
        $r9 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public boolean isUserAffiliatedWithDevice(int)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        int i0;
        com.android.server.devicepolicy.DevicePolicyManagerService $r1;
        boolean $z0;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $z0 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: boolean access$1100(com.android.server.devicepolicy.DevicePolicyManagerService,int)>($r1, i0);

        return $z0;
    }

    public void lambda$reportSeparateProfileChallengeChanged$0$DevicePolicyManagerService$LocalService(int) throws java.lang.Exception
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.devicepolicy.DevicePolicyManagerService $r3, $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        r1 = virtualinvoke $r3.<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.Object getLockObject()>();

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: void access$3700(com.android.server.devicepolicy.DevicePolicyManagerService,int)>($r4, i0);

        $r5 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: void access$3800(com.android.server.devicepolicy.DevicePolicyManagerService,int)>($r5, i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void reportSeparateProfileChallengeChanged(int)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$LocalService r0;
        int i0;
        com.android.server.devicepolicy.DevicePolicyManagerService $r1, $r5;
        com.android.server.devicepolicy._$$Lambda$DevicePolicyManagerService$LocalService$YxQa4ZcUPWKs76meOLw1c_tn1OU $r2;
        com.android.server.devicepolicy.DevicePolicyManagerService$Injector $r3;
        android.app.admin.DevicePolicyEventLogger $r4, $r6;
        boolean $z0;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r3 = $r1.<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$Injector mInjector>;

        $r2 = new com.android.server.devicepolicy._$$Lambda$DevicePolicyManagerService$LocalService$YxQa4ZcUPWKs76meOLw1c_tn1OU;

        specialinvoke $r2.<com.android.server.devicepolicy._$$Lambda$DevicePolicyManagerService$LocalService$YxQa4ZcUPWKs76meOLw1c_tn1OU: void <init>(com.android.server.devicepolicy.DevicePolicyManagerService$LocalService,int)>(r0, i0);

        virtualinvoke $r3.<com.android.server.devicepolicy.DevicePolicyManagerService$Injector: void binderWithCleanCallingIdentity(com.android.internal.util.FunctionalUtils$ThrowingRunnable)>($r2);

        $r4 = staticinvoke <android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger createEvent(int)>(110);

        $r5 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$LocalService: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $z0 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: boolean access$3400(com.android.server.devicepolicy.DevicePolicyManagerService,int)>($r5, i0);

        $r6 = virtualinvoke $r4.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setBoolean(boolean)>($z0);

        virtualinvoke $r6.<android.app.admin.DevicePolicyEventLogger: void write()>();

        return;
    }
}
