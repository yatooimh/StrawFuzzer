final class com.android.server.devicepolicy.OverlayPackagesProvider$DefaultInjector extends java.lang.Object implements com.android.server.devicepolicy.OverlayPackagesProvider$Injector
{

    private void <init>()
    {
        com.android.server.devicepolicy.OverlayPackagesProvider$DefaultInjector r0;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider$DefaultInjector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.devicepolicy.OverlayPackagesProvider$1)
    {
        com.android.server.devicepolicy.OverlayPackagesProvider$DefaultInjector r0;
        com.android.server.devicepolicy.OverlayPackagesProvider$1 r1;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider$DefaultInjector;

        r1 := @parameter0: com.android.server.devicepolicy.OverlayPackagesProvider$1;

        specialinvoke r0.<com.android.server.devicepolicy.OverlayPackagesProvider$DefaultInjector: void <init>()>();

        return;
    }

    public java.util.List getInputMethodListAsUser(int)
    {
        com.android.server.devicepolicy.OverlayPackagesProvider$DefaultInjector r0;
        int i0;
        com.android.server.inputmethod.InputMethodManagerInternal $r1;
        java.util.List $r2;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider$DefaultInjector;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.android.server.inputmethod.InputMethodManagerInternal: com.android.server.inputmethod.InputMethodManagerInternal get()>();

        $r2 = virtualinvoke $r1.<com.android.server.inputmethod.InputMethodManagerInternal: java.util.List getInputMethodListAsUser(int)>(i0);

        return $r2;
    }
}
