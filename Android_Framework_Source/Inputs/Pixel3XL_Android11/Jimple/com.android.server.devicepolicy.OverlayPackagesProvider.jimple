public class com.android.server.devicepolicy.OverlayPackagesProvider extends java.lang.Object
{
    protected static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final com.android.server.devicepolicy.OverlayPackagesProvider$Injector mInjector;
    private final android.content.pm.PackageManager mPm;

    public void <init>(android.content.Context)
    {
        com.android.server.devicepolicy.OverlayPackagesProvider r0;
        android.content.Context r1;
        com.android.server.devicepolicy.OverlayPackagesProvider$DefaultInjector $r2;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider;

        r1 := @parameter0: android.content.Context;

        $r2 = new com.android.server.devicepolicy.OverlayPackagesProvider$DefaultInjector;

        specialinvoke $r2.<com.android.server.devicepolicy.OverlayPackagesProvider$DefaultInjector: void <init>(com.android.server.devicepolicy.OverlayPackagesProvider$1)>(null);

        specialinvoke r0.<com.android.server.devicepolicy.OverlayPackagesProvider: void <init>(android.content.Context,com.android.server.devicepolicy.OverlayPackagesProvider$Injector)>(r1, $r2);

        return;
    }

    void <init>(android.content.Context, com.android.server.devicepolicy.OverlayPackagesProvider$Injector)
    {
        com.android.server.devicepolicy.OverlayPackagesProvider r0;
        android.content.Context r1;
        com.android.server.devicepolicy.OverlayPackagesProvider$Injector r2, $r7;
        android.content.pm.PackageManager $r3, $r5;
        java.lang.Object $r4, $r6;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.devicepolicy.OverlayPackagesProvider$Injector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.devicepolicy.OverlayPackagesProvider: android.content.Context mContext> = r1;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (android.content.pm.PackageManager) $r4;

        r0.<com.android.server.devicepolicy.OverlayPackagesProvider: android.content.pm.PackageManager mPm> = $r5;

        $r6 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r7 = (com.android.server.devicepolicy.OverlayPackagesProvider$Injector) $r6;

        r0.<com.android.server.devicepolicy.OverlayPackagesProvider: com.android.server.devicepolicy.OverlayPackagesProvider$Injector mInjector> = $r7;

        return;
    }

    private java.util.Set getDisallowedApps(java.lang.String)
    {
        com.android.server.devicepolicy.OverlayPackagesProvider r0;
        java.lang.String r1;
        android.util.ArraySet $r3;
        java.util.Set $r4, $r5;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider;

        r1 := @parameter0: java.lang.String;

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        $r4 = specialinvoke r0.<com.android.server.devicepolicy.OverlayPackagesProvider: java.util.Set getDisallowedAppsSet(java.lang.String)>(r1);

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>($r4);

        $r5 = specialinvoke r0.<com.android.server.devicepolicy.OverlayPackagesProvider: java.util.Set getVendorDisallowedAppsSet(java.lang.String)>(r1);

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        return $r3;
    }

    private java.util.Set getDisallowedAppsSet(java.lang.String)
    {
        com.android.server.devicepolicy.OverlayPackagesProvider r0;
        java.lang.String r1, $r8;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r7;
        int i0, i2;
        byte b1;
        android.util.ArraySet $r9;
        android.content.Context $r10;
        android.content.res.Resources $r11;
        java.lang.String[] $r12;
        java.util.List $r13;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i0 == -920528692 goto label04;

        if i0 == -514404415 goto label03;

        if i0 == -340845101 goto label02;

     label01:
        goto label05;

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.PROVISION_MANAGED_PROFILE");

        if $z2 == 0 goto label01;

        b1 = 1;

        goto label06;

     label03:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.PROVISION_MANAGED_USER");

        if $z1 == 0 goto label01;

        b1 = 0;

        goto label06;

     label04:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.PROVISION_MANAGED_DEVICE");

        if $z0 == 0 goto label01;

        b1 = 2;

        goto label06;

     label05:
        b1 = -1;

     label06:
        if b1 == 0 goto label09;

        if b1 == 1 goto label08;

        if b1 != 2 goto label07;

        i2 = 17236098;

        goto label10;

     label07:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provisioning type ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported.");

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label08:
        i2 = 17236099;

        goto label10;

     label09:
        i2 = 17236100;

     label10:
        $r9 = new android.util.ArraySet;

        $r10 = r0.<com.android.server.devicepolicy.OverlayPackagesProvider: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i2);

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);

        specialinvoke $r9.<android.util.ArraySet: void <init>(java.util.Collection)>($r13);

        return $r9;
    }

    private java.util.Set getLaunchableApps(int)
    {
        com.android.server.devicepolicy.OverlayPackagesProvider r0;
        int i0;
        android.content.Intent $r1;
        android.content.pm.PackageManager $r3;
        android.util.ArraySet $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.content.pm.ResolveInfo $r6;
        android.content.pm.ActivityInfo $r7;
        java.lang.String $r8;
        java.util.List r10;
        java.util.Iterator r12;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider;

        i0 := @parameter0: int;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        virtualinvoke $r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER");

        $r3 = r0.<com.android.server.devicepolicy.OverlayPackagesProvider: android.content.pm.PackageManager mPm>;

        r10 = virtualinvoke $r3.<android.content.pm.PackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>($r1, 795136, i0);

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        r12 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.content.pm.ResolveInfo) $r5;

        $r7 = $r6.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r8 = $r7.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return $r4;
    }

    private java.util.Set getRequiredApps(java.lang.String, java.lang.String)
    {
        com.android.server.devicepolicy.OverlayPackagesProvider r0;
        java.lang.String r1, r2;
        android.util.ArraySet $r4;
        java.util.Set $r5, $r6;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        $r5 = specialinvoke r0.<com.android.server.devicepolicy.OverlayPackagesProvider: java.util.Set getRequiredAppsSet(java.lang.String)>(r1);

        interfaceinvoke $r4.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        $r6 = specialinvoke r0.<com.android.server.devicepolicy.OverlayPackagesProvider: java.util.Set getVendorRequiredAppsSet(java.lang.String)>(r1);

        interfaceinvoke $r4.<java.util.Set: boolean addAll(java.util.Collection)>($r6);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r2);

        return $r4;
    }

    private java.util.Set getRequiredAppsSet(java.lang.String)
    {
        com.android.server.devicepolicy.OverlayPackagesProvider r0;
        java.lang.String r1, $r8;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r7;
        int i0, i2;
        byte b1;
        android.util.ArraySet $r9;
        android.content.Context $r10;
        android.content.res.Resources $r11;
        java.lang.String[] $r12;
        java.util.List $r13;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i0 == -920528692 goto label04;

        if i0 == -514404415 goto label03;

        if i0 == -340845101 goto label02;

     label01:
        goto label05;

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.PROVISION_MANAGED_PROFILE");

        if $z2 == 0 goto label01;

        b1 = 1;

        goto label06;

     label03:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.PROVISION_MANAGED_USER");

        if $z1 == 0 goto label01;

        b1 = 0;

        goto label06;

     label04:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.PROVISION_MANAGED_DEVICE");

        if $z0 == 0 goto label01;

        b1 = 2;

        goto label06;

     label05:
        b1 = -1;

     label06:
        if b1 == 0 goto label09;

        if b1 == 1 goto label08;

        if b1 != 2 goto label07;

        i2 = 17236117;

        goto label10;

     label07:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provisioning type ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported.");

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label08:
        i2 = 17236118;

        goto label10;

     label09:
        i2 = 17236119;

     label10:
        $r9 = new android.util.ArraySet;

        $r10 = r0.<com.android.server.devicepolicy.OverlayPackagesProvider: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i2);

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);

        specialinvoke $r9.<android.util.ArraySet: void <init>(java.util.Collection)>($r13);

        return $r9;
    }

    private java.util.Set getSystemInputMethods(int)
    {
        com.android.server.devicepolicy.OverlayPackagesProvider r0;
        int i0;
        android.view.inputmethod.InputMethodInfo r2;
        com.android.server.devicepolicy.OverlayPackagesProvider$Injector $r3;
        android.util.ArraySet $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        android.content.pm.ServiceInfo $r6;
        android.content.pm.ApplicationInfo $r7;
        java.lang.String $r8;
        java.util.List r9;
        java.util.Iterator r10;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.devicepolicy.OverlayPackagesProvider: com.android.server.devicepolicy.OverlayPackagesProvider$Injector mInjector>;

        r9 = interfaceinvoke $r3.<com.android.server.devicepolicy.OverlayPackagesProvider$Injector: java.util.List getInputMethodListAsUser(int)>(i0);

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.view.inputmethod.InputMethodInfo) $r5;

        $r6 = virtualinvoke r2.<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r7 = $r6.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z1 = virtualinvoke $r7.<android.content.pm.ApplicationInfo: boolean isSystemApp()>();

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r2.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r8);

     label2:
        goto label1;

     label3:
        return $r4;
    }

    private java.util.Set getVendorDisallowedAppsSet(java.lang.String)
    {
        com.android.server.devicepolicy.OverlayPackagesProvider r0;
        java.lang.String r1, $r8;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r7;
        int i0, i2;
        byte b1;
        android.util.ArraySet $r9;
        android.content.Context $r10;
        android.content.res.Resources $r11;
        java.lang.String[] $r12;
        java.util.List $r13;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i0 == -920528692 goto label04;

        if i0 == -514404415 goto label03;

        if i0 == -340845101 goto label02;

     label01:
        goto label05;

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.PROVISION_MANAGED_PROFILE");

        if $z2 == 0 goto label01;

        b1 = 1;

        goto label06;

     label03:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.PROVISION_MANAGED_USER");

        if $z1 == 0 goto label01;

        b1 = 0;

        goto label06;

     label04:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.PROVISION_MANAGED_DEVICE");

        if $z0 == 0 goto label01;

        b1 = 2;

        goto label06;

     label05:
        b1 = -1;

     label06:
        if b1 == 0 goto label09;

        if b1 == 1 goto label08;

        if b1 != 2 goto label07;

        i2 = 17236129;

        goto label10;

     label07:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provisioning type ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported.");

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label08:
        i2 = 17236130;

        goto label10;

     label09:
        i2 = 17236131;

     label10:
        $r9 = new android.util.ArraySet;

        $r10 = r0.<com.android.server.devicepolicy.OverlayPackagesProvider: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i2);

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);

        specialinvoke $r9.<android.util.ArraySet: void <init>(java.util.Collection)>($r13);

        return $r9;
    }

    private java.util.Set getVendorRequiredAppsSet(java.lang.String)
    {
        com.android.server.devicepolicy.OverlayPackagesProvider r0;
        java.lang.String r1, $r8;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r7;
        int i0, i2;
        byte b1;
        android.util.ArraySet $r9;
        android.content.Context $r10;
        android.content.res.Resources $r11;
        java.lang.String[] $r12;
        java.util.List $r13;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i0 == -920528692 goto label04;

        if i0 == -514404415 goto label03;

        if i0 == -340845101 goto label02;

     label01:
        goto label05;

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.PROVISION_MANAGED_PROFILE");

        if $z2 == 0 goto label01;

        b1 = 1;

        goto label06;

     label03:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.PROVISION_MANAGED_USER");

        if $z1 == 0 goto label01;

        b1 = 0;

        goto label06;

     label04:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.PROVISION_MANAGED_DEVICE");

        if $z0 == 0 goto label01;

        b1 = 2;

        goto label06;

     label05:
        b1 = -1;

     label06:
        if b1 == 0 goto label09;

        if b1 == 1 goto label08;

        if b1 != 2 goto label07;

        i2 = 17236132;

        goto label10;

     label07:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provisioning type ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported.");

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label08:
        i2 = 17236133;

        goto label10;

     label09:
        i2 = 17236134;

     label10:
        $r9 = new android.util.ArraySet;

        $r10 = r0.<com.android.server.devicepolicy.OverlayPackagesProvider: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i2);

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);

        specialinvoke $r9.<android.util.ArraySet: void <init>(java.util.Collection)>($r13);

        return $r9;
    }

    public java.util.Set getNonRequiredApps(android.content.ComponentName, int, java.lang.String)
    {
        com.android.server.devicepolicy.OverlayPackagesProvider r0;
        android.content.ComponentName r1;
        int i0;
        java.lang.String r2, $r4;
        java.util.Set r3, $r5, $r6, $r7;

        r0 := @this: com.android.server.devicepolicy.OverlayPackagesProvider;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 = specialinvoke r0.<com.android.server.devicepolicy.OverlayPackagesProvider: java.util.Set getLaunchableApps(int)>(i0);

        $r4 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r5 = specialinvoke r0.<com.android.server.devicepolicy.OverlayPackagesProvider: java.util.Set getRequiredApps(java.lang.String,java.lang.String)>(r2, $r4);

        interfaceinvoke r3.<java.util.Set: boolean removeAll(java.util.Collection)>($r5);

        $r6 = specialinvoke r0.<com.android.server.devicepolicy.OverlayPackagesProvider: java.util.Set getSystemInputMethods(int)>(i0);

        interfaceinvoke r3.<java.util.Set: boolean removeAll(java.util.Collection)>($r6);

        $r7 = specialinvoke r0.<com.android.server.devicepolicy.OverlayPackagesProvider: java.util.Set getDisallowedApps(java.lang.String)>(r2);

        interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r7);

        return r3;
    }

    public static void <clinit>()
    {
        <com.android.server.devicepolicy.OverlayPackagesProvider: java.lang.String TAG> = "OverlayPackagesProvider";

        return;
    }
}
