class com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter extends com.android.server.devicepolicy.Owners$FileReadWriter
{
    final com.android.server.devicepolicy.Owners this$0;

    protected void <init>(com.android.server.devicepolicy.Owners)
    {
        com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter r0;
        com.android.server.devicepolicy.Owners r1;
        java.io.File $r2;

        r0 := @this: com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter;

        r1 := @parameter0: com.android.server.devicepolicy.Owners;

        r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0> = r1;

        $r2 = virtualinvoke r1.<com.android.server.devicepolicy.Owners: java.io.File getDeviceOwnerFile()>();

        specialinvoke r0.<com.android.server.devicepolicy.Owners$FileReadWriter: void <init>(java.io.File)>($r2);

        return;
    }

    boolean readInner(org.xmlpull.v1.XmlPullParser, int, java.lang.String)
    {
        com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter r0;
        int $i0, $i2, i7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.server.devicepolicy.Owners $r1, $r4, $r5, $r6, $r9, $r12, $r15, $r18, $r20, $r22, $r24;
        com.android.server.devicepolicy.Owners$OwnerInfo $r2;
        android.app.admin.SystemUpdatePolicy $r7;
        android.app.admin.SystemUpdateInfo $r10;
        java.time.LocalDate $r13, $r16, $r19, $r21;
        java.lang.StringBuilder $r26, $r31;
        java.lang.String $r29, $r34, r36, r38, r39, r40;
        java.lang.Throwable $r30;
        org.xmlpull.v1.XmlPullParser r35;
        byte b8;

        r0 := @this: com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter;

        r35 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i7 := @parameter1: int;

        r36 := @parameter2: java.lang.String;

        if i7 <= 2 goto label01;

        return 1;

     label01:
        b8 = -1;

        $i0 = virtualinvoke r36.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2101756875: goto label08;
            case -2038823445: goto label07;
            case -2020438916: goto label06;
            case -1900517026: goto label05;
            case 1303827527: goto label04;
            case 1748301720: goto label03;
            default: goto label02;
        };

     label02:
        goto label09;

     label03:
        $z0 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("system-update-policy");

        if $z0 == 0 goto label02;

        b8 = 3;

        goto label09;

     label04:
        $z2 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("freeze-record");

        if $z2 == 0 goto label02;

        b8 = 5;

        goto label09;

     label05:
        $z3 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("device-owner-context");

        if $z3 == 0 goto label02;

        b8 = 1;

        goto label09;

     label06:
        $z4 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("device-owner");

        if $z4 == 0 goto label02;

        b8 = 0;

        goto label09;

     label07:
        $z5 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("device-initializer");

        if $z5 == 0 goto label02;

        b8 = 2;

        goto label09;

     label08:
        $z6 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("pending-ota-info");

        if $z6 == 0 goto label02;

        b8 = 4;

     label09:
        if b8 == 0 goto label18;

        if b8 == 1 goto label14;

        if b8 == 2 goto label13;

        if b8 == 3 goto label12;

        if b8 == 4 goto label11;

        if b8 == 5 goto label10;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected tag: ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DevicePolicyManagerService", $r29);

        return 0;

     label10:
        r38 = interfaceinvoke r35.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "start");

        r39 = interfaceinvoke r35.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "end");

        if r38 == null goto label19;

        if r39 == null goto label19;

        $r12 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r13 = staticinvoke <java.time.LocalDate: java.time.LocalDate parse(java.lang.CharSequence)>(r38);

        staticinvoke <com.android.server.devicepolicy.Owners: java.time.LocalDate access$402(com.android.server.devicepolicy.Owners,java.time.LocalDate)>($r12, $r13);

        $r15 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r16 = staticinvoke <java.time.LocalDate: java.time.LocalDate parse(java.lang.CharSequence)>(r39);

        staticinvoke <com.android.server.devicepolicy.Owners: java.time.LocalDate access$502(com.android.server.devicepolicy.Owners,java.time.LocalDate)>($r15, $r16);

        $r18 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r19 = staticinvoke <com.android.server.devicepolicy.Owners: java.time.LocalDate access$400(com.android.server.devicepolicy.Owners)>($r18);

        $r20 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r21 = staticinvoke <com.android.server.devicepolicy.Owners: java.time.LocalDate access$500(com.android.server.devicepolicy.Owners)>($r20);

        $z1 = virtualinvoke $r19.<java.time.LocalDate: boolean isAfter(java.time.chrono.ChronoLocalDate)>($r21);

        if $z1 == 0 goto label19;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DevicePolicyManagerService", "Invalid system update freeze record loaded");

        $r22 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        staticinvoke <com.android.server.devicepolicy.Owners: java.time.LocalDate access$402(com.android.server.devicepolicy.Owners,java.time.LocalDate)>($r22, null);

        $r24 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        staticinvoke <com.android.server.devicepolicy.Owners: java.time.LocalDate access$502(com.android.server.devicepolicy.Owners,java.time.LocalDate)>($r24, null);

        goto label19;

     label11:
        $r9 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r10 = staticinvoke <android.app.admin.SystemUpdateInfo: android.app.admin.SystemUpdateInfo readFromXml(org.xmlpull.v1.XmlPullParser)>(r35);

        staticinvoke <com.android.server.devicepolicy.Owners: android.app.admin.SystemUpdateInfo access$202(com.android.server.devicepolicy.Owners,android.app.admin.SystemUpdateInfo)>($r9, $r10);

        goto label19;

     label12:
        $r6 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r7 = staticinvoke <android.app.admin.SystemUpdatePolicy: android.app.admin.SystemUpdatePolicy restoreFromXml(org.xmlpull.v1.XmlPullParser)>(r35);

        staticinvoke <com.android.server.devicepolicy.Owners: android.app.admin.SystemUpdatePolicy access$102(com.android.server.devicepolicy.Owners,android.app.admin.SystemUpdatePolicy)>($r6, $r7);

        goto label19;

     label13:
        goto label19;

     label14:
        r40 = interfaceinvoke r35.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "userId");

     label15:
        $r5 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r40);

        staticinvoke <com.android.server.devicepolicy.Owners: int access$302(com.android.server.devicepolicy.Owners,int)>($r5, $i2);

     label16:
        goto label19;

     label17:
        $r30 := @caughtexception;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing user-id ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DevicePolicyManagerService", $r34);

        goto label19;

     label18:
        $r1 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r2 = staticinvoke <com.android.server.devicepolicy.Owners$OwnerInfo: com.android.server.devicepolicy.Owners$OwnerInfo readFromXml(org.xmlpull.v1.XmlPullParser)>(r35);

        staticinvoke <com.android.server.devicepolicy.Owners: com.android.server.devicepolicy.Owners$OwnerInfo access$002(com.android.server.devicepolicy.Owners,com.android.server.devicepolicy.Owners$OwnerInfo)>($r1, $r2);

        $r4 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        staticinvoke <com.android.server.devicepolicy.Owners: int access$302(com.android.server.devicepolicy.Owners,int)>($r4, 0);

     label19:
        return 1;

        catch java.lang.NumberFormatException from label15 to label16 with label17;
    }

    boolean shouldWrite()
    {
        com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter r0;
        com.android.server.devicepolicy.Owners $r1, $r3, $r5;
        com.android.server.devicepolicy.Owners$OwnerInfo $r2;
        android.app.admin.SystemUpdatePolicy $r4;
        android.app.admin.SystemUpdateInfo $r6;
        boolean z0;

        r0 := @this: com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter;

        $r1 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r2 = staticinvoke <com.android.server.devicepolicy.Owners: com.android.server.devicepolicy.Owners$OwnerInfo access$000(com.android.server.devicepolicy.Owners)>($r1);

        if $r2 != null goto label2;

        $r3 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r4 = staticinvoke <com.android.server.devicepolicy.Owners: android.app.admin.SystemUpdatePolicy access$100(com.android.server.devicepolicy.Owners)>($r3);

        if $r4 != null goto label2;

        $r5 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r6 = staticinvoke <com.android.server.devicepolicy.Owners: android.app.admin.SystemUpdateInfo access$200(com.android.server.devicepolicy.Owners)>($r5);

        if $r6 == null goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    void writeInner(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.server.devicepolicy.Owners $r2, $r4, $r6, $r8, $r11, $r13, $r16, $r20, $r24, $r26, $r29, $r32, $r35;
        com.android.server.devicepolicy.Owners$OwnerInfo $r3, $r33;
        android.app.admin.SystemUpdatePolicy $r5, $r30;
        android.app.admin.SystemUpdateInfo $r7, $r27;
        java.time.LocalDate $r9, $r12, $r14, $r17, $r21, $r25;
        java.lang.String $r18, $r22, $r36;
        int $i0;

        r0 := @this: com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r3 = staticinvoke <com.android.server.devicepolicy.Owners: com.android.server.devicepolicy.Owners$OwnerInfo access$000(com.android.server.devicepolicy.Owners)>($r2);

        if $r3 == null goto label1;

        $r32 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r33 = staticinvoke <com.android.server.devicepolicy.Owners: com.android.server.devicepolicy.Owners$OwnerInfo access$000(com.android.server.devicepolicy.Owners)>($r32);

        virtualinvoke $r33.<com.android.server.devicepolicy.Owners$OwnerInfo: void writeToXml(org.xmlpull.v1.XmlSerializer,java.lang.String)>(r1, "device-owner");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "device-owner-context");

        $r35 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $i0 = staticinvoke <com.android.server.devicepolicy.Owners: int access$300(com.android.server.devicepolicy.Owners)>($r35);

        $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "userId", $r36);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "device-owner-context");

     label1:
        $r4 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r5 = staticinvoke <com.android.server.devicepolicy.Owners: android.app.admin.SystemUpdatePolicy access$100(com.android.server.devicepolicy.Owners)>($r4);

        if $r5 == null goto label2;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "system-update-policy");

        $r29 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r30 = staticinvoke <com.android.server.devicepolicy.Owners: android.app.admin.SystemUpdatePolicy access$100(com.android.server.devicepolicy.Owners)>($r29);

        virtualinvoke $r30.<android.app.admin.SystemUpdatePolicy: void saveToXml(org.xmlpull.v1.XmlSerializer)>(r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "system-update-policy");

     label2:
        $r6 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r7 = staticinvoke <com.android.server.devicepolicy.Owners: android.app.admin.SystemUpdateInfo access$200(com.android.server.devicepolicy.Owners)>($r6);

        if $r7 == null goto label3;

        $r26 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r27 = staticinvoke <com.android.server.devicepolicy.Owners: android.app.admin.SystemUpdateInfo access$200(com.android.server.devicepolicy.Owners)>($r26);

        virtualinvoke $r27.<android.app.admin.SystemUpdateInfo: void writeToXml(org.xmlpull.v1.XmlSerializer,java.lang.String)>(r1, "pending-ota-info");

     label3:
        $r8 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r9 = staticinvoke <com.android.server.devicepolicy.Owners: java.time.LocalDate access$400(com.android.server.devicepolicy.Owners)>($r8);

        if $r9 != null goto label4;

        $r24 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r25 = staticinvoke <com.android.server.devicepolicy.Owners: java.time.LocalDate access$500(com.android.server.devicepolicy.Owners)>($r24);

        if $r25 == null goto label7;

     label4:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "freeze-record");

        $r11 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r12 = staticinvoke <com.android.server.devicepolicy.Owners: java.time.LocalDate access$400(com.android.server.devicepolicy.Owners)>($r11);

        if $r12 == null goto label5;

        $r20 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r21 = staticinvoke <com.android.server.devicepolicy.Owners: java.time.LocalDate access$400(com.android.server.devicepolicy.Owners)>($r20);

        $r22 = virtualinvoke $r21.<java.time.LocalDate: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "start", $r22);

     label5:
        $r13 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r14 = staticinvoke <com.android.server.devicepolicy.Owners: java.time.LocalDate access$500(com.android.server.devicepolicy.Owners)>($r13);

        if $r14 == null goto label6;

        $r16 = r0.<com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r17 = staticinvoke <com.android.server.devicepolicy.Owners: java.time.LocalDate access$500(com.android.server.devicepolicy.Owners)>($r16);

        $r18 = virtualinvoke $r17.<java.time.LocalDate: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "end", $r18);

     label6:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "freeze-record");

     label7:
        return;
    }
}
