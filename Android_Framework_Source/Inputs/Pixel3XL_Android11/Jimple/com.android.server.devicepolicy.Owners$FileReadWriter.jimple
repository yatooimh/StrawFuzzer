abstract class com.android.server.devicepolicy.Owners$FileReadWriter extends java.lang.Object
{
    private final java.io.File mFile;

    protected void <init>(java.io.File)
    {
        com.android.server.devicepolicy.Owners$FileReadWriter r0;
        java.io.File r1;

        r0 := @this: com.android.server.devicepolicy.Owners$FileReadWriter;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.devicepolicy.Owners$FileReadWriter: java.io.File mFile> = r1;

        return;
    }

    void readFromFileLocked()
    {
        com.android.server.devicepolicy.Owners$FileReadWriter r0;
        int i0, i3;
        java.lang.String r1, $r6, $r7, $r10;
        boolean z0, $z1, $z2;
        java.io.File $r2, $r4;
        android.util.AtomicFile $r3;
        java.nio.charset.Charset $r5;
        java.lang.Throwable $r11, $r12;
        java.io.FileInputStream r14, r15, r16;
        org.xmlpull.v1.XmlPullParser r17;
        java.lang.StringBuilder r18;

        r0 := @this: com.android.server.devicepolicy.Owners$FileReadWriter;

        $r2 = r0.<com.android.server.devicepolicy.Owners$FileReadWriter: java.io.File mFile>;

        $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label01;

        return;

     label01:
        $r3 = new android.util.AtomicFile;

        $r4 = r0.<com.android.server.devicepolicy.Owners$FileReadWriter: java.io.File mFile>;

        specialinvoke $r3.<android.util.AtomicFile: void <init>(java.io.File)>($r4);

        r14 = null;

        r15 = null;

     label02:
        r16 = virtualinvoke $r3.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label03:
        r15 = r16;

        r14 = r16;

     label04:
        r17 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label05:
        r15 = r16;

        r14 = r16;

     label06:
        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r6 = virtualinvoke $r5.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r16, $r6);

     label07:
        i3 = 0;

     label08:
        r15 = r16;

        r14 = r16;

     label09:
        i0 = interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: int next()>();

     label10:
        if i0 == 1 goto label32;

        if i0 == 2 goto label13;

        if i0 == 3 goto label11;

        goto label12;

     label11:
        i3 = i3 + -1;

     label12:
        goto label08;

     label13:
        i3 = i3 + 1;

        r15 = r16;

        r14 = r16;

     label14:
        r1 = interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label15:
        if i3 != 1 goto label28;

        r15 = r16;

        r14 = r16;

     label16:
        $r7 = "root";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 != 0 goto label08;

     label17:
        r15 = r16;

        r14 = r16;

     label18:
        r18 = new java.lang.StringBuilder;

     label19:
        r15 = r16;

        r14 = r16;

     label20:
        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

     label21:
        r15 = r16;

        r14 = r16;

     label22:
        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid root tag: ");

     label23:
        r15 = r16;

        r14 = r16;

     label24:
        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label25:
        r15 = r16;

        r14 = r16;

     label26:
        $r10 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DevicePolicyManagerService", $r10);

     label27:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r16);

        return;

     label28:
        r15 = r16;

        r14 = r16;

     label29:
        z0 = virtualinvoke r0.<com.android.server.devicepolicy.Owners$FileReadWriter: boolean readInner(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r17, i3, r1);

     label30:
        if z0 != 0 goto label31;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r16);

        return;

     label31:
        goto label08;

     label32:
        r14 = r16;

        goto label36;

     label33:
        $r11 := @caughtexception;

        goto label37;

     label34:
        $r12 := @caughtexception;

        r15 = r14;

     label35:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyManagerService", "Error parsing owners information file", $r12);

     label36:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r14);

        return;

     label37:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r15);

        throw $r11;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label34;
        catch java.io.IOException from label02 to label03 with label34;
        catch java.lang.Throwable from label02 to label03 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label34;
        catch java.io.IOException from label04 to label05 with label34;
        catch java.lang.Throwable from label04 to label05 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label34;
        catch java.io.IOException from label06 to label07 with label34;
        catch java.lang.Throwable from label06 to label07 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label34;
        catch java.io.IOException from label09 to label10 with label34;
        catch java.lang.Throwable from label09 to label10 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label34;
        catch java.io.IOException from label14 to label15 with label34;
        catch java.lang.Throwable from label14 to label15 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label34;
        catch java.io.IOException from label16 to label17 with label34;
        catch java.lang.Throwable from label16 to label17 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label34;
        catch java.io.IOException from label18 to label19 with label34;
        catch java.lang.Throwable from label18 to label19 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label34;
        catch java.io.IOException from label20 to label21 with label34;
        catch java.lang.Throwable from label20 to label21 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label34;
        catch java.io.IOException from label22 to label23 with label34;
        catch java.lang.Throwable from label22 to label23 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label34;
        catch java.io.IOException from label24 to label25 with label34;
        catch java.lang.Throwable from label24 to label25 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label34;
        catch java.io.IOException from label26 to label27 with label34;
        catch java.lang.Throwable from label26 to label27 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label34;
        catch java.io.IOException from label29 to label30 with label34;
        catch java.lang.Throwable from label29 to label30 with label33;
        catch java.lang.Throwable from label35 to label36 with label33;
    }

    abstract boolean readInner(org.xmlpull.v1.XmlPullParser, int, java.lang.String);

    abstract boolean shouldWrite();

    abstract void writeInner(org.xmlpull.v1.XmlSerializer) throws java.io.IOException;

    void writeToFileLocked()
    {
        com.android.server.devicepolicy.Owners$FileReadWriter r0;
        com.android.internal.util.FastXmlSerializer r2;
        boolean $z0, $z1, $z2;
        android.util.AtomicFile $r3;
        java.io.File $r4, $r10, $r11, $r14;
        java.nio.charset.Charset $r5;
        java.lang.String $r6, $r15, $r17;
        java.lang.Boolean $r7;
        java.lang.StringBuilder $r12;
        java.lang.Throwable $r18;
        java.io.FileOutputStream r20, r21;

        r0 := @this: com.android.server.devicepolicy.Owners$FileReadWriter;

        $z0 = virtualinvoke r0.<com.android.server.devicepolicy.Owners$FileReadWriter: boolean shouldWrite()>();

        if $z0 != 0 goto label02;

        $r10 = r0.<com.android.server.devicepolicy.Owners$FileReadWriter: java.io.File mFile>;

        $z1 = virtualinvoke $r10.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label01;

        $r11 = r0.<com.android.server.devicepolicy.Owners$FileReadWriter: java.io.File mFile>;

        $z2 = virtualinvoke $r11.<java.io.File: boolean delete()>();

        if $z2 != 0 goto label01;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove ");

        $r14 = r0.<com.android.server.devicepolicy.Owners$FileReadWriter: java.io.File mFile>;

        $r15 = virtualinvoke $r14.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DevicePolicyManagerService", $r17);

     label01:
        return;

     label02:
        $r3 = new android.util.AtomicFile;

        $r4 = r0.<com.android.server.devicepolicy.Owners$FileReadWriter: java.io.File mFile>;

        specialinvoke $r3.<android.util.AtomicFile: void <init>(java.io.File)>($r4);

        r20 = null;

     label03:
        r21 = virtualinvoke $r3.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label04:
        r20 = r21;

     label05:
        r2 = new com.android.internal.util.FastXmlSerializer;

     label06:
        r20 = r21;

     label07:
        specialinvoke r2.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label08:
        r20 = r21;

     label09:
        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r6 = virtualinvoke $r5.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r21, $r6);

     label10:
        r20 = r21;

     label11:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r7);

     label12:
        r20 = r21;

     label13:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "root");

     label14:
        r20 = r21;

     label15:
        virtualinvoke r0.<com.android.server.devicepolicy.Owners$FileReadWriter: void writeInner(org.xmlpull.v1.XmlSerializer)>(r2);

     label16:
        r20 = r21;

     label17:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "root");

     label18:
        r20 = r21;

     label19:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label20:
        r20 = r21;

     label21:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void flush()>();

     label22:
        r20 = r21;

     label23:
        virtualinvoke $r3.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r21);

     label24:
        goto label26;

     label25:
        $r18 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyManagerService", "Exception when writing", $r18);

        if r20 == null goto label26;

        virtualinvoke $r3.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r20);

     label26:
        return;

        catch java.io.IOException from label03 to label04 with label25;
        catch java.io.IOException from label05 to label06 with label25;
        catch java.io.IOException from label07 to label08 with label25;
        catch java.io.IOException from label09 to label10 with label25;
        catch java.io.IOException from label11 to label12 with label25;
        catch java.io.IOException from label13 to label14 with label25;
        catch java.io.IOException from label15 to label16 with label25;
        catch java.io.IOException from label17 to label18 with label25;
        catch java.io.IOException from label19 to label20 with label25;
        catch java.io.IOException from label21 to label22 with label25;
        catch java.io.IOException from label23 to label24 with label25;
    }
}
