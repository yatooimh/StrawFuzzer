class com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter extends com.android.server.devicepolicy.Owners$FileReadWriter
{
    private final int mUserId;
    final com.android.server.devicepolicy.Owners this$0;

    void <init>(com.android.server.devicepolicy.Owners, int)
    {
        com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter r0;
        com.android.server.devicepolicy.Owners r1;
        int i0;
        java.io.File $r2;

        r0 := @this: com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter;

        r1 := @parameter0: com.android.server.devicepolicy.Owners;

        i0 := @parameter1: int;

        r0.<com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter: com.android.server.devicepolicy.Owners this$0> = r1;

        $r2 = virtualinvoke r1.<com.android.server.devicepolicy.Owners: java.io.File getProfileOwnerFile(int)>(i0);

        specialinvoke r0.<com.android.server.devicepolicy.Owners$FileReadWriter: void <init>(java.io.File)>($r2);

        r0.<com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter: int mUserId> = i0;

        return;
    }

    boolean readInner(org.xmlpull.v1.XmlPullParser, int, java.lang.String)
    {
        com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter r0;
        java.lang.String r1, $r10;
        int $i0, $i1, i3;
        boolean $z0;
        com.android.server.devicepolicy.Owners $r2;
        android.util.ArrayMap $r3;
        java.lang.Integer $r4;
        com.android.server.devicepolicy.Owners$OwnerInfo $r5;
        java.lang.StringBuilder $r7;
        org.xmlpull.v1.XmlPullParser r11;
        byte b4;

        r0 := @this: com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter;

        r11 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i3 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        if i3 <= 2 goto label1;

        return 1;

     label1:
        b4 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if $i0 == 2145316239 goto label3;

     label2:
        goto label4;

     label3:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("profile-owner");

        if $z0 == 0 goto label2;

        b4 = 0;

     label4:
        if b4 == 0 goto label5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected tag: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DevicePolicyManagerService", $r10);

        return 0;

     label5:
        $r2 = r0.<com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r3 = staticinvoke <com.android.server.devicepolicy.Owners: android.util.ArrayMap access$600(com.android.server.devicepolicy.Owners)>($r2);

        $i1 = r0.<com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter: int mUserId>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = staticinvoke <com.android.server.devicepolicy.Owners$OwnerInfo: com.android.server.devicepolicy.Owners$OwnerInfo readFromXml(org.xmlpull.v1.XmlPullParser)>(r11);

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        return 1;
    }

    boolean shouldWrite()
    {
        com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter r0;
        com.android.server.devicepolicy.Owners $r1;
        android.util.ArrayMap $r2;
        int $i0;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        boolean z0;

        r0 := @this: com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter;

        $r1 = r0.<com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r2 = staticinvoke <com.android.server.devicepolicy.Owners: android.util.ArrayMap access$600(com.android.server.devicepolicy.Owners)>($r1);

        $i0 = r0.<com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter: int mUserId>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        if $r4 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void writeInner(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.server.devicepolicy.Owners$OwnerInfo r2;
        com.android.server.devicepolicy.Owners $r3;
        android.util.ArrayMap $r4;
        int $i0;
        java.lang.Integer $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r3 = r0.<com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter: com.android.server.devicepolicy.Owners this$0>;

        $r4 = staticinvoke <com.android.server.devicepolicy.Owners: android.util.ArrayMap access$600(com.android.server.devicepolicy.Owners)>($r3);

        $i0 = r0.<com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter: int mUserId>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (com.android.server.devicepolicy.Owners$OwnerInfo) $r6;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.server.devicepolicy.Owners$OwnerInfo: void writeToXml(org.xmlpull.v1.XmlSerializer,java.lang.String)>(r1, "profile-owner");

     label1:
        return;
    }
}
