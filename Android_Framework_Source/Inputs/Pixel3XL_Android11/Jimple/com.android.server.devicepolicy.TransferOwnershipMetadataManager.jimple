class com.android.server.devicepolicy.TransferOwnershipMetadataManager extends java.lang.Object
{
    static final java.lang.String ADMIN_TYPE_DEVICE_OWNER;
    static final java.lang.String ADMIN_TYPE_PROFILE_OWNER;
    public static final java.lang.String OWNER_TRANSFER_METADATA_XML;
    private static final java.lang.String TAG;
    static final java.lang.String TAG_ADMIN_TYPE;
    static final java.lang.String TAG_SOURCE_COMPONENT;
    static final java.lang.String TAG_TARGET_COMPONENT;
    static final java.lang.String TAG_USER_ID;
    private final com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector mInjector;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.devicepolicy.TransferOwnershipMetadataManager: java.lang.String TAG_USER_ID> = "user-id";

        <com.android.server.devicepolicy.TransferOwnershipMetadataManager: java.lang.String TAG_TARGET_COMPONENT> = "target-component";

        <com.android.server.devicepolicy.TransferOwnershipMetadataManager: java.lang.String TAG_SOURCE_COMPONENT> = "source-component";

        <com.android.server.devicepolicy.TransferOwnershipMetadataManager: java.lang.String TAG_ADMIN_TYPE> = "admin-type";

        <com.android.server.devicepolicy.TransferOwnershipMetadataManager: java.lang.String OWNER_TRANSFER_METADATA_XML> = "owner-transfer-metadata.xml";

        <com.android.server.devicepolicy.TransferOwnershipMetadataManager: java.lang.String ADMIN_TYPE_PROFILE_OWNER> = "profile-owner";

        <com.android.server.devicepolicy.TransferOwnershipMetadataManager: java.lang.String ADMIN_TYPE_DEVICE_OWNER> = "device-owner";

        $r0 = class "Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <com.android.server.devicepolicy.TransferOwnershipMetadataManager: java.lang.String TAG> = $r1;

        return;
    }

    void <init>()
    {
        com.android.server.devicepolicy.TransferOwnershipMetadataManager r0;
        com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector $r1;

        r0 := @this: com.android.server.devicepolicy.TransferOwnershipMetadataManager;

        $r1 = new com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector;

        specialinvoke $r1.<com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector: void <init>()>();

        specialinvoke r0.<com.android.server.devicepolicy.TransferOwnershipMetadataManager: void <init>(com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector)>($r1);

        return;
    }

    void <init>(com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector)
    {
        com.android.server.devicepolicy.TransferOwnershipMetadataManager r0;
        com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector r1;

        r0 := @this: com.android.server.devicepolicy.TransferOwnershipMetadataManager;

        r1 := @parameter0: com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.devicepolicy.TransferOwnershipMetadataManager: com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector mInjector> = r1;

        return;
    }

    private void insertSimpleTag(org.xmlpull.v1.XmlSerializer, java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.android.server.devicepolicy.TransferOwnershipMetadataManager r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.lang.String r2, r3;

        r0 := @this: com.android.server.devicepolicy.TransferOwnershipMetadataManager;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, r2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, r2);

        return;
    }

    private com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata parseMetadataFile(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.devicepolicy.TransferOwnershipMetadataManager r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, $i1, $i6, i7, i8;
        java.lang.String r2, $r4, r5, r6, r7;
        com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata $r3;
        boolean $z0, $z1, $z2, $z3;
        byte b9;

        r0 := @this: com.android.server.devicepolicy.TransferOwnershipMetadataManager;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i7 = 0;

        r5 = null;

        r6 = null;

        r7 = null;

     label01:
        i8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i8 == 1 goto label15;

        if i8 != 3 goto label02;

        $i6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i6 <= i0 goto label15;

     label02:
        if i8 == 3 goto label01;

        if i8 != 4 goto label03;

        goto label01;

     label03:
        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        b9 = -1;

        $i1 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -337219647: goto label08;
            case -147180963: goto label07;
            case 281362891: goto label06;
            case 641951480: goto label05;
            default: goto label04;
        };

     label04:
        goto label09;

     label05:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("admin-type");

        if $z0 == 0 goto label04;

        b9 = 3;

        goto label09;

     label06:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("source-component");

        if $z1 == 0 goto label04;

        b9 = 2;

        goto label09;

     label07:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("user-id");

        if $z2 == 0 goto label04;

        b9 = 0;

        goto label09;

     label08:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("target-component");

        if $z3 == 0 goto label04;

        b9 = 1;

     label09:
        if b9 == 0 goto label13;

        if b9 == 1 goto label12;

        if b9 == 2 goto label11;

        if b9 == 3 goto label10;

        goto label14;

     label10:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        goto label14;

     label11:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        goto label14;

     label12:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        goto label14;

     label13:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label14:
        goto label01;

     label15:
        $r3 = new com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata;

        specialinvoke $r3.<com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>(r5, r6, i7, r7);

        return $r3;
    }

    void deleteMetadataFile()
    {
        com.android.server.devicepolicy.TransferOwnershipMetadataManager r0;
        java.io.File $r1, $r3;
        com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector $r2;

        r0 := @this: com.android.server.devicepolicy.TransferOwnershipMetadataManager;

        $r1 = new java.io.File;

        $r2 = r0.<com.android.server.devicepolicy.TransferOwnershipMetadataManager: com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector mInjector>;

        $r3 = virtualinvoke $r2.<com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector: java.io.File getOwnerTransferMetadataDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "owner-transfer-metadata.xml");

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        return;
    }

    com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata loadMetadataFile()
    {
        com.android.server.devicepolicy.TransferOwnershipMetadataManager r0;
        java.lang.String r2, $r9, $r15, r17;
        java.io.File $r3, $r5;
        com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector $r4;
        boolean $z0;
        java.lang.StringBuilder $r6, $r12;
        java.lang.Throwable $r10, $r11, $r16;
        java.io.FileInputStream r19;
        org.xmlpull.v1.XmlPullParser r20;
        com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata r21;

        r0 := @this: com.android.server.devicepolicy.TransferOwnershipMetadataManager;

        $r3 = new java.io.File;

        $r4 = r0.<com.android.server.devicepolicy.TransferOwnershipMetadataManager: com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector mInjector>;

        $r5 = virtualinvoke $r4.<com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector: java.io.File getOwnerTransferMetadataDir()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "owner-transfer-metadata.xml");

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        return null;

     label01:
        r17 = <com.android.server.devicepolicy.TransferOwnershipMetadataManager: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading TransferOwnershipMetadataManager from ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r17, $r9);

     label02:
        r19 = new java.io.FileInputStream;

        specialinvoke r19.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

     label03:
        r20 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r19, null);

        r21 = specialinvoke r0.<com.android.server.devicepolicy.TransferOwnershipMetadataManager: com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata parseMetadataFile(org.xmlpull.v1.XmlPullParser)>(r20);

     label04:
        virtualinvoke r19.<java.io.FileInputStream: void close()>();

     label05:
        return r21;

     label06:
        $r10 := @caughtexception;

     label07:
        virtualinvoke r19.<java.io.FileInputStream: void close()>();

     label08:
        goto label11;

     label09:
        $r16 := @caughtexception;

     label10:
        virtualinvoke $r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r16);

     label11:
        throw $r10;

     label12:
        $r11 := @caughtexception;

        r2 = <com.android.server.devicepolicy.TransferOwnershipMetadataManager: java.lang.String TAG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught exception while trying to load the owner transfer params from file ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r2, $r15, $r11);

        return null;

        catch java.io.IOException from label02 to label03 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label12;
        catch java.lang.IllegalArgumentException from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.io.IOException from label04 to label05 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label12;
        catch java.lang.IllegalArgumentException from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label12;
        catch java.lang.IllegalArgumentException from label10 to label11 with label12;
        catch java.io.IOException from label11 to label12 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label12;
        catch java.lang.IllegalArgumentException from label11 to label12 with label12;
    }

    boolean metadataFileExists()
    {
        com.android.server.devicepolicy.TransferOwnershipMetadataManager r0;
        java.io.File $r1, $r3;
        com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector $r2;
        boolean $z0;

        r0 := @this: com.android.server.devicepolicy.TransferOwnershipMetadataManager;

        $r1 = new java.io.File;

        $r2 = r0.<com.android.server.devicepolicy.TransferOwnershipMetadataManager: com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector mInjector>;

        $r3 = virtualinvoke $r2.<com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector: java.io.File getOwnerTransferMetadataDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "owner-transfer-metadata.xml");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        return $z0;
    }

    boolean saveMetadataFile(com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata)
    {
        com.android.server.devicepolicy.TransferOwnershipMetadataManager r0;
        java.io.File $r3, $r5;
        com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector $r4;
        android.util.AtomicFile $r6;
        java.nio.charset.Charset $r7;
        java.lang.String $r8, $r10, $r12, $r14, $r15, $r20, r26;
        java.lang.Boolean $r9;
        int $i0;
        android.content.ComponentName $r11, $r13;
        java.lang.Throwable $r16;
        java.lang.StringBuilder $r17;
        com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata r21;
        java.io.FileOutputStream r22, r23;
        com.android.internal.util.FastXmlSerializer r24;

        r0 := @this: com.android.server.devicepolicy.TransferOwnershipMetadataManager;

        r21 := @parameter0: com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata;

        $r3 = new java.io.File;

        $r4 = r0.<com.android.server.devicepolicy.TransferOwnershipMetadataManager: com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector mInjector>;

        $r5 = virtualinvoke $r4.<com.android.server.devicepolicy.TransferOwnershipMetadataManager$Injector: java.io.File getOwnerTransferMetadataDir()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "owner-transfer-metadata.xml");

        $r6 = new android.util.AtomicFile;

        specialinvoke $r6.<android.util.AtomicFile: void <init>(java.io.File)>($r3);

        r22 = null;

     label01:
        r23 = virtualinvoke $r6.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label02:
        r22 = r23;

     label03:
        r24 = new com.android.internal.util.FastXmlSerializer;

     label04:
        r22 = r23;

     label05:
        specialinvoke r24.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label06:
        r22 = r23;

     label07:
        $r7 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r8 = virtualinvoke $r7.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r24.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r23, $r8);

     label08:
        r22 = r23;

     label09:
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r24.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r9);

     label10:
        r22 = r23;

     label11:
        $i0 = r21.<com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata: int userId>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        specialinvoke r0.<com.android.server.devicepolicy.TransferOwnershipMetadataManager: void insertSimpleTag(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>(r24, "user-id", $r10);

     label12:
        r22 = r23;

     label13:
        $r11 = r21.<com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata: android.content.ComponentName sourceComponent>;

        $r12 = virtualinvoke $r11.<android.content.ComponentName: java.lang.String flattenToString()>();

        specialinvoke r0.<com.android.server.devicepolicy.TransferOwnershipMetadataManager: void insertSimpleTag(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>(r24, "source-component", $r12);

     label14:
        r22 = r23;

     label15:
        $r13 = r21.<com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata: android.content.ComponentName targetComponent>;

        $r14 = virtualinvoke $r13.<android.content.ComponentName: java.lang.String flattenToString()>();

        specialinvoke r0.<com.android.server.devicepolicy.TransferOwnershipMetadataManager: void insertSimpleTag(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>(r24, "target-component", $r14);

     label16:
        r22 = r23;

     label17:
        $r15 = r21.<com.android.server.devicepolicy.TransferOwnershipMetadataManager$Metadata: java.lang.String adminType>;

        specialinvoke r0.<com.android.server.devicepolicy.TransferOwnershipMetadataManager: void insertSimpleTag(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>(r24, "admin-type", $r15);

     label18:
        r22 = r23;

     label19:
        interfaceinvoke r24.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label20:
        r22 = r23;

     label21:
        virtualinvoke $r6.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r23);

     label22:
        return 1;

     label23:
        $r16 := @caughtexception;

        r26 = <com.android.server.devicepolicy.TransferOwnershipMetadataManager: java.lang.String TAG>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught exception while trying to save Owner Transfer Params to file ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r26, $r20, $r16);

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        virtualinvoke $r6.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r22);

        return 0;

        catch java.io.IOException from label01 to label02 with label23;
        catch java.io.IOException from label03 to label04 with label23;
        catch java.io.IOException from label05 to label06 with label23;
        catch java.io.IOException from label07 to label08 with label23;
        catch java.io.IOException from label09 to label10 with label23;
        catch java.io.IOException from label11 to label12 with label23;
        catch java.io.IOException from label13 to label14 with label23;
        catch java.io.IOException from label15 to label16 with label23;
        catch java.io.IOException from label17 to label18 with label23;
        catch java.io.IOException from label19 to label20 with label23;
        catch java.io.IOException from label21 to label22 with label23;
    }
}
