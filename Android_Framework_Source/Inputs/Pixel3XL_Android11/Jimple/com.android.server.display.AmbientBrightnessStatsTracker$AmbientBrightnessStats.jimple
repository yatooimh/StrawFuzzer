class com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats extends java.lang.Object
{
    private static final java.lang.String ATTR_BUCKET_BOUNDARIES;
    private static final java.lang.String ATTR_BUCKET_STATS;
    private static final java.lang.String ATTR_LOCAL_DATE;
    private static final java.lang.String ATTR_USER;
    private static final java.lang.String TAG_AMBIENT_BRIGHTNESS_DAY_STATS;
    private static final java.lang.String TAG_AMBIENT_BRIGHTNESS_STATS;
    private java.util.Map mStats;
    final com.android.server.display.AmbientBrightnessStatsTracker this$0;

    public void <init>(com.android.server.display.AmbientBrightnessStatsTracker)
    {
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats r0;
        com.android.server.display.AmbientBrightnessStatsTracker r1;
        java.util.HashMap $r2;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats;

        r1 := @parameter0: com.android.server.display.AmbientBrightnessStatsTracker;

        r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: com.android.server.display.AmbientBrightnessStatsTracker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.util.Map mStats> = $r2;

        return;
    }

    private android.hardware.display.AmbientBrightnessDayStats getOrCreateDayStats(java.util.Deque, java.time.LocalDate)
    {
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats r0;
        java.util.Deque r1;
        android.hardware.display.AmbientBrightnessDayStats r2, $r4;
        java.lang.Object $r3;
        float[] $r5;
        int $i0;
        java.time.LocalDate $r7, r8;
        boolean $z1;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats;

        r1 := @parameter0: java.util.Deque;

        r8 := @parameter1: java.time.LocalDate;

        $r3 = interfaceinvoke r1.<java.util.Deque: java.lang.Object peekLast()>();

        r2 = (android.hardware.display.AmbientBrightnessDayStats) $r3;

        if r2 == null goto label1;

        $r7 = virtualinvoke r2.<android.hardware.display.AmbientBrightnessDayStats: java.time.LocalDate getLocalDate()>();

        $z1 = virtualinvoke $r7.<java.time.LocalDate: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label1;

        return r2;

     label1:
        $r4 = new android.hardware.display.AmbientBrightnessDayStats;

        $r5 = <com.android.server.display.AmbientBrightnessStatsTracker: float[] BUCKET_BOUNDARIES_FOR_NEW_STATS>;

        specialinvoke $r4.<android.hardware.display.AmbientBrightnessDayStats: void <init>(java.time.LocalDate,float[])>(r8, $r5);

        $i0 = interfaceinvoke r1.<java.util.Deque: int size()>();

        if $i0 != 7 goto label2;

        interfaceinvoke r1.<java.util.Deque: java.lang.Object poll()>();

     label2:
        interfaceinvoke r1.<java.util.Deque: boolean offer(java.lang.Object)>($r4);

        return $r4;
    }

    private java.util.Deque getOrCreateUserStats(java.util.Map, int)
    {
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats r0;
        java.util.Map r1;
        int i0;
        java.lang.Integer $r2, $r3, $r6;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Deque $r5;
        java.util.ArrayDeque $r7;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats;

        r1 := @parameter0: java.util.Map;

        i0 := @parameter1: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = new java.util.ArrayDeque;

        specialinvoke $r7.<java.util.ArrayDeque: void <init>()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

     label1:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.util.Deque) $r4;

        return $r5;
    }

    public java.util.ArrayList getUserStats(int)
    {
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats r0;
        int i0;
        java.util.Map $r1, $r4;
        java.lang.Integer $r2, $r5;
        boolean $z0;
        java.util.ArrayList $r3;
        java.lang.Object $r6;
        java.util.Collection $r7;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.util.Map mStats>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = new java.util.ArrayList;

        $r4 = r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.util.Map mStats>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (java.util.Collection) $r6;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        return $r3;

     label1:
        return null;
    }

    public void log(int, java.time.LocalDate, float, float)
    {
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats r0;
        int i0;
        java.time.LocalDate r1;
        float f0, f1;
        java.util.Map $r2;
        java.util.Deque $r3;
        android.hardware.display.AmbientBrightnessDayStats $r4;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats;

        i0 := @parameter0: int;

        r1 := @parameter1: java.time.LocalDate;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $r2 = r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.util.Map mStats>;

        $r3 = specialinvoke r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.util.Deque getOrCreateUserStats(java.util.Map,int)>($r2, i0);

        $r4 = specialinvoke r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: android.hardware.display.AmbientBrightnessDayStats getOrCreateDayStats(java.util.Deque,java.time.LocalDate)>($r3, r1);

        virtualinvoke $r4.<android.hardware.display.AmbientBrightnessDayStats: void log(float,float)>(f0, f1);

        return;
    }

    public void readFromXML(java.io.InputStream) throws java.io.IOException
    {
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13;
        java.time.LocalDate r2, $r12, r32;
        java.lang.String[] r3, r35;
        float[] r4, r36;
        java.nio.charset.Charset $r5;
        java.lang.String $r6, $r9, $r13, $r14, $r15, $r16, $r17, $r22, $r23, r30, r31, r34;
        boolean $z0, $z1, $z2;
        com.android.server.display.AmbientBrightnessStatsTracker $r10, $r18, $r20;
        com.android.server.display.AmbientBrightnessStatsTracker$Injector $r11, $r19;
        android.os.UserManager $r21;
        float $f0, $f1;
        java.lang.Throwable $r24, $r26, r42, r49;
        java.io.InputStream r27;
        org.xmlpull.v1.XmlPullParser r29;
        java.util.Deque r37;
        java.util.HashMap r43;
        android.hardware.display.AmbientBrightnessDayStats r44;
        java.io.IOException r45, r48;
        java.lang.StringBuilder r46;
        org.xmlpull.v1.XmlPullParserException r47;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats;

        r27 := @parameter0: java.io.InputStream;

     label01:
        r43 = new java.util.HashMap;

        specialinvoke r43.<java.util.HashMap: void <init>()>();

        r29 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        r30 = virtualinvoke $r5.<java.nio.charset.Charset: java.lang.String name()>();

     label02:
        interfaceinvoke r29.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r27, r30);

     label03:
        i10 = interfaceinvoke r29.<org.xmlpull.v1.XmlPullParser: int next()>();

     label04:
        if i10 == 1 goto label05;

        if i10 == 2 goto label05;

        goto label03;

     label05:
        r31 = interfaceinvoke r29.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = "ambient-brightness-stats";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z0 == 0 goto label25;

        $r10 = r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: com.android.server.display.AmbientBrightnessStatsTracker this$0>;

        $r11 = staticinvoke <com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Injector access$000(com.android.server.display.AmbientBrightnessStatsTracker)>($r10);

        $r12 = virtualinvoke $r11.<com.android.server.display.AmbientBrightnessStatsTracker$Injector: java.time.LocalDate getLocalDate()>();

        r32 = virtualinvoke $r12.<java.time.LocalDate: java.time.LocalDate minusDays(long)>(7L);

        interfaceinvoke r29.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = interfaceinvoke r29.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label06:
        i11 = interfaceinvoke r29.<org.xmlpull.v1.XmlPullParser: int next()>();

     label07:
        if i11 == 1 goto label23;

        if i11 != 3 goto label11;

     label08:
        $i9 = interfaceinvoke r29.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i9 <= i0 goto label10;

     label09:
        goto label11;

     label10:
        goto label23;

     label11:
        if i11 == 3 goto label22;

        if i11 != 4 goto label12;

        goto label22;

     label12:
        $r13 = "ambient-brightness-day-stats";

        $r14 = interfaceinvoke r29.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label21;

        r34 = interfaceinvoke r29.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "user");

        $r15 = interfaceinvoke r29.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "local-date");

        r2 = staticinvoke <java.time.LocalDate: java.time.LocalDate parse(java.lang.CharSequence)>($r15);

        $r16 = interfaceinvoke r29.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "bucket-boundaries");

        r35 = virtualinvoke $r16.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r17 = interfaceinvoke r29.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "bucket-stats");

        r3 = virtualinvoke $r17.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i3 = lengthof r35;

        $i2 = lengthof r3;

        if $i3 != $i2 goto label20;

        $i4 = lengthof r35;

        if $i4 < 1 goto label20;

        $i5 = lengthof r35;

        r4 = newarray (float)[$i5];

        $i6 = lengthof r3;

        r36 = newarray (float)[$i6];

     label13:
        i12 = 0;

     label14:
        $i7 = lengthof r35;

        if i12 >= $i7 goto label16;

        $r22 = r35[i12];

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r22);

        r4[i12] = $f0;

        $r23 = r3[i12];

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r23);

        r36[i12] = $f1;

     label15:
        i12 = i12 + 1;

        goto label14;

     label16:
        $r18 = r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: com.android.server.display.AmbientBrightnessStatsTracker this$0>;

        $r19 = staticinvoke <com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Injector access$000(com.android.server.display.AmbientBrightnessStatsTracker)>($r18);

        $r20 = r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: com.android.server.display.AmbientBrightnessStatsTracker this$0>;

        $r21 = staticinvoke <com.android.server.display.AmbientBrightnessStatsTracker: android.os.UserManager access$100(com.android.server.display.AmbientBrightnessStatsTracker)>($r20);

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r34);

        i13 = virtualinvoke $r19.<com.android.server.display.AmbientBrightnessStatsTracker$Injector: int getUserId(android.os.UserManager,int)>($r21, $i8);

     label17:
        if i13 == -1 goto label19;

     label18:
        $z2 = virtualinvoke r2.<java.time.LocalDate: boolean isAfter(java.time.chrono.ChronoLocalDate)>(r32);

        if $z2 == 0 goto label19;

        r37 = specialinvoke r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.util.Deque getOrCreateUserStats(java.util.Map,int)>(r43, i13);

        r44 = new android.hardware.display.AmbientBrightnessDayStats;

        specialinvoke r44.<android.hardware.display.AmbientBrightnessDayStats: void <init>(java.time.LocalDate,float[],float[])>(r2, r4, r36);

        interfaceinvoke r37.<java.util.Deque: boolean offer(java.lang.Object)>(r44);

     label19:
        goto label22;

     label20:
        r45 = new java.io.IOException;

        specialinvoke r45.<java.io.IOException: void <init>(java.lang.String)>("Invalid brightness stats string.");

        throw r45;

     label21:
        goto label22;

     label22:
        goto label06;

     label23:
        r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.util.Map mStats> = r43;

     label24:
        return;

     label25:
        r47 = new org.xmlpull.v1.XmlPullParserException;

        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ambient brightness stats not found in tracker file ");

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r9 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r9);

        r49 = (java.lang.Throwable) r47;

        throw r49;

     label26:
        $r24 := @caughtexception;

        r42 = $r24;

        goto label28;

     label27:
        $r26 := @caughtexception;

        r42 = $r26;

     label28:
        r48 = new java.io.IOException;

        specialinvoke r48.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to parse brightness stats file.", r42);

        throw r48;

        catch java.lang.NullPointerException from label01 to label02 with label27;
        catch java.lang.NumberFormatException from label01 to label02 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label27;
        catch java.time.format.DateTimeParseException from label01 to label02 with label27;
        catch java.io.IOException from label01 to label02 with label27;
        catch java.lang.NullPointerException from label02 to label03 with label26;
        catch java.lang.NumberFormatException from label02 to label03 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label26;
        catch java.time.format.DateTimeParseException from label02 to label03 with label26;
        catch java.io.IOException from label02 to label03 with label26;
        catch java.lang.NullPointerException from label03 to label04 with label26;
        catch java.lang.NumberFormatException from label03 to label04 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label26;
        catch java.time.format.DateTimeParseException from label03 to label04 with label26;
        catch java.io.IOException from label03 to label04 with label26;
        catch java.lang.NullPointerException from label05 to label06 with label26;
        catch java.lang.NumberFormatException from label05 to label06 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label26;
        catch java.time.format.DateTimeParseException from label05 to label06 with label26;
        catch java.io.IOException from label05 to label06 with label26;
        catch java.lang.NullPointerException from label06 to label07 with label26;
        catch java.lang.NumberFormatException from label06 to label07 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label26;
        catch java.time.format.DateTimeParseException from label06 to label07 with label26;
        catch java.io.IOException from label06 to label07 with label26;
        catch java.lang.NullPointerException from label08 to label09 with label26;
        catch java.lang.NumberFormatException from label08 to label09 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label26;
        catch java.time.format.DateTimeParseException from label08 to label09 with label26;
        catch java.io.IOException from label08 to label09 with label26;
        catch java.lang.NullPointerException from label12 to label13 with label26;
        catch java.lang.NumberFormatException from label12 to label13 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label26;
        catch java.time.format.DateTimeParseException from label12 to label13 with label26;
        catch java.io.IOException from label12 to label13 with label26;
        catch java.lang.NullPointerException from label14 to label15 with label26;
        catch java.lang.NumberFormatException from label14 to label15 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label26;
        catch java.time.format.DateTimeParseException from label14 to label15 with label26;
        catch java.io.IOException from label14 to label15 with label26;
        catch java.lang.NullPointerException from label16 to label17 with label26;
        catch java.lang.NumberFormatException from label16 to label17 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label26;
        catch java.time.format.DateTimeParseException from label16 to label17 with label26;
        catch java.io.IOException from label16 to label17 with label26;
        catch java.lang.NullPointerException from label18 to label19 with label26;
        catch java.lang.NumberFormatException from label18 to label19 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label26;
        catch java.time.format.DateTimeParseException from label18 to label19 with label26;
        catch java.io.IOException from label18 to label19 with label26;
        catch java.lang.NullPointerException from label20 to label21 with label26;
        catch java.lang.NumberFormatException from label20 to label21 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label26;
        catch java.time.format.DateTimeParseException from label20 to label21 with label26;
        catch java.io.IOException from label20 to label21 with label26;
        catch java.lang.NullPointerException from label23 to label24 with label26;
        catch java.lang.NumberFormatException from label23 to label24 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label26;
        catch java.time.format.DateTimeParseException from label23 to label24 with label26;
        catch java.io.IOException from label23 to label24 with label26;
        catch java.lang.NullPointerException from label25 to label26 with label26;
        catch java.lang.NumberFormatException from label25 to label26 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label26;
        catch java.time.format.DateTimeParseException from label25 to label26 with label26;
        catch java.io.IOException from label25 to label26 with label26;
    }

    public java.lang.String toString()
    {
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats r0;
        java.util.Iterator r2, r4;
        java.util.Map$Entry r3;
        android.hardware.display.AmbientBrightnessDayStats r5;
        java.lang.StringBuilder $r6;
        java.util.Map $r7;
        java.util.Set $r8;
        boolean $z0, $z1;
        java.lang.String $r9;
        java.lang.Object $r10, $r11, $r13, $r15;
        java.util.Deque $r12;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.util.Map mStats>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.util.Deque) $r11;

        r4 = interfaceinvoke $r12.<java.util.Deque: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.hardware.display.AmbientBrightnessDayStats) $r13;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r15 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label2;

     label3:
        goto label1;

     label4:
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public void writeToXML(java.io.OutputStream) throws java.io.IOException
    {
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats r0;
        java.io.OutputStream r1;
        java.time.LocalDate r3, $r16, $r31, $r35;
        java.util.Iterator r4, r6;
        java.util.Map$Entry r5;
        android.hardware.display.AmbientBrightnessDayStats r7;
        com.android.internal.util.FastXmlSerializer $r10;
        java.nio.charset.Charset $r11;
        java.lang.String $r12, $r33, $r36, $r41, $r43;
        java.lang.Boolean $r13;
        com.android.server.display.AmbientBrightnessStatsTracker $r14, $r25, $r27;
        com.android.server.display.AmbientBrightnessStatsTracker$Injector $r15, $r26;
        java.util.Map $r18;
        java.util.Set $r19;
        boolean $z0, $z1, $z2;
        java.lang.Object $r21, $r22, $r24, $r29;
        java.util.Deque $r23;
        android.os.UserManager $r28;
        java.lang.Integer $r30;
        int $i0, $i1, i2, i3;
        java.lang.StringBuilder $r38, $r39;
        float[] $r40, $r46, $r48;
        float $f0, $f1;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats;

        r1 := @parameter0: java.io.OutputStream;

        $r10 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r10.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        $r11 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r12 = virtualinvoke $r11.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke $r10.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, $r12);

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r10.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r13);

        interfaceinvoke $r10.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        $r14 = r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: com.android.server.display.AmbientBrightnessStatsTracker this$0>;

        $r15 = staticinvoke <com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Injector access$000(com.android.server.display.AmbientBrightnessStatsTracker)>($r14);

        $r16 = virtualinvoke $r15.<com.android.server.display.AmbientBrightnessStatsTracker$Injector: java.time.LocalDate getLocalDate()>();

        r3 = virtualinvoke $r16.<java.time.LocalDate: java.time.LocalDate minusDays(long)>(7L);

        interfaceinvoke $r10.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "ambient-brightness-stats");

        $r18 = r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.util.Map mStats>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r21 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r21;

        $r22 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r23 = (java.util.Deque) $r22;

        r6 = interfaceinvoke $r23.<java.util.Deque: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r24 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.hardware.display.AmbientBrightnessDayStats) $r24;

        $r25 = r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: com.android.server.display.AmbientBrightnessStatsTracker this$0>;

        $r26 = staticinvoke <com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Injector access$000(com.android.server.display.AmbientBrightnessStatsTracker)>($r25);

        $r27 = r0.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: com.android.server.display.AmbientBrightnessStatsTracker this$0>;

        $r28 = staticinvoke <com.android.server.display.AmbientBrightnessStatsTracker: android.os.UserManager access$100(com.android.server.display.AmbientBrightnessStatsTracker)>($r27);

        $r29 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r30 = (java.lang.Integer) $r29;

        $i0 = virtualinvoke $r30.<java.lang.Integer: int intValue()>();

        i2 = virtualinvoke $r26.<com.android.server.display.AmbientBrightnessStatsTracker$Injector: int getUserSerialNumber(android.os.UserManager,int)>($r28, $i0);

        if i2 == -1 goto label6;

        $r31 = virtualinvoke r7.<android.hardware.display.AmbientBrightnessDayStats: java.time.LocalDate getLocalDate()>();

        $z2 = virtualinvoke $r31.<java.time.LocalDate: boolean isAfter(java.time.chrono.ChronoLocalDate)>(r3);

        if $z2 == 0 goto label6;

        interfaceinvoke $r10.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "ambient-brightness-day-stats");

        $r33 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        interfaceinvoke $r10.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "user", $r33);

        $r35 = virtualinvoke r7.<android.hardware.display.AmbientBrightnessDayStats: java.time.LocalDate getLocalDate()>();

        $r36 = virtualinvoke $r35.<java.time.LocalDate: java.lang.String toString()>();

        interfaceinvoke $r10.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "local-date", $r36);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        i3 = 0;

     label3:
        $r40 = virtualinvoke r7.<android.hardware.display.AmbientBrightnessDayStats: float[] getBucketBoundaries()>();

        $i1 = lengthof $r40;

        if i3 >= $i1 goto label5;

        if i3 <= 0 goto label4;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label4:
        $r46 = virtualinvoke r7.<android.hardware.display.AmbientBrightnessDayStats: float[] getBucketBoundaries()>();

        $f0 = $r46[i3];

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r48 = virtualinvoke r7.<android.hardware.display.AmbientBrightnessDayStats: float[] getStats()>();

        $f1 = $r48[i3];

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        i3 = i3 + 1;

        goto label3;

     label5:
        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "bucket-boundaries", $r41);

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "bucket-stats", $r43);

        interfaceinvoke $r10.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "ambient-brightness-day-stats");

     label6:
        goto label2;

     label7:
        goto label1;

     label8:
        interfaceinvoke $r10.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "ambient-brightness-stats");

        interfaceinvoke $r10.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.lang.String TAG_AMBIENT_BRIGHTNESS_STATS> = "ambient-brightness-stats";

        <com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.lang.String TAG_AMBIENT_BRIGHTNESS_DAY_STATS> = "ambient-brightness-day-stats";

        <com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.lang.String ATTR_USER> = "user";

        <com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.lang.String ATTR_LOCAL_DATE> = "local-date";

        <com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.lang.String ATTR_BUCKET_STATS> = "bucket-stats";

        <com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.lang.String ATTR_BUCKET_BOUNDARIES> = "bucket-boundaries";

        return;
    }
}
