public class com.android.server.display.AmbientBrightnessStatsTracker extends java.lang.Object
{
    static final float[] BUCKET_BOUNDARIES_FOR_NEW_STATS;
    private static final boolean DEBUG;
    static final int MAX_DAYS_TO_TRACK;
    private static final java.lang.String TAG;
    private final com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats mAmbientBrightnessStats;
    private float mCurrentAmbientBrightness;
    private int mCurrentUserId;
    private final com.android.server.display.AmbientBrightnessStatsTracker$Injector mInjector;
    private final com.android.server.display.AmbientBrightnessStatsTracker$Timer mTimer;
    private final android.os.UserManager mUserManager;

    static void <clinit>()
    {
        float[] $r0;

        <com.android.server.display.AmbientBrightnessStatsTracker: java.lang.String TAG> = "AmbientBrightnessStatsTracker";

        <com.android.server.display.AmbientBrightnessStatsTracker: int MAX_DAYS_TO_TRACK> = 7;

        <com.android.server.display.AmbientBrightnessStatsTracker: boolean DEBUG> = 0;

        $r0 = newarray (float)[12];

        $r0[0] = 0.0F;

        $r0[1] = 0.1F;

        $r0[2] = 0.3F;

        $r0[3] = 1.0F;

        $r0[4] = 3.0F;

        $r0[5] = 10.0F;

        $r0[6] = 30.0F;

        $r0[7] = 100.0F;

        $r0[8] = 300.0F;

        $r0[9] = 1000.0F;

        $r0[10] = 3000.0F;

        $r0[11] = 10000.0F;

        <com.android.server.display.AmbientBrightnessStatsTracker: float[] BUCKET_BOUNDARIES_FOR_NEW_STATS> = $r0;

        return;
    }

    public void <init>(android.os.UserManager, com.android.server.display.AmbientBrightnessStatsTracker$Injector)
    {
        com.android.server.display.AmbientBrightnessStatsTracker r0;
        android.os.UserManager r1;
        com.android.server.display.AmbientBrightnessStatsTracker$Injector r2, $r3;
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats $r4;
        com.android.server.display.AmbientBrightnessStatsTracker$Timer $r5;
        com.android.server.display._$$Lambda$AmbientBrightnessStatsTracker$vQZYn_dAhbvzT_Un4vvpuyIATII $r6;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker;

        r1 := @parameter0: android.os.UserManager;

        r2 := @parameter1: com.android.server.display.AmbientBrightnessStatsTracker$Injector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.display.AmbientBrightnessStatsTracker: android.os.UserManager mUserManager> = r1;

        if r2 == null goto label1;

        r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Injector mInjector> = r2;

        goto label2;

     label1:
        $r3 = new com.android.server.display.AmbientBrightnessStatsTracker$Injector;

        specialinvoke $r3.<com.android.server.display.AmbientBrightnessStatsTracker$Injector: void <init>()>();

        r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Injector mInjector> = $r3;

     label2:
        $r4 = new com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats;

        specialinvoke $r4.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: void <init>(com.android.server.display.AmbientBrightnessStatsTracker)>(r0);

        r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats mAmbientBrightnessStats> = $r4;

        $r5 = new com.android.server.display.AmbientBrightnessStatsTracker$Timer;

        $r6 = new com.android.server.display._$$Lambda$AmbientBrightnessStatsTracker$vQZYn_dAhbvzT_Un4vvpuyIATII;

        specialinvoke $r6.<com.android.server.display._$$Lambda$AmbientBrightnessStatsTracker$vQZYn_dAhbvzT_Un4vvpuyIATII: void <init>(com.android.server.display.AmbientBrightnessStatsTracker)>(r0);

        specialinvoke $r5.<com.android.server.display.AmbientBrightnessStatsTracker$Timer: void <init>(com.android.server.display.AmbientBrightnessStatsTracker$Clock)>($r6);

        r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Timer mTimer> = $r5;

        r0.<com.android.server.display.AmbientBrightnessStatsTracker: float mCurrentAmbientBrightness> = -1.0F;

        return;
    }

    static com.android.server.display.AmbientBrightnessStatsTracker$Injector access$000(com.android.server.display.AmbientBrightnessStatsTracker)
    {
        com.android.server.display.AmbientBrightnessStatsTracker r0;
        com.android.server.display.AmbientBrightnessStatsTracker$Injector $r1;

        r0 := @parameter0: com.android.server.display.AmbientBrightnessStatsTracker;

        $r1 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Injector mInjector>;

        return $r1;
    }

    static android.os.UserManager access$100(com.android.server.display.AmbientBrightnessStatsTracker)
    {
        com.android.server.display.AmbientBrightnessStatsTracker r0;
        android.os.UserManager $r1;

        r0 := @parameter0: com.android.server.display.AmbientBrightnessStatsTracker;

        $r1 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: android.os.UserManager mUserManager>;

        return $r1;
    }

    public void add(int, float)
    {
        com.android.server.display.AmbientBrightnessStatsTracker r0;
        int i0, $i1, $i2;
        float f0, $f1, $f2;
        com.android.server.display.AmbientBrightnessStatsTracker$Timer $r2, $r3, $r4, $r8;
        boolean $z0;
        com.android.server.display.AmbientBrightnessStatsTracker$Injector $r5;
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats $r6;
        java.time.LocalDate $r7;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Timer mTimer>;

        $z0 = virtualinvoke $r2.<com.android.server.display.AmbientBrightnessStatsTracker$Timer: boolean isRunning()>();

        if $z0 == 0 goto label5;

        $i1 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: int mCurrentUserId>;

        if i0 != $i1 goto label3;

        $r6 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats mAmbientBrightnessStats>;

        $i2 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: int mCurrentUserId>;

        $r5 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Injector mInjector>;

        $r7 = virtualinvoke $r5.<com.android.server.display.AmbientBrightnessStatsTracker$Injector: java.time.LocalDate getLocalDate()>();

        $f1 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: float mCurrentAmbientBrightness>;

        $r8 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Timer mTimer>;

        $f2 = virtualinvoke $r8.<com.android.server.display.AmbientBrightnessStatsTracker$Timer: float totalDurationSec()>();

        virtualinvoke $r6.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: void log(int,java.time.LocalDate,float,float)>($i2, $r7, $f1, $f2);

     label2:
        goto label4;

     label3:
        r0.<com.android.server.display.AmbientBrightnessStatsTracker: int mCurrentUserId> = i0;

     label4:
        $r3 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Timer mTimer>;

        virtualinvoke $r3.<com.android.server.display.AmbientBrightnessStatsTracker$Timer: void reset()>();

        $r4 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Timer mTimer>;

        virtualinvoke $r4.<com.android.server.display.AmbientBrightnessStatsTracker$Timer: void start()>();

        r0.<com.android.server.display.AmbientBrightnessStatsTracker: float mCurrentAmbientBrightness> = f0;

     label5:
        exitmonitor r0;

        return;

     label6:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.display.AmbientBrightnessStatsTracker r0;
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats $r1;
        java.lang.Throwable $r2;
        java.io.PrintWriter r3;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker;

        r3 := @parameter0: java.io.PrintWriter;

        entermonitor r0;

     label1:
        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("AmbientBrightnessStats:");

        $r1 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats mAmbientBrightnessStats>;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.Object)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.ArrayList getUserStats(int)
    {
        com.android.server.display.AmbientBrightnessStatsTracker r0;
        int i0;
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats $r1;
        java.lang.Throwable $r2;
        java.util.ArrayList r3;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats mAmbientBrightnessStats>;

        r3 = virtualinvoke $r1.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: java.util.ArrayList getUserStats(int)>(i0);

     label2:
        exitmonitor r0;

        return r3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long lambda$new$0$AmbientBrightnessStatsTracker()
    {
        com.android.server.display.AmbientBrightnessStatsTracker r0;
        com.android.server.display.AmbientBrightnessStatsTracker$Injector $r1;
        long $l0;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker;

        $r1 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Injector mInjector>;

        $l0 = virtualinvoke $r1.<com.android.server.display.AmbientBrightnessStatsTracker$Injector: long elapsedRealtimeMillis()>();

        return $l0;
    }

    public void readStats(java.io.InputStream) throws java.io.IOException
    {
        com.android.server.display.AmbientBrightnessStatsTracker r0;
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats $r1;
        java.lang.Throwable $r2;
        java.io.InputStream r3;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker;

        r3 := @parameter0: java.io.InputStream;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats mAmbientBrightnessStats>;

        virtualinvoke $r1.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: void readFromXML(java.io.InputStream)>(r3);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void start()
    {
        com.android.server.display.AmbientBrightnessStatsTracker r0;
        com.android.server.display.AmbientBrightnessStatsTracker$Timer $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Timer mTimer>;

        virtualinvoke $r2.<com.android.server.display.AmbientBrightnessStatsTracker$Timer: void reset()>();

        $r3 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Timer mTimer>;

        virtualinvoke $r3.<com.android.server.display.AmbientBrightnessStatsTracker$Timer: void start()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void stop()
    {
        com.android.server.display.AmbientBrightnessStatsTracker r0;
        com.android.server.display.AmbientBrightnessStatsTracker$Timer $r2, $r3, $r7;
        boolean $z0;
        com.android.server.display.AmbientBrightnessStatsTracker$Injector $r4;
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats $r5;
        int $i0;
        java.time.LocalDate $r6;
        float $f0, $f1;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Timer mTimer>;

        $z0 = virtualinvoke $r2.<com.android.server.display.AmbientBrightnessStatsTracker$Timer: boolean isRunning()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats mAmbientBrightnessStats>;

        $i0 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: int mCurrentUserId>;

        $r4 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Injector mInjector>;

        $r6 = virtualinvoke $r4.<com.android.server.display.AmbientBrightnessStatsTracker$Injector: java.time.LocalDate getLocalDate()>();

        $f0 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: float mCurrentAmbientBrightness>;

        $r7 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Timer mTimer>;

        $f1 = virtualinvoke $r7.<com.android.server.display.AmbientBrightnessStatsTracker$Timer: float totalDurationSec()>();

        virtualinvoke $r5.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: void log(int,java.time.LocalDate,float,float)>($i0, $r6, $f0, $f1);

     label2:
        $r3 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$Timer mTimer>;

        virtualinvoke $r3.<com.android.server.display.AmbientBrightnessStatsTracker$Timer: void reset()>();

        r0.<com.android.server.display.AmbientBrightnessStatsTracker: float mCurrentAmbientBrightness> = -1.0F;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void writeStats(java.io.OutputStream) throws java.io.IOException
    {
        com.android.server.display.AmbientBrightnessStatsTracker r0;
        com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats $r1;
        java.lang.Throwable $r2;
        java.io.OutputStream r3;

        r0 := @this: com.android.server.display.AmbientBrightnessStatsTracker;

        r3 := @parameter0: java.io.OutputStream;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.display.AmbientBrightnessStatsTracker: com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats mAmbientBrightnessStats>;

        virtualinvoke $r1.<com.android.server.display.AmbientBrightnessStatsTracker$AmbientBrightnessStats: void writeToXML(java.io.OutputStream)>(r3);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
