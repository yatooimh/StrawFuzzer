class com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy extends com.android.server.display.BrightnessMappingStrategy
{
    private float mAutoBrightnessAdjustment;
    private final float[] mBrightness;
    private final float[] mLux;
    private float mMaxGamma;
    private long mShortTermModelTimeout;
    private android.util.Spline mSpline;
    private float mUserBrightness;
    private float mUserLux;

    private void <init>(float[], int[], float, long)
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        float[] r1, $r5, $r6, $r9, $r10;
        int[] r2;
        float f0, $f1, $f2;
        long l0;
        int i1, $i2, $i3, i4, $i5, $i6, i7;
        boolean $z1, z2, z3;
        com.android.server.display.utils.Plog $r7;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        r1 := @parameter0: float[];

        r2 := @parameter1: int[];

        f0 := @parameter2: float;

        l0 := @parameter3: long;

        specialinvoke r0.<com.android.server.display.BrightnessMappingStrategy: void <init>()>();

        i4 = lengthof r1;

        if i4 == 0 goto label1;

        $i3 = lengthof r2;

        if $i3 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z2, "Lux and brightness arrays must not be empty!");

        $i5 = lengthof r1;

        $i6 = lengthof r2;

        if $i5 != $i6 goto label3;

        z3 = 1;

        goto label4;

     label3:
        z3 = 0;

     label4:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z3, "Lux and brightness arrays must be the same length!");

        staticinvoke <com.android.internal.util.Preconditions: float[] checkArrayElementsInRange(float[],float,float,java.lang.String)>(r1, 0.0F, 3.4028235E38F, "lux");

        staticinvoke <com.android.internal.util.Preconditions: int[] checkArrayElementsInRange(int[],int,int,java.lang.String)>(r2, 0, 2147483647, "brightness");

        i1 = lengthof r2;

        $r5 = newarray (float)[i1];

        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float[] mLux> = $r5;

        $r6 = newarray (float)[i1];

        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float[] mBrightness> = $r6;

        i7 = 0;

     label5:
        if i7 >= i1 goto label6;

        $r9 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float[] mLux>;

        $f1 = r1[i7];

        $r9[i7] = $f1;

        $r10 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float[] mBrightness>;

        $i2 = r2[i7];

        $f2 = staticinvoke <com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float normalizeAbsoluteBrightness(int)>($i2);

        $r10[i7] = $f2;

        i7 = i7 + 1;

        goto label5;

     label6:
        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mMaxGamma> = f0;

        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mAutoBrightnessAdjustment> = 0.0F;

        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserLux> = -1.0F;

        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserBrightness> = -1.0F;

        $z1 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: boolean mLoggingEnabled>;

        if $z1 == 0 goto label7;

        $r7 = staticinvoke <com.android.server.display.BrightnessMappingStrategy: com.android.server.display.utils.Plog access$100()>();

        virtualinvoke $r7.<com.android.server.display.utils.Plog: com.android.server.display.utils.Plog start(java.lang.String)>("simple mapping strategy");

     label7:
        specialinvoke r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: void computeSpline()>();

        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: long mShortTermModelTimeout> = l0;

        return;
    }

    void <init>(float[], int[], float, long, com.android.server.display.BrightnessMappingStrategy$1)
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        float[] r1;
        int[] r2;
        float f0;
        long l0;
        com.android.server.display.BrightnessMappingStrategy$1 r3;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        r1 := @parameter0: float[];

        r2 := @parameter1: int[];

        f0 := @parameter2: float;

        l0 := @parameter3: long;

        r3 := @parameter4: com.android.server.display.BrightnessMappingStrategy$1;

        specialinvoke r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: void <init>(float[],int[],float,long)>(r1, r2, f0, l0);

        return;
    }

    private void computeSpline()
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        android.util.Pair r1;
        float $f0, $f1, $f2, $f3;
        float[] $r2, $r3, $r6, $r7;
        java.lang.Object $r4, $r5;
        android.util.Spline $r8;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        $r3 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float[] mLux>;

        $r2 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float[] mBrightness>;

        $f3 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserLux>;

        $f2 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserBrightness>;

        $f1 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mAutoBrightnessAdjustment>;

        $f0 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mMaxGamma>;

        r1 = virtualinvoke r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: android.util.Pair getAdjustedCurve(float[],float[],float,float,float,float)>($r3, $r2, $f3, $f2, $f1, $f0);

        $r4 = r1.<android.util.Pair: java.lang.Object first>;

        $r7 = (float[]) $r4;

        $r5 = r1.<android.util.Pair: java.lang.Object second>;

        $r6 = (float[]) $r5;

        $r8 = staticinvoke <android.util.Spline: android.util.Spline createSpline(float[],float[])>($r7, $r6);

        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: android.util.Spline mSpline> = $r8;

        return;
    }

    private float getUnadjustedBrightness(float)
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        float f0, $f1;
        float[] $r1, $r2;
        android.util.Spline $r3;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        f0 := @parameter0: float;

        $r2 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float[] mLux>;

        $r1 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float[] mBrightness>;

        $r3 = staticinvoke <android.util.Spline: android.util.Spline createSpline(float[],float[])>($r2, $r1);

        $f1 = virtualinvoke $r3.<android.util.Spline: float interpolate(float)>(f0);

        return $f1;
    }

    public void addUserDataPoint(float, float)
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        float f0, f1, $f2, $f3, f4, f5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r7;
        java.lang.String $r6, $r13;
        com.android.server.display.utils.Plog $r14, $r15, $r16;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f4 = specialinvoke r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float getUnadjustedBrightness(float)>(f0);

        $z0 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: boolean mLoggingEnabled>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addUserDataPoint: (");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BrightnessMappingStrategy", $r13);

        $r14 = staticinvoke <com.android.server.display.BrightnessMappingStrategy: com.android.server.display.utils.Plog access$100()>();

        $r15 = virtualinvoke $r14.<com.android.server.display.utils.Plog: com.android.server.display.utils.Plog start(java.lang.String)>("add user data point");

        $r16 = virtualinvoke $r15.<com.android.server.display.utils.Plog: com.android.server.display.utils.Plog logPoint(java.lang.String,float,float)>("user data point", f0, f1);

        virtualinvoke $r16.<com.android.server.display.utils.Plog: com.android.server.display.utils.Plog logPoint(java.lang.String,float,float)>("current brightness", f0, f4);

     label1:
        $f2 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mMaxGamma>;

        f5 = virtualinvoke r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float inferAutoBrightnessAdjustment(float,float,float)>($f2, f1, f4);

        $z1 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: boolean mLoggingEnabled>;

        if $z1 == 0 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addUserDataPoint: ");

        $f3 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mAutoBrightnessAdjustment>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f5);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BrightnessMappingStrategy", $r6);

     label2:
        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mAutoBrightnessAdjustment> = f5;

        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserLux> = f0;

        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserBrightness> = f1;

        specialinvoke r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: void computeSpline()>();

        return;
    }

    public void clearUserDataPoints()
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        float $f0, $f1, $f2, $f3;
        byte $b0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;
        com.android.server.display.utils.Plog $r7, $r8;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        $f0 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserLux>;

        $b0 = $f0 cmpl -1.0F;

        if $b0 == 0 goto label2;

        $z0 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: boolean mLoggingEnabled>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clearUserDataPoints: ");

        $f1 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mAutoBrightnessAdjustment>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => 0");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BrightnessMappingStrategy", $r6);

        $r7 = staticinvoke <com.android.server.display.BrightnessMappingStrategy: com.android.server.display.utils.Plog access$100()>();

        $r8 = virtualinvoke $r7.<com.android.server.display.utils.Plog: com.android.server.display.utils.Plog start(java.lang.String)>("clear user data points");

        $f3 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserLux>;

        $f2 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserBrightness>;

        virtualinvoke $r8.<com.android.server.display.utils.Plog: com.android.server.display.utils.Plog logPoint(java.lang.String,float,float)>("user data point", $f3, $f2);

     label1:
        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mAutoBrightnessAdjustment> = 0.0F;

        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserLux> = -1.0F;

        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserBrightness> = -1.0F;

        specialinvoke r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: void computeSpline()>();

     label2:
        return;
    }

    public float convertToNits(int)
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        int i0;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        i0 := @parameter0: int;

        return -1.0F;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r7, $r11, $r15, $r19;
        android.util.Spline $r4;
        java.lang.String $r6, $r10, $r14, $r18, $r22;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("SimpleMappingStrategy");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSpline=");

        $r4 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: android.util.Spline mSpline>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mMaxGamma=");

        $f0 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mMaxGamma>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAutoBrightnessAdjustment=");

        $f1 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mAutoBrightnessAdjustment>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mUserLux=");

        $f2 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserLux>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mUserBrightness=");

        $f3 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserBrightness>;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        return;
    }

    public float getAutoBrightnessAdjustment()
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        float $f0;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        $f0 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mAutoBrightnessAdjustment>;

        return $f0;
    }

    public float getBrightness(float, java.lang.String, int)
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        float f0, $f1;
        java.lang.String r1;
        int i0;
        android.util.Spline $r2;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        f0 := @parameter0: float;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: android.util.Spline mSpline>;

        $f1 = virtualinvoke $r2.<android.util.Spline: float interpolate(float)>(f0);

        return $f1;
    }

    public android.hardware.display.BrightnessConfiguration getBrightnessConfiguration()
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        return null;
    }

    public android.hardware.display.BrightnessConfiguration getDefaultConfig()
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        return null;
    }

    public long getShortTermModelTimeout()
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        long $l0;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        $l0 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: long mShortTermModelTimeout>;

        return $l0;
    }

    public boolean hasUserDataPoints()
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        float $f0;
        byte $b0;
        boolean z0;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        $f0 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mUserLux>;

        $b0 = $f0 cmpl -1.0F;

        if $b0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isDefaultConfig()
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        return 1;
    }

    public boolean setAutoBrightnessAdjustment(float)
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        float $f0, $f1, f2, f3;
        byte $b0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;
        com.android.server.display.utils.Plog $r8;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        f2 := @parameter0: float;

        f3 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>(f2, -1.0F, 1.0F);

        $f0 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mAutoBrightnessAdjustment>;

        $b0 = f3 cmpl $f0;

        if $b0 != 0 goto label1;

        return 0;

     label1:
        $z0 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: boolean mLoggingEnabled>;

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setAutoBrightnessAdjustment: ");

        $f1 = r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mAutoBrightnessAdjustment>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BrightnessMappingStrategy", $r7);

        $r8 = staticinvoke <com.android.server.display.BrightnessMappingStrategy: com.android.server.display.utils.Plog access$100()>();

        virtualinvoke $r8.<com.android.server.display.utils.Plog: com.android.server.display.utils.Plog start(java.lang.String)>("auto-brightness adjustment");

     label2:
        r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: float mAutoBrightnessAdjustment> = f3;

        specialinvoke r0.<com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy: void computeSpline()>();

        return 1;
    }

    public boolean setBrightnessConfiguration(android.hardware.display.BrightnessConfiguration)
    {
        com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy r0;
        android.hardware.display.BrightnessConfiguration r1;

        r0 := @this: com.android.server.display.BrightnessMappingStrategy$SimpleMappingStrategy;

        r1 := @parameter0: android.hardware.display.BrightnessConfiguration;

        return 0;
    }
}
