public class com.android.server.display.DisplayDeviceConfig extends java.lang.Object
{
    private static final java.lang.String CONFIG_FILE_FORMAT;
    private static final java.lang.String DISPLAY_CONFIG_DIR;
    private static final java.lang.String ETC_DIR;
    public static final float HIGH_BRIGHTNESS_MODE_UNSUPPORTED;
    private static final java.lang.String TAG;
    private float[] mBrightness;
    private float[] mNits;

    private void <init>()
    {
        com.android.server.display.DisplayDeviceConfig r0;

        r0 := @this: com.android.server.display.DisplayDeviceConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.server.display.DisplayDeviceConfig create(long)
    {
        long l0;
        java.lang.String r1;
        com.android.server.display.DisplayDeviceConfig $r2;
        java.lang.Object[] $r3;
        java.lang.Long $r4;
        java.io.File $r5, $r7;
        java.lang.String[] $r6;

        l0 := @parameter0: long;

        $r2 = new com.android.server.display.DisplayDeviceConfig;

        specialinvoke $r2.<com.android.server.display.DisplayDeviceConfig: void <init>()>();

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3[0] = $r4;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("display_%d.xml", $r3);

        $r5 = staticinvoke <android.os.Environment: java.io.File getProductDirectory()>();

        $r6 = newarray (java.lang.String)[3];

        $r6[0] = "etc";

        $r6[1] = "displayconfig";

        $r6[2] = r1;

        $r7 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r5, $r6);

        specialinvoke $r2.<com.android.server.display.DisplayDeviceConfig: void initFromFile(java.io.File)>($r7);

        return $r2;
    }

    private void initFromFile(java.io.File)
    {
        com.android.server.display.DisplayDeviceConfig r0;
        java.io.File r1;
        boolean $z0, $z1;
        com.android.server.display.config.DisplayConfiguration $r2;
        java.lang.StringBuilder $r3, $r9;
        java.lang.String $r7, $r12;
        java.lang.Throwable $r8, $r13, $r14;
        java.io.BufferedInputStream r16;
        java.io.FileInputStream r17;

        r0 := @this: com.android.server.display.DisplayDeviceConfig;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $z1 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z1 != 0 goto label02;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Display configuration is not a file: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", skipping");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DisplayDeviceConfig", $r7);

        return;

     label02:
        r16 = new java.io.BufferedInputStream;

        r17 = new java.io.FileInputStream;

        specialinvoke r17.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        specialinvoke r16.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r17);

     label03:
        $r2 = staticinvoke <com.android.server.display.config.XmlParser: com.android.server.display.config.DisplayConfiguration read(java.io.InputStream)>(r16);

        specialinvoke r0.<com.android.server.display.DisplayDeviceConfig: void loadBrightnessMap(com.android.server.display.config.DisplayConfiguration)>($r2);

     label04:
        virtualinvoke r16.<java.io.InputStream: void close()>();

     label05:
        goto label13;

     label06:
        $r14 := @caughtexception;

     label07:
        virtualinvoke r16.<java.io.InputStream: void close()>();

     label08:
        goto label11;

     label09:
        $r13 := @caughtexception;

     label10:
        virtualinvoke $r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r13);

     label11:
        throw $r14;

     label12:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encountered an error while reading/parsing display config file: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DisplayDeviceConfig", $r12, $r8);

     label13:
        return;

        catch java.io.IOException from label02 to label03 with label12;
        catch javax.xml.datatype.DatatypeConfigurationException from label02 to label03 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.io.IOException from label04 to label05 with label12;
        catch javax.xml.datatype.DatatypeConfigurationException from label04 to label05 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch javax.xml.datatype.DatatypeConfigurationException from label10 to label11 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label12;
        catch java.io.IOException from label11 to label12 with label12;
        catch javax.xml.datatype.DatatypeConfigurationException from label11 to label12 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label12;
    }

    private void loadBrightnessMap(com.android.server.display.config.DisplayConfiguration)
    {
        com.android.server.display.DisplayDeviceConfig r0;
        com.android.server.display.config.Point r1;
        com.android.server.display.config.NitsMap $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.math.BigDecimal $r4, $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        int $i0, $i2, $i4, $i6, i8, i9;
        byte $b1, $b3;
        java.lang.StringBuilder $r6, $r12;
        java.lang.String $r11, $r17;
        com.android.server.display.config.DisplayConfiguration r18;
        java.util.List r19;
        float[] r20, r21;
        java.util.Iterator r22;

        r0 := @this: com.android.server.display.DisplayDeviceConfig;

        r18 := @parameter0: com.android.server.display.config.DisplayConfiguration;

        $r2 = virtualinvoke r18.<com.android.server.display.config.DisplayConfiguration: com.android.server.display.config.NitsMap getScreenBrightnessMap()>();

        r19 = virtualinvoke $r2.<com.android.server.display.config.NitsMap: java.util.List getPoint()>();

        i8 = interfaceinvoke r19.<java.util.List: int size()>();

        r20 = newarray (float)[i8];

        r21 = newarray (float)[i8];

        i9 = 0;

        r22 = interfaceinvoke r19.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r1 = (com.android.server.display.config.Point) $r3;

        $r4 = virtualinvoke r1.<com.android.server.display.config.Point: java.math.BigDecimal getNits()>();

        $f0 = virtualinvoke $r4.<java.math.BigDecimal: float floatValue()>();

        r20[i9] = $f0;

        $r5 = virtualinvoke r1.<com.android.server.display.config.Point: java.math.BigDecimal getValue()>();

        $f1 = virtualinvoke $r5.<java.math.BigDecimal: float floatValue()>();

        r21[i9] = $f1;

        if i9 <= 0 goto label3;

        $f3 = r20[i9];

        $i0 = i9 - 1;

        $f2 = r20[$i0];

        $b1 = $f3 cmpg $f2;

        if $b1 >= 0 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("screenBrightnessMap must be non-decreasing, ignoring rest  of configuration. Nits: ");

        $f8 = r20[i9];

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f8);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < ");

        $i6 = i9 - 1;

        $f9 = r20[$i6];

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f9);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DisplayDeviceConfig", $r17);

        return;

     label2:
        $f5 = r21[i9];

        $i2 = i9 - 1;

        $f4 = r21[$i2];

        $b3 = $f5 cmpg $f4;

        if $b3 >= 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("screenBrightnessMap must be non-decreasing, ignoring rest  of configuration. Value: ");

        $f6 = r21[i9];

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f6);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < ");

        $i4 = i9 - 1;

        $f7 = r21[$i4];

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f7);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DisplayDeviceConfig", $r11);

        return;

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        r0.<com.android.server.display.DisplayDeviceConfig: float[] mNits> = r20;

        r0.<com.android.server.display.DisplayDeviceConfig: float[] mBrightness> = r21;

        return;
    }

    public float[] getBrightness()
    {
        com.android.server.display.DisplayDeviceConfig r0;
        float[] $r1;

        r0 := @this: com.android.server.display.DisplayDeviceConfig;

        $r1 = r0.<com.android.server.display.DisplayDeviceConfig: float[] mBrightness>;

        return $r1;
    }

    public float[] getNits()
    {
        com.android.server.display.DisplayDeviceConfig r0;
        float[] $r1;

        r0 := @this: com.android.server.display.DisplayDeviceConfig;

        $r1 = r0.<com.android.server.display.DisplayDeviceConfig: float[] mNits>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.server.display.DisplayDeviceConfig: java.lang.String TAG> = "DisplayDeviceConfig";

        <com.android.server.display.DisplayDeviceConfig: float HIGH_BRIGHTNESS_MODE_UNSUPPORTED> = #NaNF;

        <com.android.server.display.DisplayDeviceConfig: java.lang.String ETC_DIR> = "etc";

        <com.android.server.display.DisplayDeviceConfig: java.lang.String DISPLAY_CONFIG_DIR> = "displayconfig";

        <com.android.server.display.DisplayDeviceConfig: java.lang.String CONFIG_FILE_FORMAT> = "display_%d.xml";

        return;
    }
}
