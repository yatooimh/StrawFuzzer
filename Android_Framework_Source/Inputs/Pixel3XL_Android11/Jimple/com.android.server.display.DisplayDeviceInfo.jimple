final class com.android.server.display.DisplayDeviceInfo extends java.lang.Object
{
    public static final int DIFF_COLOR_MODE;
    public static final int DIFF_OTHER;
    public static final int DIFF_STATE;
    public static final int FLAG_CAN_SHOW_WITH_INSECURE_KEYGUARD;
    public static final int FLAG_DEFAULT_DISPLAY;
    public static final int FLAG_DESTROY_CONTENT_ON_REMOVAL;
    public static final int FLAG_MASK_DISPLAY_CUTOUT;
    public static final int FLAG_NEVER_BLANK;
    public static final int FLAG_OWN_CONTENT_ONLY;
    public static final int FLAG_PRESENTATION;
    public static final int FLAG_PRIVATE;
    public static final int FLAG_ROTATES_WITH_CONTENT;
    public static final int FLAG_ROUND;
    public static final int FLAG_SECURE;
    public static final int FLAG_SHOULD_SHOW_SYSTEM_DECORATIONS;
    public static final int FLAG_SUPPORTS_PROTECTED_BUFFERS;
    public static final int FLAG_TRUSTED;
    public static final int TOUCH_EXTERNAL;
    public static final int TOUCH_INTERNAL;
    public static final int TOUCH_NONE;
    public static final int TOUCH_VIRTUAL;
    public android.view.DisplayAddress address;
    public boolean allmSupported;
    public long appVsyncOffsetNanos;
    public int colorMode;
    public int defaultModeId;
    public int densityDpi;
    public android.hardware.display.DeviceProductInfo deviceProductInfo;
    public android.view.DisplayCutout displayCutout;
    public int flags;
    public boolean gameContentTypeSupported;
    public android.view.Display$HdrCapabilities hdrCapabilities;
    public int height;
    public int modeId;
    public java.lang.String name;
    public java.lang.String ownerPackageName;
    public int ownerUid;
    public long presentationDeadlineNanos;
    public int rotation;
    public int state;
    public int[] supportedColorModes;
    public android.view.Display$Mode[] supportedModes;
    public int touch;
    public int type;
    public java.lang.String uniqueId;
    public int width;
    public float xDpi;
    public float yDpi;

    void <init>()
    {
        com.android.server.display.DisplayDeviceInfo r0;
        android.view.Display$Mode[] $r1;
        int[] $r2;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <android.view.Display$Mode: android.view.Display$Mode[] EMPTY_ARRAY>;

        r0.<com.android.server.display.DisplayDeviceInfo: android.view.Display$Mode[] supportedModes> = $r1;

        $r2 = newarray (int)[1];

        $r2[0] = 0;

        r0.<com.android.server.display.DisplayDeviceInfo: int[] supportedColorModes> = $r2;

        r0.<com.android.server.display.DisplayDeviceInfo: int rotation> = 0;

        r0.<com.android.server.display.DisplayDeviceInfo: int state> = 2;

        return;
    }

    private static java.lang.String flagsToString(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i1 = i0 & 1;

        if $i1 == 0 goto label01;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_DEFAULT_DISPLAY");

     label01:
        $i2 = i0 & 2;

        if $i2 == 0 goto label02;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_ROTATES_WITH_CONTENT");

     label02:
        $i3 = i0 & 4;

        if $i3 == 0 goto label03;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_SECURE");

     label03:
        $i4 = i0 & 8;

        if $i4 == 0 goto label04;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_SUPPORTS_PROTECTED_BUFFERS");

     label04:
        $i5 = i0 & 16;

        if $i5 == 0 goto label05;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_PRIVATE");

     label05:
        $i6 = i0 & 32;

        if $i6 == 0 goto label06;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_NEVER_BLANK");

     label06:
        $i7 = i0 & 64;

        if $i7 == 0 goto label07;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_PRESENTATION");

     label07:
        $i8 = i0 & 128;

        if $i8 == 0 goto label08;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_OWN_CONTENT_ONLY");

     label08:
        $i9 = i0 & 256;

        if $i9 == 0 goto label09;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_ROUND");

     label09:
        $i10 = i0 & 512;

        if $i10 == 0 goto label10;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_CAN_SHOW_WITH_INSECURE_KEYGUARD");

     label10:
        $i11 = i0 & 2048;

        if $i11 == 0 goto label11;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_MASK_DISPLAY_CUTOUT");

     label11:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static java.lang.String touchToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;

     label1:
        return "VIRTUAL";

     label2:
        return "EXTERNAL";

     label3:
        return "INTERNAL";

     label4:
        return "NONE";
    }

    public void copyFrom(com.android.server.display.DisplayDeviceInfo)
    {
        com.android.server.display.DisplayDeviceInfo r0, r1;
        java.lang.String $r2, $r3, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i13;
        android.view.Display$Mode[] $r4;
        int[] $r5;
        android.view.Display$HdrCapabilities $r6;
        boolean $z0, $z1;
        float $f0, $f1;
        long $l6, $l7;
        android.view.DisplayCutout $r7;
        android.view.DisplayAddress $r8;
        android.hardware.display.DeviceProductInfo $r9;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        r1 := @parameter0: com.android.server.display.DisplayDeviceInfo;

        $r2 = r1.<com.android.server.display.DisplayDeviceInfo: java.lang.String name>;

        r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String name> = $r2;

        $r3 = r1.<com.android.server.display.DisplayDeviceInfo: java.lang.String uniqueId>;

        r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String uniqueId> = $r3;

        $i0 = r1.<com.android.server.display.DisplayDeviceInfo: int width>;

        r0.<com.android.server.display.DisplayDeviceInfo: int width> = $i0;

        $i1 = r1.<com.android.server.display.DisplayDeviceInfo: int height>;

        r0.<com.android.server.display.DisplayDeviceInfo: int height> = $i1;

        $i2 = r1.<com.android.server.display.DisplayDeviceInfo: int modeId>;

        r0.<com.android.server.display.DisplayDeviceInfo: int modeId> = $i2;

        $i3 = r1.<com.android.server.display.DisplayDeviceInfo: int defaultModeId>;

        r0.<com.android.server.display.DisplayDeviceInfo: int defaultModeId> = $i3;

        $r4 = r1.<com.android.server.display.DisplayDeviceInfo: android.view.Display$Mode[] supportedModes>;

        r0.<com.android.server.display.DisplayDeviceInfo: android.view.Display$Mode[] supportedModes> = $r4;

        $i4 = r1.<com.android.server.display.DisplayDeviceInfo: int colorMode>;

        r0.<com.android.server.display.DisplayDeviceInfo: int colorMode> = $i4;

        $r5 = r1.<com.android.server.display.DisplayDeviceInfo: int[] supportedColorModes>;

        r0.<com.android.server.display.DisplayDeviceInfo: int[] supportedColorModes> = $r5;

        $r6 = r1.<com.android.server.display.DisplayDeviceInfo: android.view.Display$HdrCapabilities hdrCapabilities>;

        r0.<com.android.server.display.DisplayDeviceInfo: android.view.Display$HdrCapabilities hdrCapabilities> = $r6;

        $z0 = r1.<com.android.server.display.DisplayDeviceInfo: boolean allmSupported>;

        r0.<com.android.server.display.DisplayDeviceInfo: boolean allmSupported> = $z0;

        $z1 = r1.<com.android.server.display.DisplayDeviceInfo: boolean gameContentTypeSupported>;

        r0.<com.android.server.display.DisplayDeviceInfo: boolean gameContentTypeSupported> = $z1;

        $i5 = r1.<com.android.server.display.DisplayDeviceInfo: int densityDpi>;

        r0.<com.android.server.display.DisplayDeviceInfo: int densityDpi> = $i5;

        $f0 = r1.<com.android.server.display.DisplayDeviceInfo: float xDpi>;

        r0.<com.android.server.display.DisplayDeviceInfo: float xDpi> = $f0;

        $f1 = r1.<com.android.server.display.DisplayDeviceInfo: float yDpi>;

        r0.<com.android.server.display.DisplayDeviceInfo: float yDpi> = $f1;

        $l6 = r1.<com.android.server.display.DisplayDeviceInfo: long appVsyncOffsetNanos>;

        r0.<com.android.server.display.DisplayDeviceInfo: long appVsyncOffsetNanos> = $l6;

        $l7 = r1.<com.android.server.display.DisplayDeviceInfo: long presentationDeadlineNanos>;

        r0.<com.android.server.display.DisplayDeviceInfo: long presentationDeadlineNanos> = $l7;

        $i8 = r1.<com.android.server.display.DisplayDeviceInfo: int flags>;

        r0.<com.android.server.display.DisplayDeviceInfo: int flags> = $i8;

        $r7 = r1.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayCutout displayCutout>;

        r0.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayCutout displayCutout> = $r7;

        $i9 = r1.<com.android.server.display.DisplayDeviceInfo: int touch>;

        r0.<com.android.server.display.DisplayDeviceInfo: int touch> = $i9;

        $i10 = r1.<com.android.server.display.DisplayDeviceInfo: int rotation>;

        r0.<com.android.server.display.DisplayDeviceInfo: int rotation> = $i10;

        $i11 = r1.<com.android.server.display.DisplayDeviceInfo: int type>;

        r0.<com.android.server.display.DisplayDeviceInfo: int type> = $i11;

        $r8 = r1.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayAddress address>;

        r0.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayAddress address> = $r8;

        $r9 = r1.<com.android.server.display.DisplayDeviceInfo: android.hardware.display.DeviceProductInfo deviceProductInfo>;

        r0.<com.android.server.display.DisplayDeviceInfo: android.hardware.display.DeviceProductInfo deviceProductInfo> = $r9;

        $i12 = r1.<com.android.server.display.DisplayDeviceInfo: int state>;

        r0.<com.android.server.display.DisplayDeviceInfo: int state> = $i12;

        $i13 = r1.<com.android.server.display.DisplayDeviceInfo: int ownerUid>;

        r0.<com.android.server.display.DisplayDeviceInfo: int ownerUid> = $i13;

        $r10 = r1.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName>;

        r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName> = $r10;

        return;
    }

    public int diff(com.android.server.display.DisplayDeviceInfo)
    {
        com.android.server.display.DisplayDeviceInfo r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        java.lang.String $r2, $r3, $r4, $r5, $r18, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        android.view.Display$Mode[] $r6, $r7;
        int[] $r8, $r9;
        android.view.Display$HdrCapabilities $r10, $r11;
        float $f0, $f1, $f2, $f3;
        byte $b14, $b15, $b18, $b21, b32, b33, b34;
        long $l16, $l17, $l19, $l20;
        android.view.DisplayCutout $r12, $r13;
        android.view.DisplayAddress $r14, $r15;
        android.hardware.display.DeviceProductInfo $r16, $r17;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        r1 := @parameter0: com.android.server.display.DisplayDeviceInfo;

        b32 = 0;

        $i1 = r0.<com.android.server.display.DisplayDeviceInfo: int state>;

        $i0 = r1.<com.android.server.display.DisplayDeviceInfo: int state>;

        if $i1 == $i0 goto label1;

        b32 = 0 | 1;

     label1:
        b33 = b32;

        $i3 = r0.<com.android.server.display.DisplayDeviceInfo: int colorMode>;

        $i2 = r1.<com.android.server.display.DisplayDeviceInfo: int colorMode>;

        if $i3 == $i2 goto label2;

        b33 = b32 | 4;

     label2:
        $r3 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String name>;

        $r2 = r1.<com.android.server.display.DisplayDeviceInfo: java.lang.String name>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $z0 == 0 goto label3;

        $r5 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String uniqueId>;

        $r4 = r1.<com.android.server.display.DisplayDeviceInfo: java.lang.String uniqueId>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z1 == 0 goto label3;

        $i5 = r0.<com.android.server.display.DisplayDeviceInfo: int width>;

        $i4 = r1.<com.android.server.display.DisplayDeviceInfo: int width>;

        if $i5 != $i4 goto label3;

        $i7 = r0.<com.android.server.display.DisplayDeviceInfo: int height>;

        $i6 = r1.<com.android.server.display.DisplayDeviceInfo: int height>;

        if $i7 != $i6 goto label3;

        $i9 = r0.<com.android.server.display.DisplayDeviceInfo: int modeId>;

        $i8 = r1.<com.android.server.display.DisplayDeviceInfo: int modeId>;

        if $i9 != $i8 goto label3;

        $i11 = r0.<com.android.server.display.DisplayDeviceInfo: int defaultModeId>;

        $i10 = r1.<com.android.server.display.DisplayDeviceInfo: int defaultModeId>;

        if $i11 != $i10 goto label3;

        $r7 = r0.<com.android.server.display.DisplayDeviceInfo: android.view.Display$Mode[] supportedModes>;

        $r6 = r1.<com.android.server.display.DisplayDeviceInfo: android.view.Display$Mode[] supportedModes>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r6);

        if $z2 == 0 goto label3;

        $r9 = r0.<com.android.server.display.DisplayDeviceInfo: int[] supportedColorModes>;

        $r8 = r1.<com.android.server.display.DisplayDeviceInfo: int[] supportedColorModes>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r9, $r8);

        if $z3 == 0 goto label3;

        $r11 = r0.<com.android.server.display.DisplayDeviceInfo: android.view.Display$HdrCapabilities hdrCapabilities>;

        $r10 = r1.<com.android.server.display.DisplayDeviceInfo: android.view.Display$HdrCapabilities hdrCapabilities>;

        $z4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r11, $r10);

        if $z4 == 0 goto label3;

        $z6 = r0.<com.android.server.display.DisplayDeviceInfo: boolean allmSupported>;

        $z5 = r1.<com.android.server.display.DisplayDeviceInfo: boolean allmSupported>;

        if $z6 != $z5 goto label3;

        $z8 = r0.<com.android.server.display.DisplayDeviceInfo: boolean gameContentTypeSupported>;

        $z7 = r1.<com.android.server.display.DisplayDeviceInfo: boolean gameContentTypeSupported>;

        if $z8 != $z7 goto label3;

        $i13 = r0.<com.android.server.display.DisplayDeviceInfo: int densityDpi>;

        $i12 = r1.<com.android.server.display.DisplayDeviceInfo: int densityDpi>;

        if $i13 != $i12 goto label3;

        $f1 = r0.<com.android.server.display.DisplayDeviceInfo: float xDpi>;

        $f0 = r1.<com.android.server.display.DisplayDeviceInfo: float xDpi>;

        $b14 = $f1 cmpl $f0;

        if $b14 != 0 goto label3;

        $f3 = r0.<com.android.server.display.DisplayDeviceInfo: float yDpi>;

        $f2 = r1.<com.android.server.display.DisplayDeviceInfo: float yDpi>;

        $b15 = $f3 cmpl $f2;

        if $b15 != 0 goto label3;

        $l17 = r0.<com.android.server.display.DisplayDeviceInfo: long appVsyncOffsetNanos>;

        $l16 = r1.<com.android.server.display.DisplayDeviceInfo: long appVsyncOffsetNanos>;

        $b18 = $l17 cmp $l16;

        if $b18 != 0 goto label3;

        $l20 = r0.<com.android.server.display.DisplayDeviceInfo: long presentationDeadlineNanos>;

        $l19 = r1.<com.android.server.display.DisplayDeviceInfo: long presentationDeadlineNanos>;

        $b21 = $l20 cmp $l19;

        if $b21 != 0 goto label3;

        $i23 = r0.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i22 = r1.<com.android.server.display.DisplayDeviceInfo: int flags>;

        if $i23 != $i22 goto label3;

        $r13 = r0.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayCutout displayCutout>;

        $r12 = r1.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayCutout displayCutout>;

        $z9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z9 == 0 goto label3;

        $i25 = r0.<com.android.server.display.DisplayDeviceInfo: int touch>;

        $i24 = r1.<com.android.server.display.DisplayDeviceInfo: int touch>;

        if $i25 != $i24 goto label3;

        $i27 = r0.<com.android.server.display.DisplayDeviceInfo: int rotation>;

        $i26 = r1.<com.android.server.display.DisplayDeviceInfo: int rotation>;

        if $i27 != $i26 goto label3;

        $i29 = r0.<com.android.server.display.DisplayDeviceInfo: int type>;

        $i28 = r1.<com.android.server.display.DisplayDeviceInfo: int type>;

        if $i29 != $i28 goto label3;

        $r15 = r0.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayAddress address>;

        $r14 = r1.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayAddress address>;

        $z10 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r15, $r14);

        if $z10 == 0 goto label3;

        $r17 = r0.<com.android.server.display.DisplayDeviceInfo: android.hardware.display.DeviceProductInfo deviceProductInfo>;

        $r16 = r1.<com.android.server.display.DisplayDeviceInfo: android.hardware.display.DeviceProductInfo deviceProductInfo>;

        $z11 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r17, $r16);

        if $z11 == 0 goto label3;

        $i31 = r0.<com.android.server.display.DisplayDeviceInfo: int ownerUid>;

        $i30 = r1.<com.android.server.display.DisplayDeviceInfo: int ownerUid>;

        if $i31 != $i30 goto label3;

        b34 = b33;

        $r19 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName>;

        $r18 = r1.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName>;

        $z12 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r19, $r18);

        if $z12 != 0 goto label4;

     label3:
        b34 = b33 | 2;

     label4:
        return b34;
    }

    public boolean equals(com.android.server.display.DisplayDeviceInfo)
    {
        com.android.server.display.DisplayDeviceInfo r0, r1;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        r1 := @parameter0: com.android.server.display.DisplayDeviceInfo;

        if r1 == null goto label1;

        $i0 = virtualinvoke r0.<com.android.server.display.DisplayDeviceInfo: int diff(com.android.server.display.DisplayDeviceInfo)>(r1);

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.server.display.DisplayDeviceInfo r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.android.server.display.DisplayDeviceInfo;

        if $z0 == 0 goto label1;

        $r2 = (com.android.server.display.DisplayDeviceInfo) r1;

        $z1 = virtualinvoke r0.<com.android.server.display.DisplayDeviceInfo: boolean equals(com.android.server.display.DisplayDeviceInfo)>($r2);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public int hashCode()
    {
        com.android.server.display.DisplayDeviceInfo r0;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        return 0;
    }

    public void setAssumedDensityForExternalDisplay(int, int)
    {
        com.android.server.display.DisplayDeviceInfo r0;
        int i0, $i1, $i2, i3, i4;
        float $f0, $f1;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i3, i0);

        $i2 = $i1 * 320;

        i4 = $i2 / 1080;

        r0.<com.android.server.display.DisplayDeviceInfo: int densityDpi> = i4;

        $f0 = (float) i4;

        r0.<com.android.server.display.DisplayDeviceInfo: float xDpi> = $f0;

        $f1 = (float) i4;

        r0.<com.android.server.display.DisplayDeviceInfo: float yDpi> = $f1;

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.display.DisplayDeviceInfo r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7, $r19, $r25, $r47, $r52, $r59, $r62, $r69, $r76, $r77;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.view.Display$Mode[] $r18;
        int[] $r24;
        android.view.Display$HdrCapabilities $r28;
        boolean $z0, $z1;
        float $f0, $f1;
        long $l6, $l7;
        android.view.DisplayCutout $r45, $r74;
        android.view.DisplayAddress $r54, $r71;
        android.hardware.display.DeviceProductInfo $r56;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DisplayDeviceInfo{\"");

        $r4 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": uniqueId=\"");

        $r7 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String uniqueId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", ");

        $i0 = r0.<com.android.server.display.DisplayDeviceInfo: int width>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $i1 = r0.<com.android.server.display.DisplayDeviceInfo: int height>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", modeId ");

        $i2 = r0.<com.android.server.display.DisplayDeviceInfo: int modeId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultModeId ");

        $i3 = r0.<com.android.server.display.DisplayDeviceInfo: int defaultModeId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", supportedModes ");

        $r18 = r0.<com.android.server.display.DisplayDeviceInfo: android.view.Display$Mode[] supportedModes>;

        $r19 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r18);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", colorMode ");

        $i4 = r0.<com.android.server.display.DisplayDeviceInfo: int colorMode>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", supportedColorModes ");

        $r24 = r0.<com.android.server.display.DisplayDeviceInfo: int[] supportedColorModes>;

        $r25 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r24);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", HdrCapabilities ");

        $r28 = r0.<com.android.server.display.DisplayDeviceInfo: android.view.Display$HdrCapabilities hdrCapabilities>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", allmSupported ");

        $z0 = r0.<com.android.server.display.DisplayDeviceInfo: boolean allmSupported>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", gameContentTypeSupported ");

        $z1 = r0.<com.android.server.display.DisplayDeviceInfo: boolean gameContentTypeSupported>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", density ");

        $i5 = r0.<com.android.server.display.DisplayDeviceInfo: int densityDpi>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f0 = r0.<com.android.server.display.DisplayDeviceInfo: float xDpi>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $f1 = r0.<com.android.server.display.DisplayDeviceInfo: float yDpi>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dpi");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", appVsyncOff ");

        $l6 = r0.<com.android.server.display.DisplayDeviceInfo: long appVsyncOffsetNanos>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", presDeadline ");

        $l7 = r0.<com.android.server.display.DisplayDeviceInfo: long presentationDeadlineNanos>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r45 = r0.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayCutout displayCutout>;

        if $r45 == null goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", cutout ");

        $r74 = r0.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayCutout displayCutout>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r74);

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", touch ");

        $i8 = r0.<com.android.server.display.DisplayDeviceInfo: int touch>;

        $r47 = staticinvoke <com.android.server.display.DisplayDeviceInfo: java.lang.String touchToString(int)>($i8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rotation ");

        $i9 = r0.<com.android.server.display.DisplayDeviceInfo: int rotation>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type ");

        $i10 = r0.<com.android.server.display.DisplayDeviceInfo: int type>;

        $r52 = staticinvoke <android.view.Display: java.lang.String typeToString(int)>($i10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = r0.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayAddress address>;

        if $r54 == null goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", address ");

        $r71 = r0.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayAddress address>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r71);

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deviceProductInfo ");

        $r56 = r0.<com.android.server.display.DisplayDeviceInfo: android.hardware.display.DeviceProductInfo deviceProductInfo>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state ");

        $i11 = r0.<com.android.server.display.DisplayDeviceInfo: int state>;

        $r59 = staticinvoke <android.view.Display: java.lang.String stateToString(int)>($i11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $i12 = r0.<com.android.server.display.DisplayDeviceInfo: int ownerUid>;

        if $i12 != 0 goto label3;

        $r69 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName>;

        if $r69 == null goto label4;

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", owner ");

        $r62 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (uid ");

        $i13 = r0.<com.android.server.display.DisplayDeviceInfo: int ownerUid>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label4:
        $i14 = r0.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $r76 = staticinvoke <com.android.server.display.DisplayDeviceInfo: java.lang.String flagsToString(int)>($i14);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r77 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r77;
    }

    public static void <clinit>()
    {
        <com.android.server.display.DisplayDeviceInfo: int TOUCH_VIRTUAL> = 3;

        <com.android.server.display.DisplayDeviceInfo: int TOUCH_NONE> = 0;

        <com.android.server.display.DisplayDeviceInfo: int TOUCH_INTERNAL> = 1;

        <com.android.server.display.DisplayDeviceInfo: int TOUCH_EXTERNAL> = 2;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_TRUSTED> = 8192;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_SUPPORTS_PROTECTED_BUFFERS> = 8;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_SHOULD_SHOW_SYSTEM_DECORATIONS> = 4096;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_SECURE> = 4;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_ROUND> = 256;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_ROTATES_WITH_CONTENT> = 2;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_PRIVATE> = 16;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_PRESENTATION> = 64;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_OWN_CONTENT_ONLY> = 128;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_NEVER_BLANK> = 32;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_MASK_DISPLAY_CUTOUT> = 2048;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_DESTROY_CONTENT_ON_REMOVAL> = 1024;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_DEFAULT_DISPLAY> = 1;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_CAN_SHOW_WITH_INSECURE_KEYGUARD> = 512;

        <com.android.server.display.DisplayDeviceInfo: int DIFF_STATE> = 1;

        <com.android.server.display.DisplayDeviceInfo: int DIFF_OTHER> = 2;

        <com.android.server.display.DisplayDeviceInfo: int DIFF_COLOR_MODE> = 4;

        return;
    }
}
