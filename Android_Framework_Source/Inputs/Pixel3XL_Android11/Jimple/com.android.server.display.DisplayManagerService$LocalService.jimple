final class com.android.server.display.DisplayManagerService$LocalService extends android.hardware.display.DisplayManagerInternal
{
    final com.android.server.display.DisplayManagerService this$0;

    private void <init>(com.android.server.display.DisplayManagerService)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        com.android.server.display.DisplayManagerService r1;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        r1 := @parameter0: com.android.server.display.DisplayManagerService;

        r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0> = r1;

        specialinvoke r0.<android.hardware.display.DisplayManagerInternal: void <init>()>();

        return;
    }

    void <init>(com.android.server.display.DisplayManagerService, com.android.server.display.DisplayManagerService$1)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        com.android.server.display.DisplayManagerService r1;
        com.android.server.display.DisplayManagerService$1 r2;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        r1 := @parameter0: com.android.server.display.DisplayManagerService;

        r2 := @parameter1: com.android.server.display.DisplayManagerService$1;

        specialinvoke r0.<com.android.server.display.DisplayManagerService$LocalService: void <init>(com.android.server.display.DisplayManagerService)>(r1);

        return;
    }

    public android.view.DisplayInfo getDisplayInfo(int)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        int i0, $i1;
        com.android.server.display.DisplayManagerService $r1;
        android.view.DisplayInfo $r2;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $r2 = staticinvoke <com.android.server.display.DisplayManagerService: android.view.DisplayInfo access$1900(com.android.server.display.DisplayManagerService,int,int)>($r1, i0, $i1);

        return $r2;
    }

    public android.graphics.Point getDisplayPosition(int)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        int i0;
        com.android.server.display.DisplayManagerService$SyncRoot r1;
        com.android.server.display.DisplayManagerService $r2, $r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6;
        com.android.server.display.LogicalDisplay r7;
        android.graphics.Point r8;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        r1 = staticinvoke <com.android.server.display.DisplayManagerService: com.android.server.display.DisplayManagerService$SyncRoot access$900(com.android.server.display.DisplayManagerService)>($r2);

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $r4 = staticinvoke <com.android.server.display.DisplayManagerService: android.util.SparseArray access$4500(com.android.server.display.DisplayManagerService)>($r3);

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r7 = (com.android.server.display.LogicalDisplay) $r5;

     label2:
        if r7 == null goto label5;

     label3:
        r8 = virtualinvoke r7.<com.android.server.display.LogicalDisplay: android.graphics.Point getDisplayPosition()>();

        exitmonitor r1;

     label4:
        return r8;

     label5:
        exitmonitor r1;

     label6:
        return null;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.hardware.display.DisplayedContentSample getDisplayedContentSample(int, long, long)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        int i0;
        long l1, l2;
        com.android.server.display.DisplayManagerService $r1;
        android.hardware.display.DisplayedContentSample $r2;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r1 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.display.DisplayManagerService: android.hardware.display.DisplayedContentSample getDisplayedContentSampleInternal(int,long,long)>(i0, l1, l2);

        return $r2;
    }

    public android.hardware.display.DisplayedContentSamplingAttributes getDisplayedContentSamplingAttributes(int)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        int i0;
        com.android.server.display.DisplayManagerService $r1;
        android.hardware.display.DisplayedContentSamplingAttributes $r2;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.display.DisplayManagerService: android.hardware.display.DisplayedContentSamplingAttributes getDisplayedContentSamplingAttributesInternal(int)>(i0);

        return $r2;
    }

    public void getNonOverrideDisplayInfo(int, android.view.DisplayInfo)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        int i0;
        android.view.DisplayInfo r1;
        com.android.server.display.DisplayManagerService $r2;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.DisplayInfo;

        $r2 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        staticinvoke <com.android.server.display.DisplayManagerService: void access$5400(com.android.server.display.DisplayManagerService,int,android.view.DisplayInfo)>($r2, i0, r1);

        return;
    }

    public void initPowerManagement(android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks, android.os.Handler, android.hardware.SensorManager)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        android.os.Handler r1;
        android.hardware.SensorManager r2;
        com.android.server.display.DisplayManagerService$SyncRoot r3;
        com.android.server.display.DisplayManagerService$LocalService$1 r4;
        com.android.server.display.DisplayManagerService r5, $r7, $r8, $r10, $r15, $r17;
        com.android.server.display.DisplayPowerController r6;
        android.content.Context $r9;
        java.util.ArrayList $r11;
        java.lang.Object $r12;
        com.android.server.display.DisplayDevice $r13;
        com.android.server.display.DisplayManagerService$DisplayManagerHandler $r18;
        java.lang.Throwable $r19;
        android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks r20;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        r20 := @parameter0: android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks;

        r1 := @parameter1: android.os.Handler;

        r2 := @parameter2: android.hardware.SensorManager;

        $r7 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        r3 = staticinvoke <com.android.server.display.DisplayManagerService: com.android.server.display.DisplayManagerService$SyncRoot access$900(com.android.server.display.DisplayManagerService)>($r7);

        entermonitor r3;

     label1:
        r4 = new com.android.server.display.DisplayManagerService$LocalService$1;

        specialinvoke r4.<com.android.server.display.DisplayManagerService$LocalService$1: void <init>(com.android.server.display.DisplayManagerService$LocalService,android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks)>(r0, r20);

        r5 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        r6 = new com.android.server.display.DisplayPowerController;

        $r8 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $r9 = staticinvoke <com.android.server.display.DisplayManagerService: android.content.Context access$300(com.android.server.display.DisplayManagerService)>($r8);

        $r10 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $r11 = staticinvoke <com.android.server.display.DisplayManagerService: java.util.ArrayList access$4700(com.android.server.display.DisplayManagerService)>($r10);

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r13 = (com.android.server.display.DisplayDevice) $r12;

        specialinvoke r6.<com.android.server.display.DisplayPowerController: void <init>(android.content.Context,android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks,android.os.Handler,android.hardware.SensorManager,com.android.server.display.DisplayBlanker,com.android.server.display.DisplayDevice)>($r9, r20, r1, r2, r4, $r13);

        staticinvoke <com.android.server.display.DisplayManagerService: com.android.server.display.DisplayPowerController access$4102(com.android.server.display.DisplayManagerService,com.android.server.display.DisplayPowerController)>(r5, r6);

        $r15 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        staticinvoke <com.android.server.display.DisplayManagerService: android.hardware.SensorManager access$4802(com.android.server.display.DisplayManagerService,android.hardware.SensorManager)>($r15, r2);

     label2:
        exitmonitor r3;

     label3:
        $r17 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $r18 = staticinvoke <com.android.server.display.DisplayManagerService: com.android.server.display.DisplayManagerService$DisplayManagerHandler access$200(com.android.server.display.DisplayManagerService)>($r17);

        virtualinvoke $r18.<com.android.server.display.DisplayManagerService$DisplayManagerHandler: boolean sendEmptyMessage(int)>(6);

        return;

     label4:
        $r19 := @caughtexception;

     label5:
        exitmonitor r3;

     label6:
        throw $r19;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean isProximitySensorAvailable()
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        com.android.server.display.DisplayManagerService$SyncRoot r1;
        boolean z0;
        com.android.server.display.DisplayManagerService $r3, $r4;
        com.android.server.display.DisplayPowerController $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        $r3 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        r1 = staticinvoke <com.android.server.display.DisplayManagerService: com.android.server.display.DisplayManagerService$SyncRoot access$900(com.android.server.display.DisplayManagerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $r5 = staticinvoke <com.android.server.display.DisplayManagerService: com.android.server.display.DisplayPowerController access$4100(com.android.server.display.DisplayManagerService)>($r4);

        z0 = virtualinvoke $r5.<com.android.server.display.DisplayPowerController: boolean isProximitySensorAvailable()>();

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onOverlayChanged()
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        com.android.server.display.DisplayManagerService$SyncRoot r1;
        com.android.server.display.DisplayManagerService $r3, $r4, $r6;
        java.util.ArrayList $r5, $r7;
        int $i0, i1;
        java.lang.Object $r8;
        com.android.server.display.DisplayDevice $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        $r3 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        r1 = staticinvoke <com.android.server.display.DisplayManagerService: com.android.server.display.DisplayManagerService$SyncRoot access$900(com.android.server.display.DisplayManagerService)>($r3);

        entermonitor r1;

        i1 = 0;

     label1:
        $r4 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $r5 = staticinvoke <com.android.server.display.DisplayManagerService: java.util.ArrayList access$4700(com.android.server.display.DisplayManagerService)>($r4);

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r6 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $r7 = staticinvoke <com.android.server.display.DisplayManagerService: java.util.ArrayList access$4700(com.android.server.display.DisplayManagerService)>($r6);

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (com.android.server.display.DisplayDevice) $r8;

        virtualinvoke $r9.<com.android.server.display.DisplayDevice: void onOverlayChangedLocked()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r10 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void performTraversal(android.view.SurfaceControl$Transaction)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        android.view.SurfaceControl$Transaction r1;
        com.android.server.display.DisplayManagerService $r2;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        $r2 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        virtualinvoke $r2.<com.android.server.display.DisplayManagerService: void performTraversalInternal(android.view.SurfaceControl$Transaction)>(r1);

        return;
    }

    public void persistBrightnessTrackerState()
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        com.android.server.display.DisplayManagerService$SyncRoot r1;
        com.android.server.display.DisplayManagerService $r3, $r4;
        com.android.server.display.DisplayPowerController $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        $r3 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        r1 = staticinvoke <com.android.server.display.DisplayManagerService: com.android.server.display.DisplayManagerService$SyncRoot access$900(com.android.server.display.DisplayManagerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $r5 = staticinvoke <com.android.server.display.DisplayManagerService: com.android.server.display.DisplayPowerController access$4100(com.android.server.display.DisplayManagerService)>($r4);

        virtualinvoke $r5.<com.android.server.display.DisplayPowerController: void persistBrightnessTrackerState()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void registerDisplayTransactionListener(android.hardware.display.DisplayManagerInternal$DisplayTransactionListener)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        android.hardware.display.DisplayManagerInternal$DisplayTransactionListener r1;
        java.lang.IllegalArgumentException $r2;
        com.android.server.display.DisplayManagerService $r3;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        r1 := @parameter0: android.hardware.display.DisplayManagerInternal$DisplayTransactionListener;

        if r1 == null goto label1;

        $r3 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        staticinvoke <com.android.server.display.DisplayManagerService: void access$5100(com.android.server.display.DisplayManagerService,android.hardware.display.DisplayManagerInternal$DisplayTransactionListener)>($r3, r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener must not be null");

        throw $r2;
    }

    public boolean requestPowerState(android.hardware.display.DisplayManagerInternal$DisplayPowerRequest, boolean)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        com.android.server.display.DisplayManagerService$SyncRoot r1;
        com.android.server.display.DisplayManagerService $r2, $r3;
        com.android.server.display.DisplayPowerController $r4;
        java.lang.Throwable $r5;
        android.hardware.display.DisplayManagerInternal$DisplayPowerRequest r6;
        boolean z0, z1;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        r6 := @parameter0: android.hardware.display.DisplayManagerInternal$DisplayPowerRequest;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        r1 = staticinvoke <com.android.server.display.DisplayManagerService: com.android.server.display.DisplayManagerService$SyncRoot access$900(com.android.server.display.DisplayManagerService)>($r2);

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $r4 = staticinvoke <com.android.server.display.DisplayManagerService: com.android.server.display.DisplayPowerController access$4100(com.android.server.display.DisplayManagerService)>($r3);

        z1 = virtualinvoke $r4.<com.android.server.display.DisplayPowerController: boolean requestPowerState(android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean)>(r6, z0);

        exitmonitor r1;

     label2:
        return z1;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setDisplayAccessUIDs(android.util.SparseArray)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        android.util.SparseArray r1;
        com.android.server.display.DisplayManagerService $r2;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        r1 := @parameter0: android.util.SparseArray;

        $r2 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        staticinvoke <com.android.server.display.DisplayManagerService: void access$5800(com.android.server.display.DisplayManagerService,android.util.SparseArray)>($r2, r1);

        return;
    }

    public void setDisplayInfoOverrideFromWindowManager(int, android.view.DisplayInfo)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        int i0;
        android.view.DisplayInfo r1;
        com.android.server.display.DisplayManagerService $r2;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.DisplayInfo;

        $r2 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        staticinvoke <com.android.server.display.DisplayManagerService: void access$5300(com.android.server.display.DisplayManagerService,int,android.view.DisplayInfo)>($r2, i0, r1);

        return;
    }

    public void setDisplayOffsets(int, int, int)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        int i0, i1, i2;
        com.android.server.display.DisplayManagerService $r1;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        staticinvoke <com.android.server.display.DisplayManagerService: void access$5600(com.android.server.display.DisplayManagerService,int,int,int)>($r1, i0, i1, i2);

        return;
    }

    public void setDisplayProperties(int, boolean, float, int, boolean, boolean)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        int i0, i1;
        boolean z0, z1, z2;
        float f0;
        com.android.server.display.DisplayManagerService $r1;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        f0 := @parameter2: float;

        i1 := @parameter3: int;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        $r1 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        staticinvoke <com.android.server.display.DisplayManagerService: void access$5500(com.android.server.display.DisplayManagerService,int,boolean,float,int,boolean,boolean)>($r1, i0, z0, f0, i1, z1, z2);

        return;
    }

    public void setDisplayScalingDisabled(int, boolean)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        int i0;
        boolean z0;
        com.android.server.display.DisplayManagerService $r1;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        staticinvoke <com.android.server.display.DisplayManagerService: void access$5700(com.android.server.display.DisplayManagerService,int,boolean)>($r1, i0, z0);

        return;
    }

    public boolean setDisplayedContentSamplingEnabled(int, boolean, int, int)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        int i0, i1, i2;
        boolean z0, $z1;
        com.android.server.display.DisplayManagerService $r1;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $z1 = virtualinvoke $r1.<com.android.server.display.DisplayManagerService: boolean setDisplayedContentSamplingEnabledInternal(int,boolean,int,int)>(i0, z0, i1, i2);

        return $z1;
    }

    public android.view.SurfaceControl$ScreenshotGraphicBuffer systemScreenshot(int)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        int i0;
        com.android.server.display.DisplayManagerService $r1;
        android.view.SurfaceControl$ScreenshotGraphicBuffer $r2;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $r2 = staticinvoke <com.android.server.display.DisplayManagerService: android.view.SurfaceControl$ScreenshotGraphicBuffer access$4900(com.android.server.display.DisplayManagerService,int)>($r1, i0);

        return $r2;
    }

    public void unregisterDisplayTransactionListener(android.hardware.display.DisplayManagerInternal$DisplayTransactionListener)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        android.hardware.display.DisplayManagerInternal$DisplayTransactionListener r1;
        java.lang.IllegalArgumentException $r2;
        com.android.server.display.DisplayManagerService $r3;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        r1 := @parameter0: android.hardware.display.DisplayManagerInternal$DisplayTransactionListener;

        if r1 == null goto label1;

        $r3 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        staticinvoke <com.android.server.display.DisplayManagerService: void access$5200(com.android.server.display.DisplayManagerService,android.hardware.display.DisplayManagerInternal$DisplayTransactionListener)>($r3, r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener must not be null");

        throw $r2;
    }

    public android.view.SurfaceControl$ScreenshotGraphicBuffer userScreenshot(int)
    {
        com.android.server.display.DisplayManagerService$LocalService r0;
        int i0;
        com.android.server.display.DisplayManagerService $r1;
        android.view.SurfaceControl$ScreenshotGraphicBuffer $r2;

        r0 := @this: com.android.server.display.DisplayManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.display.DisplayManagerService$LocalService: com.android.server.display.DisplayManagerService this$0>;

        $r2 = staticinvoke <com.android.server.display.DisplayManagerService: android.view.SurfaceControl$ScreenshotGraphicBuffer access$5000(com.android.server.display.DisplayManagerService,int)>($r1, i0);

        return $r2;
    }
}
