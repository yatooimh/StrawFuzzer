public class com.android.server.display.DisplayModeDirector$BrightnessObserver extends android.database.ContentObserver
{
    private static final int LIGHT_SENSOR_RATE_MS;
    private int[] mAmbientBrightnessThresholds;
    private com.android.server.display.utils.AmbientFilter mAmbientFilter;
    private float mAmbientLux;
    private final android.content.Context mContext;
    private final android.net.Uri mDisplayBrightnessSetting;
    private int[] mDisplayBrightnessThresholds;
    private android.hardware.Sensor mLightSensor;
    private com.android.server.display.DisplayModeDirector$BrightnessObserver$LightSensorEventListener mLightSensorListener;
    private boolean mLowPowerModeEnabled;
    private boolean mRefreshRateChangeable;
    private int mRefreshRateInZone;
    private boolean mScreenOn;
    private android.hardware.SensorManager mSensorManager;
    private boolean mShouldObserveAmbientChange;
    private boolean mShouldObserveDisplayChange;
    final com.android.server.display.DisplayModeDirector this$0;

    void <init>(com.android.server.display.DisplayModeDirector, android.content.Context, android.os.Handler)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        android.content.Context r1;
        android.os.Handler r2;
        android.net.Uri $r3;
        com.android.server.display.DisplayModeDirector$BrightnessObserver$LightSensorEventListener $r4;
        android.content.res.Resources $r5, $r7;
        int[] $r6, $r8, r11;
        int $i0, $i1;
        java.lang.RuntimeException $r9;
        com.android.server.display.DisplayModeDirector r10;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        r10 := @parameter0: com.android.server.display.DisplayModeDirector;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: android.os.Handler;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector this$0> = r10;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r2);

        $r3 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("screen_brightness");

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.net.Uri mDisplayBrightnessSetting> = $r3;

        $r4 = new com.android.server.display.DisplayModeDirector$BrightnessObserver$LightSensorEventListener;

        specialinvoke $r4.<com.android.server.display.DisplayModeDirector$BrightnessObserver$LightSensorEventListener: void <init>(com.android.server.display.DisplayModeDirector$BrightnessObserver,com.android.server.display.DisplayModeDirector$1)>(r0, null);

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector$BrightnessObserver$LightSensorEventListener mLightSensorListener> = $r4;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: float mAmbientLux> = -1.0F;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mScreenOn> = 0;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mRefreshRateChangeable> = 0;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mLowPowerModeEnabled> = 0;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.content.Context mContext> = r1;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: int[] getIntArray(int)>(17235995);

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mDisplayBrightnessThresholds> = $r6;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r11 = virtualinvoke $r7.<android.content.res.Resources: int[] getIntArray(int)>(17235982);

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mAmbientBrightnessThresholds> = r11;

        $r8 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mDisplayBrightnessThresholds>;

        $i1 = lengthof $r8;

        $i0 = lengthof r11;

        if $i1 != $i0 goto label1;

        return;

     label1:
        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("display brightness threshold array and ambient brightness threshold array have different length");

        throw $r9;
    }

    static float access$1200(com.android.server.display.DisplayModeDirector$BrightnessObserver)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        float $f0;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        $f0 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: float mAmbientLux>;

        return $f0;
    }

    static float access$1202(com.android.server.display.DisplayModeDirector$BrightnessObserver, float)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        float f0;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        f0 := @parameter1: float;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: float mAmbientLux> = f0;

        return f0;
    }

    static com.android.server.display.utils.AmbientFilter access$1300(com.android.server.display.DisplayModeDirector$BrightnessObserver)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        com.android.server.display.utils.AmbientFilter $r1;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        $r1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.utils.AmbientFilter mAmbientFilter>;

        return $r1;
    }

    static void access$1400(com.android.server.display.DisplayModeDirector$BrightnessObserver)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void onBrightnessChangedLocked()>();

        return;
    }

    static int[] access$1500(com.android.server.display.DisplayModeDirector$BrightnessObserver)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        int[] $r1;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        $r1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mAmbientBrightnessThresholds>;

        return $r1;
    }

    private boolean checkShouldObserve(int[])
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        int[] r1;
        int i0, $i1, $i2, i3;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        r1 := @parameter0: int[];

        $i1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int mRefreshRateInZone>;

        if $i1 > 0 goto label1;

        return 0;

     label1:
        i0 = lengthof r1;

        i3 = 0;

     label2:
        if i3 >= i0 goto label4;

        $i2 = r1[i3];

        if $i2 < 0 goto label3;

        return 1;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 0;
    }

    private boolean isDefaultDisplayOn()
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        android.hardware.display.DisplayManager r1;
        android.content.Context $r2, $r5;
        java.lang.Object $r3, $r6;
        android.view.Display $r4;
        int $i0;
        android.os.PowerManager $r7;
        boolean $z0, z1;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        $r2 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/hardware/display/DisplayManager;");

        r1 = (android.hardware.display.DisplayManager) $r3;

        z1 = 0;

        $r4 = virtualinvoke r1.<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>(0);

        $i0 = virtualinvoke $r4.<android.view.Display: int getState()>();

        if $i0 == 1 goto label1;

        $r5 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        $r7 = (android.os.PowerManager) $r6;

        $z0 = virtualinvoke $r7.<android.os.PowerManager: boolean isInteractive()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label1;

     label1:
        return z1;
    }

    private boolean isInsideZone(int, float)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        int i0, i1, i2, $i3, i6;
        float f0, $f1, $f2, $f3, $f4;
        int[] r1, $r2;
        byte $b4, $b5;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        i6 = 0;

     label1:
        r1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mDisplayBrightnessThresholds>;

        $i3 = lengthof r1;

        if i6 >= $i3 goto label5;

        i1 = r1[i6];

        $r2 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mAmbientBrightnessThresholds>;

        i2 = $r2[i6];

        if i1 < 0 goto label2;

        if i2 < 0 goto label2;

        if i0 > i1 goto label4;

        $f4 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: float mAmbientLux>;

        $f3 = (float) i2;

        $b5 = $f4 cmpg $f3;

        if $b5 > 0 goto label4;

        return 1;

     label2:
        if i1 < 0 goto label3;

        if i0 > i1 goto label4;

        return 1;

     label3:
        if i2 < 0 goto label4;

        $f2 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: float mAmbientLux>;

        $f1 = (float) i2;

        $b4 = $f2 cmpg $f1;

        if $b4 > 0 goto label4;

        return 1;

     label4:
        i6 = i6 + 1;

        goto label1;

     label5:
        return 0;
    }

    private void onBrightnessChangedLocked()
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        float $f0, $f1, $f2;
        boolean $z0;
        com.android.server.display.DisplayModeDirector $r3;
        int i0, i1;
        com.android.server.display.DisplayModeDirector$Vote r4;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        $r1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "screen_brightness", -1);

        r4 = null;

        $f0 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: float mAmbientLux>;

        $z0 = specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean isInsideZone(int,float)>(i0, $f0);

        if $z0 == 0 goto label1;

        i1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int mRefreshRateInZone>;

        $f2 = (float) i1;

        $f1 = (float) i1;

        r4 = staticinvoke <com.android.server.display.DisplayModeDirector$Vote: com.android.server.display.DisplayModeDirector$Vote forRefreshRates(float,float)>($f2, $f1);

     label1:
        $r3 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector this$0>;

        staticinvoke <com.android.server.display.DisplayModeDirector: void access$500(com.android.server.display.DisplayModeDirector,int,com.android.server.display.DisplayModeDirector$Vote)>($r3, 1, r4);

        return;
    }

    private void onScreenOn(boolean)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mScreenOn>;

        if $z1 == z0 goto label1;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mScreenOn> = z0;

        specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void updateSensorStatus()>();

     label1:
        return;
    }

    private void restartObserver()
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        java.lang.String r1, $r15;
        java.util.List r2;
        int[] $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.content.Context $r5, $r7, $r9;
        com.android.server.display.DisplayModeDirector $r6;
        android.content.res.Resources $r8, $r10;
        com.android.server.display.utils.AmbientFilter $r11;
        android.hardware.SensorManager $r12, $r13;
        int $i0, i1;
        java.lang.Object $r14, r21;
        android.net.Uri $r16;
        java.lang.Throwable $r17;
        android.content.ContentResolver r18;
        android.hardware.Sensor r19, r20;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        $r3 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mDisplayBrightnessThresholds>;

        $z0 = specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean checkShouldObserve(int[])>($r3);

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mShouldObserveDisplayChange> = $z0;

        $r4 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mAmbientBrightnessThresholds>;

        $z1 = specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean checkShouldObserve(int[])>($r4);

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mShouldObserveAmbientChange> = $z1;

        $r5 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.content.Context mContext>;

        r18 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $z2 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mShouldObserveDisplayChange>;

        if $z2 == 0 goto label01;

        virtualinvoke r18.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>(r0);

        $r16 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.net.Uri mDisplayBrightnessSetting>;

        virtualinvoke r18.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r16, 0, r0, 0);

        goto label02;

     label01:
        virtualinvoke r18.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>(r0);

     label02:
        $z3 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mShouldObserveAmbientChange>;

        if $z3 == 0 goto label08;

        $r7 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(17039882);

        r19 = null;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z5 != 0 goto label05;

        $r13 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.hardware.SensorManager mSensorManager>;

        r2 = virtualinvoke $r13.<android.hardware.SensorManager: java.util.List getSensorList(int)>(-1);

        i1 = 0;

     label03:
        r19 = null;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label05;

        $r14 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r19 = (android.hardware.Sensor) $r14;

        $r15 = virtualinvoke r19.<android.hardware.Sensor: java.lang.String getStringType()>();

        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z7 == 0 goto label04;

        goto label05;

     label04:
        i1 = i1 + 1;

        goto label03;

     label05:
        r20 = r19;

        if r19 != null goto label06;

        $r12 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.hardware.SensorManager mSensorManager>;

        r20 = virtualinvoke $r12.<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>(5);

     label06:
        if r20 == null goto label07;

        $r9 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.res.Resources getResources()>();

        $r11 = staticinvoke <com.android.server.display.utils.AmbientFilterFactory: com.android.server.display.utils.AmbientFilter createBrightnessFilter(java.lang.String,android.content.res.Resources)>("DisplayModeDirector", $r10);

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.utils.AmbientFilter mAmbientFilter> = $r11;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.hardware.Sensor mLightSensor> = r20;

        $z6 = specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean isDefaultDisplayOn()>();

        specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void onScreenOn(boolean)>($z6);

     label07:
        goto label09;

     label08:
        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.utils.AmbientFilter mAmbientFilter> = null;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.hardware.Sensor mLightSensor> = null;

     label09:
        $z4 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mRefreshRateChangeable>;

        if $z4 == 0 goto label15;

        specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void updateSensorStatus()>();

        $r6 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector this$0>;

        r21 = staticinvoke <com.android.server.display.DisplayModeDirector: java.lang.Object access$400(com.android.server.display.DisplayModeDirector)>($r6);

        entermonitor r21;

     label10:
        specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void onBrightnessChangedLocked()>();

        exitmonitor r21;

     label11:
        goto label15;

     label12:
        $r17 := @caughtexception;

     label13:
        exitmonitor r21;

     label14:
        throw $r17;

     label15:
        return;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private void updateSensorStatus()
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        android.hardware.SensorManager r1, $r7;
        com.android.server.display.DisplayModeDirector$BrightnessObserver$LightSensorEventListener r2, $r6, $r8;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.display.DisplayModeDirector $r3;
        android.hardware.Sensor $r4;
        com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler $r5;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        r1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.hardware.SensorManager mSensorManager>;

        if r1 == null goto label4;

        r2 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector$BrightnessObserver$LightSensorEventListener mLightSensorListener>;

        if r2 != null goto label1;

        goto label4;

     label1:
        $z0 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mShouldObserveAmbientChange>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mScreenOn>;

        if $z1 == 0 goto label2;

        $z2 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mLowPowerModeEnabled>;

        if $z2 != 0 goto label2;

        $z3 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mRefreshRateChangeable>;

        if $z3 == 0 goto label2;

        $r4 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.hardware.Sensor mLightSensor>;

        $r3 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector this$0>;

        $r5 = staticinvoke <com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler access$1100(com.android.server.display.DisplayModeDirector)>($r3);

        virtualinvoke r1.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler)>(r2, $r4, 250000, $r5);

        goto label3;

     label2:
        $r6 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector$BrightnessObserver$LightSensorEventListener mLightSensorListener>;

        virtualinvoke $r6.<com.android.server.display.DisplayModeDirector$BrightnessObserver$LightSensorEventListener: void removeCallbacks()>();

        $r7 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.hardware.SensorManager mSensorManager>;

        $r8 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector$BrightnessObserver$LightSensorEventListener mLightSensorListener>;

        virtualinvoke $r7.<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>($r8);

     label3:
        return;

     label4:
        return;
    }

    public void dumpLocked(java.io.PrintWriter)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        java.io.PrintWriter r1;
        int i0, $i1, i2, i4, i5, i6, i7;
        java.lang.StringBuilder $r2, $r6, $r11, $r15;
        float $f0;
        java.lang.String $r5, $r9, $r14, $r18;
        com.android.server.display.DisplayModeDirector$BrightnessObserver$LightSensorEventListener $r10;
        int[] r21, r23;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  BrightnessObserver");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mAmbientLux: ");

        $f0 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: float mAmbientLux>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mRefreshRateInZone: ");

        $i1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int mRefreshRateInZone>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        r21 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mDisplayBrightnessThresholds>;

        i2 = lengthof r21;

        i4 = 0;

     label1:
        if i4 >= i2 goto label2;

        i0 = r21[i4];

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mDisplayBrightnessThreshold: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        i4 = i4 + 1;

        goto label1;

     label2:
        r23 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mAmbientBrightnessThresholds>;

        i5 = lengthof r23;

        i6 = 0;

     label3:
        if i6 >= i5 goto label4;

        i7 = r23[i6];

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mAmbientBrightnessThreshold: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        i6 = i6 + 1;

        goto label3;

     label4:
        $r10 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector$BrightnessObserver$LightSensorEventListener mLightSensorListener>;

        virtualinvoke $r10.<com.android.server.display.DisplayModeDirector$BrightnessObserver$LightSensorEventListener: void dumpLocked(java.io.PrintWriter)>(r1);

        return;
    }

    public void observe(android.hardware.SensorManager)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        int[] r1, r7;
        com.android.server.display.DisplayModeDirector $r2, $r4, $r8, $r10;
        com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings $r3, $r5, $r9, $r11;
        int $i0, $i1, $i2;
        android.hardware.SensorManager r6;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        r6 := @parameter0: android.hardware.SensorManager;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.hardware.SensorManager mSensorManager> = r6;

        $r2 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector this$0>;

        $r3 = staticinvoke <com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings access$300(com.android.server.display.DisplayModeDirector)>($r2);

        r1 = virtualinvoke $r3.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: int[] getBrightnessThresholds()>();

        $r4 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector this$0>;

        $r5 = staticinvoke <com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings access$300(com.android.server.display.DisplayModeDirector)>($r4);

        r7 = virtualinvoke $r5.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: int[] getAmbientThresholds()>();

        if r1 == null goto label1;

        if r7 == null goto label1;

        $i1 = lengthof r1;

        $i0 = lengthof r7;

        if $i1 != $i0 goto label1;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mDisplayBrightnessThresholds> = r1;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mAmbientBrightnessThresholds> = r7;

     label1:
        $r8 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector this$0>;

        $r9 = staticinvoke <com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings access$300(com.android.server.display.DisplayModeDirector)>($r8);

        $i2 = virtualinvoke $r9.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: int getRefreshRateInZone()>();

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int mRefreshRateInZone> = $i2;

        specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void restartObserver()>();

        $r10 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector this$0>;

        $r11 = staticinvoke <com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings access$300(com.android.server.display.DisplayModeDirector)>($r10);

        virtualinvoke $r11.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: void startListening()>();

        return;
    }

    public void onChange(boolean, android.net.Uri, int)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        boolean z0;
        int i0;
        java.lang.Object r1;
        com.android.server.display.DisplayModeDirector $r2;
        java.lang.Throwable $r3;
        android.net.Uri r4;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        z0 := @parameter0: boolean;

        r4 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        $r2 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector this$0>;

        r1 = staticinvoke <com.android.server.display.DisplayModeDirector: java.lang.Object access$400(com.android.server.display.DisplayModeDirector)>($r2);

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void onBrightnessChangedLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onDeviceConfigRefreshRateInZoneChanged(int)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        int i0, $i1;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int mRefreshRateInZone>;

        if i0 == $i1 goto label1;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int mRefreshRateInZone> = i0;

        specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void restartObserver()>();

     label1:
        return;
    }

    public void onDeviceConfigThresholdsChanged(int[], int[])
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        int[] r1, r2, $r5, $r8;
        int $i0, $i1;
        android.content.Context $r3, $r6;
        android.content.res.Resources $r4, $r7;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        if r1 == null goto label1;

        if r2 == null goto label1;

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label1;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mDisplayBrightnessThresholds> = r1;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mAmbientBrightnessThresholds> = r2;

        goto label2;

     label1:
        $r3 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: int[] getIntArray(int)>(17235995);

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mDisplayBrightnessThresholds> = $r5;

        $r6 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: int[] getIntArray(int)>(17235982);

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: int[] mAmbientBrightnessThresholds> = $r8;

     label2:
        specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void restartObserver()>();

        return;
    }

    public void onDisplayChanged(int)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $z0 = specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean isDefaultDisplayOn()>();

        specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void onScreenOn(boolean)>($z0);

     label1:
        return;
    }

    public void onLowPowerModeEnabledLocked(boolean)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mLowPowerModeEnabled>;

        if $z1 == z0 goto label1;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mLowPowerModeEnabled> = z0;

        specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void updateSensorStatus()>();

     label1:
        return;
    }

    public void onRefreshRateSettingChangedLocked(float, float)
    {
        com.android.server.display.DisplayModeDirector$BrightnessObserver r0;
        float f0, f1, $f2;
        byte $b0, $b1;
        com.android.server.display.DisplayModeDirector $r1;
        boolean z0, $z1;

        r0 := @this: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = f1 - f0;

        $b0 = $f2 cmpl 1.0F;

        if $b0 <= 0 goto label1;

        $b1 = f1 cmpl 60.0F;

        if $b1 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $z1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mRefreshRateChangeable>;

        if $z1 == z0 goto label3;

        r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: boolean mRefreshRateChangeable> = z0;

        specialinvoke r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void updateSensorStatus()>();

        if z0 != 0 goto label3;

        $r1 = r0.<com.android.server.display.DisplayModeDirector$BrightnessObserver: com.android.server.display.DisplayModeDirector this$0>;

        staticinvoke <com.android.server.display.DisplayModeDirector: void access$500(com.android.server.display.DisplayModeDirector,int,com.android.server.display.DisplayModeDirector$Vote)>($r1, 1, null);

     label3:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.display.DisplayModeDirector$BrightnessObserver: int LIGHT_SENSOR_RATE_MS> = 250;

        return;
    }
}
