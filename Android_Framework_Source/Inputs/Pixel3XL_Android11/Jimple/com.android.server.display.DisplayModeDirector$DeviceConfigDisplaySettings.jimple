class com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings extends java.lang.Object implements android.provider.DeviceConfig$OnPropertiesChangedListener
{
    final com.android.server.display.DisplayModeDirector this$0;

    public void <init>(com.android.server.display.DisplayModeDirector)
    {
        com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings r0;
        com.android.server.display.DisplayModeDirector r1;

        r0 := @this: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings;

        r1 := @parameter0: com.android.server.display.DisplayModeDirector;

        r0.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: com.android.server.display.DisplayModeDirector this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private int[] getIntArrayProperty(java.lang.String)
    {
        com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings r0;
        int[] $r1;
        java.lang.String r2, r3;

        r0 := @this: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings;

        r2 := @parameter0: java.lang.String;

        r3 = staticinvoke <android.provider.DeviceConfig: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>("display_manager", r2, null);

        if r3 == null goto label1;

        $r1 = specialinvoke r0.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: int[] parseIntArray(java.lang.String)>(r3);

        return $r1;

     label1:
        return null;
    }

    private int[] parseIntArray(java.lang.String)
    {
        com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings r0;
        int $i0, $i1, $i2, i4;
        java.lang.String $r1, $r7, r8;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        java.lang.String[] r9;
        int[] r10, r11;

        r0 := @this: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings;

        r8 := @parameter0: java.lang.String;

        r9 = virtualinvoke r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof r9;

        r10 = newarray (int)[$i0];

        i4 = 0;

     label1:
        $i1 = lengthof r10;

        if i4 >= $i1 goto label3;

        $r1 = r9[i4];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        r10[i4] = $i2;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        r11 = r10;

        goto label5;

     label4:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incorrect format for array: \'");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DisplayModeDirector", $r7, $r2);

        r11 = null;

     label5:
        return r11;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public int[] getAmbientThresholds()
    {
        com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings r0;
        int[] $r1;

        r0 := @this: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings;

        $r1 = specialinvoke r0.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: int[] getIntArrayProperty(java.lang.String)>("peak_refresh_rate_ambient_thresholds");

        return $r1;
    }

    public int[] getBrightnessThresholds()
    {
        com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings r0;
        int[] $r1;

        r0 := @this: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings;

        $r1 = specialinvoke r0.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: int[] getIntArrayProperty(java.lang.String)>("peak_refresh_rate_brightness_thresholds");

        return $r1;
    }

    public java.lang.Float getDefaultPeakRefreshRate()
    {
        com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings r0;
        float f0;
        byte $b0;
        java.lang.Float $r1;

        r0 := @this: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings;

        f0 = staticinvoke <android.provider.DeviceConfig: float getFloat(java.lang.String,java.lang.String,float)>("display_manager", "peak_refresh_rate_default", -1.0F);

        $b0 = f0 cmpl -1.0F;

        if $b0 != 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        return $r1;
    }

    public int getRefreshRateInZone()
    {
        com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings r0;
        com.android.server.display.DisplayModeDirector $r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        int $i0, $i1;

        r0 := @this: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings;

        $r1 = r0.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: com.android.server.display.DisplayModeDirector this$0>;

        $r2 = staticinvoke <com.android.server.display.DisplayModeDirector: android.content.Context access$2000(com.android.server.display.DisplayModeDirector)>($r1);

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getInteger(int)>(17694784);

        $i1 = staticinvoke <android.provider.DeviceConfig: int getInt(java.lang.String,java.lang.String,int)>("display_manager", "refresh_rate_in_zone", $i0);

        return $i1;
    }

    public void onPropertiesChanged(android.provider.DeviceConfig$Properties)
    {
        com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings r0;
        int[] r1, r14;
        java.lang.Float r2;
        int i0;
        com.android.server.display.DisplayModeDirector $r3, $r7, $r10;
        com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler $r4, $r8, $r11;
        android.util.Pair $r5;
        android.os.Message $r6, $r9, $r12;
        android.provider.DeviceConfig$Properties r13;

        r0 := @this: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings;

        r13 := @parameter0: android.provider.DeviceConfig$Properties;

        r14 = virtualinvoke r0.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: int[] getBrightnessThresholds()>();

        r1 = virtualinvoke r0.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: int[] getAmbientThresholds()>();

        r2 = virtualinvoke r0.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: java.lang.Float getDefaultPeakRefreshRate()>();

        i0 = virtualinvoke r0.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: int getRefreshRateInZone()>();

        $r3 = r0.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: com.android.server.display.DisplayModeDirector this$0>;

        $r4 = staticinvoke <com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler access$1100(com.android.server.display.DisplayModeDirector)>($r3);

        $r5 = new android.util.Pair;

        specialinvoke $r5.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r14, r1);

        $r6 = virtualinvoke $r4.<com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r5);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

        $r7 = r0.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: com.android.server.display.DisplayModeDirector this$0>;

        $r8 = staticinvoke <com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler access$1100(com.android.server.display.DisplayModeDirector)>($r7);

        $r9 = virtualinvoke $r8.<com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler: android.os.Message obtainMessage(int,java.lang.Object)>(3, r2);

        virtualinvoke $r9.<android.os.Message: void sendToTarget()>();

        $r10 = r0.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: com.android.server.display.DisplayModeDirector this$0>;

        $r11 = staticinvoke <com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler access$1100(com.android.server.display.DisplayModeDirector)>($r10);

        $r12 = virtualinvoke $r11.<com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler: android.os.Message obtainMessage(int,int,int)>(4, i0, 0);

        virtualinvoke $r12.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void startListening()
    {
        com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings;

        $r1 = staticinvoke <com.android.internal.os.BackgroundThread: java.util.concurrent.Executor getExecutor()>();

        staticinvoke <android.provider.DeviceConfig: void addOnPropertiesChangedListener(java.lang.String,java.util.concurrent.Executor,android.provider.DeviceConfig$OnPropertiesChangedListener)>("display_manager", $r1, r0);

        return;
    }
}
