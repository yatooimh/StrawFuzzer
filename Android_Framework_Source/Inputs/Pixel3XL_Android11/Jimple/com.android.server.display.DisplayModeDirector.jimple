public class com.android.server.display.DisplayModeDirector extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final float FLOAT_TOLERANCE;
    private static final int GLOBAL_ID;
    private static final int MSG_BRIGHTNESS_THRESHOLDS_CHANGED;
    private static final int MSG_DEFAULT_PEAK_REFRESH_RATE_CHANGED;
    private static final int MSG_REFRESH_RATE_IN_ZONE_CHANGED;
    private static final int MSG_REFRESH_RATE_RANGE_CHANGED;
    private static final java.lang.String TAG;
    private final com.android.server.display.DisplayModeDirector$AppRequestObserver mAppRequestObserver;
    private com.android.server.display.DisplayModeDirector$BrightnessObserver mBrightnessObserver;
    private final android.content.Context mContext;
    private android.util.SparseArray mDefaultModeByDisplay;
    private com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecsListener mDesiredDisplayModeSpecsListener;
    private final com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings mDeviceConfigDisplaySettings;
    private final com.android.server.display.DisplayModeDirector$DisplayObserver mDisplayObserver;
    private final com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler mHandler;
    private final java.lang.Object mLock;
    private final com.android.server.display.DisplayModeDirector$SettingsObserver mSettingsObserver;
    private android.util.SparseArray mSupportedModesByDisplay;
    private android.util.SparseArray mVotesByDisplay;

    public void <init>(android.content.Context, android.os.Handler)
    {
        com.android.server.display.DisplayModeDirector r0;
        android.content.Context r1;
        android.os.Handler r2;
        java.lang.Object $r3;
        com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler $r4;
        android.os.Looper $r5;
        android.util.SparseArray $r6, $r7, $r8;
        com.android.server.display.DisplayModeDirector$AppRequestObserver $r9;
        com.android.server.display.DisplayModeDirector$SettingsObserver $r10;
        com.android.server.display.DisplayModeDirector$DisplayObserver $r11;
        com.android.server.display.DisplayModeDirector$BrightnessObserver $r12;
        com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings $r13;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.display.DisplayModeDirector: java.lang.Object mLock> = $r3;

        r0.<com.android.server.display.DisplayModeDirector: android.content.Context mContext> = r1;

        $r4 = new com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler;

        $r5 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r4.<com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler: void <init>(com.android.server.display.DisplayModeDirector,android.os.Looper)>(r0, $r5);

        r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler mHandler> = $r4;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mVotesByDisplay> = $r6;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mSupportedModesByDisplay> = $r7;

        $r8 = new android.util.SparseArray;

        specialinvoke $r8.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mDefaultModeByDisplay> = $r8;

        $r9 = new com.android.server.display.DisplayModeDirector$AppRequestObserver;

        specialinvoke $r9.<com.android.server.display.DisplayModeDirector$AppRequestObserver: void <init>(com.android.server.display.DisplayModeDirector)>(r0);

        r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$AppRequestObserver mAppRequestObserver> = $r9;

        $r10 = new com.android.server.display.DisplayModeDirector$SettingsObserver;

        specialinvoke $r10.<com.android.server.display.DisplayModeDirector$SettingsObserver: void <init>(com.android.server.display.DisplayModeDirector,android.content.Context,android.os.Handler)>(r0, r1, r2);

        r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$SettingsObserver mSettingsObserver> = $r10;

        $r11 = new com.android.server.display.DisplayModeDirector$DisplayObserver;

        specialinvoke $r11.<com.android.server.display.DisplayModeDirector$DisplayObserver: void <init>(com.android.server.display.DisplayModeDirector,android.content.Context,android.os.Handler)>(r0, r1, r2);

        r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DisplayObserver mDisplayObserver> = $r11;

        $r12 = new com.android.server.display.DisplayModeDirector$BrightnessObserver;

        specialinvoke $r12.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void <init>(com.android.server.display.DisplayModeDirector,android.content.Context,android.os.Handler)>(r0, r1, r2);

        r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$BrightnessObserver mBrightnessObserver> = $r12;

        $r13 = new com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings;

        specialinvoke $r13.<com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings: void <init>(com.android.server.display.DisplayModeDirector)>(r0);

        r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings mDeviceConfigDisplaySettings> = $r13;

        return;
    }

    static com.android.server.display.DisplayModeDirector$BrightnessObserver access$100(com.android.server.display.DisplayModeDirector)
    {
        com.android.server.display.DisplayModeDirector r0;
        com.android.server.display.DisplayModeDirector$BrightnessObserver $r1;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector;

        $r1 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$BrightnessObserver mBrightnessObserver>;

        return $r1;
    }

    static com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler access$1100(com.android.server.display.DisplayModeDirector)
    {
        com.android.server.display.DisplayModeDirector r0;
        com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler $r1;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector;

        $r1 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler mHandler>;

        return $r1;
    }

    static com.android.server.display.DisplayModeDirector$SettingsObserver access$200(com.android.server.display.DisplayModeDirector)
    {
        com.android.server.display.DisplayModeDirector r0;
        com.android.server.display.DisplayModeDirector$SettingsObserver $r1;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector;

        $r1 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$SettingsObserver mSettingsObserver>;

        return $r1;
    }

    static android.content.Context access$2000(com.android.server.display.DisplayModeDirector)
    {
        com.android.server.display.DisplayModeDirector r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector;

        $r1 = r0.<com.android.server.display.DisplayModeDirector: android.content.Context mContext>;

        return $r1;
    }

    static com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings access$300(com.android.server.display.DisplayModeDirector)
    {
        com.android.server.display.DisplayModeDirector r0;
        com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings $r1;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector;

        $r1 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DeviceConfigDisplaySettings mDeviceConfigDisplaySettings>;

        return $r1;
    }

    static java.lang.Object access$400(com.android.server.display.DisplayModeDirector)
    {
        com.android.server.display.DisplayModeDirector r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector;

        $r1 = r0.<com.android.server.display.DisplayModeDirector: java.lang.Object mLock>;

        return $r1;
    }

    static void access$500(com.android.server.display.DisplayModeDirector, int, com.android.server.display.DisplayModeDirector$Vote)
    {
        com.android.server.display.DisplayModeDirector r0;
        int i0;
        com.android.server.display.DisplayModeDirector$Vote r1;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.server.display.DisplayModeDirector$Vote;

        specialinvoke r0.<com.android.server.display.DisplayModeDirector: void updateVoteLocked(int,com.android.server.display.DisplayModeDirector$Vote)>(i0, r1);

        return;
    }

    static void access$600(com.android.server.display.DisplayModeDirector, int, int, com.android.server.display.DisplayModeDirector$Vote)
    {
        com.android.server.display.DisplayModeDirector r0;
        int i0, i1;
        com.android.server.display.DisplayModeDirector$Vote r1;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: com.android.server.display.DisplayModeDirector$Vote;

        specialinvoke r0.<com.android.server.display.DisplayModeDirector: void updateVoteLocked(int,int,com.android.server.display.DisplayModeDirector$Vote)>(i0, i1, r1);

        return;
    }

    static android.util.SparseArray access$700(com.android.server.display.DisplayModeDirector)
    {
        com.android.server.display.DisplayModeDirector r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector;

        $r1 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mSupportedModesByDisplay>;

        return $r1;
    }

    static android.util.SparseArray access$800(com.android.server.display.DisplayModeDirector)
    {
        com.android.server.display.DisplayModeDirector r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector;

        $r1 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mDefaultModeByDisplay>;

        return $r1;
    }

    static void access$900(com.android.server.display.DisplayModeDirector)
    {
        com.android.server.display.DisplayModeDirector r0;

        r0 := @parameter0: com.android.server.display.DisplayModeDirector;

        specialinvoke r0.<com.android.server.display.DisplayModeDirector: void notifyDesiredDisplayModeSpecsChangedLocked()>();

        return;
    }

    private int[] filterModes(android.view.Display$Mode[], com.android.server.display.DisplayModeDirector$VoteSummary)
    {
        com.android.server.display.DisplayModeDirector r0;
        com.android.server.display.DisplayModeDirector$VoteSummary r1;
        android.view.Display$Mode r3, $r6;
        float f0, $f1, $f2, $f3, $f4;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        int $i0, $i1, $i2, $i3, $i4, i7, i8, i9, i10;
        byte $b5, $b6;
        android.view.Display$Mode[] r7;
        int[] r8;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        r7 := @parameter0: android.view.Display$Mode[];

        r1 := @parameter1: com.android.server.display.DisplayModeDirector$VoteSummary;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i7 = lengthof r7;

        i8 = 0;

     label1:
        if i8 >= i7 goto label5;

        r3 = r7[i8];

        $i1 = virtualinvoke r3.<android.view.Display$Mode: int getPhysicalWidth()>();

        $i2 = r1.<com.android.server.display.DisplayModeDirector$VoteSummary: int width>;

        if $i1 != $i2 goto label4;

        $i3 = virtualinvoke r3.<android.view.Display$Mode: int getPhysicalHeight()>();

        $i4 = r1.<com.android.server.display.DisplayModeDirector$VoteSummary: int height>;

        if $i3 == $i4 goto label2;

        goto label4;

     label2:
        f0 = virtualinvoke r3.<android.view.Display$Mode: float getRefreshRate()>();

        $f1 = r1.<com.android.server.display.DisplayModeDirector$VoteSummary: float minRefreshRate>;

        $f2 = $f1 - 0.01F;

        $b5 = f0 cmpg $f2;

        if $b5 < 0 goto label4;

        $f3 = r1.<com.android.server.display.DisplayModeDirector$VoteSummary: float maxRefreshRate>;

        $f4 = $f3 + 0.01F;

        $b6 = f0 cmpl $f4;

        if $b6 <= 0 goto label3;

        goto label4;

     label3:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label4:
        i8 = i8 + 1;

        goto label1;

     label5:
        i9 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        r8 = newarray (int)[i9];

        i10 = 0;

     label6:
        if i10 >= i9 goto label7;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        $r6 = (android.view.Display$Mode) $r5;

        $i0 = virtualinvoke $r6.<android.view.Display$Mode: int getModeId()>();

        r8[i10] = $i0;

        i10 = i10 + 1;

        goto label6;

     label7:
        return r8;
    }

    private android.util.SparseArray getOrCreateVotesByDisplay(int)
    {
        com.android.server.display.DisplayModeDirector r0;
        int i0, $i2;
        android.util.SparseArray $r2, $r3, $r4, $r5, $r6, $r8;
        java.lang.Object $r7;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mVotesByDisplay>;

        virtualinvoke $r2.<android.util.SparseArray: int indexOfKey(int)>(i0);

        $r3 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mVotesByDisplay>;

        $i2 = virtualinvoke $r3.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if $i2 < 0 goto label1;

        $r6 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mVotesByDisplay>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r8 = (android.util.SparseArray) $r7;

        return $r8;

     label1:
        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        $r5 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mVotesByDisplay>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

        return $r4;
    }

    private android.util.SparseArray getVotesLocked(int)
    {
        com.android.server.display.DisplayModeDirector r0;
        android.util.SparseArray r1, $r2, $r4, $r5, r9, r10;
        int i0, $i1, $i2, i3, i4;
        java.lang.Object $r3, $r6, $r7;
        com.android.server.display.DisplayModeDirector$Vote $r8;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        i3 := @parameter0: int;

        $r2 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mVotesByDisplay>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r9 = (android.util.SparseArray) $r3;

        if r9 == null goto label1;

        r10 = virtualinvoke r9.<android.util.SparseArray: android.util.SparseArray clone()>();

        goto label2;

     label1:
        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r10 = $r4;

     label2:
        $r5 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mVotesByDisplay>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(-1);

        r1 = (android.util.SparseArray) $r6;

        if r1 == null goto label5;

        i4 = 0;

     label3:
        $i1 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        if i4 >= $i1 goto label5;

        i0 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i4);

        $i2 = virtualinvoke r10.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if $i2 >= 0 goto label4;

        $r7 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r8 = (com.android.server.display.DisplayModeDirector$Vote) $r7;

        virtualinvoke r10.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r8);

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        return r10;
    }

    private void notifyDesiredDisplayModeSpecsChangedLocked()
    {
        com.android.server.display.DisplayModeDirector r0;
        com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecsListener $r1, $r3;
        com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler $r2, $r4;
        boolean $z0;
        android.os.Message $r5;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        $r1 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecsListener mDesiredDisplayModeSpecsListener>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler mHandler>;

        $z0 = virtualinvoke $r2.<com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler: boolean hasMessages(int)>(1);

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler mHandler>;

        $r3 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecsListener mDesiredDisplayModeSpecsListener>;

        $r5 = virtualinvoke $r4.<com.android.server.display.DisplayModeDirector$DisplayModeDirectorHandler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r3);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    private void summarizeVotes(android.util.SparseArray, int, com.android.server.display.DisplayModeDirector$VoteSummary)
    {
        com.android.server.display.DisplayModeDirector r0;
        android.util.SparseArray r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        com.android.server.display.DisplayModeDirector$VoteSummary r2;
        com.android.server.display.DisplayModeDirector$Vote r3;
        java.lang.Object $r4;
        com.android.server.display.DisplayModeDirector$RefreshRateRange $r5, $r6;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        r1 := @parameter0: android.util.SparseArray;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.server.display.DisplayModeDirector$VoteSummary;

        virtualinvoke r2.<com.android.server.display.DisplayModeDirector$VoteSummary: void reset()>();

        i7 = 6;

     label1:
        if i7 < i0 goto label4;

        $r4 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>(i7);

        r3 = (com.android.server.display.DisplayModeDirector$Vote) $r4;

        if r3 != null goto label2;

        goto label3;

     label2:
        $f1 = r2.<com.android.server.display.DisplayModeDirector$VoteSummary: float minRefreshRate>;

        $r5 = r3.<com.android.server.display.DisplayModeDirector$Vote: com.android.server.display.DisplayModeDirector$RefreshRateRange refreshRateRange>;

        $f0 = $r5.<com.android.server.display.DisplayModeDirector$RefreshRateRange: float min>;

        $f2 = staticinvoke <java.lang.Math: float max(float,float)>($f1, $f0);

        r2.<com.android.server.display.DisplayModeDirector$VoteSummary: float minRefreshRate> = $f2;

        $f4 = r2.<com.android.server.display.DisplayModeDirector$VoteSummary: float maxRefreshRate>;

        $r6 = r3.<com.android.server.display.DisplayModeDirector$Vote: com.android.server.display.DisplayModeDirector$RefreshRateRange refreshRateRange>;

        $f3 = $r6.<com.android.server.display.DisplayModeDirector$RefreshRateRange: float max>;

        $f5 = staticinvoke <java.lang.Math: float min(float,float)>($f4, $f3);

        r2.<com.android.server.display.DisplayModeDirector$VoteSummary: float maxRefreshRate> = $f5;

        $i1 = r2.<com.android.server.display.DisplayModeDirector$VoteSummary: int height>;

        if $i1 != -1 goto label3;

        $i2 = r2.<com.android.server.display.DisplayModeDirector$VoteSummary: int width>;

        if $i2 != -1 goto label3;

        $i3 = r3.<com.android.server.display.DisplayModeDirector$Vote: int height>;

        if $i3 <= 0 goto label3;

        $i4 = r3.<com.android.server.display.DisplayModeDirector$Vote: int width>;

        if $i4 <= 0 goto label3;

        $i5 = r3.<com.android.server.display.DisplayModeDirector$Vote: int width>;

        r2.<com.android.server.display.DisplayModeDirector$VoteSummary: int width> = $i5;

        $i6 = r3.<com.android.server.display.DisplayModeDirector$Vote: int height>;

        r2.<com.android.server.display.DisplayModeDirector$VoteSummary: int height> = $i6;

     label3:
        i7 = i7 + -1;

        goto label1;

     label4:
        return;
    }

    private void updateVoteLocked(int, int, com.android.server.display.DisplayModeDirector$Vote)
    {
        com.android.server.display.DisplayModeDirector r0;
        int i0, i1, $i3;
        com.android.server.display.DisplayModeDirector$Vote r1, r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r9;
        java.lang.Throwable $r10;
        java.lang.Object $r11;
        android.util.SparseArray $r12, r13;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.server.display.DisplayModeDirector$Vote;

        if i1 < 0 goto label5;

        if i1 <= 6 goto label1;

        goto label5;

     label1:
        r13 = specialinvoke r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray getOrCreateVotesByDisplay(int)>(i0);

        $r11 = virtualinvoke r13.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.display.DisplayModeDirector$Vote) $r11;

        if r1 == null goto label2;

        virtualinvoke r13.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r1);

        goto label3;

     label2:
        virtualinvoke r13.<android.util.SparseArray: void remove(int)>(i1);

     label3:
        $i3 = virtualinvoke r13.<android.util.SparseArray: int size()>();

        if $i3 != 0 goto label4;

        $r12 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mVotesByDisplay>;

        virtualinvoke $r12.<android.util.SparseArray: void remove(int)>(i0);

     label4:
        specialinvoke r0.<com.android.server.display.DisplayModeDirector: void notifyDesiredDisplayModeSpecsChangedLocked()>();

        return;

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received a vote with an invalid priority, ignoring: priority=");

        $r5 = staticinvoke <com.android.server.display.DisplayModeDirector$Vote: java.lang.String priorityToString(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", vote=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.Throwable;

        specialinvoke $r10.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("DisplayModeDirector", $r9, $r10);

        return;
    }

    private void updateVoteLocked(int, com.android.server.display.DisplayModeDirector$Vote)
    {
        com.android.server.display.DisplayModeDirector r0;
        int i0;
        com.android.server.display.DisplayModeDirector$Vote r1;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.display.DisplayModeDirector$Vote;

        specialinvoke r0.<com.android.server.display.DisplayModeDirector: void updateVoteLocked(int,int,com.android.server.display.DisplayModeDirector$Vote)>(-1, i0, r1);

        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.display.DisplayModeDirector r0;
        java.lang.Object r1, $r15, $r16, $r25, $r33;
        com.android.server.display.DisplayModeDirector$Vote r2;
        android.util.SparseArray $r3, $r4, $r5, $r10, $r14, $r23, $r24, $r31, $r32, r47;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9;
        com.android.server.display.DisplayModeDirector$SettingsObserver $r6;
        com.android.server.display.DisplayModeDirector$AppRequestObserver $r7;
        com.android.server.display.DisplayModeDirector$BrightnessObserver $r8;
        java.lang.String $r13, $r18, $r22, $r30, $r37, $r39;
        java.lang.Throwable $r40;
        java.io.PrintWriter r41;
        android.view.Display$Mode[] r42;
        java.lang.StringBuilder r43, r45, r46, r48;
        android.view.Display$Mode r44;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        r41 := @parameter0: java.io.PrintWriter;

        virtualinvoke r41.<java.io.PrintWriter: void println(java.lang.String)>("DisplayModeDirector");

        r1 = r0.<com.android.server.display.DisplayModeDirector: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        virtualinvoke r41.<java.io.PrintWriter: void println(java.lang.String)>("  mSupportedModesByDisplay:");

     label02:
        i4 = 0;

     label03:
        $r3 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mSupportedModesByDisplay>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i4 >= $i0 goto label05;

        $r31 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mSupportedModesByDisplay>;

        i5 = virtualinvoke $r31.<android.util.SparseArray: int keyAt(int)>(i4);

        $r32 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mSupportedModesByDisplay>;

        $r33 = virtualinvoke $r32.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r42 = (android.view.Display$Mode[]) $r33;

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r37 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r42);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r41.<java.io.PrintWriter: void println(java.lang.String)>($r39);

     label04:
        i4 = i4 + 1;

        goto label03;

     label05:
        virtualinvoke r41.<java.io.PrintWriter: void println(java.lang.String)>("  mDefaultModeByDisplay:");

     label06:
        i6 = 0;

     label07:
        $r4 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mDefaultModeByDisplay>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i6 >= $i1 goto label09;

        $r23 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mDefaultModeByDisplay>;

        i7 = virtualinvoke $r23.<android.util.SparseArray: int keyAt(int)>(i6);

        $r24 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mDefaultModeByDisplay>;

        $r25 = virtualinvoke $r24.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r44 = (android.view.Display$Mode) $r25;

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44);

        $r30 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r41.<java.io.PrintWriter: void println(java.lang.String)>($r30);

     label08:
        i6 = i6 + 1;

        goto label07;

     label09:
        virtualinvoke r41.<java.io.PrintWriter: void println(java.lang.String)>("  mVotesByDisplay:");

     label10:
        i8 = 0;

     label11:
        $r5 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mVotesByDisplay>;

        $i2 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i8 >= $i2 goto label19;

        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r10 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mVotesByDisplay>;

        $i3 = virtualinvoke $r10.<android.util.SparseArray: int keyAt(int)>(i8);

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r13 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r41.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mVotesByDisplay>;

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i8);

        r47 = (android.util.SparseArray) $r15;

     label12:
        i9 = 6;

     label13:
        if i9 < 0 goto label18;

     label14:
        $r16 = virtualinvoke r47.<android.util.SparseArray: java.lang.Object get(int)>(i9);

        r2 = (com.android.server.display.DisplayModeDirector$Vote) $r16;

     label15:
        if r2 != null goto label16;

        goto label17;

     label16:
        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        $r18 = staticinvoke <com.android.server.display.DisplayModeDirector$Vote: java.lang.String priorityToString(int)>(i9);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r22 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r41.<java.io.PrintWriter: void println(java.lang.String)>($r22);

     label17:
        i9 = i9 + -1;

        goto label13;

     label18:
        i8 = i8 + 1;

        goto label11;

     label19:
        $r6 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$SettingsObserver mSettingsObserver>;

        virtualinvoke $r6.<com.android.server.display.DisplayModeDirector$SettingsObserver: void dumpLocked(java.io.PrintWriter)>(r41);

        $r7 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$AppRequestObserver mAppRequestObserver>;

        virtualinvoke $r7.<com.android.server.display.DisplayModeDirector$AppRequestObserver: void dumpLocked(java.io.PrintWriter)>(r41);

        $r8 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$BrightnessObserver mBrightnessObserver>;

        virtualinvoke $r8.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void dumpLocked(java.io.PrintWriter)>(r41);

        exitmonitor r1;

     label20:
        return;

     label21:
        $r40 := @caughtexception;

     label22:
        exitmonitor r1;

     label23:
        throw $r40;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    public com.android.server.display.DisplayModeDirector$AppRequestObserver getAppRequestObserver()
    {
        com.android.server.display.DisplayModeDirector r0;
        com.android.server.display.DisplayModeDirector$AppRequestObserver $r1;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        $r1 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$AppRequestObserver mAppRequestObserver>;

        return $r1;
    }

    public com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs getDesiredDisplayModeSpecs(int)
    {
        com.android.server.display.DisplayModeDirector r0;
        java.lang.Object r1, $r4, $r6;
        android.view.Display$Mode r2;
        android.util.SparseArray $r3, $r5, r12;
        java.lang.String $r10;
        int $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i9, i10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        java.lang.Throwable $r11;
        android.view.Display$Mode[] r13;
        int[] r14;
        com.android.server.display.DisplayModeDirector$VoteSummary r15, r16;
        com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs r17, r21;
        com.android.server.display.DisplayModeDirector$RefreshRateRange r18, r19;
        java.lang.StringBuilder r20;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        i7 := @parameter0: int;

        r1 = r0.<com.android.server.display.DisplayModeDirector: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r12 = specialinvoke r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray getVotesLocked(int)>(i7);

        $r3 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mSupportedModesByDisplay>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i7);

        r13 = (android.view.Display$Mode[]) $r4;

        $r5 = r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mDefaultModeByDisplay>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i7);

        r2 = (android.view.Display$Mode) $r6;

     label02:
        if r13 == null goto label16;

        if r2 != null goto label03;

        goto label16;

     label03:
        r14 = newarray (int)[1];

        $i1 = virtualinvoke r2.<android.view.Display$Mode: int getModeId()>();

        r14[0] = $i1;

        r15 = new com.android.server.display.DisplayModeDirector$VoteSummary;

        specialinvoke r15.<com.android.server.display.DisplayModeDirector$VoteSummary: void <init>()>();

     label04:
        i8 = 0;

     label05:
        if i8 > 6 goto label11;

     label06:
        specialinvoke r0.<com.android.server.display.DisplayModeDirector: void summarizeVotes(android.util.SparseArray,int,com.android.server.display.DisplayModeDirector$VoteSummary)>(r12, i8, r15);

        $i3 = r15.<com.android.server.display.DisplayModeDirector$VoteSummary: int height>;

        if $i3 == -1 goto label07;

        $i6 = r15.<com.android.server.display.DisplayModeDirector$VoteSummary: int width>;

        if $i6 != -1 goto label08;

     label07:
        $i4 = virtualinvoke r2.<android.view.Display$Mode: int getPhysicalWidth()>();

        r15.<com.android.server.display.DisplayModeDirector$VoteSummary: int width> = $i4;

        $i5 = virtualinvoke r2.<android.view.Display$Mode: int getPhysicalHeight()>();

        r15.<com.android.server.display.DisplayModeDirector$VoteSummary: int height> = $i5;

     label08:
        r14 = specialinvoke r0.<com.android.server.display.DisplayModeDirector: int[] filterModes(android.view.Display$Mode[],com.android.server.display.DisplayModeDirector$VoteSummary)>(r13, r15);

        $i9 = lengthof r14;

        if $i9 <= 0 goto label10;

     label09:
        goto label11;

     label10:
        i8 = i8 + 1;

        goto label05;

     label11:
        r16 = new com.android.server.display.DisplayModeDirector$VoteSummary;

        specialinvoke r16.<com.android.server.display.DisplayModeDirector$VoteSummary: void <init>()>();

        specialinvoke r0.<com.android.server.display.DisplayModeDirector: void summarizeVotes(android.util.SparseArray,int,com.android.server.display.DisplayModeDirector$VoteSummary)>(r12, 3, r16);

        $f1 = r16.<com.android.server.display.DisplayModeDirector$VoteSummary: float minRefreshRate>;

        $f0 = r15.<com.android.server.display.DisplayModeDirector$VoteSummary: float minRefreshRate>;

        $f2 = staticinvoke <java.lang.Math: float min(float,float)>($f1, $f0);

        r16.<com.android.server.display.DisplayModeDirector$VoteSummary: float minRefreshRate> = $f2;

        $f4 = r16.<com.android.server.display.DisplayModeDirector$VoteSummary: float maxRefreshRate>;

        $f3 = r15.<com.android.server.display.DisplayModeDirector$VoteSummary: float maxRefreshRate>;

        $f5 = staticinvoke <java.lang.Math: float max(float,float)>($f4, $f3);

        r16.<com.android.server.display.DisplayModeDirector$VoteSummary: float maxRefreshRate> = $f5;

        i10 = virtualinvoke r2.<android.view.Display$Mode: int getModeId()>();

     label12:
        $i2 = lengthof r14;

        if $i2 <= 0 goto label14;

     label13:
        i10 = r14[0];

     label14:
        r17 = new com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs;

        r18 = new com.android.server.display.DisplayModeDirector$RefreshRateRange;

        $f7 = r15.<com.android.server.display.DisplayModeDirector$VoteSummary: float minRefreshRate>;

        $f6 = r15.<com.android.server.display.DisplayModeDirector$VoteSummary: float maxRefreshRate>;

        specialinvoke r18.<com.android.server.display.DisplayModeDirector$RefreshRateRange: void <init>(float,float)>($f7, $f6);

        r19 = new com.android.server.display.DisplayModeDirector$RefreshRateRange;

        $f9 = r16.<com.android.server.display.DisplayModeDirector$VoteSummary: float minRefreshRate>;

        $f8 = r16.<com.android.server.display.DisplayModeDirector$VoteSummary: float maxRefreshRate>;

        specialinvoke r19.<com.android.server.display.DisplayModeDirector$RefreshRateRange: void <init>(float,float)>($f9, $f8);

        specialinvoke r17.<com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs: void <init>(int,com.android.server.display.DisplayModeDirector$RefreshRateRange,com.android.server.display.DisplayModeDirector$RefreshRateRange)>(i10, r18, r19);

        exitmonitor r1;

     label15:
        return r17;

     label16:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Asked about unknown display, returning empty display mode specs!(id=");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DisplayModeDirector", $r10);

        r21 = new com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs;

        specialinvoke r21.<com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs: void <init>()>();

        exitmonitor r1;

     label17:
        return r21;

     label18:
        $r11 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs getDesiredDisplayModeSpecsWithInjectedFpsSettings(float, float, float)
    {
        com.android.server.display.DisplayModeDirector r0;
        float f0, f1, f2;
        java.lang.Object r1;
        com.android.server.display.DisplayModeDirector$SettingsObserver $r2;
        java.lang.Throwable $r3;
        com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs r4;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        r1 = r0.<com.android.server.display.DisplayModeDirector: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$SettingsObserver mSettingsObserver>;

        staticinvoke <com.android.server.display.DisplayModeDirector$SettingsObserver: void access$000(com.android.server.display.DisplayModeDirector$SettingsObserver,float,float,float)>($r2, f0, f1, f2);

        r4 = virtualinvoke r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs getDesiredDisplayModeSpecs(int)>(0);

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void injectBrightnessObserver(com.android.server.display.DisplayModeDirector$BrightnessObserver)
    {
        com.android.server.display.DisplayModeDirector r0;
        com.android.server.display.DisplayModeDirector$BrightnessObserver r1;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        r1 := @parameter0: com.android.server.display.DisplayModeDirector$BrightnessObserver;

        r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$BrightnessObserver mBrightnessObserver> = r1;

        return;
    }

    void injectDefaultModeByDisplay(android.util.SparseArray)
    {
        com.android.server.display.DisplayModeDirector r0;
        android.util.SparseArray r1;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        r1 := @parameter0: android.util.SparseArray;

        r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mDefaultModeByDisplay> = r1;

        return;
    }

    void injectSupportedModesByDisplay(android.util.SparseArray)
    {
        com.android.server.display.DisplayModeDirector r0;
        android.util.SparseArray r1;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        r1 := @parameter0: android.util.SparseArray;

        r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mSupportedModesByDisplay> = r1;

        return;
    }

    void injectVotesByDisplay(android.util.SparseArray)
    {
        com.android.server.display.DisplayModeDirector r0;
        android.util.SparseArray r1;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        r1 := @parameter0: android.util.SparseArray;

        r0.<com.android.server.display.DisplayModeDirector: android.util.SparseArray mVotesByDisplay> = r1;

        return;
    }

    public void setDesiredDisplayModeSpecsListener(com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecsListener)
    {
        com.android.server.display.DisplayModeDirector r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecsListener r3;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        r3 := @parameter0: com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecsListener;

        r1 = r0.<com.android.server.display.DisplayModeDirector: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecsListener mDesiredDisplayModeSpecsListener> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void start(android.hardware.SensorManager)
    {
        com.android.server.display.DisplayModeDirector r0;
        com.android.server.display.DisplayModeDirector$SettingsObserver $r2, $r4;
        com.android.server.display.DisplayModeDirector$DisplayObserver $r3;
        com.android.server.display.DisplayModeDirector$BrightnessObserver $r5;
        java.lang.Throwable $r6;
        android.hardware.SensorManager r7;
        java.lang.Object r8;

        r0 := @this: com.android.server.display.DisplayModeDirector;

        r7 := @parameter0: android.hardware.SensorManager;

        $r2 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$SettingsObserver mSettingsObserver>;

        virtualinvoke $r2.<com.android.server.display.DisplayModeDirector$SettingsObserver: void observe()>();

        $r3 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$DisplayObserver mDisplayObserver>;

        virtualinvoke $r3.<com.android.server.display.DisplayModeDirector$DisplayObserver: void observe()>();

        $r4 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$SettingsObserver mSettingsObserver>;

        virtualinvoke $r4.<com.android.server.display.DisplayModeDirector$SettingsObserver: void observe()>();

        $r5 = r0.<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector$BrightnessObserver mBrightnessObserver>;

        virtualinvoke $r5.<com.android.server.display.DisplayModeDirector$BrightnessObserver: void observe(android.hardware.SensorManager)>(r7);

        r8 = r0.<com.android.server.display.DisplayModeDirector: java.lang.Object mLock>;

        entermonitor r8;

     label1:
        specialinvoke r0.<com.android.server.display.DisplayModeDirector: void notifyDesiredDisplayModeSpecsChangedLocked()>();

        exitmonitor r8;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r8;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.display.DisplayModeDirector: java.lang.String TAG> = "DisplayModeDirector";

        <com.android.server.display.DisplayModeDirector: int MSG_REFRESH_RATE_RANGE_CHANGED> = 1;

        <com.android.server.display.DisplayModeDirector: int MSG_REFRESH_RATE_IN_ZONE_CHANGED> = 4;

        <com.android.server.display.DisplayModeDirector: int MSG_DEFAULT_PEAK_REFRESH_RATE_CHANGED> = 3;

        <com.android.server.display.DisplayModeDirector: int MSG_BRIGHTNESS_THRESHOLDS_CHANGED> = 2;

        <com.android.server.display.DisplayModeDirector: int GLOBAL_ID> = -1;

        <com.android.server.display.DisplayModeDirector: float FLOAT_TOLERANCE> = 0.01F;

        <com.android.server.display.DisplayModeDirector: boolean DEBUG> = 0;

        return;
    }
}
