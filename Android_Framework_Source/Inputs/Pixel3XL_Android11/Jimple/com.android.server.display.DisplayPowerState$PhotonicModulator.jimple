final class com.android.server.display.DisplayPowerState$PhotonicModulator extends java.lang.Thread
{
    private static final float INITIAL_BACKLIGHT_FLOAT;
    private static final int INITIAL_SCREEN_STATE;
    private float mActualBacklight;
    private int mActualState;
    private boolean mBacklightChangeInProgress;
    private final java.lang.Object mLock;
    private float mPendingBacklight;
    private int mPendingState;
    private boolean mStateChangeInProgress;
    final com.android.server.display.DisplayPowerState this$0;

    public void <init>(com.android.server.display.DisplayPowerState)
    {
        com.android.server.display.DisplayPowerState$PhotonicModulator r0;
        com.android.server.display.DisplayPowerState r1;
        java.lang.Object $r2;

        r0 := @this: com.android.server.display.DisplayPowerState$PhotonicModulator;

        r1 := @parameter0: com.android.server.display.DisplayPowerState;

        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: com.android.server.display.DisplayPowerState this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("PhotonicModulator");

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: java.lang.Object mLock> = $r2;

        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: int mPendingState> = 1;

        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: float mPendingBacklight> = #NaNF;

        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: int mActualState> = 1;

        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: float mActualBacklight> = #NaNF;

        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.display.DisplayPowerState$PhotonicModulator r0;
        java.lang.Object r1;
        int $i0, $i1;
        java.lang.String $r3, $r5, $r8, $r10, $r12, $r15, $r18, $r21;
        float $f0, $f1;
        boolean $z0, $z1;
        java.lang.Throwable $r22;
        java.io.PrintWriter r23;
        java.lang.StringBuilder r24, r25, r26, r27, r28, r29;

        r0 := @this: com.android.server.display.DisplayPowerState$PhotonicModulator;

        r23 := @parameter0: java.io.PrintWriter;

        r1 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r23.<java.io.PrintWriter: void println()>();

        virtualinvoke r23.<java.io.PrintWriter: void println(java.lang.String)>("Photonic Modulator State:");

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPendingState=");

        $i0 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: int mPendingState>;

        $r3 = staticinvoke <android.view.Display: java.lang.String stateToString(int)>($i0);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPendingBacklight=");

        $f0 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: float mPendingBacklight>;

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r8 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mActualState=");

        $i1 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: int mActualState>;

        $r10 = staticinvoke <android.view.Display: java.lang.String stateToString(int)>($i1);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mActualBacklight=");

        $f1 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: float mActualBacklight>;

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r15 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mStateChangeInProgress=");

        $z0 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: boolean mStateChangeInProgress>;

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r18 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mBacklightChangeInProgress=");

        $z1 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: boolean mBacklightChangeInProgress>;

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r21 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r22 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r22;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void run()
    {
        com.android.server.display.DisplayPowerState$PhotonicModulator r0;
        int i0, $i2;
        float f0, $f1;
        boolean z0, $z1, $z2, z3;
        com.android.server.display.DisplayPowerState $r1, $r11;
        com.android.server.display.DisplayBlanker $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r9;
        java.lang.Object $r10, r14;
        java.lang.Throwable $r12, $r13;

        r0 := @this: com.android.server.display.DisplayPowerState$PhotonicModulator;

     label01:
        r14 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: java.lang.Object mLock>;

        entermonitor r14;

     label02:
        i0 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: int mPendingState>;

        $i2 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: int mActualState>;

        if i0 == $i2 goto label04;

     label03:
        z3 = 1;

        goto label05;

     label04:
        z3 = 0;

     label05:
        f0 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: float mPendingBacklight>;

        $f1 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: float mActualBacklight>;

        $z1 = staticinvoke <com.android.internal.BrightnessSynchronizer: boolean floatEquals(float,float)>(f0, $f1);

        z0 = 1 ^ $z1;

     label06:
        if z3 != 0 goto label08;

     label07:
        $r11 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: com.android.server.display.DisplayPowerState this$0>;

        staticinvoke <com.android.server.display.DisplayPowerState: void access$1300(com.android.server.display.DisplayPowerState)>($r11);

        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: boolean mStateChangeInProgress> = 0;

     label08:
        if z0 != 0 goto label10;

     label09:
        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: boolean mBacklightChangeInProgress> = 0;

     label10:
        if z3 != 0 goto label16;

        if z0 != 0 goto label16;

     label11:
        $r10 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: java.lang.Object mLock>;

        virtualinvoke $r10.<java.lang.Object: void wait()>();

     label12:
        goto label14;

     label13:
        $r13 := @caughtexception;

     label14:
        exitmonitor r14;

     label15:
        goto label01;

     label16:
        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: int mActualState> = i0;

        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: float mActualBacklight> = f0;

        exitmonitor r14;

     label17:
        $z2 = staticinvoke <com.android.server.display.DisplayPowerState: boolean access$500()>();

        if $z2 == 0 goto label18;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating screen state: state=");

        $r5 = staticinvoke <android.view.Display: java.lang.String stateToString(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", backlight=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayPowerState", $r9);

     label18:
        $r1 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: com.android.server.display.DisplayPowerState this$0>;

        $r2 = staticinvoke <com.android.server.display.DisplayPowerState: com.android.server.display.DisplayBlanker access$1400(com.android.server.display.DisplayPowerState)>($r1);

        interfaceinvoke $r2.<com.android.server.display.DisplayBlanker: void requestDisplayState(int,float)>(i0, f0);

        goto label01;

     label19:
        $r12 := @caughtexception;

     label20:
        exitmonitor r14;

     label21:
        throw $r12;

        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.InterruptedException from label11 to label12 with label13;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public boolean setState(int, float)
    {
        com.android.server.display.DisplayPowerState$PhotonicModulator r0;
        float f0, $f1;
        java.lang.Object r1, $r2;
        boolean z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, z10, z11, z12, $z13;
        java.lang.String $r4, $r8;
        java.lang.Throwable $r9;
        int i1, i2;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.server.display.DisplayPowerState$PhotonicModulator;

        i1 := @parameter0: int;

        f0 := @parameter1: float;

        r1 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        i2 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: int mPendingState>;

     label02:
        if i1 == i2 goto label03;

        z8 = 1;

        goto label04;

     label03:
        z8 = 0;

     label04:
        $f1 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: float mPendingBacklight>;

        $z2 = staticinvoke <com.android.internal.BrightnessSynchronizer: boolean floatEquals(float,float)>(f0, $f1);

        z1 = $z2 ^ 1;

     label05:
        if z8 != 0 goto label06;

        if z1 == 0 goto label25;

     label06:
        $z3 = staticinvoke <com.android.server.display.DisplayPowerState: boolean access$500()>();

        if $z3 == 0 goto label07;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requesting new screen state: state=");

        $r4 = staticinvoke <android.view.Display: java.lang.String stateToString(int)>(i1);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", backlight=");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r8 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayPowerState", $r8);

     label07:
        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: int mPendingState> = i1;

        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: float mPendingBacklight> = f0;

        $z4 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: boolean mStateChangeInProgress>;

        if $z4 != 0 goto label10;

        $z7 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: boolean mBacklightChangeInProgress>;

        if $z7 == 0 goto label09;

     label08:
        goto label10;

     label09:
        z9 = 0;

        goto label11;

     label10:
        z9 = 1;

     label11:
        if z8 != 0 goto label15;

     label12:
        $z6 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: boolean mStateChangeInProgress>;

        if $z6 == 0 goto label14;

     label13:
        goto label15;

     label14:
        z10 = 0;

        goto label16;

     label15:
        z10 = 1;

     label16:
        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: boolean mStateChangeInProgress> = z10;

     label17:
        if z1 != 0 goto label21;

     label18:
        $z5 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: boolean mBacklightChangeInProgress>;

        if $z5 == 0 goto label20;

     label19:
        goto label21;

     label20:
        z11 = 0;

        goto label22;

     label21:
        z11 = 1;

     label22:
        r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: boolean mBacklightChangeInProgress> = z11;

     label23:
        if z9 != 0 goto label25;

     label24:
        $r2 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: java.lang.Object mLock>;

        virtualinvoke $r2.<java.lang.Object: void notifyAll()>();

     label25:
        z12 = 0;

     label26:
        $z13 = r0.<com.android.server.display.DisplayPowerState$PhotonicModulator: boolean mStateChangeInProgress>;

        if $z13 != 0 goto label28;

     label27:
        z12 = 1;

     label28:
        exitmonitor r1;

     label29:
        return z12;

     label30:
        $r9 := @caughtexception;

     label31:
        exitmonitor r1;

     label32:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label30;
        catch java.lang.Throwable from label04 to label05 with label30;
        catch java.lang.Throwable from label06 to label07 with label30;
        catch java.lang.Throwable from label07 to label08 with label30;
        catch java.lang.Throwable from label12 to label13 with label30;
        catch java.lang.Throwable from label16 to label17 with label30;
        catch java.lang.Throwable from label18 to label19 with label30;
        catch java.lang.Throwable from label22 to label23 with label30;
        catch java.lang.Throwable from label24 to label25 with label30;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    public static void <clinit>()
    {
        <com.android.server.display.DisplayPowerState$PhotonicModulator: int INITIAL_SCREEN_STATE> = 1;

        <com.android.server.display.DisplayPowerState$PhotonicModulator: float INITIAL_BACKLIGHT_FLOAT> = #NaNF;

        return;
    }
}
