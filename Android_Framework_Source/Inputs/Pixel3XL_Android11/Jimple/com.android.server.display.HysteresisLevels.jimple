public class com.android.server.display.HysteresisLevels extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final float DEFAULT_BRIGHTENING_HYSTERESIS;
    private static final float DEFAULT_DARKENING_HYSTERESIS;
    private static final java.lang.String TAG;
    private final float[] mBrighteningThresholds;
    private final float[] mDarkeningThresholds;
    private final float[] mThresholdLevels;

    void <init>(int[], int[], int[])
    {
        com.android.server.display.HysteresisLevels r0;
        int[] r1, r2, r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r4;
        float[] $r5, $r6, $r7;

        r0 := @this: com.android.server.display.HysteresisLevels;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        r3 := @parameter2: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label1;

        $i4 = lengthof r2;

        $i2 = lengthof r3;

        $i3 = $i2 + 1;

        if $i4 != $i3 goto label1;

        $r5 = specialinvoke r0.<com.android.server.display.HysteresisLevels: float[] setArrayFormat(int[],float)>(r1, 1000.0F);

        r0.<com.android.server.display.HysteresisLevels: float[] mBrighteningThresholds> = $r5;

        $r6 = specialinvoke r0.<com.android.server.display.HysteresisLevels: float[] setArrayFormat(int[],float)>(r2, 1000.0F);

        r0.<com.android.server.display.HysteresisLevels: float[] mDarkeningThresholds> = $r6;

        $r7 = specialinvoke r0.<com.android.server.display.HysteresisLevels: float[] setArrayFormat(int[],float)>(r3, 1.0F);

        r0.<com.android.server.display.HysteresisLevels: float[] mThresholdLevels> = $r7;

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Mismatch between hysteresis array lengths.");

        throw $r4;
    }

    private float getReferenceLevel(float, float[])
    {
        com.android.server.display.HysteresisLevels r0;
        float f0, $f1, $f2;
        float[] r1, r2;
        int $i0, i2;
        byte $b1;

        r0 := @this: com.android.server.display.HysteresisLevels;

        f0 := @parameter0: float;

        r1 := @parameter1: float[];

        i2 = 0;

     label1:
        r2 = r0.<com.android.server.display.HysteresisLevels: float[] mThresholdLevels>;

        $i0 = lengthof r2;

        if $i0 <= i2 goto label2;

        $f2 = r2[i2];

        $b1 = f0 cmpl $f2;

        if $b1 < 0 goto label2;

        i2 = i2 + 1;

        goto label1;

     label2:
        $f1 = r1[i2];

        return $f1;
    }

    private float[] setArrayFormat(int[], float)
    {
        com.android.server.display.HysteresisLevels r0;
        int[] r1;
        float f0, $f1, $f2;
        float[] r2;
        int $i0, $i1, $i2, i3;

        r0 := @this: com.android.server.display.HysteresisLevels;

        r1 := @parameter0: int[];

        f0 := @parameter1: float;

        $i0 = lengthof r1;

        r2 = newarray (float)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r2;

        if $i1 <= i3 goto label2;

        $i2 = r1[i3];

        $f1 = (float) $i2;

        $f2 = $f1 / f0;

        r2[i3] = $f2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r2;
    }

    void dump(java.io.PrintWriter)
    {
        com.android.server.display.HysteresisLevels r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r8, $r14;
        float[] $r4, $r10, $r16;
        java.lang.String $r5, $r7, $r11, $r13, $r17, $r19;

        r0 := @this: com.android.server.display.HysteresisLevels;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("HysteresisLevels");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mBrighteningThresholds=");

        $r4 = r0.<com.android.server.display.HysteresisLevels: float[] mBrighteningThresholds>;

        $r5 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDarkeningThresholds=");

        $r10 = r0.<com.android.server.display.HysteresisLevels: float[] mDarkeningThresholds>;

        $r11 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mThresholdLevels=");

        $r16 = r0.<com.android.server.display.HysteresisLevels: float[] mThresholdLevels>;

        $r17 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        return;
    }

    public float getBrighteningThreshold(float)
    {
        com.android.server.display.HysteresisLevels r0;
        float f0, $f1, $f2, $f3;
        float[] $r1;

        r0 := @this: com.android.server.display.HysteresisLevels;

        f0 := @parameter0: float;

        $r1 = r0.<com.android.server.display.HysteresisLevels: float[] mBrighteningThresholds>;

        $f1 = specialinvoke r0.<com.android.server.display.HysteresisLevels: float getReferenceLevel(float,float[])>(f0, $r1);

        $f2 = 1.0F + $f1;

        $f3 = $f2 * f0;

        return $f3;
    }

    public float getDarkeningThreshold(float)
    {
        com.android.server.display.HysteresisLevels r0;
        float f0, $f1, $f2, $f3;
        float[] $r1;

        r0 := @this: com.android.server.display.HysteresisLevels;

        f0 := @parameter0: float;

        $r1 = r0.<com.android.server.display.HysteresisLevels: float[] mDarkeningThresholds>;

        $f1 = specialinvoke r0.<com.android.server.display.HysteresisLevels: float getReferenceLevel(float,float[])>(f0, $r1);

        $f2 = 1.0F - $f1;

        $f3 = $f2 * f0;

        return $f3;
    }

    public static void <clinit>()
    {
        <com.android.server.display.HysteresisLevels: java.lang.String TAG> = "HysteresisLevels";

        <com.android.server.display.HysteresisLevels: float DEFAULT_DARKENING_HYSTERESIS> = 0.2F;

        <com.android.server.display.HysteresisLevels: float DEFAULT_BRIGHTENING_HYSTERESIS> = 0.1F;

        <com.android.server.display.HysteresisLevels: boolean DEBUG> = 0;

        return;
    }
}
