final class com.android.server.display.LocalDisplayAdapter extends com.android.server.display.DisplayAdapter
{
    private static final boolean DEBUG;
    private static final int NO_DISPLAY_MODE_ID;
    private static final java.lang.String PROPERTY_EMULATOR_CIRCULAR;
    private static final java.lang.String TAG;
    private static final java.lang.String UNIQUE_ID_PREFIX;
    private final android.util.LongSparseArray mDevices;
    private com.android.server.display.LocalDisplayAdapter$PhysicalDisplayEventReceiver mPhysicalDisplayEventReceiver;

    public void <init>(com.android.server.display.DisplayManagerService$SyncRoot, android.content.Context, android.os.Handler, com.android.server.display.DisplayAdapter$Listener)
    {
        com.android.server.display.LocalDisplayAdapter r0;
        com.android.server.display.DisplayManagerService$SyncRoot r1;
        android.content.Context r2;
        android.os.Handler r3;
        com.android.server.display.DisplayAdapter$Listener r4;
        android.util.LongSparseArray $r5;

        r0 := @this: com.android.server.display.LocalDisplayAdapter;

        r1 := @parameter0: com.android.server.display.DisplayManagerService$SyncRoot;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Handler;

        r4 := @parameter3: com.android.server.display.DisplayAdapter$Listener;

        specialinvoke r0.<com.android.server.display.DisplayAdapter: void <init>(com.android.server.display.DisplayManagerService$SyncRoot,android.content.Context,android.os.Handler,com.android.server.display.DisplayAdapter$Listener,java.lang.String)>(r1, r2, r3, r4, "LocalDisplayAdapter");

        $r5 = new android.util.LongSparseArray;

        specialinvoke $r5.<android.util.LongSparseArray: void <init>()>();

        r0.<com.android.server.display.LocalDisplayAdapter: android.util.LongSparseArray mDevices> = $r5;

        return;
    }

    static void access$500(com.android.server.display.LocalDisplayAdapter, long)
    {
        com.android.server.display.LocalDisplayAdapter r0;
        long l0;

        r0 := @parameter0: com.android.server.display.LocalDisplayAdapter;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.server.display.LocalDisplayAdapter: void tryConnectDisplayLocked(long)>(l0);

        return;
    }

    static void access$600(com.android.server.display.LocalDisplayAdapter, long)
    {
        com.android.server.display.LocalDisplayAdapter r0;
        long l0;

        r0 := @parameter0: com.android.server.display.LocalDisplayAdapter;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.server.display.LocalDisplayAdapter: void tryDisconnectDisplayLocked(long)>(l0);

        return;
    }

    static android.util.LongSparseArray access$700(com.android.server.display.LocalDisplayAdapter)
    {
        com.android.server.display.LocalDisplayAdapter r0;
        android.util.LongSparseArray $r1;

        r0 := @parameter0: com.android.server.display.LocalDisplayAdapter;

        $r1 = r0.<com.android.server.display.LocalDisplayAdapter: android.util.LongSparseArray mDevices>;

        return $r1;
    }

    static int getPowerModeForState(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label4;

        if i0 == 6 goto label3;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        return 2;

     label1:
        return 3;

     label2:
        return 1;

     label3:
        return 4;

     label4:
        return 0;
    }

    private void tryConnectDisplayLocked(long)
    {
        com.android.server.display.LocalDisplayAdapter r0;
        long l0;
        android.os.IBinder r1;
        android.view.SurfaceControl$DisplayInfo r2;
        int i1, $i2, i7;
        android.view.SurfaceControl$DesiredDisplayConfigSpecs r3;
        int[] r4;
        android.view.Display$HdrCapabilities r5;
        android.util.LongSparseArray $r6, $r8, $r10;
        java.lang.Object $r7;
        boolean $z0, z1;
        com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice $r9, r32;
        java.lang.StringBuilder $r11, $r15, $r19, $r23;
        java.lang.String $r14, $r18, $r22, $r26;
        android.view.SurfaceControl$DisplayConfig[] r28;

        r0 := @this: com.android.server.display.LocalDisplayAdapter;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.view.SurfaceControl: android.os.IBinder getPhysicalDisplayToken(long)>(l0);

        if r1 == null goto label8;

        r2 = staticinvoke <android.view.SurfaceControl: android.view.SurfaceControl$DisplayInfo getDisplayInfo(android.os.IBinder)>(r1);

        if r2 != null goto label1;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid info found for display device ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("LocalDisplayAdapter", $r26);

        return;

     label1:
        r28 = staticinvoke <android.view.SurfaceControl: android.view.SurfaceControl$DisplayConfig[] getDisplayConfigs(android.os.IBinder)>(r1);

        if r28 != null goto label2;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid configs found for display device ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("LocalDisplayAdapter", $r22);

        return;

     label2:
        i1 = staticinvoke <android.view.SurfaceControl: int getActiveConfig(android.os.IBinder)>(r1);

        if i1 >= 0 goto label3;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No active config found for display device ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("LocalDisplayAdapter", $r18);

        return;

     label3:
        i7 = staticinvoke <android.view.SurfaceControl: int getActiveColorMode(android.os.IBinder)>(r1);

        if i7 >= 0 goto label4;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get active color mode for display device ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("LocalDisplayAdapter", $r14);

        i7 = -1;

        goto label4;

     label4:
        r3 = staticinvoke <android.view.SurfaceControl: android.view.SurfaceControl$DesiredDisplayConfigSpecs getDesiredDisplayConfigSpecs(android.os.IBinder)>(r1);

        r4 = staticinvoke <android.view.SurfaceControl: int[] getDisplayColorModes(android.os.IBinder)>(r1);

        r5 = staticinvoke <android.view.SurfaceControl: android.view.Display$HdrCapabilities getHdrCapabilities(android.os.IBinder)>(r1);

        $r6 = r0.<com.android.server.display.LocalDisplayAdapter: android.util.LongSparseArray mDevices>;

        $r7 = virtualinvoke $r6.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r32 = (com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice) $r7;

        if r32 != null goto label7;

        $r8 = r0.<com.android.server.display.LocalDisplayAdapter: android.util.LongSparseArray mDevices>;

        $i2 = virtualinvoke $r8.<android.util.LongSparseArray: int size()>();

        if $i2 != 0 goto label5;

        z1 = 1;

        goto label6;

     label5:
        z1 = 0;

     label6:
        $r9 = new com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice;

        specialinvoke $r9.<com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice: void <init>(com.android.server.display.LocalDisplayAdapter,android.os.IBinder,long,android.view.SurfaceControl$DisplayInfo,android.view.SurfaceControl$DisplayConfig[],int,android.view.SurfaceControl$DesiredDisplayConfigSpecs,int[],int,android.view.Display$HdrCapabilities,boolean)>(r0, r1, l0, r2, r28, i1, r3, r4, i7, r5, z1);

        $r10 = r0.<com.android.server.display.LocalDisplayAdapter: android.util.LongSparseArray mDevices>;

        virtualinvoke $r10.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l0, $r9);

        virtualinvoke r0.<com.android.server.display.LocalDisplayAdapter: void sendDisplayDeviceEventLocked(com.android.server.display.DisplayDevice,int)>($r9, 1);

        goto label8;

     label7:
        $z0 = virtualinvoke r32.<com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice: boolean updateDisplayProperties(android.view.SurfaceControl$DisplayConfig[],int,android.view.SurfaceControl$DesiredDisplayConfigSpecs,int[],int,android.view.Display$HdrCapabilities)>(r28, i1, r3, r4, i7, r5);

        if $z0 == 0 goto label8;

        virtualinvoke r0.<com.android.server.display.LocalDisplayAdapter: void sendDisplayDeviceEventLocked(com.android.server.display.DisplayDevice,int)>(r32, 2);

        goto label8;

     label8:
        return;
    }

    private void tryDisconnectDisplayLocked(long)
    {
        com.android.server.display.LocalDisplayAdapter r0;
        long l0;
        com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice r1;
        android.util.LongSparseArray $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.server.display.LocalDisplayAdapter;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.server.display.LocalDisplayAdapter: android.util.LongSparseArray mDevices>;

        $r3 = virtualinvoke $r2.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r1 = (com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice) $r3;

        if r1 == null goto label1;

        $r4 = r0.<com.android.server.display.LocalDisplayAdapter: android.util.LongSparseArray mDevices>;

        virtualinvoke $r4.<android.util.LongSparseArray: void remove(long)>(l0);

        virtualinvoke r0.<com.android.server.display.LocalDisplayAdapter: void sendDisplayDeviceEventLocked(com.android.server.display.DisplayDevice,int)>(r1, 3);

     label1:
        return;
    }

    android.content.Context getOverlayContext()
    {
        com.android.server.display.LocalDisplayAdapter r0;
        android.app.ActivityThread $r1;
        android.app.ContextImpl $r2;

        r0 := @this: com.android.server.display.LocalDisplayAdapter;

        $r1 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r2 = virtualinvoke $r1.<android.app.ActivityThread: android.app.ContextImpl getSystemUiContext()>();

        return $r2;
    }

    public void registerLocked()
    {
        com.android.server.display.LocalDisplayAdapter r0;
        long[] r1;
        int i0, i2;
        com.android.server.display.LocalDisplayAdapter$PhysicalDisplayEventReceiver $r2;
        android.os.Handler $r3;
        android.os.Looper $r4;
        long $l1;

        r0 := @this: com.android.server.display.LocalDisplayAdapter;

        specialinvoke r0.<com.android.server.display.DisplayAdapter: void registerLocked()>();

        $r2 = new com.android.server.display.LocalDisplayAdapter$PhysicalDisplayEventReceiver;

        $r3 = virtualinvoke r0.<com.android.server.display.LocalDisplayAdapter: android.os.Handler getHandler()>();

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r2.<com.android.server.display.LocalDisplayAdapter$PhysicalDisplayEventReceiver: void <init>(com.android.server.display.LocalDisplayAdapter,android.os.Looper)>(r0, $r4);

        r0.<com.android.server.display.LocalDisplayAdapter: com.android.server.display.LocalDisplayAdapter$PhysicalDisplayEventReceiver mPhysicalDisplayEventReceiver> = $r2;

        r1 = staticinvoke <android.view.SurfaceControl: long[] getPhysicalDisplayIds()>();

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $l1 = r1[i2];

        specialinvoke r0.<com.android.server.display.LocalDisplayAdapter: void tryConnectDisplayLocked(long)>($l1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.display.LocalDisplayAdapter: java.lang.String UNIQUE_ID_PREFIX> = "local:";

        <com.android.server.display.LocalDisplayAdapter: java.lang.String TAG> = "LocalDisplayAdapter";

        <com.android.server.display.LocalDisplayAdapter: java.lang.String PROPERTY_EMULATOR_CIRCULAR> = "ro.emulator.circular";

        <com.android.server.display.LocalDisplayAdapter: int NO_DISPLAY_MODE_ID> = 0;

        <com.android.server.display.LocalDisplayAdapter: boolean DEBUG> = 0;

        return;
    }
}
