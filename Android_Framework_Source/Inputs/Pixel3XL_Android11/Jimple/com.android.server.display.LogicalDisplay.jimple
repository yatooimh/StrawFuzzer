final class com.android.server.display.LogicalDisplay extends java.lang.Object
{
    private static final int BLANK_LAYER_STACK;
    private final android.view.DisplayInfo mBaseDisplayInfo;
    private com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs mDesiredDisplayModeSpecs;
    private final int mDisplayId;
    private int mDisplayOffsetX;
    private int mDisplayOffsetY;
    private final android.graphics.Point mDisplayPosition;
    private boolean mDisplayScalingDisabled;
    private boolean mHasContent;
    private final com.android.server.display.DisplayInfoProxy mInfo;
    private final int mLayerStack;
    private android.view.DisplayInfo mOverrideDisplayInfo;
    private com.android.server.display.DisplayDevice mPrimaryDisplayDevice;
    private com.android.server.display.DisplayDeviceInfo mPrimaryDisplayDeviceInfo;
    private int mRequestedColorMode;
    private boolean mRequestedMinimalPostProcessing;
    private final android.graphics.Rect mTempDisplayRect;
    private final android.graphics.Rect mTempLayerStackRect;

    public void <init>(int, int, com.android.server.display.DisplayDevice)
    {
        com.android.server.display.LogicalDisplay r0;
        int i0, i1;
        com.android.server.display.DisplayDevice r1;
        android.view.DisplayInfo $r2;
        com.android.server.display.DisplayInfoProxy $r3;
        com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs $r4;
        android.graphics.Point $r5;
        android.graphics.Rect $r6, $r7;

        r0 := @this: com.android.server.display.LogicalDisplay;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.server.display.DisplayDevice;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.view.DisplayInfo;

        specialinvoke $r2.<android.view.DisplayInfo: void <init>()>();

        r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo> = $r2;

        $r3 = new com.android.server.display.DisplayInfoProxy;

        specialinvoke $r3.<com.android.server.display.DisplayInfoProxy: void <init>(android.view.DisplayInfo)>(null);

        r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayInfoProxy mInfo> = $r3;

        $r4 = new com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs;

        specialinvoke $r4.<com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs: void <init>()>();

        r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs mDesiredDisplayModeSpecs> = $r4;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r0.<com.android.server.display.LogicalDisplay: android.graphics.Point mDisplayPosition> = $r5;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempLayerStackRect> = $r6;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempDisplayRect> = $r7;

        r0.<com.android.server.display.LogicalDisplay: int mDisplayId> = i0;

        r0.<com.android.server.display.LogicalDisplay: int mLayerStack> = i1;

        r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice> = r1;

        return;
    }

    private static android.graphics.Rect getMaskingInsets(com.android.server.display.DisplayDeviceInfo)
    {
        com.android.server.display.DisplayDeviceInfo r0;
        int $i0, $i1;
        android.graphics.Rect $r1, $r4;
        android.view.DisplayCutout $r2, $r3;
        boolean z0;

        r0 := @parameter0: com.android.server.display.DisplayDeviceInfo;

        $i0 = r0.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i1 = $i0 & 2048;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label3;

        $r2 = r0.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayCutout displayCutout>;

        if $r2 == null goto label3;

        $r3 = r0.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayCutout displayCutout>;

        $r4 = virtualinvoke $r3.<android.view.DisplayCutout: android.graphics.Rect getSafeInsets()>();

        return $r4;

     label3:
        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        return $r1;
    }

    public void configureDisplayLocked(android.view.SurfaceControl$Transaction, com.android.server.display.DisplayDevice, boolean)
    {
        com.android.server.display.LogicalDisplay r0;
        android.view.SurfaceControl$Transaction r1;
        com.android.server.display.DisplayDevice r2, r10;
        boolean z0, $z1, $z2, $z3, z4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i38, i39, i40, i41, i42, i43, i44, i45, $i46, i47, $i48, i49, $i50, $i51, $i52, $i53, $i54, $i55;
        com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs $r3, $r9;
        android.graphics.Rect $r4, $r5, $r6, $r7, $r8, r13, $r14, $r15, $r17, $r18, $r19, $r20;
        android.view.DisplayInfo r11;
        com.android.server.display.DisplayDeviceInfo r12;
        android.graphics.Point $r16;

        r0 := @this: com.android.server.display.LogicalDisplay;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: com.android.server.display.DisplayDevice;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label01;

        i38 = -1;

        goto label02;

     label01:
        i38 = r0.<com.android.server.display.LogicalDisplay: int mLayerStack>;

     label02:
        virtualinvoke r2.<com.android.server.display.DisplayDevice: void setLayerStackLocked(android.view.SurfaceControl$Transaction,int)>(r1, i38);

        r10 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice>;

        z4 = 0;

        if r2 != r10 goto label03;

        $r9 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs mDesiredDisplayModeSpecs>;

        virtualinvoke r2.<com.android.server.display.DisplayDevice: void setDesiredDisplayModeSpecsLocked(com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs)>($r9);

        $i37 = r0.<com.android.server.display.LogicalDisplay: int mRequestedColorMode>;

        virtualinvoke r2.<com.android.server.display.DisplayDevice: void setRequestedColorModeLocked(int)>($i37);

        goto label04;

     label03:
        $r3 = new com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs;

        specialinvoke $r3.<com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs: void <init>()>();

        virtualinvoke r2.<com.android.server.display.DisplayDevice: void setDesiredDisplayModeSpecsLocked(com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs)>($r3);

        virtualinvoke r2.<com.android.server.display.DisplayDevice: void setRequestedColorModeLocked(int)>(0);

     label04:
        $z1 = r0.<com.android.server.display.LogicalDisplay: boolean mRequestedMinimalPostProcessing>;

        virtualinvoke r2.<com.android.server.display.DisplayDevice: void setAutoLowLatencyModeLocked(boolean)>($z1);

        $z2 = r0.<com.android.server.display.LogicalDisplay: boolean mRequestedMinimalPostProcessing>;

        virtualinvoke r2.<com.android.server.display.DisplayDevice: void setGameContentTypeLocked(boolean)>($z2);

        r11 = virtualinvoke r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo getDisplayInfoLocked()>();

        r12 = virtualinvoke r2.<com.android.server.display.DisplayDevice: com.android.server.display.DisplayDeviceInfo getDisplayDeviceInfoLocked()>();

        $r4 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempLayerStackRect>;

        $i2 = r11.<android.view.DisplayInfo: int logicalWidth>;

        $i1 = r11.<android.view.DisplayInfo: int logicalHeight>;

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i2, $i1);

        i39 = 0;

        $i3 = r12.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i4 = $i3 & 2;

        if $i4 == 0 goto label05;

        i39 = r11.<android.view.DisplayInfo: int rotation>;

     label05:
        $i5 = r12.<com.android.server.display.DisplayDeviceInfo: int rotation>;

        $i6 = $i5 + i39;

        i0 = $i6 % 4;

        if i0 == 1 goto label06;

        if i0 != 3 goto label07;

     label06:
        z4 = 1;

     label07:
        if z4 == 0 goto label08;

        i40 = r12.<com.android.server.display.DisplayDeviceInfo: int height>;

        goto label09;

     label08:
        i40 = r12.<com.android.server.display.DisplayDeviceInfo: int width>;

     label09:
        if z4 == 0 goto label10;

        i41 = r12.<com.android.server.display.DisplayDeviceInfo: int width>;

        goto label11;

     label10:
        i41 = r12.<com.android.server.display.DisplayDeviceInfo: int height>;

     label11:
        r13 = staticinvoke <com.android.server.display.LogicalDisplay: android.graphics.Rect getMaskingInsets(com.android.server.display.DisplayDeviceInfo)>(r12);

        staticinvoke <com.android.server.wm.utils.InsetUtils: void rotateInsets(android.graphics.Rect,int)>(r13, i0);

        $i8 = r13.<android.graphics.Rect: int left>;

        $i7 = r13.<android.graphics.Rect: int right>;

        $i9 = $i8 + $i7;

        i42 = i40 - $i9;

        $i11 = r13.<android.graphics.Rect: int top>;

        $i10 = r13.<android.graphics.Rect: int bottom>;

        $i12 = $i11 + $i10;

        i43 = i41 - $i12;

        $i13 = r11.<android.view.DisplayInfo: int flags>;

        $i14 = $i13 & 1073741824;

        if $i14 != 0 goto label14;

        $z3 = r0.<com.android.server.display.LogicalDisplay: boolean mDisplayScalingDisabled>;

        if $z3 == 0 goto label12;

        goto label14;

     label12:
        $i27 = r11.<android.view.DisplayInfo: int logicalHeight>;

        $i30 = $i27 * i42;

        $i28 = r11.<android.view.DisplayInfo: int logicalWidth>;

        $i29 = $i28 * i43;

        if $i30 >= $i29 goto label13;

        i44 = i42;

        $i34 = r11.<android.view.DisplayInfo: int logicalHeight>;

        $i36 = $i34 * i42;

        $i35 = r11.<android.view.DisplayInfo: int logicalWidth>;

        i45 = $i36 / $i35;

        goto label15;

     label13:
        $i31 = r11.<android.view.DisplayInfo: int logicalWidth>;

        $i33 = $i31 * i43;

        $i32 = r11.<android.view.DisplayInfo: int logicalHeight>;

        i44 = $i33 / $i32;

        i45 = i43;

        goto label15;

     label14:
        i44 = r11.<android.view.DisplayInfo: int logicalWidth>;

        i45 = r11.<android.view.DisplayInfo: int logicalHeight>;

     label15:
        $i46 = i43 - i45;

        i47 = $i46 / 2;

        $i48 = i42 - i44;

        i49 = $i48 / 2;

        $r14 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempDisplayRect>;

        $i50 = i49 + i44;

        $i51 = i47 + i45;

        virtualinvoke $r14.<android.graphics.Rect: void set(int,int,int,int)>(i49, i47, $i50, $i51);

        $r15 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempDisplayRect>;

        $i52 = r13.<android.graphics.Rect: int left>;

        $i53 = r13.<android.graphics.Rect: int top>;

        virtualinvoke $r15.<android.graphics.Rect: void offset(int,int)>($i52, $i53);

        if i0 != 0 goto label16;

        $r8 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempDisplayRect>;

        $i26 = r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetX>;

        $i25 = r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetY>;

        virtualinvoke $r8.<android.graphics.Rect: void offset(int,int)>($i26, $i25);

        goto label19;

     label16:
        if i0 != 1 goto label17;

        $r7 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempDisplayRect>;

        $i24 = r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetY>;

        $i22 = r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetX>;

        $i23 = neg $i22;

        virtualinvoke $r7.<android.graphics.Rect: void offset(int,int)>($i24, $i23);

        goto label19;

     label17:
        if i0 != 2 goto label18;

        $r6 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempDisplayRect>;

        $i18 = r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetX>;

        $i21 = neg $i18;

        $i19 = r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetY>;

        $i20 = neg $i19;

        virtualinvoke $r6.<android.graphics.Rect: void offset(int,int)>($i21, $i20);

        goto label19;

     label18:
        $r5 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempDisplayRect>;

        $i15 = r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetY>;

        $i17 = neg $i15;

        $i16 = r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetX>;

        virtualinvoke $r5.<android.graphics.Rect: void offset(int,int)>($i17, $i16);

     label19:
        $r16 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Point mDisplayPosition>;

        $r17 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempDisplayRect>;

        $i54 = $r17.<android.graphics.Rect: int left>;

        $r18 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempDisplayRect>;

        $i55 = $r18.<android.graphics.Rect: int top>;

        virtualinvoke $r16.<android.graphics.Point: void set(int,int)>($i54, $i55);

        $r19 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempLayerStackRect>;

        $r20 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempDisplayRect>;

        virtualinvoke r2.<com.android.server.display.DisplayDevice: void setProjectionLocked(android.view.SurfaceControl$Transaction,int,android.graphics.Rect,android.graphics.Rect)>(r1, i0, $r19, $r20);

        return;
    }

    public void dumpLocked(java.io.PrintWriter)
    {
        com.android.server.display.LogicalDisplay r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r3, $r7, $r11, $r15, $r21, $r25, $r32, $r36, $r40, $r45, $r50;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r6, $r10, $r14, $r20, $r24, $r31, $r35, $r39, $r44, $r49, $r53, r62;
        boolean $z0, $z1, $z2;
        com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs $r17;
        android.view.DisplayInfo $r42, $r47;
        com.android.server.display.DisplayDevice r61;

        r0 := @this: com.android.server.display.LogicalDisplay;

        r1 := @parameter0: java.io.PrintWriter;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDisplayId=");

        $i0 = r0.<com.android.server.display.LogicalDisplay: int mDisplayId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLayerStack=");

        $i1 = r0.<com.android.server.display.LogicalDisplay: int mLayerStack>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mHasContent=");

        $z0 = r0.<com.android.server.display.LogicalDisplay: boolean mHasContent>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDesiredDisplayModeSpecs={");

        $r17 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs mDesiredDisplayModeSpecs>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRequestedColorMode=");

        $i2 = r0.<com.android.server.display.LogicalDisplay: int mRequestedColorMode>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDisplayOffset=(");

        $i3 = r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetX>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i4 = r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetY>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDisplayScalingDisabled=");

        $z1 = r0.<com.android.server.display.LogicalDisplay: boolean mDisplayScalingDisabled>;

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPrimaryDisplayDevice=");

        r61 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice>;

        if r61 == null goto label1;

        r62 = virtualinvoke r61.<com.android.server.display.DisplayDevice: java.lang.String getNameLocked()>();

        goto label2;

     label1:
        r62 = "null";

     label2:
        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r62);

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r39);

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mBaseDisplayInfo=");

        $r42 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r44 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mOverrideDisplayInfo=");

        $r47 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r49);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRequestedMinimalPostProcessing=");

        $z2 = r0.<com.android.server.display.LogicalDisplay: boolean mRequestedMinimalPostProcessing>;

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r53);

        return;
    }

    public com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs getDesiredDisplayModeSpecsLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs $r1;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $r1 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs mDesiredDisplayModeSpecs>;

        return $r1;
    }

    public int getDisplayIdLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        int $i0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $i0 = r0.<com.android.server.display.LogicalDisplay: int mDisplayId>;

        return $i0;
    }

    public android.view.DisplayInfo getDisplayInfoLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        android.view.DisplayInfo r2, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r22;
        com.android.server.display.DisplayInfoProxy $r3, $r7, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.DisplayCutout $r17;
        float $f0, $f1;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $r3 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayInfoProxy mInfo>;

        $r4 = virtualinvoke $r3.<com.android.server.display.DisplayInfoProxy: android.view.DisplayInfo get()>();

        if $r4 != null goto label2;

        $r5 = new android.view.DisplayInfo;

        specialinvoke $r5.<android.view.DisplayInfo: void <init>()>();

        $r6 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        virtualinvoke $r5.<android.view.DisplayInfo: void copyFrom(android.view.DisplayInfo)>($r6);

        r2 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        if r2 == null goto label1;

        $i0 = r2.<android.view.DisplayInfo: int appWidth>;

        $r5.<android.view.DisplayInfo: int appWidth> = $i0;

        $r8 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $i1 = $r8.<android.view.DisplayInfo: int appHeight>;

        $r5.<android.view.DisplayInfo: int appHeight> = $i1;

        $r9 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $i2 = $r9.<android.view.DisplayInfo: int smallestNominalAppWidth>;

        $r5.<android.view.DisplayInfo: int smallestNominalAppWidth> = $i2;

        $r10 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $i3 = $r10.<android.view.DisplayInfo: int smallestNominalAppHeight>;

        $r5.<android.view.DisplayInfo: int smallestNominalAppHeight> = $i3;

        $r11 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $i4 = $r11.<android.view.DisplayInfo: int largestNominalAppWidth>;

        $r5.<android.view.DisplayInfo: int largestNominalAppWidth> = $i4;

        $r12 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $i5 = $r12.<android.view.DisplayInfo: int largestNominalAppHeight>;

        $r5.<android.view.DisplayInfo: int largestNominalAppHeight> = $i5;

        $r13 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $i6 = $r13.<android.view.DisplayInfo: int logicalWidth>;

        $r5.<android.view.DisplayInfo: int logicalWidth> = $i6;

        $r14 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $i7 = $r14.<android.view.DisplayInfo: int logicalHeight>;

        $r5.<android.view.DisplayInfo: int logicalHeight> = $i7;

        $r15 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $i8 = $r15.<android.view.DisplayInfo: int rotation>;

        $r5.<android.view.DisplayInfo: int rotation> = $i8;

        $r16 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $r17 = $r16.<android.view.DisplayInfo: android.view.DisplayCutout displayCutout>;

        $r5.<android.view.DisplayInfo: android.view.DisplayCutout displayCutout> = $r17;

        $r18 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $i9 = $r18.<android.view.DisplayInfo: int logicalDensityDpi>;

        $r5.<android.view.DisplayInfo: int logicalDensityDpi> = $i9;

        $r19 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $f0 = $r19.<android.view.DisplayInfo: float physicalXDpi>;

        $r5.<android.view.DisplayInfo: float physicalXDpi> = $f0;

        $r20 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $f1 = $r20.<android.view.DisplayInfo: float physicalYDpi>;

        $r5.<android.view.DisplayInfo: float physicalYDpi> = $f1;

     label1:
        $r7 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayInfoProxy mInfo>;

        virtualinvoke $r7.<com.android.server.display.DisplayInfoProxy: void set(android.view.DisplayInfo)>($r5);

     label2:
        $r21 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayInfoProxy mInfo>;

        $r22 = virtualinvoke $r21.<com.android.server.display.DisplayInfoProxy: android.view.DisplayInfo get()>();

        return $r22;
    }

    public int getDisplayOffsetXLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        int $i0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $i0 = r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetX>;

        return $i0;
    }

    public int getDisplayOffsetYLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        int $i0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $i0 = r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetY>;

        return $i0;
    }

    android.graphics.Point getDisplayPosition()
    {
        com.android.server.display.LogicalDisplay r0;
        android.graphics.Point $r1, $r2;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $r1 = new android.graphics.Point;

        $r2 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Point mDisplayPosition>;

        specialinvoke $r1.<android.graphics.Point: void <init>(android.graphics.Point)>($r2);

        return $r1;
    }

    public android.graphics.Rect getInsets()
    {
        com.android.server.display.LogicalDisplay r0;
        com.android.server.display.DisplayDeviceInfo $r1;
        android.graphics.Rect $r2;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $r1 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDeviceInfo mPrimaryDisplayDeviceInfo>;

        $r2 = staticinvoke <com.android.server.display.LogicalDisplay: android.graphics.Rect getMaskingInsets(com.android.server.display.DisplayDeviceInfo)>($r1);

        return $r2;
    }

    void getNonOverrideDisplayInfoLocked(android.view.DisplayInfo)
    {
        com.android.server.display.LogicalDisplay r0;
        android.view.DisplayInfo r1, $r2;

        r0 := @this: com.android.server.display.LogicalDisplay;

        r1 := @parameter0: android.view.DisplayInfo;

        $r2 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        virtualinvoke r1.<android.view.DisplayInfo: void copyFrom(android.view.DisplayInfo)>($r2);

        return;
    }

    public com.android.server.display.DisplayDevice getPrimaryDisplayDeviceLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        com.android.server.display.DisplayDevice $r1;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $r1 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice>;

        return $r1;
    }

    public int getRequestedColorModeLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        int $i0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $i0 = r0.<com.android.server.display.LogicalDisplay: int mRequestedColorMode>;

        return $i0;
    }

    public boolean getRequestedMinimalPostProcessingLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        boolean $z0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $z0 = r0.<com.android.server.display.LogicalDisplay: boolean mRequestedMinimalPostProcessing>;

        return $z0;
    }

    public boolean hasContentLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        boolean $z0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $z0 = r0.<com.android.server.display.LogicalDisplay: boolean mHasContent>;

        return $z0;
    }

    public boolean isDisplayScalingDisabled()
    {
        com.android.server.display.LogicalDisplay r0;
        boolean $z0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $z0 = r0.<com.android.server.display.LogicalDisplay: boolean mDisplayScalingDisabled>;

        return $z0;
    }

    public boolean isValidLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        com.android.server.display.DisplayDevice $r1;
        boolean z0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $r1 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void setDesiredDisplayModeSpecsLocked(com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs)
    {
        com.android.server.display.LogicalDisplay r0;
        com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs r1;

        r0 := @this: com.android.server.display.LogicalDisplay;

        r1 := @parameter0: com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs;

        r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayModeDirector$DesiredDisplayModeSpecs mDesiredDisplayModeSpecs> = r1;

        return;
    }

    public boolean setDisplayInfoOverrideFromWindowManagerLocked(android.view.DisplayInfo)
    {
        com.android.server.display.LogicalDisplay r0;
        android.view.DisplayInfo r1, r2, $r3, $r5, $r7;
        com.android.server.display.DisplayInfoProxy $r4, $r6, $r8;
        boolean $z0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        r1 := @parameter0: android.view.DisplayInfo;

        if r1 == null goto label2;

        r2 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        if r2 != null goto label1;

        $r7 = new android.view.DisplayInfo;

        specialinvoke $r7.<android.view.DisplayInfo: void <init>(android.view.DisplayInfo)>(r1);

        r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo> = $r7;

        $r8 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayInfoProxy mInfo>;

        virtualinvoke $r8.<com.android.server.display.DisplayInfoProxy: void set(android.view.DisplayInfo)>(null);

        return 1;

     label1:
        $z0 = virtualinvoke r2.<android.view.DisplayInfo: boolean equals(android.view.DisplayInfo)>(r1);

        if $z0 != 0 goto label3;

        $r5 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        virtualinvoke $r5.<android.view.DisplayInfo: void copyFrom(android.view.DisplayInfo)>(r1);

        $r6 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayInfoProxy mInfo>;

        virtualinvoke $r6.<com.android.server.display.DisplayInfoProxy: void set(android.view.DisplayInfo)>(null);

        return 1;

     label2:
        $r3 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        if $r3 == null goto label3;

        r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo> = null;

        $r4 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayInfoProxy mInfo>;

        virtualinvoke $r4.<com.android.server.display.DisplayInfoProxy: void set(android.view.DisplayInfo)>(null);

        return 1;

     label3:
        return 0;
    }

    public void setDisplayOffsetsLocked(int, int)
    {
        com.android.server.display.LogicalDisplay r0;
        int i0, i1;

        r0 := @this: com.android.server.display.LogicalDisplay;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetX> = i0;

        r0.<com.android.server.display.LogicalDisplay: int mDisplayOffsetY> = i1;

        return;
    }

    public void setDisplayScalingDisabledLocked(boolean)
    {
        com.android.server.display.LogicalDisplay r0;
        boolean z0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        z0 := @parameter0: boolean;

        r0.<com.android.server.display.LogicalDisplay: boolean mDisplayScalingDisabled> = z0;

        return;
    }

    public void setHasContentLocked(boolean)
    {
        com.android.server.display.LogicalDisplay r0;
        boolean z0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        z0 := @parameter0: boolean;

        r0.<com.android.server.display.LogicalDisplay: boolean mHasContent> = z0;

        return;
    }

    public void setRequestedColorModeLocked(int)
    {
        com.android.server.display.LogicalDisplay r0;
        int i0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        i0 := @parameter0: int;

        r0.<com.android.server.display.LogicalDisplay: int mRequestedColorMode> = i0;

        return;
    }

    public void setRequestedMinimalPostProcessingLocked(boolean)
    {
        com.android.server.display.LogicalDisplay r0;
        boolean z0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        z0 := @parameter0: boolean;

        r0.<com.android.server.display.LogicalDisplay: boolean mRequestedMinimalPostProcessing> = z0;

        return;
    }

    public void updateLocked(java.util.List)
    {
        com.android.server.display.LogicalDisplay r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i55, $i56, $i57, $i58;
        android.view.DisplayInfo r1, $r4, $r5, $r7, $r9, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r23, $r26, $r29, $r32, $r33, $r35, $r36, r40, r41, r42, r43, r44, r45, r46, r47, r48, r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        com.android.server.display.DisplayDevice $r2, r38;
        com.android.server.display.DisplayDeviceInfo $r3, r39;
        android.view.DisplayAddress $r6;
        android.hardware.display.DeviceProductInfo $r8;
        java.lang.String $r10, $r12, $r63;
        android.view.Display$Mode[] $r21, $r22, $r25;
        java.lang.Object[] $r24;
        int[] $r27, $r28, $r30;
        android.view.Display$HdrCapabilities $r31;
        com.android.server.display.DisplayInfoProxy $r34;
        java.util.List r37;
        android.graphics.Rect r49;
        float $f0, $f1;
        long $l53, $l54;
        android.view.DisplayCutout r64;

        r0 := @this: com.android.server.display.LogicalDisplay;

        r37 := @parameter0: java.util.List;

        r38 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice>;

        if r38 != null goto label01;

        return;

     label01:
        $z0 = interfaceinvoke r37.<java.util.List: boolean contains(java.lang.Object)>(r38);

        if $z0 != 0 goto label02;

        r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice> = null;

        return;

     label02:
        $r2 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice>;

        r39 = virtualinvoke $r2.<com.android.server.display.DisplayDevice: com.android.server.display.DisplayDeviceInfo getDisplayDeviceInfoLocked()>();

        $r3 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDeviceInfo mPrimaryDisplayDeviceInfo>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, r39);

        if $z1 != 0 goto label18;

        $r4 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i2 = r0.<com.android.server.display.LogicalDisplay: int mLayerStack>;

        $r4.<android.view.DisplayInfo: int layerStack> = $i2;

        r40 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        z4 = 0;

        r40.<android.view.DisplayInfo: int flags> = 0;

        $i3 = r39.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i4 = $i3 & 8;

        if $i4 == 0 goto label03;

        r41 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i50 = r41.<android.view.DisplayInfo: int flags>;

        $i51 = $i50 | 1;

        r41.<android.view.DisplayInfo: int flags> = $i51;

     label03:
        $i5 = r39.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i6 = $i5 & 4;

        if $i6 == 0 goto label04;

        r42 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i48 = r42.<android.view.DisplayInfo: int flags>;

        $i49 = $i48 | 2;

        r42.<android.view.DisplayInfo: int flags> = $i49;

     label04:
        $i7 = r39.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i8 = $i7 & 16;

        if $i8 == 0 goto label05;

        r43 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i46 = r43.<android.view.DisplayInfo: int flags>;

        $i47 = $i46 | 4;

        r43.<android.view.DisplayInfo: int flags> = $i47;

        $r36 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r36.<android.view.DisplayInfo: int removeMode> = 1;

     label05:
        $i9 = r39.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i10 = $i9 & 1024;

        if $i10 == 0 goto label06;

        $r35 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r35.<android.view.DisplayInfo: int removeMode> = 1;

     label06:
        $i11 = r39.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i12 = $i11 & 64;

        if $i12 == 0 goto label07;

        r44 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i44 = r44.<android.view.DisplayInfo: int flags>;

        $i45 = $i44 | 8;

        r44.<android.view.DisplayInfo: int flags> = $i45;

     label07:
        $i13 = r39.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i14 = $i13 & 256;

        if $i14 == 0 goto label08;

        r45 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i42 = r45.<android.view.DisplayInfo: int flags>;

        $i43 = $i42 | 16;

        r45.<android.view.DisplayInfo: int flags> = $i43;

     label08:
        $i15 = r39.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i16 = $i15 & 512;

        if $i16 == 0 goto label09;

        r46 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i40 = r46.<android.view.DisplayInfo: int flags>;

        $i41 = $i40 | 32;

        r46.<android.view.DisplayInfo: int flags> = $i41;

     label09:
        $i17 = r39.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i18 = $i17 & 4096;

        if $i18 == 0 goto label10;

        r47 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i38 = r47.<android.view.DisplayInfo: int flags>;

        $i39 = $i38 | 64;

        r47.<android.view.DisplayInfo: int flags> = $i39;

     label10:
        $i19 = r39.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i20 = $i19 & 8192;

        if $i20 == 0 goto label11;

        r48 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i36 = r48.<android.view.DisplayInfo: int flags>;

        $i37 = $i36 | 128;

        r48.<android.view.DisplayInfo: int flags> = $i37;

     label11:
        r49 = staticinvoke <com.android.server.display.LogicalDisplay: android.graphics.Rect getMaskingInsets(com.android.server.display.DisplayDeviceInfo)>(r39);

        $i22 = r39.<com.android.server.display.DisplayDeviceInfo: int width>;

        $i21 = r49.<android.graphics.Rect: int left>;

        $i24 = $i22 - $i21;

        $i23 = r49.<android.graphics.Rect: int right>;

        i0 = $i24 - $i23;

        $i26 = r39.<com.android.server.display.DisplayDeviceInfo: int height>;

        $i25 = r49.<android.graphics.Rect: int top>;

        $i28 = $i26 - $i25;

        $i27 = r49.<android.graphics.Rect: int bottom>;

        i1 = $i28 - $i27;

        $r5 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i29 = r39.<com.android.server.display.DisplayDeviceInfo: int type>;

        $r5.<android.view.DisplayInfo: int type> = $i29;

        $r7 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r6 = r39.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayAddress address>;

        $r7.<android.view.DisplayInfo: android.view.DisplayAddress address> = $r6;

        $r9 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r8 = r39.<com.android.server.display.DisplayDeviceInfo: android.hardware.display.DeviceProductInfo deviceProductInfo>;

        $r9.<android.view.DisplayInfo: android.hardware.display.DeviceProductInfo deviceProductInfo> = $r8;

        $r11 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r10 = r39.<com.android.server.display.DisplayDeviceInfo: java.lang.String name>;

        $r11.<android.view.DisplayInfo: java.lang.String name> = $r10;

        $r13 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r12 = r39.<com.android.server.display.DisplayDeviceInfo: java.lang.String uniqueId>;

        $r13.<android.view.DisplayInfo: java.lang.String uniqueId> = $r12;

        $r14 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r14.<android.view.DisplayInfo: int appWidth> = i0;

        $r15 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r15.<android.view.DisplayInfo: int appHeight> = i1;

        $r16 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r16.<android.view.DisplayInfo: int logicalWidth> = i0;

        $r17 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r17.<android.view.DisplayInfo: int logicalHeight> = i1;

        $r18 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r18.<android.view.DisplayInfo: int rotation> = 0;

        $r19 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i30 = r39.<com.android.server.display.DisplayDeviceInfo: int modeId>;

        $r19.<android.view.DisplayInfo: int modeId> = $i30;

        $r20 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i31 = r39.<com.android.server.display.DisplayDeviceInfo: int defaultModeId>;

        $r20.<android.view.DisplayInfo: int defaultModeId> = $i31;

        $r23 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r22 = r39.<com.android.server.display.DisplayDeviceInfo: android.view.Display$Mode[] supportedModes>;

        $r21 = r39.<com.android.server.display.DisplayDeviceInfo: android.view.Display$Mode[] supportedModes>;

        $i32 = lengthof $r21;

        $r24 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r22, $i32);

        $r25 = (android.view.Display$Mode[]) $r24;

        $r23.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes> = $r25;

        $r26 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i33 = r39.<com.android.server.display.DisplayDeviceInfo: int colorMode>;

        $r26.<android.view.DisplayInfo: int colorMode> = $i33;

        $r29 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r28 = r39.<com.android.server.display.DisplayDeviceInfo: int[] supportedColorModes>;

        $r27 = r39.<com.android.server.display.DisplayDeviceInfo: int[] supportedColorModes>;

        $i34 = lengthof $r27;

        $r30 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r28, $i34);

        $r29.<android.view.DisplayInfo: int[] supportedColorModes> = $r30;

        $r32 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r31 = r39.<com.android.server.display.DisplayDeviceInfo: android.view.Display$HdrCapabilities hdrCapabilities>;

        $r32.<android.view.DisplayInfo: android.view.Display$HdrCapabilities hdrCapabilities> = $r31;

        r50 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $z2 = r39.<com.android.server.display.DisplayDeviceInfo: boolean allmSupported>;

        if $z2 != 0 goto label13;

        $z3 = r39.<com.android.server.display.DisplayDeviceInfo: boolean gameContentTypeSupported>;

        if $z3 == 0 goto label12;

        goto label13;

     label12:
        z5 = 0;

        goto label14;

     label13:
        z5 = 1;

     label14:
        r50.<android.view.DisplayInfo: boolean minimalPostProcessingSupported> = z5;

        $r51 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i52 = r39.<com.android.server.display.DisplayDeviceInfo: int densityDpi>;

        $r51.<android.view.DisplayInfo: int logicalDensityDpi> = $i52;

        $r52 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $f0 = r39.<com.android.server.display.DisplayDeviceInfo: float xDpi>;

        $r52.<android.view.DisplayInfo: float physicalXDpi> = $f0;

        $r53 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $f1 = r39.<com.android.server.display.DisplayDeviceInfo: float yDpi>;

        $r53.<android.view.DisplayInfo: float physicalYDpi> = $f1;

        $r54 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $l53 = r39.<com.android.server.display.DisplayDeviceInfo: long appVsyncOffsetNanos>;

        $r54.<android.view.DisplayInfo: long appVsyncOffsetNanos> = $l53;

        $r55 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $l54 = r39.<com.android.server.display.DisplayDeviceInfo: long presentationDeadlineNanos>;

        $r55.<android.view.DisplayInfo: long presentationDeadlineNanos> = $l54;

        $r56 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i55 = r39.<com.android.server.display.DisplayDeviceInfo: int state>;

        $r56.<android.view.DisplayInfo: int state> = $i55;

        $r57 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r57.<android.view.DisplayInfo: int smallestNominalAppWidth> = i0;

        $r58 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r58.<android.view.DisplayInfo: int smallestNominalAppHeight> = i1;

        $r59 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r59.<android.view.DisplayInfo: int largestNominalAppWidth> = i0;

        $r60 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r60.<android.view.DisplayInfo: int largestNominalAppHeight> = i1;

        $r61 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i56 = r39.<com.android.server.display.DisplayDeviceInfo: int ownerUid>;

        $r61.<android.view.DisplayInfo: int ownerUid> = $i56;

        $r62 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r63 = r39.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName>;

        $r62.<android.view.DisplayInfo: java.lang.String ownerPackageName> = $r63;

        $i57 = r39.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i58 = $i57 & 2048;

        if $i58 == 0 goto label15;

        z4 = 1;

     label15:
        r1 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        if z4 == 0 goto label16;

        r64 = null;

        goto label17;

     label16:
        r64 = r39.<com.android.server.display.DisplayDeviceInfo: android.view.DisplayCutout displayCutout>;

     label17:
        r1.<android.view.DisplayInfo: android.view.DisplayCutout displayCutout> = r64;

        $r33 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i35 = r0.<com.android.server.display.LogicalDisplay: int mDisplayId>;

        $r33.<android.view.DisplayInfo: int displayId> = $i35;

        r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDeviceInfo mPrimaryDisplayDeviceInfo> = r39;

        $r34 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayInfoProxy mInfo>;

        virtualinvoke $r34.<com.android.server.display.DisplayInfoProxy: void set(android.view.DisplayInfo)>(null);

     label18:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.display.LogicalDisplay: int BLANK_LAYER_STACK> = -1;

        return;
    }
}
