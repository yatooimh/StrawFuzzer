final class com.android.server.display.OverlayDisplayWindow extends java.lang.Object implements com.android.internal.util.DumpUtils$Dump
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final boolean DISABLE_MOVE_AND_RESIZE;
    private final float INITIAL_SCALE;
    private final float MAX_SCALE;
    private final float MIN_SCALE;
    private final float WINDOW_ALPHA;
    private final android.content.Context mContext;
    private final android.view.Display mDefaultDisplay;
    private final android.view.DisplayInfo mDefaultDisplayInfo;
    private int mDensityDpi;
    private final android.hardware.display.DisplayManager$DisplayListener mDisplayListener;
    private final android.hardware.display.DisplayManager mDisplayManager;
    private android.view.GestureDetector mGestureDetector;
    private final int mGravity;
    private int mHeight;
    private final com.android.server.display.OverlayDisplayWindow$Listener mListener;
    private float mLiveScale;
    private float mLiveTranslationX;
    private float mLiveTranslationY;
    private final java.lang.String mName;
    private final android.view.GestureDetector$OnGestureListener mOnGestureListener;
    private final android.view.ScaleGestureDetector$OnScaleGestureListener mOnScaleGestureListener;
    private final android.view.View$OnTouchListener mOnTouchListener;
    private android.view.ScaleGestureDetector mScaleGestureDetector;
    private final boolean mSecure;
    private final android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener;
    private android.view.TextureView mTextureView;
    private java.lang.String mTitle;
    private android.widget.TextView mTitleTextView;
    private int mWidth;
    private android.view.View mWindowContent;
    private final android.view.WindowManager mWindowManager;
    private android.view.WindowManager$LayoutParams mWindowParams;
    private float mWindowScale;
    private boolean mWindowVisible;
    private int mWindowX;
    private int mWindowY;

    public void <init>(android.content.Context, java.lang.String, int, int, int, int, boolean, com.android.server.display.OverlayDisplayWindow$Listener)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.content.Context r1, $r14;
        java.lang.String r2;
        int i0, i1, i2, i3;
        boolean z0;
        com.android.server.display.OverlayDisplayWindow$Listener r3;
        android.view.DisplayInfo $r4;
        com.android.server.display.OverlayDisplayWindow$1 $r5;
        com.android.server.display.OverlayDisplayWindow$2 $r6;
        com.android.server.display.OverlayDisplayWindow$3 $r7;
        com.android.server.display.OverlayDisplayWindow$4 $r8;
        com.android.server.display.OverlayDisplayWindow$5 $r9;
        java.lang.Object $r10, $r12;
        android.hardware.display.DisplayManager $r11;
        android.view.WindowManager $r13;
        android.view.Display $r15;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        z0 := @parameter6: boolean;

        r3 := @parameter7: com.android.server.display.OverlayDisplayWindow$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.display.OverlayDisplayWindow: float INITIAL_SCALE> = 0.5F;

        r0.<com.android.server.display.OverlayDisplayWindow: float MIN_SCALE> = 0.3F;

        r0.<com.android.server.display.OverlayDisplayWindow: float MAX_SCALE> = 1.0F;

        r0.<com.android.server.display.OverlayDisplayWindow: float WINDOW_ALPHA> = 0.8F;

        r0.<com.android.server.display.OverlayDisplayWindow: boolean DISABLE_MOVE_AND_RESIZE> = 0;

        $r4 = new android.view.DisplayInfo;

        specialinvoke $r4.<android.view.DisplayInfo: void <init>()>();

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo> = $r4;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveScale> = 1.0F;

        $r5 = new com.android.server.display.OverlayDisplayWindow$1;

        specialinvoke $r5.<com.android.server.display.OverlayDisplayWindow$1: void <init>(com.android.server.display.OverlayDisplayWindow)>(r0);

        r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager$DisplayListener mDisplayListener> = $r5;

        $r6 = new com.android.server.display.OverlayDisplayWindow$2;

        specialinvoke $r6.<com.android.server.display.OverlayDisplayWindow$2: void <init>(com.android.server.display.OverlayDisplayWindow)>(r0);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener> = $r6;

        $r7 = new com.android.server.display.OverlayDisplayWindow$3;

        specialinvoke $r7.<com.android.server.display.OverlayDisplayWindow$3: void <init>(com.android.server.display.OverlayDisplayWindow)>(r0);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.View$OnTouchListener mOnTouchListener> = $r7;

        $r8 = new com.android.server.display.OverlayDisplayWindow$4;

        specialinvoke $r8.<com.android.server.display.OverlayDisplayWindow$4: void <init>(com.android.server.display.OverlayDisplayWindow)>(r0);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.GestureDetector$OnGestureListener mOnGestureListener> = $r8;

        $r9 = new com.android.server.display.OverlayDisplayWindow$5;

        specialinvoke $r9.<com.android.server.display.OverlayDisplayWindow$5: void <init>(com.android.server.display.OverlayDisplayWindow)>(r0);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.ScaleGestureDetector$OnScaleGestureListener mOnScaleGestureListener> = $r9;

        staticinvoke <android.view.ThreadedRenderer: void disableVsync()>();

        r0.<com.android.server.display.OverlayDisplayWindow: android.content.Context mContext> = r1;

        r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mName> = r2;

        r0.<com.android.server.display.OverlayDisplayWindow: int mGravity> = i3;

        r0.<com.android.server.display.OverlayDisplayWindow: boolean mSecure> = z0;

        r0.<com.android.server.display.OverlayDisplayWindow: com.android.server.display.OverlayDisplayWindow$Listener mListener> = r3;

        $r10 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r11 = (android.hardware.display.DisplayManager) $r10;

        r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager mDisplayManager> = $r11;

        $r12 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r13 = (android.view.WindowManager) $r12;

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager mWindowManager> = $r13;

        $r14 = r0.<com.android.server.display.OverlayDisplayWindow: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: android.view.Display getDisplay()>();

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.Display mDefaultDisplay> = $r15;

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: boolean updateDefaultDisplayInfo()>();

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void resize(int,int,int,boolean)>(i0, i1, i2, 0);

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void createWindow()>();

        return;
    }

    static android.view.Display access$000(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.view.Display $r1;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.Display mDefaultDisplay>;

        return $r1;
    }

    static boolean access$100(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        $z0 = specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: boolean updateDefaultDisplayInfo()>();

        return $z0;
    }

    static android.view.DisplayInfo access$200(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.view.DisplayInfo $r1;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        return $r1;
    }

    static com.android.server.display.OverlayDisplayWindow$Listener access$300(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        com.android.server.display.OverlayDisplayWindow$Listener $r1;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: com.android.server.display.OverlayDisplayWindow$Listener mListener>;

        return $r1;
    }

    static android.view.GestureDetector access$400(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.view.GestureDetector $r1;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.GestureDetector mGestureDetector>;

        return $r1;
    }

    static android.view.ScaleGestureDetector access$500(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.view.ScaleGestureDetector $r1;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.ScaleGestureDetector mScaleGestureDetector>;

        return $r1;
    }

    static void access$600(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void saveWindowParams()>();

        return;
    }

    static float access$724(com.android.server.display.OverlayDisplayWindow, float)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        float $f0, f1, f2;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        f1 := @parameter1: float;

        $f0 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationX>;

        f2 = $f0 - f1;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationX> = f2;

        return f2;
    }

    static float access$824(com.android.server.display.OverlayDisplayWindow, float)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        float $f0, f1, f2;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        f1 := @parameter1: float;

        $f0 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationY>;

        f2 = $f0 - f1;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationY> = f2;

        return f2;
    }

    static float access$932(com.android.server.display.OverlayDisplayWindow, float)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        float $f0, f1, f2;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        f1 := @parameter1: float;

        $f0 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveScale>;

        f2 = $f0 * f1;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveScale> = f2;

        return f2;
    }

    private void clearLiveState()
    {
        com.android.server.display.OverlayDisplayWindow r0;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationX> = 0.0F;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationY> = 0.0F;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveScale> = 1.0F;

        return;
    }

    private void createWindow()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.content.Context $r1, $r23, $r26;
        android.view.LayoutInflater $r2;
        android.view.View$OnTouchListener $r3;
        android.view.View $r4, $r5, $r13, $r14, r29;
        android.view.TextureView $r6, $r7, $r9, $r12, r30, r31;
        android.view.ViewGroup$LayoutParams $r8, $r10;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        android.view.TextureView$SurfaceTextureListener $r11;
        java.lang.String $r15, $r19;
        android.view.WindowManager$LayoutParams $r16, $r17, $r18, $r20, r34, r35;
        boolean $z0;
        android.view.GestureDetector $r21;
        android.view.GestureDetector$OnGestureListener $r22;
        android.view.ScaleGestureDetector $r24;
        android.view.ScaleGestureDetector$OnScaleGestureListener $r25;
        android.view.DisplayInfo $r27, $r28;
        android.widget.TextView r32;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.content.Context mContext>;

        $r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        r29 = virtualinvoke $r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367230, null);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.View mWindowContent> = r29;

        $r3 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.View$OnTouchListener mOnTouchListener>;

        virtualinvoke r29.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>($r3);

        $r4 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.View mWindowContent>;

        $r5 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>(16909268);

        r30 = (android.view.TextureView) $r5;

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView> = r30;

        virtualinvoke r30.<android.view.TextureView: void setPivotX(float)>(0.0F);

        $r6 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        virtualinvoke $r6.<android.view.TextureView: void setPivotY(float)>(0.0F);

        $r7 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        $r8 = virtualinvoke $r7.<android.view.TextureView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i1 = r0.<com.android.server.display.OverlayDisplayWindow: int mWidth>;

        $r8.<android.view.ViewGroup$LayoutParams: int width> = $i1;

        $r9 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        $r10 = virtualinvoke $r9.<android.view.TextureView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i2 = r0.<com.android.server.display.OverlayDisplayWindow: int mHeight>;

        $r10.<android.view.ViewGroup$LayoutParams: int height> = $i2;

        r31 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        virtualinvoke r31.<android.view.TextureView: void setOpaque(boolean)>(0);

        $r12 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        $r11 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener>;

        virtualinvoke $r12.<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)>($r11);

        $r13 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.View mWindowContent>;

        $r14 = virtualinvoke $r13.<android.view.View: android.view.View findViewById(int)>(16909269);

        r32 = (android.widget.TextView) $r14;

        r0.<com.android.server.display.OverlayDisplayWindow: android.widget.TextView mTitleTextView> = r32;

        $r15 = r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mTitle>;

        virtualinvoke r32.<android.widget.TextView: void setText(java.lang.CharSequence)>($r15);

        $r16 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r16.<android.view.WindowManager$LayoutParams: void <init>(int)>(2026);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams> = $r16;

        $i3 = $r16.<android.view.WindowManager$LayoutParams: int flags>;

        $i4 = $i3 | 16778024;

        $r16.<android.view.WindowManager$LayoutParams: int flags> = $i4;

        $z0 = r0.<com.android.server.display.OverlayDisplayWindow: boolean mSecure>;

        if $z0 == 0 goto label1;

        r34 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $i11 = r34.<android.view.WindowManager$LayoutParams: int flags>;

        $i12 = $i11 | 8192;

        r34.<android.view.WindowManager$LayoutParams: int flags> = $i12;

     label1:
        r35 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $i5 = r35.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i6 = $i5 | 2;

        r35.<android.view.WindowManager$LayoutParams: int privateFlags> = $i6;

        $r17 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r17.<android.view.WindowManager$LayoutParams: float alpha> = 0.8F;

        $r18 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r18.<android.view.WindowManager$LayoutParams: int gravity> = 51;

        $r20 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r19 = r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mTitle>;

        virtualinvoke $r20.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>($r19);

        $r21 = new android.view.GestureDetector;

        $r23 = r0.<com.android.server.display.OverlayDisplayWindow: android.content.Context mContext>;

        $r22 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.GestureDetector$OnGestureListener mOnGestureListener>;

        specialinvoke $r21.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>($r23, $r22);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.GestureDetector mGestureDetector> = $r21;

        $r24 = new android.view.ScaleGestureDetector;

        $r26 = r0.<com.android.server.display.OverlayDisplayWindow: android.content.Context mContext>;

        $r25 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.ScaleGestureDetector$OnScaleGestureListener mOnScaleGestureListener>;

        specialinvoke $r24.<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener)>($r26, $r25);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.ScaleGestureDetector mScaleGestureDetector> = $r24;

        $i7 = r0.<com.android.server.display.OverlayDisplayWindow: int mGravity>;

        $i8 = $i7 & 3;

        if $i8 != 3 goto label2;

        i13 = 0;

        goto label3;

     label2:
        $r27 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        i13 = $r27.<android.view.DisplayInfo: int logicalWidth>;

     label3:
        r0.<com.android.server.display.OverlayDisplayWindow: int mWindowX> = i13;

        $i9 = r0.<com.android.server.display.OverlayDisplayWindow: int mGravity>;

        $i10 = $i9 & 48;

        if $i10 != 48 goto label4;

        i14 = 0;

        goto label5;

     label4:
        $r28 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        i14 = $r28.<android.view.DisplayInfo: int logicalHeight>;

     label5:
        r0.<com.android.server.display.OverlayDisplayWindow: int mWindowY> = i14;

        r0.<com.android.server.display.OverlayDisplayWindow: float mWindowScale> = 0.5F;

        return;
    }

    private void resize(int, int, int, boolean)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        int i0, i1, i2, $i3, $i4, $i5;
        boolean z0, $z1;
        android.content.Context $r2, $r13;
        android.content.res.Resources $r3, $r14;
        java.lang.Object[] $r4;
        java.lang.String $r5, $r9, $r11, $r15, $r17;
        java.lang.Integer $r6, $r7, $r8;
        java.lang.StringBuilder $r10;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        r0.<com.android.server.display.OverlayDisplayWindow: int mWidth> = i0;

        r0.<com.android.server.display.OverlayDisplayWindow: int mHeight> = i1;

        r0.<com.android.server.display.OverlayDisplayWindow: int mDensityDpi> = i2;

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = newarray (java.lang.Object)[4];

        $r5 = r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mName>;

        $r4[0] = $r5;

        $i3 = r0.<com.android.server.display.OverlayDisplayWindow: int mWidth>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4[1] = $r6;

        $i4 = r0.<com.android.server.display.OverlayDisplayWindow: int mHeight>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r4[2] = $r7;

        $i5 = r0.<com.android.server.display.OverlayDisplayWindow: int mDensityDpi>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r4[3] = $r8;

        $r9 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040058, $r4);

        r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mTitle> = $r9;

        $z1 = r0.<com.android.server.display.OverlayDisplayWindow: boolean mSecure>;

        if $z1 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mTitle>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = r0.<com.android.server.display.OverlayDisplayWindow: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.res.Resources getResources()>();

        $r15 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>(17040057);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mTitle> = $r17;

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r0.<com.android.server.display.OverlayDisplayWindow: void relayout()>();

     label2:
        return;
    }

    private void saveWindowParams()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.view.WindowManager$LayoutParams $r1, $r2;
        int $i0, $i1;
        android.view.TextureView $r3;
        float $f0;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $i0 = $r1.<android.view.WindowManager$LayoutParams: int x>;

        r0.<com.android.server.display.OverlayDisplayWindow: int mWindowX> = $i0;

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $i1 = $r2.<android.view.WindowManager$LayoutParams: int y>;

        r0.<com.android.server.display.OverlayDisplayWindow: int mWindowY> = $i1;

        $r3 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        $f0 = virtualinvoke $r3.<android.view.TextureView: float getScaleX()>();

        r0.<com.android.server.display.OverlayDisplayWindow: float mWindowScale> = $f0;

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void clearLiveState()>();

        return;
    }

    private boolean updateDefaultDisplayInfo()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.view.DisplayInfo $r1;
        android.view.Display $r2;
        boolean $z0;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.Display mDefaultDisplay>;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        $z0 = virtualinvoke $r2.<android.view.Display: boolean getDisplayInfo(android.view.DisplayInfo)>($r1);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("OverlayDisplayWindow", "Cannot show overlay display because there is no default display upon which to show it.");

        return 0;

     label1:
        return 1;
    }

    private void updateWindowParams()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19;
        android.view.DisplayInfo $r1, $r2, $r3, $r4;
        android.view.TextureView $r5, $r6;
        android.view.WindowManager$LayoutParams $r7, $r8, $r9, $r10;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $f3 = r0.<com.android.server.display.OverlayDisplayWindow: float mWindowScale>;

        $f2 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveScale>;

        $f7 = $f3 * $f2;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        $i2 = $r1.<android.view.DisplayInfo: int logicalWidth>;

        $f5 = (float) $i2;

        $i3 = r0.<com.android.server.display.OverlayDisplayWindow: int mWidth>;

        $f4 = (float) $i3;

        $f6 = $f5 / $f4;

        $f8 = staticinvoke <java.lang.Math: float min(float,float)>($f7, $f6);

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        $i4 = $r2.<android.view.DisplayInfo: int logicalHeight>;

        $f10 = (float) $i4;

        $i5 = r0.<com.android.server.display.OverlayDisplayWindow: int mHeight>;

        $f9 = (float) $i5;

        $f11 = $f10 / $f9;

        $f12 = staticinvoke <java.lang.Math: float min(float,float)>($f8, $f11);

        $f13 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f12);

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(0.3F, $f13);

        $f14 = r0.<com.android.server.display.OverlayDisplayWindow: float mWindowScale>;

        $f15 = f0 / $f14;

        $f16 = $f15 - 1.0F;

        f1 = $f16 * 0.5F;

        $i6 = r0.<com.android.server.display.OverlayDisplayWindow: int mWidth>;

        $f17 = (float) $i6;

        $f18 = $f17 * f0;

        i0 = (int) $f18;

        $i7 = r0.<com.android.server.display.OverlayDisplayWindow: int mHeight>;

        $f19 = (float) $i7;

        $f20 = $f19 * f0;

        i1 = (int) $f20;

        $i8 = r0.<com.android.server.display.OverlayDisplayWindow: int mWindowX>;

        $f22 = (float) $i8;

        $f21 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationX>;

        $f25 = $f22 + $f21;

        $f23 = (float) i0;

        $f24 = $f23 * f1;

        $f26 = $f25 - $f24;

        i16 = (int) $f26;

        $i9 = r0.<com.android.server.display.OverlayDisplayWindow: int mWindowY>;

        $f28 = (float) $i9;

        $f27 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationY>;

        $f31 = $f28 + $f27;

        $f29 = (float) i1;

        $f30 = $f29 * f1;

        $f32 = $f31 - $f30;

        i17 = (int) $f32;

        $r3 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        $i10 = $r3.<android.view.DisplayInfo: int logicalWidth>;

        $i11 = $i10 - i0;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i16, $i11);

        i18 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

        $r4 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        $i13 = $r4.<android.view.DisplayInfo: int logicalHeight>;

        $i14 = $i13 - i1;

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>(i17, $i14);

        i19 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i15);

        $r5 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        virtualinvoke $r5.<android.view.TextureView: void setScaleX(float)>(f0);

        $r6 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        virtualinvoke $r6.<android.view.TextureView: void setScaleY(float)>(f0);

        $r7 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r7.<android.view.WindowManager$LayoutParams: int x> = i18;

        $r8 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r8.<android.view.WindowManager$LayoutParams: int y> = i19;

        $r9 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r9.<android.view.WindowManager$LayoutParams: int width> = i0;

        $r10 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r10.<android.view.WindowManager$LayoutParams: int height> = i1;

        return;
    }

    public void dismiss()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        boolean $z0;
        android.hardware.display.DisplayManager$DisplayListener $r1;
        android.hardware.display.DisplayManager $r2;
        android.view.View $r3;
        android.view.WindowManager $r4;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $z0 = r0.<com.android.server.display.OverlayDisplayWindow: boolean mWindowVisible>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager mDisplayManager>;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager$DisplayListener mDisplayListener>;

        virtualinvoke $r2.<android.hardware.display.DisplayManager: void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener)>($r1);

        $r4 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager mWindowManager>;

        $r3 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.View mWindowContent>;

        interfaceinvoke $r4.<android.view.WindowManager: void removeView(android.view.View)>($r3);

        r0.<com.android.server.display.OverlayDisplayWindow: boolean mWindowVisible> = 0;

     label1:
        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r6, $r10, $r14, $r18, $r24, $r28, $r32, $r36, $r41;
        boolean $z0;
        java.lang.String $r5, $r9, $r13, $r17, $r22, $r27, $r31, $r35, $r40, $r45, r46;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.view.WindowManager$LayoutParams $r20;
        android.view.TextureView $r23, $r38, $r43;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        r1 := @parameter0: java.io.PrintWriter;

        r46 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWindowVisible=");

        $z0 = r0.<com.android.server.display.OverlayDisplayWindow: boolean mWindowVisible>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWindowX=");

        $i0 = r0.<com.android.server.display.OverlayDisplayWindow: int mWindowX>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWindowY=");

        $i1 = r0.<com.android.server.display.OverlayDisplayWindow: int mWindowY>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWindowScale=");

        $f0 = r0.<com.android.server.display.OverlayDisplayWindow: float mWindowScale>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWindowParams=");

        $r20 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        $r23 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        if $r23 == null goto label1;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mTextureView.getScaleX()=");

        $r38 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        $f4 = virtualinvoke $r38.<android.view.TextureView: float getScaleX()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r40);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mTextureView.getScaleY()=");

        $r43 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        $f5 = virtualinvoke $r43.<android.view.TextureView: float getScaleY()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r45);

     label1:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLiveTranslationX=");

        $f1 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationX>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLiveTranslationY=");

        $f2 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationY>;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLiveScale=");

        $f3 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveScale>;

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        return;
    }

    public void relayout()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        boolean $z0;
        android.view.WindowManager$LayoutParams $r1;
        android.view.View $r2;
        android.view.WindowManager $r3;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $z0 = r0.<com.android.server.display.OverlayDisplayWindow: boolean mWindowVisible>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void updateWindowParams()>();

        $r3 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager mWindowManager>;

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.View mWindowContent>;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        interfaceinvoke $r3.<android.view.WindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r2, $r1);

     label1:
        return;
    }

    public void resize(int, int, int)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        int i0, i1, i2;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void resize(int,int,int,boolean)>(i0, i1, i2, 1);

        return;
    }

    public void show()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        boolean $z0, $z1;
        android.hardware.display.DisplayManager$DisplayListener $r1, $r6;
        android.hardware.display.DisplayManager $r2, $r7;
        android.view.WindowManager$LayoutParams $r3;
        android.view.View $r4;
        android.view.WindowManager $r5;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $z0 = r0.<com.android.server.display.OverlayDisplayWindow: boolean mWindowVisible>;

        if $z0 != 0 goto label2;

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager mDisplayManager>;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager$DisplayListener mDisplayListener>;

        virtualinvoke $r2.<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler)>($r1, null);

        $z1 = specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: boolean updateDefaultDisplayInfo()>();

        if $z1 != 0 goto label1;

        $r7 = r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager mDisplayManager>;

        $r6 = r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager$DisplayListener mDisplayListener>;

        virtualinvoke $r7.<android.hardware.display.DisplayManager: void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener)>($r6);

        return;

     label1:
        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void clearLiveState()>();

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void updateWindowParams()>();

        $r5 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager mWindowManager>;

        $r4 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.View mWindowContent>;

        $r3 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        interfaceinvoke $r5.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r4, $r3);

        r0.<com.android.server.display.OverlayDisplayWindow: boolean mWindowVisible> = 1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.display.OverlayDisplayWindow: java.lang.String TAG> = "OverlayDisplayWindow";

        <com.android.server.display.OverlayDisplayWindow: boolean DEBUG> = 0;

        return;
    }
}
