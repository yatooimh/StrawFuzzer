final class com.android.server.display.PersistentDataStore$DisplayState extends java.lang.Object
{
    private int mColorMode;

    private void <init>()
    {
        com.android.server.display.PersistentDataStore$DisplayState r0;

        r0 := @this: com.android.server.display.PersistentDataStore$DisplayState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.display.PersistentDataStore$1)
    {
        com.android.server.display.PersistentDataStore$DisplayState r0;
        com.android.server.display.PersistentDataStore$1 r1;

        r0 := @this: com.android.server.display.PersistentDataStore$DisplayState;

        r1 := @parameter0: com.android.server.display.PersistentDataStore$1;

        specialinvoke r0.<com.android.server.display.PersistentDataStore$DisplayState: void <init>()>();

        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.display.PersistentDataStore$DisplayState r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r8;
        java.lang.StringBuilder $r4;
        int $i0;

        r0 := @this: com.android.server.display.PersistentDataStore$DisplayState;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ColorMode=");

        $i0 = r0.<com.android.server.display.PersistentDataStore$DisplayState: int mColorMode>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return;
    }

    public int getColorMode()
    {
        com.android.server.display.PersistentDataStore$DisplayState r0;
        int $i0;

        r0 := @this: com.android.server.display.PersistentDataStore$DisplayState;

        $i0 = r0.<com.android.server.display.PersistentDataStore$DisplayState: int mColorMode>;

        return $i0;
    }

    public void loadFromXml(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.display.PersistentDataStore$DisplayState r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, $i1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.server.display.PersistentDataStore$DisplayState;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $z1 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r1, i0);

        if $z1 == 0 goto label2;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("color-mode");

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        r0.<com.android.server.display.PersistentDataStore$DisplayState: int mColorMode> = $i1;

        goto label1;

     label2:
        return;
    }

    public void saveToXml(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.display.PersistentDataStore$DisplayState r0;
        org.xmlpull.v1.XmlSerializer r1;
        int $i0;
        java.lang.String $r3;

        r0 := @this: com.android.server.display.PersistentDataStore$DisplayState;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "color-mode");

        $i0 = r0.<com.android.server.display.PersistentDataStore$DisplayState: int mColorMode>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "color-mode");

        return;
    }

    public boolean setColorMode(int)
    {
        com.android.server.display.PersistentDataStore$DisplayState r0;
        int i0, $i1;

        r0 := @this: com.android.server.display.PersistentDataStore$DisplayState;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.display.PersistentDataStore$DisplayState: int mColorMode>;

        if i0 != $i1 goto label1;

        return 0;

     label1:
        r0.<com.android.server.display.PersistentDataStore$DisplayState: int mColorMode> = i0;

        return 1;
    }
}
