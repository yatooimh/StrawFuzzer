final class com.android.server.display.PersistentDataStore$StableDeviceValues extends java.lang.Object
{
    private int mHeight;
    private int mWidth;

    private void <init>()
    {
        com.android.server.display.PersistentDataStore$StableDeviceValues r0;

        r0 := @this: com.android.server.display.PersistentDataStore$StableDeviceValues;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.display.PersistentDataStore$1)
    {
        com.android.server.display.PersistentDataStore$StableDeviceValues r0;
        com.android.server.display.PersistentDataStore$1 r1;

        r0 := @this: com.android.server.display.PersistentDataStore$StableDeviceValues;

        r1 := @parameter0: com.android.server.display.PersistentDataStore$1;

        specialinvoke r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: void <init>()>();

        return;
    }

    static android.graphics.Point access$100(com.android.server.display.PersistentDataStore$StableDeviceValues)
    {
        com.android.server.display.PersistentDataStore$StableDeviceValues r0;
        android.graphics.Point $r1;

        r0 := @parameter0: com.android.server.display.PersistentDataStore$StableDeviceValues;

        $r1 = specialinvoke r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: android.graphics.Point getDisplaySize()>();

        return $r1;
    }

    private android.graphics.Point getDisplaySize()
    {
        com.android.server.display.PersistentDataStore$StableDeviceValues r0;
        android.graphics.Point $r1;
        int $i0, $i1;

        r0 := @this: com.android.server.display.PersistentDataStore$StableDeviceValues;

        $r1 = new android.graphics.Point;

        $i1 = r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mWidth>;

        $i0 = r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mHeight>;

        specialinvoke $r1.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        return $r1;
    }

    private static int loadIntValue(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        int i0;
        java.lang.String $r0;
        java.lang.Throwable $r1;
        org.xmlpull.v1.XmlPullParser r2;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        $r0 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label2:
        return i0;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.display.PersistentDataStore$StableDeviceValues r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r7, $r12;
        java.lang.StringBuilder $r3, $r8;
        int $i0, $i1;

        r0 := @this: com.android.server.display.PersistentDataStore$StableDeviceValues;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StableDisplayWidth=");

        $i0 = r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mWidth>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StableDisplayHeight=");

        $i1 = r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mHeight>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return;
    }

    public void loadFromXml(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.display.PersistentDataStore$StableDeviceValues r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, $i2, $i3;
        java.lang.String r2;
        boolean $z0, $z1, $z2;
        byte b4;

        r0 := @this: com.android.server.display.PersistentDataStore$StableDeviceValues;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r1, i0);

        if $z0 == 0 goto label9;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        b4 = -1;

        i1 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        if i1 == -1635792540 goto label4;

        if i1 == 1069578729 goto label3;

     label2:
        goto label5;

     label3:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("stable-display-width");

        if $z2 == 0 goto label2;

        b4 = 0;

        goto label5;

     label4:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("stable-display-height");

        if $z1 == 0 goto label2;

        b4 = 1;

     label5:
        if b4 == 0 goto label7;

        if b4 == 1 goto label6;

        goto label8;

     label6:
        $i3 = staticinvoke <com.android.server.display.PersistentDataStore$StableDeviceValues: int loadIntValue(org.xmlpull.v1.XmlPullParser)>(r1);

        r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mHeight> = $i3;

        goto label8;

     label7:
        $i2 = staticinvoke <com.android.server.display.PersistentDataStore$StableDeviceValues: int loadIntValue(org.xmlpull.v1.XmlPullParser)>(r1);

        r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mWidth> = $i2;

     label8:
        goto label1;

     label9:
        return;
    }

    public void saveToXml(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.display.PersistentDataStore$StableDeviceValues r0;
        org.xmlpull.v1.XmlSerializer r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r7;

        r0 := @this: com.android.server.display.PersistentDataStore$StableDeviceValues;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $i0 = r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mWidth>;

        if $i0 <= 0 goto label1;

        $i1 = r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mHeight>;

        if $i1 <= 0 goto label1;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "stable-display-width");

        $i2 = r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mWidth>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "stable-display-width");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "stable-display-height");

        $i3 = r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mHeight>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r7);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "stable-display-height");

     label1:
        return;
    }

    public boolean setDisplaySize(android.graphics.Point)
    {
        com.android.server.display.PersistentDataStore$StableDeviceValues r0;
        android.graphics.Point r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.server.display.PersistentDataStore$StableDeviceValues;

        r1 := @parameter0: android.graphics.Point;

        $i1 = r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mWidth>;

        $i0 = r1.<android.graphics.Point: int x>;

        if $i1 != $i0 goto label2;

        $i5 = r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mHeight>;

        $i4 = r1.<android.graphics.Point: int y>;

        if $i5 == $i4 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        $i2 = r1.<android.graphics.Point: int x>;

        r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mWidth> = $i2;

        $i3 = r1.<android.graphics.Point: int y>;

        r0.<com.android.server.display.PersistentDataStore$StableDeviceValues: int mHeight> = $i3;

        return 1;
    }
}
