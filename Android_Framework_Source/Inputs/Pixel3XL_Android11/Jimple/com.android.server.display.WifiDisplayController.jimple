final class com.android.server.display.WifiDisplayController extends java.lang.Object implements com.android.internal.util.DumpUtils$Dump
{
    private static final int CONNECTION_TIMEOUT_SECONDS;
    private static final int CONNECT_MAX_RETRIES;
    private static final int CONNECT_RETRY_DELAY_MILLIS;
    private static final boolean DEBUG;
    private static final int DEFAULT_CONTROL_PORT;
    private static final int DISCOVER_PEERS_INTERVAL_MILLIS;
    private static final int MAX_THROUGHPUT;
    private static final int RTSP_TIMEOUT_SECONDS;
    private static final int RTSP_TIMEOUT_SECONDS_CERT_MODE;
    private static final java.lang.String TAG;
    private android.hardware.display.WifiDisplay mAdvertisedDisplay;
    private int mAdvertisedDisplayFlags;
    private int mAdvertisedDisplayHeight;
    private android.view.Surface mAdvertisedDisplaySurface;
    private int mAdvertisedDisplayWidth;
    private final java.util.ArrayList mAvailableWifiDisplayPeers;
    private android.net.wifi.p2p.WifiP2pDevice mCancelingDevice;
    private android.net.wifi.p2p.WifiP2pDevice mConnectedDevice;
    private android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo;
    private android.net.wifi.p2p.WifiP2pDevice mConnectingDevice;
    private int mConnectionRetriesLeft;
    private final java.lang.Runnable mConnectionTimeout;
    private final android.content.Context mContext;
    private android.net.wifi.p2p.WifiP2pDevice mDesiredDevice;
    private android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice;
    private final java.lang.Runnable mDiscoverPeers;
    private boolean mDiscoverPeersInProgress;
    private final android.os.Handler mHandler;
    private final com.android.server.display.WifiDisplayController$Listener mListener;
    private android.net.NetworkInfo mNetworkInfo;
    private android.media.RemoteDisplay mRemoteDisplay;
    private boolean mRemoteDisplayConnected;
    private java.lang.String mRemoteDisplayInterface;
    private final java.lang.Runnable mRtspTimeout;
    private boolean mScanRequested;
    private android.net.wifi.p2p.WifiP2pDevice mThisDevice;
    private boolean mWfdEnabled;
    private boolean mWfdEnabling;
    private boolean mWifiDisplayCertMode;
    private boolean mWifiDisplayOnSetting;
    private int mWifiDisplayWpsConfig;
    private android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel;
    private boolean mWifiP2pEnabled;
    private android.net.wifi.p2p.WifiP2pManager mWifiP2pManager;
    private final android.content.BroadcastReceiver mWifiP2pReceiver;

    public void <init>(android.content.Context, android.os.Handler, com.android.server.display.WifiDisplayController$Listener)
    {
        com.android.server.display.WifiDisplayController r0;
        com.android.server.display.WifiDisplayController$Listener r1;
        java.util.ArrayList $r2;
        com.android.server.display.WifiDisplayController$16 $r3;
        com.android.server.display.WifiDisplayController$17 $r4;
        com.android.server.display.WifiDisplayController$18 $r5;
        com.android.server.display.WifiDisplayController$21 $r6;
        android.content.IntentFilter $r7;
        android.os.Handler $r8, $r12, r18;
        android.content.BroadcastReceiver $r9;
        com.android.server.display.WifiDisplayController$1 $r11;
        android.content.Context $r13, r17;
        android.net.Uri $r14, $r15, $r16;
        android.content.ContentResolver r21;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r17 := @parameter0: android.content.Context;

        r18 := @parameter1: android.os.Handler;

        r1 := @parameter2: com.android.server.display.WifiDisplayController$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers> = $r2;

        r0.<com.android.server.display.WifiDisplayController: int mWifiDisplayWpsConfig> = 4;

        $r3 = new com.android.server.display.WifiDisplayController$16;

        specialinvoke $r3.<com.android.server.display.WifiDisplayController$16: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mDiscoverPeers> = $r3;

        $r4 = new com.android.server.display.WifiDisplayController$17;

        specialinvoke $r4.<com.android.server.display.WifiDisplayController$17: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mConnectionTimeout> = $r4;

        $r5 = new com.android.server.display.WifiDisplayController$18;

        specialinvoke $r5.<com.android.server.display.WifiDisplayController$18: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mRtspTimeout> = $r5;

        $r6 = new com.android.server.display.WifiDisplayController$21;

        specialinvoke $r6.<com.android.server.display.WifiDisplayController$21: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        r0.<com.android.server.display.WifiDisplayController: android.content.BroadcastReceiver mWifiP2pReceiver> = $r6;

        r0.<com.android.server.display.WifiDisplayController: android.content.Context mContext> = r17;

        r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler> = r18;

        r0.<com.android.server.display.WifiDisplayController: com.android.server.display.WifiDisplayController$Listener mListener> = r1;

        $r7 = new android.content.IntentFilter;

        specialinvoke $r7.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r7.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.p2p.STATE_CHANGED");

        virtualinvoke $r7.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.p2p.PEERS_CHANGED");

        virtualinvoke $r7.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.p2p.CONNECTION_STATE_CHANGE");

        virtualinvoke $r7.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.p2p.THIS_DEVICE_CHANGED");

        $r9 = r0.<com.android.server.display.WifiDisplayController: android.content.BroadcastReceiver mWifiP2pReceiver>;

        $r8 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        virtualinvoke r17.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r9, $r7, null, $r8);

        $r11 = new com.android.server.display.WifiDisplayController$1;

        $r12 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        specialinvoke $r11.<com.android.server.display.WifiDisplayController$1: void <init>(com.android.server.display.WifiDisplayController,android.os.Handler)>(r0, $r12);

        $r13 = r0.<com.android.server.display.WifiDisplayController: android.content.Context mContext>;

        r21 = virtualinvoke $r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r14 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("wifi_display_on");

        virtualinvoke r21.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r14, 0, $r11);

        $r15 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("wifi_display_certification_on");

        virtualinvoke r21.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r15, 0, $r11);

        $r16 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("wifi_display_wps_config");

        virtualinvoke r21.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r16, 0, $r11);

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateSettings()>();

        return;
    }

    static void access$000(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateSettings()>();

        return;
    }

    static boolean access$100(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling>;

        return $z0;
    }

    static void access$1000(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleScanResults()>();

        return;
    }

    static boolean access$102(com.android.server.display.WifiDisplayController, boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling> = z0;

        return z0;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1100(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1102(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice> = r1;

        return r1;
    }

    static void access$1200(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateConnection()>();

        return;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1300(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mCancelingDevice>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1302(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mCancelingDevice> = r1;

        return r1;
    }

    static java.lang.Runnable access$1400(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mConnectionTimeout>;

        return $r1;
    }

    static android.os.Handler access$1500(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1600(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1602(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice> = r1;

        return r1;
    }

    static void access$1700(com.android.server.display.WifiDisplayController, boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleConnectionFailure(boolean)>(z0);

        return;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1800(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1802(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice> = r1;

        return r1;
    }

    static boolean access$1900(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mRemoteDisplayConnected>;

        return $z0;
    }

    static boolean access$1902(com.android.server.display.WifiDisplayController, boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.display.WifiDisplayController: boolean mRemoteDisplayConnected> = z0;

        return z0;
    }

    static java.lang.Runnable access$2000(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mRtspTimeout>;

        return $r1;
    }

    static boolean access$202(com.android.server.display.WifiDisplayController, boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled> = z0;

        return z0;
    }

    static boolean access$2100(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayCertMode>;

        return $z0;
    }

    static android.net.wifi.p2p.WifiP2pGroup access$2200(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pGroup $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pGroup access$2202(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pGroup)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pGroup r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pGroup;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo> = r1;

        return r1;
    }

    static android.hardware.display.WifiDisplaySessionInfo access$2300(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pGroup, int)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pGroup r1;
        int i0;
        android.hardware.display.WifiDisplaySessionInfo $r2;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pGroup;

        i0 := @parameter2: int;

        $r2 = specialinvoke r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplaySessionInfo getSessionInfo(android.net.wifi.p2p.WifiP2pGroup,int)>(r1, i0);

        return $r2;
    }

    static android.hardware.display.WifiDisplay access$2400(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        android.hardware.display.WifiDisplay $r1;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        $r1 = staticinvoke <com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay createWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)>(r0);

        return $r1;
    }

    static void access$2500(com.android.server.display.WifiDisplayController, android.hardware.display.WifiDisplay, android.view.Surface, int, int, int)
    {
        com.android.server.display.WifiDisplayController r0;
        android.hardware.display.WifiDisplay r1;
        android.view.Surface r2;
        int i0, i1, i2;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.hardware.display.WifiDisplay;

        r2 := @parameter2: android.view.Surface;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void advertiseDisplay(android.hardware.display.WifiDisplay,android.view.Surface,int,int,int)>(r1, r2, i0, i1, i2);

        return;
    }

    static void access$2600(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void disconnect()>();

        return;
    }

    static boolean access$2700(android.net.wifi.p2p.WifiP2pGroup, android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        android.net.wifi.p2p.WifiP2pDevice r1;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        $z0 = staticinvoke <com.android.server.display.WifiDisplayController: boolean contains(android.net.wifi.p2p.WifiP2pGroup,android.net.wifi.p2p.WifiP2pDevice)>(r0, r1);

        return $z0;
    }

    static java.lang.String access$2800(android.net.wifi.p2p.WifiP2pGroup)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.String $r1;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pGroup;

        $r1 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pGroup(android.net.wifi.p2p.WifiP2pGroup)>(r0);

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$2900(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$2902(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice> = r1;

        return r1;
    }

    static void access$300(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void reportFeatureState()>();

        return;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$3000(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mThisDevice>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$3002(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mThisDevice> = r1;

        return r1;
    }

    static void access$3100(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void tryDiscoverPeers()>();

        return;
    }

    static android.media.RemoteDisplay access$3200(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.media.RemoteDisplay $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        return $r1;
    }

    static int access$3300(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        int $i0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $i0 = r0.<com.android.server.display.WifiDisplayController: int mConnectionRetriesLeft>;

        return $i0;
    }

    static int access$3320(com.android.server.display.WifiDisplayController, int)
    {
        com.android.server.display.WifiDisplayController r0;
        int $i0, i1, i2;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        i1 := @parameter1: int;

        $i0 = r0.<com.android.server.display.WifiDisplayController: int mConnectionRetriesLeft>;

        i2 = $i0 - i1;

        r0.<com.android.server.display.WifiDisplayController: int mConnectionRetriesLeft> = i2;

        return i2;
    }

    static void access$3400(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void retryConnection()>();

        return;
    }

    static void access$3500(com.android.server.display.WifiDisplayController, boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleStateChanged(boolean)>(z0);

        return;
    }

    static void access$3600(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handlePeersChanged()>();

        return;
    }

    static void access$3700(com.android.server.display.WifiDisplayController, android.net.NetworkInfo)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.NetworkInfo r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.NetworkInfo;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleConnectionChanged(android.net.NetworkInfo)>(r1);

        return;
    }

    static void access$400(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateScanState()>();

        return;
    }

    static com.android.server.display.WifiDisplayController$Listener access$500(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        com.android.server.display.WifiDisplayController$Listener $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: com.android.server.display.WifiDisplayController$Listener mListener>;

        return $r1;
    }

    static boolean access$600(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mDiscoverPeersInProgress>;

        return $z0;
    }

    static void access$700(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void requestPeers()>();

        return;
    }

    static java.util.ArrayList access$800(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers>;

        return $r1;
    }

    static boolean access$900(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        $z0 = staticinvoke <com.android.server.display.WifiDisplayController: boolean isWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)>(r0);

        return $z0;
    }

    private void advertiseDisplay(android.hardware.display.WifiDisplay, android.view.Surface, int, int, int)
    {
        com.android.server.display.WifiDisplayController r0;
        android.hardware.display.WifiDisplay r1, r3, $r5;
        android.view.Surface r2, r4, $r6;
        int i0, i1, i2, $i3, $i4, $i5;
        boolean $z0;
        android.os.Handler $r7;
        com.android.server.display.WifiDisplayController$20 $r8;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: android.hardware.display.WifiDisplay;

        r2 := @parameter1: android.view.Surface;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r5 = r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay mAdvertisedDisplay>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.display.WifiDisplayController: android.view.Surface mAdvertisedDisplaySurface>;

        if $r6 != r2 goto label1;

        $i3 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayWidth>;

        if $i3 != i0 goto label1;

        $i4 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayHeight>;

        if $i4 != i1 goto label1;

        $i5 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayFlags>;

        if $i5 == i2 goto label2;

     label1:
        r3 = r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay mAdvertisedDisplay>;

        r4 = r0.<com.android.server.display.WifiDisplayController: android.view.Surface mAdvertisedDisplaySurface>;

        r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay mAdvertisedDisplay> = r1;

        r0.<com.android.server.display.WifiDisplayController: android.view.Surface mAdvertisedDisplaySurface> = r2;

        r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayWidth> = i0;

        r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayHeight> = i1;

        r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayFlags> = i2;

        $r7 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r8 = new com.android.server.display.WifiDisplayController$20;

        specialinvoke $r8.<com.android.server.display.WifiDisplayController$20: void <init>(com.android.server.display.WifiDisplayController,android.view.Surface,android.view.Surface,android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplay,int,int,int)>(r0, r4, r2, r3, r1, i0, i1, i2);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

     label2:
        return;
    }

    private int computeFeatureState()
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0, $z1;
        byte b0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiP2pEnabled>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        $z1 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayOnSetting>;

        if $z1 == 0 goto label2;

        b0 = 3;

        goto label3;

     label2:
        b0 = 2;

     label3:
        return b0;
    }

    private void connect(android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1, $r9, r12, r13;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6, $r7, $r8, $r10, $r11;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        r12 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if r12 == null goto label1;

        $r11 = r12.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r10 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label1;

        return;

     label1:
        r13 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        if r13 == null goto label2;

        $r8 = r13.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r7 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label2;

        $r9 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r9 != null goto label2;

        return;

     label2:
        $z2 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        if $z2 != 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring request to connect to Wifi display because the  feature is currently disabled: ");

        $r4 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r6);

        return;

     label3:
        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice> = r1;

        r0.<com.android.server.display.WifiDisplayController: int mConnectionRetriesLeft> = 3;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateConnection()>();

        return;
    }

    private static boolean contains(android.net.wifi.p2p.WifiP2pGroup, android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        android.net.wifi.p2p.WifiP2pDevice r1, $r2;
        boolean $z0, $z1, z2;
        java.util.Collection $r3;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        $r2 = virtualinvoke r0.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>();

        $z0 = virtualinvoke $r2.<android.net.wifi.p2p.WifiP2pDevice: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r3 = virtualinvoke r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.Collection getClientList()>();

        $z1 = interfaceinvoke $r3.<java.util.Collection: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    private static android.hardware.display.WifiDisplay createWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        android.hardware.display.WifiDisplay $r1;
        java.lang.String $r2, $r3;
        android.net.wifi.p2p.WifiP2pWfdInfo $r4;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        $r1 = new android.hardware.display.WifiDisplay;

        $r2 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r3 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        $r4 = virtualinvoke r0.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo getWfdInfo()>();

        $z0 = virtualinvoke $r4.<android.net.wifi.p2p.WifiP2pWfdInfo: boolean isSessionAvailable()>();

        specialinvoke $r1.<android.hardware.display.WifiDisplay: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)>($r2, $r3, null, 1, $z0, 0);

        return $r1;
    }

    private static java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)
    {
        java.lang.String $r0, r2;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        if r1 == null goto label1;

        $r0 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String toString()>();

        r2 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(10, 44);

        goto label2;

     label1:
        r2 = "null";

     label2:
        return r2;
    }

    private static java.lang.String describeWifiP2pGroup(android.net.wifi.p2p.WifiP2pGroup)
    {
        java.lang.String $r0, r2;
        android.net.wifi.p2p.WifiP2pGroup r1;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pGroup;

        if r1 == null goto label1;

        $r0 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String toString()>();

        r2 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(10, 44);

        goto label2;

     label1:
        r2 = "null";

     label2:
        return r2;
    }

    private void disconnect()
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice> = null;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateConnection()>();

        return;
    }

    private static java.net.Inet4Address getInterfaceAddress(android.net.wifi.p2p.WifiP2pGroup)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.String $r1, $r4, $r7, $r13, $r15;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r11;
        java.lang.Object $r8;
        java.net.Inet4Address $r9;
        java.lang.Throwable $r10;
        java.net.NetworkInterface r16;
        java.util.Enumeration r17;
        java.net.InetAddress r18;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pGroup;

     label1:
        $r1 = virtualinvoke r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>();

        r16 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)>($r1);

     label2:
        r17 = virtualinvoke r16.<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>();

     label3:
        $z0 = interfaceinvoke r17.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r17.<java.util.Enumeration: java.lang.Object nextElement()>();

        r18 = (java.net.InetAddress) $r8;

        $z1 = r18 instanceof java.net.Inet4Address;

        if $z1 == 0 goto label4;

        $r9 = (java.net.Inet4Address) r18;

        return $r9;

     label4:
        goto label3;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not obtain address of network interface ");

        $r4 = virtualinvoke r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it had no IPv4 addresses.");

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WifiDisplayController", $r7);

        return null;

     label6:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not obtain address of network interface ");

        $r13 = virtualinvoke r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WifiDisplayController", $r15, $r10);

        return null;

        catch java.net.SocketException from label1 to label2 with label6;
    }

    private static int getPortNumber(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        $r1 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("DIRECT-");

        if $z0 == 0 goto label1;

        $r2 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("Broadcom");

        if $z1 == 0 goto label1;

        return 8554;

     label1:
        return 7236;
    }

    private android.hardware.display.WifiDisplaySessionInfo getSessionInfo(android.net.wifi.p2p.WifiP2pGroup, int)
    {
        com.android.server.display.WifiDisplayController r0;
        int i0;
        java.net.Inet4Address r1;
        boolean z0, $z1;
        java.lang.String r2, $r5, $r6, $r9, $r12, r17, r18;
        android.net.wifi.p2p.WifiP2pDevice $r3, $r4, $r8;
        java.lang.StringBuilder $r7;
        android.hardware.display.WifiDisplaySessionInfo $r14;
        android.net.wifi.p2p.WifiP2pGroup r15;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r15 := @parameter0: android.net.wifi.p2p.WifiP2pGroup;

        i0 := @parameter1: int;

        if r15 != null goto label1;

        return null;

     label1:
        r1 = staticinvoke <com.android.server.display.WifiDisplayController: java.net.Inet4Address getInterfaceAddress(android.net.wifi.p2p.WifiP2pGroup)>(r15);

        $r3 = virtualinvoke r15.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>();

        $r6 = $r3.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r4 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mThisDevice>;

        $r5 = $r4.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r15.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>();

        $r9 = $r8.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke r15.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getNetworkName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r17 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = virtualinvoke r15.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()>();

        if r1 == null goto label2;

        r18 = virtualinvoke r1.<java.net.Inet4Address: java.lang.String getHostAddress()>();

        goto label3;

     label2:
        r18 = "";

     label3:
        $r14 = new android.hardware.display.WifiDisplaySessionInfo;

        $z1 = z0 ^ 1;

        specialinvoke $r14.<android.hardware.display.WifiDisplaySessionInfo: void <init>(boolean,int,java.lang.String,java.lang.String,java.lang.String)>($z1, i0, r17, r2, r18);

        return $r14;
    }

    private void handleConnectionChanged(android.net.NetworkInfo)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.NetworkInfo r1;
        boolean $z0, $z1, $z2, $z3;
        android.net.wifi.p2p.WifiP2pDevice $r2, $r3, $r4;
        com.android.server.display.WifiDisplayController$15 $r5;
        android.net.wifi.p2p.WifiP2pManager $r6;
        android.net.wifi.p2p.WifiP2pManager$Channel $r7;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: android.net.NetworkInfo;

        r0.<com.android.server.display.WifiDisplayController: android.net.NetworkInfo mNetworkInfo> = r1;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r1.<android.net.NetworkInfo: boolean isConnected()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r4 != null goto label1;

        $z2 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayCertMode>;

        if $z2 == 0 goto label5;

     label1:
        $r6 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r7 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r5 = new com.android.server.display.WifiDisplayController$15;

        specialinvoke $r5.<com.android.server.display.WifiDisplayController$15: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r6.<android.net.wifi.p2p.WifiP2pManager: void requestGroupInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$GroupInfoListener)>($r7, $r5);

        goto label5;

     label2:
        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo> = null;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        if $r2 != null goto label3;

        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        if $r3 == null goto label4;

     label3:
        specialinvoke r0.<com.android.server.display.WifiDisplayController: void disconnect()>();

     label4:
        $z3 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        if $z3 == 0 goto label5;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void requestPeers()>();

     label5:
        return;
    }

    private void handleConnectionFailure(boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;
        android.os.Handler r1;
        android.net.wifi.p2p.WifiP2pDevice $r2, r4;
        int $i1;
        com.android.server.display.WifiDisplayController$19 $r3;
        long l2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        z0 := @parameter0: boolean;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", "Wifi display connection failed!");

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r2 == null goto label4;

        $i1 = r0.<com.android.server.display.WifiDisplayController: int mConnectionRetriesLeft>;

        if $i1 <= 0 goto label3;

        r4 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        r1 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r3 = new com.android.server.display.WifiDisplayController$19;

        specialinvoke $r3.<com.android.server.display.WifiDisplayController$19: void <init>(com.android.server.display.WifiDisplayController,android.net.wifi.p2p.WifiP2pDevice)>(r0, r4);

        if z0 == 0 goto label1;

        l2 = 0L;

        goto label2;

     label1:
        l2 = 500L;

     label2:
        virtualinvoke r1.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, l2);

        goto label4;

     label3:
        specialinvoke r0.<com.android.server.display.WifiDisplayController: void disconnect()>();

     label4:
        return;
    }

    private void handlePeersChanged()
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void requestPeers()>();

        return;
    }

    private void handleScanFinished()
    {
        com.android.server.display.WifiDisplayController r0;
        com.android.server.display.WifiDisplayController$10 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r1 = new com.android.server.display.WifiDisplayController$10;

        specialinvoke $r1.<com.android.server.display.WifiDisplayController$10: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void handleScanResults()
    {
        com.android.server.display.WifiDisplayController r0;
        int i0, i1;
        android.hardware.display.WifiDisplay[] r1;
        android.net.wifi.p2p.WifiP2pDevice r2;
        java.util.ArrayList $r3, $r8;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        com.android.server.display.WifiDisplayController$9 $r6;
        android.os.Handler $r7;
        java.lang.Object $r9;
        android.hardware.display.WifiDisplay $r10;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r3 = r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = <android.hardware.display.WifiDisplay: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object[] newArray(int)>(i0);

        r1 = (android.hardware.display.WifiDisplay[]) $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r8 = r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.net.wifi.p2p.WifiP2pDevice) $r9;

        $r10 = staticinvoke <com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay createWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)>(r2);

        r1[i1] = $r10;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateDesiredDevice(android.net.wifi.p2p.WifiP2pDevice)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r7 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r6 = new com.android.server.display.WifiDisplayController$9;

        specialinvoke $r6.<com.android.server.display.WifiDisplayController$9: void <init>(com.android.server.display.WifiDisplayController,android.hardware.display.WifiDisplay[])>(r0, r1);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        return;
    }

    private void handleScanStarted()
    {
        com.android.server.display.WifiDisplayController r0;
        com.android.server.display.WifiDisplayController$8 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r1 = new com.android.server.display.WifiDisplayController$8;

        specialinvoke $r1.<com.android.server.display.WifiDisplayController$8: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void handleStateChanged(boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.display.WifiDisplayController: boolean mWifiP2pEnabled> = z0;

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void retrieveWifiP2pManagerAndChannel()>();

     label1:
        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateWfdEnableState()>();

        return;
    }

    private static boolean isPrimarySinkDeviceType(int)
    {
        int i0;
        boolean z1;

        i0 := @parameter0: int;

        z1 = 1;

        if i0 == 1 goto label2;

        if i0 != 3 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private static boolean isWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)
    {
        boolean $z0, $z1, z2;
        int $i0;
        android.net.wifi.p2p.WifiP2pDevice r0;
        android.net.wifi.p2p.WifiP2pWfdInfo r1;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        r1 = virtualinvoke r0.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo getWfdInfo()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pWfdInfo: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pWfdInfo: int getDeviceType()>();

        $z1 = staticinvoke <com.android.server.display.WifiDisplayController: boolean isPrimarySinkDeviceType(int)>($i0);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private void readvertiseDisplay(android.hardware.display.WifiDisplay)
    {
        com.android.server.display.WifiDisplayController r0;
        android.hardware.display.WifiDisplay r1;
        int $i0, $i1, $i2;
        android.view.Surface $r2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: android.hardware.display.WifiDisplay;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.view.Surface mAdvertisedDisplaySurface>;

        $i2 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayWidth>;

        $i1 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayHeight>;

        $i0 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayFlags>;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void advertiseDisplay(android.hardware.display.WifiDisplay,android.view.Surface,int,int,int)>(r1, $r2, $i2, $i1, $i0);

        return;
    }

    private void reportFeatureState()
    {
        com.android.server.display.WifiDisplayController r0;
        int i0;
        com.android.server.display.WifiDisplayController$4 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        i0 = specialinvoke r0.<com.android.server.display.WifiDisplayController: int computeFeatureState()>();

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r1 = new com.android.server.display.WifiDisplayController$4;

        specialinvoke $r1.<com.android.server.display.WifiDisplayController$4: void <init>(com.android.server.display.WifiDisplayController,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void requestPeers()
    {
        com.android.server.display.WifiDisplayController r0;
        com.android.server.display.WifiDisplayController$7 $r1;
        android.net.wifi.p2p.WifiP2pManager $r2;
        android.net.wifi.p2p.WifiP2pManager$Channel $r3;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r1 = new com.android.server.display.WifiDisplayController$7;

        specialinvoke $r1.<com.android.server.display.WifiDisplayController$7: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r2.<android.net.wifi.p2p.WifiP2pManager: void requestPeers(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$PeerListListener)>($r3, $r1);

        return;
    }

    private void retrieveWifiP2pManagerAndChannel()
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pManager r1, $r2, $r10;
        android.net.wifi.p2p.WifiP2pManager$Channel $r3, $r7;
        android.os.Handler $r4;
        android.content.Context $r5, $r8;
        android.os.Looper $r6;
        java.lang.Object $r9;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        if $r2 != null goto label1;

        $r8 = r0.<com.android.server.display.WifiDisplayController: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifip2p");

        $r10 = (android.net.wifi.p2p.WifiP2pManager) $r9;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager> = $r10;

     label1:
        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        if $r3 != null goto label2;

        r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        if r1 == null goto label2;

        $r5 = r0.<com.android.server.display.WifiDisplayController: android.content.Context mContext>;

        $r4 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r6 = virtualinvoke $r4.<android.os.Handler: android.os.Looper getLooper()>();

        $r7 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager$Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>($r5, $r6, null);

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel> = $r7;

     label2:
        return;
    }

    private void retryConnection()
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1, $r2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r1 = new android.net.wifi.p2p.WifiP2pDevice;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        specialinvoke $r1.<android.net.wifi.p2p.WifiP2pDevice: void <init>(android.net.wifi.p2p.WifiP2pDevice)>($r2);

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice> = $r1;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateConnection()>();

        return;
    }

    private void stopPeerDiscovery()
    {
        com.android.server.display.WifiDisplayController r0;
        com.android.server.display.WifiDisplayController$6 $r1;
        android.net.wifi.p2p.WifiP2pManager $r2;
        android.net.wifi.p2p.WifiP2pManager$Channel $r3;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r1 = new com.android.server.display.WifiDisplayController$6;

        specialinvoke $r1.<com.android.server.display.WifiDisplayController$6: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r2.<android.net.wifi.p2p.WifiP2pManager: void stopPeerDiscovery(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r3, $r1);

        return;
    }

    private void tryDiscoverPeers()
    {
        com.android.server.display.WifiDisplayController r0;
        com.android.server.display.WifiDisplayController$5 $r1;
        android.net.wifi.p2p.WifiP2pManager $r2;
        android.net.wifi.p2p.WifiP2pManager$Channel $r3;
        java.lang.Runnable $r4;
        android.os.Handler $r5;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r1 = new com.android.server.display.WifiDisplayController$5;

        specialinvoke $r1.<com.android.server.display.WifiDisplayController$5: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r2.<android.net.wifi.p2p.WifiP2pManager: void discoverPeers(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r3, $r1);

        $r5 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r4 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mDiscoverPeers>;

        virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, 10000L);

        return;
    }

    private void unadvertiseDisplay()
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void advertiseDisplay(android.hardware.display.WifiDisplay,android.view.Surface,int,int,int)>(null, null, 0, 0, 0);

        return;
    }

    private void updateConnection()
    {
        com.android.server.display.WifiDisplayController r0;
        android.media.RemoteDisplay $r1, $r6, $r27, $r86;
        android.net.wifi.p2p.WifiP2pDevice $r2, $r3, $r4, $r5, $r9, $r19, $r32, $r36, $r39, $r43, $r46, $r47, $r51, $r54, $r58, $r64, $r67, $r71, $r75, $r76, $r82, $r91, r92, r94, r95, r97, $r101, $r103, r105, r111;
        android.net.wifi.p2p.WifiP2pGroup $r7, $r48;
        android.net.wifi.p2p.WifiP2pManager $r8, $r62, $r73, $r89, $r106;
        java.lang.StringBuilder $r10, $r15, $r30, $r37, $r52, $r65, $r77;
        java.lang.String $r11, $r20, $r22, $r26, $r33, $r35, $r40, $r42, $r55, $r57, $r68, $r70, $r79, $r83, $r85, $r102, r113;
        com.android.server.display.WifiDisplayController$14 $r23;
        android.content.Context $r24;
        android.os.Handler $r25, $r29, $r60, $r88;
        boolean $z0, $z2, $z3, $z4;
        int $i1, i8, i9;
        long $l2;
        java.lang.Runnable $r28, $r59, $r87;
        android.net.wifi.p2p.WifiP2pConfig $r44;
        android.net.wifi.WpsInfo $r45;
        com.android.server.display.WifiDisplayController$Listener $r49;
        android.hardware.display.WifiDisplaySessionInfo $r50;
        com.android.server.display.WifiDisplayController$12 $r61;
        android.net.wifi.p2p.WifiP2pManager$Channel $r63, $r74, $r107;
        com.android.server.display.WifiDisplayController$11 $r72;
        android.hardware.display.WifiDisplay $r104;
        com.android.server.display.WifiDisplayController$13 $r108;
        java.net.Inet4Address r109;
        byte b10;

        r0 := @this: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateScanState()>();

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        if $r1 == null goto label01;

        $r76 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r75 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r76 == $r75 goto label01;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopped listening for RTSP connection on ");

        $r79 = r0.<com.android.server.display.WifiDisplayController: java.lang.String mRemoteDisplayInterface>;

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from Wifi display: ");

        $r82 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r83 = $r82.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r85 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r85);

        $r86 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        virtualinvoke $r86.<android.media.RemoteDisplay: void dispose()>();

        r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay> = null;

        r0.<com.android.server.display.WifiDisplayController: java.lang.String mRemoteDisplayInterface> = null;

        r0.<com.android.server.display.WifiDisplayController: boolean mRemoteDisplayConnected> = 0;

        $r88 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r87 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mRtspTimeout>;

        virtualinvoke $r88.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r87);

        $r89 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        virtualinvoke $r89.<android.net.wifi.p2p.WifiP2pManager: void setMiracastMode(int)>(0);

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void unadvertiseDisplay()>();

     label01:
        $r91 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice>;

        if $r91 == null goto label02;

        return;

     label02:
        r92 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        if r92 == null goto label03;

        $r64 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if r92 == $r64 goto label03;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disconnecting from Wifi display: ");

        $r67 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r68 = $r67.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r70);

        $r71 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice> = $r71;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice> = null;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo> = null;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void unadvertiseDisplay()>();

        r94 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice>;

        $r73 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r74 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r72 = new com.android.server.display.WifiDisplayController$11;

        specialinvoke $r72.<com.android.server.display.WifiDisplayController$11: void <init>(com.android.server.display.WifiDisplayController,android.net.wifi.p2p.WifiP2pDevice)>(r0, r94);

        virtualinvoke $r73.<android.net.wifi.p2p.WifiP2pManager: void removeGroup(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r74, $r72);

        return;

     label03:
        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mCancelingDevice>;

        if $r2 == null goto label04;

        return;

     label04:
        r95 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        if r95 == null goto label05;

        $r51 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if r95 == $r51 goto label05;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canceling connection to Wifi display: ");

        $r54 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        $r55 = $r54.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r57);

        $r58 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mCancelingDevice> = $r58;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice> = null;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void unadvertiseDisplay()>();

        $r60 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r59 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mConnectionTimeout>;

        virtualinvoke $r60.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r59);

        r97 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mCancelingDevice>;

        $r62 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r63 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r61 = new com.android.server.display.WifiDisplayController$12;

        specialinvoke $r61.<com.android.server.display.WifiDisplayController$12: void <init>(com.android.server.display.WifiDisplayController,android.net.wifi.p2p.WifiP2pDevice)>(r0, r97);

        virtualinvoke $r62.<android.net.wifi.p2p.WifiP2pManager: void cancelConnect(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r63, $r61);

        return;

     label05:
        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r3 != null goto label07;

        $z4 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayCertMode>;

        if $z4 == 0 goto label06;

        $r49 = r0.<com.android.server.display.WifiDisplayController: com.android.server.display.WifiDisplayController$Listener mListener>;

        $r48 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo>;

        $r50 = specialinvoke r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplaySessionInfo getSessionInfo(android.net.wifi.p2p.WifiP2pGroup,int)>($r48, 0);

        interfaceinvoke $r49.<com.android.server.display.WifiDisplayController$Listener: void onDisplaySessionInfo(android.hardware.display.WifiDisplaySessionInfo)>($r50);

     label06:
        specialinvoke r0.<com.android.server.display.WifiDisplayController: void unadvertiseDisplay()>();

        return;

     label07:
        $r4 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        if $r4 != null goto label12;

        $r36 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        if $r36 != null goto label12;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to Wifi display: ");

        $r39 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        $r40 = $r39.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r42);

        $r43 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice> = $r43;

        $r44 = new android.net.wifi.p2p.WifiP2pConfig;

        specialinvoke $r44.<android.net.wifi.p2p.WifiP2pConfig: void <init>()>();

        $r45 = new android.net.wifi.WpsInfo;

        specialinvoke $r45.<android.net.wifi.WpsInfo: void <init>()>();

        i8 = r0.<com.android.server.display.WifiDisplayController: int mWifiDisplayWpsConfig>;

        if i8 == 4 goto label08;

        $r45.<android.net.wifi.WpsInfo: int setup> = i8;

        goto label11;

     label08:
        $r46 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        $z2 = virtualinvoke $r46.<android.net.wifi.p2p.WifiP2pDevice: boolean wpsPbcSupported()>();

        if $z2 == 0 goto label09;

        $r45.<android.net.wifi.WpsInfo: int setup> = 0;

        goto label11;

     label09:
        $r47 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        $z3 = virtualinvoke $r47.<android.net.wifi.p2p.WifiP2pDevice: boolean wpsDisplaySupported()>();

        if $z3 == 0 goto label10;

        $r45.<android.net.wifi.WpsInfo: int setup> = 2;

        goto label11;

     label10:
        $r45.<android.net.wifi.WpsInfo: int setup> = 1;

     label11:
        $r44.<android.net.wifi.p2p.WifiP2pConfig: android.net.wifi.WpsInfo wps> = $r45;

        $r101 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        $r102 = $r101.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r44.<android.net.wifi.p2p.WifiP2pConfig: java.lang.String deviceAddress> = $r102;

        $r44.<android.net.wifi.p2p.WifiP2pConfig: int groupOwnerIntent> = 0;

        $r103 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        $r104 = staticinvoke <com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay createWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)>($r103);

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void advertiseDisplay(android.hardware.display.WifiDisplay,android.view.Surface,int,int,int)>($r104, null, 0, 0, 0);

        r105 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        $r106 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r107 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r108 = new com.android.server.display.WifiDisplayController$13;

        specialinvoke $r108.<com.android.server.display.WifiDisplayController$13: void <init>(com.android.server.display.WifiDisplayController,android.net.wifi.p2p.WifiP2pDevice)>(r0, r105);

        virtualinvoke $r106.<android.net.wifi.p2p.WifiP2pManager: void connect(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r107, $r44, $r108);

        return;

     label12:
        $r5 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        if $r5 == null goto label16;

        $r6 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        if $r6 != null goto label16;

        $r7 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo>;

        r109 = staticinvoke <com.android.server.display.WifiDisplayController: java.net.Inet4Address getInterfaceAddress(android.net.wifi.p2p.WifiP2pGroup)>($r7);

        if r109 != null goto label13;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get local interface address for communicating with Wifi display: ");

        $r32 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r33 = $r32.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r35);

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleConnectionFailure(boolean)>(0);

        return;

     label13:
        $r8 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        virtualinvoke $r8.<android.net.wifi.p2p.WifiP2pManager: void setMiracastMode(int)>(1);

        r111 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r9 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        i9 = staticinvoke <com.android.server.display.WifiDisplayController: int getPortNumber(android.net.wifi.p2p.WifiP2pDevice)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r109.<java.net.Inet4Address: java.lang.String getHostAddress()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        r113 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.display.WifiDisplayController: java.lang.String mRemoteDisplayInterface> = r113;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Listening for RTSP connection on ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r113);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from Wifi display: ");

        $r19 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r20 = $r19.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r22);

        $r23 = new com.android.server.display.WifiDisplayController$14;

        specialinvoke $r23.<com.android.server.display.WifiDisplayController$14: void <init>(com.android.server.display.WifiDisplayController,android.net.wifi.p2p.WifiP2pDevice)>(r0, r111);

        $r25 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r24 = r0.<com.android.server.display.WifiDisplayController: android.content.Context mContext>;

        $r26 = virtualinvoke $r24.<android.content.Context: java.lang.String getOpPackageName()>();

        $r27 = staticinvoke <android.media.RemoteDisplay: android.media.RemoteDisplay listen(java.lang.String,android.media.RemoteDisplay$Listener,android.os.Handler,java.lang.String)>(r113, $r23, $r25, $r26);

        r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay> = $r27;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayCertMode>;

        if $z0 == 0 goto label14;

        b10 = 120;

        goto label15;

     label14:
        b10 = 30;

     label15:
        $r29 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r28 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mRtspTimeout>;

        $i1 = b10 * 1000;

        $l2 = (long) $i1;

        virtualinvoke $r29.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r28, $l2);

     label16:
        return;
    }

    private void updateDesiredDevice(android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        java.lang.String r1, $r3, $r5;
        android.net.wifi.p2p.WifiP2pDevice r2, $r4, $r6, r8;
        boolean $z0, $z1;
        android.hardware.display.WifiDisplay $r7, r9;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r8 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        r1 = r8.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if r2 == null goto label1;

        $r3 = r2.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        virtualinvoke $r4.<android.net.wifi.p2p.WifiP2pDevice: void update(android.net.wifi.p2p.WifiP2pDevice)>(r8);

        r9 = r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay mAdvertisedDisplay>;

        if r9 == null goto label1;

        $r5 = virtualinvoke r9.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $r6 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        $r7 = staticinvoke <com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay createWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)>($r6);

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void readvertiseDisplay(android.hardware.display.WifiDisplay)>($r7);

     label1:
        return;
    }

    private void updateScanState()
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Runnable $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mScanRequested>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        if $z1 == 0 goto label1;

        $r5 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r5 != null goto label1;

        $z2 = r0.<com.android.server.display.WifiDisplayController: boolean mDiscoverPeersInProgress>;

        if $z2 != 0 goto label3;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", "Starting Wifi display scan.");

        r0.<com.android.server.display.WifiDisplayController: boolean mDiscoverPeersInProgress> = 1;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleScanStarted()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void tryDiscoverPeers()>();

        goto label3;

     label1:
        $z3 = r0.<com.android.server.display.WifiDisplayController: boolean mDiscoverPeersInProgress>;

        if $z3 == 0 goto label3;

        $r3 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r2 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mDiscoverPeers>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if r1 == null goto label2;

        $r4 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        if r1 != $r4 goto label3;

     label2:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", "Stopping Wifi display scan.");

        r0.<com.android.server.display.WifiDisplayController: boolean mDiscoverPeersInProgress> = 0;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void stopPeerDiscovery()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleScanFinished()>();

     label3:
        return;
    }

    private void updateSettings()
    {
        com.android.server.display.WifiDisplayController r0;
        android.content.ContentResolver r1;
        android.content.Context $r2;
        int $i0, $i1, $i2;
        boolean z1, z2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "wifi_display_on", 0);

        if $i0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayOnSetting> = z1;

        z2 = 0;

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "wifi_display_certification_on", 0);

        if $i1 == 0 goto label3;

        z2 = 1;

     label3:
        r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayCertMode> = z2;

        r0.<com.android.server.display.WifiDisplayController: int mWifiDisplayWpsConfig> = 4;

        if z2 == 0 goto label4;

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "wifi_display_wps_config", 4);

        r0.<com.android.server.display.WifiDisplayController: int mWifiDisplayWpsConfig> = $i2;

     label4:
        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateWfdEnableState()>();

        return;
    }

    private void updateWfdEnableState()
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.net.wifi.p2p.WifiP2pWfdInfo $r1, $r5;
        com.android.server.display.WifiDisplayController$3 $r2;
        android.net.wifi.p2p.WifiP2pManager $r3, $r7;
        android.net.wifi.p2p.WifiP2pManager$Channel $r4, $r8;
        com.android.server.display.WifiDisplayController$2 $r6;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayOnSetting>;

        if $z0 == 0 goto label1;

        $z3 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiP2pEnabled>;

        if $z3 == 0 goto label1;

        $z4 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        if $z4 != 0 goto label4;

        $z5 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling>;

        if $z5 != 0 goto label4;

        r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling> = 1;

        $r5 = new android.net.wifi.p2p.WifiP2pWfdInfo;

        specialinvoke $r5.<android.net.wifi.p2p.WifiP2pWfdInfo: void <init>()>();

        virtualinvoke $r5.<android.net.wifi.p2p.WifiP2pWfdInfo: void setEnabled(boolean)>(1);

        virtualinvoke $r5.<android.net.wifi.p2p.WifiP2pWfdInfo: boolean setDeviceType(int)>(0);

        virtualinvoke $r5.<android.net.wifi.p2p.WifiP2pWfdInfo: void setSessionAvailable(boolean)>(1);

        virtualinvoke $r5.<android.net.wifi.p2p.WifiP2pWfdInfo: void setControlPort(int)>(7236);

        virtualinvoke $r5.<android.net.wifi.p2p.WifiP2pWfdInfo: void setMaxThroughput(int)>(50);

        $r7 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r8 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r6 = new com.android.server.display.WifiDisplayController$2;

        specialinvoke $r6.<com.android.server.display.WifiDisplayController$2: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r7.<android.net.wifi.p2p.WifiP2pManager: void setWfdInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pWfdInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r8, $r5, $r6);

        goto label4;

     label1:
        $z1 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        if $z1 != 0 goto label2;

        $z2 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling>;

        if $z2 == 0 goto label3;

     label2:
        $r1 = new android.net.wifi.p2p.WifiP2pWfdInfo;

        specialinvoke $r1.<android.net.wifi.p2p.WifiP2pWfdInfo: void <init>()>();

        virtualinvoke $r1.<android.net.wifi.p2p.WifiP2pWfdInfo: void setEnabled(boolean)>(0);

        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r4 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r2 = new com.android.server.display.WifiDisplayController$3;

        specialinvoke $r2.<com.android.server.display.WifiDisplayController$3: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r3.<android.net.wifi.p2p.WifiP2pManager: void setWfdInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pWfdInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r4, $r1, $r2);

     label3:
        r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling> = 0;

        r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled> = 0;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void reportFeatureState()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateScanState()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void disconnect()>();

     label4:
        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.display.WifiDisplayController r0;
        java.io.PrintWriter r1;
        java.util.Iterator r2;
        java.lang.StringBuilder $r4, $r8, $r12, $r16, $r20, $r25, $r29, $r33, $r39, $r45, $r51, $r57, $r63, $r67, $r72, $r77, $r81, $r86, $r91, $r95, $r99, $r103, $r110;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String $r7, $r11, $r15, $r19, $r24, $r28, $r32, $r36, $r38, $r42, $r44, $r48, $r50, $r54, $r56, $r60, $r62, $r66, $r71, $r74, $r76, $r80, $r85, $r90, $r94, $r98, $r102, $r107, $r112, $r114, r115;
        android.net.NetworkInfo $r22;
        android.net.wifi.p2p.WifiP2pDevice $r35, $r41, $r47, $r53, $r59, r138;
        int $i0, $i1, $i2, $i3, $i4;
        android.media.RemoteDisplay $r69;
        android.hardware.display.WifiDisplay $r83;
        android.view.Surface $r88;
        java.util.ArrayList $r105, $r108;
        java.lang.Object $r109;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: java.io.PrintWriter;

        r115 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWifiDisplayOnSetting=");

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayOnSetting>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWifiP2pEnabled=");

        $z1 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiP2pEnabled>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWfdEnabled=");

        $z2 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWfdEnabling=");

        $z3 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mNetworkInfo=");

        $r22 = r0.<com.android.server.display.WifiDisplayController: android.net.NetworkInfo mNetworkInfo>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mScanRequested=");

        $z4 = r0.<com.android.server.display.WifiDisplayController: boolean mScanRequested>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDiscoverPeersInProgress=");

        $z5 = r0.<com.android.server.display.WifiDisplayController: boolean mDiscoverPeersInProgress>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDesiredDevice=");

        $r35 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        $r36 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)>($r35);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r38);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mConnectingDisplay=");

        $r41 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        $r42 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)>($r41);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDisconnectingDisplay=");

        $r47 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice>;

        $r48 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)>($r47);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r50);

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCancelingDisplay=");

        $r53 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mCancelingDevice>;

        $r54 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)>($r53);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r56);

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mConnectedDevice=");

        $r59 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r60 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)>($r59);

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r62);

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mConnectionRetriesLeft=");

        $i0 = r0.<com.android.server.display.WifiDisplayController: int mConnectionRetriesLeft>;

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r66);

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRemoteDisplay=");

        $r69 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r69);

        $r71 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r71);

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRemoteDisplayInterface=");

        $r74 = r0.<com.android.server.display.WifiDisplayController: java.lang.String mRemoteDisplayInterface>;

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r76);

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRemoteDisplayConnected=");

        $z6 = r0.<com.android.server.display.WifiDisplayController: boolean mRemoteDisplayConnected>;

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r80 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r80);

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAdvertisedDisplay=");

        $r83 = r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay mAdvertisedDisplay>;

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r83);

        $r85 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r85);

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAdvertisedDisplaySurface=");

        $r88 = r0.<com.android.server.display.WifiDisplayController: android.view.Surface mAdvertisedDisplaySurface>;

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r88);

        $r90 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r90);

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAdvertisedDisplayWidth=");

        $i1 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayWidth>;

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r94 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r94);

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAdvertisedDisplayHeight=");

        $i2 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayHeight>;

        virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r98 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r98);

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAdvertisedDisplayFlags=");

        $i3 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayFlags>;

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r102 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r102);

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAvailableWifiDisplayPeers: size=");

        $r105 = r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers>;

        $i4 = virtualinvoke $r105.<java.util.ArrayList: int size()>();

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r107 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r107);

        $r108 = r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers>;

        r2 = virtualinvoke $r108.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z7 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label2;

        $r109 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r138 = (android.net.wifi.p2p.WifiP2pDevice) $r109;

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r112 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)>(r138);

        virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112);

        $r114 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r114);

        goto label1;

     label2:
        return;
    }

    public void requestConnect(java.lang.String)
    {
        com.android.server.display.WifiDisplayController r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        android.net.wifi.p2p.WifiP2pDevice r3;
        java.util.ArrayList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.wifi.p2p.WifiP2pDevice) $r5;

        $r6 = r3.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void connect(android.net.wifi.p2p.WifiP2pDevice)>(r3);

     label2:
        goto label1;

     label3:
        return;
    }

    public void requestDisconnect()
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void disconnect()>();

        return;
    }

    public void requestPause()
    {
        com.android.server.display.WifiDisplayController r0;
        android.media.RemoteDisplay r1;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.media.RemoteDisplay: void pause()>();

     label1:
        return;
    }

    public void requestResume()
    {
        com.android.server.display.WifiDisplayController r0;
        android.media.RemoteDisplay r1;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.media.RemoteDisplay: void resume()>();

     label1:
        return;
    }

    public void requestStartScan()
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mScanRequested>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.display.WifiDisplayController: boolean mScanRequested> = 1;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateScanState()>();

     label1:
        return;
    }

    public void requestStopScan()
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mScanRequested>;

        if $z0 == 0 goto label1;

        r0.<com.android.server.display.WifiDisplayController: boolean mScanRequested> = 0;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateScanState()>();

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.display.WifiDisplayController: java.lang.String TAG> = "WifiDisplayController";

        <com.android.server.display.WifiDisplayController: int RTSP_TIMEOUT_SECONDS_CERT_MODE> = 120;

        <com.android.server.display.WifiDisplayController: int RTSP_TIMEOUT_SECONDS> = 30;

        <com.android.server.display.WifiDisplayController: int MAX_THROUGHPUT> = 50;

        <com.android.server.display.WifiDisplayController: int DISCOVER_PEERS_INTERVAL_MILLIS> = 10000;

        <com.android.server.display.WifiDisplayController: int DEFAULT_CONTROL_PORT> = 7236;

        <com.android.server.display.WifiDisplayController: boolean DEBUG> = 0;

        <com.android.server.display.WifiDisplayController: int CONNECT_RETRY_DELAY_MILLIS> = 500;

        <com.android.server.display.WifiDisplayController: int CONNECT_MAX_RETRIES> = 3;

        <com.android.server.display.WifiDisplayController: int CONNECTION_TIMEOUT_SECONDS> = 30;

        return;
    }
}
