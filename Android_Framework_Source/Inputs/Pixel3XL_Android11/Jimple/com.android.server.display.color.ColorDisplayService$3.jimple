class com.android.server.display.color.ColorDisplayService$3 extends android.animation.AnimatorListenerAdapter
{
    private boolean mIsCancelled;
    final com.android.server.display.color.ColorDisplayService this$0;
    final com.android.server.display.color.DisplayTransformManager val$dtm;
    final com.android.server.display.color.TintController val$tintController;
    final float[] val$to;

    void <init>(com.android.server.display.color.ColorDisplayService, com.android.server.display.color.TintController, float[], com.android.server.display.color.DisplayTransformManager)
    {
        com.android.server.display.color.ColorDisplayService$3 r0;
        com.android.server.display.color.ColorDisplayService r1;
        com.android.server.display.color.TintController r2;
        float[] r3;
        com.android.server.display.color.DisplayTransformManager r4;

        r0 := @this: com.android.server.display.color.ColorDisplayService$3;

        r1 := @parameter0: com.android.server.display.color.ColorDisplayService;

        r2 := @parameter1: com.android.server.display.color.TintController;

        r3 := @parameter2: float[];

        r4 := @parameter3: com.android.server.display.color.DisplayTransformManager;

        r0.<com.android.server.display.color.ColorDisplayService$3: com.android.server.display.color.ColorDisplayService this$0> = r1;

        r0.<com.android.server.display.color.ColorDisplayService$3: com.android.server.display.color.TintController val$tintController> = r2;

        r0.<com.android.server.display.color.ColorDisplayService$3: float[] val$to> = r3;

        r0.<com.android.server.display.color.ColorDisplayService$3: com.android.server.display.color.DisplayTransformManager val$dtm> = r4;

        specialinvoke r0.<android.animation.AnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationCancel(android.animation.Animator)
    {
        com.android.server.display.color.ColorDisplayService$3 r0;
        android.animation.Animator r1;

        r0 := @this: com.android.server.display.color.ColorDisplayService$3;

        r1 := @parameter0: android.animation.Animator;

        r0.<com.android.server.display.color.ColorDisplayService$3: boolean mIsCancelled> = 1;

        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        com.android.server.display.color.ColorDisplayService$3 r0;
        com.android.server.display.color.ColorDisplayService$TintValueAnimator r1;
        java.lang.StringBuilder $r2;
        com.android.server.display.color.TintController $r3, $r22, $r23;
        java.lang.Class $r4;
        java.lang.String $r5, $r11, $r15, $r19, $r21;
        boolean $z0, $z1;
        float[] $r10, $r14, $r18, $r25;
        com.android.server.display.color.DisplayTransformManager $r24;
        int $i1;
        android.animation.Animator r26;

        r0 := @this: com.android.server.display.color.ColorDisplayService$3;

        r26 := @parameter0: android.animation.Animator;

        r1 = (com.android.server.display.color.ColorDisplayService$TintValueAnimator) r26;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.server.display.color.ColorDisplayService$3: com.android.server.display.color.TintController val$tintController>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Animation cancelled: ");

        $z0 = r0.<com.android.server.display.color.ColorDisplayService$3: boolean mIsCancelled>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to matrix: ");

        $r10 = r0.<com.android.server.display.color.ColorDisplayService$3: float[] val$to>;

        $r11 = staticinvoke <com.android.server.display.color.TintController: java.lang.String matrixToString(float[],int)>($r10, 16);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" min matrix coefficients: ");

        $r14 = virtualinvoke r1.<com.android.server.display.color.ColorDisplayService$TintValueAnimator: float[] getMin()>();

        $r15 = staticinvoke <com.android.server.display.color.TintController: java.lang.String matrixToString(float[],int)>($r14, 16);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max matrix coefficients: ");

        $r18 = virtualinvoke r1.<com.android.server.display.color.ColorDisplayService$TintValueAnimator: float[] getMax()>();

        $r19 = staticinvoke <com.android.server.display.color.TintController: java.lang.String matrixToString(float[],int)>($r18, 16);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ColorDisplayService", $r21);

        $z1 = r0.<com.android.server.display.color.ColorDisplayService$3: boolean mIsCancelled>;

        if $z1 != 0 goto label1;

        $r24 = r0.<com.android.server.display.color.ColorDisplayService$3: com.android.server.display.color.DisplayTransformManager val$dtm>;

        $r23 = r0.<com.android.server.display.color.ColorDisplayService$3: com.android.server.display.color.TintController val$tintController>;

        $i1 = virtualinvoke $r23.<com.android.server.display.color.TintController: int getLevel()>();

        $r25 = r0.<com.android.server.display.color.ColorDisplayService$3: float[] val$to>;

        virtualinvoke $r24.<com.android.server.display.color.DisplayTransformManager: void setColorMatrix(int,float[])>($i1, $r25);

     label1:
        $r22 = r0.<com.android.server.display.color.ColorDisplayService$3: com.android.server.display.color.TintController val$tintController>;

        virtualinvoke $r22.<com.android.server.display.color.TintController: void setAnimator(com.android.server.display.color.ColorDisplayService$TintValueAnimator)>(null);

        return;
    }
}
