final class com.android.server.display.color.ColorDisplayService$BinderService extends android.hardware.display.IColorDisplayManager$Stub
{
    final com.android.server.display.color.ColorDisplayService this$0;

    void <init>(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        com.android.server.display.color.ColorDisplayService r1;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        r1 := @parameter0: com.android.server.display.color.ColorDisplayService;

        r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0> = r1;

        specialinvoke r0.<android.hardware.display.IColorDisplayManager$Stub: void <init>()>();

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        long l0;
        com.android.server.display.color.ColorDisplayService $r3, $r5;
        android.content.Context $r4;
        boolean $z0;
        java.lang.Throwable $r6;
        java.io.FileDescriptor r7;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        r7 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r4 = virtualinvoke $r3.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "ColorDisplayService", r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r5 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        staticinvoke <com.android.server.display.color.ColorDisplayService: void access$4000(com.android.server.display.color.ColorDisplayService,java.io.PrintWriter)>($r5, r1);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public int getColorMode()
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        int i1;
        com.android.server.display.color.ColorDisplayService $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        i1 = staticinvoke <com.android.server.display.color.ColorDisplayService: int access$1500(com.android.server.display.color.ColorDisplayService)>($r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getNightDisplayAutoMode()
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        int i1;
        com.android.server.display.color.ColorDisplayService $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS", "Permission required to get night display auto mode");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        i1 = staticinvoke <com.android.server.display.color.ColorDisplayService: int access$900(com.android.server.display.color.ColorDisplayService)>($r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getNightDisplayAutoModeRaw()
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        int i1;
        com.android.server.display.color.ColorDisplayService $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        i1 = staticinvoke <com.android.server.display.color.ColorDisplayService: int access$3600(com.android.server.display.color.ColorDisplayService)>($r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getNightDisplayColorTemperature()
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        int i1;
        com.android.server.display.color.ColorDisplayService $r2;
        com.android.server.display.color.ColorDisplayService$NightDisplayTintController $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r3 = staticinvoke <com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController access$800(com.android.server.display.color.ColorDisplayService)>($r2);

        i1 = virtualinvoke $r3.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: int getColorTemperature()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.hardware.display.Time getNightDisplayCustomEndTime()
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        com.android.server.display.color.ColorDisplayService $r1;
        java.lang.Throwable $r2;
        android.hardware.display.Time r3;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        r3 = staticinvoke <com.android.server.display.color.ColorDisplayService: android.hardware.display.Time access$1300(com.android.server.display.color.ColorDisplayService)>($r1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r3;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.hardware.display.Time getNightDisplayCustomStartTime()
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        com.android.server.display.color.ColorDisplayService $r1;
        java.lang.Throwable $r2;
        android.hardware.display.Time r3;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        r3 = staticinvoke <com.android.server.display.color.ColorDisplayService: android.hardware.display.Time access$1100(com.android.server.display.color.ColorDisplayService)>($r1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r3;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getTransformCapabilities()
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        int i1;
        com.android.server.display.color.ColorDisplayService $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS", "Permission required to query transform capabilities");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        i1 = staticinvoke <com.android.server.display.color.ColorDisplayService: int access$3400(com.android.server.display.color.ColorDisplayService)>($r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isDeviceColorManaged()
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        boolean z0;
        com.android.server.display.color.ColorDisplayService $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        z0 = staticinvoke <com.android.server.display.color.ColorDisplayService: boolean access$3200(com.android.server.display.color.ColorDisplayService)>($r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isDisplayWhiteBalanceEnabled()
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        boolean z0;
        com.android.server.display.color.ColorDisplayService $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        z0 = staticinvoke <com.android.server.display.color.ColorDisplayService: boolean access$2700(com.android.server.display.color.ColorDisplayService)>($r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isNightDisplayActivated()
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        boolean z0;
        com.android.server.display.color.ColorDisplayService $r2;
        com.android.server.display.color.ColorDisplayService$NightDisplayTintController $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r3 = staticinvoke <com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController access$800(com.android.server.display.color.ColorDisplayService)>($r2);

        z0 = virtualinvoke $r3.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: boolean isActivated()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isSaturationActivated()
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        com.android.server.display.color.ColorDisplayService $r2, $r4, $r6;
        android.content.Context $r3;
        com.android.server.display.color.TintController $r5, $r7;
        boolean $z0, z1, z2;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS", "Permission required to get display saturation level");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r5 = staticinvoke <com.android.server.display.color.ColorDisplayService: com.android.server.display.color.TintController access$2900(com.android.server.display.color.ColorDisplayService)>($r4);

        $z0 = virtualinvoke $r5.<com.android.server.display.color.TintController: boolean isActivatedStateNotSet()>();

        if $z0 != 0 goto label3;

        $r6 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r7 = staticinvoke <com.android.server.display.color.ColorDisplayService: com.android.server.display.color.TintController access$2900(com.android.server.display.color.ColorDisplayService)>($r6);

        z1 = virtualinvoke $r7.<com.android.server.display.color.TintController: boolean isActivated()>();

     label2:
        if z1 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z2;

     label5:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public boolean setAppSaturationLevel(java.lang.String, int)
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        int i0, $i2;
        java.lang.String r1, r8;
        long l1;
        boolean z0;
        com.android.server.display.color.ColorDisplayService $r2, $r6;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.content.pm.PackageManagerInternal $r5;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS", "Permission required to set display saturation level");

        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r5 = (android.content.pm.PackageManagerInternal) $r4;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r1 = virtualinvoke $r5.<android.content.pm.PackageManagerInternal: java.lang.String getNameForUid(int)>($i2);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r6 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        z0 = staticinvoke <com.android.server.display.color.ColorDisplayService: boolean access$3300(com.android.server.display.color.ColorDisplayService,java.lang.String,java.lang.String,int)>($r6, r1, r8, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setColorMode(int)
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        int i0;
        long l1;
        com.android.server.display.color.ColorDisplayService $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS", "Permission required to set display color mode");

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        staticinvoke <com.android.server.display.color.ColorDisplayService: void access$3100(com.android.server.display.color.ColorDisplayService,int)>($r4, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setDisplayWhiteBalanceEnabled(boolean)
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        com.android.server.display.color.ColorDisplayService $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;
        boolean z0, z1;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS", "Permission required to set night display activated");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        z1 = staticinvoke <com.android.server.display.color.ColorDisplayService: boolean access$3900(com.android.server.display.color.ColorDisplayService,boolean)>($r4, z0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z1;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setNightDisplayActivated(boolean)
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        boolean z0;
        long l0;
        com.android.server.display.color.ColorDisplayService $r2, $r4;
        android.content.Context $r3;
        com.android.server.display.color.ColorDisplayService$NightDisplayTintController $r5;
        java.lang.Boolean $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS", "Permission required to set night display activated");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r5 = staticinvoke <com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController access$800(com.android.server.display.color.ColorDisplayService)>($r4);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r5.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: void setActivated(java.lang.Boolean)>($r6);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setNightDisplayAutoMode(int)
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        int i0;
        long l1;
        boolean z0;
        com.android.server.display.color.ColorDisplayService $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS", "Permission required to set night display auto mode");

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        z0 = staticinvoke <com.android.server.display.color.ColorDisplayService: boolean access$3500(com.android.server.display.color.ColorDisplayService,int)>($r4, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setNightDisplayColorTemperature(int)
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        int i0;
        long l1;
        boolean z0;
        com.android.server.display.color.ColorDisplayService $r2, $r4;
        android.content.Context $r3;
        com.android.server.display.color.ColorDisplayService$NightDisplayTintController $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS", "Permission required to set night display temperature");

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r5 = staticinvoke <com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController access$800(com.android.server.display.color.ColorDisplayService)>($r4);

        z0 = virtualinvoke $r5.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: boolean setColorTemperature(int)>(i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setNightDisplayCustomEndTime(android.hardware.display.Time)
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        boolean z0;
        com.android.server.display.color.ColorDisplayService $r1, $r3;
        android.content.Context $r2;
        java.lang.Throwable $r4;
        android.hardware.display.Time r5;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        r5 := @parameter0: android.hardware.display.Time;

        $r1 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS", "Permission required to set night display custom end time");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        z0 = staticinvoke <com.android.server.display.color.ColorDisplayService: boolean access$3800(com.android.server.display.color.ColorDisplayService,android.hardware.display.Time)>($r3, r5);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setNightDisplayCustomStartTime(android.hardware.display.Time)
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        long l0;
        boolean z0;
        com.android.server.display.color.ColorDisplayService $r1, $r3;
        android.content.Context $r2;
        java.lang.Throwable $r4;
        android.hardware.display.Time r5;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        r5 := @parameter0: android.hardware.display.Time;

        $r1 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS", "Permission required to set night display custom start time");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        z0 = staticinvoke <com.android.server.display.color.ColorDisplayService: boolean access$3700(com.android.server.display.color.ColorDisplayService,android.hardware.display.Time)>($r3, r5);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setSaturationLevel(int)
    {
        com.android.server.display.color.ColorDisplayService$BinderService r0;
        int i0, $i2, i3;
        long l1;
        com.android.server.display.color.ColorDisplayService $r1, $r3, $r5, $r7;
        android.content.Context $r2, $r4;
        android.os.Handler $r6, $r8;
        java.lang.SecurityException $r9;
        java.lang.Throwable $r10;
        boolean z1, z2;
        android.os.Message r11;

        r0 := @this: com.android.server.display.color.ColorDisplayService$BinderService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        i3 = virtualinvoke $r2.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS");

        z1 = 0;

        if i3 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        $r3 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r4 = virtualinvoke $r3.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $i2 = virtualinvoke $r4.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.CONTROL_DISPLAY_SATURATION");

        if $i2 != 0 goto label3;

        z1 = 1;

     label3:
        if z2 != 0 goto label5;

        if z1 == 0 goto label4;

        goto label5;

     label4:
        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>("Permission required to set display saturation level");

        throw $r9;

     label5:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label6:
        $r5 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r6 = staticinvoke <com.android.server.display.color.ColorDisplayService: android.os.Handler access$2400(com.android.server.display.color.ColorDisplayService)>($r5);

        r11 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        r11.<android.os.Message: int arg1> = i0;

        $r7 = r0.<com.android.server.display.color.ColorDisplayService$BinderService: com.android.server.display.color.ColorDisplayService this$0>;

        $r8 = staticinvoke <com.android.server.display.color.ColorDisplayService: android.os.Handler access$2400(com.android.server.display.color.ColorDisplayService)>($r7);

        virtualinvoke $r8.<android.os.Handler: boolean sendMessage(android.os.Message)>(r11);

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label8:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r10;

        catch java.lang.Throwable from label6 to label7 with label8;
    }
}
