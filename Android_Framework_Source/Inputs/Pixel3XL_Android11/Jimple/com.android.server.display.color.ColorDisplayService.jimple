public final class com.android.server.display.color.ColorDisplayService extends com.android.server.SystemService
{
    private static final com.android.server.display.color.ColorDisplayService$ColorMatrixEvaluator COLOR_MATRIX_EVALUATOR;
    private static final float[] MATRIX_GRAYSCALE;
    static final float[] MATRIX_IDENTITY;
    private static final float[] MATRIX_INVERT_COLOR;
    private static final int MSG_APPLY_DISPLAY_WHITE_BALANCE;
    private static final int MSG_APPLY_GLOBAL_SATURATION;
    private static final int MSG_APPLY_NIGHT_DISPLAY_ANIMATED;
    private static final int MSG_APPLY_NIGHT_DISPLAY_IMMEDIATE;
    private static final int MSG_SET_UP;
    private static final int MSG_USER_CHANGED;
    private static final int NOT_SET;
    static final java.lang.String TAG;
    private static final long TRANSITION_DURATION;
    private final com.android.server.display.color.AppSaturationController mAppSaturationController;
    private boolean mBootCompleted;
    private android.util.SparseIntArray mColorModeCompositionColorSpaces;
    private android.database.ContentObserver mContentObserver;
    private int mCurrentUser;
    private com.android.server.display.color.ColorDisplayService$DisplayWhiteBalanceListener mDisplayWhiteBalanceListener;
    final com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController;
    private final com.android.server.display.color.TintController mGlobalSaturationTintController;
    private final android.os.Handler mHandler;
    private com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode mNightDisplayAutoMode;
    private final com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController;
    private android.database.ContentObserver mUserSetupObserver;

    static void <clinit>()
    {
        float[] r0, $r2, $r3;
        com.android.server.display.color.ColorDisplayService$ColorMatrixEvaluator $r1;

        <com.android.server.display.color.ColorDisplayService: long TRANSITION_DURATION> = 3000L;

        <com.android.server.display.color.ColorDisplayService: java.lang.String TAG> = "ColorDisplayService";

        <com.android.server.display.color.ColorDisplayService: int NOT_SET> = -1;

        <com.android.server.display.color.ColorDisplayService: int MSG_USER_CHANGED> = 0;

        <com.android.server.display.color.ColorDisplayService: int MSG_SET_UP> = 1;

        <com.android.server.display.color.ColorDisplayService: int MSG_APPLY_NIGHT_DISPLAY_IMMEDIATE> = 2;

        <com.android.server.display.color.ColorDisplayService: int MSG_APPLY_NIGHT_DISPLAY_ANIMATED> = 3;

        <com.android.server.display.color.ColorDisplayService: int MSG_APPLY_GLOBAL_SATURATION> = 4;

        <com.android.server.display.color.ColorDisplayService: int MSG_APPLY_DISPLAY_WHITE_BALANCE> = 5;

        r0 = newarray (float)[16];

        <com.android.server.display.color.ColorDisplayService: float[] MATRIX_IDENTITY> = r0;

        staticinvoke <android.opengl.Matrix: void setIdentityM(float[],int)>(r0, 0);

        $r1 = new com.android.server.display.color.ColorDisplayService$ColorMatrixEvaluator;

        specialinvoke $r1.<com.android.server.display.color.ColorDisplayService$ColorMatrixEvaluator: void <init>(com.android.server.display.color.ColorDisplayService$1)>(null);

        <com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$ColorMatrixEvaluator COLOR_MATRIX_EVALUATOR> = $r1;

        $r2 = newarray (float)[16];

        $r2[0] = 0.2126F;

        $r2[1] = 0.2126F;

        $r2[2] = 0.2126F;

        $r2[3] = 0.0F;

        $r2[4] = 0.7152F;

        $r2[5] = 0.7152F;

        $r2[6] = 0.7152F;

        $r2[7] = 0.0F;

        $r2[8] = 0.0722F;

        $r2[9] = 0.0722F;

        $r2[10] = 0.0722F;

        $r2[11] = 0.0F;

        $r2[12] = 0.0F;

        $r2[13] = 0.0F;

        $r2[14] = 0.0F;

        $r2[15] = 1.0F;

        <com.android.server.display.color.ColorDisplayService: float[] MATRIX_GRAYSCALE> = $r2;

        $r3 = newarray (float)[16];

        $r3[0] = 0.402F;

        $r3[1] = -0.598F;

        $r3[2] = -0.599F;

        $r3[3] = 0.0F;

        $r3[4] = -1.174F;

        $r3[5] = -0.174F;

        $r3[6] = -1.175F;

        $r3[7] = 0.0F;

        $r3[8] = -0.228F;

        $r3[9] = -0.228F;

        $r3[10] = 0.772F;

        $r3[11] = 0.0F;

        $r3[12] = 1.0F;

        $r3[13] = 1.0F;

        $r3[14] = 1.0F;

        $r3[15] = 1.0F;

        <com.android.server.display.color.ColorDisplayService: float[] MATRIX_INVERT_COLOR> = $r3;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.content.Context r1;
        com.android.server.display.color.ColorDisplayService$NightDisplayTintController $r2;
        com.android.server.display.color.DisplayWhiteBalanceTintController $r3;
        com.android.server.display.color.GlobalSaturationTintController $r4;
        com.android.server.display.color.AppSaturationController $r5;
        com.android.server.display.color.ColorDisplayService$TintHandler $r6;
        com.android.server.DisplayThread $r7;
        android.os.Looper $r8;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r2 = new com.android.server.display.color.ColorDisplayService$NightDisplayTintController;

        specialinvoke $r2.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: void <init>(com.android.server.display.color.ColorDisplayService,com.android.server.display.color.ColorDisplayService$1)>(r0, null);

        r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController> = $r2;

        $r3 = new com.android.server.display.color.DisplayWhiteBalanceTintController;

        specialinvoke $r3.<com.android.server.display.color.DisplayWhiteBalanceTintController: void <init>()>();

        r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController> = $r3;

        $r4 = new com.android.server.display.color.GlobalSaturationTintController;

        specialinvoke $r4.<com.android.server.display.color.GlobalSaturationTintController: void <init>()>();

        r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.TintController mGlobalSaturationTintController> = $r4;

        $r5 = new com.android.server.display.color.AppSaturationController;

        specialinvoke $r5.<com.android.server.display.color.AppSaturationController: void <init>()>();

        r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.AppSaturationController mAppSaturationController> = $r5;

        r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser> = -10000;

        r0.<com.android.server.display.color.ColorDisplayService: android.util.SparseIntArray mColorModeCompositionColorSpaces> = null;

        $r6 = new com.android.server.display.color.ColorDisplayService$TintHandler;

        $r7 = staticinvoke <com.android.server.DisplayThread: com.android.server.DisplayThread get()>();

        $r8 = virtualinvoke $r7.<com.android.server.DisplayThread: android.os.Looper getLooper()>();

        specialinvoke $r6.<com.android.server.display.color.ColorDisplayService$TintHandler: void <init>(com.android.server.display.color.ColorDisplayService,android.os.Looper,com.android.server.display.color.ColorDisplayService$1)>(r0, $r8, null);

        r0.<com.android.server.display.color.ColorDisplayService: android.os.Handler mHandler> = $r6;

        return;
    }

    static void access$1000(com.android.server.display.color.ColorDisplayService, int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void onNightDisplayAutoModeChanged(int)>(i0);

        return;
    }

    static android.hardware.display.Time access$1100(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.hardware.display.Time $r1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $r1 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: android.hardware.display.Time getNightDisplayCustomStartTimeInternal()>();

        return $r1;
    }

    static void access$1200(com.android.server.display.color.ColorDisplayService, java.time.LocalTime)
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.time.LocalTime r1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter1: java.time.LocalTime;

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void onNightDisplayCustomStartTimeChanged(java.time.LocalTime)>(r1);

        return;
    }

    static android.hardware.display.Time access$1300(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.hardware.display.Time $r1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $r1 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: android.hardware.display.Time getNightDisplayCustomEndTimeInternal()>();

        return $r1;
    }

    static void access$1400(com.android.server.display.color.ColorDisplayService, java.time.LocalTime)
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.time.LocalTime r1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter1: java.time.LocalTime;

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void onNightDisplayCustomEndTimeChanged(java.time.LocalTime)>(r1);

        return;
    }

    static int access$1500(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int $i0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $i0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: int getColorModeInternal()>();

        return $i0;
    }

    static void access$1600(com.android.server.display.color.ColorDisplayService, int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void onDisplayColorModeChanged(int)>(i0);

        return;
    }

    static void access$1700(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void onAccessibilityInversionChanged()>();

        return;
    }

    static void access$1800(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void onAccessibilityActivated()>();

        return;
    }

    static void access$1900(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void onAccessibilityDaltonizerChanged()>();

        return;
    }

    static java.time.LocalDateTime access$2200(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.time.LocalDateTime $r1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $r1 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: java.time.LocalDateTime getNightDisplayLastActivatedTimeSetting()>();

        return $r1;
    }

    static java.lang.Object access$2300(com.android.server.display.color.ColorDisplayService, java.lang.Class)
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.lang.Class r1;
        java.lang.Object $r2;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: java.lang.Object getLocalService(java.lang.Class)>(r1);

        return $r2;
    }

    static android.os.Handler access$2400(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $r1 = r0.<com.android.server.display.color.ColorDisplayService: android.os.Handler mHandler>;

        return $r1;
    }

    static com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode access$2500(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode $r1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $r1 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode mNightDisplayAutoMode>;

        return $r1;
    }

    static com.android.server.display.color.ColorDisplayService$DisplayWhiteBalanceListener access$2602(com.android.server.display.color.ColorDisplayService, com.android.server.display.color.ColorDisplayService$DisplayWhiteBalanceListener)
    {
        com.android.server.display.color.ColorDisplayService r0;
        com.android.server.display.color.ColorDisplayService$DisplayWhiteBalanceListener r1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter1: com.android.server.display.color.ColorDisplayService$DisplayWhiteBalanceListener;

        r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$DisplayWhiteBalanceListener mDisplayWhiteBalanceListener> = r1;

        return r1;
    }

    static boolean access$2700(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $z0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isDisplayWhiteBalanceSettingEnabled()>();

        return $z0;
    }

    static com.android.server.display.color.AppSaturationController access$2800(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        com.android.server.display.color.AppSaturationController $r1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $r1 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.AppSaturationController mAppSaturationController>;

        return $r1;
    }

    static com.android.server.display.color.TintController access$2900(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        com.android.server.display.color.TintController $r1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $r1 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.TintController mGlobalSaturationTintController>;

        return $r1;
    }

    static int access$300(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int $i0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $i0 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        return $i0;
    }

    static void access$3000(com.android.server.display.color.ColorDisplayService, com.android.server.display.color.TintController, boolean)
    {
        com.android.server.display.color.ColorDisplayService r0;
        com.android.server.display.color.TintController r1;
        boolean z0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter1: com.android.server.display.color.TintController;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void applyTint(com.android.server.display.color.TintController,boolean)>(r1, z0);

        return;
    }

    static void access$3100(com.android.server.display.color.ColorDisplayService, int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void setColorModeInternal(int)>(i0);

        return;
    }

    static boolean access$3200(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $z0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isDeviceColorManagedInternal()>();

        return $z0;
    }

    static boolean access$3300(com.android.server.display.color.ColorDisplayService, java.lang.String, java.lang.String, int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.lang.String r1, r2;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $z0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean setAppSaturationLevelInternal(java.lang.String,java.lang.String,int)>(r1, r2, i0);

        return $z0;
    }

    static int access$3400(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int $i0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $i0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: int getTransformCapabilitiesInternal()>();

        return $i0;
    }

    static boolean access$3500(com.android.server.display.color.ColorDisplayService, int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean setNightDisplayAutoModeInternal(int)>(i0);

        return $z0;
    }

    static int access$3600(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int $i0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $i0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: int getNightDisplayAutoModeRawInternal()>();

        return $i0;
    }

    static boolean access$3700(com.android.server.display.color.ColorDisplayService, android.hardware.display.Time)
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.hardware.display.Time r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter1: android.hardware.display.Time;

        $z0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean setNightDisplayCustomStartTimeInternal(android.hardware.display.Time)>(r1);

        return $z0;
    }

    static boolean access$3800(com.android.server.display.color.ColorDisplayService, android.hardware.display.Time)
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.hardware.display.Time r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter1: android.hardware.display.Time;

        $z0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean setNightDisplayCustomEndTimeInternal(android.hardware.display.Time)>(r1);

        return $z0;
    }

    static boolean access$3900(com.android.server.display.color.ColorDisplayService, boolean)
    {
        com.android.server.display.color.ColorDisplayService r0;
        boolean z0, $z1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean setDisplayWhiteBalanceSettingEnabled(boolean)>(z0);

        return $z1;
    }

    static boolean access$400(android.content.ContentResolver, int)
    {
        android.content.ContentResolver r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        i0 := @parameter1: int;

        $z0 = staticinvoke <com.android.server.display.color.ColorDisplayService: boolean isUserSetupCompleted(android.content.ContentResolver,int)>(r0, i0);

        return $z0;
    }

    static void access$4000(com.android.server.display.color.ColorDisplayService, java.io.PrintWriter)
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.io.PrintWriter r1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void dumpInternal(java.io.PrintWriter)>(r1);

        return;
    }

    static android.database.ContentObserver access$502(com.android.server.display.color.ColorDisplayService, android.database.ContentObserver)
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.database.ContentObserver r1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter1: android.database.ContentObserver;

        r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mUserSetupObserver> = r1;

        return r1;
    }

    static boolean access$600(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $z0 = r0.<com.android.server.display.color.ColorDisplayService: boolean mBootCompleted>;

        return $z0;
    }

    static void access$700(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void setUp()>();

        return;
    }

    static com.android.server.display.color.ColorDisplayService$NightDisplayTintController access$800(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        com.android.server.display.color.ColorDisplayService$NightDisplayTintController $r1;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $r1 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        return $r1;
    }

    static int access$900(com.android.server.display.color.ColorDisplayService)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int $i0;

        r0 := @parameter0: com.android.server.display.color.ColorDisplayService;

        $i0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: int getNightDisplayAutoModeInternal()>();

        return $i0;
    }

    private void applyTint(com.android.server.display.color.TintController, boolean)
    {
        com.android.server.display.color.ColorDisplayService r0;
        com.android.server.display.color.TintController r1;
        boolean z0;
        com.android.server.display.color.DisplayTransformManager r2;
        float[] r3, r12;
        com.android.server.display.color.ColorDisplayService$ColorMatrixEvaluator r4;
        java.lang.Object $r5;
        int $i0, $i1;
        java.lang.Object[] $r6;
        android.content.Context $r8;
        android.view.animation.Interpolator $r9;
        com.android.server.display.color._$$Lambda$ColorDisplayService$3e7BuPerYILI5JPZm17hU11tDtY $r10;
        com.android.server.display.color.ColorDisplayService$3 $r11;
        com.android.server.display.color.ColorDisplayService$TintValueAnimator r13;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter0: com.android.server.display.color.TintController;

        z0 := @parameter1: boolean;

        virtualinvoke r1.<com.android.server.display.color.TintController: void cancelAnimator()>();

        $r5 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: java.lang.Object getLocalService(java.lang.Class)>(class "Lcom/android/server/display/color/DisplayTransformManager;");

        r2 = (com.android.server.display.color.DisplayTransformManager) $r5;

        $i0 = virtualinvoke r1.<com.android.server.display.color.TintController: int getLevel()>();

        r12 = virtualinvoke r2.<com.android.server.display.color.DisplayTransformManager: float[] getColorMatrix(int)>($i0);

        r3 = virtualinvoke r1.<com.android.server.display.color.TintController: float[] getMatrix()>();

        if z0 == 0 goto label1;

        $i1 = virtualinvoke r1.<com.android.server.display.color.TintController: int getLevel()>();

        virtualinvoke r2.<com.android.server.display.color.DisplayTransformManager: void setColorMatrix(int,float[])>($i1, r3);

        goto label3;

     label1:
        r4 = <com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$ColorMatrixEvaluator COLOR_MATRIX_EVALUATOR>;

        if r12 != null goto label2;

        r12 = <com.android.server.display.color.ColorDisplayService: float[] MATRIX_IDENTITY>;

        goto label2;

     label2:
        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r12;

        $r6[1] = r3;

        r13 = staticinvoke <com.android.server.display.color.ColorDisplayService$TintValueAnimator: com.android.server.display.color.ColorDisplayService$TintValueAnimator ofMatrix(com.android.server.display.color.ColorDisplayService$ColorMatrixEvaluator,java.lang.Object[])>(r4, $r6);

        virtualinvoke r1.<com.android.server.display.color.TintController: void setAnimator(com.android.server.display.color.ColorDisplayService$TintValueAnimator)>(r13);

        virtualinvoke r13.<com.android.server.display.color.ColorDisplayService$TintValueAnimator: android.animation.ValueAnimator setDuration(long)>(3000L);

        $r8 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r9 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r8, 17563661);

        virtualinvoke r13.<com.android.server.display.color.ColorDisplayService$TintValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r9);

        $r10 = new com.android.server.display.color._$$Lambda$ColorDisplayService$3e7BuPerYILI5JPZm17hU11tDtY;

        specialinvoke $r10.<com.android.server.display.color._$$Lambda$ColorDisplayService$3e7BuPerYILI5JPZm17hU11tDtY: void <init>(com.android.server.display.color.DisplayTransformManager,com.android.server.display.color.TintController)>(r2, r1);

        virtualinvoke r13.<com.android.server.display.color.ColorDisplayService$TintValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r10);

        $r11 = new com.android.server.display.color.ColorDisplayService$3;

        specialinvoke $r11.<com.android.server.display.color.ColorDisplayService$3: void <init>(com.android.server.display.color.ColorDisplayService,com.android.server.display.color.TintController,float[],com.android.server.display.color.DisplayTransformManager)>(r0, r1, r3, r2);

        virtualinvoke r13.<com.android.server.display.color.ColorDisplayService$TintValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r11);

        virtualinvoke r13.<com.android.server.display.color.ColorDisplayService$TintValueAnimator: void start()>();

     label3:
        return;
    }

    private void dumpInternal(java.io.PrintWriter)
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.io.PrintWriter r1;
        com.android.server.display.color.ColorDisplayService$NightDisplayTintController $r2, $r26, $r31;
        android.content.Context $r3, $r5, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.display.color.TintController $r4, $r21;
        com.android.server.display.color.AppSaturationController $r6;
        com.android.server.display.color.DisplayWhiteBalanceTintController $r7, $r15, $r18;
        java.lang.StringBuilder $r9, $r13, $r19, $r24, $r29;
        int $i0, $i1;
        java.lang.String $r12, $r17, $r23, $r28, $r33;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("COLOR DISPLAY MANAGER dumpsys (color_display)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Night display:");

        $r2 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $r3 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $z0 = virtualinvoke $r2.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: boolean isAvailable(android.content.Context)>($r3);

        if $z0 == 0 goto label1;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Activated: ");

        $r26 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $z5 = virtualinvoke $r26.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: boolean isActivated()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Color temp: ");

        $r31 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $i1 = virtualinvoke $r31.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: int getColorTemperature()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        goto label2;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Not available");

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Global saturation:");

        $r4 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.TintController mGlobalSaturationTintController>;

        $r5 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $z1 = virtualinvoke $r4.<com.android.server.display.color.TintController: boolean isAvailable(android.content.Context)>($r5);

        if $z1 == 0 goto label3;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Activated: ");

        $r21 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.TintController mGlobalSaturationTintController>;

        $z4 = virtualinvoke $r21.<com.android.server.display.color.TintController: boolean isActivated()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        goto label4;

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Not available");

     label4:
        $r6 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.AppSaturationController mAppSaturationController>;

        virtualinvoke $r6.<com.android.server.display.color.AppSaturationController: void dump(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Display white balance:");

        $r7 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController>;

        $r8 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $z2 = virtualinvoke $r7.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean isAvailable(android.content.Context)>($r8);

        if $z2 == 0 goto label5;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Activated: ");

        $r15 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController>;

        $z3 = virtualinvoke $r15.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean isActivated()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        $r18 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController>;

        virtualinvoke $r18.<com.android.server.display.color.DisplayWhiteBalanceTintController: void dump(java.io.PrintWriter)>(r1);

        goto label6;

     label5:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Not available");

     label6:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Color mode: ");

        $i0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: int getColorModeInternal()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return;
    }

    private int getColorModeInternal()
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.content.ContentResolver r1;
        android.content.Context $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, i1, i2, i3, i4;
        android.content.res.Resources $r4;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $r2 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $z0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isAccessibilityEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        i1 = virtualinvoke $r4.<android.content.res.Resources: int getInteger(int)>(17694728);

        if i1 < 0 goto label1;

        return i1;

     label1:
        $i0 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        i2 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r1, "display_color_mode", -1, $i0);

        i3 = i2;

        if i2 != -1 goto label2;

        i3 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: int getCurrentColorModeFromSystemProperties()>();

     label2:
        i4 = i3;

        $z1 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isColorModeAvailable(int)>(i3);

        if $z1 != 0 goto label6;

        if i3 != 1 goto label3;

        $z4 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isColorModeAvailable(int)>(0);

        if $z4 == 0 goto label3;

        i4 = 0;

        goto label6;

     label3:
        if i3 != 2 goto label4;

        $z3 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isColorModeAvailable(int)>(3);

        if $z3 == 0 goto label4;

        i4 = 3;

        goto label6;

     label4:
        if i3 != 3 goto label5;

        $z2 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isColorModeAvailable(int)>(2);

        if $z2 == 0 goto label5;

        i4 = 2;

        goto label6;

     label5:
        i4 = -1;

     label6:
        return i4;
    }

    private int getCompositionColorSpace(int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0, $i1;
        android.util.SparseIntArray r1;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.display.color.ColorDisplayService: android.util.SparseIntArray mColorModeCompositionColorSpaces>;

        if r1 != null goto label1;

        return -1;

     label1:
        $i1 = virtualinvoke r1.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        return $i1;
    }

    private int getCurrentColorModeFromSystemProperties()
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0;
        java.lang.String $r1, $r2;
        boolean $z0;
        byte b1;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        b1 = 0;

        i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("persist.sys.sf.native_mode", 0);

        if i0 != 0 goto label3;

        $r1 = "1.0";

        $r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.sys.sf.color_saturation");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        b1 = 1;

     label2:
        return b1;

     label3:
        if i0 != 1 goto label4;

        return 2;

     label4:
        if i0 != 2 goto label5;

        return 3;

     label5:
        if i0 < 256 goto label6;

        if i0 > 511 goto label6;

        return i0;

     label6:
        return -1;
    }

    static java.time.LocalDateTime getDateTimeAfter(java.time.LocalTime, java.time.LocalDateTime)
    {
        java.time.LocalDateTime r0, r3;
        int $i0, $i1, $i2, $i3;
        java.time.Month $r1;
        boolean $z0;
        java.time.LocalTime r2;

        r2 := @parameter0: java.time.LocalTime;

        r0 := @parameter1: java.time.LocalDateTime;

        $i0 = virtualinvoke r0.<java.time.LocalDateTime: int getYear()>();

        $r1 = virtualinvoke r0.<java.time.LocalDateTime: java.time.Month getMonth()>();

        $i1 = virtualinvoke r0.<java.time.LocalDateTime: int getDayOfMonth()>();

        $i2 = virtualinvoke r2.<java.time.LocalTime: int getHour()>();

        $i3 = virtualinvoke r2.<java.time.LocalTime: int getMinute()>();

        r3 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime of(int,java.time.Month,int,int,int)>($i0, $r1, $i1, $i2, $i3);

        $z0 = virtualinvoke r3.<java.time.LocalDateTime: boolean isBefore(java.time.chrono.ChronoLocalDateTime)>(r0);

        if $z0 == 0 goto label1;

        r3 = virtualinvoke r3.<java.time.LocalDateTime: java.time.LocalDateTime plusDays(long)>(1L);

        goto label1;

     label1:
        return r3;
    }

    static java.time.LocalDateTime getDateTimeBefore(java.time.LocalTime, java.time.LocalDateTime)
    {
        java.time.LocalDateTime r0, r3;
        int $i0, $i1, $i2, $i3;
        java.time.Month $r1;
        boolean $z0;
        java.time.LocalTime r2;

        r2 := @parameter0: java.time.LocalTime;

        r0 := @parameter1: java.time.LocalDateTime;

        $i0 = virtualinvoke r0.<java.time.LocalDateTime: int getYear()>();

        $r1 = virtualinvoke r0.<java.time.LocalDateTime: java.time.Month getMonth()>();

        $i1 = virtualinvoke r0.<java.time.LocalDateTime: int getDayOfMonth()>();

        $i2 = virtualinvoke r2.<java.time.LocalTime: int getHour()>();

        $i3 = virtualinvoke r2.<java.time.LocalTime: int getMinute()>();

        r3 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime of(int,java.time.Month,int,int,int)>($i0, $r1, $i1, $i2, $i3);

        $z0 = virtualinvoke r3.<java.time.LocalDateTime: boolean isAfter(java.time.chrono.ChronoLocalDateTime)>(r0);

        if $z0 == 0 goto label1;

        r3 = virtualinvoke r3.<java.time.LocalDateTime: java.time.LocalDateTime minusDays(long)>(1L);

        goto label1;

     label1:
        return r3;
    }

    private int getNightDisplayAutoModeInternal()
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.content.Context $r6;
        android.content.res.Resources $r7;
        int i1, i2, i3;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        i1 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: int getNightDisplayAutoModeRawInternal()>();

        i2 = i1;

        if i1 != -1 goto label1;

        $r6 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        i2 = virtualinvoke $r7.<android.content.res.Resources: int getInteger(int)>(17694774);

     label1:
        i3 = i2;

        if i2 == 0 goto label2;

        i3 = i2;

        if i2 == 1 goto label2;

        i3 = i2;

        if i2 == 2 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid autoMode: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ColorDisplayService", $r5);

        i3 = 0;

     label2:
        return i3;
    }

    private int getNightDisplayAutoModeRawInternal()
    {
        com.android.server.display.color.ColorDisplayService r0;
        int $i0, $i1, $i2;
        android.content.Context $r1;
        android.content.ContentResolver $r2;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $i0 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        if $i0 != -10000 goto label1;

        return -1;

     label1:
        $r1 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        $i2 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r2, "night_display_auto_mode", -1, $i1);

        return $i2;
    }

    private android.hardware.display.Time getNightDisplayCustomEndTimeInternal()
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0, $i1, $i2, i4;
        android.content.Context $r1, $r5;
        android.content.ContentResolver $r2;
        android.hardware.display.Time $r3;
        long $l3;
        java.time.LocalTime $r4;
        android.content.res.Resources $r6;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $r1 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        i0 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r2, "night_display_custom_end_time", -1, $i1);

        i4 = i0;

        if i0 != -1 goto label1;

        $r5 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        i4 = virtualinvoke $r6.<android.content.res.Resources: int getInteger(int)>(17694775);

     label1:
        $r3 = new android.hardware.display.Time;

        $i2 = i4 / 1000;

        $l3 = (long) $i2;

        $r4 = staticinvoke <java.time.LocalTime: java.time.LocalTime ofSecondOfDay(long)>($l3);

        specialinvoke $r3.<android.hardware.display.Time: void <init>(java.time.LocalTime)>($r4);

        return $r3;
    }

    private android.hardware.display.Time getNightDisplayCustomStartTimeInternal()
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0, $i1, $i2, i4;
        android.content.Context $r1, $r5;
        android.content.ContentResolver $r2;
        android.hardware.display.Time $r3;
        long $l3;
        java.time.LocalTime $r4;
        android.content.res.Resources $r6;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $r1 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        i0 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r2, "night_display_custom_start_time", -1, $i1);

        i4 = i0;

        if i0 != -1 goto label1;

        $r5 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        i4 = virtualinvoke $r6.<android.content.res.Resources: int getInteger(int)>(17694776);

     label1:
        $r3 = new android.hardware.display.Time;

        $i2 = i4 / 1000;

        $l3 = (long) $i2;

        $r4 = staticinvoke <java.time.LocalTime: java.time.LocalTime ofSecondOfDay(long)>($l3);

        specialinvoke $r3.<android.hardware.display.Time: void <init>(java.time.LocalTime)>($r4);

        return $r3;
    }

    private java.time.LocalDateTime getNightDisplayLastActivatedTimeSetting()
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.content.Context $r1, $r2;
        int $i0;
        java.time.LocalDateTime $r3, r10, r12;
        java.lang.Throwable $r4, $r5;
        long $l1;
        java.time.Instant $r6;
        java.time.ZoneId $r7;
        android.content.ContentResolver r8;
        java.lang.String r9;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $r1 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        r8 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $i0 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        r9 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r8, "night_display_last_activated_time", $i0);

        if r9 == null goto label7;

     label1:
        r10 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime parse(java.lang.CharSequence)>(r9);

     label2:
        return r10;

     label3:
        $r5 := @caughtexception;

     label4:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r9);

        $r6 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>($l1);

        $r7 = staticinvoke <java.time.ZoneId: java.time.ZoneId systemDefault()>();

        r12 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime ofInstant(java.time.Instant,java.time.ZoneId)>($r6, $r7);

     label5:
        return r12;

     label6:
        $r4 := @caughtexception;

     label7:
        $r3 = <java.time.LocalDateTime: java.time.LocalDateTime MIN>;

        return $r3;

        catch java.time.format.DateTimeParseException from label1 to label2 with label3;
        catch java.time.DateTimeException from label4 to label5 with label6;
        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    private int getTransformCapabilitiesInternal()
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.content.res.Resources r1;
        boolean $z0, $z1, $z2;
        android.content.Context $r2;
        byte b0, b1, b2;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        b0 = 0;

        $z0 = staticinvoke <android.view.SurfaceControl: boolean getProtectedContentSupport()>();

        if $z0 == 0 goto label1;

        b0 = 0 | 1;

     label1:
        $r2 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        r1 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        b1 = b0;

        $z1 = virtualinvoke r1.<android.content.res.Resources: boolean getBoolean(int)>(17891516);

        if $z1 == 0 goto label2;

        b1 = b0 | 2;

     label2:
        b2 = b1;

        $z2 = virtualinvoke r1.<android.content.res.Resources: boolean getBoolean(int)>(17891517);

        if $z2 == 0 goto label3;

        b2 = b1 | 4;

     label3:
        return b2;
    }

    private boolean isAccessibilityEnabled()
    {
        com.android.server.display.color.ColorDisplayService r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $z0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isAccessiblityDaltonizerEnabled()>();

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isAccessiblityInversionEnabled()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    private boolean isAccessiblityDaltonizerEnabled()
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.content.ContentResolver r1;
        int i0, $i1;
        android.content.Context $r2;
        boolean z0;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $r2 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        z0 = 0;

        $i1 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r1, "accessibility_display_daltonizer_enabled", 0, i0);

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    private boolean isAccessiblityInversionEnabled()
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.content.ContentResolver r1;
        int i0, $i1;
        android.content.Context $r2;
        boolean z0;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $r2 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        z0 = 0;

        $i1 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r1, "accessibility_display_inversion_enabled", 0, i0);

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    private boolean isColorModeAvailable(int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0, i1, $i2, i3;
        int[] r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r3.<android.content.res.Resources: int[] getIntArray(int)>(17235990);

        if r1 == null goto label3;

        i1 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        $i2 = r1[i3];

        if $i2 != i0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean isDeviceColorManagedInternal()
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.lang.Object $r1;
        com.android.server.display.color.DisplayTransformManager $r2;
        boolean $z0;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $r1 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: java.lang.Object getLocalService(java.lang.Class)>(class "Lcom/android/server/display/color/DisplayTransformManager;");

        $r2 = (com.android.server.display.color.DisplayTransformManager) $r1;

        $z0 = virtualinvoke $r2.<com.android.server.display.color.DisplayTransformManager: boolean isDeviceColorManaged()>();

        return $z0;
    }

    private boolean isDisplayWhiteBalanceSettingEnabled()
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.content.ContentResolver r1;
        android.content.Context $r2, $r3;
        android.content.res.Resources $r4;
        boolean $z0, z1;
        int $i0, $i1, i2;
        byte b3;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        i2 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        z1 = 0;

        if i2 != -10000 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r4.<android.content.res.Resources: boolean getBoolean(int)>(17891418);

        if $z0 == 0 goto label2;

        b3 = 1;

        goto label3;

     label2:
        b3 = 0;

     label3:
        $i0 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        $i1 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r1, "display_white_balance_enabled", b3, $i0);

        if $i1 != 1 goto label4;

        z1 = 1;

     label4:
        return z1;
    }

    private static boolean isUserSetupCompleted(android.content.ContentResolver, int)
    {
        android.content.ContentResolver r0;
        int i0, $i1;
        boolean z0;

        r0 := @parameter0: android.content.ContentResolver;

        i0 := @parameter1: int;

        z0 = 0;

        $i1 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r0, "user_setup_complete", 0, i0);

        if $i1 != 1 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    static void lambda$applyTint$0(com.android.server.display.color.DisplayTransformManager, com.android.server.display.color.TintController, android.animation.ValueAnimator)
    {
        com.android.server.display.color.DisplayTransformManager r0;
        com.android.server.display.color.TintController r1;
        android.animation.ValueAnimator r2;
        float[] r3;
        java.lang.Object $r4;
        int $i0;
        com.android.server.display.color.ColorDisplayService$TintValueAnimator $r5;

        r0 := @parameter0: com.android.server.display.color.DisplayTransformManager;

        r1 := @parameter1: com.android.server.display.color.TintController;

        r2 := @parameter2: android.animation.ValueAnimator;

        $r4 = virtualinvoke r2.<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>();

        r3 = (float[]) $r4;

        $i0 = virtualinvoke r1.<com.android.server.display.color.TintController: int getLevel()>();

        virtualinvoke r0.<com.android.server.display.color.DisplayTransformManager: void setColorMatrix(int,float[])>($i0, r3);

        $r5 = (com.android.server.display.color.ColorDisplayService$TintValueAnimator) r2;

        virtualinvoke $r5.<com.android.server.display.color.ColorDisplayService$TintValueAnimator: void updateMinMaxComponents()>();

        return;
    }

    private void onAccessibilityActivated()
    {
        com.android.server.display.color.ColorDisplayService r0;
        int $i0;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $i0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: int getColorModeInternal()>();

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void onDisplayColorModeChanged(int)>($i0);

        return;
    }

    private void onAccessibilityDaltonizerChanged()
    {
        com.android.server.display.color.ColorDisplayService r0;
        com.android.server.display.color.DisplayTransformManager r1;
        int $i0, $i1, i2;
        boolean $z0;
        java.lang.Object $r2;
        float[] $r3;
        android.content.Context $r4;
        android.content.ContentResolver $r5;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $i0 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        if $i0 != -10000 goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isAccessiblityDaltonizerEnabled()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        i2 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r5, "accessibility_display_daltonizer", 12, $i1);

        goto label3;

     label2:
        i2 = -1;

     label3:
        $r2 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: java.lang.Object getLocalService(java.lang.Class)>(class "Lcom/android/server/display/color/DisplayTransformManager;");

        r1 = (com.android.server.display.color.DisplayTransformManager) $r2;

        if i2 != 0 goto label4;

        $r3 = <com.android.server.display.color.ColorDisplayService: float[] MATRIX_GRAYSCALE>;

        virtualinvoke r1.<com.android.server.display.color.DisplayTransformManager: void setColorMatrix(int,float[])>(200, $r3);

        virtualinvoke r1.<com.android.server.display.color.DisplayTransformManager: void setDaltonizerMode(int)>(-1);

        goto label5;

     label4:
        virtualinvoke r1.<com.android.server.display.color.DisplayTransformManager: void setColorMatrix(int,float[])>(200, null);

        virtualinvoke r1.<com.android.server.display.color.DisplayTransformManager: void setDaltonizerMode(int)>(i2);

     label5:
        return;
    }

    private void onAccessibilityInversionChanged()
    {
        com.android.server.display.color.ColorDisplayService r0;
        com.android.server.display.color.DisplayTransformManager r1;
        int $i0;
        java.lang.Object $r2;
        boolean $z0;
        float[] r3;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $i0 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        if $i0 != -10000 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: java.lang.Object getLocalService(java.lang.Class)>(class "Lcom/android/server/display/color/DisplayTransformManager;");

        r1 = (com.android.server.display.color.DisplayTransformManager) $r2;

        $z0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isAccessiblityInversionEnabled()>();

        if $z0 == 0 goto label2;

        r3 = <com.android.server.display.color.ColorDisplayService: float[] MATRIX_INVERT_COLOR>;

        goto label3;

     label2:
        r3 = null;

     label3:
        virtualinvoke r1.<com.android.server.display.color.DisplayTransformManager: void setColorMatrix(int,float[])>(300, r3);

        return;
    }

    private void onDisplayColorModeChanged(int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0, $i1, $i2;
        com.android.server.display.color.ColorDisplayService$NightDisplayTintController r1, $r2, $r4, $r7, $r12;
        com.android.server.display.color.DisplayWhiteBalanceTintController $r3, $r10;
        android.content.Context $r5, $r11, $r13;
        boolean $z0, $z2, $z3;
        java.lang.Object $r6;
        com.android.server.display.color.DisplayTransformManager $r8;
        float[] $r9;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter0: int;

        if i0 != -1 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        virtualinvoke $r2.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: void cancelAnimator()>();

        $r3 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController>;

        virtualinvoke $r3.<com.android.server.display.color.DisplayWhiteBalanceTintController: void cancelAnimator()>();

        $r4 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $r5 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $z0 = virtualinvoke $r4.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: boolean isAvailable(android.content.Context)>($r5);

        if $z0 == 0 goto label2;

        $r12 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $r13 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $z3 = staticinvoke <com.android.server.display.color.DisplayTransformManager: boolean needsLinearColorMatrix(int)>(i0);

        virtualinvoke $r12.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: void setUp(android.content.Context,boolean)>($r13, $z3);

        r1 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $i2 = virtualinvoke r1.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: int getColorTemperatureSetting()>();

        virtualinvoke r1.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: void setMatrix(int)>($i2);

     label2:
        $r6 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: java.lang.Object getLocalService(java.lang.Class)>(class "Lcom/android/server/display/color/DisplayTransformManager;");

        $r8 = (com.android.server.display.color.DisplayTransformManager) $r6;

        $r7 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $r9 = virtualinvoke $r7.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: float[] getMatrix()>();

        $i1 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: int getCompositionColorSpace(int)>(i0);

        virtualinvoke $r8.<com.android.server.display.color.DisplayTransformManager: boolean setColorMode(int,float[],int)>(i0, $r9, $i1);

        $r10 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController>;

        $r11 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $z2 = virtualinvoke $r10.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean isAvailable(android.content.Context)>($r11);

        if $z2 == 0 goto label3;

        virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: void updateDisplayWhiteBalanceStatus()>();

     label3:
        return;
    }

    private void onNightDisplayAutoModeChanged(int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        com.android.server.display.color.ColorDisplayService$TwilightNightDisplayAutoMode $r5;
        com.android.server.display.color.ColorDisplayService$CustomNightDisplayAutoMode $r6;
        com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode r8, r9;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onNightDisplayAutoModeChanged: autoMode=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ColorDisplayService", $r4);

        r8 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode mNightDisplayAutoMode>;

        if r8 == null goto label1;

        virtualinvoke r8.<com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode: void onStop()>();

        r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode mNightDisplayAutoMode> = null;

     label1:
        if i0 != 1 goto label2;

        $r6 = new com.android.server.display.color.ColorDisplayService$CustomNightDisplayAutoMode;

        specialinvoke $r6.<com.android.server.display.color.ColorDisplayService$CustomNightDisplayAutoMode: void <init>(com.android.server.display.color.ColorDisplayService)>(r0);

        r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode mNightDisplayAutoMode> = $r6;

        goto label3;

     label2:
        if i0 != 2 goto label3;

        $r5 = new com.android.server.display.color.ColorDisplayService$TwilightNightDisplayAutoMode;

        specialinvoke $r5.<com.android.server.display.color.ColorDisplayService$TwilightNightDisplayAutoMode: void <init>(com.android.server.display.color.ColorDisplayService)>(r0);

        r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode mNightDisplayAutoMode> = $r5;

     label3:
        r9 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode mNightDisplayAutoMode>;

        if r9 == null goto label4;

        virtualinvoke r9.<com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode: void onStart()>();

     label4:
        return;
    }

    private void onNightDisplayCustomEndTimeChanged(java.time.LocalTime)
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.time.LocalTime r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode r7;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter0: java.time.LocalTime;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onNightDisplayCustomEndTimeChanged: endTime=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ColorDisplayService", $r5);

        r7 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode mNightDisplayAutoMode>;

        if r7 == null goto label1;

        virtualinvoke r7.<com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode: void onCustomEndTimeChanged(java.time.LocalTime)>(r1);

     label1:
        return;
    }

    private void onNightDisplayCustomStartTimeChanged(java.time.LocalTime)
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.time.LocalTime r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode r7;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter0: java.time.LocalTime;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onNightDisplayCustomStartTimeChanged: startTime=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ColorDisplayService", $r5);

        r7 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode mNightDisplayAutoMode>;

        if r7 == null goto label1;

        virtualinvoke r7.<com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode: void onCustomStartTimeChanged(java.time.LocalTime)>(r1);

     label1:
        return;
    }

    private boolean setAppSaturationLevelInternal(java.lang.String, java.lang.String, int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.lang.String r1, r2;
        int i0, $i1;
        com.android.server.display.color.AppSaturationController $r3;
        boolean $z0;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.AppSaturationController mAppSaturationController>;

        $i1 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        $z0 = virtualinvoke $r3.<com.android.server.display.color.AppSaturationController: boolean setSaturationLevel(java.lang.String,java.lang.String,int,int)>(r1, r2, $i1, i0);

        return $z0;
    }

    private void setColorModeInternal(int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        android.content.Context $r7;
        android.content.ContentResolver $r8;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isColorModeAvailable(int)>(i0);

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        staticinvoke <android.provider.Settings$System: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r8, "display_color_mode", i0, $i1);

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid colorMode: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    private boolean setDisplayWhiteBalanceSettingEnabled(boolean)
    {
        com.android.server.display.color.ColorDisplayService r0;
        boolean z0, $z1;
        int $i0, $i1, i2;
        android.content.Context $r1;
        android.content.ContentResolver $r2;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        z0 := @parameter0: boolean;

        $i0 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        if $i0 != -10000 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        i2 = (int) z0;

        $z1 = staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r2, "display_white_balance_enabled", i2, $i1);

        return $z1;
    }

    private boolean setNightDisplayAutoModeInternal(int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0, $i1, $i2, $i3;
        android.content.Context $r1, $r3;
        android.content.ContentResolver $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: int getNightDisplayAutoModeInternal()>();

        if $i1 == i0 goto label1;

        $r3 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i3 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r4, "night_display_last_activated_time", null, $i3);

     label1:
        $r1 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i2 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r2, "night_display_auto_mode", i0, $i2);

        return $z0;
    }

    private boolean setNightDisplayCustomEndTimeInternal(android.hardware.display.Time)
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.hardware.display.Time r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.time.LocalTime $r4;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter0: android.hardware.display.Time;

        $r2 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = virtualinvoke r1.<android.hardware.display.Time: java.time.LocalTime getLocalTime()>();

        $i0 = virtualinvoke $r4.<java.time.LocalTime: int toSecondOfDay()>();

        $i2 = $i0 * 1000;

        $i1 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r3, "night_display_custom_end_time", $i2, $i1);

        return $z0;
    }

    private boolean setNightDisplayCustomStartTimeInternal(android.hardware.display.Time)
    {
        com.android.server.display.color.ColorDisplayService r0;
        android.hardware.display.Time r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.time.LocalTime $r4;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        r1 := @parameter0: android.hardware.display.Time;

        $r2 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = virtualinvoke r1.<android.hardware.display.Time: java.time.LocalTime getLocalTime()>();

        $i0 = virtualinvoke $r4.<java.time.LocalTime: int toSecondOfDay()>();

        $i2 = $i0 * 1000;

        $i1 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r3, "night_display_custom_start_time", $i2, $i1);

        return $z0;
    }

    private void setUp()
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.lang.StringBuilder $r1;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String $r4;
        android.database.ContentObserver $r5, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26;
        android.content.Context $r6, $r27, $r30, $r32, $r35, $r45;
        android.net.Uri $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25;
        android.content.res.Resources $r28;
        com.android.server.display.color.ColorDisplayService$NightDisplayTintController $r29, $r33, $r34, $r36, r42, r43;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.server.display.color.DisplayWhiteBalanceTintController $r31, $r44;
        java.lang.Boolean $r37;
        com.android.server.display.color.ColorDisplayService$2 $r38;
        android.os.Handler $r39;
        android.content.ContentResolver r41;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setUp: currentUser=");

        $i0 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ColorDisplayService", $r4);

        $r5 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver>;

        if $r5 != null goto label1;

        $r38 = new com.android.server.display.color.ColorDisplayService$2;

        $r39 = r0.<com.android.server.display.color.ColorDisplayService: android.os.Handler mHandler>;

        specialinvoke $r38.<com.android.server.display.color.ColorDisplayService$2: void <init>(com.android.server.display.color.ColorDisplayService,android.os.Handler)>(r0, $r39);

        r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver> = $r38;

     label1:
        $r6 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        r41 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("night_display_activated");

        $r8 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver>;

        $i2 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        virtualinvoke r41.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r7, 0, $r8, $i2);

        $r9 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("night_display_color_temperature");

        $r10 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver>;

        $i3 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        virtualinvoke r41.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r9, 0, $r10, $i3);

        $r11 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("night_display_auto_mode");

        $r12 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver>;

        $i4 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        virtualinvoke r41.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r11, 0, $r12, $i4);

        $r13 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("night_display_custom_start_time");

        $r14 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver>;

        $i5 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        virtualinvoke r41.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r13, 0, $r14, $i5);

        $r15 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("night_display_custom_end_time");

        $r16 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver>;

        $i6 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        virtualinvoke r41.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r15, 0, $r16, $i6);

        $r17 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("display_color_mode");

        $r18 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver>;

        $i7 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        virtualinvoke r41.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r17, 0, $r18, $i7);

        $r19 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("accessibility_display_inversion_enabled");

        $r20 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver>;

        $i8 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        virtualinvoke r41.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r19, 0, $r20, $i8);

        $r21 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("accessibility_display_daltonizer_enabled");

        $r22 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver>;

        $i9 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        virtualinvoke r41.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r21, 0, $r22, $i9);

        $r23 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("accessibility_display_daltonizer");

        $r24 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver>;

        $i10 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        virtualinvoke r41.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r23, 0, $r24, $i10);

        $r25 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("display_white_balance_enabled");

        $r26 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver>;

        $i11 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        virtualinvoke r41.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r25, 0, $r26, $i11);

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void onAccessibilityInversionChanged()>();

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void onAccessibilityDaltonizerChanged()>();

        $r27 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r28 = virtualinvoke $r27.<android.content.Context: android.content.res.Resources getResources()>();

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void setUpDisplayCompositionColorSpaces(android.content.res.Resources)>($r28);

        $i12 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: int getColorModeInternal()>();

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void onDisplayColorModeChanged(int)>($i12);

        $r29 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $r30 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $z0 = virtualinvoke $r29.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: boolean isAvailable(android.content.Context)>($r30);

        if $z0 == 0 goto label2;

        $r33 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        virtualinvoke $r33.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: void setActivated(java.lang.Boolean)>(null);

        $r34 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $r35 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $z1 = staticinvoke <com.android.server.display.color.DisplayTransformManager: boolean needsLinearColorMatrix()>();

        virtualinvoke $r34.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: void setUp(android.content.Context,boolean)>($r35, $z1);

        r42 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $i13 = virtualinvoke r42.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: int getColorTemperatureSetting()>();

        virtualinvoke r42.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: void setMatrix(int)>($i13);

        $i14 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: int getNightDisplayAutoModeInternal()>();

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void onNightDisplayAutoModeChanged(int)>($i14);

        $r36 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $z2 = virtualinvoke $r36.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: boolean isActivatedStateNotSet()>();

        if $z2 == 0 goto label2;

        r43 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $z3 = virtualinvoke r43.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: boolean isActivatedSetting()>();

        $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        virtualinvoke r43.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: void setActivated(java.lang.Boolean)>($r37);

     label2:
        $r44 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController>;

        $r45 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $z4 = virtualinvoke $r44.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean isAvailable(android.content.Context)>($r45);

        if $z4 == 0 goto label3;

        $r31 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController>;

        $r32 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        virtualinvoke $r31.<com.android.server.display.color.DisplayWhiteBalanceTintController: void setUp(android.content.Context,boolean)>($r32, 1);

        virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: void updateDisplayWhiteBalanceStatus()>();

     label3:
        return;
    }

    private void setUpDisplayCompositionColorSpaces(android.content.res.Resources)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int[] r1, r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7;
        android.util.SparseIntArray $r2, $r3;
        android.content.res.Resources r4;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        r4 := @parameter0: android.content.res.Resources;

        r0.<com.android.server.display.color.ColorDisplayService: android.util.SparseIntArray mColorModeCompositionColorSpaces> = null;

        r1 = virtualinvoke r4.<android.content.res.Resources: int[] getIntArray(int)>(17236015);

        if r1 != null goto label1;

        return;

     label1:
        r5 = virtualinvoke r4.<android.content.res.Resources: int[] getIntArray(int)>(17236016);

        if r5 != null goto label2;

        return;

     label2:
        $i1 = lengthof r1;

        $i0 = lengthof r5;

        if $i1 == $i0 goto label3;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ColorDisplayService", "Number of composition color spaces doesn\'t match specified color modes");

        return;

     label3:
        $r2 = new android.util.SparseIntArray;

        $i2 = lengthof r1;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>(int)>($i2);

        r0.<com.android.server.display.color.ColorDisplayService: android.util.SparseIntArray mColorModeCompositionColorSpaces> = $r2;

        i7 = 0;

     label4:
        $i3 = lengthof r1;

        if i7 >= $i3 goto label5;

        $r3 = r0.<com.android.server.display.color.ColorDisplayService: android.util.SparseIntArray mColorModeCompositionColorSpaces>;

        $i5 = r1[i7];

        $i4 = r5[i7];

        virtualinvoke $r3.<android.util.SparseIntArray: void put(int,int)>($i5, $i4);

        i7 = i7 + 1;

        goto label4;

     label5:
        return;
    }

    private void tearDown()
    {
        com.android.server.display.color.ColorDisplayService r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r4;
        android.database.ContentObserver $r5, $r15;
        com.android.server.display.color.ColorDisplayService$NightDisplayTintController $r6, $r12;
        android.content.Context $r7, $r9, $r13, $r19;
        boolean $z0, $z1, $z2;
        com.android.server.display.color.TintController $r8, $r10;
        com.android.server.display.color.DisplayWhiteBalanceTintController $r11, $r18;
        android.content.ContentResolver $r14;
        com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode r17;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tearDown: currentUser=");

        $i0 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ColorDisplayService", $r4);

        $r5 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver>;

        if $r5 == null goto label1;

        $r13 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r15 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mContentObserver>;

        virtualinvoke $r14.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r15);

     label1:
        $r6 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $r7 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $z0 = virtualinvoke $r6.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: boolean isAvailable(android.content.Context)>($r7);

        if $z0 == 0 goto label3;

        r17 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode mNightDisplayAutoMode>;

        if r17 == null goto label2;

        virtualinvoke r17.<com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode: void onStop()>();

        r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayAutoMode mNightDisplayAutoMode> = null;

     label2:
        $r12 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        virtualinvoke $r12.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: void endAnimator()>();

     label3:
        $r18 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController>;

        $r19 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $z2 = virtualinvoke $r18.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean isAvailable(android.content.Context)>($r19);

        if $z2 == 0 goto label4;

        $r11 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController>;

        virtualinvoke $r11.<com.android.server.display.color.DisplayWhiteBalanceTintController: void endAnimator()>();

     label4:
        $r8 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.TintController mGlobalSaturationTintController>;

        $r9 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        $z1 = virtualinvoke $r8.<com.android.server.display.color.TintController: boolean isAvailable(android.content.Context)>($r9);

        if $z1 == 0 goto label5;

        $r10 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.TintController mGlobalSaturationTintController>;

        virtualinvoke $r10.<com.android.server.display.color.TintController: void setActivated(java.lang.Boolean)>(null);

     label5:
        return;
    }

    public void onBootPhase(int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0, $i1;
        android.database.ContentObserver $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter0: int;

        if i0 < 1000 goto label1;

        r0.<com.android.server.display.color.ColorDisplayService: boolean mBootCompleted> = 1;

        $i1 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        if $i1 == -10000 goto label1;

        $r1 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mUserSetupObserver>;

        if $r1 != null goto label1;

        $r2 = r0.<com.android.server.display.color.ColorDisplayService: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

     label1:
        return;
    }

    public void onStart()
    {
        com.android.server.display.color.ColorDisplayService r0;
        com.android.server.display.color.ColorDisplayService$BinderService $r1;
        com.android.server.display.color.ColorDisplayService$ColorDisplayServiceInternal $r2;
        com.android.server.display.color.DisplayTransformManager $r3;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $r1 = new com.android.server.display.color.ColorDisplayService$BinderService;

        specialinvoke $r1.<com.android.server.display.color.ColorDisplayService$BinderService: void <init>(com.android.server.display.color.ColorDisplayService)>(r0);

        virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: void publishBinderService(java.lang.String,android.os.IBinder)>("color_display", $r1);

        $r2 = new com.android.server.display.color.ColorDisplayService$ColorDisplayServiceInternal;

        specialinvoke $r2.<com.android.server.display.color.ColorDisplayService$ColorDisplayServiceInternal: void <init>(com.android.server.display.color.ColorDisplayService)>(r0);

        virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: void publishLocalService(java.lang.Class,java.lang.Object)>(class "Lcom/android/server/display/color/ColorDisplayService$ColorDisplayServiceInternal;", $r2);

        $r3 = new com.android.server.display.color.DisplayTransformManager;

        specialinvoke $r3.<com.android.server.display.color.DisplayTransformManager: void <init>()>();

        virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: void publishLocalService(java.lang.Class,java.lang.Object)>(class "Lcom/android/server/display/color/DisplayTransformManager;", $r3);

        return;
    }

    public void onStartUser(int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0, $i1;
        android.os.Message r1;
        android.os.Handler $r2, $r3;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.SystemService: void onStartUser(int)>(i0);

        $i1 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        if $i1 != -10000 goto label1;

        $r2 = r0.<com.android.server.display.color.ColorDisplayService: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(0);

        r1.<android.os.Message: int arg1> = i0;

        $r3 = r0.<com.android.server.display.color.ColorDisplayService: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

     label1:
        return;
    }

    public void onStopUser(int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0, $i1;
        android.os.Message r1;
        android.os.Handler $r2, $r3;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.SystemService: void onStopUser(int)>(i0);

        $i1 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        if $i1 != i0 goto label1;

        $r2 = r0.<com.android.server.display.color.ColorDisplayService: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(0);

        r1.<android.os.Message: int arg1> = -10000;

        $r3 = r0.<com.android.server.display.color.ColorDisplayService: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

     label1:
        return;
    }

    public void onSwitchUser(int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0;
        android.os.Message r1;
        android.os.Handler $r2, $r3;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.SystemService: void onSwitchUser(int)>(i0);

        $r2 = r0.<com.android.server.display.color.ColorDisplayService: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(0);

        r1.<android.os.Message: int arg1> = i0;

        $r3 = r0.<com.android.server.display.color.ColorDisplayService: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    void onUserChanged(int)
    {
        com.android.server.display.color.ColorDisplayService r0;
        int i0, $i1, $i2;
        android.content.ContentResolver r1;
        android.database.ContentObserver r2, $r7;
        android.content.Context $r3;
        boolean $z0, $z1, $z2;
        com.android.server.display.color.ColorDisplayService$1 $r4;
        android.os.Handler $r5;
        android.net.Uri $r6;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<com.android.server.display.color.ColorDisplayService: android.content.Context getContext()>();

        r1 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        if $i1 == -10000 goto label2;

        r2 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mUserSetupObserver>;

        if r2 == null goto label1;

        virtualinvoke r1.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>(r2);

        r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mUserSetupObserver> = null;

        goto label2;

     label1:
        $z2 = r0.<com.android.server.display.color.ColorDisplayService: boolean mBootCompleted>;

        if $z2 == 0 goto label2;

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void tearDown()>();

     label2:
        r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser> = i0;

        if i0 == -10000 goto label4;

        $z0 = staticinvoke <com.android.server.display.color.ColorDisplayService: boolean isUserSetupCompleted(android.content.ContentResolver,int)>(r1, i0);

        if $z0 != 0 goto label3;

        $r4 = new com.android.server.display.color.ColorDisplayService$1;

        $r5 = r0.<com.android.server.display.color.ColorDisplayService: android.os.Handler mHandler>;

        specialinvoke $r4.<com.android.server.display.color.ColorDisplayService$1: void <init>(com.android.server.display.color.ColorDisplayService,android.os.Handler,android.content.ContentResolver)>(r0, $r5, r1);

        r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mUserSetupObserver> = $r4;

        $r6 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("user_setup_complete");

        $r7 = r0.<com.android.server.display.color.ColorDisplayService: android.database.ContentObserver mUserSetupObserver>;

        $i2 = r0.<com.android.server.display.color.ColorDisplayService: int mCurrentUser>;

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r6, 0, $r7, $i2);

        goto label4;

     label3:
        $z1 = r0.<com.android.server.display.color.ColorDisplayService: boolean mBootCompleted>;

        if $z1 == 0 goto label4;

        specialinvoke r0.<com.android.server.display.color.ColorDisplayService: void setUp()>();

     label4:
        return;
    }

    void updateDisplayWhiteBalanceStatus()
    {
        com.android.server.display.color.ColorDisplayService r0;
        boolean z0, $z1, $z3, $z4, $z5, z6, z7;
        com.android.server.display.color.DisplayWhiteBalanceTintController $r1, r4, $r6;
        android.os.Handler $r2;
        com.android.server.display.color.ColorDisplayService$NightDisplayTintController $r3;
        java.lang.Boolean $r5;
        com.android.server.display.color.ColorDisplayService$DisplayWhiteBalanceListener r7;

        r0 := @this: com.android.server.display.color.ColorDisplayService;

        $r1 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController>;

        z0 = virtualinvoke $r1.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean isActivated()>();

        r4 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController>;

        $z1 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isDisplayWhiteBalanceSettingEnabled()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$NightDisplayTintController mNightDisplayTintController>;

        $z3 = virtualinvoke $r3.<com.android.server.display.color.ColorDisplayService$NightDisplayTintController: boolean isActivated()>();

        if $z3 != 0 goto label1;

        $z4 = specialinvoke r0.<com.android.server.display.color.ColorDisplayService: boolean isAccessibilityEnabled()>();

        if $z4 != 0 goto label1;

        $z5 = staticinvoke <com.android.server.display.color.DisplayTransformManager: boolean needsLinearColorMatrix()>();

        if $z5 == 0 goto label1;

        z6 = 1;

        goto label2;

     label1:
        z6 = 0;

     label2:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z6);

        virtualinvoke r4.<com.android.server.display.color.DisplayWhiteBalanceTintController: void setActivated(java.lang.Boolean)>($r5);

        $r6 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.DisplayWhiteBalanceTintController mDisplayWhiteBalanceTintController>;

        z7 = virtualinvoke $r6.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean isActivated()>();

        r7 = r0.<com.android.server.display.color.ColorDisplayService: com.android.server.display.color.ColorDisplayService$DisplayWhiteBalanceListener mDisplayWhiteBalanceListener>;

        if r7 == null goto label3;

        if z0 == z7 goto label3;

        interfaceinvoke r7.<com.android.server.display.color.ColorDisplayService$DisplayWhiteBalanceListener: void onDisplayWhiteBalanceStatusChanged(boolean)>(z7);

     label3:
        if z7 != 0 goto label4;

        $r2 = r0.<com.android.server.display.color.ColorDisplayService: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessage(int)>(5);

     label4:
        return;
    }
}
