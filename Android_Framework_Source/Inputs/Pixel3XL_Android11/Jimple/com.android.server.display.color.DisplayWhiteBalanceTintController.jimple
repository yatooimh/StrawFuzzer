final class com.android.server.display.color.DisplayWhiteBalanceTintController extends com.android.server.display.color.TintController
{
    private static final int COLORSPACE_MATRIX_LENGTH;
    private static final int NUM_DISPLAY_PRIMARIES_VALS;
    private static final int NUM_VALUES_PER_PRIMARY;
    private float[] mChromaticAdaptationMatrix;
    int mCurrentColorTemperature;
    private float[] mCurrentColorTemperatureXYZ;
    android.graphics.ColorSpace$Rgb mDisplayColorSpaceRGB;
    float[] mDisplayNominalWhiteXYZ;
    private java.lang.Boolean mIsAvailable;
    private final java.lang.Object mLock;
    private float[] mMatrixDisplayWhiteBalance;
    boolean mSetUp;
    private int mTemperatureDefault;
    int mTemperatureMax;
    int mTemperatureMin;

    void <init>()
    {
        com.android.server.display.color.DisplayWhiteBalanceTintController r0;
        java.lang.Object $r1;
        float[] $r2, $r3;

        r0 := @this: com.android.server.display.color.DisplayWhiteBalanceTintController;

        specialinvoke r0.<com.android.server.display.color.TintController: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: java.lang.Object mLock> = $r1;

        $r2 = newarray (float)[3];

        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mDisplayNominalWhiteXYZ> = $r2;

        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean mSetUp> = 0;

        $r3 = newarray (float)[16];

        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mMatrixDisplayWhiteBalance> = $r3;

        return;
    }

    private android.graphics.ColorSpace$Rgb getDisplayColorSpaceFromResources(android.content.res.Resources)
    {
        com.android.server.display.color.DisplayWhiteBalanceTintController r0;
        float[] r1, r2;
        int $i0, $i1, $i2, $i3, i4, i5;
        android.graphics.ColorSpace$Rgb $r3;
        java.lang.String $r4, $r5;
        float $f0, $f1;
        android.content.res.Resources r6;
        java.lang.String[] r7;

        r0 := @this: com.android.server.display.color.DisplayWhiteBalanceTintController;

        r6 := @parameter0: android.content.res.Resources;

        r7 = virtualinvoke r6.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236022);

        r1 = newarray (float)[9];

        r2 = newarray (float)[3];

        i4 = 0;

     label1:
        $i0 = lengthof r1;

        if i4 >= $i0 goto label2;

        $r5 = r7[i4];

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r5);

        r1[i4] = $f1;

        i4 = i4 + 1;

        goto label1;

     label2:
        i5 = 0;

     label3:
        $i1 = lengthof r2;

        if i5 >= $i1 goto label4;

        $i2 = lengthof r1;

        $i3 = $i2 + i5;

        $r4 = r7[$i3];

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4);

        r2[i5] = $f0;

        i5 = i5 + 1;

        goto label3;

     label4:
        $r3 = specialinvoke r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: android.graphics.ColorSpace$Rgb makeRgbColorSpaceFromXYZ(float[],float[])>(r1, r2);

        return $r3;
    }

    private android.graphics.ColorSpace$Rgb getDisplayColorSpaceFromSurfaceControl()
    {
        com.android.server.display.color.DisplayWhiteBalanceTintController r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11;
        android.view.SurfaceControl$CieXyz $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        float[] $r17, $r18;
        android.graphics.ColorSpace$Rgb $r19;
        android.os.IBinder r20;
        android.view.SurfaceControl$DisplayPrimaries r21;

        r0 := @this: com.android.server.display.color.DisplayWhiteBalanceTintController;

        r20 = staticinvoke <android.view.SurfaceControl: android.os.IBinder getInternalDisplayToken()>();

        if r20 != null goto label1;

        return null;

     label1:
        r21 = staticinvoke <android.view.SurfaceControl: android.view.SurfaceControl$DisplayPrimaries getDisplayNativePrimaries(android.os.IBinder)>(r20);

        if r21 == null goto label3;

        $r1 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz red>;

        if $r1 == null goto label3;

        $r2 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz green>;

        if $r2 == null goto label3;

        $r3 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz blue>;

        if $r3 == null goto label3;

        $r4 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz white>;

        if $r4 != null goto label2;

        goto label3;

     label2:
        $r5 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz red>;

        f0 = $r5.<android.view.SurfaceControl$CieXyz: float X>;

        $r6 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz red>;

        f1 = $r6.<android.view.SurfaceControl$CieXyz: float Y>;

        $r7 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz red>;

        f2 = $r7.<android.view.SurfaceControl$CieXyz: float Z>;

        $r8 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz green>;

        f3 = $r8.<android.view.SurfaceControl$CieXyz: float X>;

        $r9 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz green>;

        f4 = $r9.<android.view.SurfaceControl$CieXyz: float Y>;

        $r10 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz green>;

        f5 = $r10.<android.view.SurfaceControl$CieXyz: float Z>;

        $r11 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz blue>;

        f6 = $r11.<android.view.SurfaceControl$CieXyz: float X>;

        $r12 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz blue>;

        f7 = $r12.<android.view.SurfaceControl$CieXyz: float Y>;

        $r13 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz blue>;

        f8 = $r13.<android.view.SurfaceControl$CieXyz: float Z>;

        $r14 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz white>;

        f9 = $r14.<android.view.SurfaceControl$CieXyz: float X>;

        $r15 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz white>;

        f10 = $r15.<android.view.SurfaceControl$CieXyz: float Y>;

        $r16 = r21.<android.view.SurfaceControl$DisplayPrimaries: android.view.SurfaceControl$CieXyz white>;

        f11 = $r16.<android.view.SurfaceControl$CieXyz: float Z>;

        $r17 = newarray (float)[9];

        $r17[0] = f0;

        $r17[1] = f1;

        $r17[2] = f2;

        $r17[3] = f3;

        $r17[4] = f4;

        $r17[5] = f5;

        $r17[6] = f6;

        $r17[7] = f7;

        $r17[8] = f8;

        $r18 = newarray (float)[3];

        $r18[0] = f9;

        $r18[1] = f10;

        $r18[2] = f11;

        $r19 = specialinvoke r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: android.graphics.ColorSpace$Rgb makeRgbColorSpaceFromXYZ(float[],float[])>($r17, $r18);

        return $r19;

     label3:
        return null;
    }

    private boolean isColorMatrixCoeffValid(float)
    {
        com.android.server.display.color.DisplayWhiteBalanceTintController r0;
        float f0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.display.color.DisplayWhiteBalanceTintController;

        f0 := @parameter0: float;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f0);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private boolean isColorMatrixValid(float[])
    {
        com.android.server.display.color.DisplayWhiteBalanceTintController r0;
        float[] r1;
        int $i0, $i1, i2;
        float $f0;
        boolean $z0;

        r0 := @this: com.android.server.display.color.DisplayWhiteBalanceTintController;

        r1 := @parameter0: float[];

        if r1 == null goto label5;

        $i0 = lengthof r1;

        if $i0 == 9 goto label1;

        goto label5;

     label1:
        i2 = 0;

     label2:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label4;

        $f0 = r1[i2];

        $z0 = specialinvoke r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean isColorMatrixCoeffValid(float)>($f0);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 1;

     label5:
        return 0;
    }

    private android.graphics.ColorSpace$Rgb makeRgbColorSpaceFromXYZ(float[], float[])
    {
        com.android.server.display.color.DisplayWhiteBalanceTintController r0;
        float[] r1, r2;
        android.graphics.ColorSpace$Rgb $r3;

        r0 := @this: com.android.server.display.color.DisplayWhiteBalanceTintController;

        r1 := @parameter0: float[];

        r2 := @parameter1: float[];

        $r3 = new android.graphics.ColorSpace$Rgb;

        specialinvoke $r3.<android.graphics.ColorSpace$Rgb: void <init>(java.lang.String,float[],float[],double)>("Display Color Space", r1, r2, 2.200000047683716);

        return $r3;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.display.color.DisplayWhiteBalanceTintController r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r4, $r7, $r10, $r13, $r16, $r19, $r21, $r25, $r27, $r30, $r32, $r36, $r38, $r41, $r43;
        int $i0, $i1, $i2, $i3;
        float[] $r18, $r24, $r29, $r35, $r40;
        android.graphics.ColorSpace$Rgb $r23, $r34;
        java.lang.Throwable $r44;
        java.io.PrintWriter r45;
        java.lang.StringBuilder r46, r47, r48, r49, r50, r51, r52, r53, r54, r55;

        r0 := @this: com.android.server.display.color.DisplayWhiteBalanceTintController;

        r45 := @parameter0: java.io.PrintWriter;

        r1 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mSetUp = ");

        $z0 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean mSetUp>;

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $z1 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean mSetUp>;

        if $z1 != 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mTemperatureMin = ");

        $i0 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: int mTemperatureMin>;

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mTemperatureMax = ");

        $i1 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: int mTemperatureMax>;

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mTemperatureDefault = ");

        $i2 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: int mTemperatureDefault>;

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mCurrentColorTemperature = ");

        $i3 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: int mCurrentColorTemperature>;

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r16 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mCurrentColorTemperatureXYZ = ");

        $r18 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mCurrentColorTemperatureXYZ>;

        $r19 = staticinvoke <com.android.server.display.color.DisplayWhiteBalanceTintController: java.lang.String matrixToString(float[],int)>($r18, 3);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        r52 = new java.lang.StringBuilder;

        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mDisplayColorSpaceRGB RGB-to-XYZ = ");

        $r23 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: android.graphics.ColorSpace$Rgb mDisplayColorSpaceRGB>;

        $r24 = virtualinvoke $r23.<android.graphics.ColorSpace$Rgb: float[] getTransform()>();

        $r25 = staticinvoke <com.android.server.display.color.DisplayWhiteBalanceTintController: java.lang.String matrixToString(float[],int)>($r24, 3);

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mChromaticAdaptationMatrix = ");

        $r29 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mChromaticAdaptationMatrix>;

        $r30 = staticinvoke <com.android.server.display.color.DisplayWhiteBalanceTintController: java.lang.String matrixToString(float[],int)>($r29, 3);

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        r54 = new java.lang.StringBuilder;

        specialinvoke r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mDisplayColorSpaceRGB XYZ-to-RGB = ");

        $r34 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: android.graphics.ColorSpace$Rgb mDisplayColorSpaceRGB>;

        $r35 = virtualinvoke $r34.<android.graphics.ColorSpace$Rgb: float[] getInverseTransform()>();

        $r36 = staticinvoke <com.android.server.display.color.DisplayWhiteBalanceTintController: java.lang.String matrixToString(float[],int)>($r35, 3);

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.io.PrintWriter: void println(java.lang.String)>($r38);

        r55 = new java.lang.StringBuilder;

        specialinvoke r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mMatrixDisplayWhiteBalance = ");

        $r40 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mMatrixDisplayWhiteBalance>;

        $r41 = staticinvoke <com.android.server.display.color.DisplayWhiteBalanceTintController: java.lang.String matrixToString(float[],int)>($r40, 4);

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.io.PrintWriter: void println(java.lang.String)>($r43);

        exitmonitor r1;

     label4:
        return;

     label5:
        $r44 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r44;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int getLevel()
    {
        com.android.server.display.color.DisplayWhiteBalanceTintController r0;

        r0 := @this: com.android.server.display.color.DisplayWhiteBalanceTintController;

        return 125;
    }

    public float[] getMatrix()
    {
        com.android.server.display.color.DisplayWhiteBalanceTintController r0;
        boolean $z0, $z1;
        float[] r1;

        r0 := @this: com.android.server.display.color.DisplayWhiteBalanceTintController;

        $z0 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean mSetUp>;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean isActivated()>();

        if $z1 == 0 goto label1;

        r1 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mMatrixDisplayWhiteBalance>;

        goto label2;

     label1:
        r1 = <com.android.server.display.color.ColorDisplayService: float[] MATRIX_IDENTITY>;

     label2:
        return r1;
    }

    public boolean isAvailable(android.content.Context)
    {
        com.android.server.display.color.DisplayWhiteBalanceTintController r0;
        android.content.Context r1;
        java.lang.Boolean $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.display.color.DisplayWhiteBalanceTintController;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: java.lang.Boolean mIsAvailable>;

        if $r2 != null goto label1;

        $z1 = staticinvoke <android.hardware.display.ColorDisplayManager: boolean isDisplayWhiteBalanceAvailable(android.content.Context)>(r1);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: java.lang.Boolean mIsAvailable> = $r4;

     label1:
        $r3 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: java.lang.Boolean mIsAvailable>;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public void setMatrix(int)
    {
        com.android.server.display.color.DisplayWhiteBalanceTintController r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, $f8, $f9, $f10, f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19;
        boolean $z0, $z1;
        int $i0, $i1, i7, i8, i9, $i10;
        float[] $r1, $r2, $r3, $r8, $r14, $r16, $r17, r18, $r20, r21, $r23, r24, $r25;
        java.lang.StringBuilder $r4;
        java.lang.String $r9, $r11;
        java.lang.Throwable $r12;
        java.lang.Object r13;
        android.graphics.ColorSpace$Adaptation $r15;
        android.graphics.ColorSpace$Rgb $r19, $r22;

        r0 := @this: com.android.server.display.color.DisplayWhiteBalanceTintController;

        i7 := @parameter0: int;

        $z0 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean mSetUp>;

        if $z0 != 0 goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ColorDisplayService", "Can\'t set display white balance temperature: uninitialized");

        return;

     label01:
        $i0 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: int mTemperatureMin>;

        if i7 >= $i0 goto label02;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ColorDisplayService", "Requested display color temperature is below allowed minimum");

        i8 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: int mTemperatureMin>;

        goto label03;

     label02:
        i8 = i7;

        $i1 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: int mTemperatureMax>;

        if i7 <= $i1 goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ColorDisplayService", "Requested display color temperature is above allowed maximum");

        i8 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: int mTemperatureMax>;

     label03:
        r13 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: java.lang.Object mLock>;

        entermonitor r13;

     label04:
        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: int mCurrentColorTemperature> = i8;

        $r14 = staticinvoke <android.graphics.ColorSpace: float[] cctToXyz(int)>(i8);

        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mCurrentColorTemperatureXYZ> = $r14;

        $r15 = <android.graphics.ColorSpace$Adaptation: android.graphics.ColorSpace$Adaptation BRADFORD>;

        $r16 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mDisplayNominalWhiteXYZ>;

        $r17 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mCurrentColorTemperatureXYZ>;

        r18 = staticinvoke <android.graphics.ColorSpace: float[] chromaticAdaptation(android.graphics.ColorSpace$Adaptation,float[],float[])>($r15, $r16, $r17);

        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mChromaticAdaptationMatrix> = r18;

        $r19 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: android.graphics.ColorSpace$Rgb mDisplayColorSpaceRGB>;

        $r20 = virtualinvoke $r19.<android.graphics.ColorSpace$Rgb: float[] getTransform()>();

        r21 = staticinvoke <android.graphics.ColorSpace: float[] mul3x3(float[],float[])>(r18, $r20);

        $r22 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: android.graphics.ColorSpace$Rgb mDisplayColorSpaceRGB>;

        $r23 = virtualinvoke $r22.<android.graphics.ColorSpace$Rgb: float[] getInverseTransform()>();

        r24 = staticinvoke <android.graphics.ColorSpace: float[] mul3x3(float[],float[])>($r23, r21);

     label05:
        f11 = r24[0];

        f0 = r24[3];

        f1 = r24[6];

        f2 = r24[1];

        f3 = r24[4];

        f4 = r24[7];

        f5 = r24[2];

        f6 = r24[5];

        f7 = r24[8];

     label06:
        $f12 = f11 + f0;

        $f13 = $f12 + f1;

        $f14 = f2 + f3;

        $f15 = $f14 + f4;

        $f16 = staticinvoke <java.lang.Math: float max(float,float)>($f13, $f15);

        $f17 = f5 + f6;

        $f18 = $f17 + f7;

        f19 = staticinvoke <java.lang.Math: float max(float,float)>($f16, $f18);

        $r25 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mMatrixDisplayWhiteBalance>;

        staticinvoke <android.opengl.Matrix: void setIdentityM(float[],int)>($r25, 0);

     label07:
        i9 = 0;

     label08:
        $i10 = lengthof r24;

        if i9 >= $i10 goto label13;

     label09:
        $f8 = r24[i9];

        $f9 = $f8 / f19;

        r24[i9] = $f9;

     label10:
        $f10 = r24[i9];

        $z1 = specialinvoke r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean isColorMatrixCoeffValid(float)>($f10);

        if $z1 != 0 goto label12;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ColorDisplayService", "Invalid DWB color matrix");

        exitmonitor r13;

     label11:
        return;

     label12:
        i9 = i9 + 1;

        goto label08;

     label13:
        $r1 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mMatrixDisplayWhiteBalance>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r24, 0, $r1, 0, 3);

        $r2 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mMatrixDisplayWhiteBalance>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r24, 3, $r2, 4, 3);

        $r3 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mMatrixDisplayWhiteBalance>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r24, 6, $r3, 8, 3);

        exitmonitor r13;

     label14:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDisplayWhiteBalanceTemperatureMatrix: cct = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" matrix = ");

        $r8 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mMatrixDisplayWhiteBalance>;

        $r9 = staticinvoke <com.android.server.display.color.DisplayWhiteBalanceTintController: java.lang.String matrixToString(float[],int)>($r8, 16);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ColorDisplayService", $r11);

        return;

     label15:
        $r12 := @caughtexception;

     label16:
        exitmonitor r13;

     label17:
        throw $r12;

        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void setUp(android.content.Context, boolean)
    {
        com.android.server.display.color.DisplayWhiteBalanceTintController r0;
        boolean z0, $z1, $z2;
        java.lang.String[] r1;
        int i0, i1, $i2, i9, i10;
        float[] $r2, $r3, r11;
        java.lang.String $r4;
        float $f0;
        java.lang.Throwable $r5;
        android.content.Context r6;
        android.content.res.Resources r7;
        android.graphics.ColorSpace$Rgb r8, r9, r10;
        java.lang.Object r12;

        r0 := @this: com.android.server.display.color.DisplayWhiteBalanceTintController;

        r6 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean mSetUp> = 0;

        r7 = virtualinvoke r6.<android.content.Context: android.content.res.Resources getResources()>();

        r8 = specialinvoke r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: android.graphics.ColorSpace$Rgb getDisplayColorSpaceFromSurfaceControl()>();

        r9 = r8;

        if r8 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ColorDisplayService", "Failed to get display color space from SurfaceControl, trying res");

        r10 = specialinvoke r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: android.graphics.ColorSpace$Rgb getDisplayColorSpaceFromResources(android.content.res.Resources)>(r7);

        r9 = r10;

        if r10 != null goto label01;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ColorDisplayService", "Failed to get display color space from resources");

        return;

     label01:
        $r2 = virtualinvoke r9.<android.graphics.ColorSpace$Rgb: float[] getTransform()>();

        $z1 = specialinvoke r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean isColorMatrixValid(float[])>($r2);

        if $z1 != 0 goto label02;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ColorDisplayService", "Invalid display color space RGB-to-XYZ transform");

        return;

     label02:
        $r3 = virtualinvoke r9.<android.graphics.ColorSpace$Rgb: float[] getInverseTransform()>();

        $z2 = specialinvoke r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean isColorMatrixValid(float[])>($r3);

        if $z2 != 0 goto label03;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ColorDisplayService", "Invalid display color space XYZ-to-RGB transform");

        return;

     label03:
        r1 = virtualinvoke r7.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236021);

        r11 = newarray (float)[3];

        i9 = 0;

     label04:
        $i2 = lengthof r1;

        if i9 >= $i2 goto label05;

        $r4 = r1[i9];

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4);

        r11[i9] = $f0;

        i9 = i9 + 1;

        goto label04;

     label05:
        i0 = virtualinvoke r7.<android.content.res.Resources: int getInteger(int)>(17694795);

        if i0 > 0 goto label06;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ColorDisplayService", "Display white balance minimum temperature must be greater than 0");

        return;

     label06:
        i10 = virtualinvoke r7.<android.content.res.Resources: int getInteger(int)>(17694794);

        if i10 >= i0 goto label07;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ColorDisplayService", "Display white balance max temp must be greater or equal to min");

        return;

     label07:
        i1 = virtualinvoke r7.<android.content.res.Resources: int getInteger(int)>(17694792);

        r12 = r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: java.lang.Object mLock>;

        entermonitor r12;

     label08:
        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: android.graphics.ColorSpace$Rgb mDisplayColorSpaceRGB> = r9;

        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: float[] mDisplayNominalWhiteXYZ> = r11;

        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: int mTemperatureMin> = i0;

        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: int mTemperatureMax> = i10;

        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: int mTemperatureDefault> = i1;

        r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: boolean mSetUp> = 1;

        exitmonitor r12;

     label09:
        virtualinvoke r0.<com.android.server.display.color.DisplayWhiteBalanceTintController: void setMatrix(int)>(i1);

        return;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r12;

     label12:
        throw $r5;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public static void <clinit>()
    {
        <com.android.server.display.color.DisplayWhiteBalanceTintController: int NUM_VALUES_PER_PRIMARY> = 3;

        <com.android.server.display.color.DisplayWhiteBalanceTintController: int NUM_DISPLAY_PRIMARIES_VALS> = 12;

        <com.android.server.display.color.DisplayWhiteBalanceTintController: int COLORSPACE_MATRIX_LENGTH> = 9;

        return;
    }
}
