abstract class com.android.server.display.color.TintController extends java.lang.Object
{
    private com.android.server.display.color.ColorDisplayService$TintValueAnimator mAnimator;
    private java.lang.Boolean mIsActivated;

    void <init>()
    {
        com.android.server.display.color.TintController r0;

        r0 := @this: com.android.server.display.color.TintController;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String matrixToString(float[], int)
    {
        float[] r0;
        int i0, $i2, $i3, i4;
        java.lang.StringBuilder $r1, $r7;
        java.lang.String $r6, $r8, $r11;
        java.lang.Object[] $r9;
        float $f0;
        java.lang.Float $r10;
        boolean z0;

        r0 := @parameter0: float[];

        i0 := @parameter1: int;

        z0 = 0;

        if r0 == null goto label5;

        if i0 > 0 goto label1;

        goto label5;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        i4 = 0;

     label2:
        $i2 = lengthof r0;

        if i4 >= $i2 goto label4;

        $i3 = i4 % i0;

        if $i3 != 0 goto label3;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n      ");

     label3:
        $r9 = newarray (java.lang.Object)[1];

        $f0 = r0[i4];

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r9[0] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%9.6f", $r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        i4 = i4 + 1;

        goto label2;

     label4:
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label5:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments when formatting matrix to string, matrix is null: ");

        if r0 != null goto label6;

        z0 = 1;

     label6:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" columns: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ColorDisplayService", $r6);

        return "";
    }

    public void cancelAnimator()
    {
        com.android.server.display.color.TintController r0;
        com.android.server.display.color.ColorDisplayService$TintValueAnimator r1;

        r0 := @this: com.android.server.display.color.TintController;

        r1 = r0.<com.android.server.display.color.TintController: com.android.server.display.color.ColorDisplayService$TintValueAnimator mAnimator>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.display.color.ColorDisplayService$TintValueAnimator: void cancel()>();

     label1:
        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.display.color.TintController r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.display.color.TintController;

        r1 := @parameter0: java.io.PrintWriter;

        return;
    }

    public void endAnimator()
    {
        com.android.server.display.color.TintController r0;
        com.android.server.display.color.ColorDisplayService$TintValueAnimator r1;

        r0 := @this: com.android.server.display.color.TintController;

        r1 = r0.<com.android.server.display.color.TintController: com.android.server.display.color.ColorDisplayService$TintValueAnimator mAnimator>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.display.color.ColorDisplayService$TintValueAnimator: void end()>();

        r0.<com.android.server.display.color.TintController: com.android.server.display.color.ColorDisplayService$TintValueAnimator mAnimator> = null;

     label1:
        return;
    }

    public com.android.server.display.color.ColorDisplayService$TintValueAnimator getAnimator()
    {
        com.android.server.display.color.TintController r0;
        com.android.server.display.color.ColorDisplayService$TintValueAnimator $r1;

        r0 := @this: com.android.server.display.color.TintController;

        $r1 = r0.<com.android.server.display.color.TintController: com.android.server.display.color.ColorDisplayService$TintValueAnimator mAnimator>;

        return $r1;
    }

    public abstract int getLevel();

    public abstract float[] getMatrix();

    public boolean isActivated()
    {
        com.android.server.display.color.TintController r0;
        java.lang.Boolean r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.display.color.TintController;

        r1 = r0.<com.android.server.display.color.TintController: java.lang.Boolean mIsActivated>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isActivatedStateNotSet()
    {
        com.android.server.display.color.TintController r0;
        java.lang.Boolean $r1;
        boolean z0;

        r0 := @this: com.android.server.display.color.TintController;

        $r1 = r0.<com.android.server.display.color.TintController: java.lang.Boolean mIsActivated>;

        if $r1 != null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public abstract boolean isAvailable(android.content.Context);

    public void setActivated(java.lang.Boolean)
    {
        com.android.server.display.color.TintController r0;
        java.lang.Boolean r1;

        r0 := @this: com.android.server.display.color.TintController;

        r1 := @parameter0: java.lang.Boolean;

        r0.<com.android.server.display.color.TintController: java.lang.Boolean mIsActivated> = r1;

        return;
    }

    public void setAnimator(com.android.server.display.color.ColorDisplayService$TintValueAnimator)
    {
        com.android.server.display.color.TintController r0;
        com.android.server.display.color.ColorDisplayService$TintValueAnimator r1;

        r0 := @this: com.android.server.display.color.TintController;

        r1 := @parameter0: com.android.server.display.color.ColorDisplayService$TintValueAnimator;

        r0.<com.android.server.display.color.TintController: com.android.server.display.color.ColorDisplayService$TintValueAnimator mAnimator> = r1;

        return;
    }

    public abstract void setMatrix(int);

    public abstract void setUp(android.content.Context, boolean);
}
