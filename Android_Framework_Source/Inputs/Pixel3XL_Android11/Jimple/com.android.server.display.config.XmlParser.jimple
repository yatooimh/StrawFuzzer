public class com.android.server.display.config.XmlParser extends java.lang.Object
{

    public void <init>()
    {
        com.android.server.display.config.XmlParser r0;

        r0 := @this: com.android.server.display.config.XmlParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.server.display.config.DisplayConfiguration read(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException, javax.xml.datatype.DatatypeConfigurationException
    {
        java.io.InputStream r0;
        org.xmlpull.v1.XmlPullParser r1;
        org.xmlpull.v1.XmlPullParserFactory $r2;
        java.lang.String $r3;
        boolean $z0;
        com.android.server.display.config.DisplayConfiguration $r4;

        r0 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        r1 = virtualinvoke $r2.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", 1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r0, null);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("displayConfiguration");

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <com.android.server.display.config.DisplayConfiguration: com.android.server.display.config.DisplayConfiguration read(org.xmlpull.v1.XmlPullParser)>(r1);

        return $r4;

     label1:
        return null;
    }

    public static java.lang.String readText(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int $i0;
        java.lang.String r1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = "";

        $i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 != 4 goto label1;

        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

     label1:
        return r1;
    }

    public static void skip(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, $i1, i2;
        java.lang.IllegalStateException $r1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 != 2 goto label6;

        i2 = 1;

     label1:
        if i2 == 0 goto label5;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        goto label4;

     label2:
        i2 = i2 + -1;

        goto label4;

     label3:
        i2 = i2 + 1;

     label4:
        goto label1;

     label5:
        return;

     label6:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;
    }
}
