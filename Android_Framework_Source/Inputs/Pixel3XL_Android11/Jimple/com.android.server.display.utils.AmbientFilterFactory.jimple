public class com.android.server.display.utils.AmbientFilterFactory extends java.lang.Object
{

    private void <init>()
    {
        com.android.server.display.utils.AmbientFilterFactory r0;

        r0 := @this: com.android.server.display.utils.AmbientFilterFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.server.display.utils.AmbientFilter createAmbientFilter(java.lang.String, int, float)
    {
        java.lang.String r0;
        int i0;
        float f0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        com.android.server.display.utils.AmbientFilter$WeightedMovingAverageAmbientFilter $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 != 0 goto label1;

        $r2 = new com.android.server.display.utils.AmbientFilter$WeightedMovingAverageAmbientFilter;

        specialinvoke $r2.<com.android.server.display.utils.AmbientFilter$WeightedMovingAverageAmbientFilter: void <init>(java.lang.String,int,float)>(r0, i0, f0);

        return $r2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("missing configurations: expected config_displayWhiteBalanceBrightnessFilterIntercept");

        throw $r1;
    }

    public static com.android.server.display.utils.AmbientFilter createBrightnessFilter(java.lang.String, android.content.res.Resources)
    {
        java.lang.String r0;
        android.content.res.Resources r1;
        int $i0;
        float $f0;
        com.android.server.display.utils.AmbientFilter $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.res.Resources;

        $i0 = virtualinvoke r1.<android.content.res.Resources: int getInteger(int)>(17694790);

        $f0 = staticinvoke <com.android.server.display.utils.AmbientFilterFactory: float getFloat(android.content.res.Resources,int)>(r1, 17105056);

        $r2 = staticinvoke <com.android.server.display.utils.AmbientFilterFactory: com.android.server.display.utils.AmbientFilter createAmbientFilter(java.lang.String,int,float)>(r0, $i0, $f0);

        return $r2;
    }

    public static com.android.server.display.utils.AmbientFilter createColorTemperatureFilter(java.lang.String, android.content.res.Resources)
    {
        java.lang.String r0;
        android.content.res.Resources r1;
        int $i0;
        float $f0;
        com.android.server.display.utils.AmbientFilter $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.res.Resources;

        $i0 = virtualinvoke r1.<android.content.res.Resources: int getInteger(int)>(17694793);

        $f0 = staticinvoke <com.android.server.display.utils.AmbientFilterFactory: float getFloat(android.content.res.Resources,int)>(r1, 17105057);

        $r2 = staticinvoke <com.android.server.display.utils.AmbientFilterFactory: com.android.server.display.utils.AmbientFilter createAmbientFilter(java.lang.String,int,float)>(r0, $i0, $f0);

        return $r2;
    }

    private static float getFloat(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0, $i1;
        android.util.TypedValue $r2;
        float $f0;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, $r2, 1);

        $i1 = $r2.<android.util.TypedValue: int type>;

        if $i1 == 4 goto label1;

        return #NaNF;

     label1:
        $f0 = virtualinvoke $r2.<android.util.TypedValue: float getFloat()>();

        return $f0;
    }
}
