class com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor extends com.android.server.display.whitebalance.AmbientSensor
{
    private static final java.lang.String TAG;
    private com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks mCallbacks;

    void <init>(android.os.Handler, android.hardware.SensorManager, java.lang.String, int)
    {
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor r0;
        java.lang.String r1, $r9, $r11;
        int i0;
        android.hardware.SensorManager $r2, r13;
        java.util.List $r3;
        boolean $z0, $z1;
        android.hardware.Sensor $r4, r15;
        java.lang.StringBuilder $r5;
        java.lang.IllegalStateException $r8;
        java.lang.Object $r10;
        android.os.Handler r12;
        java.util.Iterator r14;

        r0 := @this: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor;

        r12 := @parameter0: android.os.Handler;

        r13 := @parameter1: android.hardware.SensorManager;

        r1 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.server.display.whitebalance.AmbientSensor: void <init>(java.lang.String,android.os.Handler,android.hardware.SensorManager,int)>("AmbientColorTemperatureSensor", r12, r13, i0);

        r0.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: android.hardware.Sensor mSensor> = null;

        $r2 = r0.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: android.hardware.SensorManager mSensorManager>;

        $r3 = virtualinvoke $r2.<android.hardware.SensorManager: java.util.List getSensorList(int)>(-1);

        r14 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (android.hardware.Sensor) $r10;

        $r11 = virtualinvoke r15.<android.hardware.Sensor: java.lang.String getStringType()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        r0.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: android.hardware.Sensor mSensor> = r15;

        goto label3;

     label2:
        goto label1;

     label3:
        $r4 = r0.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: android.hardware.Sensor mSensor>;

        if $r4 == null goto label4;

        r0.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks mCallbacks> = null;

        return;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot find sensor ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r3;
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks $r5;
        java.lang.String $r7;

        r0 := @this: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor;

        r1 := @parameter0: java.io.PrintWriter;

        specialinvoke r0.<com.android.server.display.whitebalance.AmbientSensor: void dump(java.io.PrintWriter)>(r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mCallbacks=");

        $r5 = r0.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks mCallbacks>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return;
    }

    public boolean setCallbacks(com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks)
    {
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor r0;
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks r1, $r2;

        r0 := @this: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor;

        r1 := @parameter0: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks;

        $r2 = r0.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks mCallbacks>;

        if $r2 != r1 goto label1;

        return 0;

     label1:
        r0.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks mCallbacks> = r1;

        return 1;
    }

    protected void update(float)
    {
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor r0;
        float f0;
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks r1;

        r0 := @this: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor;

        f0 := @parameter0: float;

        r1 = r0.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks mCallbacks>;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks: void onAmbientColorTemperatureChanged(float)>(f0);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: java.lang.String TAG> = "AmbientColorTemperatureSensor";

        return;
    }
}
