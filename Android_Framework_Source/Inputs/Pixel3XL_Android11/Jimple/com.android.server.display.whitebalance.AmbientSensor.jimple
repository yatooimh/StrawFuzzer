abstract class com.android.server.display.whitebalance.AmbientSensor extends java.lang.Object
{
    private static final int HISTORY_SIZE;
    private boolean mEnabled;
    private int mEventsCount;
    private com.android.server.display.utils.History mEventsHistory;
    private final android.os.Handler mHandler;
    private android.hardware.SensorEventListener mListener;
    protected boolean mLoggingEnabled;
    private int mRate;
    protected android.hardware.Sensor mSensor;
    protected final android.hardware.SensorManager mSensorManager;
    protected java.lang.String mTag;

    void <init>(java.lang.String, android.os.Handler, android.hardware.SensorManager, int)
    {
        com.android.server.display.whitebalance.AmbientSensor r0;
        java.lang.String r1;
        android.os.Handler r2;
        android.hardware.SensorManager r3;
        int i0;
        com.android.server.display.whitebalance.AmbientSensor$1 $r4;
        com.android.server.display.utils.History $r5;

        r0 := @this: com.android.server.display.whitebalance.AmbientSensor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.hardware.SensorManager;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new com.android.server.display.whitebalance.AmbientSensor$1;

        specialinvoke $r4.<com.android.server.display.whitebalance.AmbientSensor$1: void <init>(com.android.server.display.whitebalance.AmbientSensor)>(r0);

        r0.<com.android.server.display.whitebalance.AmbientSensor: android.hardware.SensorEventListener mListener> = $r4;

        staticinvoke <com.android.server.display.whitebalance.AmbientSensor: void validateArguments(android.os.Handler,android.hardware.SensorManager,int)>(r2, r3, i0);

        r0.<com.android.server.display.whitebalance.AmbientSensor: java.lang.String mTag> = r1;

        r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mLoggingEnabled> = 0;

        r0.<com.android.server.display.whitebalance.AmbientSensor: android.os.Handler mHandler> = r2;

        r0.<com.android.server.display.whitebalance.AmbientSensor: android.hardware.SensorManager mSensorManager> = r3;

        r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mEnabled> = 0;

        r0.<com.android.server.display.whitebalance.AmbientSensor: int mRate> = i0;

        r0.<com.android.server.display.whitebalance.AmbientSensor: int mEventsCount> = 0;

        $r5 = new com.android.server.display.utils.History;

        specialinvoke $r5.<com.android.server.display.utils.History: void <init>(int)>(50);

        r0.<com.android.server.display.whitebalance.AmbientSensor: com.android.server.display.utils.History mEventsHistory> = $r5;

        return;
    }

    static void access$000(com.android.server.display.whitebalance.AmbientSensor, float)
    {
        com.android.server.display.whitebalance.AmbientSensor r0;
        float f0;

        r0 := @parameter0: com.android.server.display.whitebalance.AmbientSensor;

        f0 := @parameter1: float;

        specialinvoke r0.<com.android.server.display.whitebalance.AmbientSensor: void handleNewEvent(float)>(f0);

        return;
    }

    private boolean disable()
    {
        com.android.server.display.whitebalance.AmbientSensor r0;
        boolean $z0, $z1;
        java.lang.String $r1;

        r0 := @this: com.android.server.display.whitebalance.AmbientSensor;

        $z0 = r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mEnabled>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mLoggingEnabled>;

        if $z1 == 0 goto label2;

        $r1 = r0.<com.android.server.display.whitebalance.AmbientSensor: java.lang.String mTag>;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r1, "disabling");

     label2:
        r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mEnabled> = 0;

        r0.<com.android.server.display.whitebalance.AmbientSensor: int mEventsCount> = 0;

        specialinvoke r0.<com.android.server.display.whitebalance.AmbientSensor: void stopListening()>();

        return 1;
    }

    private boolean enable()
    {
        com.android.server.display.whitebalance.AmbientSensor r0;
        boolean $z0, $z1;
        java.lang.String $r1;

        r0 := @this: com.android.server.display.whitebalance.AmbientSensor;

        $z0 = r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mEnabled>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mLoggingEnabled>;

        if $z1 == 0 goto label2;

        $r1 = r0.<com.android.server.display.whitebalance.AmbientSensor: java.lang.String mTag>;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r1, "enabling");

     label2:
        r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mEnabled> = 1;

        specialinvoke r0.<com.android.server.display.whitebalance.AmbientSensor: void startListening()>();

        return 1;
    }

    private void handleNewEvent(float)
    {
        com.android.server.display.whitebalance.AmbientSensor r0;
        float f0;
        java.lang.String r1, $r7;
        boolean $z0, $z1;
        int $i0, $i1;
        com.android.server.display.utils.History $r3;
        java.lang.StringBuilder $r4;

        r0 := @this: com.android.server.display.whitebalance.AmbientSensor;

        f0 := @parameter0: float;

        $z0 = r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mEnabled>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mLoggingEnabled>;

        if $z1 == 0 goto label2;

        r1 = r0.<com.android.server.display.whitebalance.AmbientSensor: java.lang.String mTag>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handle new event: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r1, $r7);

     label2:
        $i0 = r0.<com.android.server.display.whitebalance.AmbientSensor: int mEventsCount>;

        $i1 = $i0 + 1;

        r0.<com.android.server.display.whitebalance.AmbientSensor: int mEventsCount> = $i1;

        $r3 = r0.<com.android.server.display.whitebalance.AmbientSensor: com.android.server.display.utils.History mEventsHistory>;

        virtualinvoke $r3.<com.android.server.display.utils.History: void add(float)>(f0);

        virtualinvoke r0.<com.android.server.display.whitebalance.AmbientSensor: void update(float)>(f0);

        return;
    }

    private void startListening()
    {
        com.android.server.display.whitebalance.AmbientSensor r0;
        android.hardware.SensorManager r1;
        int $i0, $i1;
        android.os.Handler $r2;
        android.hardware.Sensor $r3;
        android.hardware.SensorEventListener $r4;

        r0 := @this: com.android.server.display.whitebalance.AmbientSensor;

        r1 = r0.<com.android.server.display.whitebalance.AmbientSensor: android.hardware.SensorManager mSensorManager>;

        if r1 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.display.whitebalance.AmbientSensor: android.hardware.SensorEventListener mListener>;

        $r3 = r0.<com.android.server.display.whitebalance.AmbientSensor: android.hardware.Sensor mSensor>;

        $i0 = r0.<com.android.server.display.whitebalance.AmbientSensor: int mRate>;

        $i1 = $i0 * 1000;

        $r2 = r0.<com.android.server.display.whitebalance.AmbientSensor: android.os.Handler mHandler>;

        virtualinvoke r1.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler)>($r4, $r3, $i1, $r2);

        return;
    }

    private void stopListening()
    {
        com.android.server.display.whitebalance.AmbientSensor r0;
        android.hardware.SensorManager r1;
        android.hardware.SensorEventListener $r2;

        r0 := @this: com.android.server.display.whitebalance.AmbientSensor;

        r1 = r0.<com.android.server.display.whitebalance.AmbientSensor: android.hardware.SensorManager mSensorManager>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.display.whitebalance.AmbientSensor: android.hardware.SensorEventListener mListener>;

        virtualinvoke r1.<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>($r2);

        return;
    }

    private static void validateArguments(android.os.Handler, android.hardware.SensorManager, int)
    {
        android.os.Handler r0;
        android.hardware.SensorManager r1;
        int i0;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: android.hardware.SensorManager;

        i0 := @parameter2: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, "handler cannot be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "sensorManager cannot be null");

        if i0 <= 0 goto label1;

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("rate must be positive");

        throw $r4;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.display.whitebalance.AmbientSensor r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r7, $r11, $r16, $r21, $r26, $r30, $r34, $r38;
        java.lang.String $r4, $r6, $r10, $r15, $r20, $r25, $r29, $r33, $r37, $r42;
        boolean $z0, $z1;
        android.os.Handler $r13;
        android.hardware.SensorManager $r18;
        android.hardware.Sensor $r23;
        int $i0, $i1;
        com.android.server.display.utils.History $r40;

        r0 := @this: com.android.server.display.whitebalance.AmbientSensor;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r4 = r0.<com.android.server.display.whitebalance.AmbientSensor: java.lang.String mTag>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mLoggingEnabled=");

        $z0 = r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mLoggingEnabled>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mHandler=");

        $r13 = r0.<com.android.server.display.whitebalance.AmbientSensor: android.os.Handler mHandler>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mSensorManager=");

        $r18 = r0.<com.android.server.display.whitebalance.AmbientSensor: android.hardware.SensorManager mSensorManager>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mSensor=");

        $r23 = r0.<com.android.server.display.whitebalance.AmbientSensor: android.hardware.Sensor mSensor>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mEnabled=");

        $z1 = r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mEnabled>;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mRate=");

        $i0 = r0.<com.android.server.display.whitebalance.AmbientSensor: int mRate>;

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mEventsCount=");

        $i1 = r0.<com.android.server.display.whitebalance.AmbientSensor: int mEventsCount>;

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mEventsHistory=");

        $r40 = r0.<com.android.server.display.whitebalance.AmbientSensor: com.android.server.display.utils.History mEventsHistory>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r42);

        return;
    }

    public boolean setEnabled(boolean)
    {
        com.android.server.display.whitebalance.AmbientSensor r0;
        boolean z0, $z1, $z2;

        r0 := @this: com.android.server.display.whitebalance.AmbientSensor;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.display.whitebalance.AmbientSensor: boolean enable()>();

        return $z2;

     label1:
        $z1 = specialinvoke r0.<com.android.server.display.whitebalance.AmbientSensor: boolean disable()>();

        return $z1;
    }

    public boolean setLoggingEnabled(boolean)
    {
        com.android.server.display.whitebalance.AmbientSensor r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.display.whitebalance.AmbientSensor;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mLoggingEnabled>;

        if $z1 != z0 goto label1;

        return 0;

     label1:
        r0.<com.android.server.display.whitebalance.AmbientSensor: boolean mLoggingEnabled> = z0;

        return 1;
    }

    protected abstract void update(float);

    public static void <clinit>()
    {
        <com.android.server.display.whitebalance.AmbientSensor: int HISTORY_SIZE> = 50;

        return;
    }
}
