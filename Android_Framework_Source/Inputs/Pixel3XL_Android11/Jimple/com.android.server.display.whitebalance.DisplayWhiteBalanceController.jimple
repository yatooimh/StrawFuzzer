public class com.android.server.display.whitebalance.DisplayWhiteBalanceController extends java.lang.Object implements com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor$Callbacks, com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks
{
    private static final int HISTORY_SIZE;
    protected static final java.lang.String TAG;
    private float mAmbientColorTemperature;
    private com.android.server.display.utils.History mAmbientColorTemperatureHistory;
    private float mAmbientColorTemperatureOverride;
    private android.util.Spline$LinearSpline mAmbientToDisplayColorTemperatureSpline;
    com.android.server.display.utils.AmbientFilter mBrightnessFilter;
    private com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor mBrightnessSensor;
    private com.android.server.display.whitebalance.DisplayWhiteBalanceController$Callbacks mCallbacks;
    private com.android.server.display.color.ColorDisplayService$ColorDisplayServiceInternal mColorDisplayServiceInternal;
    com.android.server.display.utils.AmbientFilter mColorTemperatureFilter;
    private com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor mColorTemperatureSensor;
    private boolean mEnabled;
    private android.util.Spline$LinearSpline mHighLightAmbientBrightnessToBiasSpline;
    private final float mHighLightAmbientColorTemperature;
    private float mLastAmbientColorTemperature;
    private float mLatestAmbientBrightness;
    private float mLatestAmbientColorTemperature;
    private float mLatestHighLightBias;
    private float mLatestLowLightBias;
    protected boolean mLoggingEnabled;
    private android.util.Spline$LinearSpline mLowLightAmbientBrightnessToBiasSpline;
    private final float mLowLightAmbientColorTemperature;
    float mPendingAmbientColorTemperature;
    private com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler mThrottler;

    public void <init>(com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor, com.android.server.display.utils.AmbientFilter, com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor, com.android.server.display.utils.AmbientFilter, com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler, float[], float[], float, float[], float[], float, float[], float[])
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceController r0;
        com.android.server.display.utils.AmbientFilter r1, r3;
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor r2;
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler r4;
        float[] r5, r6, r7, r8, r9, r10;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        com.android.server.display.utils.History $r11;
        android.util.Spline$LinearSpline $r12, $r13, $r14, r22, r24, r25, r27, $r28, r29;
        int $i0, $i1;
        byte $b2, $b4, $b6, $b7, $b9;
        java.lang.Exception $r15, $r16, $r17, $r18, $r19, $r20, r23, r26, r30;
        com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor r21;
        java.lang.Object $r31;
        com.android.server.display.color.ColorDisplayService$ColorDisplayServiceInternal $r32;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        r21 := @parameter0: com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor;

        r1 := @parameter1: com.android.server.display.utils.AmbientFilter;

        r2 := @parameter2: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor;

        r3 := @parameter3: com.android.server.display.utils.AmbientFilter;

        r4 := @parameter4: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler;

        r5 := @parameter5: float[];

        r6 := @parameter6: float[];

        f0 := @parameter7: float;

        r7 := @parameter8: float[];

        r8 := @parameter9: float[];

        f1 := @parameter10: float;

        r9 := @parameter11: float[];

        r10 := @parameter12: float[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: void validateArguments(com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor,com.android.server.display.utils.AmbientFilter,com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor,com.android.server.display.utils.AmbientFilter,com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler)>(r21, r1, r2, r3, r4);

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mLoggingEnabled> = 0;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mEnabled> = 0;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.DisplayWhiteBalanceController$Callbacks mCallbacks> = null;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor mBrightnessSensor> = r21;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.AmbientFilter mBrightnessFilter> = r1;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor mColorTemperatureSensor> = r2;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.AmbientFilter mColorTemperatureFilter> = r3;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler mThrottler> = r4;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLowLightAmbientColorTemperature> = f0;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mHighLightAmbientColorTemperature> = f1;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperature> = -1.0F;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mPendingAmbientColorTemperature> = -1.0F;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLastAmbientColorTemperature> = -1.0F;

        $r11 = new com.android.server.display.utils.History;

        specialinvoke $r11.<com.android.server.display.utils.History: void <init>(int)>(50);

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.History mAmbientColorTemperatureHistory> = $r11;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperatureOverride> = -1.0F;

     label01:
        r22 = new android.util.Spline$LinearSpline;

     label02:
        specialinvoke r22.<android.util.Spline$LinearSpline: void <init>(float[],float[])>(r5, r6);

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mLowLightAmbientBrightnessToBiasSpline> = r22;

     label03:
        goto label07;

     label04:
        $r16 := @caughtexception;

        r23 = $r16;

        goto label06;

     label05:
        $r18 := @caughtexception;

        r23 = $r18;

     label06:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DisplayWhiteBalanceController", "failed to create low light ambient brightness to bias spline.", r23);

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mLowLightAmbientBrightnessToBiasSpline> = null;

     label07:
        r24 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mLowLightAmbientBrightnessToBiasSpline>;

        if r24 == null goto label09;

        $f6 = virtualinvoke r24.<android.util.Spline$LinearSpline: float interpolate(float)>(0.0F);

        $b7 = $f6 cmpl 0.0F;

        if $b7 != 0 goto label08;

        $r14 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mLowLightAmbientBrightnessToBiasSpline>;

        $f7 = virtualinvoke $r14.<android.util.Spline$LinearSpline: float interpolate(float)>(#InfinityF);

        $b9 = $f7 cmpl 1.0F;

        if $b9 == 0 goto label09;

     label08:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayWhiteBalanceController", "invalid low light ambient brightness to bias spline, bias must begin at 0.0 and end at 1.0.");

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mLowLightAmbientBrightnessToBiasSpline> = null;

     label09:
        r25 = new android.util.Spline$LinearSpline;

     label10:
        specialinvoke r25.<android.util.Spline$LinearSpline: void <init>(float[],float[])>(r7, r8);

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mHighLightAmbientBrightnessToBiasSpline> = r25;

     label11:
        goto label15;

     label12:
        $r20 := @caughtexception;

        r26 = $r20;

        goto label14;

     label13:
        $r19 := @caughtexception;

        r26 = $r19;

     label14:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DisplayWhiteBalanceController", "failed to create high light ambient brightness to bias spline.", r26);

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mHighLightAmbientBrightnessToBiasSpline> = null;

     label15:
        r27 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mHighLightAmbientBrightnessToBiasSpline>;

        if r27 == null goto label17;

        $f4 = virtualinvoke r27.<android.util.Spline$LinearSpline: float interpolate(float)>(0.0F);

        $b4 = $f4 cmpl 0.0F;

        if $b4 != 0 goto label16;

        $r13 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mHighLightAmbientBrightnessToBiasSpline>;

        $f5 = virtualinvoke $r13.<android.util.Spline$LinearSpline: float interpolate(float)>(#InfinityF);

        $b6 = $f5 cmpl 1.0F;

        if $b6 == 0 goto label17;

     label16:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayWhiteBalanceController", "invalid high light ambient brightness to bias spline, bias must begin at 0.0 and end at 1.0.");

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mHighLightAmbientBrightnessToBiasSpline> = null;

     label17:
        $r28 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mLowLightAmbientBrightnessToBiasSpline>;

        if $r28 == null goto label18;

        $r12 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mHighLightAmbientBrightnessToBiasSpline>;

        if $r12 == null goto label18;

        $i0 = lengthof r5;

        $i1 = $i0 - 1;

        $f3 = r5[$i1];

        $f2 = r7[0];

        $b2 = $f3 cmpl $f2;

        if $b2 <= 0 goto label18;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayWhiteBalanceController", "invalid low light and high light ambient brightness to bias spline combination, defined domains must not intersect.");

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mLowLightAmbientBrightnessToBiasSpline> = null;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mHighLightAmbientBrightnessToBiasSpline> = null;

     label18:
        r29 = new android.util.Spline$LinearSpline;

     label19:
        specialinvoke r29.<android.util.Spline$LinearSpline: void <init>(float[],float[])>(r9, r10);

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mAmbientToDisplayColorTemperatureSpline> = r29;

     label20:
        goto label24;

     label21:
        $r17 := @caughtexception;

        r30 = $r17;

        goto label23;

     label22:
        $r15 := @caughtexception;

        r30 = $r15;

     label23:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DisplayWhiteBalanceController", "failed to create ambient to display color temperature spline.", r30);

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mAmbientToDisplayColorTemperatureSpline> = null;

     label24:
        $r31 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/display/color/ColorDisplayService$ColorDisplayServiceInternal;");

        $r32 = (com.android.server.display.color.ColorDisplayService$ColorDisplayServiceInternal) $r31;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.color.ColorDisplayService$ColorDisplayServiceInternal mColorDisplayServiceInternal> = $r32;

        return;

        catch java.lang.Exception from label01 to label02 with label05;
        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Exception from label18 to label19 with label22;
        catch java.lang.Exception from label19 to label20 with label21;
    }

    private boolean disable()
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceController r0;
        boolean $z0, $z1;
        com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor $r1;
        com.android.server.display.utils.AmbientFilter $r2, $r4;
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor $r3;
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler $r5;
        com.android.server.display.color.ColorDisplayService$ColorDisplayServiceInternal $r6;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        $z0 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mEnabled>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mLoggingEnabled>;

        if $z1 == 0 goto label2;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayWhiteBalanceController", "disabling");

     label2:
        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mEnabled> = 0;

        $r1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor mBrightnessSensor>;

        virtualinvoke $r1.<com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor: boolean setEnabled(boolean)>(0);

        $r2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.AmbientFilter mBrightnessFilter>;

        virtualinvoke $r2.<com.android.server.display.utils.AmbientFilter: void clear()>();

        $r3 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor mColorTemperatureSensor>;

        virtualinvoke $r3.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: boolean setEnabled(boolean)>(0);

        $r4 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.AmbientFilter mColorTemperatureFilter>;

        virtualinvoke $r4.<com.android.server.display.utils.AmbientFilter: void clear()>();

        $r5 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler mThrottler>;

        virtualinvoke $r5.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: void clear()>();

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperature> = -1.0F;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mPendingAmbientColorTemperature> = -1.0F;

        $r6 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.color.ColorDisplayService$ColorDisplayServiceInternal mColorDisplayServiceInternal>;

        virtualinvoke $r6.<com.android.server.display.color.ColorDisplayService$ColorDisplayServiceInternal: boolean resetDisplayWhiteBalanceColorTemperature()>();

        return 1;
    }

    private boolean enable()
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceController r0;
        boolean $z0, $z1;
        com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor $r1;
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor $r2;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        $z0 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mEnabled>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mLoggingEnabled>;

        if $z1 == 0 goto label2;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayWhiteBalanceController", "enabling");

     label2:
        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mEnabled> = 1;

        $r1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor mBrightnessSensor>;

        virtualinvoke $r1.<com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor: boolean setEnabled(boolean)>(1);

        $r2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor mColorTemperatureSensor>;

        virtualinvoke $r2.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: boolean setEnabled(boolean)>(1);

        return 1;
    }

    private void validateArguments(com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor, com.android.server.display.utils.AmbientFilter, com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor, com.android.server.display.utils.AmbientFilter, com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceController r0;
        com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor r1;
        com.android.server.display.utils.AmbientFilter r2, r4;
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor r3;
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler r5;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        r1 := @parameter0: com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor;

        r2 := @parameter1: com.android.server.display.utils.AmbientFilter;

        r3 := @parameter2: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor;

        r4 := @parameter3: com.android.server.display.utils.AmbientFilter;

        r5 := @parameter4: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "brightnessSensor must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "brightnessFilter must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r3, "colorTemperatureSensor must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r4, "colorTemperatureFilter must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r5, "throttler cannot be null");

        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceController r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r6, $r10, $r20, $r24, $r28, $r32, $r36, $r40, $r45, $r49, $r54, $r59;
        boolean $z0, $z1;
        java.lang.String $r5, $r9, $r14, $r23, $r27, $r31, $r35, $r39, $r44, $r48, $r53, $r58, $r63;
        com.android.server.display.whitebalance.DisplayWhiteBalanceController$Callbacks $r12;
        com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor $r15;
        com.android.server.display.utils.AmbientFilter $r16, $r18;
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor $r17;
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler $r19;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        com.android.server.display.utils.History $r42;
        android.util.Spline$LinearSpline $r51, $r56, $r61;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("DisplayWhiteBalanceController");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mLoggingEnabled=");

        $z0 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mLoggingEnabled>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mEnabled=");

        $z1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mEnabled>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCallbacks=");

        $r12 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.DisplayWhiteBalanceController$Callbacks mCallbacks>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r15 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor mBrightnessSensor>;

        virtualinvoke $r15.<com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor: void dump(java.io.PrintWriter)>(r1);

        $r16 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.AmbientFilter mBrightnessFilter>;

        virtualinvoke $r16.<com.android.server.display.utils.AmbientFilter: void dump(java.io.PrintWriter)>(r1);

        $r17 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor mColorTemperatureSensor>;

        virtualinvoke $r17.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: void dump(java.io.PrintWriter)>(r1);

        $r18 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.AmbientFilter mColorTemperatureFilter>;

        virtualinvoke $r18.<com.android.server.display.utils.AmbientFilter: void dump(java.io.PrintWriter)>(r1);

        $r19 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler mThrottler>;

        virtualinvoke $r19.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: void dump(java.io.PrintWriter)>(r1);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mLowLightAmbientColorTemperature=");

        $f0 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLowLightAmbientColorTemperature>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHighLightAmbientColorTemperature=");

        $f1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mHighLightAmbientColorTemperature>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAmbientColorTemperature=");

        $f2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperature>;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPendingAmbientColorTemperature=");

        $f3 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mPendingAmbientColorTemperature>;

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mLastAmbientColorTemperature=");

        $f4 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLastAmbientColorTemperature>;

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r39);

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAmbientColorTemperatureHistory=");

        $r42 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.History mAmbientColorTemperatureHistory>;

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r44 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAmbientColorTemperatureOverride=");

        $f5 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperatureOverride>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r48);

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAmbientToDisplayColorTemperatureSpline=");

        $r51 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mAmbientToDisplayColorTemperatureSpline>;

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r51);

        $r53 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r53);

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mLowLightAmbientBrightnessToBiasSpline=");

        $r56 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mLowLightAmbientBrightnessToBiasSpline>;

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);

        $r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r58);

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHighLightAmbientBrightnessToBiasSpline=");

        $r61 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mHighLightAmbientBrightnessToBiasSpline>;

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r61);

        $r63 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r63);

        return;
    }

    public void onAmbientBrightnessChanged(float)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceController r0;
        float f0;
        long l0;
        com.android.server.display.utils.AmbientFilter $r1;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        f0 := @parameter0: float;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.AmbientFilter mBrightnessFilter>;

        virtualinvoke $r1.<com.android.server.display.utils.AmbientFilter: boolean addValue(long,float)>(l0, f0);

        virtualinvoke r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: void updateAmbientColorTemperature()>();

        return;
    }

    public void onAmbientColorTemperatureChanged(float)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceController r0;
        float f0;
        long l0;
        com.android.server.display.utils.AmbientFilter $r1;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        f0 := @parameter0: float;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.AmbientFilter mColorTemperatureFilter>;

        virtualinvoke $r1.<com.android.server.display.utils.AmbientFilter: boolean addValue(long,float)>(l0, f0);

        virtualinvoke r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: void updateAmbientColorTemperature()>();

        return;
    }

    public boolean setAmbientColorTemperatureOverride(float)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceController r0;
        float f0, $f1;
        byte $b0;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        f0 := @parameter0: float;

        $f1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperatureOverride>;

        $b0 = $f1 cmpl f0;

        if $b0 != 0 goto label1;

        return 0;

     label1:
        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperatureOverride> = f0;

        return 1;
    }

    public boolean setCallbacks(com.android.server.display.whitebalance.DisplayWhiteBalanceController$Callbacks)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceController r0;
        com.android.server.display.whitebalance.DisplayWhiteBalanceController$Callbacks r1, $r2;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        r1 := @parameter0: com.android.server.display.whitebalance.DisplayWhiteBalanceController$Callbacks;

        $r2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.DisplayWhiteBalanceController$Callbacks mCallbacks>;

        if $r2 != r1 goto label1;

        return 0;

     label1:
        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.DisplayWhiteBalanceController$Callbacks mCallbacks> = r1;

        return 1;
    }

    public boolean setEnabled(boolean)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceController r0;
        boolean z0, $z1, $z2;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean enable()>();

        return $z2;

     label1:
        $z1 = specialinvoke r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean disable()>();

        return $z1;
    }

    public boolean setLoggingEnabled(boolean)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceController r0;
        boolean z0, $z1;
        com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor $r1;
        com.android.server.display.utils.AmbientFilter $r2, $r4;
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor $r3;
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler $r5;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mLoggingEnabled>;

        if $z1 != z0 goto label1;

        return 0;

     label1:
        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mLoggingEnabled> = z0;

        $r1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor mBrightnessSensor>;

        virtualinvoke $r1.<com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor: boolean setLoggingEnabled(boolean)>(z0);

        $r2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.AmbientFilter mBrightnessFilter>;

        virtualinvoke $r2.<com.android.server.display.utils.AmbientFilter: boolean setLoggingEnabled(boolean)>(z0);

        $r3 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor mColorTemperatureSensor>;

        virtualinvoke $r3.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: boolean setLoggingEnabled(boolean)>(z0);

        $r4 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.AmbientFilter mColorTemperatureFilter>;

        virtualinvoke $r4.<com.android.server.display.utils.AmbientFilter: boolean setLoggingEnabled(boolean)>(z0);

        $r5 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler mThrottler>;

        virtualinvoke $r5.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: boolean setLoggingEnabled(boolean)>(z0);

        return 1;
    }

    public void updateAmbientColorTemperature()
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceController r0;
        long l0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11, f12, f13, f14, f15, f16, $f17;
        com.android.server.display.utils.AmbientFilter $r1, $r14;
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler $r2;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r6, $r12;
        byte $b3, $b4, $b5, $b6, $b7;
        android.util.Spline$LinearSpline r13, r15, r16;
        com.android.server.display.whitebalance.DisplayWhiteBalanceController$Callbacks r19;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.AmbientFilter mColorTemperatureFilter>;

        f10 = virtualinvoke $r1.<com.android.server.display.utils.AmbientFilter: float getEstimate(long)>(l0);

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLatestAmbientColorTemperature> = f10;

        r13 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mAmbientToDisplayColorTemperatureSpline>;

        f11 = f10;

        if r13 == null goto label1;

        f11 = f10;

        $b3 = f10 cmpl -1.0F;

        if $b3 == 0 goto label1;

        f11 = virtualinvoke r13.<android.util.Spline$LinearSpline: float interpolate(float)>(f10);

     label1:
        $r14 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.AmbientFilter mBrightnessFilter>;

        f12 = virtualinvoke $r14.<com.android.server.display.utils.AmbientFilter: float getEstimate(long)>(l0);

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLatestAmbientBrightness> = f12;

        f13 = f11;

        $b4 = f11 cmpl -1.0F;

        if $b4 == 0 goto label2;

        r15 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mLowLightAmbientBrightnessToBiasSpline>;

        f13 = f11;

        if r15 == null goto label2;

        f0 = virtualinvoke r15.<android.util.Spline$LinearSpline: float interpolate(float)>(f12);

        $f9 = f0 * f11;

        $f7 = 1.0F - f0;

        $f6 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLowLightAmbientColorTemperature>;

        $f8 = $f7 * $f6;

        f13 = $f9 + $f8;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLatestLowLightBias> = f0;

     label2:
        f14 = f13;

        $b5 = f13 cmpl -1.0F;

        if $b5 == 0 goto label3;

        r16 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: android.util.Spline$LinearSpline mHighLightAmbientBrightnessToBiasSpline>;

        f14 = f13;

        if r16 == null goto label3;

        f15 = virtualinvoke r16.<android.util.Spline$LinearSpline: float interpolate(float)>(f12);

        $f2 = 1.0F - f15;

        $f5 = $f2 * f13;

        $f3 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mHighLightAmbientColorTemperature>;

        $f4 = $f3 * f15;

        f14 = $f5 + $f4;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLatestHighLightBias> = f15;

     label3:
        f16 = f14;

        $f17 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperatureOverride>;

        $b6 = $f17 cmpl -1.0F;

        if $b6 == 0 goto label5;

        $z2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mLoggingEnabled>;

        if $z2 == 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("override ambient color temperature: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f14);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $f1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperatureOverride>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayWhiteBalanceController", $r12);

     label4:
        f16 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperatureOverride>;

     label5:
        $b7 = f16 cmpl -1.0F;

        if $b7 == 0 goto label9;

        $r2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler mThrottler>;

        $z0 = virtualinvoke $r2.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: boolean throttle(float)>(f16);

        if $z0 == 0 goto label6;

        goto label9;

     label6:
        $z1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mLoggingEnabled>;

        if $z1 == 0 goto label7;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pending ambient color temperature: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f16);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayWhiteBalanceController", $r6);

     label7:
        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mPendingAmbientColorTemperature> = f16;

        r19 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.whitebalance.DisplayWhiteBalanceController$Callbacks mCallbacks>;

        if r19 == null goto label8;

        interfaceinvoke r19.<com.android.server.display.whitebalance.DisplayWhiteBalanceController$Callbacks: void updateWhiteBalance()>();

     label8:
        return;

     label9:
        return;
    }

    public void updateDisplayColorTemperature()
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceController r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f14, f15;
        byte $b0, $b4, $b5, $b6, $b7;
        boolean $z0;
        com.android.server.display.utils.History $r1;
        java.lang.StringBuilder $r2, $r15;
        java.lang.String $r13, $r18;
        int $i2;
        com.android.server.display.color.ColorDisplayService$ColorDisplayServiceInternal $r14;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        f14 = -1.0F;

        $f1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperature>;

        $b0 = $f1 cmpl -1.0F;

        if $b0 != 0 goto label1;

        f14 = -1.0F;

        $f12 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mPendingAmbientColorTemperature>;

        $b5 = $f12 cmpl -1.0F;

        if $b5 != 0 goto label1;

        f14 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLastAmbientColorTemperature>;

     label1:
        f0 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mPendingAmbientColorTemperature>;

        f15 = f14;

        $b6 = f0 cmpl -1.0F;

        if $b6 == 0 goto label2;

        f15 = f14;

        $f11 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperature>;

        $b4 = f0 cmpl $f11;

        if $b4 == 0 goto label2;

        f15 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mPendingAmbientColorTemperature>;

     label2:
        $b7 = f15 cmpl -1.0F;

        if $b7 != 0 goto label3;

        return;

     label3:
        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperature> = f15;

        $z0 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean mLoggingEnabled>;

        if $z0 == 0 goto label4;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ambient color temperature: ");

        $f10 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperature>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f10);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayWhiteBalanceController", $r18);

     label4:
        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mPendingAmbientColorTemperature> = -1.0F;

        $r1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.utils.History mAmbientColorTemperatureHistory>;

        $f2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperature>;

        virtualinvoke $r1.<com.android.server.display.utils.History: void add(float)>($f2);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Display cct: ");

        $f3 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperature>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Latest ambient cct: ");

        $f4 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLatestAmbientColorTemperature>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Latest ambient lux: ");

        $f5 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLatestAmbientBrightness>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Latest low light bias: ");

        $f6 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLatestLowLightBias>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Latest high light bias: ");

        $f7 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLatestHighLightBias>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f7);

        $r13 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayWhiteBalanceController", $r13);

        $r14 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: com.android.server.display.color.ColorDisplayService$ColorDisplayServiceInternal mColorDisplayServiceInternal>;

        $f8 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperature>;

        $i2 = (int) $f8;

        virtualinvoke $r14.<com.android.server.display.color.ColorDisplayService$ColorDisplayServiceInternal: boolean setDisplayWhiteBalanceColorTemperature(int)>($i2);

        $f9 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mAmbientColorTemperature>;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: float mLastAmbientColorTemperature> = $f9;

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.display.whitebalance.DisplayWhiteBalanceController: java.lang.String TAG> = "DisplayWhiteBalanceController";

        <com.android.server.display.whitebalance.DisplayWhiteBalanceController: int HISTORY_SIZE> = 50;

        return;
    }
}
