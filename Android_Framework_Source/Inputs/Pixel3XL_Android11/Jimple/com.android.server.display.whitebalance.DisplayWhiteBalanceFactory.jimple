public class com.android.server.display.whitebalance.DisplayWhiteBalanceFactory extends java.lang.Object
{
    private static final java.lang.String BRIGHTNESS_FILTER_TAG;
    private static final java.lang.String COLOR_TEMPERATURE_FILTER_TAG;

    private void <init>()
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceFactory r0;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.server.display.whitebalance.DisplayWhiteBalanceController create(android.os.Handler, android.hardware.SensorManager, android.content.res.Resources)
    {
        android.content.res.Resources r0;
        com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor r1;
        com.android.server.display.utils.AmbientFilter r2, $r4;
        com.android.server.display.whitebalance.DisplayWhiteBalanceController $r3;
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler $r5;
        float[] $r6, $r7, $r8, $r9, $r10, $r11;
        float $f0, $f1;
        android.os.Handler r12;
        android.hardware.SensorManager r13;
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor r14;

        r12 := @parameter0: android.os.Handler;

        r13 := @parameter1: android.hardware.SensorManager;

        r0 := @parameter2: android.content.res.Resources;

        r1 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor createBrightnessSensor(android.os.Handler,android.hardware.SensorManager,android.content.res.Resources)>(r12, r13, r0);

        r2 = staticinvoke <com.android.server.display.utils.AmbientFilterFactory: com.android.server.display.utils.AmbientFilter createBrightnessFilter(java.lang.String,android.content.res.Resources)>("AmbientBrightnessFilter", r0);

        r14 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor createColorTemperatureSensor(android.os.Handler,android.hardware.SensorManager,android.content.res.Resources)>(r12, r13, r0);

        $r3 = new com.android.server.display.whitebalance.DisplayWhiteBalanceController;

        $r4 = staticinvoke <com.android.server.display.utils.AmbientFilterFactory: com.android.server.display.utils.AmbientFilter createColorTemperatureFilter(java.lang.String,android.content.res.Resources)>("AmbientColorTemperatureFilter", r0);

        $r5 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler createThrottler(android.content.res.Resources)>(r0);

        $r6 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: float[] getFloatArray(android.content.res.Resources,int)>(r0, 17236027);

        $r7 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: float[] getFloatArray(android.content.res.Resources,int)>(r0, 17236026);

        $f0 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: float getFloat(android.content.res.Resources,int)>(r0, 17105059);

        $r8 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: float[] getFloatArray(android.content.res.Resources,int)>(r0, 17236024);

        $r9 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: float[] getFloatArray(android.content.res.Resources,int)>(r0, 17236023);

        $f1 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: float getFloat(android.content.res.Resources,int)>(r0, 17105058);

        $r10 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: float[] getFloatArray(android.content.res.Resources,int)>(r0, 17236017);

        $r11 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: float[] getFloatArray(android.content.res.Resources,int)>(r0, 17236020);

        specialinvoke $r3.<com.android.server.display.whitebalance.DisplayWhiteBalanceController: void <init>(com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor,com.android.server.display.utils.AmbientFilter,com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor,com.android.server.display.utils.AmbientFilter,com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler,float[],float[],float,float[],float[],float,float[],float[])>(r1, r2, r14, $r4, $r5, $r6, $r7, $f0, $r8, $r9, $f1, $r10, $r11);

        virtualinvoke r1.<com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor: boolean setCallbacks(com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor$Callbacks)>($r3);

        virtualinvoke r14.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: boolean setCallbacks(com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor$Callbacks)>($r3);

        return $r3;
    }

    public static com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor createBrightnessSensor(android.os.Handler, android.hardware.SensorManager, android.content.res.Resources)
    {
        android.os.Handler r0;
        android.hardware.SensorManager r1;
        android.content.res.Resources r2;
        com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor $r3;
        int $i0;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: android.hardware.SensorManager;

        r2 := @parameter2: android.content.res.Resources;

        $r3 = new com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor;

        $i0 = virtualinvoke r2.<android.content.res.Resources: int getInteger(int)>(17694791);

        specialinvoke $r3.<com.android.server.display.whitebalance.AmbientSensor$AmbientBrightnessSensor: void <init>(android.os.Handler,android.hardware.SensorManager,int)>(r0, r1, $i0);

        return $r3;
    }

    public static com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor createColorTemperatureSensor(android.os.Handler, android.hardware.SensorManager, android.content.res.Resources)
    {
        android.os.Handler r0;
        android.hardware.SensorManager r1;
        android.content.res.Resources r2;
        com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor $r3;
        java.lang.String $r4;
        int $i0;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: android.hardware.SensorManager;

        r2 := @parameter2: android.content.res.Resources;

        $r3 = new com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor;

        $r4 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>(17039883);

        $i0 = virtualinvoke r2.<android.content.res.Resources: int getInteger(int)>(17694796);

        specialinvoke $r3.<com.android.server.display.whitebalance.AmbientSensor$AmbientColorTemperatureSensor: void <init>(android.os.Handler,android.hardware.SensorManager,java.lang.String,int)>(r0, r1, $r4, $i0);

        return $r3;
    }

    private static com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler createThrottler(android.content.res.Resources)
    {
        android.content.res.Resources r0;
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler $r1;
        int $i0, $i1;
        float[] $r2, $r3, $r4;

        r0 := @parameter0: android.content.res.Resources;

        $r1 = new com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler;

        $i0 = virtualinvoke r0.<android.content.res.Resources: int getInteger(int)>(17694797);

        $i1 = virtualinvoke r0.<android.content.res.Resources: int getInteger(int)>(17694798);

        $r2 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: float[] getFloatArray(android.content.res.Resources,int)>(r0, 17236018);

        $r3 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: float[] getFloatArray(android.content.res.Resources,int)>(r0, 17236025);

        $r4 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: float[] getFloatArray(android.content.res.Resources,int)>(r0, 17236019);

        specialinvoke $r1.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: void <init>(int,int,float[],float[],float[])>($i0, $i1, $r2, $r3, $r4);

        return $r1;
    }

    private static float getFloat(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0, $i1;
        android.util.TypedValue $r2;
        float $f0;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, $r2, 1);

        $i1 = $r2.<android.util.TypedValue: int type>;

        if $i1 == 4 goto label1;

        return #NaNF;

     label1:
        $f0 = virtualinvoke $r2.<android.util.TypedValue: float getFloat()>();

        return $f0;
    }

    private static float[] getFloatArray(android.content.res.Resources, int)
    {
        boolean z0;
        int $i0, $i1, i2, i3, i4;
        float $f0, $f1;
        java.lang.Throwable $r0;
        android.content.res.Resources r1;
        android.content.res.TypedArray r2;
        float[] r3;

        r1 := @parameter0: android.content.res.Resources;

        i2 := @parameter1: int;

        r2 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(i2);

     label1:
        i3 = virtualinvoke r2.<android.content.res.TypedArray: int length()>();

     label2:
        if i3 != 0 goto label3;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return null;

     label3:
        $i0 = virtualinvoke r2.<android.content.res.TypedArray: int length()>();

        r3 = newarray (float)[$i0];

     label4:
        i4 = 0;

     label5:
        $i1 = lengthof r3;

        if i4 >= $i1 goto label8;

        $f0 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(i4, #NaNF);

        r3[i4] = $f0;

        $f1 = r3[i4];

        z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

     label6:
        if z0 == 0 goto label7;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return null;

     label7:
        i4 = i4 + 1;

        goto label5;

     label8:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return r3;

     label9:
        $r0 := @caughtexception;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
    }

    public static void <clinit>()
    {
        <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: java.lang.String COLOR_TEMPERATURE_FILTER_TAG> = "AmbientColorTemperatureFilter";

        <com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: java.lang.String BRIGHTNESS_FILTER_TAG> = "AmbientBrightnessFilter";

        return;
    }
}
