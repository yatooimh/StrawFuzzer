class com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler extends java.lang.Object
{
    protected static final java.lang.String TAG;
    private float[] mBaseThresholds;
    private int mDecreaseDebounce;
    private float mDecreaseThreshold;
    private float[] mDecreaseThresholds;
    private int mIncreaseDebounce;
    private float mIncreaseThreshold;
    private float[] mIncreaseThresholds;
    private long mLastTime;
    private float mLastValue;
    protected boolean mLoggingEnabled;

    void <init>(int, int, float[], float[], float[])
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler r0;
        int i0, i1;
        float[] r1, r2, r3;
        float $f0, $f1;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        r2 := @parameter3: float[];

        r3 := @parameter4: float[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $f1 = (float) i0;

        $f0 = (float) i1;

        specialinvoke r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: void validateArguments(float,float,float[],float[],float[])>($f1, $f0, r1, r2, r3);

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: boolean mLoggingEnabled> = 0;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: int mIncreaseDebounce> = i0;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: int mDecreaseDebounce> = i1;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float[] mBaseThresholds> = r1;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float[] mIncreaseThresholds> = r2;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float[] mDecreaseThresholds> = r3;

        virtualinvoke r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: void clear()>();

        return;
    }

    private void computeThresholds(float)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        int i0;
        float[] $r1, $r2, $r3;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler;

        f0 := @parameter0: float;

        $r1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float[] mBaseThresholds>;

        i0 = specialinvoke r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: int getHighestIndexBefore(float,float[])>(f0, $r1);

        $r2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float[] mIncreaseThresholds>;

        $f1 = $r2[i0];

        $f2 = $f1 + 1.0F;

        $f3 = $f2 * f0;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float mIncreaseThreshold> = $f3;

        $r3 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float[] mDecreaseThresholds>;

        $f4 = $r3[i0];

        $f5 = 1.0F - $f4;

        $f6 = $f5 * f0;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float mDecreaseThreshold> = $f6;

        return;
    }

    private int getHighestIndexBefore(float, float[])
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler r0;
        float f0, $f1;
        float[] r1;
        int $i0, $i1, $i2, i4;
        byte $b3;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler;

        f0 := @parameter0: float;

        r1 := @parameter1: float[];

        i4 = 0;

     label1:
        $i0 = lengthof r1;

        if i4 >= $i0 goto label3;

        $f1 = r1[i4];

        $b3 = $f1 cmpl f0;

        if $b3 < 0 goto label2;

        return i4;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $i1 = lengthof r1;

        $i2 = $i1 - 1;

        return $i2;
    }

    private static boolean isValidMapping(float[], float[])
    {
        float[] r0, r1;
        int $i0, $i1, $i2, $i3, $i4, i7;
        float $f0, $f1, $f2, $f3, f4;
        boolean $z0, $z1;
        byte $b5, $b6;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        if r0 == null goto label6;

        if r1 == null goto label6;

        $i0 = lengthof r0;

        if $i0 == 0 goto label6;

        $i1 = lengthof r1;

        if $i1 == 0 goto label6;

        $i3 = lengthof r0;

        $i2 = lengthof r1;

        if $i3 == $i2 goto label1;

        goto label6;

     label1:
        f4 = -1.0F;

        i7 = 0;

     label2:
        $i4 = lengthof r0;

        if i7 >= $i4 goto label5;

        $f0 = r0[i7];

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 != 0 goto label4;

        $f1 = r1[i7];

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z1 != 0 goto label4;

        $f2 = r0[i7];

        $b5 = $f2 cmpg 0.0F;

        if $b5 < 0 goto label4;

        $f3 = r0[i7];

        $b6 = f4 cmpl $f3;

        if $b6 < 0 goto label3;

        goto label4;

     label3:
        f4 = r0[i7];

        i7 = i7 + 1;

        goto label2;

     label4:
        return 0;

     label5:
        return 1;

     label6:
        return 0;
    }

    private boolean tooClose(float)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler r0;
        float f0, f1, f2;
        byte $b0, $b1, $b2, $b4;
        java.lang.StringBuilder $r2;
        java.lang.String $r7, r8, r9;
        boolean z1, $z2;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler;

        f0 := @parameter0: float;

        f1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float mLastValue>;

        z1 = 1;

        $b0 = f0 cmpl f1;

        if $b0 <= 0 goto label03;

        f2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float mIncreaseThreshold>;

        $b4 = f0 cmpg f2;

        if $b4 >= 0 goto label01;

        goto label02;

     label01:
        z1 = 0;

     label02:
        goto label05;

     label03:
        f2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float mDecreaseThreshold>;

        $b1 = f0 cmpl f2;

        if $b1 <= 0 goto label04;

        z1 = 1;

        goto label05;

     label04:
        z1 = 0;

     label05:
        $z2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: boolean mLoggingEnabled>;

        if $z2 == 0 goto label10;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        if z1 == 0 goto label06;

        r8 = "too close: ";

        goto label07;

     label06:
        r8 = "far enough: ";

     label07:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $b2 = f0 cmpl f2;

        if $b2 <= 0 goto label08;

        r9 = " > ";

        goto label09;

     label08:
        r9 = " < ";

     label09:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayWhiteBalanceThrottler", $r7);

     label10:
        return z1;
    }

    private boolean tooSoon(float)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler r0;
        float f0, $f1;
        long l0, $l3, $l4, $l8, $l9, l10;
        byte $b1, $b5;
        int $i2, $i7;
        boolean $z0, z1;
        java.lang.StringBuilder $r2;
        java.lang.String $r7, r8, r9;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler;

        f0 := @parameter0: float;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $f1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float mLastValue>;

        $b1 = f0 cmpl $f1;

        if $b1 <= 0 goto label1;

        $l9 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: long mLastTime>;

        $i7 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: int mIncreaseDebounce>;

        $l8 = (long) $i7;

        l10 = $l9 + $l8;

        goto label2;

     label1:
        $l4 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: long mLastTime>;

        $i2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: int mDecreaseDebounce>;

        $l3 = (long) $i2;

        l10 = $l4 + $l3;

     label2:
        $b5 = l0 cmp l10;

        if $b5 >= 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        $z0 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: boolean mLoggingEnabled>;

        if $z0 == 0 goto label9;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        if z1 == 0 goto label5;

        r8 = "too soon: ";

        goto label6;

     label5:
        r8 = "late enough: ";

     label6:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        if z1 == 0 goto label7;

        r9 = " < ";

        goto label8;

     label7:
        r9 = " > ";

     label8:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l10);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayWhiteBalanceThrottler", $r7);

     label9:
        return z1;
    }

    private void validateArguments(float, float, float[], float[], float[])
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler r0;
        float f0, f1;
        float[] r1, r2, r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r4, $r5, $r6, $r7;
        byte $b0, $b1;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: float[];

        r2 := @parameter3: float[];

        r3 := @parameter4: float[];

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 != 0 goto label4;

        $b0 = f0 cmpg 0.0F;

        if $b0 < 0 goto label4;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f1);

        if $z1 != 0 goto label3;

        $b1 = f1 cmpg 0.0F;

        if $b1 < 0 goto label3;

        $z2 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: boolean isValidMapping(float[],float[])>(r1, r2);

        if $z2 == 0 goto label2;

        $z3 = staticinvoke <com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: boolean isValidMapping(float[],float[])>(r1, r3);

        if $z3 == 0 goto label1;

        return;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("baseThresholds to decreaseThresholds is not a valid mapping.");

        throw $r7;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("baseThresholds to increaseThresholds is not a valid mapping.");

        throw $r6;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("decreaseDebounce must be a non-negative number.");

        throw $r5;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("increaseDebounce must be a non-negative number.");

        throw $r4;
    }

    public void clear()
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler r0;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: long mLastTime> = -1L;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float mIncreaseThreshold> = -1.0F;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float mDecreaseThreshold> = -1.0F;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float mLastValue> = -1.0F;

        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r6, $r10, $r14, $r18, $r24, $r30, $r36, $r40, $r44;
        boolean $z0;
        java.lang.String $r5, $r9, $r13, $r17, $r21, $r23, $r27, $r29, $r33, $r35, $r39, $r43, $r47;
        int $i0, $i1;
        long $l2;
        float[] $r20, $r26, $r32;
        float $f0, $f1, $f2;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  DisplayWhiteBalanceThrottler");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mLoggingEnabled=");

        $z0 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: boolean mLoggingEnabled>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mIncreaseDebounce=");

        $i0 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: int mIncreaseDebounce>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mDecreaseDebounce=");

        $i1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: int mDecreaseDebounce>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mLastTime=");

        $l2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: long mLastTime>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mBaseThresholds=");

        $r20 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float[] mBaseThresholds>;

        $r21 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($r20);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mIncreaseThresholds=");

        $r26 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float[] mIncreaseThresholds>;

        $r27 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($r26);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mDecreaseThresholds=");

        $r32 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float[] mDecreaseThresholds>;

        $r33 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($r32);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mIncreaseThreshold=");

        $f0 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float mIncreaseThreshold>;

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r39);

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mDecreaseThreshold=");

        $f1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float mDecreaseThreshold>;

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r43);

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mLastValue=");

        $f2 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float mLastValue>;

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r47);

        return;
    }

    public boolean setLoggingEnabled(boolean)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: boolean mLoggingEnabled>;

        if $z1 != z0 goto label1;

        return 0;

     label1:
        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: boolean mLoggingEnabled> = z0;

        return 1;
    }

    public boolean throttle(float)
    {
        com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler r0;
        float f0;
        long $l0, $l2;
        byte $b1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler;

        f0 := @parameter0: float;

        $l0 = r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: long mLastTime>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label2;

        $z0 = specialinvoke r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: boolean tooSoon(float)>(f0);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: boolean tooClose(float)>(f0);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        specialinvoke r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: void computeThresholds(float)>(f0);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: long mLastTime> = $l2;

        r0.<com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: float mLastValue> = f0;

        return 0;
    }

    public static void <clinit>()
    {
        <com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler: java.lang.String TAG> = "DisplayWhiteBalanceThrottler";

        return;
    }
}
