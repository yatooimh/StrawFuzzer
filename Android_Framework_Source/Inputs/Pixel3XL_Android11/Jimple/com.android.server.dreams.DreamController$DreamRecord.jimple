final class com.android.server.dreams.DreamController$DreamRecord extends java.lang.Object implements android.os.IBinder$DeathRecipient, android.content.ServiceConnection
{
    public boolean mBound;
    public final boolean mCanDoze;
    public boolean mConnected;
    final android.os.IRemoteCallback mDreamingStartedCallback;
    public final boolean mIsTest;
    public final android.content.ComponentName mName;
    final java.lang.Runnable mReleaseWakeLockIfNeeded;
    public boolean mSentStartBroadcast;
    public android.service.dreams.IDreamService mService;
    public final android.os.Binder mToken;
    public final int mUserId;
    public android.os.PowerManager$WakeLock mWakeLock;
    public boolean mWakingGently;
    final com.android.server.dreams.DreamController this$0;

    public void <init>(com.android.server.dreams.DreamController, android.os.Binder, android.content.ComponentName, boolean, boolean, int, android.os.PowerManager$WakeLock)
    {
        com.android.server.dreams.DreamController$DreamRecord r0;
        com.android.server.dreams.DreamController r1;
        android.os.Binder r2;
        android.content.ComponentName r3;
        boolean z0, z1;
        int i0;
        android.os.PowerManager$WakeLock r4;
        com.android.server.dreams._$$Lambda$gXC4nM2f5GMCBX0ED45DCQQjqv0 $r5;
        com.android.server.dreams.DreamController$DreamRecord$1 $r6;
        android.os.Handler $r7;
        java.lang.Runnable $r8;

        r0 := @this: com.android.server.dreams.DreamController$DreamRecord;

        r1 := @parameter0: com.android.server.dreams.DreamController;

        r2 := @parameter1: android.os.Binder;

        r3 := @parameter2: android.content.ComponentName;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        i0 := @parameter5: int;

        r4 := @parameter6: android.os.PowerManager$WakeLock;

        r0.<com.android.server.dreams.DreamController$DreamRecord: com.android.server.dreams.DreamController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new com.android.server.dreams._$$Lambda$gXC4nM2f5GMCBX0ED45DCQQjqv0;

        specialinvoke $r5.<com.android.server.dreams._$$Lambda$gXC4nM2f5GMCBX0ED45DCQQjqv0: void <init>(com.android.server.dreams.DreamController$DreamRecord)>(r0);

        r0.<com.android.server.dreams.DreamController$DreamRecord: java.lang.Runnable mReleaseWakeLockIfNeeded> = $r5;

        $r6 = new com.android.server.dreams.DreamController$DreamRecord$1;

        specialinvoke $r6.<com.android.server.dreams.DreamController$DreamRecord$1: void <init>(com.android.server.dreams.DreamController$DreamRecord)>(r0);

        r0.<com.android.server.dreams.DreamController$DreamRecord: android.os.IRemoteCallback mDreamingStartedCallback> = $r6;

        r0.<com.android.server.dreams.DreamController$DreamRecord: android.os.Binder mToken> = r2;

        r0.<com.android.server.dreams.DreamController$DreamRecord: android.content.ComponentName mName> = r3;

        r0.<com.android.server.dreams.DreamController$DreamRecord: boolean mIsTest> = z0;

        r0.<com.android.server.dreams.DreamController$DreamRecord: boolean mCanDoze> = z1;

        r0.<com.android.server.dreams.DreamController$DreamRecord: int mUserId> = i0;

        r0.<com.android.server.dreams.DreamController$DreamRecord: android.os.PowerManager$WakeLock mWakeLock> = r4;

        virtualinvoke r4.<android.os.PowerManager$WakeLock: void acquire()>();

        $r7 = staticinvoke <com.android.server.dreams.DreamController: android.os.Handler access$100(com.android.server.dreams.DreamController)>(r1);

        $r8 = r0.<com.android.server.dreams.DreamController$DreamRecord: java.lang.Runnable mReleaseWakeLockIfNeeded>;

        virtualinvoke $r7.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r8, 10000L);

        return;
    }

    public void binderDied()
    {
        com.android.server.dreams.DreamController$DreamRecord r0;
        com.android.server.dreams.DreamController $r1;
        android.os.Handler $r2;
        com.android.server.dreams._$$Lambda$DreamController$DreamRecord$a6xKVQPRvHllqmi3b3aluvuTMEM $r3;

        r0 := @this: com.android.server.dreams.DreamController$DreamRecord;

        $r1 = r0.<com.android.server.dreams.DreamController$DreamRecord: com.android.server.dreams.DreamController this$0>;

        $r2 = staticinvoke <com.android.server.dreams.DreamController: android.os.Handler access$100(com.android.server.dreams.DreamController)>($r1);

        $r3 = new com.android.server.dreams._$$Lambda$DreamController$DreamRecord$a6xKVQPRvHllqmi3b3aluvuTMEM;

        specialinvoke $r3.<com.android.server.dreams._$$Lambda$DreamController$DreamRecord$a6xKVQPRvHllqmi3b3aluvuTMEM: void <init>(com.android.server.dreams.DreamController$DreamRecord)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void lambda$binderDied$0$DreamController$DreamRecord()
    {
        com.android.server.dreams.DreamController$DreamRecord r0, $r2;
        com.android.server.dreams.DreamController $r1, $r3;

        r0 := @this: com.android.server.dreams.DreamController$DreamRecord;

        r0.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService> = null;

        $r1 = r0.<com.android.server.dreams.DreamController$DreamRecord: com.android.server.dreams.DreamController this$0>;

        $r2 = staticinvoke <com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord access$000(com.android.server.dreams.DreamController)>($r1);

        if $r2 != r0 goto label1;

        $r3 = r0.<com.android.server.dreams.DreamController$DreamRecord: com.android.server.dreams.DreamController this$0>;

        virtualinvoke $r3.<com.android.server.dreams.DreamController: void stopDream(boolean,java.lang.String)>(1, "binder died");

     label1:
        return;
    }

    public void lambda$onServiceConnected$1$DreamController$DreamRecord(android.os.IBinder)
    {
        com.android.server.dreams.DreamController$DreamRecord r0, $r3;
        android.os.IBinder r1;
        com.android.server.dreams.DreamController $r2, $r5;
        android.service.dreams.IDreamService $r4, $r6;

        r0 := @this: com.android.server.dreams.DreamController$DreamRecord;

        r1 := @parameter0: android.os.IBinder;

        r0.<com.android.server.dreams.DreamController$DreamRecord: boolean mConnected> = 1;

        $r2 = r0.<com.android.server.dreams.DreamController$DreamRecord: com.android.server.dreams.DreamController this$0>;

        $r3 = staticinvoke <com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord access$000(com.android.server.dreams.DreamController)>($r2);

        if $r3 != r0 goto label1;

        $r4 = r0.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService>;

        if $r4 != null goto label1;

        $r5 = r0.<com.android.server.dreams.DreamController$DreamRecord: com.android.server.dreams.DreamController this$0>;

        $r6 = staticinvoke <android.service.dreams.IDreamService$Stub: android.service.dreams.IDreamService asInterface(android.os.IBinder)>(r1);

        staticinvoke <com.android.server.dreams.DreamController: void access$200(com.android.server.dreams.DreamController,android.service.dreams.IDreamService)>($r5, $r6);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.dreams.DreamController$DreamRecord: void releaseWakeLockIfNeeded()>();

     label2:
        return;
    }

    public void lambda$onServiceDisconnected$2$DreamController$DreamRecord()
    {
        com.android.server.dreams.DreamController$DreamRecord r0, $r2;
        com.android.server.dreams.DreamController $r1, $r3;

        r0 := @this: com.android.server.dreams.DreamController$DreamRecord;

        r0.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService> = null;

        $r1 = r0.<com.android.server.dreams.DreamController$DreamRecord: com.android.server.dreams.DreamController this$0>;

        $r2 = staticinvoke <com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord access$000(com.android.server.dreams.DreamController)>($r1);

        if $r2 != r0 goto label1;

        $r3 = r0.<com.android.server.dreams.DreamController$DreamRecord: com.android.server.dreams.DreamController this$0>;

        virtualinvoke $r3.<com.android.server.dreams.DreamController: void stopDream(boolean,java.lang.String)>(1, "service disconnected");

     label1:
        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.dreams.DreamController$DreamRecord r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        com.android.server.dreams.DreamController $r3;
        android.os.Handler $r4;
        com.android.server.dreams._$$Lambda$DreamController$DreamRecord$RZAkATuUi2Nb2UNKTKrQg_Oz3Cw $r5;

        r0 := @this: com.android.server.dreams.DreamController$DreamRecord;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r3 = r0.<com.android.server.dreams.DreamController$DreamRecord: com.android.server.dreams.DreamController this$0>;

        $r4 = staticinvoke <com.android.server.dreams.DreamController: android.os.Handler access$100(com.android.server.dreams.DreamController)>($r3);

        $r5 = new com.android.server.dreams._$$Lambda$DreamController$DreamRecord$RZAkATuUi2Nb2UNKTKrQg_Oz3Cw;

        specialinvoke $r5.<com.android.server.dreams._$$Lambda$DreamController$DreamRecord$RZAkATuUi2Nb2UNKTKrQg_Oz3Cw: void <init>(com.android.server.dreams.DreamController$DreamRecord,android.os.IBinder)>(r0, r2);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.dreams.DreamController$DreamRecord r0;
        android.content.ComponentName r1;
        com.android.server.dreams.DreamController $r2;
        android.os.Handler $r3;
        com.android.server.dreams._$$Lambda$DreamController$DreamRecord$dxWbx4rgpHpZ1Hx0p_kP0KmKxQk $r4;

        r0 := @this: com.android.server.dreams.DreamController$DreamRecord;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = r0.<com.android.server.dreams.DreamController$DreamRecord: com.android.server.dreams.DreamController this$0>;

        $r3 = staticinvoke <com.android.server.dreams.DreamController: android.os.Handler access$100(com.android.server.dreams.DreamController)>($r2);

        $r4 = new com.android.server.dreams._$$Lambda$DreamController$DreamRecord$dxWbx4rgpHpZ1Hx0p_kP0KmKxQk;

        specialinvoke $r4.<com.android.server.dreams._$$Lambda$DreamController$DreamRecord$dxWbx4rgpHpZ1Hx0p_kP0KmKxQk: void <init>(com.android.server.dreams.DreamController$DreamRecord)>(r0);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    void releaseWakeLockIfNeeded()
    {
        com.android.server.dreams.DreamController$DreamRecord r0;
        android.os.PowerManager$WakeLock r1;
        com.android.server.dreams.DreamController $r2;
        android.os.Handler $r3;
        java.lang.Runnable $r4;

        r0 := @this: com.android.server.dreams.DreamController$DreamRecord;

        r1 = r0.<com.android.server.dreams.DreamController$DreamRecord: android.os.PowerManager$WakeLock mWakeLock>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.os.PowerManager$WakeLock: void release()>();

        r0.<com.android.server.dreams.DreamController$DreamRecord: android.os.PowerManager$WakeLock mWakeLock> = null;

        $r2 = r0.<com.android.server.dreams.DreamController$DreamRecord: com.android.server.dreams.DreamController this$0>;

        $r3 = staticinvoke <com.android.server.dreams.DreamController: android.os.Handler access$100(com.android.server.dreams.DreamController)>($r2);

        $r4 = r0.<com.android.server.dreams.DreamController$DreamRecord: java.lang.Runnable mReleaseWakeLockIfNeeded>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

     label1:
        return;
    }
}
