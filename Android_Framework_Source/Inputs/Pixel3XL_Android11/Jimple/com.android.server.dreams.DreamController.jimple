final class com.android.server.dreams.DreamController extends java.lang.Object
{
    private static final int DREAM_CONNECTION_TIMEOUT;
    private static final int DREAM_FINISH_TIMEOUT;
    private static final java.lang.String TAG;
    private final android.content.Intent mCloseNotificationShadeIntent;
    private final android.content.Context mContext;
    private com.android.server.dreams.DreamController$DreamRecord mCurrentDream;
    private long mDreamStartTime;
    private final android.content.Intent mDreamingStartedIntent;
    private final android.content.Intent mDreamingStoppedIntent;
    private final android.os.Handler mHandler;
    private final android.view.IWindowManager mIWindowManager;
    private final com.android.server.dreams.DreamController$Listener mListener;
    private java.lang.String mSavedStopReason;
    private final java.lang.Runnable mStopStubbornDreamRunnable;
    private final java.lang.Runnable mStopUnconnectedDreamRunnable;

    public void <init>(android.content.Context, android.os.Handler, com.android.server.dreams.DreamController$Listener)
    {
        com.android.server.dreams.DreamController r0;
        android.os.Handler r1;
        com.android.server.dreams.DreamController$Listener r2;
        android.content.Intent $r3, $r4, $r5, $r6, $r10;
        com.android.server.dreams.DreamController$1 $r7;
        com.android.server.dreams._$$Lambda$DreamController$MzWLPaVogrekgPcs4ryibDvi1xA $r8;
        android.view.IWindowManager $r9;
        android.content.Context r12;

        r0 := @this: com.android.server.dreams.DreamController;

        r12 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Handler;

        r2 := @parameter2: com.android.server.dreams.DreamController$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DREAMING_STARTED");

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        r0.<com.android.server.dreams.DreamController: android.content.Intent mDreamingStartedIntent> = $r4;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DREAMING_STOPPED");

        $r6 = virtualinvoke $r5.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        r0.<com.android.server.dreams.DreamController: android.content.Intent mDreamingStoppedIntent> = $r6;

        $r7 = new com.android.server.dreams.DreamController$1;

        specialinvoke $r7.<com.android.server.dreams.DreamController$1: void <init>(com.android.server.dreams.DreamController)>(r0);

        r0.<com.android.server.dreams.DreamController: java.lang.Runnable mStopUnconnectedDreamRunnable> = $r7;

        $r8 = new com.android.server.dreams._$$Lambda$DreamController$MzWLPaVogrekgPcs4ryibDvi1xA;

        specialinvoke $r8.<com.android.server.dreams._$$Lambda$DreamController$MzWLPaVogrekgPcs4ryibDvi1xA: void <init>(com.android.server.dreams.DreamController)>(r0);

        r0.<com.android.server.dreams.DreamController: java.lang.Runnable mStopStubbornDreamRunnable> = $r8;

        r0.<com.android.server.dreams.DreamController: android.content.Context mContext> = r12;

        r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler> = r1;

        r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$Listener mListener> = r2;

        $r9 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>();

        r0.<com.android.server.dreams.DreamController: android.view.IWindowManager mIWindowManager> = $r9;

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CLOSE_SYSTEM_DIALOGS");

        r0.<com.android.server.dreams.DreamController: android.content.Intent mCloseNotificationShadeIntent> = $r10;

        virtualinvoke $r10.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("reason", "dream");

        return;
    }

    static com.android.server.dreams.DreamController$DreamRecord access$000(com.android.server.dreams.DreamController)
    {
        com.android.server.dreams.DreamController r0;
        com.android.server.dreams.DreamController$DreamRecord $r1;

        r0 := @parameter0: com.android.server.dreams.DreamController;

        $r1 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        return $r1;
    }

    static android.os.Handler access$100(com.android.server.dreams.DreamController)
    {
        com.android.server.dreams.DreamController r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.dreams.DreamController;

        $r1 = r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$200(com.android.server.dreams.DreamController, android.service.dreams.IDreamService)
    {
        com.android.server.dreams.DreamController r0;
        android.service.dreams.IDreamService r1;

        r0 := @parameter0: com.android.server.dreams.DreamController;

        r1 := @parameter1: android.service.dreams.IDreamService;

        specialinvoke r0.<com.android.server.dreams.DreamController: void attach(android.service.dreams.IDreamService)>(r1);

        return;
    }

    private void attach(android.service.dreams.IDreamService)
    {
        com.android.server.dreams.DreamController r0;
        android.os.IBinder $r1;
        com.android.server.dreams.DreamController$DreamRecord $r2, $r3, $r4, $r5, $r8, $r9, $r13;
        android.os.IRemoteCallback $r6;
        boolean $z0, $z1;
        android.os.Binder $r7;
        android.os.UserHandle $r10;
        android.content.Intent $r11;
        android.content.Context $r12;
        android.os.RemoteException $r14;
        android.service.dreams.IDreamService r15;

        r0 := @this: com.android.server.dreams.DreamController;

        r15 := @parameter0: android.service.dreams.IDreamService;

     label1:
        $r1 = interfaceinvoke r15.<android.service.dreams.IDreamService: android.os.IBinder asBinder()>();

        $r2 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        interfaceinvoke $r1.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        $r3 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r7 = $r3.<com.android.server.dreams.DreamController$DreamRecord: android.os.Binder mToken>;

        $r4 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z0 = $r4.<com.android.server.dreams.DreamController$DreamRecord: boolean mCanDoze>;

        $r5 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r6 = $r5.<com.android.server.dreams.DreamController$DreamRecord: android.os.IRemoteCallback mDreamingStartedCallback>;

        interfaceinvoke r15.<android.service.dreams.IDreamService: void attach(android.os.IBinder,boolean,android.os.IRemoteCallback)>($r7, $z0, $r6);

     label2:
        $r8 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r8.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService> = r15;

        $r9 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z1 = $r9.<com.android.server.dreams.DreamController$DreamRecord: boolean mIsTest>;

        if $z1 != 0 goto label3;

        $r12 = r0.<com.android.server.dreams.DreamController: android.content.Context mContext>;

        $r11 = r0.<com.android.server.dreams.DreamController: android.content.Intent mDreamingStartedIntent>;

        $r10 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r12.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r11, $r10);

        $r13 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r13.<com.android.server.dreams.DreamController$DreamRecord: boolean mSentStartBroadcast> = 1;

     label3:
        return;

     label4:
        $r14 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DreamController", "The dream service died unexpectedly.", $r14);

        virtualinvoke r0.<com.android.server.dreams.DreamController: void stopDream(boolean,java.lang.String)>(1, "attach failed");

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.dreams.DreamController r0;
        java.io.PrintWriter r1;
        com.android.server.dreams.DreamController$DreamRecord $r2, $r5, $r11, $r17, $r22, $r27, $r32, $r37, $r43, $r48;
        java.lang.StringBuilder $r3, $r9, $r15, $r20, $r25, $r30, $r35, $r41, $r46;
        android.os.Binder $r6;
        java.lang.String $r8, $r14, $r19, $r24, $r29, $r34, $r40, $r45, $r50;
        android.content.ComponentName $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0;
        android.service.dreams.IDreamService $r38;

        r0 := @this: com.android.server.dreams.DreamController;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Dreamland:");

        $r2 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        if $r2 == null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  mCurrentDream:");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mToken=");

        $r5 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r6 = $r5.<com.android.server.dreams.DreamController$DreamRecord: android.os.Binder mToken>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mName=");

        $r11 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r12 = $r11.<com.android.server.dreams.DreamController$DreamRecord: android.content.ComponentName mName>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mIsTest=");

        $r17 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z0 = $r17.<com.android.server.dreams.DreamController$DreamRecord: boolean mIsTest>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mCanDoze=");

        $r22 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z1 = $r22.<com.android.server.dreams.DreamController$DreamRecord: boolean mCanDoze>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mUserId=");

        $r27 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $i0 = $r27.<com.android.server.dreams.DreamController$DreamRecord: int mUserId>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mBound=");

        $r32 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z2 = $r32.<com.android.server.dreams.DreamController$DreamRecord: boolean mBound>;

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r34);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mService=");

        $r37 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r38 = $r37.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService>;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r40);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mSentStartBroadcast=");

        $r43 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z3 = $r43.<com.android.server.dreams.DreamController$DreamRecord: boolean mSentStartBroadcast>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r45);

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mWakingGently=");

        $r48 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z4 = $r48.<com.android.server.dreams.DreamController$DreamRecord: boolean mWakingGently>;

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r50 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r50);

        goto label2;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  mCurrentDream: null");

     label2:
        return;
    }

    public void lambda$new$0$DreamController()
    {
        com.android.server.dreams.DreamController r0;

        r0 := @this: com.android.server.dreams.DreamController;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DreamController", "Stubborn dream did not finish itself in the time allotted");

        virtualinvoke r0.<com.android.server.dreams.DreamController: void stopDream(boolean,java.lang.String)>(1, "slow to finish");

        r0.<com.android.server.dreams.DreamController: java.lang.String mSavedStopReason> = null;

        return;
    }

    public void lambda$stopDream$1$DreamController(com.android.server.dreams.DreamController$DreamRecord)
    {
        com.android.server.dreams.DreamController r0;
        com.android.server.dreams.DreamController$DreamRecord r1;
        android.os.Binder $r2;
        com.android.server.dreams.DreamController$Listener $r3;

        r0 := @this: com.android.server.dreams.DreamController;

        r1 := @parameter0: com.android.server.dreams.DreamController$DreamRecord;

        $r3 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$Listener mListener>;

        $r2 = r1.<com.android.server.dreams.DreamController$DreamRecord: android.os.Binder mToken>;

        interfaceinvoke $r3.<com.android.server.dreams.DreamController$Listener: void onDreamStopped(android.os.Binder)>($r2);

        return;
    }

    public void startDream(android.os.Binder, android.content.ComponentName, boolean, boolean, int, android.os.PowerManager$WakeLock)
    {
        com.android.server.dreams.DreamController r0;
        boolean z0, z1, $z2, $z3;
        int i0;
        android.os.UserHandle $r1, r38;
        android.content.Intent $r2, r35;
        android.content.Context $r3, r34, r36;
        java.lang.String $r12, $r21, $r26;
        long $l3;
        com.android.server.dreams.DreamController$DreamRecord $r13, $r16, r33, r37;
        java.lang.Runnable $r17;
        android.os.Handler $r18;
        java.lang.Throwable $r22, $r23, $r27, $r28, r42;
        android.os.Binder r29;
        android.content.ComponentName r30;
        android.os.PowerManager$WakeLock r31;
        java.lang.StringBuilder r32, r39, r41;
        short s6;

        r0 := @this: com.android.server.dreams.DreamController;

        r29 := @parameter0: android.os.Binder;

        r30 := @parameter1: android.content.ComponentName;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        r31 := @parameter5: android.os.PowerManager$WakeLock;

        virtualinvoke r0.<com.android.server.dreams.DreamController: void stopDream(boolean,java.lang.String)>(1, "starting new dream");

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(131072L, "startDream");

     label01:
        $r3 = r0.<com.android.server.dreams.DreamController: android.content.Context mContext>;

        $r2 = r0.<com.android.server.dreams.DreamController: android.content.Intent mCloseNotificationShadeIntent>;

        $r1 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r2, $r1);

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting dream: name=");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r30);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isTest=");

     label02:
        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", canDoze=");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userId=");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("DreamController", $r12);

        r33 = new com.android.server.dreams.DreamController$DreamRecord;

     label03:
        specialinvoke r33.<com.android.server.dreams.DreamController$DreamRecord: void <init>(com.android.server.dreams.DreamController,android.os.Binder,android.content.ComponentName,boolean,boolean,int,android.os.PowerManager$WakeLock)>(r0, r29, r30, z0, z1, i0, r31);

        r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream> = r33;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.dreams.DreamController: long mDreamStartTime> = $l3;

        r34 = r0.<com.android.server.dreams.DreamController: android.content.Context mContext>;

        $r13 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z2 = $r13.<com.android.server.dreams.DreamController$DreamRecord: boolean mCanDoze>;

        if $z2 == 0 goto label05;

     label04:
        s6 = 223;

        goto label06;

     label05:
        s6 = 222;

     label06:
        staticinvoke <com.android.internal.logging.MetricsLogger: void visible(android.content.Context,int)>(r34, s6);

        r35 = new android.content.Intent;

        specialinvoke r35.<android.content.Intent: void <init>(java.lang.String)>("android.service.dreams.DreamService");

        virtualinvoke r35.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r30);

        virtualinvoke r35.<android.content.Intent: android.content.Intent addFlags(int)>(8388608);

     label07:
        r36 = r0.<com.android.server.dreams.DreamController: android.content.Context mContext>;

        r37 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        r38 = new android.os.UserHandle;

        specialinvoke r38.<android.os.UserHandle: void <init>(int)>(i0);

        $z3 = virtualinvoke r36.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r35, r37, 67108865, r38);

        if $z3 != 0 goto label09;

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind dream service: ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        $r21 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DreamController", $r21);

        virtualinvoke r0.<com.android.server.dreams.DreamController: void stopDream(boolean,java.lang.String)>(1, "bindService failed");

     label08:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        return;

     label09:
        $r16 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r16.<com.android.server.dreams.DreamController$DreamRecord: boolean mBound> = 1;

        $r18 = r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler>;

        $r17 = r0.<com.android.server.dreams.DreamController: java.lang.Runnable mStopUnconnectedDreamRunnable>;

        virtualinvoke $r18.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r17, 5000L);

     label10:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        return;

     label11:
        $r23 := @caughtexception;

     label12:
        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind dream service: ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        $r26 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DreamController", $r26, $r23);

        virtualinvoke r0.<com.android.server.dreams.DreamController: void stopDream(boolean,java.lang.String)>(1, "unable to bind service: SecExp.");

     label13:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        return;

     label14:
        $r28 := @caughtexception;

        r42 = $r28;

        goto label17;

     label15:
        $r27 := @caughtexception;

        r42 = $r27;

        goto label17;

     label16:
        $r22 := @caughtexception;

        r42 = $r22;

     label17:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        throw r42;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.SecurityException from label07 to label08 with label11;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void stopDream(boolean, java.lang.String)
    {
        com.android.server.dreams.DreamController r0;
        com.android.server.dreams.DreamController$DreamRecord $r1, $r30, $r31, $r33, $r34, r44;
        java.lang.String $r14, $r18, r42, $r47, r48, r52;
        boolean $z0, $z1, $z2, z6, z7, $z8, $z9, $z10;
        long $l1, $l2, $l3, $l4;
        int $i5, $i6;
        java.lang.Runnable $r19, $r21, $r36;
        android.os.Handler $r20, $r22, $r37, r56;
        android.content.Context $r23, $r29, r50, r51;
        android.service.dreams.IDreamService $r24, $r25, $r32, $r35, r53;
        android.os.IBinder $r26;
        android.os.UserHandle $r27;
        android.content.Intent $r28;
        java.lang.Throwable $r38, $r41;
        android.os.RemoteException $r39, $r40;
        java.lang.StringBuilder r45, r49;
        android.content.ComponentName $r46;
        short s7;
        com.android.server.dreams._$$Lambda$DreamController$NsbIx0iECm45E_fdqE55LTS32LQ r57;

        r0 := @this: com.android.server.dreams.DreamController;

        z6 := @parameter0: boolean;

        r42 := @parameter1: java.lang.String;

        $r1 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        if $r1 != null goto label01;

        return;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(131072L, "stopDream");

        if z6 != 0 goto label08;

     label02:
        $r30 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        z7 = $r30.<com.android.server.dreams.DreamController$DreamRecord: boolean mWakingGently>;

     label03:
        if z7 == 0 goto label04;

        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        return;

     label04:
        $r31 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r32 = $r31.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService>;

        if $r32 == null goto label08;

        $r33 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r33.<com.android.server.dreams.DreamController$DreamRecord: boolean mWakingGently> = 1;

     label05:
        r0.<com.android.server.dreams.DreamController: java.lang.String mSavedStopReason> = r42;

        $r34 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r35 = $r34.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService>;

        interfaceinvoke $r35.<android.service.dreams.IDreamService: void wakeUp()>();

        $r37 = r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler>;

        $r36 = r0.<com.android.server.dreams.DreamController: java.lang.Runnable mStopStubbornDreamRunnable>;

        virtualinvoke $r37.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r36, 5000L);

     label06:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        return;

     label07:
        $r40 := @caughtexception;

     label08:
        r44 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream> = null;

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping dream: name=");

        $r46 = r44.<com.android.server.dreams.DreamController$DreamRecord: android.content.ComponentName mName>;

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isTest=");

        $z8 = r44.<com.android.server.dreams.DreamController$DreamRecord: boolean mIsTest>;

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", canDoze=");

        $z9 = r44.<com.android.server.dreams.DreamController$DreamRecord: boolean mCanDoze>;

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userId=");

        $i6 = r44.<com.android.server.dreams.DreamController$DreamRecord: int mUserId>;

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reason=\'");

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r47 = r0.<com.android.server.dreams.DreamController: java.lang.String mSavedStopReason>;

        if $r47 != null goto label10;

     label09:
        r48 = "";

        goto label11;

     label10:
        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(from \'");

        $r14 = r0.<com.android.server.dreams.DreamController: java.lang.String mSavedStopReason>;

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        r48 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        $r18 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("DreamController", $r18);

        r50 = r0.<com.android.server.dreams.DreamController: android.content.Context mContext>;

        $z0 = r44.<com.android.server.dreams.DreamController$DreamRecord: boolean mCanDoze>;

        if $z0 == 0 goto label13;

     label12:
        s7 = 223;

        goto label14;

     label13:
        s7 = 222;

     label14:
        staticinvoke <com.android.internal.logging.MetricsLogger: void hidden(android.content.Context,int)>(r50, s7);

        r51 = r0.<com.android.server.dreams.DreamController: android.content.Context mContext>;

        $z1 = r44.<com.android.server.dreams.DreamController$DreamRecord: boolean mCanDoze>;

        if $z1 == 0 goto label16;

     label15:
        r52 = "dozing_minutes";

        goto label17;

     label16:
        r52 = "dreaming_minutes";

     label17:
        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<com.android.server.dreams.DreamController: long mDreamStartTime>;

        $l3 = $l1 - $l2;

        $l4 = $l3 / 60000L;

        $i5 = (int) $l4;

        staticinvoke <com.android.internal.logging.MetricsLogger: void histogram(android.content.Context,java.lang.String,int)>(r51, r52, $i5);

        $r20 = r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler>;

        $r19 = r0.<com.android.server.dreams.DreamController: java.lang.Runnable mStopUnconnectedDreamRunnable>;

        virtualinvoke $r20.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r19);

        $r22 = r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler>;

        $r21 = r0.<com.android.server.dreams.DreamController: java.lang.Runnable mStopStubbornDreamRunnable>;

        virtualinvoke $r22.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r21);

        r0.<com.android.server.dreams.DreamController: java.lang.String mSavedStopReason> = null;

        $z2 = r44.<com.android.server.dreams.DreamController$DreamRecord: boolean mSentStartBroadcast>;

        if $z2 == 0 goto label18;

        $r29 = r0.<com.android.server.dreams.DreamController: android.content.Context mContext>;

        $r28 = r0.<com.android.server.dreams.DreamController: android.content.Intent mDreamingStoppedIntent>;

        $r27 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r29.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r28, $r27);

     label18:
        r53 = r44.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService>;

     label19:
        if r53 == null goto label27;

     label20:
        $r24 = r44.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService>;

        interfaceinvoke $r24.<android.service.dreams.IDreamService: void detach()>();

     label21:
        goto label23;

     label22:
        $r39 := @caughtexception;

     label23:
        $r25 = r44.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService>;

        $r26 = interfaceinvoke $r25.<android.service.dreams.IDreamService: android.os.IBinder asBinder()>();

        interfaceinvoke $r26.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r44, 0);

     label24:
        goto label26;

     label25:
        $r41 := @caughtexception;

     label26:
        r44.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService> = null;

     label27:
        $z10 = r44.<com.android.server.dreams.DreamController$DreamRecord: boolean mBound>;

        if $z10 == 0 goto label28;

        $r23 = r0.<com.android.server.dreams.DreamController: android.content.Context mContext>;

        virtualinvoke $r23.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r44);

     label28:
        virtualinvoke r44.<com.android.server.dreams.DreamController$DreamRecord: void releaseWakeLockIfNeeded()>();

        r56 = r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler>;

        r57 = new com.android.server.dreams._$$Lambda$DreamController$NsbIx0iECm45E_fdqE55LTS32LQ;

        specialinvoke r57.<com.android.server.dreams._$$Lambda$DreamController$NsbIx0iECm45E_fdqE55LTS32LQ: void <init>(com.android.server.dreams.DreamController,com.android.server.dreams.DreamController$DreamRecord)>(r0, r44);

        virtualinvoke r56.<android.os.Handler: boolean post(java.lang.Runnable)>(r57);

     label29:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        return;

     label30:
        $r38 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        throw $r38;

        catch java.lang.Throwable from label02 to label03 with label30;
        catch java.lang.Throwable from label04 to label05 with label30;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label30;
        catch java.lang.Throwable from label08 to label09 with label30;
        catch java.lang.Throwable from label10 to label11 with label30;
        catch java.lang.Throwable from label11 to label12 with label30;
        catch java.lang.Throwable from label14 to label15 with label30;
        catch java.lang.Throwable from label17 to label18 with label30;
        catch java.lang.Throwable from label18 to label19 with label30;
        catch android.os.RemoteException from label20 to label21 with label22;
        catch java.lang.Throwable from label20 to label21 with label30;
        catch java.util.NoSuchElementException from label23 to label24 with label25;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.lang.Throwable from label27 to label28 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
    }

    public static void <clinit>()
    {
        <com.android.server.dreams.DreamController: java.lang.String TAG> = "DreamController";

        <com.android.server.dreams.DreamController: int DREAM_FINISH_TIMEOUT> = 5000;

        <com.android.server.dreams.DreamController: int DREAM_CONNECTION_TIMEOUT> = 5000;

        return;
    }
}
