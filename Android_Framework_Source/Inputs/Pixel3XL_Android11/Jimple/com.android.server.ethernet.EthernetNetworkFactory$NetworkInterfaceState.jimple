class com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState extends java.lang.Object
{
    private static java.lang.String sTcpBufferSizes;
    private static final android.util.SparseArray sTransports;
    private final android.net.NetworkCapabilities mCapabilities;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final java.lang.String mHwAddress;
    private volatile android.net.ip.IIpClient mIpClient;
    private com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$IpClientCallbacksImpl mIpClientCallback;
    private android.net.IpConfiguration mIpConfig;
    private final int mLegacyType;
    private android.net.LinkProperties mLinkProperties;
    private boolean mLinkUp;
    private android.net.NetworkAgent mNetworkAgent;
    private final android.net.NetworkFactory mNetworkFactory;
    final java.lang.String name;
    long refCount;

    static void <clinit>()
    {
        android.util.SparseArray $r1, $r4, $r6, $r8, $r10, $r12;
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo $r2, $r3, $r5, $r7, $r9, $r11;

        <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: java.lang.String sTcpBufferSizes> = null;

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.util.SparseArray sTransports> = $r1;

        $r2 = new com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo;

        specialinvoke $r2.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo: void <init>(int,int,com.android.server.ethernet.EthernetNetworkFactory$1)>(-1, 30, null);

        virtualinvoke $r1.<android.util.SparseArray: void put(int,java.lang.Object)>(6, $r2);

        $r4 = <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.util.SparseArray sTransports>;

        $r3 = new com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo;

        specialinvoke $r3.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo: void <init>(int,int,com.android.server.ethernet.EthernetNetworkFactory$1)>(-1, 1, null);

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(5, $r3);

        $r6 = <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.util.SparseArray sTransports>;

        $r5 = new com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo;

        specialinvoke $r5.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo: void <init>(int,int,com.android.server.ethernet.EthernetNetworkFactory$1)>(9, 70, null);

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(3, $r5);

        $r8 = <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.util.SparseArray sTransports>;

        $r7 = new com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo;

        specialinvoke $r7.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo: void <init>(int,int,com.android.server.ethernet.EthernetNetworkFactory$1)>(7, 69, null);

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(2, $r7);

        $r10 = <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.util.SparseArray sTransports>;

        $r9 = new com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo;

        specialinvoke $r9.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo: void <init>(int,int,com.android.server.ethernet.EthernetNetworkFactory$1)>(1, 60, null);

        virtualinvoke $r10.<android.util.SparseArray: void put(int,java.lang.Object)>(1, $r9);

        $r12 = <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.util.SparseArray sTransports>;

        $r11 = new com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo;

        specialinvoke $r11.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo: void <init>(int,int,com.android.server.ethernet.EthernetNetworkFactory$1)>(0, 50, null);

        virtualinvoke $r12.<android.util.SparseArray: void put(int,java.lang.Object)>(0, $r11);

        return;
    }

    void <init>(java.lang.String, java.lang.String, android.os.Handler, android.content.Context, android.net.NetworkCapabilities, android.net.NetworkFactory)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        java.lang.String r1, r9;
        android.os.Handler r2;
        android.content.Context r3;
        android.net.NetworkCapabilities r4, r10;
        android.net.NetworkFactory r5;
        int i0, $i1, $i2;
        android.net.LinkProperties $r6;
        java.lang.Object $r7;
        com.android.server.ethernet.EthernetNetworkFactory$ConfigurationException $r8;
        int[] r11;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Handler;

        r3 := @parameter3: android.content.Context;

        r4 := @parameter4: android.net.NetworkCapabilities;

        r5 := @parameter5: android.net.NetworkFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new android.net.LinkProperties;

        specialinvoke $r6.<android.net.LinkProperties: void <init>()>();

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.LinkProperties mLinkProperties> = $r6;

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: long refCount> = 0L;

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: java.lang.String name> = r9;

        $r7 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        r10 = (android.net.NetworkCapabilities) $r7;

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkCapabilities mCapabilities> = r10;

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.os.Handler mHandler> = r2;

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.content.Context mContext> = r3;

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkFactory mNetworkFactory> = r5;

        r11 = virtualinvoke r10.<android.net.NetworkCapabilities: int[] getTransportTypes()>();

        $i1 = lengthof r11;

        if $i1 <= 0 goto label1;

        $i2 = r11[0];

        i0 = staticinvoke <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: int getLegacyType(int)>($i2);

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: java.lang.String mHwAddress> = r1;

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: int mLegacyType> = i0;

        return;

     label1:
        $r8 = new com.android.server.ethernet.EthernetNetworkFactory$ConfigurationException;

        specialinvoke $r8.<com.android.server.ethernet.EthernetNetworkFactory$ConfigurationException: void <init>(java.lang.String)>("Network Capabilities do not have an associated transport type.");

        throw $r8;
    }

    static void access$000(com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;

        r0 := @parameter0: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        specialinvoke r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: void start()>();

        return;
    }

    static android.net.NetworkCapabilities access$100(com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        android.net.NetworkCapabilities $r1;

        r0 := @parameter0: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        $r1 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkCapabilities mCapabilities>;

        return $r1;
    }

    static boolean access$200(com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        $z0 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: boolean mLinkUp>;

        return $z0;
    }

    static android.net.ip.IIpClient access$400(com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        android.net.ip.IIpClient $r1;

        r0 := @parameter0: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        $r1 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.ip.IIpClient mIpClient>;

        return $r1;
    }

    static android.net.ip.IIpClient access$402(com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState, android.net.ip.IIpClient)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        android.net.ip.IIpClient r1;

        r0 := @parameter0: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        r1 := @parameter1: android.net.ip.IIpClient;

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.ip.IIpClient mIpClient> = r1;

        return r1;
    }

    static android.os.Handler access$500(com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        $r1 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.os.Handler mHandler>;

        return $r1;
    }

    static android.net.NetworkAgent access$900(com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        android.net.NetworkAgent $r1;

        r0 := @parameter0: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        $r1 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent>;

        return $r1;
    }

    private static int getLegacyType(int)
    {
        int i0, $i1;
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo r0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;

        i0 := @parameter0: int;

        $r1 = <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.util.SparseArray sTransports>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>(i0, null);

        r0 = (com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo) $r2;

        if r0 == null goto label1;

        $i1 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo: int mLegacyType>;

        return $i1;

     label1:
        return -1;
    }

    private int getNetworkScore()
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        java.lang.String r1, $r8, $r11;
        boolean $z0;
        android.net.NetworkCapabilities $r2;
        int $i0, $i1, $i2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        android.net.LinkProperties $r7;
        int[] r12;
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo r14;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        $z0 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: boolean mLinkUp>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkCapabilities mCapabilities>;

        r12 = virtualinvoke $r2.<android.net.NetworkCapabilities: int[] getTransportTypes()>();

        $i0 = lengthof r12;

        if $i0 >= 1 goto label2;

        r1 = staticinvoke <com.android.server.ethernet.EthernetNetworkFactory: java.lang.String access$600()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Network interface \'");

        $r7 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.LinkProperties mLinkProperties>;

        $r8 = virtualinvoke $r7.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has no transport type associated with it. Score set to zero");

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r1, $r11);

        return 0;

     label2:
        $r3 = <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.util.SparseArray sTransports>;

        $i1 = r12[0];

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>($i1, null);

        r14 = (com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo) $r4;

        if r14 == null goto label3;

        $i2 = r14.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$TransportInfo: int mScore>;

        return $i2;

     label3:
        return 0;
    }

    private static void provisionIpClient(android.net.ip.IIpClient, android.net.IpConfiguration, java.lang.String)
    {
        android.net.IpConfiguration$ProxySettings $r1, $r2, $r11, $r12;
        android.net.ProxyInfo $r3, $r4;
        android.net.shared.ProvisioningConfiguration$Builder $r5, $r6, $r8, $r10;
        android.net.ProvisioningConfigurationParcelable $r7;
        android.net.StaticIpConfiguration $r9;
        android.os.RemoteException $r13, $r15, $r17;
        android.net.ip.IIpClient r19;
        android.net.IpConfiguration r20;
        java.lang.String r21;
        boolean $z0;
        android.net.IpConfiguration$IpAssignment $r23, $r24;
        android.net.shared.ProvisioningConfiguration r25;

        r19 := @parameter0: android.net.ip.IIpClient;

        r20 := @parameter1: android.net.IpConfiguration;

        r21 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r20.<android.net.IpConfiguration: android.net.IpConfiguration$ProxySettings getProxySettings()>();

        $r2 = <android.net.IpConfiguration$ProxySettings: android.net.IpConfiguration$ProxySettings STATIC>;

        if $r1 == $r2 goto label01;

        $r11 = virtualinvoke r20.<android.net.IpConfiguration: android.net.IpConfiguration$ProxySettings getProxySettings()>();

        $r12 = <android.net.IpConfiguration$ProxySettings: android.net.IpConfiguration$ProxySettings PAC>;

        if $r11 != $r12 goto label04;

     label01:
        $r3 = virtualinvoke r20.<android.net.IpConfiguration: android.net.ProxyInfo getHttpProxy()>();

        $r4 = staticinvoke <android.net.shared.LinkPropertiesParcelableUtil: android.net.ProxyInfo toStableParcelable(android.net.ProxyInfo)>($r3);

        interfaceinvoke r19.<android.net.ip.IIpClient: void setHttpProxy(android.net.ProxyInfo)>($r4);

     label02:
        goto label04;

     label03:
        $r17 := @caughtexception;

        virtualinvoke $r17.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label04:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r21);

        if $z0 != 0 goto label08;

     label05:
        interfaceinvoke r19.<android.net.ip.IIpClient: void setTcpBufferSizes(java.lang.String)>(r21);

     label06:
        goto label08;

     label07:
        $r15 := @caughtexception;

        virtualinvoke $r15.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label08:
        $r23 = virtualinvoke r20.<android.net.IpConfiguration: android.net.IpConfiguration$IpAssignment getIpAssignment()>();

        $r24 = <android.net.IpConfiguration$IpAssignment: android.net.IpConfiguration$IpAssignment STATIC>;

        if $r23 != $r24 goto label09;

        $r8 = new android.net.shared.ProvisioningConfiguration$Builder;

        specialinvoke $r8.<android.net.shared.ProvisioningConfiguration$Builder: void <init>()>();

        $r9 = virtualinvoke r20.<android.net.IpConfiguration: android.net.StaticIpConfiguration getStaticIpConfiguration()>();

        $r10 = virtualinvoke $r8.<android.net.shared.ProvisioningConfiguration$Builder: android.net.shared.ProvisioningConfiguration$Builder withStaticConfiguration(android.net.StaticIpConfiguration)>($r9);

        r25 = virtualinvoke $r10.<android.net.shared.ProvisioningConfiguration$Builder: android.net.shared.ProvisioningConfiguration build()>();

        goto label10;

     label09:
        $r5 = new android.net.shared.ProvisioningConfiguration$Builder;

        specialinvoke $r5.<android.net.shared.ProvisioningConfiguration$Builder: void <init>()>();

        $r6 = virtualinvoke $r5.<android.net.shared.ProvisioningConfiguration$Builder: android.net.shared.ProvisioningConfiguration$Builder withProvisioningTimeoutMs(int)>(0);

        r25 = virtualinvoke $r6.<android.net.shared.ProvisioningConfiguration$Builder: android.net.shared.ProvisioningConfiguration build()>();

     label10:
        $r7 = virtualinvoke r25.<android.net.shared.ProvisioningConfiguration: android.net.ProvisioningConfigurationParcelable toStableParcelable()>();

        interfaceinvoke r19.<android.net.ip.IIpClient: void startProvisioning(android.net.ProvisioningConfigurationParcelable)>($r7);

     label11:
        goto label13;

     label12:
        $r13 := @caughtexception;

        virtualinvoke $r13.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label13:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch android.os.RemoteException from label10 to label11 with label12;
    }

    private static void shutdownIpClient(android.net.ip.IIpClient)
    {
        android.os.RemoteException $r0;
        java.lang.String $r1;
        android.net.ip.IIpClient r2;

        r2 := @parameter0: android.net.ip.IIpClient;

     label1:
        interfaceinvoke r2.<android.net.ip.IIpClient: void shutdown()>();

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        $r1 = staticinvoke <com.android.server.ethernet.EthernetNetworkFactory: java.lang.String access$600()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "Error stopping IpClient", $r0);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void start()
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        android.net.ip.IIpClient $r2, $r14;
        java.lang.String $r3, $r5, $r6, $r8, $r11, $r12, $r17, $r18;
        java.lang.Object[] $r4;
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$IpClientCallbacksImpl $r7, $r10;
        android.content.Context $r9, $r15;
        android.net.IpConfiguration $r13;
        android.content.res.Resources $r16;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        $r2 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.ip.IIpClient mIpClient>;

        if $r2 == null goto label1;

        $r18 = staticinvoke <com.android.server.ethernet.EthernetNetworkFactory: java.lang.String access$600()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r18, "IpClient already started");

        return;

     label1:
        $r3 = staticinvoke <com.android.server.ethernet.EthernetNetworkFactory: java.lang.String access$600()>();

        $r4 = newarray (java.lang.Object)[1];

        $r5 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: java.lang.String name>;

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Starting Ethernet IpClient(%s)", $r4);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r6);

        $r7 = new com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$IpClientCallbacksImpl;

        specialinvoke $r7.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$IpClientCallbacksImpl: void <init>(com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState,com.android.server.ethernet.EthernetNetworkFactory$1)>(r0, null);

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$IpClientCallbacksImpl mIpClientCallback> = $r7;

        $r9 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.content.Context mContext>;

        $r8 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: java.lang.String name>;

        staticinvoke <android.net.ip.IpClientUtil: void makeIpClient(android.content.Context,java.lang.String,android.net.ip.IpClientCallbacks)>($r9, $r8, $r7);

        $r10 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$IpClientCallbacksImpl mIpClientCallback>;

        staticinvoke <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$IpClientCallbacksImpl: void access$800(com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$IpClientCallbacksImpl)>($r10);

        $r11 = <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: java.lang.String sTcpBufferSizes>;

        if $r11 != null goto label2;

        $r15 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: android.content.res.Resources getResources()>();

        $r17 = virtualinvoke $r16.<android.content.res.Resources: java.lang.String getString(int)>(17039893);

        <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: java.lang.String sTcpBufferSizes> = $r17;

     label2:
        $r14 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.ip.IIpClient mIpClient>;

        $r13 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.IpConfiguration mIpConfig>;

        $r12 = <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: java.lang.String sTcpBufferSizes>;

        staticinvoke <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: void provisionIpClient(android.net.ip.IIpClient,android.net.IpConfiguration,java.lang.String)>($r14, $r13, $r12);

        return;
    }

    private void updateAgent()
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        java.lang.String r1, $r11;
        android.net.NetworkAgent $r3, $r13, $r15, $r16;
        java.lang.StringBuilder $r4;
        android.net.NetworkCapabilities $r6, $r12;
        android.net.LinkProperties $r9, $r14;
        int $i1;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        $r3 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent>;

        if $r3 != null goto label1;

        return;

     label1:
        r1 = staticinvoke <com.android.server.ethernet.EthernetNetworkFactory: java.lang.String access$600()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating mNetworkAgent with: ");

        $r6 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkCapabilities mCapabilities>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r9 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(r1, $r11);

        $r13 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent>;

        $r12 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkCapabilities mCapabilities>;

        virtualinvoke $r13.<android.net.NetworkAgent: void sendNetworkCapabilities(android.net.NetworkCapabilities)>($r12);

        $r15 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent>;

        $r14 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r15.<android.net.NetworkAgent: void sendLinkProperties(android.net.LinkProperties)>($r14);

        $r16 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent>;

        $i1 = specialinvoke r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: int getNetworkScore()>();

        virtualinvoke $r16.<android.net.NetworkAgent: void sendNetworkScore(int)>($i1);

        return;
    }

    boolean isRestricted()
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        android.net.NetworkCapabilities $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        $r1 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkCapabilities mCapabilities>;

        $z0 = virtualinvoke $r1.<android.net.NetworkCapabilities: boolean hasCapability(int)>(13);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    void onIpLayerStarted(android.net.LinkProperties)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        android.net.NetworkAgent $r1, $r15, $r16;
        android.net.NetworkAgentConfig$Builder $r2, $r3, $r4;
        int $i0, $i1;
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$1 $r5;
        android.os.Handler $r6;
        android.content.Context $r7;
        android.os.Looper $r8;
        android.net.NetworkCapabilities $r9;
        android.net.LinkProperties $r10, r18;
        android.net.NetworkFactory $r11;
        android.net.NetworkProvider $r12;
        java.lang.String $r14, $r17;
        android.net.NetworkAgentConfig r19;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        r18 := @parameter0: android.net.LinkProperties;

        $r1 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent>;

        if $r1 == null goto label1;

        $r17 = staticinvoke <com.android.server.ethernet.EthernetNetworkFactory: java.lang.String access$600()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r17, "Already have a NetworkAgent - aborting new request");

        virtualinvoke r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: void stop()>();

        return;

     label1:
        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.LinkProperties mLinkProperties> = r18;

        $r2 = new android.net.NetworkAgentConfig$Builder;

        specialinvoke $r2.<android.net.NetworkAgentConfig$Builder: void <init>()>();

        $i0 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: int mLegacyType>;

        $r3 = virtualinvoke $r2.<android.net.NetworkAgentConfig$Builder: android.net.NetworkAgentConfig$Builder setLegacyType(int)>($i0);

        $r4 = virtualinvoke $r3.<android.net.NetworkAgentConfig$Builder: android.net.NetworkAgentConfig$Builder setLegacyTypeName(java.lang.String)>("Ethernet");

        r19 = virtualinvoke $r4.<android.net.NetworkAgentConfig$Builder: android.net.NetworkAgentConfig build()>();

        $r5 = new com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$1;

        $r7 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.content.Context mContext>;

        $r6 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.os.Handler mHandler>;

        $r8 = virtualinvoke $r6.<android.os.Handler: android.os.Looper getLooper()>();

        $r9 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkCapabilities mCapabilities>;

        $r10 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.LinkProperties mLinkProperties>;

        $i1 = specialinvoke r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: int getNetworkScore()>();

        $r11 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkFactory mNetworkFactory>;

        $r12 = virtualinvoke $r11.<android.net.NetworkFactory: android.net.NetworkProvider getProvider()>();

        specialinvoke $r5.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$1: void <init>(com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState,android.content.Context,android.os.Looper,java.lang.String,android.net.NetworkCapabilities,android.net.LinkProperties,int,android.net.NetworkAgentConfig,android.net.NetworkProvider)>(r0, $r7, $r8, "Ethernet", $r9, $r10, $i1, r19, $r12);

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent> = $r5;

        virtualinvoke $r5.<android.net.NetworkAgent: android.net.Network register()>();

        $r15 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent>;

        $r14 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: java.lang.String mHwAddress>;

        virtualinvoke $r15.<android.net.NetworkAgent: void setLegacyExtraInfo(java.lang.String)>($r14);

        $r16 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent>;

        virtualinvoke $r16.<android.net.NetworkAgent: void markConnected()>();

        return;
    }

    void onIpLayerStopped(android.net.LinkProperties)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        android.net.LinkProperties r1;
        java.lang.String $r2;
        android.net.util.InterfaceParams $r3;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        r1 := @parameter0: android.net.LinkProperties;

        virtualinvoke r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: void stop()>();

        $r2 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: java.lang.String name>;

        $r3 = staticinvoke <android.net.util.InterfaceParams: android.net.util.InterfaceParams getByName(java.lang.String)>($r2);

        if $r3 == null goto label1;

        specialinvoke r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: void start()>();

     label1:
        return;
    }

    void restart()
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        $r1 = staticinvoke <com.android.server.ethernet.EthernetNetworkFactory: java.lang.String access$600()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "reconnecting Etherent");

        virtualinvoke r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: void stop()>();

        specialinvoke r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: void start()>();

        return;
    }

    boolean satisfied(android.net.NetworkCapabilities)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        android.net.NetworkCapabilities r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $r2 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkCapabilities mCapabilities>;

        $z0 = virtualinvoke r1.<android.net.NetworkCapabilities: boolean satisfiedByNetworkCapabilities(android.net.NetworkCapabilities)>($r2);

        return $z0;
    }

    void setIpConfig(android.net.IpConfiguration)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        android.net.IpConfiguration r1, $r2;
        boolean $z0;
        android.net.NetworkAgent $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        r1 := @parameter0: android.net.IpConfiguration;

        $r2 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.IpConfiguration mIpConfig>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <com.android.server.ethernet.EthernetNetworkFactory: java.lang.String access$600()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "ipConfig have not changed,so ignore setIpConfig");

        return;

     label1:
        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.IpConfiguration mIpConfig> = r1;

        $r3 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent>;

        if $r3 == null goto label2;

        virtualinvoke r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: void restart()>();

     label2:
        return;
    }

    void stop()
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        android.net.NetworkAgent r1;
        android.net.ip.IIpClient $r2, $r4;
        android.net.LinkProperties $r3;
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$IpClientCallbacksImpl $r5;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        $r2 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.ip.IIpClient mIpClient>;

        if $r2 == null goto label1;

        $r4 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.ip.IIpClient mIpClient>;

        staticinvoke <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: void shutdownIpClient(android.net.ip.IIpClient)>($r4);

        $r5 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$IpClientCallbacksImpl mIpClientCallback>;

        staticinvoke <com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$IpClientCallbacksImpl: void access$1000(com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$IpClientCallbacksImpl)>($r5);

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.ip.IIpClient mIpClient> = null;

     label1:
        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState$IpClientCallbacksImpl mIpClientCallback> = null;

        r1 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent>;

        if r1 == null goto label2;

        virtualinvoke r1.<android.net.NetworkAgent: void unregister()>();

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent> = null;

     label2:
        $r3 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r3.<android.net.LinkProperties: void clear()>();

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r9, $r14, $r31;
        long $l0;
        boolean $z0;
        android.net.NetworkCapabilities $r17;
        android.net.NetworkAgent $r20;
        int $i1;
        android.net.ip.IIpClient $r25;
        android.net.LinkProperties $r28;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ refCount: ");

        $l0 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: long refCount>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", iface: ");

        $r9 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", up: ");

        $z0 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: boolean mLinkUp>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hwAddress: ");

        $r14 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: java.lang.String mHwAddress>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", networkCapabilities: ");

        $r17 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkCapabilities mCapabilities>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", networkAgent: ");

        $r20 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", score: ");

        $i1 = specialinvoke r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: int getNetworkScore()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ipClient: ");

        $r25 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.ip.IIpClient mIpClient>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",linkProperties: ");

        $r28 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r31 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r31;
    }

    void updateLinkProperties(android.net.LinkProperties)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        android.net.LinkProperties r1;
        android.net.NetworkAgent r2;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        r1 := @parameter0: android.net.LinkProperties;

        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.LinkProperties mLinkProperties> = r1;

        r2 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: android.net.NetworkAgent mNetworkAgent>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.net.NetworkAgent: void sendLinkProperties(android.net.LinkProperties)>(r1);

     label1:
        return;
    }

    boolean updateLinkState(boolean)
    {
        com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: boolean mLinkUp>;

        if $z1 != z0 goto label1;

        return 0;

     label1:
        r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: boolean mLinkUp> = z0;

        virtualinvoke r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: void stop()>();

        if z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.ethernet.EthernetNetworkFactory$NetworkInterfaceState: void start()>();

     label2:
        return 1;
    }
}
