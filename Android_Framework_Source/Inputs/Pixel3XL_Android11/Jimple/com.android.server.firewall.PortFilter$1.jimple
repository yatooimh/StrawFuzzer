class com.android.server.firewall.PortFilter$1 extends com.android.server.firewall.FilterFactory
{

    void <init>(java.lang.String)
    {
        com.android.server.firewall.PortFilter$1 r0;
        java.lang.String r1;

        r0 := @this: com.android.server.firewall.PortFilter$1;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.firewall.FilterFactory: void <init>(java.lang.String)>(r1);

        return;
    }

    public com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.firewall.PortFilter$1 r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, $r9, $r15, $r21, r22, r25;
        java.lang.Throwable $r4, $r10, $r16, r39, r40, r41, r42;
        int i0, i1, i2, i3;
        java.lang.StringBuilder r31, r33, r35;
        org.xmlpull.v1.XmlPullParserException r32, r34, r36, r38;
        com.android.server.firewall.PortFilter r37;

        r0 := @this: com.android.server.firewall.PortFilter$1;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = -1;

        i1 = -1;

        r22 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "equals");

        if r22 == null goto label04;

     label01:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r22);

     label02:
        i0 = i1;

        goto label04;

     label03:
        $r4 := @caughtexception;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid port value: ");

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        r32 = new org.xmlpull.v1.XmlPullParserException;

        $r9 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r32.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r9, r1, null);

        r39 = (java.lang.Throwable) r32;

        throw r39;

     label04:
        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "min");

        r25 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "max");

        if r2 != null goto label05;

        i2 = i0;

        i3 = i1;

        if r25 == null goto label13;

     label05:
        if r22 != null goto label14;

        if r2 == null goto label09;

     label06:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label07:
        goto label09;

     label08:
        $r10 := @caughtexception;

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid minimum port value: ");

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r34 = new org.xmlpull.v1.XmlPullParserException;

        $r15 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r34.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r15, r1, null);

        r40 = (java.lang.Throwable) r34;

        throw r40;

     label09:
        i2 = i0;

        i3 = i1;

        if r25 == null goto label13;

     label10:
        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r25);

     label11:
        i2 = i0;

        goto label13;

     label12:
        $r16 := @caughtexception;

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid maximum port value: ");

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        r36 = new org.xmlpull.v1.XmlPullParserException;

        $r21 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r36.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r21, r1, null);

        r41 = (java.lang.Throwable) r36;

        throw r41;

     label13:
        r37 = new com.android.server.firewall.PortFilter;

        specialinvoke r37.<com.android.server.firewall.PortFilter: void <init>(int,int,com.android.server.firewall.PortFilter$1)>(i2, i3, null);

        return r37;

     label14:
        r38 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r38.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("Port filter cannot use both equals and range filtering", r1, null);

        r42 = (java.lang.Throwable) r38;

        throw r42;

        catch java.lang.NumberFormatException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label06 to label07 with label08;
        catch java.lang.NumberFormatException from label10 to label11 with label12;
    }
}
