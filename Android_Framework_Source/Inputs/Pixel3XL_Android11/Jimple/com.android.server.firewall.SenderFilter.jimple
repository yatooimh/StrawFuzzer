class com.android.server.firewall.SenderFilter extends java.lang.Object
{
    private static final java.lang.String ATTR_TYPE;
    public static final com.android.server.firewall.FilterFactory FACTORY;
    private static final com.android.server.firewall.Filter SIGNATURE;
    private static final com.android.server.firewall.Filter SYSTEM;
    private static final com.android.server.firewall.Filter SYSTEM_OR_SIGNATURE;
    private static final com.android.server.firewall.Filter USER_ID;
    private static final java.lang.String VAL_SIGNATURE;
    private static final java.lang.String VAL_SYSTEM;
    private static final java.lang.String VAL_SYSTEM_OR_SIGNATURE;
    private static final java.lang.String VAL_USER_ID;

    static void <clinit>()
    {
        com.android.server.firewall.SenderFilter$1 $r0;
        com.android.server.firewall.SenderFilter$2 $r1;
        com.android.server.firewall.SenderFilter$3 $r2;
        com.android.server.firewall.SenderFilter$4 $r3;
        com.android.server.firewall.SenderFilter$5 $r4;

        <com.android.server.firewall.SenderFilter: java.lang.String VAL_USER_ID> = "userId";

        <com.android.server.firewall.SenderFilter: java.lang.String VAL_SYSTEM_OR_SIGNATURE> = "system|signature";

        <com.android.server.firewall.SenderFilter: java.lang.String VAL_SYSTEM> = "system";

        <com.android.server.firewall.SenderFilter: java.lang.String VAL_SIGNATURE> = "signature";

        <com.android.server.firewall.SenderFilter: java.lang.String ATTR_TYPE> = "type";

        $r0 = new com.android.server.firewall.SenderFilter$1;

        specialinvoke $r0.<com.android.server.firewall.SenderFilter$1: void <init>(java.lang.String)>("sender");

        <com.android.server.firewall.SenderFilter: com.android.server.firewall.FilterFactory FACTORY> = $r0;

        $r1 = new com.android.server.firewall.SenderFilter$2;

        specialinvoke $r1.<com.android.server.firewall.SenderFilter$2: void <init>()>();

        <com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter SIGNATURE> = $r1;

        $r2 = new com.android.server.firewall.SenderFilter$3;

        specialinvoke $r2.<com.android.server.firewall.SenderFilter$3: void <init>()>();

        <com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter SYSTEM> = $r2;

        $r3 = new com.android.server.firewall.SenderFilter$4;

        specialinvoke $r3.<com.android.server.firewall.SenderFilter$4: void <init>()>();

        <com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter SYSTEM_OR_SIGNATURE> = $r3;

        $r4 = new com.android.server.firewall.SenderFilter$5;

        specialinvoke $r4.<com.android.server.firewall.SenderFilter$5: void <init>()>();

        <com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter USER_ID> = $r4;

        return;
    }

    void <init>()
    {
        com.android.server.firewall.SenderFilter r0;

        r0 := @this: com.android.server.firewall.SenderFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static com.android.server.firewall.Filter access$000()
    {
        com.android.server.firewall.Filter $r0;

        $r0 = <com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter SYSTEM>;

        return $r0;
    }

    static com.android.server.firewall.Filter access$100()
    {
        com.android.server.firewall.Filter $r0;

        $r0 = <com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter SIGNATURE>;

        return $r0;
    }

    static com.android.server.firewall.Filter access$200()
    {
        com.android.server.firewall.Filter $r0;

        $r0 = <com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter SYSTEM_OR_SIGNATURE>;

        return $r0;
    }

    static com.android.server.firewall.Filter access$300()
    {
        com.android.server.firewall.Filter $r0;

        $r0 = <com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter USER_ID>;

        return $r0;
    }

    static boolean isPrivilegedApp(int, int)
    {
        int i0, $i1, $i2, i4, i5;
        android.os.RemoteException $r0;
        boolean z0;
        android.content.pm.IPackageManager r1;

        i4 := @parameter0: int;

        i0 := @parameter1: int;

        z0 = 1;

        if i4 == 1000 goto label7;

        if i4 == 0 goto label7;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if i0 == $i1 goto label7;

        if i0 != 0 goto label1;

        goto label7;

     label1:
        r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label2:
        i5 = interfaceinvoke r1.<android.content.pm.IPackageManager: int getPrivateFlagsForUid(int)>(i4);

     label3:
        $i2 = i5 & 8;

        if $i2 == 0 goto label4;

        goto label5;

     label4:
        z0 = 0;

     label5:
        return z0;

     label6:
        $r0 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IntentFirewall", "Remote exception while retrieving uid flags", $r0);

        return 0;

     label7:
        return 1;

        catch android.os.RemoteException from label2 to label3 with label6;
    }
}
