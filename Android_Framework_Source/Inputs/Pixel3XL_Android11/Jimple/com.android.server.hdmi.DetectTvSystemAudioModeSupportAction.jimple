public class com.android.server.hdmi.DetectTvSystemAudioModeSupportAction extends com.android.server.hdmi.HdmiCecFeatureAction
{
    static final int MAX_RETRY_COUNT;
    private static final int STATE_WAITING_FOR_FEATURE_ABORT;
    private static final int STATE_WAITING_FOR_SET_SAM;
    private com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem$TvSystemAudioModeSupportedCallback mCallback;
    private int mSendSetSystemAudioModeRetryCount;

    void <init>(com.android.server.hdmi.HdmiCecLocalDevice, com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem$TvSystemAudioModeSupportedCallback)
    {
        com.android.server.hdmi.DetectTvSystemAudioModeSupportAction r0;
        com.android.server.hdmi.HdmiCecLocalDevice r1;
        com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem$TvSystemAudioModeSupportedCallback r2;

        r0 := @this: com.android.server.hdmi.DetectTvSystemAudioModeSupportAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice;

        r2 := @parameter1: com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem$TvSystemAudioModeSupportedCallback;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecFeatureAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice)>(r1);

        r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int mSendSetSystemAudioModeRetryCount> = 0;

        r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem$TvSystemAudioModeSupportedCallback mCallback> = r2;

        return;
    }

    private void finishAction(boolean)
    {
        com.android.server.hdmi.DetectTvSystemAudioModeSupportAction r0;
        boolean z0;
        com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem$TvSystemAudioModeSupportedCallback $r1;
        com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem $r2;

        r0 := @this: com.android.server.hdmi.DetectTvSystemAudioModeSupportAction;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem$TvSystemAudioModeSupportedCallback mCallback>;

        interfaceinvoke $r1.<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem$TvSystemAudioModeSupportedCallback: void onResult(boolean)>(z0);

        $r2 = virtualinvoke r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem audioSystem()>();

        virtualinvoke $r2.<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void setTvSystemAudioModeSupport(boolean)>(z0);

        virtualinvoke r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: void finish()>();

        return;
    }

    void handleTimerEvent(int)
    {
        com.android.server.hdmi.DetectTvSystemAudioModeSupportAction r0;
        int $i0, $i1, $i2, i3, i4, i5;

        r0 := @this: com.android.server.hdmi.DetectTvSystemAudioModeSupportAction;

        i3 := @parameter0: int;

        $i0 = r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int mState>;

        if $i0 == i3 goto label1;

        return;

     label1:
        i4 = r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int mState>;

        if i4 == 1 goto label4;

        if i4 == 2 goto label2;

        return;

     label2:
        $i1 = r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int mSendSetSystemAudioModeRetryCount>;

        i5 = $i1 + 1;

        r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int mSendSetSystemAudioModeRetryCount> = i5;

        if i5 >= 5 goto label3;

        r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int mState> = 1;

        $i2 = r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: void addTimer(int,int)>($i2, 2000);

        virtualinvoke r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: void sendSetSystemAudioMode()>();

        goto label5;

     label3:
        specialinvoke r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: void finishAction(boolean)>(0);

        goto label5;

     label4:
        specialinvoke r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: void finishAction(boolean)>(1);

     label5:
        return;
    }

    public void lambda$sendSetSystemAudioMode$0$DetectTvSystemAudioModeSupportAction(int)
    {
        com.android.server.hdmi.DetectTvSystemAudioModeSupportAction r0;
        int i0;

        r0 := @this: com.android.server.hdmi.DetectTvSystemAudioModeSupportAction;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        specialinvoke r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: void finishAction(boolean)>(0);

     label1:
        return;
    }

    boolean processCommand(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.DetectTvSystemAudioModeSupportAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer $r2;

        r0 := @this: com.android.server.hdmi.DetectTvSystemAudioModeSupportAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $i0 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        if $i0 != 0 goto label4;

        $i1 = r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int mState>;

        if $i1 == 1 goto label1;

        return 0;

     label1:
        $i2 = staticinvoke <com.android.server.hdmi.HdmiUtils: int getAbortFeatureOpcode(com.android.server.hdmi.HdmiCecMessage)>(r1);

        if $i2 != 114 goto label4;

        $i3 = staticinvoke <com.android.server.hdmi.HdmiUtils: int getAbortReason(com.android.server.hdmi.HdmiCecMessage)>(r1);

        if $i3 != 1 goto label2;

        $r2 = r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer mActionTimer>;

        interfaceinvoke $r2.<com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer: void clearTimerMessage()>();

        r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int mState> = 2;

        $i4 = r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: void addTimer(int,int)>($i4, 300);

        goto label3;

     label2:
        specialinvoke r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: void finishAction(boolean)>(0);

     label3:
        return 1;

     label4:
        return 0;
    }

    protected void sendSetSystemAudioMode()
    {
        com.android.server.hdmi.DetectTvSystemAudioModeSupportAction r0;
        int $i0;
        com.android.server.hdmi.HdmiCecMessage $r1;
        com.android.server.hdmi._$$Lambda$DetectTvSystemAudioModeSupportAction$9ZB9uijssEfI695RNRL5G3nnAaM $r2;

        r0 := @this: com.android.server.hdmi.DetectTvSystemAudioModeSupportAction;

        $i0 = virtualinvoke r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int getSourceAddress()>();

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildSetSystemAudioMode(int,int,boolean)>($i0, 0, 1);

        $r2 = new com.android.server.hdmi._$$Lambda$DetectTvSystemAudioModeSupportAction$9ZB9uijssEfI695RNRL5G3nnAaM;

        specialinvoke $r2.<com.android.server.hdmi._$$Lambda$DetectTvSystemAudioModeSupportAction$9ZB9uijssEfI695RNRL5G3nnAaM: void <init>(com.android.server.hdmi.DetectTvSystemAudioModeSupportAction)>(r0);

        virtualinvoke r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage,com.android.server.hdmi.HdmiControlService$SendMessageCallback)>($r1, $r2);

        return;
    }

    boolean start()
    {
        com.android.server.hdmi.DetectTvSystemAudioModeSupportAction r0;
        int $i0;

        r0 := @this: com.android.server.hdmi.DetectTvSystemAudioModeSupportAction;

        r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int mState> = 1;

        $i0 = r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: void addTimer(int,int)>($i0, 2000);

        virtualinvoke r0.<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: void sendSetSystemAudioMode()>();

        return 1;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int STATE_WAITING_FOR_SET_SAM> = 2;

        <com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int STATE_WAITING_FOR_FEATURE_ABORT> = 1;

        <com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: int MAX_RETRY_COUNT> = 5;

        return;
    }
}
