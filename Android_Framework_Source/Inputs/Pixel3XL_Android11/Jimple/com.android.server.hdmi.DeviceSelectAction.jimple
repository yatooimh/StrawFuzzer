final class com.android.server.hdmi.DeviceSelectAction extends com.android.server.hdmi.HdmiCecFeatureAction
{
    private static final int LOOP_COUNTER_MAX;
    private static final int STATE_WAIT_FOR_DEVICE_POWER_ON;
    private static final int STATE_WAIT_FOR_DEVICE_TO_TRANSIT_TO_STANDBY;
    private static final int STATE_WAIT_FOR_REPORT_POWER_STATUS;
    private static final java.lang.String TAG;
    private static final int TIMEOUT_POWER_ON_MS;
    private static final int TIMEOUT_TRANSIT_TO_STANDBY_MS;
    private final android.hardware.hdmi.IHdmiControlCallback mCallback;
    private final com.android.server.hdmi.HdmiCecMessage mGivePowerStatus;
    private int mPowerStatusCounter;
    private final android.hardware.hdmi.HdmiDeviceInfo mTarget;

    public void <init>(com.android.server.hdmi.HdmiCecLocalDeviceTv, android.hardware.hdmi.HdmiDeviceInfo, android.hardware.hdmi.IHdmiControlCallback)
    {
        com.android.server.hdmi.DeviceSelectAction r0;
        com.android.server.hdmi.HdmiCecLocalDeviceTv r1;
        android.hardware.hdmi.HdmiDeviceInfo r2;
        android.hardware.hdmi.IHdmiControlCallback r3;
        int $i0, $i1;
        com.android.server.hdmi.HdmiCecMessage $r4;

        r0 := @this: com.android.server.hdmi.DeviceSelectAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDeviceTv;

        r2 := @parameter1: android.hardware.hdmi.HdmiDeviceInfo;

        r3 := @parameter2: android.hardware.hdmi.IHdmiControlCallback;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecFeatureAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice)>(r1);

        r0.<com.android.server.hdmi.DeviceSelectAction: int mPowerStatusCounter> = 0;

        r0.<com.android.server.hdmi.DeviceSelectAction: android.hardware.hdmi.IHdmiControlCallback mCallback> = r3;

        r0.<com.android.server.hdmi.DeviceSelectAction: android.hardware.hdmi.HdmiDeviceInfo mTarget> = r2;

        $i0 = virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: int getSourceAddress()>();

        $i1 = virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: int getTargetAddress()>();

        $r4 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildGiveDevicePowerStatus(int,int)>($i0, $i1);

        r0.<com.android.server.hdmi.DeviceSelectAction: com.android.server.hdmi.HdmiCecMessage mGivePowerStatus> = $r4;

        return;
    }

    static void access$000(com.android.server.hdmi.DeviceSelectAction, int)
    {
        com.android.server.hdmi.DeviceSelectAction r0;
        int i0;

        r0 := @parameter0: com.android.server.hdmi.DeviceSelectAction;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void invokeCallback(int)>(i0);

        return;
    }

    private boolean handleReportPowerStatus(int)
    {
        com.android.server.hdmi.DeviceSelectAction r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.server.hdmi.DeviceSelectAction;

        i0 := @parameter0: int;

        if i0 == 0 goto label10;

        if i0 == 1 goto label07;

        if i0 == 2 goto label04;

        if i0 == 3 goto label01;

        return 0;

     label01:
        $i4 = r0.<com.android.server.hdmi.DeviceSelectAction: int mPowerStatusCounter>;

        if $i4 >= 4 goto label02;

        r0.<com.android.server.hdmi.DeviceSelectAction: int mState> = 2;

        $i5 = r0.<com.android.server.hdmi.DeviceSelectAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void addTimer(int,int)>($i5, 5000);

        goto label03;

     label02:
        specialinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void sendSetStreamPath()>();

     label03:
        return 1;

     label04:
        $i2 = r0.<com.android.server.hdmi.DeviceSelectAction: int mPowerStatusCounter>;

        if $i2 >= 20 goto label05;

        r0.<com.android.server.hdmi.DeviceSelectAction: int mState> = 3;

        $i3 = r0.<com.android.server.hdmi.DeviceSelectAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void addTimer(int,int)>($i3, 5000);

        goto label06;

     label05:
        specialinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void sendSetStreamPath()>();

     label06:
        return 1;

     label07:
        $i1 = r0.<com.android.server.hdmi.DeviceSelectAction: int mPowerStatusCounter>;

        if $i1 != 0 goto label08;

        specialinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void turnOnDevice()>();

        goto label09;

     label08:
        specialinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void sendSetStreamPath()>();

     label09:
        return 1;

     label10:
        specialinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void sendSetStreamPath()>();

        return 1;
    }

    private void invokeCallback(int)
    {
        com.android.server.hdmi.DeviceSelectAction r0;
        int i0;
        android.os.RemoteException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.hardware.hdmi.IHdmiControlCallback r7;

        r0 := @this: com.android.server.hdmi.DeviceSelectAction;

        i0 := @parameter0: int;

        r7 = r0.<com.android.server.hdmi.DeviceSelectAction: android.hardware.hdmi.IHdmiControlCallback mCallback>;

        if r7 != null goto label1;

        return;

     label1:
        interfaceinvoke r7.<android.hardware.hdmi.IHdmiControlCallback: void onComplete(int)>(i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callback failed:");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DeviceSelect", $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void queryDevicePowerStatus()
    {
        com.android.server.hdmi.DeviceSelectAction r0;
        com.android.server.hdmi.DeviceSelectAction$1 $r1;
        com.android.server.hdmi.HdmiCecMessage $r2;
        int $i0;

        r0 := @this: com.android.server.hdmi.DeviceSelectAction;

        $r2 = r0.<com.android.server.hdmi.DeviceSelectAction: com.android.server.hdmi.HdmiCecMessage mGivePowerStatus>;

        $r1 = new com.android.server.hdmi.DeviceSelectAction$1;

        specialinvoke $r1.<com.android.server.hdmi.DeviceSelectAction$1: void <init>(com.android.server.hdmi.DeviceSelectAction)>(r0);

        virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage,com.android.server.hdmi.HdmiControlService$SendMessageCallback)>($r2, $r1);

        r0.<com.android.server.hdmi.DeviceSelectAction: int mState> = 1;

        $i0 = r0.<com.android.server.hdmi.DeviceSelectAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void addTimer(int,int)>($i0, 2000);

        return;
    }

    private void sendSetStreamPath()
    {
        com.android.server.hdmi.DeviceSelectAction r0;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r1, $r3;
        com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource $r2;
        android.hardware.hdmi.HdmiDeviceInfo $r4, $r5;
        int $i0, $i1, $i2;
        com.android.server.hdmi.HdmiCecMessage $r6;

        r0 := @this: com.android.server.hdmi.DeviceSelectAction;

        $r1 = virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $r2 = virtualinvoke $r1.<com.android.server.hdmi.HdmiCecLocalDeviceTv: com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource getActiveSource()>();

        virtualinvoke $r2.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: void invalidate()>();

        $r3 = virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $r4 = r0.<com.android.server.hdmi.DeviceSelectAction: android.hardware.hdmi.HdmiDeviceInfo mTarget>;

        $i0 = virtualinvoke $r4.<android.hardware.hdmi.HdmiDeviceInfo: int getPhysicalAddress()>();

        virtualinvoke $r3.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void setActivePath(int)>($i0);

        $i1 = virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: int getSourceAddress()>();

        $r5 = r0.<com.android.server.hdmi.DeviceSelectAction: android.hardware.hdmi.HdmiDeviceInfo mTarget>;

        $i2 = virtualinvoke $r5.<android.hardware.hdmi.HdmiDeviceInfo: int getPhysicalAddress()>();

        $r6 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildSetStreamPath(int,int)>($i1, $i2);

        virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r6);

        specialinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void invokeCallback(int)>(0);

        virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void finish()>();

        return;
    }

    private void turnOnDevice()
    {
        com.android.server.hdmi.DeviceSelectAction r0;
        android.hardware.hdmi.HdmiDeviceInfo $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.hdmi.DeviceSelectAction;

        $r1 = r0.<com.android.server.hdmi.DeviceSelectAction: android.hardware.hdmi.HdmiDeviceInfo mTarget>;

        $i0 = virtualinvoke $r1.<android.hardware.hdmi.HdmiDeviceInfo: int getLogicalAddress()>();

        virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void sendUserControlPressedAndReleased(int,int)>($i0, 64);

        $r2 = r0.<com.android.server.hdmi.DeviceSelectAction: android.hardware.hdmi.HdmiDeviceInfo mTarget>;

        $i1 = virtualinvoke $r2.<android.hardware.hdmi.HdmiDeviceInfo: int getLogicalAddress()>();

        virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void sendUserControlPressedAndReleased(int,int)>($i1, 109);

        r0.<com.android.server.hdmi.DeviceSelectAction: int mState> = 3;

        $i2 = r0.<com.android.server.hdmi.DeviceSelectAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void addTimer(int,int)>($i2, 5000);

        return;
    }

    int getTargetAddress()
    {
        com.android.server.hdmi.DeviceSelectAction r0;
        android.hardware.hdmi.HdmiDeviceInfo $r1;
        int $i0;

        r0 := @this: com.android.server.hdmi.DeviceSelectAction;

        $r1 = r0.<com.android.server.hdmi.DeviceSelectAction: android.hardware.hdmi.HdmiDeviceInfo mTarget>;

        $i0 = virtualinvoke $r1.<android.hardware.hdmi.HdmiDeviceInfo: int getLogicalAddress()>();

        return $i0;
    }

    public void handleTimerEvent(int)
    {
        com.android.server.hdmi.DeviceSelectAction r0;
        int $i0, $i1, $i2, i4, i5;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r1;
        boolean $z0;

        r0 := @this: com.android.server.hdmi.DeviceSelectAction;

        i4 := @parameter0: int;

        $i0 = r0.<com.android.server.hdmi.DeviceSelectAction: int mState>;

        if $i0 == i4 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DeviceSelect", "Timer in a wrong state. Ignored.");

        return;

     label1:
        i5 = r0.<com.android.server.hdmi.DeviceSelectAction: int mState>;

        if i5 == 1 goto label3;

        if i5 == 2 goto label2;

        if i5 == 3 goto label2;

        goto label5;

     label2:
        $i1 = r0.<com.android.server.hdmi.DeviceSelectAction: int mPowerStatusCounter>;

        $i2 = $i1 + 1;

        r0.<com.android.server.hdmi.DeviceSelectAction: int mPowerStatusCounter> = $i2;

        specialinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void queryDevicePowerStatus()>();

        goto label5;

     label3:
        $r1 = virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $z0 = virtualinvoke $r1.<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean isPowerStandbyOrTransient()>();

        if $z0 == 0 goto label4;

        specialinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void invokeCallback(int)>(6);

        virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void finish()>();

        return;

     label4:
        specialinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void sendSetStreamPath()>();

     label5:
        return;
    }

    public boolean processCommand(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.DeviceSelectAction r0;
        int i0, $i1, $i2, $i3;
        byte $b4;
        boolean $z0;
        com.android.server.hdmi.HdmiCecMessage r1;
        byte[] r2;

        r0 := @this: com.android.server.hdmi.DeviceSelectAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $i1 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getSource()>();

        $i2 = virtualinvoke r0.<com.android.server.hdmi.DeviceSelectAction: int getTargetAddress()>();

        if $i1 == $i2 goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        r2 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $i3 = r0.<com.android.server.hdmi.DeviceSelectAction: int mState>;

        if $i3 == 1 goto label2;

        return 0;

     label2:
        if i0 != 144 goto label3;

        $b4 = r2[0];

        $z0 = specialinvoke r0.<com.android.server.hdmi.DeviceSelectAction: boolean handleReportPowerStatus(int)>($b4);

        return $z0;

     label3:
        return 0;
    }

    public boolean start()
    {
        com.android.server.hdmi.DeviceSelectAction r0;

        r0 := @this: com.android.server.hdmi.DeviceSelectAction;

        specialinvoke r0.<com.android.server.hdmi.DeviceSelectAction: void queryDevicePowerStatus()>();

        return 1;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.DeviceSelectAction: int TIMEOUT_TRANSIT_TO_STANDBY_MS> = 5000;

        <com.android.server.hdmi.DeviceSelectAction: int TIMEOUT_POWER_ON_MS> = 5000;

        <com.android.server.hdmi.DeviceSelectAction: java.lang.String TAG> = "DeviceSelect";

        <com.android.server.hdmi.DeviceSelectAction: int STATE_WAIT_FOR_REPORT_POWER_STATUS> = 1;

        <com.android.server.hdmi.DeviceSelectAction: int STATE_WAIT_FOR_DEVICE_TO_TRANSIT_TO_STANDBY> = 2;

        <com.android.server.hdmi.DeviceSelectAction: int STATE_WAIT_FOR_DEVICE_POWER_ON> = 3;

        <com.android.server.hdmi.DeviceSelectAction: int LOOP_COUNTER_MAX> = 20;

        return;
    }
}
