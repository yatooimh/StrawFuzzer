final class com.android.server.hdmi.HdmiCecController$NativeWrapperImpl extends java.lang.Object implements com.android.server.hdmi.HdmiCecController$NativeWrapper, android.os.IHwBinder$DeathRecipient, android.hardware.tv.cec.V1_0.IHdmiCec$getPhysicalAddressCallback
{
    private android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec;
    private final java.lang.Object mLock;
    private int mPhysicalAddress;

    private void <init>()
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        java.lang.Object $r1;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: java.lang.Object mLock> = $r1;

        r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: int mPhysicalAddress> = 65535;

        return;
    }

    void <init>(com.android.server.hdmi.HdmiCecController$1)
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        com.android.server.hdmi.HdmiCecController$1 r1;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecController$1;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: void <init>()>();

        return;
    }

    boolean connectToHal()
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        android.os.RemoteException $r1, $r3;
        java.lang.Object[] $r2, $r4;
        android.hardware.tv.cec.V1_0.IHdmiCec r5;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

     label1:
        r5 = staticinvoke <android.hardware.tv.cec.V1_0.IHdmiCec: android.hardware.tv.cec.V1_0.IHdmiCec getService()>();

        r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec> = r5;

     label2:
        interfaceinvoke r5.<android.hardware.tv.cec.V1_0.IHdmiCec: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>(r0, 353L);

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

     label5:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Couldn\'t link to death : ", $r3, $r4);

     label6:
        return 1;

     label7:
        $r1 := @caughtexception;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Couldn\'t get tv.cec service : ", $r1, $r2);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label2 to label3 with label4;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public int nativeAddLogicalAddress(int)
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        android.hardware.tv.cec.V1_0.IHdmiCec $r2;
        android.os.RemoteException $r3;
        java.lang.Object[] $r4;
        int i0, i1;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec>;

        i1 = interfaceinvoke $r2.<android.hardware.tv.cec.V1_0.IHdmiCec: int addLogicalAddress(int)>(i0);

     label2:
        return i1;

     label3:
        $r3 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Failed to add a logical address : ", $r3, $r4);

        return 2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void nativeClearLogicalAddress()
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        android.hardware.tv.cec.V1_0.IHdmiCec $r2;
        android.os.RemoteException $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

     label1:
        $r2 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec>;

        interfaceinvoke $r2.<android.hardware.tv.cec.V1_0.IHdmiCec: void clearLogicalAddress()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Failed to clear logical address : ", $r3, $r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void nativeEnableAudioReturnChannel(int, boolean)
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        int i0;
        boolean z0;
        android.hardware.tv.cec.V1_0.IHdmiCec $r2;
        android.os.RemoteException $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r2 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec>;

        interfaceinvoke $r2.<android.hardware.tv.cec.V1_0.IHdmiCec: void enableAudioReturnChannel(int,boolean)>(i0, z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Failed to enable/disable ARC : ", $r3, $r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int nativeGetPhysicalAddress()
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        int i0;
        android.hardware.tv.cec.V1_0.IHdmiCec $r2;
        android.os.RemoteException $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

     label1:
        $r2 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec>;

        interfaceinvoke $r2.<android.hardware.tv.cec.V1_0.IHdmiCec: void getPhysicalAddress(android.hardware.tv.cec.V1_0.IHdmiCec$getPhysicalAddressCallback)>(r0);

        i0 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: int mPhysicalAddress>;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Failed to get physical address : ", $r3, $r4);

        return 65535;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.hdmi.HdmiPortInfo[] nativeGetPortInfos()
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        android.hardware.tv.cec.V1_0.HdmiPortInfo r1;
        android.hardware.tv.cec.V1_0.IHdmiCec $r2;
        int $i0, $i2, $i3, i4;
        boolean $z0, $z1, $z2;
        java.lang.Object $r3;
        android.hardware.hdmi.HdmiPortInfo $r4;
        short $s1;
        android.os.RemoteException $r5;
        java.lang.Object[] $r6;
        java.util.ArrayList r7;
        android.hardware.hdmi.HdmiPortInfo[] r8;
        java.util.Iterator r9;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

     label1:
        $r2 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec>;

        r7 = interfaceinvoke $r2.<android.hardware.tv.cec.V1_0.IHdmiCec: java.util.ArrayList getPortInfo()>();

        $i0 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        r8 = newarray (android.hardware.hdmi.HdmiPortInfo)[$i0];

     label2:
        i4 = 0;

     label3:
        r9 = virtualinvoke r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.hardware.tv.cec.V1_0.HdmiPortInfo) $r3;

        $r4 = new android.hardware.hdmi.HdmiPortInfo;

        $i3 = r1.<android.hardware.tv.cec.V1_0.HdmiPortInfo: int portId>;

        $i2 = r1.<android.hardware.tv.cec.V1_0.HdmiPortInfo: int type>;

        $s1 = r1.<android.hardware.tv.cec.V1_0.HdmiPortInfo: short physicalAddress>;

        $z2 = r1.<android.hardware.tv.cec.V1_0.HdmiPortInfo: boolean cecSupported>;

        $z1 = r1.<android.hardware.tv.cec.V1_0.HdmiPortInfo: boolean arcSupported>;

        specialinvoke $r4.<android.hardware.hdmi.HdmiPortInfo: void <init>(int,int,int,boolean,boolean,boolean)>($i3, $i2, $s1, $z2, 0, $z1);

        r8[i4] = $r4;

     label5:
        i4 = i4 + 1;

        goto label4;

     label6:
        return r8;

     label7:
        $r5 := @caughtexception;

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Failed to get port information : ", $r5, $r6);

        return null;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label4 to label5 with label7;
    }

    public int nativeGetVendorId()
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        int i0;
        android.hardware.tv.cec.V1_0.IHdmiCec $r2;
        android.os.RemoteException $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

     label1:
        $r2 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec>;

        i0 = interfaceinvoke $r2.<android.hardware.tv.cec.V1_0.IHdmiCec: int getVendorId()>();

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Failed to get vendor id : ", $r3, $r4);

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int nativeGetVersion()
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        int i0;
        android.hardware.tv.cec.V1_0.IHdmiCec $r2;
        android.os.RemoteException $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

     label1:
        $r2 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec>;

        i0 = interfaceinvoke $r2.<android.hardware.tv.cec.V1_0.IHdmiCec: int getCecVersion()>();

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Failed to get cec version : ", $r3, $r4);

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String nativeInit()
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        boolean $z0;
        android.hardware.tv.cec.V1_0.IHdmiCec $r1;
        java.lang.String r2;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

        $z0 = virtualinvoke r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: boolean connectToHal()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec>;

        r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public boolean nativeIsConnected(int)
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        int i0;
        boolean z0;
        android.hardware.tv.cec.V1_0.IHdmiCec $r2;
        android.os.RemoteException $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec>;

        z0 = interfaceinvoke $r2.<android.hardware.tv.cec.V1_0.IHdmiCec: boolean isConnected(int)>(i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Failed to get connection info : ", $r3, $r4);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int nativeSendCecCommand(int, int, byte[])
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        byte b0;
        android.hardware.tv.cec.V1_0.CecMessage $r2;
        java.util.ArrayList $r3, $r5;
        int $i1, i2, i3, i4, i5, i6;
        android.hardware.tv.cec.V1_0.IHdmiCec $r4;
        java.lang.Byte $r6;
        android.os.RemoteException $r7;
        java.lang.Object[] $r8;
        byte[] r9;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        r9 := @parameter2: byte[];

        $r2 = new android.hardware.tv.cec.V1_0.CecMessage;

        specialinvoke $r2.<android.hardware.tv.cec.V1_0.CecMessage: void <init>()>();

        $r2.<android.hardware.tv.cec.V1_0.CecMessage: int initiator> = i2;

        $r2.<android.hardware.tv.cec.V1_0.CecMessage: int destination> = i3;

        $r3 = new java.util.ArrayList;

        $i1 = lengthof r9;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i1);

        $r2.<android.hardware.tv.cec.V1_0.CecMessage: java.util.ArrayList body> = $r3;

        i4 = lengthof r9;

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        b0 = r9[i5];

        $r5 = $r2.<android.hardware.tv.cec.V1_0.CecMessage: java.util.ArrayList body>;

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r4 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec>;

        i6 = interfaceinvoke $r4.<android.hardware.tv.cec.V1_0.IHdmiCec: int sendMessage(android.hardware.tv.cec.V1_0.CecMessage)>($r2);

     label3:
        return i6;

     label4:
        $r7 := @caughtexception;

        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Failed to send CEC message : ", $r7, $r8);

        return 3;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void nativeSetLanguage(java.lang.String)
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        android.hardware.tv.cec.V1_0.IHdmiCec $r1;
        android.os.RemoteException $r2;
        java.lang.Object[] $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

        r4 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec>;

        interfaceinvoke $r1.<android.hardware.tv.cec.V1_0.IHdmiCec: void setLanguage(java.lang.String)>(r4);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Failed to set language : ", $r2, $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void nativeSetOption(int, boolean)
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        int i0;
        boolean z0;
        android.hardware.tv.cec.V1_0.IHdmiCec $r2;
        android.os.RemoteException $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r2 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec>;

        interfaceinvoke $r2.<android.hardware.tv.cec.V1_0.IHdmiCec: void setOption(int,boolean)>(i0, z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Failed to set option : ", $r3, $r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onValues(int, short)
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        int i0, $i2;
        short s1;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.Short r3;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

        i0 := @parameter0: int;

        s1 := @parameter1: short;

        if i0 != 0 goto label6;

        r1 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = new java.lang.Short;

        specialinvoke r3.<java.lang.Short: void <init>(short)>(s1);

        $i2 = virtualinvoke r3.<java.lang.Short: int intValue()>();

        r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: int mPhysicalAddress> = $i2;

        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void serviceDied(long)
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        long l0;
        byte $b1;
        java.lang.StringBuilder $r2;
        java.lang.Object[] $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

        l0 := @parameter0: long;

        $b1 = l0 cmp 353L;

        if $b1 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service died cokkie : ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; reconnecting");

        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6[0] = $r7;

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Object[])>("HdmiCecController", $r6);

        virtualinvoke r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: boolean connectToHal()>();

     label1:
        return;
    }

    public void setCallback(com.android.server.hdmi.HdmiCecController$HdmiCecCallback)
    {
        com.android.server.hdmi.HdmiCecController$NativeWrapperImpl r0;
        android.hardware.tv.cec.V1_0.IHdmiCec $r1;
        android.os.RemoteException $r2;
        java.lang.Object[] $r3;
        com.android.server.hdmi.HdmiCecController$HdmiCecCallback r4;

        r0 := @this: com.android.server.hdmi.HdmiCecController$NativeWrapperImpl;

        r4 := @parameter0: com.android.server.hdmi.HdmiCecController$HdmiCecCallback;

     label1:
        $r1 = r0.<com.android.server.hdmi.HdmiCecController$NativeWrapperImpl: android.hardware.tv.cec.V1_0.IHdmiCec mHdmiCec>;

        interfaceinvoke $r1.<android.hardware.tv.cec.V1_0.IHdmiCec: void setCallback(android.hardware.tv.cec.V1_0.IHdmiCecCallback)>(r4);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void error(java.lang.String,java.lang.Exception,java.lang.Object[])>("Couldn\'t initialise tv.cec callback : ", $r2, $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
