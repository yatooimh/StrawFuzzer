public final class com.android.server.hdmi.HdmiCecMessage extends java.lang.Object
{
    public static final byte[] EMPTY_PARAM;
    private final int mDestination;
    private final int mOpcode;
    private final byte[] mParams;
    private final int mSource;

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = <libcore.util.EmptyArray: byte[] BYTE>;

        <com.android.server.hdmi.HdmiCecMessage: byte[] EMPTY_PARAM> = $r0;

        return;
    }

    public void <init>(int, int, int, byte[])
    {
        com.android.server.hdmi.HdmiCecMessage r0;
        int i0, i1, i2, $i3, $i4;
        byte[] r1, $r2;

        r0 := @this: com.android.server.hdmi.HdmiCecMessage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.hdmi.HdmiCecMessage: int mSource> = i0;

        r0.<com.android.server.hdmi.HdmiCecMessage: int mDestination> = i1;

        $i3 = i2 & 255;

        r0.<com.android.server.hdmi.HdmiCecMessage: int mOpcode> = $i3;

        $i4 = lengthof r1;

        $r2 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r1, $i4);

        r0.<com.android.server.hdmi.HdmiCecMessage: byte[] mParams> = $r2;

        return;
    }

    private static boolean filterMessageParameters(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 68 goto label2;

        if i0 == 69 goto label2;

        if i0 == 71 goto label2;

        if i0 == 100 goto label2;

        if i0 == 160 goto label2;

        tableswitch(i0)
        {
            case 137: goto label2;
            case 138: goto label2;
            case 139: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    private static java.lang.String opcodeToString(int)
    {
        int i0;
        java.lang.Object[] $r0;
        java.lang.Integer $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        if i0 == 0 goto label78;

        if i0 == 26 goto label77;

        if i0 == 27 goto label76;

        if i0 == 125 goto label75;

        if i0 == 126 goto label74;

        if i0 == 153 goto label73;

        if i0 == 154 goto label72;

        lookupswitch(i0)
        {
            case 0: goto label78;
            case 13: goto label71;
            case 15: goto label70;
            case 100: goto label69;
            case 103: goto label68;
            case 122: goto label67;
            case 137: goto label66;
            case 138: goto label65;
            case 139: goto label64;
            case 140: goto label63;
            case 141: goto label62;
            case 142: goto label61;
            case 143: goto label60;
            case 144: goto label59;
            case 145: goto label58;
            case 146: goto label57;
            case 147: goto label56;
            case 151: goto label55;
            case 192: goto label54;
            case 193: goto label53;
            case 194: goto label52;
            case 195: goto label51;
            case 196: goto label50;
            case 197: goto label49;
            case 248: goto label48;
            case 255: goto label47;
            default: goto label01;
        };

     label01:
        tableswitch(i0)
        {
            case 4: goto label46;
            case 5: goto label45;
            case 6: goto label44;
            case 7: goto label43;
            case 8: goto label42;
            case 9: goto label41;
            case 10: goto label40;
            case 11: goto label39;
            default: goto label02;
        };

     label02:
        tableswitch(i0)
        {
            case 50: goto label38;
            case 51: goto label37;
            case 52: goto label36;
            case 53: goto label35;
            case 54: goto label34;
            default: goto label03;
        };

     label03:
        tableswitch(i0)
        {
            case 65: goto label33;
            case 66: goto label32;
            case 67: goto label31;
            case 68: goto label30;
            case 69: goto label29;
            case 70: goto label28;
            case 71: goto label27;
            default: goto label04;
        };

     label04:
        tableswitch(i0)
        {
            case 112: goto label26;
            case 113: goto label25;
            case 114: goto label24;
            default: goto label05;
        };

     label05:
        tableswitch(i0)
        {
            case 128: goto label23;
            case 129: goto label22;
            case 130: goto label21;
            case 131: goto label20;
            case 132: goto label19;
            case 133: goto label18;
            case 134: goto label17;
            case 135: goto label16;
            default: goto label06;
        };

     label06:
        tableswitch(i0)
        {
            case 157: goto label15;
            case 158: goto label14;
            case 159: goto label13;
            case 160: goto label12;
            case 161: goto label11;
            case 162: goto label10;
            case 163: goto label09;
            case 164: goto label08;
            default: goto label07;
        };

     label07:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r0[0] = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Opcode: %02X", $r0);

        return $r2;

     label08:
        return "Request Short Audio Descriptor";

     label09:
        return "Report Short Audio Descriptor";

     label10:
        return "Set External Timer";

     label11:
        return "Clear External Timer";

     label12:
        return "Vendor Command With Id";

     label13:
        return "Get Cec Version";

     label14:
        return "Cec Version";

     label15:
        return "InActive Source";

     label16:
        return "Device Vendor Id";

     label17:
        return "Set Stream Path";

     label18:
        return "Request Active Source";

     label19:
        return "Report Physical Address";

     label20:
        return "Give Physical Address";

     label21:
        return "Active Source";

     label22:
        return "Routing Information";

     label23:
        return "Routing Change";

     label24:
        return "Set System Audio Mode";

     label25:
        return "Give Audio Status";

     label26:
        return "System Audio Mode Request";

     label27:
        return "Set Osd Name";

     label28:
        return "Give Osd Name";

     label29:
        return "User Control Release";

     label30:
        return "User Control Pressed";

     label31:
        return "Timer Cleared Status";

     label32:
        return "Deck Control";

     label33:
        return "Play";

     label34:
        return "Standby";

     label35:
        return "Timer Status";

     label36:
        return "Set Analog Timer";

     label37:
        return "Clear Analog Timer";

     label38:
        return "Set Menu Language";

     label39:
        return "Record Off";

     label40:
        return "Record Status";

     label41:
        return "Record On";

     label42:
        return "Give Tuner Device Status";

     label43:
        return "Tuner Device Status";

     label44:
        return "Tuner Step Decrement";

     label45:
        return "Tuner Step Increment";

     label46:
        return "Image View On";

     label47:
        return "Abort";

     label48:
        return "Cdc Message";

     label49:
        return "Terminate ARC";

     label50:
        return "Request ARC Termination";

     label51:
        return "Request ARC Initiation";

     label52:
        return "Report ARC Terminated";

     label53:
        return "Report ARC Initiated";

     label54:
        return "Initiate ARC";

     label55:
        return "Set Digital Timer";

     label56:
        return "Select Digital Service";

     label57:
        return "Select Analog Service";

     label58:
        return "Get Menu Language";

     label59:
        return "Report Power Status";

     label60:
        return "Give Device Power Status";

     label61:
        return "Menu Status";

     label62:
        return "Menu Request";

     label63:
        return "Give Device Vendor Id";

     label64:
        return "Vendor Remote Button Up";

     label65:
        return "Vendor Remote Button Down";

     label66:
        return "Vendor Command";

     label67:
        return "Report Audio Status";

     label68:
        return "Set Timer Program Title";

     label69:
        return "Set Osd String";

     label70:
        return "Record Tv Screen";

     label71:
        return "Text View On";

     label72:
        return "Set Audio Rate";

     label73:
        return "Clear Digital Timer";

     label74:
        return "System Audio Mode Status";

     label75:
        return "Give System Audio Mode Status";

     label76:
        return "Deck Status";

     label77:
        return "Give Deck Status";

     label78:
        return "Feature Abort";
    }

    public boolean equals(java.lang.Object)
    {
        com.android.server.hdmi.HdmiCecMessage r0, r4;
        boolean z0, $z1, z2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        byte[] $r1, $r2;
        java.lang.Object r3;

        r0 := @this: com.android.server.hdmi.HdmiCecMessage;

        r3 := @parameter0: java.lang.Object;

        z0 = r3 instanceof com.android.server.hdmi.HdmiCecMessage;

        z2 = 0;

        if z0 == 0 goto label2;

        r4 = (com.android.server.hdmi.HdmiCecMessage) r3;

        $i0 = r0.<com.android.server.hdmi.HdmiCecMessage: int mSource>;

        $i1 = virtualinvoke r4.<com.android.server.hdmi.HdmiCecMessage: int getSource()>();

        if $i0 != $i1 goto label1;

        $i2 = r0.<com.android.server.hdmi.HdmiCecMessage: int mDestination>;

        $i3 = virtualinvoke r4.<com.android.server.hdmi.HdmiCecMessage: int getDestination()>();

        if $i2 != $i3 goto label1;

        $i4 = r0.<com.android.server.hdmi.HdmiCecMessage: int mOpcode>;

        $i5 = virtualinvoke r4.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        if $i4 != $i5 goto label1;

        $r1 = r0.<com.android.server.hdmi.HdmiCecMessage: byte[] mParams>;

        $r2 = virtualinvoke r4.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r1, $r2);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label1;

     label1:
        return z2;

     label2:
        return 0;
    }

    public int getDestination()
    {
        com.android.server.hdmi.HdmiCecMessage r0;
        int $i0;

        r0 := @this: com.android.server.hdmi.HdmiCecMessage;

        $i0 = r0.<com.android.server.hdmi.HdmiCecMessage: int mDestination>;

        return $i0;
    }

    public int getOpcode()
    {
        com.android.server.hdmi.HdmiCecMessage r0;
        int $i0;

        r0 := @this: com.android.server.hdmi.HdmiCecMessage;

        $i0 = r0.<com.android.server.hdmi.HdmiCecMessage: int mOpcode>;

        return $i0;
    }

    public byte[] getParams()
    {
        com.android.server.hdmi.HdmiCecMessage r0;
        byte[] $r1;

        r0 := @this: com.android.server.hdmi.HdmiCecMessage;

        $r1 = r0.<com.android.server.hdmi.HdmiCecMessage: byte[] mParams>;

        return $r1;
    }

    public int getSource()
    {
        com.android.server.hdmi.HdmiCecMessage r0;
        int $i0;

        r0 := @this: com.android.server.hdmi.HdmiCecMessage;

        $i0 = r0.<com.android.server.hdmi.HdmiCecMessage: int mSource>;

        return $i0;
    }

    public int hashCode()
    {
        com.android.server.hdmi.HdmiCecMessage r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Integer $r2, $r3, $r4, $r6;
        byte[] $r5;

        r0 := @this: com.android.server.hdmi.HdmiCecMessage;

        $r1 = newarray (java.lang.Object)[4];

        $i0 = r0.<com.android.server.hdmi.HdmiCecMessage: int mSource>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $i1 = r0.<com.android.server.hdmi.HdmiCecMessage: int mDestination>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $i2 = r0.<com.android.server.hdmi.HdmiCecMessage: int mOpcode>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[2] = $r4;

        $r5 = r0.<com.android.server.hdmi.HdmiCecMessage: byte[] mParams>;

        $i3 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[3] = $r6;

        $i4 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i4;
    }

    public java.lang.String toString()
    {
        com.android.server.hdmi.HdmiCecMessage r0;
        byte[] r2, $r11, $r17;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, i9;
        java.lang.StringBuffer $r3;
        java.lang.Object[] $r4, $r12, $r16;
        java.lang.String $r5, $r9, $r14, $r19, $r21;
        java.lang.Integer $r6, $r7, $r8, $r18;
        boolean $z0;
        byte $b7;
        java.lang.Byte $r13;

        r0 := @this: com.android.server.hdmi.HdmiCecMessage;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = newarray (java.lang.Object)[4];

        $i1 = r0.<com.android.server.hdmi.HdmiCecMessage: int mOpcode>;

        $r5 = staticinvoke <com.android.server.hdmi.HdmiCecMessage: java.lang.String opcodeToString(int)>($i1);

        $r4[0] = $r5;

        $i2 = r0.<com.android.server.hdmi.HdmiCecMessage: int mSource>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[1] = $r6;

        $i3 = r0.<com.android.server.hdmi.HdmiCecMessage: int mDestination>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4[2] = $r7;

        $i4 = r0.<com.android.server.hdmi.HdmiCecMessage: int mOpcode>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r4[3] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("<%s> %X%X:%02X", $r4);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = r0.<com.android.server.hdmi.HdmiCecMessage: byte[] mParams>;

        $i5 = lengthof $r11;

        if $i5 <= 0 goto label3;

        $i6 = r0.<com.android.server.hdmi.HdmiCecMessage: int mOpcode>;

        $z0 = staticinvoke <com.android.server.hdmi.HdmiCecMessage: boolean filterMessageParameters(int)>($i6);

        if $z0 == 0 goto label1;

        $r16 = newarray (java.lang.Object)[1];

        $r17 = r0.<com.android.server.hdmi.HdmiCecMessage: byte[] mParams>;

        $i8 = lengthof $r17;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r16[0] = $r18;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" <Redacted len=%d>", $r16);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        goto label3;

     label1:
        r2 = r0.<com.android.server.hdmi.HdmiCecMessage: byte[] mParams>;

        i0 = lengthof r2;

        i9 = 0;

     label2:
        if i9 >= i0 goto label3;

        $r12 = newarray (java.lang.Object)[1];

        $b7 = r2[i9];

        $r13 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b7);

        $r12[0] = $r13;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":%02X", $r12);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        i9 = i9 + 1;

        goto label2;

     label3:
        $r21 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r21;
    }
}
