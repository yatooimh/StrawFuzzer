final class com.android.server.hdmi.HdmiControlService$BinderService extends android.hardware.hdmi.IHdmiControlService$Stub
{
    final com.android.server.hdmi.HdmiControlService this$0;

    private void <init>(com.android.server.hdmi.HdmiControlService)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        com.android.server.hdmi.HdmiControlService r1;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: com.android.server.hdmi.HdmiControlService;

        r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0> = r1;

        specialinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void <init>()>();

        return;
    }

    void <init>(com.android.server.hdmi.HdmiControlService, com.android.server.hdmi.HdmiControlService$1)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        com.android.server.hdmi.HdmiControlService r1;
        com.android.server.hdmi.HdmiControlService$1 r2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: com.android.server.hdmi.HdmiControlService;

        r2 := @parameter1: com.android.server.hdmi.HdmiControlService$1;

        specialinvoke r0.<com.android.server.hdmi.HdmiControlService$BinderService: void <init>(com.android.server.hdmi.HdmiControlService)>(r1);

        return;
    }

    public void addDeviceEventListener(android.hardware.hdmi.IHdmiDeviceEventListener)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiDeviceEventListener r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiDeviceEventListener;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$3700(com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiDeviceEventListener)>($r3, r1);

        return;
    }

    public void addHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void addHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)>(r1);

        return;
    }

    public void addHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiControlStatusChangeListener r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlStatusChangeListener;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$3300(com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiControlStatusChangeListener)>($r3, r1);

        return;
    }

    public void addHdmiMhlVendorCommandListener(android.hardware.hdmi.IHdmiMhlVendorCommandListener)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiMhlVendorCommandListener r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiMhlVendorCommandListener;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$4700(com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiMhlVendorCommandListener)>($r3, r1);

        return;
    }

    public void addHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiHotplugEventListener r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiHotplugEventListener;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$3500(com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiHotplugEventListener)>($r3, r1);

        return;
    }

    public void addSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiSystemAudioModeChangeListener r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$3900(com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>($r3, r1);

        return;
    }

    public void addVendorCommandListener(android.hardware.hdmi.IHdmiVendorCommandListener, int)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiVendorCommandListener r1;
        int i0;
        com.android.server.hdmi.HdmiControlService $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiVendorCommandListener;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$4500(com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiVendorCommandListener,int)>($r3, r1, i0);

        return;
    }

    public void askRemoteDeviceToBecomeActiveSource(int)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0;
        com.android.server.hdmi.HdmiControlService $r1, $r3;
        com.android.server.hdmi.HdmiControlService$BinderService$9 $r2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r2 = new com.android.server.hdmi.HdmiControlService$BinderService$9;

        specialinvoke $r2.<com.android.server.hdmi.HdmiControlService$BinderService$9: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,int)>(r0, i0);

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r2);

        return;
    }

    public boolean canChangeSystemAudioMode()
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        com.android.server.hdmi.HdmiCecLocalDeviceTv r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        r1 = virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean hasSystemAudioDevice()>();

        return $z0;
    }

    public void clearTimerRecording(int, int, byte[])
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0, i1;
        byte[] r1;
        com.android.server.hdmi.HdmiControlService $r2, $r4;
        com.android.server.hdmi.HdmiControlService$BinderService$18 $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r3 = new com.android.server.hdmi.HdmiControlService$BinderService$18;

        specialinvoke $r3.<com.android.server.hdmi.HdmiControlService$BinderService$18: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,int,int,byte[])>(r0, i0, i1, r1);

        virtualinvoke $r4.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r3);

        return;
    }

    public void deviceSelect(int, android.hardware.hdmi.IHdmiControlCallback)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0;
        android.hardware.hdmi.IHdmiControlCallback r1;
        com.android.server.hdmi.HdmiControlService $r2, $r4;
        com.android.server.hdmi.HdmiControlService$BinderService$1 $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r3 = new com.android.server.hdmi.HdmiControlService$BinderService$1;

        specialinvoke $r3.<com.android.server.hdmi.HdmiControlService$BinderService$1: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,android.hardware.hdmi.IHdmiControlCallback,int)>(r0, r1, i0);

        virtualinvoke $r4.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r3);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        java.lang.String[] r1;
        com.android.server.hdmi.HdmiControlService $r2, $r7, $r12, $r18, $r23, $r28, $r33, $r38, $r41, $r43, $r46;
        android.content.Context $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.internal.util.IndentingPrintWriter $r4;
        java.lang.StringBuilder $r5, $r10, $r16, $r21, $r26, $r31;
        java.lang.String $r9, $r14, $r20, $r25, $r30, $r35;
        int $i0;
        com.android.server.hdmi.HdmiMhlControllerStub $r39;
        java.util.List $r42;
        com.android.server.hdmi.HdmiCecController $r44, $r47;
        java.io.FileDescriptor r49;
        java.io.PrintWriter r50;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r49 := @parameter0: java.io.FileDescriptor;

        r50 := @parameter1: java.io.PrintWriter;

        r1 := @parameter2: java.lang.String[];

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.hdmi.HdmiControlService: android.content.Context getContext()>();

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r3, "HdmiControlService", r50);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r4.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r50, "  ");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mProhibitMode: ");

        $r7 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $z1 = staticinvoke <com.android.server.hdmi.HdmiControlService: boolean access$4800(com.android.server.hdmi.HdmiControlService)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPowerStatus: ");

        $r12 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $i0 = staticinvoke <com.android.server.hdmi.HdmiControlService: int access$4900(com.android.server.hdmi.HdmiControlService)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r14);

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("System_settings:");

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mHdmiControlEnabled: ");

        $r18 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $z2 = staticinvoke <com.android.server.hdmi.HdmiControlService: boolean access$5000(com.android.server.hdmi.HdmiControlService)>($r18);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r20);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mMhlInputChangeEnabled: ");

        $r23 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $z3 = staticinvoke <com.android.server.hdmi.HdmiControlService: boolean access$5100(com.android.server.hdmi.HdmiControlService)>($r23);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r25);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSystemAudioActivated: ");

        $r28 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $z4 = virtualinvoke $r28.<com.android.server.hdmi.HdmiControlService: boolean isSystemAudioActivated()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r30);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mHdmiCecVolumeControlEnabled ");

        $r33 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $z5 = staticinvoke <com.android.server.hdmi.HdmiControlService: boolean access$5200(com.android.server.hdmi.HdmiControlService)>($r33);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r35);

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("mMhlController: ");

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r38 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r39 = staticinvoke <com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiMhlControllerStub access$1000(com.android.server.hdmi.HdmiControlService)>($r38);

        virtualinvoke $r39.<com.android.server.hdmi.HdmiMhlControllerStub: void dump(com.android.internal.util.IndentingPrintWriter)>($r4);

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        $r41 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r42 = staticinvoke <com.android.server.hdmi.HdmiControlService: java.util.List access$5300(com.android.server.hdmi.HdmiControlService)>($r41);

        staticinvoke <com.android.server.hdmi.HdmiUtils: void dumpIterable(com.android.internal.util.IndentingPrintWriter,java.lang.String,java.lang.Iterable)>($r4, "mPortInfo:", $r42);

        $r43 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r44 = staticinvoke <com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecController access$800(com.android.server.hdmi.HdmiControlService)>($r43);

        if $r44 == null goto label2;

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("mCecController: ");

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r46 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r47 = staticinvoke <com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecController access$800(com.android.server.hdmi.HdmiControlService)>($r46);

        virtualinvoke $r47.<com.android.server.hdmi.HdmiCecController: void dump(com.android.internal.util.IndentingPrintWriter)>($r4);

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label2:
        return;
    }

    public android.hardware.hdmi.HdmiDeviceInfo getActiveSource()
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        java.util.Iterator r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        com.android.server.hdmi.HdmiControlService $r2, $r3, $r6, $r7, $r8, $r10, $r11, $r14, $r16, $r18, $r22, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.hardware.hdmi.HdmiDeviceInfo $r4, $r5, $r13, $r15, $r26, r29, r30, r32;
        com.android.server.hdmi.HdmiCecLocalDevicePlayback $r9, $r23, $r25;
        com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem $r12, $r19;
        java.lang.String $r17;
        java.util.List $r20;
        java.lang.Object $r21;
        com.android.server.hdmi.HdmiCecLocalDeviceTv r27;
        com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource r28, r31;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        r27 = virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        if r27 != null goto label10;

        $r6 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $z1 = virtualinvoke $r6.<com.android.server.hdmi.HdmiControlService: boolean isTvDevice()>();

        if $z1 == 0 goto label01;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("HdmiControlService", "Local tv device not available.");

        return null;

     label01:
        $r7 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $z2 = virtualinvoke $r7.<com.android.server.hdmi.HdmiControlService: boolean isPlaybackDevice()>();

        if $z2 == 0 goto label09;

        $r8 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r9 = virtualinvoke $r8.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDevicePlayback playback()>();

        if $r9 == null goto label02;

        $r22 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r23 = virtualinvoke $r22.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDevicePlayback playback()>();

        $z5 = $r23.<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean mIsActiveSource>;

        if $z5 == 0 goto label02;

        $r24 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r25 = virtualinvoke $r24.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDevicePlayback playback()>();

        $r26 = virtualinvoke $r25.<com.android.server.hdmi.HdmiCecLocalDevicePlayback: android.hardware.hdmi.HdmiDeviceInfo getDeviceInfo()>();

        return $r26;

     label02:
        $r10 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        r28 = virtualinvoke $r10.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource getLocalActiveSource()>();

        $i4 = r28.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        if $i4 != 65535 goto label03;

        return null;

     label03:
        $r11 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r12 = virtualinvoke $r11.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem audioSystem()>();

        if $r12 == null goto label06;

        $r18 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r19 = virtualinvoke $r18.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem audioSystem()>();

        $r20 = virtualinvoke $r19.<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: java.util.List getSafeCecDevicesLocked()>();

        r1 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r21 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r29 = (android.hardware.hdmi.HdmiDeviceInfo) $r21;

        $i16 = virtualinvoke r29.<android.hardware.hdmi.HdmiDeviceInfo: int getPhysicalAddress()>();

        $i17 = r28.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        if $i16 != $i17 goto label05;

        return r29;

     label05:
        goto label04;

     label06:
        $i5 = r28.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int logicalAddress>;

        $z3 = staticinvoke <com.android.server.hdmi.HdmiUtils: boolean isValidAddress(int)>($i5);

        if $z3 == 0 goto label07;

        $r15 = new android.hardware.hdmi.HdmiDeviceInfo;

        $i10 = r28.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int logicalAddress>;

        $i11 = r28.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        $r16 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $i9 = r28.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        $i12 = virtualinvoke $r16.<com.android.server.hdmi.HdmiControlService: int pathToPortId(int)>($i9);

        $i13 = r28.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int logicalAddress>;

        $i14 = staticinvoke <com.android.server.hdmi.HdmiUtils: int getTypeFromAddress(int)>($i13);

        $i15 = r28.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int logicalAddress>;

        $r17 = staticinvoke <com.android.server.hdmi.HdmiUtils: java.lang.String getDefaultDeviceName(int)>($i15);

        specialinvoke $r15.<android.hardware.hdmi.HdmiDeviceInfo: void <init>(int,int,int,int,int,java.lang.String)>($i10, $i11, $i12, $i14, 0, $r17);

        r30 = $r15;

        goto label08;

     label07:
        $r13 = new android.hardware.hdmi.HdmiDeviceInfo;

        $i7 = r28.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        $r14 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $i6 = r28.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        $i8 = virtualinvoke $r14.<com.android.server.hdmi.HdmiControlService: int pathToPortId(int)>($i6);

        specialinvoke $r13.<android.hardware.hdmi.HdmiDeviceInfo: void <init>(int,int)>($i7, $i8);

        r30 = $r13;

     label08:
        return r30;

     label09:
        return null;

     label10:
        r31 = virtualinvoke r27.<com.android.server.hdmi.HdmiCecLocalDeviceTv: com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource getActiveSource()>();

        $z0 = virtualinvoke r31.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: boolean isValid()>();

        if $z0 == 0 goto label11;

        $r5 = new android.hardware.hdmi.HdmiDeviceInfo;

        $i3 = r31.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int logicalAddress>;

        $i2 = r31.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        specialinvoke $r5.<android.hardware.hdmi.HdmiDeviceInfo: void <init>(int,int,int,int,int,java.lang.String)>($i3, $i2, -1, -1, 0, "");

        return $r5;

     label11:
        i0 = virtualinvoke r27.<com.android.server.hdmi.HdmiCecLocalDeviceTv: int getActivePath()>();

        if i0 == 65535 goto label14;

        r32 = virtualinvoke r27.<com.android.server.hdmi.HdmiCecLocalDeviceTv: android.hardware.hdmi.HdmiDeviceInfo getSafeDeviceInfoByPath(int)>(i0);

        if r32 == null goto label12;

        goto label13;

     label12:
        $r4 = new android.hardware.hdmi.HdmiDeviceInfo;

        $i1 = virtualinvoke r27.<com.android.server.hdmi.HdmiCecLocalDeviceTv: int getActivePortId()>();

        specialinvoke $r4.<android.hardware.hdmi.HdmiDeviceInfo: void <init>(int,int)>(i0, $i1);

        r32 = $r4;

     label13:
        return r32;

     label14:
        return null;
    }

    public java.util.List getDeviceList()
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        com.android.server.hdmi.HdmiControlService $r1, $r2, $r3, $r4, $r5;
        java.lang.Throwable $r6, $r7;
        com.android.server.hdmi.HdmiCecLocalDeviceTv r8;
        java.lang.Object r9, r13;
        java.util.List r10, r14;
        com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem r12;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        r8 = virtualinvoke $r2.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        if r8 == null goto label06;

        $r5 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        r9 = staticinvoke <com.android.server.hdmi.HdmiControlService: java.lang.Object access$2200(com.android.server.hdmi.HdmiControlService)>($r5);

        entermonitor r9;

     label01:
        r10 = virtualinvoke r8.<com.android.server.hdmi.HdmiCecLocalDeviceTv: java.util.List getSafeCecDevicesLocked()>();

        exitmonitor r9;

     label02:
        return r10;

     label03:
        $r7 := @caughtexception;

     label04:
        exitmonitor r9;

     label05:
        throw $r7;

     label06:
        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        r12 = virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem audioSystem()>();

        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        r13 = staticinvoke <com.android.server.hdmi.HdmiControlService: java.lang.Object access$2200(com.android.server.hdmi.HdmiControlService)>($r4);

        entermonitor r13;

        if r12 != null goto label09;

     label07:
        r14 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label08:
        goto label10;

     label09:
        r14 = virtualinvoke r12.<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: java.util.List getSafeCecDevicesLocked()>();

     label10:
        exitmonitor r13;

     label11:
        return r14;

     label12:
        $r6 := @caughtexception;

     label13:
        exitmonitor r13;

     label14:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public java.util.List getInputDevices()
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        java.lang.Object r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3, $r4, $r5;
        java.util.List $r6, r9, r10;
        java.lang.Throwable $r7;
        com.android.server.hdmi.HdmiCecLocalDeviceTv r8;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        r8 = virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        r1 = staticinvoke <com.android.server.hdmi.HdmiControlService: java.lang.Object access$2200(com.android.server.hdmi.HdmiControlService)>($r4);

        entermonitor r1;

        if r8 != null goto label3;

     label1:
        r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label2:
        goto label4;

     label3:
        r9 = virtualinvoke r8.<com.android.server.hdmi.HdmiCecLocalDeviceTv: java.util.List getSafeExternalInputsLocked()>();

     label4:
        $r5 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r6 = staticinvoke <com.android.server.hdmi.HdmiControlService: java.util.List access$4200(com.android.server.hdmi.HdmiControlService)>($r5);

        r10 = staticinvoke <com.android.server.hdmi.HdmiUtils: java.util.List mergeToUnmodifiableList(java.util.List,java.util.List)>(r9, $r6);

        exitmonitor r1;

     label5:
        return r10;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int getPhysicalAddress()
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        java.lang.Object r1;
        int i0;
        com.android.server.hdmi.HdmiControlService $r3, $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r3);

        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        r1 = staticinvoke <com.android.server.hdmi.HdmiControlService: java.lang.Object access$2200(com.android.server.hdmi.HdmiControlService)>($r4);

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        i0 = staticinvoke <com.android.server.hdmi.HdmiControlService: int access$3800(com.android.server.hdmi.HdmiControlService)>($r5);

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getPortInfo()
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        com.android.server.hdmi.HdmiControlService $r1, $r2, $r4;
        java.util.List $r3, r5;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.hdmi.HdmiControlService: java.util.List getPortInfo()>();

        if $r3 != null goto label1;

        r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label2;

     label1:
        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        r5 = virtualinvoke $r4.<com.android.server.hdmi.HdmiControlService: java.util.List getPortInfo()>();

     label2:
        return r5;
    }

    public int[] getSupportedTypes()
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int[] r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3, $r5;
        java.util.List $r4, $r6;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r7;
        java.lang.Integer $r8;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r4 = staticinvoke <com.android.server.hdmi.HdmiControlService: java.util.List access$700(com.android.server.hdmi.HdmiControlService)>($r3);

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        r1 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r1;

        if i3 >= $i1 goto label2;

        $r5 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r6 = staticinvoke <com.android.server.hdmi.HdmiControlService: java.util.List access$700(com.android.server.hdmi.HdmiControlService)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i3);

        $r8 = (java.lang.Integer) $r7;

        $i2 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        r1[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public boolean getSystemAudioMode()
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        com.android.server.hdmi.HdmiCecLocalDeviceTv r1;
        com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem r2;
        com.android.server.hdmi.HdmiControlService $r3, $r4, $r5;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r3);

        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        r1 = virtualinvoke $r4.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $r5 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        r2 = virtualinvoke $r5.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem audioSystem()>();

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean isSystemAudioActivated()>();

        if $z1 != 0 goto label2;

     label1:
        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean isSystemAudioActivated()>();

        if $z0 == 0 goto label3;

     label2:
        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    public boolean isHdmiCecVolumeControlEnabled()
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        com.android.server.hdmi.HdmiControlService $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $z0 = virtualinvoke $r2.<com.android.server.hdmi.HdmiControlService: boolean isHdmiCecVolumeControlEnabled()>();

        return $z0;
    }

    public void oneTouchPlay(android.hardware.hdmi.IHdmiControlCallback)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiControlCallback r1;
        int i0;
        com.android.server.hdmi.HdmiControlService $r3, $r10;
        java.lang.StringBuilder $r4;
        java.lang.String $r8;
        com.android.server.hdmi.HdmiControlService$BinderService$5 $r9;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlCallback;

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r3);

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proccess pid: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is calling oneTouchPlay.");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("HdmiControlService", $r8);

        $r10 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r9 = new com.android.server.hdmi.HdmiControlService$BinderService$5;

        specialinvoke $r9.<com.android.server.hdmi.HdmiControlService$BinderService$5: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,android.hardware.hdmi.IHdmiControlCallback)>(r0, r1);

        virtualinvoke $r10.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r9);

        return;
    }

    public void portSelect(int, android.hardware.hdmi.IHdmiControlCallback)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0;
        android.hardware.hdmi.IHdmiControlCallback r1;
        com.android.server.hdmi.HdmiControlService $r2, $r4;
        com.android.server.hdmi.HdmiControlService$BinderService$2 $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r3 = new com.android.server.hdmi.HdmiControlService$BinderService$2;

        specialinvoke $r3.<com.android.server.hdmi.HdmiControlService$BinderService$2: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,android.hardware.hdmi.IHdmiControlCallback,int)>(r0, r1, i0);

        virtualinvoke $r4.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r3);

        return;
    }

    public void powerOffRemoteDevice(int, int)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0, i1;
        com.android.server.hdmi.HdmiControlService $r1, $r3;
        com.android.server.hdmi.HdmiControlService$BinderService$8 $r2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r2 = new com.android.server.hdmi.HdmiControlService$BinderService$8;

        specialinvoke $r2.<com.android.server.hdmi.HdmiControlService$BinderService$8: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,int,int)>(r0, i0, i1);

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r2);

        return;
    }

    public void powerOnRemoteDevice(int, int)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0, i1;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void queryDisplayStatus(android.hardware.hdmi.IHdmiControlCallback)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiControlCallback r1;
        com.android.server.hdmi.HdmiControlService $r2, $r4;
        com.android.server.hdmi.HdmiControlService$BinderService$6 $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlCallback;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r3 = new com.android.server.hdmi.HdmiControlService$BinderService$6;

        specialinvoke $r3.<com.android.server.hdmi.HdmiControlService$BinderService$6: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,android.hardware.hdmi.IHdmiControlCallback)>(r0, r1);

        virtualinvoke $r4.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r3);

        return;
    }

    public void removeHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void removeHdmiControlVolumeControlStatusChangeListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)>(r1);

        return;
    }

    public void removeHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiControlStatusChangeListener r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlStatusChangeListener;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$3400(com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiControlStatusChangeListener)>($r3, r1);

        return;
    }

    public void removeHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiHotplugEventListener r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiHotplugEventListener;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$3600(com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiHotplugEventListener)>($r3, r1);

        return;
    }

    public void removeSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiSystemAudioModeChangeListener r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$4000(com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>($r3, r1);

        return;
    }

    public void reportAudioStatus(int, int, int, boolean)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0, i1, i2;
        boolean z0;
        com.android.server.hdmi.HdmiControlService $r1, $r3;
        com.android.server.hdmi.HdmiControlService$BinderService$21 $r2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r2 = new com.android.server.hdmi.HdmiControlService$BinderService$21;

        specialinvoke $r2.<com.android.server.hdmi.HdmiControlService$BinderService$21: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,int)>(r0, i0);

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r2);

        return;
    }

    public void sendKeyEvent(int, int, boolean)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0, i1;
        boolean z0;
        com.android.server.hdmi.HdmiControlService $r1, $r3;
        com.android.server.hdmi.HdmiControlService$BinderService$3 $r2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r2 = new com.android.server.hdmi.HdmiControlService$BinderService$3;

        specialinvoke $r2.<com.android.server.hdmi.HdmiControlService$BinderService$3: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,int,boolean,int)>(r0, i1, z0, i0);

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r2);

        return;
    }

    public void sendMhlVendorCommand(int, int, int, byte[])
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0, i1, i2;
        byte[] r1;
        com.android.server.hdmi.HdmiControlService $r2, $r4;
        com.android.server.hdmi.HdmiControlService$BinderService$19 $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: byte[];

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r3 = new com.android.server.hdmi.HdmiControlService$BinderService$19;

        specialinvoke $r3.<com.android.server.hdmi.HdmiControlService$BinderService$19: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,int,int,int,byte[])>(r0, i0, i1, i2, r1);

        virtualinvoke $r4.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r3);

        return;
    }

    public void sendStandby(int, int)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0, i1;
        com.android.server.hdmi.HdmiControlService $r1, $r3;
        com.android.server.hdmi.HdmiControlService$BinderService$14 $r2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r2 = new com.android.server.hdmi.HdmiControlService$BinderService$14;

        specialinvoke $r2.<com.android.server.hdmi.HdmiControlService$BinderService$14: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,int,int)>(r0, i1, i0);

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r2);

        return;
    }

    public void sendVendorCommand(int, int, byte[], boolean)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0, i1;
        byte[] r1;
        boolean z0;
        com.android.server.hdmi.HdmiControlService $r2, $r4;
        com.android.server.hdmi.HdmiControlService$BinderService$13 $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        z0 := @parameter3: boolean;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r3 = new com.android.server.hdmi.HdmiControlService$BinderService$13;

        specialinvoke $r3.<com.android.server.hdmi.HdmiControlService$BinderService$13: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,int,boolean,int,byte[])>(r0, i0, z0, i1, r1);

        virtualinvoke $r4.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r3);

        return;
    }

    public void sendVolumeKeyEvent(int, int, boolean)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0, i1;
        boolean z0;
        com.android.server.hdmi.HdmiControlService $r1, $r3;
        com.android.server.hdmi.HdmiControlService$BinderService$4 $r2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r2 = new com.android.server.hdmi.HdmiControlService$BinderService$4;

        specialinvoke $r2.<com.android.server.hdmi.HdmiControlService$BinderService$4: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,int,int,boolean)>(r0, i0, i1, z0);

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r2);

        return;
    }

    public void setArcMode(boolean)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        boolean z0;
        com.android.server.hdmi.HdmiControlService $r1, $r3;
        com.android.server.hdmi.HdmiControlService$BinderService$12 $r2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r2 = new com.android.server.hdmi.HdmiControlService$BinderService$12;

        specialinvoke $r2.<com.android.server.hdmi.HdmiControlService$BinderService$12: void <init>(com.android.server.hdmi.HdmiControlService$BinderService)>(r0);

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r2);

        return;
    }

    public void setHdmiCecVolumeControlEnabled(boolean)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        boolean z0;
        long l0;
        com.android.server.hdmi.HdmiControlService $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void setHdmiCecVolumeControlEnabled(boolean)>(z0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setHdmiRecordListener(android.hardware.hdmi.IHdmiRecordListener)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiRecordListener r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiRecordListener;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$4600(com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiRecordListener)>($r3, r1);

        return;
    }

    public void setInputChangeListener(android.hardware.hdmi.IHdmiInputChangeListener)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        android.hardware.hdmi.IHdmiInputChangeListener r1;
        com.android.server.hdmi.HdmiControlService $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        r1 := @parameter0: android.hardware.hdmi.IHdmiInputChangeListener;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$4100(com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiInputChangeListener)>($r3, r1);

        return;
    }

    public void setProhibitMode(boolean)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        boolean z0, $z1;
        com.android.server.hdmi.HdmiControlService $r1, $r2, $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $z1 = virtualinvoke $r2.<com.android.server.hdmi.HdmiControlService: boolean isTvDevice()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void setProhibitMode(boolean)>(z0);

        return;
    }

    public void setStandbyMode(boolean)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        boolean z0;
        com.android.server.hdmi.HdmiControlService $r1, $r3;
        com.android.server.hdmi.HdmiControlService$BinderService$20 $r2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r2 = new com.android.server.hdmi.HdmiControlService$BinderService$20;

        specialinvoke $r2.<com.android.server.hdmi.HdmiControlService$BinderService$20: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,boolean)>(r0, z0);

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r2);

        return;
    }

    public void setSystemAudioMode(boolean, android.hardware.hdmi.IHdmiControlCallback)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        boolean z0;
        android.hardware.hdmi.IHdmiControlCallback r1;
        com.android.server.hdmi.HdmiControlService $r2, $r4;
        com.android.server.hdmi.HdmiControlService$BinderService$7 $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r3 = new com.android.server.hdmi.HdmiControlService$BinderService$7;

        specialinvoke $r3.<com.android.server.hdmi.HdmiControlService$BinderService$7: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,android.hardware.hdmi.IHdmiControlCallback,boolean)>(r0, r1, z0);

        virtualinvoke $r4.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r3);

        return;
    }

    public void setSystemAudioModeOnForAudioOnlySource()
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        com.android.server.hdmi.HdmiControlService $r1, $r3;
        com.android.server.hdmi.HdmiControlService$BinderService$22 $r2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r2 = new com.android.server.hdmi.HdmiControlService$BinderService$22;

        specialinvoke $r2.<com.android.server.hdmi.HdmiControlService$BinderService$22: void <init>(com.android.server.hdmi.HdmiControlService$BinderService)>(r0);

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r2);

        return;
    }

    public void setSystemAudioMute(boolean)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        boolean z0;
        com.android.server.hdmi.HdmiControlService $r1, $r3;
        com.android.server.hdmi.HdmiControlService$BinderService$11 $r2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r2 = new com.android.server.hdmi.HdmiControlService$BinderService$11;

        specialinvoke $r2.<com.android.server.hdmi.HdmiControlService$BinderService$11: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,boolean)>(r0, z0);

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r2);

        return;
    }

    public void setSystemAudioVolume(int, int, int)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0, i1, i2;
        com.android.server.hdmi.HdmiControlService $r1, $r3;
        com.android.server.hdmi.HdmiControlService$BinderService$10 $r2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r2 = new com.android.server.hdmi.HdmiControlService$BinderService$10;

        specialinvoke $r2.<com.android.server.hdmi.HdmiControlService$BinderService$10: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,int,int,int)>(r0, i0, i1, i2);

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r2);

        return;
    }

    public void startOneTouchRecord(int, byte[])
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0;
        byte[] r1;
        com.android.server.hdmi.HdmiControlService $r2, $r4;
        com.android.server.hdmi.HdmiControlService$BinderService$15 $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r3 = new com.android.server.hdmi.HdmiControlService$BinderService$15;

        specialinvoke $r3.<com.android.server.hdmi.HdmiControlService$BinderService$15: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,int,byte[])>(r0, i0, r1);

        virtualinvoke $r4.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r3);

        return;
    }

    public void startTimerRecording(int, int, byte[])
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0, i1;
        byte[] r1;
        com.android.server.hdmi.HdmiControlService $r2, $r4;
        com.android.server.hdmi.HdmiControlService$BinderService$17 $r3;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        $r2 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r2);

        $r4 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r3 = new com.android.server.hdmi.HdmiControlService$BinderService$17;

        specialinvoke $r3.<com.android.server.hdmi.HdmiControlService$BinderService$17: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,int,int,byte[])>(r0, i0, i1, r1);

        virtualinvoke $r4.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r3);

        return;
    }

    public void stopOneTouchRecord(int)
    {
        com.android.server.hdmi.HdmiControlService$BinderService r0;
        int i0;
        com.android.server.hdmi.HdmiControlService $r1, $r3;
        com.android.server.hdmi.HdmiControlService$BinderService$16 $r2;

        r0 := @this: com.android.server.hdmi.HdmiControlService$BinderService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        staticinvoke <com.android.server.hdmi.HdmiControlService: void access$2900(com.android.server.hdmi.HdmiControlService)>($r1);

        $r3 = r0.<com.android.server.hdmi.HdmiControlService$BinderService: com.android.server.hdmi.HdmiControlService this$0>;

        $r2 = new com.android.server.hdmi.HdmiControlService$BinderService$16;

        specialinvoke $r2.<com.android.server.hdmi.HdmiControlService$BinderService$16: void <init>(com.android.server.hdmi.HdmiControlService$BinderService,int)>(r0, i0);

        virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: void runOnServiceThread(java.lang.Runnable)>($r2);

        return;
    }
}
