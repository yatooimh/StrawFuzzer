public class com.android.server.hdmi.HdmiUtils$ShortAudioDescriptorXmlParser extends java.lang.Object
{
    private static final java.lang.String NS;

    static void <clinit>()
    {
        <com.android.server.hdmi.HdmiUtils$ShortAudioDescriptorXmlParser: java.lang.String NS> = null;

        return;
    }

    public void <init>()
    {
        com.android.server.hdmi.HdmiUtils$ShortAudioDescriptorXmlParser r0;

        r0 := @this: com.android.server.hdmi.HdmiUtils$ShortAudioDescriptorXmlParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int formatNameToNum(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        byte b1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2131742975: goto label17;
            case -1197237630: goto label16;
            case -1194465888: goto label15;
            case -1186286867: goto label14;
            case -1186286866: goto label13;
            case -358943216: goto label12;
            case -282810364: goto label11;
            case -282807375: goto label10;
            case -282806906: goto label09;
            case -282806876: goto label08;
            case -282798811: goto label07;
            case -282798383: goto label06;
            case -176844499: goto label05;
            case -176785545: goto label04;
            case 129424511: goto label03;
            case 2082539401: goto label02;
            default: goto label01;
        };

     label01:
        goto label18;

     label02:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_TRUEHD");

        if $z0 == 0 goto label01;

        b1 = 12;

        goto label19;

     label03:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_DD");

        if $z1 == 0 goto label01;

        b1 = 2;

        goto label19;

     label04:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_NONE");

        if $z2 == 0 goto label01;

        b1 = 0;

        goto label19;

     label05:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_LPCM");

        if $z3 == 0 goto label01;

        b1 = 1;

        goto label19;

     label06:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_MP3");

        if $z4 == 0 goto label01;

        b1 = 4;

        goto label19;

     label07:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_MAX");

        if $z5 == 0 goto label01;

        b1 = 15;

        goto label19;

     label08:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_DTS");

        if $z6 == 0 goto label01;

        b1 = 7;

        goto label19;

     label09:
        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_DST");

        if $z7 == 0 goto label01;

        b1 = 13;

        goto label19;

     label10:
        $z8 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_DDP");

        if $z8 == 0 goto label01;

        b1 = 10;

        goto label19;

     label11:
        $z9 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_AAC");

        if $z9 == 0 goto label01;

        b1 = 6;

        goto label19;

     label12:
        $z10 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_ONEBITAUDIO");

        if $z10 == 0 goto label01;

        b1 = 9;

        goto label19;

     label13:
        $z11 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_MPEG2");

        if $z11 == 0 goto label01;

        b1 = 5;

        goto label19;

     label14:
        $z12 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_MPEG1");

        if $z12 == 0 goto label01;

        b1 = 3;

        goto label19;

     label15:
        $z13 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_DTSHD");

        if $z13 == 0 goto label01;

        b1 = 11;

        goto label19;

     label16:
        $z14 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_ATRAC");

        if $z14 == 0 goto label01;

        b1 = 8;

        goto label19;

     label17:
        $z15 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AUDIO_FORMAT_WMAPRO");

        if $z15 == 0 goto label01;

        b1 = 14;

        goto label19;

     label18:
        b1 = -1;

     label19:
        tableswitch(b1)
        {
            case 1: goto label35;
            case 2: goto label34;
            case 3: goto label33;
            case 4: goto label32;
            case 5: goto label31;
            case 6: goto label30;
            case 7: goto label29;
            case 8: goto label28;
            case 9: goto label27;
            case 10: goto label26;
            case 11: goto label25;
            case 12: goto label24;
            case 13: goto label23;
            case 14: goto label22;
            case 15: goto label21;
            default: goto label20;
        };

     label20:
        return 0;

     label21:
        return 15;

     label22:
        return 14;

     label23:
        return 13;

     label24:
        return 12;

     label25:
        return 11;

     label26:
        return 10;

     label27:
        return 9;

     label28:
        return 8;

     label29:
        return 7;

     label30:
        return 6;

     label31:
        return 5;

     label32:
        return 4;

     label33:
        return 3;

     label34:
        return 2;

     label35:
        return 1;
    }

    public static java.util.List parse(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.util.List $r2;

        r0 := @parameter0: java.io.InputStream;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", 0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r0, null);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        $r2 = staticinvoke <com.android.server.hdmi.HdmiUtils$ShortAudioDescriptorXmlParser: java.util.List readDevices(org.xmlpull.v1.XmlPullParser)>(r1);

        return $r2;
    }

    private static com.android.server.hdmi.HdmiUtils$DeviceConfig readDeviceConfig(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r3, $r5, $r7, r9, $r11;
        java.util.ArrayList $r4;
        int $i0, $i1, $i3, i4;
        com.android.server.hdmi.HdmiUtils$DeviceConfig $r6;
        boolean $z0;
        com.android.server.hdmi.HdmiUtils$CodecSad $r8;
        byte[] r10;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = <com.android.server.hdmi.HdmiUtils$ShortAudioDescriptorXmlParser: java.lang.String NS>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r5, "device");

     label1:
        $i3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i3 == 3 goto label8;

        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 2 goto label2;

        goto label1;

     label2:
        $r7 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("supportedFormat");

        if $z0 == 0 goto label6;

        r9 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "format");

        r3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "descriptor");

        if r9 != null goto label3;

        i4 = 0;

        goto label4;

     label3:
        i4 = staticinvoke <com.android.server.hdmi.HdmiUtils$ShortAudioDescriptorXmlParser: int formatNameToNum(java.lang.String)>(r9);

     label4:
        r10 = staticinvoke <com.android.server.hdmi.HdmiUtils$ShortAudioDescriptorXmlParser: byte[] readSad(java.lang.String)>(r3);

        if i4 == 0 goto label5;

        if r10 == null goto label5;

        $r8 = new com.android.server.hdmi.HdmiUtils$CodecSad;

        specialinvoke $r8.<com.android.server.hdmi.HdmiUtils$CodecSad: void <init>(int,byte[])>(i4, r10);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r8);

     label5:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        $r11 = <com.android.server.hdmi.HdmiUtils$ShortAudioDescriptorXmlParser: java.lang.String NS>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r11, "supportedFormat");

        goto label7;

     label6:
        staticinvoke <com.android.server.hdmi.HdmiUtils$ShortAudioDescriptorXmlParser: void skip(org.xmlpull.v1.XmlPullParser)>(r0);

     label7:
        goto label1;

     label8:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 0 goto label9;

        return null;

     label9:
        $r6 = new com.android.server.hdmi.HdmiUtils$DeviceConfig;

        specialinvoke $r6.<com.android.server.hdmi.HdmiUtils$DeviceConfig: void <init>(java.lang.String,java.util.List)>(r1, $r4);

        return $r6;
    }

    private static java.util.List readDevices(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r2, $r4, $r5;
        java.util.ArrayList $r3;
        int $i0, $i1;
        boolean $z0;
        com.android.server.hdmi.HdmiUtils$DeviceConfig r6;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = <com.android.server.hdmi.HdmiUtils$ShortAudioDescriptorXmlParser: java.lang.String NS>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r4, "config");

     label1:
        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 3 goto label7;

        $i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 2 goto label2;

        goto label1;

     label2:
        $r5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("device");

        if $z0 == 0 goto label5;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        r6 = null;

        if r2 == null goto label3;

        r6 = staticinvoke <com.android.server.hdmi.HdmiUtils$ShortAudioDescriptorXmlParser: com.android.server.hdmi.HdmiUtils$DeviceConfig readDeviceConfig(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r2);

     label3:
        if r6 == null goto label4;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r6);

     label4:
        goto label6;

     label5:
        staticinvoke <com.android.server.hdmi.HdmiUtils$ShortAudioDescriptorXmlParser: void skip(org.xmlpull.v1.XmlPullParser)>(r0);

     label6:
        goto label1;

     label7:
        return $r3;
    }

    private static byte[] readSad(java.lang.String)
    {
        byte[] r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r5;

        r5 := @parameter0: java.lang.String;

        if r5 == null goto label3;

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        goto label3;

     label1:
        r0 = staticinvoke <com.android.internal.util.HexDump: byte[] hexStringToByteArray(java.lang.String)>(r5);

        $i1 = lengthof r0;

        if $i1 == 3 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SAD byte array length is not 3. Length = ");

        $i2 = lengthof r0;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("HdmiUtils", $r4);

        return null;

     label2:
        return r0;

     label3:
        return null;
    }

    private static void skip(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, $i1, i2;
        java.lang.IllegalStateException $r1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 != 2 goto label6;

        i2 = 1;

     label1:
        if i2 == 0 goto label5;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        goto label4;

     label2:
        i2 = i2 + -1;

        goto label4;

     label3:
        i2 = i2 + 1;

     label4:
        goto label1;

     label5:
        return;

     label6:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;
    }
}
