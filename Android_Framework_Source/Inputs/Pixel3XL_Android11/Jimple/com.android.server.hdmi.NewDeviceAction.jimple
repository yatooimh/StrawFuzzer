final class com.android.server.hdmi.NewDeviceAction extends com.android.server.hdmi.HdmiCecFeatureAction
{
    static final int STATE_WAITING_FOR_DEVICE_VENDOR_ID;
    static final int STATE_WAITING_FOR_SET_OSD_NAME;
    private static final java.lang.String TAG;
    private final int mDeviceLogicalAddress;
    private final int mDevicePhysicalAddress;
    private final int mDeviceType;
    private java.lang.String mDisplayName;
    private int mTimeoutRetry;
    private int mVendorId;

    void <init>(com.android.server.hdmi.HdmiCecLocalDevice, int, int, int)
    {
        com.android.server.hdmi.NewDeviceAction r0;
        com.android.server.hdmi.HdmiCecLocalDevice r1;
        int i0, i1, i2;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecFeatureAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice)>(r1);

        r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress> = i0;

        r0.<com.android.server.hdmi.NewDeviceAction: int mDevicePhysicalAddress> = i1;

        r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceType> = i2;

        r0.<com.android.server.hdmi.NewDeviceAction: int mVendorId> = 16777215;

        return;
    }

    private void addDeviceInfo()
    {
        com.android.server.hdmi.NewDeviceAction r0;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r2, $r5, $r7, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0;
        java.lang.String $r3, $r6, $r10, $r14;
        android.hardware.hdmi.HdmiDeviceInfo $r4;
        java.lang.Object[] $r11;
        java.lang.Integer $r12, $r13;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        $r2 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $i1 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $i0 = r0.<com.android.server.hdmi.NewDeviceAction: int mDevicePhysicalAddress>;

        $z0 = virtualinvoke $r2.<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean isInDeviceList(int,int)>($i1, $i0);

        if $z0 != 0 goto label1;

        $r11 = newarray (java.lang.Object)[2];

        $i12 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r11[0] = $r12;

        $i13 = r0.<com.android.server.hdmi.NewDeviceAction: int mDevicePhysicalAddress>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r11[1] = $r13;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Device not found (%02x, %04x)", $r11);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NewDeviceAction", $r14);

        return;

     label1:
        $r3 = r0.<com.android.server.hdmi.NewDeviceAction: java.lang.String mDisplayName>;

        if $r3 != null goto label2;

        $i11 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $r10 = staticinvoke <com.android.server.hdmi.HdmiUtils: java.lang.String getDefaultDeviceName(int)>($i11);

        r0.<com.android.server.hdmi.NewDeviceAction: java.lang.String mDisplayName> = $r10;

     label2:
        $r4 = new android.hardware.hdmi.HdmiDeviceInfo;

        $i2 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $i3 = r0.<com.android.server.hdmi.NewDeviceAction: int mDevicePhysicalAddress>;

        $r5 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $i4 = r0.<com.android.server.hdmi.NewDeviceAction: int mDevicePhysicalAddress>;

        $i5 = virtualinvoke $r5.<com.android.server.hdmi.HdmiCecLocalDeviceTv: int getPortId(int)>($i4);

        $i7 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceType>;

        $i6 = r0.<com.android.server.hdmi.NewDeviceAction: int mVendorId>;

        $r6 = r0.<com.android.server.hdmi.NewDeviceAction: java.lang.String mDisplayName>;

        specialinvoke $r4.<android.hardware.hdmi.HdmiDeviceInfo: void <init>(int,int,int,int,int,java.lang.String)>($i2, $i3, $i5, $i7, $i6, $r6);

        $r7 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        virtualinvoke $r7.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void addCecDevice(android.hardware.hdmi.HdmiDeviceInfo)>($r4);

        $r8 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $i8 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        virtualinvoke $r8.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void processDelayedMessages(int)>($i8);

        $i9 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $i10 = staticinvoke <com.android.server.hdmi.HdmiUtils: int getTypeFromAddress(int)>($i9);

        if $i10 != 5 goto label3;

        $r9 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        virtualinvoke $r9.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void onNewAvrAdded(android.hardware.hdmi.HdmiDeviceInfo)>($r4);

     label3:
        return;
    }

    private boolean mayProcessCommandIfCached(int, int)
    {
        com.android.server.hdmi.NewDeviceAction r0;
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage r1;
        com.android.server.hdmi.HdmiCecMessageCache $r2;
        boolean $z0;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: com.android.server.hdmi.HdmiCecMessageCache getCecMessageCache()>();

        r1 = virtualinvoke $r2.<com.android.server.hdmi.HdmiCecMessageCache: com.android.server.hdmi.HdmiCecMessage getMessage(int,int)>(i0, i1);

        if r1 == null goto label1;

        $z0 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: boolean processCommand(com.android.server.hdmi.HdmiCecMessage)>(r1);

        return $z0;

     label1:
        return 0;
    }

    private void requestOsdName(boolean)
    {
        com.android.server.hdmi.NewDeviceAction r0;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3;
        com.android.server.hdmi.HdmiCecMessage $r1;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r0.<com.android.server.hdmi.NewDeviceAction: int mTimeoutRetry> = 0;

     label1:
        r0.<com.android.server.hdmi.NewDeviceAction: int mState> = 1;

        $i0 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $z1 = specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: boolean mayProcessCommandIfCached(int,int)>($i0, 71);

        if $z1 == 0 goto label2;

        return;

     label2:
        $i1 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: int getSourceAddress()>();

        $i2 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildGiveOsdNameCommand(int,int)>($i1, $i2);

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r1);

        $i3 = r0.<com.android.server.hdmi.NewDeviceAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void addTimer(int,int)>($i3, 2000);

        return;
    }

    private void requestVendorId(boolean)
    {
        com.android.server.hdmi.NewDeviceAction r0;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3;
        com.android.server.hdmi.HdmiCecMessage $r1;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r0.<com.android.server.hdmi.NewDeviceAction: int mTimeoutRetry> = 0;

     label1:
        r0.<com.android.server.hdmi.NewDeviceAction: int mState> = 2;

        $i0 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $z1 = specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: boolean mayProcessCommandIfCached(int,int)>($i0, 135);

        if $z1 == 0 goto label2;

        return;

     label2:
        $i1 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: int getSourceAddress()>();

        $i2 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildGiveDeviceVendorIdCommand(int,int)>($i1, $i2);

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r1);

        $i3 = r0.<com.android.server.hdmi.NewDeviceAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void addTimer(int,int)>($i3, 2000);

        return;
    }

    public void handleTimerEvent(int)
    {
        com.android.server.hdmi.NewDeviceAction r0;
        int $i0, $i1, $i2, $i3, i4, i5, i6;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        i4 := @parameter0: int;

        $i0 = r0.<com.android.server.hdmi.NewDeviceAction: int mState>;

        if $i0 == 0 goto label6;

        $i1 = r0.<com.android.server.hdmi.NewDeviceAction: int mState>;

        if $i1 == i4 goto label1;

        goto label6;

     label1:
        if i4 != 1 goto label3;

        $i3 = r0.<com.android.server.hdmi.NewDeviceAction: int mTimeoutRetry>;

        i5 = $i3 + 1;

        r0.<com.android.server.hdmi.NewDeviceAction: int mTimeoutRetry> = i5;

        if i5 >= 5 goto label2;

        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void requestOsdName(boolean)>(0);

        return;

     label2:
        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void requestVendorId(boolean)>(1);

        goto label5;

     label3:
        if i4 != 2 goto label5;

        $i2 = r0.<com.android.server.hdmi.NewDeviceAction: int mTimeoutRetry>;

        i6 = $i2 + 1;

        r0.<com.android.server.hdmi.NewDeviceAction: int mTimeoutRetry> = i6;

        if i6 >= 5 goto label4;

        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void requestVendorId(boolean)>(0);

        return;

     label4:
        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void addDeviceInfo()>();

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void finish()>();

     label5:
        return;

     label6:
        return;
    }

    boolean isActionOf(com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource)
    {
        com.android.server.hdmi.NewDeviceAction r0;
        com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource r1;
        int $i0, $i1, $i2, $i3;
        boolean z0;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource;

        $i1 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $i0 = r1.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int logicalAddress>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<com.android.server.hdmi.NewDeviceAction: int mDevicePhysicalAddress>;

        $i2 = r1.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        if $i3 != $i2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean processCommand(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.NewDeviceAction r0;
        int i0, i1, $i2, $i3, $i4, $i7;
        byte $b5, $b8;
        short $s6, $s9;
        java.lang.Throwable $r1;
        java.lang.String $r4, $r6, r12;
        com.android.server.hdmi.HdmiCecMessage r7;
        byte[] r8;
        java.lang.StringBuilder r13;
        java.io.UnsupportedEncodingException r14;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        r7 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        i0 = virtualinvoke r7.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        i1 = virtualinvoke r7.<com.android.server.hdmi.HdmiCecMessage: int getSource()>();

        r8 = virtualinvoke r7.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $i2 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        if $i2 == i1 goto label01;

        return 0;

     label01:
        $i3 = r0.<com.android.server.hdmi.NewDeviceAction: int mState>;

        if $i3 != 1 goto label08;

        if i0 != 71 goto label06;

     label02:
        r12 = new java.lang.String;

        specialinvoke r12.<java.lang.String: void <init>(byte[],java.lang.String)>(r8, "US-ASCII");

        r0.<com.android.server.hdmi.NewDeviceAction: java.lang.String mDisplayName> = r12;

     label03:
        goto label05;

     label04:
        $r1 := @caughtexception;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get OSD name: ");

        r14 = (java.io.UnsupportedEncodingException) $r1;

        $r4 = virtualinvoke r14.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NewDeviceAction", $r6);

     label05:
        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void requestVendorId(boolean)>(1);

        return 1;

     label06:
        if i0 != 0 goto label10;

        $b8 = r8[0];

        $s9 = $b8 & 255;

        if $s9 != 70 goto label07;

        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void requestVendorId(boolean)>(1);

        return 1;

     label07:
        goto label10;

     label08:
        $i4 = r0.<com.android.server.hdmi.NewDeviceAction: int mState>;

        if $i4 != 2 goto label10;

        if i0 != 135 goto label09;

        $i7 = staticinvoke <com.android.server.hdmi.HdmiUtils: int threeBytesToInt(byte[])>(r8);

        r0.<com.android.server.hdmi.NewDeviceAction: int mVendorId> = $i7;

        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void addDeviceInfo()>();

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void finish()>();

        return 1;

     label09:
        if i0 != 0 goto label10;

        $b5 = r8[0];

        $s6 = $b5 & 255;

        if $s6 != 140 goto label10;

        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void addDeviceInfo()>();

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void finish()>();

        return 1;

     label10:
        return 0;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label04;
    }

    public boolean start()
    {
        com.android.server.hdmi.NewDeviceAction r0;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void requestOsdName(boolean)>(1);

        return 1;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.NewDeviceAction: java.lang.String TAG> = "NewDeviceAction";

        <com.android.server.hdmi.NewDeviceAction: int STATE_WAITING_FOR_SET_OSD_NAME> = 1;

        <com.android.server.hdmi.NewDeviceAction: int STATE_WAITING_FOR_DEVICE_VENDOR_ID> = 2;

        return;
    }
}
