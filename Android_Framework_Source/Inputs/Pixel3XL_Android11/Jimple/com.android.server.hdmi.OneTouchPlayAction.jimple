final class com.android.server.hdmi.OneTouchPlayAction extends com.android.server.hdmi.HdmiCecFeatureAction
{
    private static final int LOOP_COUNTER_MAX;
    private static final int STATE_WAITING_FOR_REPORT_POWER_STATUS;
    private static final java.lang.String TAG;
    private final java.util.List mCallbacks;
    private int mPowerStatusCounter;
    private final int mTargetAddress;

    private void <init>(com.android.server.hdmi.HdmiCecLocalDevice, int, android.hardware.hdmi.IHdmiControlCallback)
    {
        com.android.server.hdmi.OneTouchPlayAction r0;
        com.android.server.hdmi.HdmiCecLocalDevice r1;
        int i0;
        android.hardware.hdmi.IHdmiControlCallback r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.server.hdmi.OneTouchPlayAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice;

        i0 := @parameter1: int;

        r2 := @parameter2: android.hardware.hdmi.IHdmiControlCallback;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecFeatureAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice)>(r1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.hdmi.OneTouchPlayAction: java.util.List mCallbacks> = $r3;

        r0.<com.android.server.hdmi.OneTouchPlayAction: int mPowerStatusCounter> = 0;

        r0.<com.android.server.hdmi.OneTouchPlayAction: int mTargetAddress> = i0;

        virtualinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: void addCallback(android.hardware.hdmi.IHdmiControlCallback)>(r2);

        return;
    }

    private void broadcastActiveSource()
    {
        com.android.server.hdmi.OneTouchPlayAction r0;
        com.android.server.hdmi.HdmiCecLocalDeviceSource r1, r6;
        com.android.server.hdmi.HdmiControlService $r2, $r3, $r5;
        int $i0, $i1;
        com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem $r4;

        r0 := @this: com.android.server.hdmi.OneTouchPlayAction;

        r1 = virtualinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: com.android.server.hdmi.HdmiCecLocalDeviceSource source()>();

        $r2 = r1.<com.android.server.hdmi.HdmiCecLocalDeviceSource: com.android.server.hdmi.HdmiControlService mService>;

        $i0 = r0.<com.android.server.hdmi.OneTouchPlayAction: int mTargetAddress>;

        $i1 = virtualinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: int getSourcePath()>();

        virtualinvoke $r2.<com.android.server.hdmi.HdmiControlService: void setAndBroadcastActiveSourceFromOneDeviceType(int,int)>($i0, $i1);

        r6 = r1;

        $r3 = r1.<com.android.server.hdmi.HdmiCecLocalDeviceSource: com.android.server.hdmi.HdmiControlService mService>;

        $r4 = virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem audioSystem()>();

        if $r4 == null goto label1;

        $r5 = r1.<com.android.server.hdmi.HdmiCecLocalDeviceSource: com.android.server.hdmi.HdmiControlService mService>;

        r6 = virtualinvoke $r5.<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem audioSystem()>();

     label1:
        virtualinvoke r6.<com.android.server.hdmi.HdmiCecLocalDeviceSource: void setRoutingPort(int)>(0);

        virtualinvoke r6.<com.android.server.hdmi.HdmiCecLocalDeviceSource: void setLocalActivePort(int)>(0);

        return;
    }

    static com.android.server.hdmi.OneTouchPlayAction create(com.android.server.hdmi.HdmiCecLocalDeviceSource, int, android.hardware.hdmi.IHdmiControlCallback)
    {
        com.android.server.hdmi.HdmiCecLocalDeviceSource r0;
        int i0;
        android.hardware.hdmi.IHdmiControlCallback r1;
        com.android.server.hdmi.OneTouchPlayAction $r2;

        r0 := @parameter0: com.android.server.hdmi.HdmiCecLocalDeviceSource;

        i0 := @parameter1: int;

        r1 := @parameter2: android.hardware.hdmi.IHdmiControlCallback;

        if r0 == null goto label2;

        if r1 != null goto label1;

        goto label2;

     label1:
        $r2 = new com.android.server.hdmi.OneTouchPlayAction;

        specialinvoke $r2.<com.android.server.hdmi.OneTouchPlayAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice,int,android.hardware.hdmi.IHdmiControlCallback)>(r0, i0, r1);

        return $r2;

     label2:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("OneTouchPlayAction", "Wrong arguments");

        return null;
    }

    private void invokeCallback(int)
    {
        com.android.server.hdmi.OneTouchPlayAction r0;
        int i0;
        java.util.List $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.hardware.hdmi.IHdmiControlCallback $r4;
        android.os.RemoteException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;
        java.util.Iterator r10;

        r0 := @this: com.android.server.hdmi.OneTouchPlayAction;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.server.hdmi.OneTouchPlayAction: java.util.List mCallbacks>;

        r10 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.hardware.hdmi.IHdmiControlCallback) $r3;

        interfaceinvoke $r4.<android.hardware.hdmi.IHdmiControlCallback: void onComplete(int)>(i0);

     label3:
        goto label2;

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callback failed:");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("OneTouchPlayAction", $r9);

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void queryDevicePowerStatus()
    {
        com.android.server.hdmi.OneTouchPlayAction r0;
        int $i0, $i1;
        com.android.server.hdmi.HdmiCecMessage $r1;

        r0 := @this: com.android.server.hdmi.OneTouchPlayAction;

        r0.<com.android.server.hdmi.OneTouchPlayAction: int mState> = 1;

        $i0 = virtualinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: int getSourceAddress()>();

        $i1 = r0.<com.android.server.hdmi.OneTouchPlayAction: int mTargetAddress>;

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildGiveDevicePowerStatus(int,int)>($i0, $i1);

        virtualinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r1);

        return;
    }

    public void addCallback(android.hardware.hdmi.IHdmiControlCallback)
    {
        com.android.server.hdmi.OneTouchPlayAction r0;
        android.hardware.hdmi.IHdmiControlCallback r1;
        java.util.List $r2;

        r0 := @this: com.android.server.hdmi.OneTouchPlayAction;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlCallback;

        $r2 = r0.<com.android.server.hdmi.OneTouchPlayAction: java.util.List mCallbacks>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    void handleTimerEvent(int)
    {
        com.android.server.hdmi.OneTouchPlayAction r0;
        int $i0, $i1, $i2, i3, i4;

        r0 := @this: com.android.server.hdmi.OneTouchPlayAction;

        i3 := @parameter0: int;

        $i0 = r0.<com.android.server.hdmi.OneTouchPlayAction: int mState>;

        if $i0 == i3 goto label1;

        return;

     label1:
        if i3 != 1 goto label3;

        i4 = r0.<com.android.server.hdmi.OneTouchPlayAction: int mPowerStatusCounter>;

        $i1 = i4 + 1;

        r0.<com.android.server.hdmi.OneTouchPlayAction: int mPowerStatusCounter> = $i1;

        if i4 >= 10 goto label2;

        specialinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: void queryDevicePowerStatus()>();

        $i2 = r0.<com.android.server.hdmi.OneTouchPlayAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: void addTimer(int,int)>($i2, 2000);

        goto label3;

     label2:
        specialinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: void invokeCallback(int)>(1);

        virtualinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: void finish()>();

     label3:
        return;
    }

    boolean processCommand(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.OneTouchPlayAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        int $i0, $i1, $i2, $i3;
        byte[] $r2;
        byte $b4;

        r0 := @this: com.android.server.hdmi.OneTouchPlayAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $i0 = r0.<com.android.server.hdmi.OneTouchPlayAction: int mState>;

        if $i0 != 1 goto label4;

        $i1 = r0.<com.android.server.hdmi.OneTouchPlayAction: int mTargetAddress>;

        $i2 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getSource()>();

        if $i1 == $i2 goto label1;

        goto label4;

     label1:
        $i3 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        if $i3 != 144 goto label3;

        $r2 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $b4 = $r2[0];

        if $b4 != 0 goto label2;

        specialinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: void broadcastActiveSource()>();

        specialinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: void invokeCallback(int)>(0);

        virtualinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: void finish()>();

     label2:
        return 1;

     label3:
        return 0;

     label4:
        return 0;
    }

    boolean start()
    {
        com.android.server.hdmi.OneTouchPlayAction r0;
        int $i0, $i1, $i2;
        com.android.server.hdmi.HdmiCecMessage $r1;

        r0 := @this: com.android.server.hdmi.OneTouchPlayAction;

        $i0 = virtualinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: int getSourceAddress()>();

        $i1 = r0.<com.android.server.hdmi.OneTouchPlayAction: int mTargetAddress>;

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildTextViewOn(int,int)>($i0, $i1);

        virtualinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r1);

        specialinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: void broadcastActiveSource()>();

        specialinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: void queryDevicePowerStatus()>();

        $i2 = r0.<com.android.server.hdmi.OneTouchPlayAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.OneTouchPlayAction: void addTimer(int,int)>($i2, 2000);

        return 1;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.OneTouchPlayAction: java.lang.String TAG> = "OneTouchPlayAction";

        <com.android.server.hdmi.OneTouchPlayAction: int STATE_WAITING_FOR_REPORT_POWER_STATUS> = 1;

        <com.android.server.hdmi.OneTouchPlayAction: int LOOP_COUNTER_MAX> = 10;

        return;
    }
}
