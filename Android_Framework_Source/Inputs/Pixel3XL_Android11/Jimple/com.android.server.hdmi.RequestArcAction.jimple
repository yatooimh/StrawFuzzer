abstract class com.android.server.hdmi.RequestArcAction extends com.android.server.hdmi.HdmiCecFeatureAction
{
    protected static final int STATE_WATING_FOR_REQUEST_ARC_REQUEST_RESPONSE;
    private static final java.lang.String TAG;
    protected final int mAvrAddress;

    void <init>(com.android.server.hdmi.HdmiCecLocalDevice, int)
    {
        com.android.server.hdmi.RequestArcAction r0;
        com.android.server.hdmi.HdmiCecLocalDevice r1;
        int i0, $i1;

        r0 := @this: com.android.server.hdmi.RequestArcAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecFeatureAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice)>(r1);

        $i1 = virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: int getSourceAddress()>();

        staticinvoke <com.android.server.hdmi.HdmiUtils: void verifyAddressType(int,int)>($i1, 0);

        staticinvoke <com.android.server.hdmi.HdmiUtils: void verifyAddressType(int,int)>(i0, 5);

        r0.<com.android.server.hdmi.RequestArcAction: int mAvrAddress> = i0;

        return;
    }

    protected final void disableArcTransmission()
    {
        com.android.server.hdmi.RequestArcAction r0;
        com.android.server.hdmi.SetArcTransmissionStateAction $r1;
        com.android.server.hdmi.HdmiCecLocalDevice $r2;
        int $i0;

        r0 := @this: com.android.server.hdmi.RequestArcAction;

        $r1 = new com.android.server.hdmi.SetArcTransmissionStateAction;

        $r2 = virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: com.android.server.hdmi.HdmiCecLocalDevice localDevice()>();

        $i0 = r0.<com.android.server.hdmi.RequestArcAction: int mAvrAddress>;

        specialinvoke $r1.<com.android.server.hdmi.SetArcTransmissionStateAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice,int,boolean)>($r2, $i0, 0);

        virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>($r1);

        return;
    }

    final void handleTimerEvent(int)
    {
        com.android.server.hdmi.RequestArcAction r0;
        int i0, $i1;
        java.lang.Object[] $r1;

        r0 := @this: com.android.server.hdmi.RequestArcAction;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.hdmi.RequestArcAction: int mState>;

        if $i1 != i0 goto label2;

        if i0 == 1 goto label1;

        goto label2;

     label1:
        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void debug(java.lang.String,java.lang.Object[])>("[T] RequestArcAction.", $r1);

        virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: void disableArcTransmission()>();

        virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: void finish()>();

        return;

     label2:
        return;
    }

    boolean processCommand(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.RequestArcAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        short s0;
        int $i1, $i2, $i3;
        boolean $z0;
        byte[] $r2;
        byte $b4;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r3;

        r0 := @this: com.android.server.hdmi.RequestArcAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $i1 = r0.<com.android.server.hdmi.RequestArcAction: int mState>;

        if $i1 != 1 goto label5;

        $i2 = r0.<com.android.server.hdmi.RequestArcAction: int mAvrAddress>;

        $z0 = staticinvoke <com.android.server.hdmi.HdmiUtils: boolean checkCommandSource(com.android.server.hdmi.HdmiCecMessage,int,java.lang.String)>(r1, $i2, "RequestArcAction");

        if $z0 != 0 goto label1;

        goto label5;

     label1:
        $i3 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        if $i3 == 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $b4 = $r2[0];

        s0 = $b4 & 255;

        if s0 != 196 goto label3;

        virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: void disableArcTransmission()>();

        virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: void finish()>();

        return 1;

     label3:
        if s0 != 195 goto label4;

        $r3 = virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        virtualinvoke $r3.<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean setArcStatus(boolean)>(0);

        virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: void finish()>();

        return 1;

     label4:
        return 0;

     label5:
        return 0;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.RequestArcAction: java.lang.String TAG> = "RequestArcAction";

        <com.android.server.hdmi.RequestArcAction: int STATE_WATING_FOR_REQUEST_ARC_REQUEST_RESPONSE> = 1;

        return;
    }
}
