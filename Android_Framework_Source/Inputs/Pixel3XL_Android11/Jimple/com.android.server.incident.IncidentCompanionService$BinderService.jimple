final class com.android.server.incident.IncidentCompanionService$BinderService extends android.os.IIncidentCompanion$Stub
{
    final com.android.server.incident.IncidentCompanionService this$0;

    private void <init>(com.android.server.incident.IncidentCompanionService)
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        com.android.server.incident.IncidentCompanionService r1;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r1 := @parameter0: com.android.server.incident.IncidentCompanionService;

        r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0> = r1;

        specialinvoke r0.<android.os.IIncidentCompanion$Stub: void <init>()>();

        return;
    }

    void <init>(com.android.server.incident.IncidentCompanionService, com.android.server.incident.IncidentCompanionService$1)
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        com.android.server.incident.IncidentCompanionService r1;
        com.android.server.incident.IncidentCompanionService$1 r2;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r1 := @parameter0: com.android.server.incident.IncidentCompanionService;

        r2 := @parameter1: com.android.server.incident.IncidentCompanionService$1;

        specialinvoke r0.<com.android.server.incident.IncidentCompanionService$BinderService: void <init>(com.android.server.incident.IncidentCompanionService)>(r1);

        return;
    }

    private void dumpRestrictedImages(java.io.FileDescriptor)
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2, $r15;
        int i0, i4;
        java.lang.String r3, $r10, $r14, $r21;
        boolean $z0, $z1;
        com.android.server.incident.IncidentCompanionService $r4;
        android.content.Context $r5;
        android.content.res.Resources $r6;
        java.lang.StringBuilder $r7, $r11, $r17;
        android.os.RemoteException $r16;
        android.os.IBinder r23;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r1 := @parameter0: java.io.FileDescriptor;

        $z0 = <android.os.Build: boolean IS_ENG>;

        if $z0 != 0 goto label1;

        $z1 = <android.os.Build: boolean IS_USERDEBUG>;

        if $z1 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r5 = virtualinvoke $r4.<com.android.server.incident.IncidentCompanionService: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236067);

        i0 = lengthof r2;

        i4 = 0;

     label2:
        if i4 >= i0 goto label7;

        r3 = r2[i4];

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking up service ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("IncidentCompanionService", $r10);

        r23 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>(r3);

        if r23 == null goto label6;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling dump on service: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("IncidentCompanionService", $r14);

     label3:
        $r15 = staticinvoke <com.android.server.incident.IncidentCompanionService: java.lang.String[] access$300()>();

        interfaceinvoke r23.<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>(r1, $r15);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dump --restricted_image of ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" threw");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IncidentCompanionService", $r21, $r16);

     label6:
        i4 = i4 + 1;

        goto label2;

     label7:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void enforceAccessReportsPermissions(java.lang.String)
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        java.lang.String r1;
        com.android.server.incident.IncidentCompanionService $r2, $r4, $r6;
        android.content.Context $r3, $r5, $r7;
        int $i0;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.incident.IncidentCompanionService: android.content.Context getContext()>();

        $i0 = virtualinvoke $r3.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.APPROVE_INCIDENT_REPORTS");

        if $i0 == 0 goto label1;

        $r4 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r5 = virtualinvoke $r4.<com.android.server.incident.IncidentCompanionService: android.content.Context getContext()>();

        virtualinvoke $r5.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", null);

        $r6 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r7 = virtualinvoke $r6.<com.android.server.incident.IncidentCompanionService: android.content.Context getContext()>();

        virtualinvoke $r7.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_USAGE_STATS", null);

        if r1 == null goto label1;

        specialinvoke r0.<com.android.server.incident.IncidentCompanionService$BinderService: void enforceCallerIsSameApp(java.lang.String)>(r1);

     label1:
        return;
    }

    private void enforceAuthorizePermission()
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        com.android.server.incident.IncidentCompanionService $r1;
        android.content.Context $r2;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        $r1 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.incident.IncidentCompanionService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.APPROVE_INCIDENT_REPORTS", null);

        return;
    }

    private void enforceCallerIsSameApp(java.lang.String) throws java.lang.SecurityException
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        java.lang.String r1, $r8, $r15, $r23;
        int i0, i1, $i2, $i3;
        java.lang.StringBuilder r2, $r17, r27;
        com.android.server.incident.IncidentCompanionService $r3;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;
        boolean $z0;
        android.content.pm.PackageManager$NameNotFoundException $r16;
        java.lang.SecurityException $r22, r25, r26;
        android.content.pm.ApplicationInfo r24;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r1 := @parameter0: java.lang.String;

     label1:
        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r3 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r4 = virtualinvoke $r3.<com.android.server.incident.IncidentCompanionService: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r24 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,int)>(r1, 0, i1);

     label2:
        if r24 == null goto label6;

     label3:
        $i2 = r24.<android.content.pm.ApplicationInfo: int uid>;

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i2, i0);

        if $z0 == 0 goto label5;

     label4:
        return;

     label5:
        r25 = new java.lang.SecurityException;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gave package ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which is owned by uid ");

        $i3 = r24.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<java.lang.SecurityException: void <init>(java.lang.String)>($r15);

        throw r25;

     label6:
        r26 = new java.lang.SecurityException;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<java.lang.SecurityException: void <init>(java.lang.String)>($r8);

        throw r26;

     label7:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r22 = new java.lang.SecurityException;

        $r23 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.SecurityException: void <init>(java.lang.String)>($r23);

        throw $r22;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label5 to label6 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label6 to label7 with label7;
    }

    private void enforceRequestAuthorizationPermission()
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        com.android.server.incident.IncidentCompanionService $r1;
        android.content.Context $r2;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        $r1 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.incident.IncidentCompanionService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.REQUEST_INCIDENT_REPORT_APPROVAL", null);

        return;
    }

    public void approveReport(java.lang.String)
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        long l0;
        com.android.server.incident.IncidentCompanionService $r1;
        com.android.server.incident.PendingReports $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r4 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.incident.IncidentCompanionService$BinderService: void enforceAuthorizePermission()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r2 = staticinvoke <com.android.server.incident.IncidentCompanionService: com.android.server.incident.PendingReports access$000(com.android.server.incident.IncidentCompanionService)>($r1);

        virtualinvoke $r2.<com.android.server.incident.PendingReports: void approveReport(java.lang.String)>(r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void authorizeReport(int, java.lang.String, java.lang.String, java.lang.String, int, android.os.IIncidentAuthListener)
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        int i0, i1;
        java.lang.String r1, r2, r7;
        android.os.IIncidentAuthListener r3;
        long l2;
        com.android.server.incident.IncidentCompanionService $r4;
        com.android.server.incident.PendingReports $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r3 := @parameter5: android.os.IIncidentAuthListener;

        specialinvoke r0.<com.android.server.incident.IncidentCompanionService$BinderService: void enforceRequestAuthorizationPermission()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r5 = staticinvoke <com.android.server.incident.IncidentCompanionService: com.android.server.incident.PendingReports access$000(com.android.server.incident.IncidentCompanionService)>($r4);

        virtualinvoke $r5.<com.android.server.incident.PendingReports: void authorizeReport(int,java.lang.String,java.lang.String,java.lang.String,int,android.os.IIncidentAuthListener)>(i0, r7, r1, r2, i1, r3);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void cancelAuthorization(android.os.IIncidentAuthListener)
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        long l0;
        com.android.server.incident.IncidentCompanionService $r1;
        com.android.server.incident.PendingReports $r2;
        java.lang.Throwable $r3;
        android.os.IIncidentAuthListener r4;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r4 := @parameter0: android.os.IIncidentAuthListener;

        specialinvoke r0.<com.android.server.incident.IncidentCompanionService$BinderService: void enforceRequestAuthorizationPermission()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r2 = staticinvoke <com.android.server.incident.IncidentCompanionService: com.android.server.incident.PendingReports access$000(com.android.server.incident.IncidentCompanionService)>($r1);

        virtualinvoke $r2.<com.android.server.incident.PendingReports: void cancelAuthorization(android.os.IIncidentAuthListener)>(r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void deleteAllIncidentReports(java.lang.String) throws android.os.RemoteException
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        long l0;
        java.lang.RuntimeException $r1;
        int $i1;
        com.android.server.incident.IncidentCompanionService $r2;
        android.os.IIncidentManager $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r5 := @parameter0: java.lang.String;

        if r5 == null goto label4;

        $i1 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i1 == 0 goto label4;

        specialinvoke r0.<com.android.server.incident.IncidentCompanionService$BinderService: void enforceAccessReportsPermissions(java.lang.String)>(r5);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r3 = staticinvoke <com.android.server.incident.IncidentCompanionService: android.os.IIncidentManager access$200(com.android.server.incident.IncidentCompanionService)>($r2);

        interfaceinvoke $r3.<android.os.IIncidentManager: void deleteAllIncidentReports(java.lang.String)>(r5);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

     label4:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid pkg");

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void deleteIncidentReports(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        java.lang.String r1, r2, r6;
        long l0;
        int $i1, $i2, $i3;
        com.android.server.incident.IncidentCompanionService $r3;
        android.os.IIncidentManager $r4;
        java.lang.Throwable $r5;
        java.lang.RuntimeException $r8;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r6 == null goto label4;

        if r1 == null goto label4;

        if r2 == null goto label4;

        $i1 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i1 == 0 goto label4;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 == 0 goto label4;

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i3 == 0 goto label4;

        specialinvoke r0.<com.android.server.incident.IncidentCompanionService$BinderService: void enforceAccessReportsPermissions(java.lang.String)>(r6);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r4 = staticinvoke <com.android.server.incident.IncidentCompanionService: android.os.IIncidentManager access$200(com.android.server.incident.IncidentCompanionService)>($r3);

        interfaceinvoke $r4.<android.os.IIncidentManager: void deleteIncidentReports(java.lang.String,java.lang.String,java.lang.String)>(r6, r1, r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

     label4:
        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid pkg, cls or id");

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void denyReport(java.lang.String)
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        long l0;
        com.android.server.incident.IncidentCompanionService $r1;
        com.android.server.incident.PendingReports $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r4 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.incident.IncidentCompanionService$BinderService: void enforceAuthorizePermission()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r2 = staticinvoke <com.android.server.incident.IncidentCompanionService: com.android.server.incident.PendingReports access$000(com.android.server.incident.IncidentCompanionService)>($r1);

        virtualinvoke $r2.<com.android.server.incident.PendingReports: void denyReport(java.lang.String)>(r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        com.android.server.incident.IncidentCompanionService $r4, $r6;
        android.content.Context $r5;
        boolean $z0, $z1;
        int $i0;
        com.android.server.incident.PendingReports $r7;
        java.lang.String $r8, $r9;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r5 = virtualinvoke $r4.<com.android.server.incident.IncidentCompanionService: android.content.Context getContext()>();

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r5, "IncidentCompanionService", r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $i0 = lengthof r3;

        if $i0 != 1 goto label2;

        $r9 = "--restricted_image";

        $r8 = r3[0];

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.server.incident.IncidentCompanionService$BinderService: void dumpRestrictedImages(java.io.FileDescriptor)>(r1);

        goto label3;

     label2:
        $r6 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r7 = staticinvoke <com.android.server.incident.IncidentCompanionService: com.android.server.incident.PendingReports access$000(com.android.server.incident.IncidentCompanionService)>($r6);

        virtualinvoke $r7.<com.android.server.incident.PendingReports: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

     label3:
        return;
    }

    public android.os.IncidentManager$IncidentReport getIncidentReport(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        java.lang.String r1, r2, r6;
        long l0;
        int $i1, $i2, $i3;
        com.android.server.incident.IncidentCompanionService $r3;
        android.os.IIncidentManager $r4;
        java.lang.Throwable $r5;
        android.os.IncidentManager$IncidentReport r7;
        java.lang.RuntimeException $r9;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r6 == null goto label4;

        if r1 == null goto label4;

        if r2 == null goto label4;

        $i1 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i1 == 0 goto label4;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 == 0 goto label4;

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i3 == 0 goto label4;

        specialinvoke r0.<com.android.server.incident.IncidentCompanionService$BinderService: void enforceAccessReportsPermissions(java.lang.String)>(r6);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r4 = staticinvoke <com.android.server.incident.IncidentCompanionService: android.os.IIncidentManager access$200(com.android.server.incident.IncidentCompanionService)>($r3);

        r7 = interfaceinvoke $r4.<android.os.IIncidentManager: android.os.IncidentManager$IncidentReport getIncidentReport(java.lang.String,java.lang.String,java.lang.String)>(r6, r1, r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r7;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

     label4:
        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid pkg, cls or id");

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.List getIncidentReportList(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        java.lang.String r1, r5;
        long l0;
        com.android.server.incident.IncidentCompanionService $r2;
        android.os.IIncidentManager $r3;
        java.lang.Throwable $r4;
        java.util.List r6;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.incident.IncidentCompanionService$BinderService: void enforceAccessReportsPermissions(java.lang.String)>(null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r3 = staticinvoke <com.android.server.incident.IncidentCompanionService: android.os.IIncidentManager access$200(com.android.server.incident.IncidentCompanionService)>($r2);

        r6 = interfaceinvoke $r3.<android.os.IIncidentManager: java.util.List getIncidentReportList(java.lang.String,java.lang.String)>(r5, r1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r6;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.List getPendingReports()
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        com.android.server.incident.IncidentCompanionService $r1;
        com.android.server.incident.PendingReports $r2;
        java.util.List $r3;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        specialinvoke r0.<com.android.server.incident.IncidentCompanionService$BinderService: void enforceAuthorizePermission()>();

        $r1 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        $r2 = staticinvoke <com.android.server.incident.IncidentCompanionService: com.android.server.incident.PendingReports access$000(com.android.server.incident.IncidentCompanionService)>($r1);

        $r3 = virtualinvoke $r2.<com.android.server.incident.PendingReports: java.util.List getPendingReports()>();

        return $r3;
    }

    public void sendReportReadyBroadcast(java.lang.String, java.lang.String)
    {
        com.android.server.incident.IncidentCompanionService$BinderService r0;
        java.lang.String r1, $r14, r18;
        long l0;
        android.content.Context r2;
        int i1;
        android.content.Intent r3;
        android.content.ComponentName r4;
        com.android.server.incident.IncidentCompanionService $r5;
        android.os.UserHandle $r10, $r15;
        java.lang.String[] $r16;
        java.lang.Throwable $r17;
        java.lang.StringBuilder r19;

        r0 := @this: com.android.server.incident.IncidentCompanionService$BinderService;

        r18 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.incident.IncidentCompanionService$BinderService: void enforceRequestAuthorizationPermission()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r5 = r0.<com.android.server.incident.IncidentCompanionService$BinderService: com.android.server.incident.IncidentCompanionService this$0>;

        r2 = virtualinvoke $r5.<com.android.server.incident.IncidentCompanionService: android.content.Context getContext()>();

        i1 = staticinvoke <com.android.server.incident.IncidentCompanionService: int getAndValidateUser(android.content.Context)>(r2);

     label2:
        if i1 != -10000 goto label3;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        r3 = new android.content.Intent;

        specialinvoke r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.INCIDENT_REPORT_READY");

        r4 = new android.content.ComponentName;

        specialinvoke r4.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r18, r1);

        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r4);

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendReportReadyBroadcast sending primaryUser=");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" userHandle=");

        $r10 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i1);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" intent=");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r14 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("IncidentCompanionService", $r14);

     label4:
        $r15 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i1);

        $r16 = staticinvoke <com.android.server.incident.IncidentCompanionService: java.lang.String[] access$100()>();

        virtualinvoke r2.<android.content.Context: void sendBroadcastAsUserMultiplePermissions(android.content.Intent,android.os.UserHandle,java.lang.String[])>(r3, $r15, $r16);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label6:
        $r17 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
