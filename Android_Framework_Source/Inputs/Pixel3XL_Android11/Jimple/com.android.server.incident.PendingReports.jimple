class com.android.server.incident.PendingReports extends java.lang.Object
{
    static final java.lang.String TAG;
    private final android.app.AppOpsManager mAppOpsManager;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private int mNextPendingId;
    private final android.content.pm.PackageManager mPackageManager;
    private final java.util.ArrayList mPending;
    private final com.android.server.incident.RequestQueue mRequestQueue;

    void <init>(android.content.Context)
    {
        com.android.server.incident.PendingReports r0;
        android.content.Context r1;
        android.os.Handler $r3;
        com.android.server.incident.RequestQueue $r4;
        java.lang.Object $r5, $r8;
        java.util.ArrayList $r6;
        android.content.pm.PackageManager $r7;
        android.app.AppOpsManager $r9;

        r0 := @this: com.android.server.incident.PendingReports;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<com.android.server.incident.PendingReports: android.os.Handler mHandler> = $r3;

        $r4 = new com.android.server.incident.RequestQueue;

        specialinvoke $r4.<com.android.server.incident.RequestQueue: void <init>(android.os.Handler)>($r3);

        r0.<com.android.server.incident.PendingReports: com.android.server.incident.RequestQueue mRequestQueue> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.server.incident.PendingReports: java.lang.Object mLock> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.incident.PendingReports: java.util.ArrayList mPending> = $r6;

        r0.<com.android.server.incident.PendingReports: int mNextPendingId> = 1;

        r0.<com.android.server.incident.PendingReports: android.content.Context mContext> = r1;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.incident.PendingReports: android.content.pm.PackageManager mPackageManager> = $r7;

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r9 = (android.app.AppOpsManager) $r8;

        r0.<com.android.server.incident.PendingReports: android.app.AppOpsManager mAppOpsManager> = $r9;

        return;
    }

    static int access$008(com.android.server.incident.PendingReports)
    {
        com.android.server.incident.PendingReports r0;
        int i0, $i1;

        r0 := @parameter0: com.android.server.incident.PendingReports;

        i0 = r0.<com.android.server.incident.PendingReports: int mNextPendingId>;

        $i1 = i0 + 1;

        r0.<com.android.server.incident.PendingReports: int mNextPendingId> = $i1;

        return i0;
    }

    private void authorizeReportImpl(int, java.lang.String, java.lang.String, java.lang.String, int, android.os.IIncidentAuthListener)
    {
        com.android.server.incident.PendingReports r0;
        java.lang.String r1, $r12, $r18, r20, r21;
        int i0, i3, i4;
        android.os.IIncidentAuthListener r2;
        android.content.ComponentName r3;
        java.lang.Object r4;
        com.android.server.incident.PendingReports$PendingReportRec r5;
        java.util.ArrayList $r6;
        boolean $z1;
        java.lang.StringBuilder $r7, $r14;
        android.os.RemoteException $r13;
        android.net.Uri $r16;
        java.lang.Throwable $r19;
        android.os.IBinder r23;
        com.android.server.incident._$$Lambda$PendingReports$B2hwzQpyMfhPG0Cw6n_Xz1SrHR0 r24;

        r0 := @this: com.android.server.incident.PendingReports;

        i3 := @parameter0: int;

        r20 := @parameter1: java.lang.String;

        r21 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r2 := @parameter5: android.os.IIncidentAuthListener;

        if i3 == 0 goto label01;

        $z1 = specialinvoke r0.<com.android.server.incident.PendingReports: boolean isPackageInUid(int,java.lang.String)>(i3, r20);

        if $z1 != 0 goto label01;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match package ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IncidentCompanionService", $r12);

        specialinvoke r0.<com.android.server.incident.PendingReports: void denyReportBeforeAddingRec(android.os.IIncidentAuthListener,java.lang.String)>(r2, r20);

        return;

     label01:
        i4 = specialinvoke r0.<com.android.server.incident.PendingReports: int getAndValidateUser()>();

        if i4 != -10000 goto label02;

        specialinvoke r0.<com.android.server.incident.PendingReports: void denyReportBeforeAddingRec(android.os.IIncidentAuthListener,java.lang.String)>(r2, r20);

        return;

     label02:
        r3 = specialinvoke r0.<com.android.server.incident.PendingReports: android.content.ComponentName getApproverComponent(int)>(i4);

        if r3 != null goto label03;

        specialinvoke r0.<com.android.server.incident.PendingReports: void denyReportBeforeAddingRec(android.os.IIncidentAuthListener,java.lang.String)>(r2, r20);

        return;

     label03:
        r4 = r0.<com.android.server.incident.PendingReports: java.lang.Object mLock>;

        entermonitor r4;

     label04:
        r5 = new com.android.server.incident.PendingReports$PendingReportRec;

        specialinvoke r5.<com.android.server.incident.PendingReports$PendingReportRec: void <init>(com.android.server.incident.PendingReports,java.lang.String,java.lang.String,java.lang.String,int,android.os.IIncidentAuthListener)>(r0, r20, r21, r1, i0, r2);

        $r6 = r0.<com.android.server.incident.PendingReports: java.util.ArrayList mPending>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        exitmonitor r4;

     label05:
        r23 = interfaceinvoke r2.<android.os.IIncidentAuthListener: android.os.IBinder asBinder()>();

        r24 = new com.android.server.incident._$$Lambda$PendingReports$B2hwzQpyMfhPG0Cw6n_Xz1SrHR0;

        specialinvoke r24.<com.android.server.incident._$$Lambda$PendingReports$B2hwzQpyMfhPG0Cw6n_Xz1SrHR0: void <init>(com.android.server.incident.PendingReports,android.os.IIncidentAuthListener,android.content.ComponentName,int)>(r0, r2, r3, i4);

        interfaceinvoke r23.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r24, 0);

     label06:
        goto label08;

     label07:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote died while trying to register death listener: ");

        $r16 = virtualinvoke r5.<com.android.server.incident.PendingReports$PendingReportRec: android.net.Uri getUri()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("IncidentCompanionService", $r18);

        specialinvoke r0.<com.android.server.incident.PendingReports: void cancelReportImpl(android.os.IIncidentAuthListener,android.content.ComponentName,int)>(r2, r3, i4);

     label08:
        specialinvoke r0.<com.android.server.incident.PendingReports: void sendBroadcast(android.content.ComponentName,int)>(r3, i4);

        return;

     label09:
        $r19 := @caughtexception;

     label10:
        exitmonitor r4;

     label11:
        throw $r19;

        catch java.lang.Throwable from label04 to label05 with label09;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void cancelReportImpl(android.os.IIncidentAuthListener)
    {
        com.android.server.incident.PendingReports r0;
        android.os.IIncidentAuthListener r1;
        int i0;
        android.content.ComponentName r2;

        r0 := @this: com.android.server.incident.PendingReports;

        r1 := @parameter0: android.os.IIncidentAuthListener;

        i0 = specialinvoke r0.<com.android.server.incident.PendingReports: int getAndValidateUser()>();

        r2 = specialinvoke r0.<com.android.server.incident.PendingReports: android.content.ComponentName getApproverComponent(int)>(i0);

        if i0 == -10000 goto label1;

        if r2 == null goto label1;

        specialinvoke r0.<com.android.server.incident.PendingReports: void cancelReportImpl(android.os.IIncidentAuthListener,android.content.ComponentName,int)>(r1, r2, i0);

     label1:
        return;
    }

    private void cancelReportImpl(android.os.IIncidentAuthListener, android.content.ComponentName, int)
    {
        com.android.server.incident.PendingReports r0;
        android.content.ComponentName r1;
        int i0;
        java.lang.Object r2;
        java.lang.Throwable $r3;
        android.os.IIncidentAuthListener r4;

        r0 := @this: com.android.server.incident.PendingReports;

        r4 := @parameter0: android.os.IIncidentAuthListener;

        r1 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        r2 = r0.<com.android.server.incident.PendingReports: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.incident.PendingReports: void removePendingReportRecLocked(android.os.IIncidentAuthListener)>(r4);

        exitmonitor r2;

     label2:
        specialinvoke r0.<com.android.server.incident.PendingReports: void sendBroadcast(android.content.ComponentName,int)>(r1, i0);

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void denyReportBeforeAddingRec(android.os.IIncidentAuthListener, java.lang.String)
    {
        com.android.server.incident.PendingReports r0;
        java.lang.String r1, $r7;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4;
        android.os.IIncidentAuthListener r8;

        r0 := @this: com.android.server.incident.PendingReports;

        r8 := @parameter0: android.os.IIncidentAuthListener;

        r1 := @parameter1: java.lang.String;

     label1:
        interfaceinvoke r8.<android.os.IIncidentAuthListener: void onReportDenied()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed calling back for denial for ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IncidentCompanionService", $r7, $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private com.android.server.incident.PendingReports$PendingReportRec findAndRemovePendingReportRecLocked(java.lang.String)
    {
        com.android.server.incident.PendingReports r0;
        int i0, $i1;
        java.lang.String $r1, $r8, r9;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5;
        android.net.Uri r10;
        java.util.Iterator r11;
        com.android.server.incident.PendingReports$PendingReportRec r12;

        r0 := @this: com.android.server.incident.PendingReports;

        r9 := @parameter0: java.lang.String;

        r10 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r9);

     label1:
        $r1 = virtualinvoke r10.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("id");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        $r2 = r0.<com.android.server.incident.PendingReports: java.util.ArrayList mPending>;

        r11 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.android.server.incident.PendingReports$PendingReportRec) $r3;

        $i1 = r12.<com.android.server.incident.PendingReports$PendingReportRec: int id>;

        if $i1 != i0 goto label4;

        interfaceinvoke r11.<java.util.Iterator: void remove()>();

        return r12;

     label4:
        goto label3;

     label5:
        return null;

     label6:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t parse id from: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IncidentCompanionService", $r8);

        return null;

        catch java.lang.NumberFormatException from label1 to label2 with label6;
    }

    private int getAndValidateUser()
    {
        com.android.server.incident.PendingReports r0;
        android.content.Context $r1;
        int $i0;

        r0 := @this: com.android.server.incident.PendingReports;

        $r1 = r0.<com.android.server.incident.PendingReports: android.content.Context mContext>;

        $i0 = staticinvoke <com.android.server.incident.IncidentCompanionService: int getAndValidateUser(android.content.Context)>($r1);

        return $i0;
    }

    private android.content.ComponentName getApproverComponent(int)
    {
        com.android.server.incident.PendingReports r0;
        int i0, $i1, $i2;
        java.util.List r1;
        android.content.Intent $r2;
        android.content.pm.PackageManager $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r9;
        java.lang.Object $r10;
        android.content.pm.ResolveInfo $r11;
        android.content.pm.ComponentInfo $r12;
        android.content.ComponentName $r13;

        r0 := @this: com.android.server.incident.PendingReports;

        i0 := @parameter0: int;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PENDING_INCIDENT_REPORTS_CHANGED");

        $r3 = r0.<com.android.server.incident.PendingReports: android.content.pm.PackageManager mPackageManager>;

        r1 = virtualinvoke $r3.<android.content.pm.PackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,int)>($r2, 1835008, i0);

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 != 1 goto label1;

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (android.content.pm.ResolveInfo) $r10;

        $r12 = virtualinvoke $r11.<android.content.pm.ResolveInfo: android.content.pm.ComponentInfo getComponentInfo()>();

        $r13 = virtualinvoke $r12.<android.content.pm.ComponentInfo: android.content.ComponentName getComponentName()>();

        return $r13;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Didn\'t find exactly one BroadcastReceiver to handle android.intent.action.PENDING_INCIDENT_REPORTS_CHANGED. The report will be denied. size=");

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": matches=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IncidentCompanionService", $r9);

        return null;
    }

    private boolean isPackageInUid(int, java.lang.String)
    {
        com.android.server.incident.PendingReports r0;
        int i0;
        android.app.AppOpsManager $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.incident.PendingReports;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

     label1:
        $r1 = r0.<com.android.server.incident.PendingReports: android.app.AppOpsManager mAppOpsManager>;

        virtualinvoke $r1.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>(i0, r3);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    private void removePendingReportRecLocked(android.os.IIncidentAuthListener)
    {
        com.android.server.incident.PendingReports r0;
        android.os.IIncidentAuthListener r1, $r7;
        java.util.Iterator r2;
        com.android.server.incident.PendingReports$PendingReportRec r3;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.os.IBinder $r8, $r9;
        java.lang.StringBuilder $r10;
        android.net.Uri $r14;
        java.lang.String $r16;

        r0 := @this: com.android.server.incident.PendingReports;

        r1 := @parameter0: android.os.IIncidentAuthListener;

        $r5 = r0.<com.android.server.incident.PendingReports: java.util.ArrayList mPending>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.incident.PendingReports$PendingReportRec) $r6;

        $r7 = r3.<com.android.server.incident.PendingReports$PendingReportRec: android.os.IIncidentAuthListener listener>;

        $r8 = interfaceinvoke $r7.<android.os.IIncidentAuthListener: android.os.IBinder asBinder()>();

        $r9 = interfaceinvoke r1.<android.os.IIncidentAuthListener: android.os.IBinder asBinder()>();

        if $r8 != $r9 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ...Removed PendingReportRec index=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = virtualinvoke r3.<com.android.server.incident.PendingReports$PendingReportRec: android.net.Uri getUri()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("IncidentCompanionService", $r16);

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        return;
    }

    private void sendBroadcast()
    {
        com.android.server.incident.PendingReports r0;
        int i0;
        android.content.ComponentName r1;

        r0 := @this: com.android.server.incident.PendingReports;

        i0 = specialinvoke r0.<com.android.server.incident.PendingReports: int getAndValidateUser()>();

        if i0 != -10000 goto label1;

        return;

     label1:
        r1 = specialinvoke r0.<com.android.server.incident.PendingReports: android.content.ComponentName getApproverComponent(int)>(i0);

        if r1 != null goto label2;

        return;

     label2:
        specialinvoke r0.<com.android.server.incident.PendingReports: void sendBroadcast(android.content.ComponentName,int)>(r1, i0);

        return;
    }

    private void sendBroadcast(android.content.ComponentName, int)
    {
        com.android.server.incident.PendingReports r0;
        int i0;
        android.content.Intent $r2;
        android.content.Context $r6;
        android.os.UserHandle $r7;
        android.os.Bundle $r8;
        android.content.ComponentName r9;
        android.app.BroadcastOptions r10;

        r0 := @this: com.android.server.incident.PendingReports;

        r9 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PENDING_INCIDENT_REPORTS_CHANGED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r9);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(16777216);

        r10 = staticinvoke <android.app.BroadcastOptions: android.app.BroadcastOptions makeBasic()>();

        virtualinvoke r10.<android.app.BroadcastOptions: void setBackgroundActivityStartsAllowed(boolean)>(1);

        $r6 = r0.<com.android.server.incident.PendingReports: android.content.Context mContext>;

        $r7 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        $r8 = virtualinvoke r10.<android.app.BroadcastOptions: android.os.Bundle toBundle()>();

        virtualinvoke $r6.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.os.Bundle)>($r2, $r7, "android.permission.APPROVE_INCIDENT_REPORTS", $r8);

        return;
    }

    public void approveReport(java.lang.String)
    {
        com.android.server.incident.PendingReports r0;
        java.lang.StringBuilder $r1, $r11, r18;
        java.lang.String $r4, $r8, $r14, r15;
        android.os.IIncidentAuthListener $r5;
        java.lang.Throwable $r9;
        android.os.RemoteException $r10;
        java.lang.Object r16;
        com.android.server.incident.PendingReports$PendingReportRec r17;

        r0 := @this: com.android.server.incident.PendingReports;

        r15 := @parameter0: java.lang.String;

        r16 = r0.<com.android.server.incident.PendingReports: java.lang.Object mLock>;

        entermonitor r16;

     label01:
        r17 = specialinvoke r0.<com.android.server.incident.PendingReports: com.android.server.incident.PendingReports$PendingReportRec findAndRemovePendingReportRecLocked(java.lang.String)>(r15);

     label02:
        if r17 != null goto label05;

     label03:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("confirmApproved: Couldn\'t find record for uri: ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r8 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("IncidentCompanionService", $r8);

        exitmonitor r16;

     label04:
        return;

     label05:
        exitmonitor r16;

     label06:
        specialinvoke r0.<com.android.server.incident.PendingReports: void sendBroadcast()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Approved report: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("IncidentCompanionService", $r4);

     label07:
        $r5 = r17.<com.android.server.incident.PendingReports$PendingReportRec: android.os.IIncidentAuthListener listener>;

        interfaceinvoke $r5.<android.os.IIncidentAuthListener: void onReportApproved()>();

     label08:
        goto label10;

     label09:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed calling back for approval for: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IncidentCompanionService", $r14, $r10);

     label10:
        return;

     label11:
        $r9 := @caughtexception;

     label12:
        exitmonitor r16;

     label13:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void authorizeReport(int, java.lang.String, java.lang.String, java.lang.String, int, android.os.IIncidentAuthListener)
    {
        com.android.server.incident.PendingReports r0;
        int i0, i1;
        java.lang.String r1, r2, r3;
        android.os.IIncidentAuthListener r4;
        com.android.server.incident.RequestQueue $r5;
        android.os.IBinder $r6;
        com.android.server.incident._$$Lambda$PendingReports$42Ba6ZxAFxFmqtPlfnXNpuKHOXM $r7;

        r0 := @this: com.android.server.incident.PendingReports;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r4 := @parameter5: android.os.IIncidentAuthListener;

        $r5 = r0.<com.android.server.incident.PendingReports: com.android.server.incident.RequestQueue mRequestQueue>;

        $r6 = interfaceinvoke r4.<android.os.IIncidentAuthListener: android.os.IBinder asBinder()>();

        $r7 = new com.android.server.incident._$$Lambda$PendingReports$42Ba6ZxAFxFmqtPlfnXNpuKHOXM;

        specialinvoke $r7.<com.android.server.incident._$$Lambda$PendingReports$42Ba6ZxAFxFmqtPlfnXNpuKHOXM: void <init>(com.android.server.incident.PendingReports,int,java.lang.String,java.lang.String,java.lang.String,int,android.os.IIncidentAuthListener)>(r0, i0, r1, r2, r3, i1, r4);

        virtualinvoke $r5.<com.android.server.incident.RequestQueue: void enqueue(android.os.IBinder,boolean,java.lang.Runnable)>($r6, 1, $r7);

        return;
    }

    public void cancelAuthorization(android.os.IIncidentAuthListener)
    {
        com.android.server.incident.PendingReports r0;
        android.os.IIncidentAuthListener r1;
        com.android.server.incident.RequestQueue $r2;
        android.os.IBinder $r3;
        com.android.server.incident._$$Lambda$PendingReports$h00dGfNWXgDmC4_YyxYy1CUoKw4 $r4;

        r0 := @this: com.android.server.incident.PendingReports;

        r1 := @parameter0: android.os.IIncidentAuthListener;

        $r2 = r0.<com.android.server.incident.PendingReports: com.android.server.incident.RequestQueue mRequestQueue>;

        $r3 = interfaceinvoke r1.<android.os.IIncidentAuthListener: android.os.IBinder asBinder()>();

        $r4 = new com.android.server.incident._$$Lambda$PendingReports$h00dGfNWXgDmC4_YyxYy1CUoKw4;

        specialinvoke $r4.<com.android.server.incident._$$Lambda$PendingReports$h00dGfNWXgDmC4_YyxYy1CUoKw4: void <init>(com.android.server.incident.PendingReports,android.os.IIncidentAuthListener)>(r0, r1);

        virtualinvoke $r2.<com.android.server.incident.RequestQueue: void enqueue(android.os.IBinder,boolean,java.lang.Runnable)>($r3, 0, $r4);

        return;
    }

    public void denyReport(java.lang.String)
    {
        com.android.server.incident.PendingReports r0;
        java.lang.StringBuilder $r1, $r10, r18;
        java.lang.String $r4, $r8, $r13, r15;
        android.os.IIncidentAuthListener $r5;
        android.os.RemoteException $r9;
        java.lang.Throwable $r14;
        java.lang.Object r16;
        com.android.server.incident.PendingReports$PendingReportRec r17;

        r0 := @this: com.android.server.incident.PendingReports;

        r15 := @parameter0: java.lang.String;

        r16 = r0.<com.android.server.incident.PendingReports: java.lang.Object mLock>;

        entermonitor r16;

     label01:
        r17 = specialinvoke r0.<com.android.server.incident.PendingReports: com.android.server.incident.PendingReports$PendingReportRec findAndRemovePendingReportRecLocked(java.lang.String)>(r15);

     label02:
        if r17 != null goto label05;

     label03:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("confirmDenied: Couldn\'t find record for uri: ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r8 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("IncidentCompanionService", $r8);

        exitmonitor r16;

     label04:
        return;

     label05:
        exitmonitor r16;

     label06:
        specialinvoke r0.<com.android.server.incident.PendingReports: void sendBroadcast()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Denied report: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("IncidentCompanionService", $r4);

     label07:
        $r5 = r17.<com.android.server.incident.PendingReports$PendingReportRec: android.os.IIncidentAuthListener listener>;

        interfaceinvoke $r5.<android.os.IIncidentAuthListener: void onReportDenied()>();

     label08:
        goto label10;

     label09:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed calling back for denial for: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IncidentCompanionService", $r13, $r9);

     label10:
        return;

     label11:
        $r14 := @caughtexception;

     label12:
        exitmonitor r16;

     label13:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.incident.PendingReports r0;
        int i0, $i2, i4;
        com.android.server.incident.PendingReports$PendingReportRec r1;
        long l1, $l3;
        java.text.SimpleDateFormat $r2;
        java.util.ArrayList $r3, $r8;
        java.lang.String $r7, $r12, $r14, $r15;
        java.lang.Object $r9, r21;
        java.lang.Object[] $r10;
        java.lang.Long $r11;
        android.net.Uri $r13;
        java.lang.Throwable $r16;
        java.io.FileDescriptor r17;
        java.io.PrintWriter r18;
        java.lang.String[] r19;
        java.lang.StringBuilder r22;
        java.util.Date r23;

        r0 := @this: com.android.server.incident.PendingReports;

        r17 := @parameter0: java.io.FileDescriptor;

        r18 := @parameter1: java.io.PrintWriter;

        r19 := @parameter2: java.lang.String[];

        $i2 = lengthof r19;

        if $i2 != 0 goto label11;

        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss.SSS");

        r21 = r0.<com.android.server.incident.PendingReports: java.lang.Object mLock>;

        entermonitor r21;

     label01:
        $r3 = r0.<com.android.server.incident.PendingReports: java.util.ArrayList mPending>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPending: (");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r18.<java.io.PrintWriter: void println(java.lang.String)>($r7);

     label02:
        i4 = 0;

     label03:
        if i4 >= i0 goto label06;

     label04:
        $r8 = r0.<com.android.server.incident.PendingReports: java.util.ArrayList mPending>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r1 = (com.android.server.incident.PendingReports$PendingReportRec) $r9;

        l1 = r1.<com.android.server.incident.PendingReports$PendingReportRec: long addedRealtime>;

        r23 = new java.util.Date;

        $l3 = r1.<com.android.server.incident.PendingReports$PendingReportRec: long addedWalltime>;

        specialinvoke r23.<java.util.Date: void <init>(long)>($l3);

        $r10 = newarray (java.lang.Object)[3];

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r10[0] = $r11;

        $r12 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r23);

        $r10[1] = $r12;

        $r13 = virtualinvoke r1.<com.android.server.incident.PendingReports$PendingReportRec: android.net.Uri getUri()>();

        $r14 = virtualinvoke $r13.<android.net.Uri: java.lang.String toString()>();

        $r10[2] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  %11d %s: %s", $r10);

        virtualinvoke r18.<java.io.PrintWriter: void println(java.lang.String)>($r15);

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        exitmonitor r21;

     label07:
        goto label11;

     label08:
        $r16 := @caughtexception;

     label09:
        exitmonitor r21;

     label10:
        throw $r16;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public java.util.List getPendingReports()
    {
        com.android.server.incident.PendingReports r0;
        java.lang.Object r1, $r4;
        int i0, i1;
        java.util.ArrayList $r2, $r3, r9;
        com.android.server.incident.PendingReports$PendingReportRec $r5;
        android.net.Uri $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.incident.PendingReports;

        r1 = r0.<com.android.server.incident.PendingReports: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.incident.PendingReports: java.util.ArrayList mPending>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r9 = new java.util.ArrayList;

        specialinvoke r9.<java.util.ArrayList: void <init>(int)>(i0);

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r3 = r0.<com.android.server.incident.PendingReports: java.util.ArrayList mPending>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.incident.PendingReports$PendingReportRec) $r4;

        $r6 = virtualinvoke $r5.<com.android.server.incident.PendingReports$PendingReportRec: android.net.Uri getUri()>();

        $r7 = virtualinvoke $r6.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        return r9;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void lambda$authorizeReport$0$PendingReports(int, java.lang.String, java.lang.String, java.lang.String, int, android.os.IIncidentAuthListener)
    {
        com.android.server.incident.PendingReports r0;
        int i0, i1;
        java.lang.String r1, r2, r3;
        android.os.IIncidentAuthListener r4;

        r0 := @this: com.android.server.incident.PendingReports;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r4 := @parameter5: android.os.IIncidentAuthListener;

        specialinvoke r0.<com.android.server.incident.PendingReports: void authorizeReportImpl(int,java.lang.String,java.lang.String,java.lang.String,int,android.os.IIncidentAuthListener)>(i0, r1, r2, r3, i1, r4);

        return;
    }

    public void lambda$authorizeReportImpl$2$PendingReports(android.os.IIncidentAuthListener, android.content.ComponentName, int)
    {
        com.android.server.incident.PendingReports r0;
        android.os.IIncidentAuthListener r1;
        android.content.ComponentName r2;
        int i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;

        r0 := @this: com.android.server.incident.PendingReports;

        r1 := @parameter0: android.os.IIncidentAuthListener;

        r2 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got death notification listener=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("IncidentCompanionService", $r7);

        specialinvoke r0.<com.android.server.incident.PendingReports: void cancelReportImpl(android.os.IIncidentAuthListener,android.content.ComponentName,int)>(r1, r2, i0);

        return;
    }

    public void lambda$cancelAuthorization$1$PendingReports(android.os.IIncidentAuthListener)
    {
        com.android.server.incident.PendingReports r0;
        android.os.IIncidentAuthListener r1;

        r0 := @this: com.android.server.incident.PendingReports;

        r1 := @parameter0: android.os.IIncidentAuthListener;

        specialinvoke r0.<com.android.server.incident.PendingReports: void cancelReportImpl(android.os.IIncidentAuthListener)>(r1);

        return;
    }

    public void onBootCompleted()
    {
        com.android.server.incident.PendingReports r0;
        com.android.server.incident.RequestQueue $r1;

        r0 := @this: com.android.server.incident.PendingReports;

        $r1 = r0.<com.android.server.incident.PendingReports: com.android.server.incident.RequestQueue mRequestQueue>;

        virtualinvoke $r1.<com.android.server.incident.RequestQueue: void start()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.incident.PendingReports: java.lang.String TAG> = "IncidentCompanionService";

        return;
    }
}
