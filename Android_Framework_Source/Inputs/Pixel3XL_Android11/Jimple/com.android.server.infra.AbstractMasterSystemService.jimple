public abstract class com.android.server.infra.AbstractMasterSystemService extends com.android.server.SystemService
{
    public static final int PACKAGE_RESTART_POLICY_NO_REFRESH;
    public static final int PACKAGE_RESTART_POLICY_REFRESH_EAGER;
    public static final int PACKAGE_RESTART_POLICY_REFRESH_LAZY;
    public static final int PACKAGE_UPDATE_POLICY_NO_REFRESH;
    public static final int PACKAGE_UPDATE_POLICY_REFRESH_EAGER;
    public static final int PACKAGE_UPDATE_POLICY_REFRESH_LAZY;
    public boolean debug;
    protected boolean mAllowInstantService;
    private final android.util.SparseBooleanArray mDisabledByUserRestriction;
    protected final java.lang.Object mLock;
    protected final com.android.server.infra.ServiceNameResolver mServiceNameResolver;
    private final int mServicePackagePolicyFlags;
    private final android.util.SparseArray mServicesCache;
    protected final java.lang.String mTag;
    private android.os.UserManagerInternal mUm;
    private android.util.SparseArray mUpdatingPackageNames;
    public boolean verbose;

    protected void <init>(android.content.Context, com.android.server.infra.ServiceNameResolver, java.lang.String)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        android.content.Context r1;
        com.android.server.infra.ServiceNameResolver r2;
        java.lang.String r3;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.infra.ServiceNameResolver;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void <init>(android.content.Context,com.android.server.infra.ServiceNameResolver,java.lang.String,int)>(r1, r2, r3, 34);

        return;
    }

    protected void <init>(android.content.Context, com.android.server.infra.ServiceNameResolver, java.lang.String, int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        java.lang.String r1, $r5, $r15, r21;
        java.util.List r2;
        boolean z0;
        java.lang.Class $r4;
        java.lang.Object $r6, $r10;
        android.util.SparseArray $r7;
        int $i0, $i1, $i2, i4, i5, i6, i7, i8;
        android.util.SparseBooleanArray $r8, $r16;
        com.android.server.infra._$$Lambda$AbstractMasterSystemService$_fKw_VUP0pSfcMMlgRqoT4OPhxw $r9;
        android.content.pm.UserInfo $r11;
        java.lang.StringBuilder $r12;
        com.android.server.infra._$$Lambda$AbstractMasterSystemService$su3lJpEVIbL_C7doP4eboTpqjxU $r17;
        android.content.Context r18;
        com.android.server.infra.ServiceNameResolver r19;
        android.os.UserManagerInternal r20;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        r18 := @parameter0: android.content.Context;

        r19 := @parameter1: com.android.server.infra.ServiceNameResolver;

        r1 := @parameter2: java.lang.String;

        i4 := @parameter3: int;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r18);

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag> = $r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.Object mLock> = $r6;

        r0.<com.android.server.infra.AbstractMasterSystemService: boolean verbose> = 0;

        r0.<com.android.server.infra.AbstractMasterSystemService: boolean debug> = 0;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mServicesCache> = $r7;

        i5 = i4;

        $i0 = i4 & 7;

        if $i0 != 0 goto label1;

        i5 = i4 | 2;

     label1:
        i6 = i5;

        $i1 = i5 & 112;

        if $i1 != 0 goto label2;

        i6 = i5 | 32;

     label2:
        r0.<com.android.server.infra.AbstractMasterSystemService: int mServicePackagePolicyFlags> = i6;

        r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.ServiceNameResolver mServiceNameResolver> = r19;

        if r19 == null goto label3;

        $r17 = new com.android.server.infra._$$Lambda$AbstractMasterSystemService$su3lJpEVIbL_C7doP4eboTpqjxU;

        specialinvoke $r17.<com.android.server.infra._$$Lambda$AbstractMasterSystemService$su3lJpEVIbL_C7doP4eboTpqjxU: void <init>(com.android.server.infra.AbstractMasterSystemService)>(r0);

        interfaceinvoke r19.<com.android.server.infra.ServiceNameResolver: void setOnTemporaryServiceNameChangedCallback(com.android.server.infra.ServiceNameResolver$NameResolverListener)>($r17);

     label3:
        if r1 != null goto label4;

        r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseBooleanArray mDisabledByUserRestriction> = null;

        goto label8;

     label4:
        $r8 = new android.util.SparseBooleanArray;

        specialinvoke $r8.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseBooleanArray mDisabledByUserRestriction> = $r8;

        r20 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: android.os.UserManagerInternal getUserManagerInternal()>();

        r2 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: java.util.List getSupportedUsers()>();

        i7 = 0;

     label5:
        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if i7 >= $i2 goto label7;

        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i7);

        $r11 = (android.content.pm.UserInfo) $r10;

        i8 = $r11.<android.content.pm.UserInfo: int id>;

        z0 = virtualinvoke r20.<android.os.UserManagerInternal: boolean getUserRestriction(int,java.lang.String)>(i8, r1);

        if z0 == 0 goto label6;

        r21 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disabling by restrictions user ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r21, $r15);

        $r16 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseBooleanArray mDisabledByUserRestriction>;

        virtualinvoke $r16.<android.util.SparseBooleanArray: void put(int,boolean)>(i8, z0);

     label6:
        i7 = i7 + 1;

        goto label5;

     label7:
        $r9 = new com.android.server.infra._$$Lambda$AbstractMasterSystemService$_fKw_VUP0pSfcMMlgRqoT4OPhxw;

        specialinvoke $r9.<com.android.server.infra._$$Lambda$AbstractMasterSystemService$_fKw_VUP0pSfcMMlgRqoT4OPhxw: void <init>(com.android.server.infra.AbstractMasterSystemService,java.lang.String)>(r0, r1);

        virtualinvoke r20.<android.os.UserManagerInternal: void addUserRestrictionsListener(android.os.UserManagerInternal$UserRestrictionsListener)>($r9);

     label8:
        specialinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void startTrackingPackageChanges()>();

        return;
    }

    static android.util.SparseArray access$000(com.android.server.infra.AbstractMasterSystemService)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.infra.AbstractMasterSystemService;

        $r1 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mUpdatingPackageNames>;

        return $r1;
    }

    static android.util.SparseArray access$002(com.android.server.infra.AbstractMasterSystemService, android.util.SparseArray)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        android.util.SparseArray r1;

        r0 := @parameter0: com.android.server.infra.AbstractMasterSystemService;

        r1 := @parameter1: android.util.SparseArray;

        r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mUpdatingPackageNames> = r1;

        return r1;
    }

    static android.util.SparseArray access$100(com.android.server.infra.AbstractMasterSystemService)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.infra.AbstractMasterSystemService;

        $r1 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mServicesCache>;

        return $r1;
    }

    static int access$200(com.android.server.infra.AbstractMasterSystemService)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int $i0;

        r0 := @parameter0: com.android.server.infra.AbstractMasterSystemService;

        $i0 = r0.<com.android.server.infra.AbstractMasterSystemService: int mServicePackagePolicyFlags>;

        return $i0;
    }

    private void startTrackingPackageChanges()
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        com.android.server.infra.AbstractMasterSystemService$1 $r1;
        android.content.Context $r2;
        android.os.UserHandle $r3;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        $r1 = new com.android.server.infra.AbstractMasterSystemService$1;

        specialinvoke $r1.<com.android.server.infra.AbstractMasterSystemService$1: void <init>(com.android.server.infra.AbstractMasterSystemService)>(r0);

        $r2 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: android.content.Context getContext()>();

        $r3 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r1.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>($r2, null, $r3, 1);

        return;
    }

    protected final void assertCalledByPackageOwner(java.lang.String)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        java.lang.String r1, $r11, $r12;
        int i0, i1, i2;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        java.lang.StringBuilder $r5;
        java.lang.SecurityException $r10;
        boolean $z0;
        java.lang.String[] r13;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        r1 := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r3 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r13 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        if r13 == null goto label3;

        i1 = lengthof r13;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r12 = r13[i2];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label2;

        return;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UID ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not own ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = new java.lang.SecurityException;

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    protected void clearCacheLocked()
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        $r1 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mServicesCache>;

        virtualinvoke $r1.<android.util.SparseArray: void clear()>();

        return;
    }

    protected void dumpLocked(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        java.io.PrintWriter r1;
        boolean z0, z1, $z2;
        int i0, i1, $i2, $i3, i4, i5;
        android.util.SparseArray $r2, $r3, $r5, $r12;
        android.util.SparseBooleanArray $r4;
        java.lang.Object $r6, $r9;
        com.android.server.infra.AbstractPerUserSystemService $r7;
        com.android.server.infra.ServiceNameResolver $r8, $r11, r15;
        android.content.pm.UserInfo $r10;
        java.lang.Throwable $r13;
        java.lang.String r14, r17;
        java.util.List r16;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        r14 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.PrintWriter;

        z0 = r0.<com.android.server.infra.AbstractMasterSystemService: boolean debug>;

        z1 = r0.<com.android.server.infra.AbstractMasterSystemService: boolean verbose>;

     label01:
        r0.<com.android.server.infra.AbstractMasterSystemService: boolean verbose> = 1;

        r0.<com.android.server.infra.AbstractMasterSystemService: boolean debug> = 1;

        $r2 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mServicesCache>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Debug: ");

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>(z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" Verbose: ");

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>(z1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Package policy flags: ");

        $i2 = r0.<com.android.server.infra.AbstractMasterSystemService: int mServicePackagePolicyFlags>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i2);

        $r3 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mUpdatingPackageNames>;

        if $r3 == null goto label02;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Packages being updated: ");

        $r12 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mUpdatingPackageNames>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r12);

     label02:
        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void dumpSupportedUsers(java.io.PrintWriter,java.lang.String)>(r1, r14);

        r15 = r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.ServiceNameResolver mServiceNameResolver>;

     label03:
        if r15 == null goto label08;

     label04:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Name resolver: ");

        $r8 = r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.ServiceNameResolver mServiceNameResolver>;

        interfaceinvoke $r8.<com.android.server.infra.ServiceNameResolver: void dumpShort(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        r16 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: java.util.List getSupportedUsers()>();

     label05:
        i4 = 0;

     label06:
        $i3 = interfaceinvoke r16.<java.util.List: int size()>();

        if i4 >= $i3 goto label08;

        $r9 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(i4);

        $r10 = (android.content.pm.UserInfo) $r9;

        i1 = $r10.<android.content.pm.UserInfo: int id>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r11 = r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.ServiceNameResolver mServiceNameResolver>;

        interfaceinvoke $r11.<com.android.server.infra.ServiceNameResolver: void dumpShort(java.io.PrintWriter,int)>(r1, i1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label07:
        i4 = i4 + 1;

        goto label06;

     label08:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Users disabled by restriction: ");

        $r4 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseBooleanArray mDisabledByUserRestriction>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Allow instant service: ");

        $z2 = r0.<com.android.server.infra.AbstractMasterSystemService: boolean mAllowInstantService>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z2);

        r17 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String getServiceSettingsProperty()>();

     label09:
        if r17 == null goto label11;

     label10:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Settings property: ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r17);

     label11:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Cached services: ");

     label12:
        if i0 != 0 goto label15;

     label13:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("none");

     label14:
        goto label20;

     label15:
        virtualinvoke r1.<java.io.PrintWriter: void println(int)>(i0);

     label16:
        i5 = 0;

     label17:
        if i5 >= i0 goto label20;

     label18:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Service at ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i5);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(": ");

        $r5 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mServicesCache>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        $r7 = (com.android.server.infra.AbstractPerUserSystemService) $r6;

        virtualinvoke $r7.<com.android.server.infra.AbstractPerUserSystemService: void dumpLocked(java.lang.String,java.io.PrintWriter)>("    ", r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label19:
        i5 = i5 + 1;

        goto label17;

     label20:
        r0.<com.android.server.infra.AbstractMasterSystemService: boolean debug> = z0;

        r0.<com.android.server.infra.AbstractMasterSystemService: boolean verbose> = z1;

        return;

     label21:
        $r13 := @caughtexception;

        r0.<com.android.server.infra.AbstractMasterSystemService: boolean debug> = z0;

        r0.<com.android.server.infra.AbstractMasterSystemService: boolean verbose> = z1;

        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label18 to label19 with label21;
    }

    protected void enforceCallingPermissionForManagement()
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r4;
        java.lang.UnsupportedOperationException $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not implemented by ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = new java.lang.UnsupportedOperationException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public final boolean getAllowInstantService()
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void enforceCallingPermissionForManagement()>();

        r1 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.server.infra.AbstractMasterSystemService: boolean mAllowInstantService>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected int getMaximumTemporaryServiceDurationMs()
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r4;
        java.lang.UnsupportedOperationException $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not implemented by ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = new java.lang.UnsupportedOperationException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    protected com.android.server.infra.AbstractPerUserSystemService getServiceForUserLocked(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0, i1, $i2, $i3;
        com.android.server.infra.AbstractPerUserSystemService r1, r5;
        boolean z0;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i2, $i3, i0, 0, 0, null, null);

        $r2 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mServicesCache>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.infra.AbstractPerUserSystemService) $r3;

        r5 = r1;

        if r1 != null goto label2;

        z0 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: boolean isDisabledLocked(int)>(i0);

        r5 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService newServiceLocked(int,boolean)>(i1, z0);

        if z0 != 0 goto label1;

        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void onServiceEnabledLocked(com.android.server.infra.AbstractPerUserSystemService,int)>(r5, i1);

     label1:
        $r4 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mServicesCache>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r5);

     label2:
        return r5;
    }

    protected java.lang.String getServiceSettingsProperty()
    {
        com.android.server.infra.AbstractMasterSystemService r0;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        return null;
    }

    protected java.util.List getSupportedUsers()
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        android.content.pm.UserInfo[] r1;
        int i0, i1;
        android.content.pm.UserInfo r3;
        android.os.UserManagerInternal $r4;
        java.util.ArrayList $r5;
        com.android.server.SystemService$TargetUser $r6;
        boolean $z0;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        $r4 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: android.os.UserManagerInternal getUserManagerInternal()>();

        r1 = virtualinvoke $r4.<android.os.UserManagerInternal: android.content.pm.UserInfo[] getUserInfos()>();

        i0 = lengthof r1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r1[i1];

        $r6 = new com.android.server.SystemService$TargetUser;

        specialinvoke $r6.<com.android.server.SystemService$TargetUser: void <init>(android.content.pm.UserInfo)>(r3);

        $z0 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: boolean isUserSupported(com.android.server.SystemService$TargetUser)>($r6);

        if $z0 == 0 goto label2;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r5;
    }

    protected android.os.UserManagerInternal getUserManagerInternal()
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        android.os.UserManagerInternal $r1, $r3, $r5;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.String $r4;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        $r1 = r0.<com.android.server.infra.AbstractMasterSystemService: android.os.UserManagerInternal mUm>;

        if $r1 != null goto label2;

        $z0 = r0.<com.android.server.infra.AbstractMasterSystemService: boolean verbose>;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r4, "lazy-loading UserManagerInternal");

     label1:
        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/UserManagerInternal;");

        $r3 = (android.os.UserManagerInternal) $r2;

        r0.<com.android.server.infra.AbstractMasterSystemService: android.os.UserManagerInternal mUm> = $r3;

     label2:
        $r5 = r0.<com.android.server.infra.AbstractMasterSystemService: android.os.UserManagerInternal mUm>;

        return $r5;
    }

    public final boolean isBindInstantServiceAllowed()
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        r1 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.server.infra.AbstractMasterSystemService: boolean mAllowInstantService>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final boolean isDefaultServiceEnabled(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        com.android.server.infra.ServiceNameResolver $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void enforceCallingPermissionForManagement()>();

        r1 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.ServiceNameResolver mServiceNameResolver>;

        z0 = interfaceinvoke $r3.<com.android.server.infra.ServiceNameResolver: boolean isDefaultServiceEnabled(int)>(i0);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected boolean isDisabledLocked(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        android.util.SparseBooleanArray r1;
        boolean z0;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseBooleanArray mDisabledByUserRestriction>;

        if r1 != null goto label1;

        z0 = 0;

        goto label2;

     label1:
        z0 = virtualinvoke r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

     label2:
        return z0;
    }

    public void lambda$new$0$AbstractMasterSystemService(int, java.lang.String, boolean)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void onServiceNameChanged(int,java.lang.String,boolean)>(i0, r1, z0);

        return;
    }

    public void lambda$new$1$AbstractMasterSystemService(java.lang.String, int, android.os.Bundle, android.os.Bundle)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        boolean z0, $z1, $z2;
        android.util.SparseBooleanArray $r1, $r7;
        java.lang.String $r6, $r11, r13, r17, r19;
        java.lang.Throwable $r12;
        android.os.Bundle r14, r15;
        java.lang.Object r16;
        java.lang.StringBuilder r18, r20;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        r13 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r14 := @parameter2: android.os.Bundle;

        r15 := @parameter3: android.os.Bundle;

        z0 = virtualinvoke r14.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(r13, 0);

        r16 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.Object mLock>;

        entermonitor r16;

     label1:
        $r1 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseBooleanArray mDisabledByUserRestriction>;

        $z1 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z1 != z0 goto label3;

        $z2 = r0.<com.android.server.infra.AbstractMasterSystemService: boolean debug>;

        if $z2 == 0 goto label3;

        r17 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag>;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restriction did not change for user ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r17, $r11);

        exitmonitor r16;

     label2:
        return;

     label3:
        r19 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag>;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating for user ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": disabled=");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r6 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r19, $r6);

        $r7 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseBooleanArray mDisabledByUserRestriction>;

        virtualinvoke $r7.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService updateCachedServiceLocked(int,boolean)>(i0, z0);

     label4:
        exitmonitor r16;

     label5:
        return;

     label6:
        $r12 := @caughtexception;

     label7:
        exitmonitor r16;

     label8:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    protected abstract com.android.server.infra.AbstractPerUserSystemService newServiceLocked(int, boolean);

    public void onBootPhase(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        com.android.server.infra.AbstractMasterSystemService$SettingsObserver $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        if i0 != 600 goto label1;

        $r1 = new com.android.server.infra.AbstractMasterSystemService$SettingsObserver;

        $r2 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        specialinvoke $r1.<com.android.server.infra.AbstractMasterSystemService$SettingsObserver: void <init>(com.android.server.infra.AbstractMasterSystemService,android.os.Handler)>(r0, $r2);

     label1:
        return;
    }

    public void onCleanupUser(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService removeCachedServiceLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void onServiceEnabledLocked(com.android.server.infra.AbstractPerUserSystemService, int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        com.android.server.infra.AbstractPerUserSystemService r1;
        int i0;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        r1 := @parameter0: com.android.server.infra.AbstractPerUserSystemService;

        i0 := @parameter1: int;

        return;
    }

    protected void onServiceNameChanged(int, java.lang.String, boolean)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        boolean z0;
        java.lang.Throwable $r2;
        java.lang.String r3;
        java.lang.Object r4;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r4 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.Object mLock>;

        entermonitor r4;

     label1:
        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void updateCachedServiceLocked(int)>(i0);

        exitmonitor r4;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r4;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void onServicePackageDataClearedLocked(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        java.lang.String r1, $r7;
        boolean $z0;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.server.infra.AbstractMasterSystemService: boolean verbose>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onServicePackageDataCleared(");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r7);

     label1:
        return;
    }

    protected void onServicePackageRestartedLocked(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        java.lang.String r1, $r7;
        boolean $z0;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.server.infra.AbstractMasterSystemService: boolean verbose>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onServicePackageRestarted(");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r7);

     label1:
        return;
    }

    protected void onServicePackageUpdatedLocked(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        java.lang.String r1, $r7;
        boolean $z0;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.server.infra.AbstractMasterSystemService: boolean verbose>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onServicePackageUpdated(");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r7);

     label1:
        return;
    }

    protected void onServicePackageUpdatingLocked(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        java.lang.String r1, $r7;
        boolean $z0;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.server.infra.AbstractMasterSystemService: boolean verbose>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onServicePackageUpdatingLocked(");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r7);

     label1:
        return;
    }

    protected void onServiceRemoved(com.android.server.infra.AbstractPerUserSystemService, int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        com.android.server.infra.AbstractPerUserSystemService r1;
        int i0;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        r1 := @parameter0: com.android.server.infra.AbstractPerUserSystemService;

        i0 := @parameter1: int;

        return;
    }

    protected void onSettingsChanged(int, java.lang.String)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public void onUnlockUser(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void updateCachedServiceLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int $i0, $i1, i2, i3;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        com.android.server.infra.AbstractPerUserSystemService $r3;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i2 := @parameter0: int;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i3 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i0, $i1, i2, 0, 0, null, null);

        $r1 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mServicesCache>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        $r3 = (com.android.server.infra.AbstractPerUserSystemService) $r2;

        return $r3;
    }

    protected void registerForExtraSettingsChanges(android.content.ContentResolver, android.database.ContentObserver)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        android.content.ContentResolver r1;
        android.database.ContentObserver r2;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        r1 := @parameter0: android.content.ContentResolver;

        r2 := @parameter1: android.database.ContentObserver;

        return;
    }

    protected final com.android.server.infra.AbstractPerUserSystemService removeCachedServiceLocked(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService r1;
        android.util.SparseArray $r2;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        if r1 == null goto label1;

        $r2 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mServicesCache>;

        virtualinvoke $r2.<android.util.SparseArray: void delete(int)>(i0);

        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void onServiceRemoved(com.android.server.infra.AbstractPerUserSystemService,int)>(r1, i0);

     label1:
        return r1;
    }

    public final void resetTemporaryService(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r6;
        java.lang.Throwable $r5;
        java.lang.Object r8;
        com.android.server.infra.AbstractPerUserSystemService r9;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        r6 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resetTemporaryService(): ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r6, $r4);

        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void enforceCallingPermissionForManagement()>();

        r8 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.Object mLock>;

        entermonitor r8;

     label1:
        r9 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService getServiceForUserLocked(int)>(i0);

     label2:
        if r9 == null goto label4;

     label3:
        virtualinvoke r9.<com.android.server.infra.AbstractPerUserSystemService: void resetTemporaryServiceLocked()>();

     label4:
        exitmonitor r8;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r8;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public final void setAllowInstantService(boolean)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        boolean z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r6;
        java.lang.Throwable $r5;
        java.lang.Object r8;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        z0 := @parameter0: boolean;

        r6 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setAllowInstantService(): ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r6, $r4);

        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void enforceCallingPermissionForManagement()>();

        r8 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.Object mLock>;

        entermonitor r8;

     label1:
        r0.<com.android.server.infra.AbstractMasterSystemService: boolean mAllowInstantService> = z0;

        exitmonitor r8;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r8;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final boolean setDefaultServiceEnabled(int, boolean)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r7, $r13, r15, r18;
        com.android.server.infra.ServiceNameResolver $r8;
        java.lang.Throwable $r14;
        java.lang.Object r17;
        com.android.server.infra.AbstractPerUserSystemService r19;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r15 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDefaultServiceEnabled() for userId ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r15, $r7);

        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void enforceCallingPermissionForManagement()>();

        r17 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.Object mLock>;

        entermonitor r17;

     label01:
        $r8 = r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.ServiceNameResolver mServiceNameResolver>;

        $z1 = interfaceinvoke $r8.<com.android.server.infra.ServiceNameResolver: boolean setDefaultServiceEnabled(int,boolean)>(i0, z0);

        if $z1 != 0 goto label04;

        $z2 = r0.<com.android.server.infra.AbstractMasterSystemService: boolean verbose>;

        if $z2 == 0 goto label02;

        r18 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag>;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDefaultServiceEnabled(");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): already ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r18, $r13);

     label02:
        exitmonitor r17;

     label03:
        return 0;

     label04:
        r19 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

     label05:
        if r19 == null goto label07;

     label06:
        virtualinvoke r19.<com.android.server.infra.AbstractPerUserSystemService: void removeSelfFromCacheLocked()>();

     label07:
        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void updateCachedServiceLocked(int)>(i0);

        exitmonitor r17;

     label08:
        return 1;

     label09:
        $r14 := @caughtexception;

     label10:
        exitmonitor r17;

     label11:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public final void setTemporaryService(int, java.lang.String, int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0, i1, i2;
        java.lang.StringBuilder $r1, $r11;
        java.lang.String $r9, $r18, r21, r22;
        java.lang.IllegalArgumentException $r17;
        com.android.server.infra.ServiceNameResolver $r19;
        java.lang.Throwable $r20;
        java.lang.Object r24;
        com.android.server.infra.AbstractPerUserSystemService r25;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        r21 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r22 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.String mTag>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setTemporaryService(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r22, $r9);

        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void enforceCallingPermissionForManagement()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r21);

        i2 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: int getMaximumTemporaryServiceDurationMs()>();

        if i1 > i2 goto label9;

        r24 = r0.<com.android.server.infra.AbstractMasterSystemService: java.lang.Object mLock>;

        entermonitor r24;

     label1:
        r25 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

     label2:
        if r25 == null goto label4;

     label3:
        virtualinvoke r25.<com.android.server.infra.AbstractPerUserSystemService: void removeSelfFromCacheLocked()>();

     label4:
        $r19 = r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.ServiceNameResolver mServiceNameResolver>;

        interfaceinvoke $r19.<com.android.server.infra.ServiceNameResolver: void setTemporaryService(int,java.lang.String,int)>(i0, r21, i1);

        exitmonitor r24;

     label5:
        return;

     label6:
        $r20 := @caughtexception;

     label7:
        exitmonitor r24;

     label8:
        throw $r20;

     label9:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Max duration is ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (called with ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    protected com.android.server.infra.AbstractPerUserSystemService updateCachedServiceLocked(int, boolean)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        boolean z0, $z2;
        com.android.server.infra.AbstractPerUserSystemService r1;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService getServiceForUserLocked(int)>(i0);

        if r1 == null goto label2;

        virtualinvoke r1.<com.android.server.infra.AbstractPerUserSystemService: boolean updateLocked(boolean)>(z0);

        $z2 = virtualinvoke r1.<com.android.server.infra.AbstractPerUserSystemService: boolean isEnabledLocked()>();

        if $z2 != 0 goto label1;

        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService removeCachedServiceLocked(int)>(i0);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void onServiceEnabledLocked(com.android.server.infra.AbstractPerUserSystemService,int)>(r1, i0);

     label2:
        return r1;
    }

    protected void updateCachedServiceLocked(int)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: boolean isDisabledLocked(int)>(i0);

        virtualinvoke r0.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService updateCachedServiceLocked(int,boolean)>(i0, $z0);

        return;
    }

    protected void visitServicesLocked(com.android.server.infra.AbstractMasterSystemService$Visitor)
    {
        com.android.server.infra.AbstractMasterSystemService r0;
        com.android.server.infra.AbstractMasterSystemService$Visitor r1;
        int i0, i1;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;
        com.android.server.infra.AbstractPerUserSystemService $r5;

        r0 := @this: com.android.server.infra.AbstractMasterSystemService;

        r1 := @parameter0: com.android.server.infra.AbstractMasterSystemService$Visitor;

        $r2 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mServicesCache>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<com.android.server.infra.AbstractMasterSystemService: android.util.SparseArray mServicesCache>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.server.infra.AbstractPerUserSystemService) $r4;

        interfaceinvoke r1.<com.android.server.infra.AbstractMasterSystemService$Visitor: void visit(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.infra.AbstractMasterSystemService: int PACKAGE_UPDATE_POLICY_REFRESH_LAZY> = 2;

        <com.android.server.infra.AbstractMasterSystemService: int PACKAGE_UPDATE_POLICY_REFRESH_EAGER> = 4;

        <com.android.server.infra.AbstractMasterSystemService: int PACKAGE_UPDATE_POLICY_NO_REFRESH> = 1;

        <com.android.server.infra.AbstractMasterSystemService: int PACKAGE_RESTART_POLICY_REFRESH_LAZY> = 32;

        <com.android.server.infra.AbstractMasterSystemService: int PACKAGE_RESTART_POLICY_REFRESH_EAGER> = 64;

        <com.android.server.infra.AbstractMasterSystemService: int PACKAGE_RESTART_POLICY_NO_REFRESH> = 16;

        return;
    }
}
