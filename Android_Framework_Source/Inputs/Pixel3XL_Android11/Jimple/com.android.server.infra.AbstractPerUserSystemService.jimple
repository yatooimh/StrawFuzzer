public abstract class com.android.server.infra.AbstractPerUserSystemService extends java.lang.Object
{
    private boolean mDisabled;
    protected final java.lang.Object mLock;
    protected final com.android.server.infra.AbstractMasterSystemService mMaster;
    private android.content.pm.ServiceInfo mServiceInfo;
    private boolean mSetupComplete;
    protected final java.lang.String mTag;
    protected final int mUserId;

    protected void <init>(com.android.server.infra.AbstractMasterSystemService, java.lang.Object, int)
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        com.android.server.infra.AbstractMasterSystemService r1;
        java.lang.Object r2;
        int i0;
        java.lang.Class $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        r1 := @parameter0: com.android.server.infra.AbstractMasterSystemService;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        r0.<com.android.server.infra.AbstractPerUserSystemService: java.lang.String mTag> = $r4;

        r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster> = r1;

        r0.<com.android.server.infra.AbstractPerUserSystemService: java.lang.Object mLock> = r2;

        r0.<com.android.server.infra.AbstractPerUserSystemService: int mUserId> = i0;

        specialinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: void updateIsSetupComplete(int)>(i0);

        return;
    }

    private void updateIsSetupComplete(int)
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        int i0;
        java.lang.String $r1, $r4;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean $z0;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        i0 := @parameter0: int;

        $r1 = "1";

        $r2 = virtualinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r3, "user_setup_complete", i0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        r0.<com.android.server.infra.AbstractPerUserSystemService: boolean mSetupComplete> = $z0;

        return;
    }

    protected void dumpLocked(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        java.lang.String r1;
        java.io.PrintWriter r2;
        int $i0, $i1, $i2, $i3;
        android.content.pm.ServiceInfo $r3, $r6, $r7;
        com.android.server.infra.AbstractMasterSystemService $r4, $r9;
        com.android.server.infra.ServiceNameResolver $r5, $r10;
        boolean $z0, $z1;
        android.content.pm.ApplicationInfo $r8;
        java.lang.CharSequence $r11;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("User: ");

        $i0 = r0.<com.android.server.infra.AbstractPerUserSystemService: int mUserId>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i0);

        $r3 = r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo>;

        if $r3 == null goto label1;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Service Label: ");

        $r11 = virtualinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: java.lang.CharSequence getServiceLabelLocked()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r11);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Target SDK: ");

        $i3 = virtualinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: int getTargedSdkLocked()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i3);

     label1:
        $r4 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r5 = $r4.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.ServiceNameResolver mServiceNameResolver>;

        if $r5 == null goto label2;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Name resolver: ");

        $r9 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r10 = $r9.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.ServiceNameResolver mServiceNameResolver>;

        $i2 = r0.<com.android.server.infra.AbstractPerUserSystemService: int mUserId>;

        interfaceinvoke $r10.<com.android.server.infra.ServiceNameResolver: void dumpShort(java.io.PrintWriter,int)>(r2, $i2);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label2:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Disabled by UserManager: ");

        $z0 = r0.<com.android.server.infra.AbstractPerUserSystemService: boolean mDisabled>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Setup complete: ");

        $z1 = r0.<com.android.server.infra.AbstractPerUserSystemService: boolean mSetupComplete>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z1);

        $r6 = r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo>;

        if $r6 == null goto label3;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Service UID: ");

        $r7 = r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo>;

        $r8 = $r7.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i1);

     label3:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        return;
    }

    protected final java.lang.String getComponentNameLocked()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;
        int $i0;
        com.android.server.infra.ServiceNameResolver $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        $r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r2 = $r1.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.ServiceNameResolver mServiceNameResolver>;

        $i0 = r0.<com.android.server.infra.AbstractPerUserSystemService: int mUserId>;

        $r3 = interfaceinvoke $r2.<com.android.server.infra.ServiceNameResolver: java.lang.String getServiceName(int)>($i0);

        return $r3;
    }

    protected final android.content.Context getContext()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;
        android.content.Context $r2;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        $r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r2 = virtualinvoke $r1.<com.android.server.infra.AbstractMasterSystemService: android.content.Context getContext()>();

        return $r2;
    }

    public final com.android.server.infra.AbstractMasterSystemService getMaster()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        $r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        return $r1;
    }

    public final android.content.ComponentName getServiceComponentName()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        java.lang.Object r1;
        android.content.pm.ServiceInfo $r2, $r3;
        java.lang.Throwable $r4;
        android.content.ComponentName r5;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo>;

        if $r2 != null goto label3;

     label2:
        r5 = null;

        goto label4;

     label3:
        $r3 = r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo>;

        r5 = virtualinvoke $r3.<android.content.pm.ServiceInfo: android.content.ComponentName getComponentName()>();

     label4:
        exitmonitor r1;

     label5:
        return r5;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public final android.graphics.drawable.Drawable getServiceIconLocked()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.ServiceInfo r3;
        android.graphics.drawable.Drawable r4;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        r3 = r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo>;

        if r3 != null goto label1;

        r4 = null;

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r4 = virtualinvoke r3.<android.content.pm.ServiceInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>($r2);

     label2:
        return r4;
    }

    public final android.content.pm.ServiceInfo getServiceInfo()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        android.content.pm.ServiceInfo $r1;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        $r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo>;

        return $r1;
    }

    public final java.lang.CharSequence getServiceLabelLocked()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.ServiceInfo r3;
        java.lang.CharSequence r4;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        r3 = r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo>;

        if r3 != null goto label1;

        r4 = null;

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r4 = virtualinvoke r3.<android.content.pm.ServiceInfo: java.lang.CharSequence loadSafeLabel(android.content.pm.PackageManager,float,int)>($r2, 0.0F, 5);

     label2:
        return r4;
    }

    public final java.lang.String getServicePackageName()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        android.content.ComponentName r1;
        java.lang.String r2;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        r1 = virtualinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.ComponentName getServiceComponentName()>();

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

     label2:
        return r2;
    }

    protected final int getServiceUidLocked()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        android.content.pm.ServiceInfo r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;
        com.android.server.infra.AbstractMasterSystemService $r3;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo>;

        if r1 != null goto label2;

        $r3 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $z0 = $r3.<com.android.server.infra.AbstractMasterSystemService: boolean verbose>;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.infra.AbstractPerUserSystemService: java.lang.String mTag>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r4, "getServiceUidLocked(): no mServiceInfo");

     label1:
        return -1;

     label2:
        $r2 = r1.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        return $i0;
    }

    public final int getTargedSdkLocked()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        android.content.pm.ServiceInfo r1;
        android.content.pm.ApplicationInfo $r2;
        int i0;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo>;

        if r1 != null goto label1;

        i0 = 0;

        goto label2;

     label1:
        $r2 = r1.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

     label2:
        return i0;
    }

    public final int getUserId()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        int $i0;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        $i0 = r0.<com.android.server.infra.AbstractPerUserSystemService: int mUserId>;

        return $i0;
    }

    protected void handlePackageUpdateLocked(java.lang.String)
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        java.lang.String r1;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public final boolean isDebug()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;
        boolean $z0;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        $r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $z0 = $r1.<com.android.server.infra.AbstractMasterSystemService: boolean debug>;

        return $z0;
    }

    protected final boolean isDisabledByUserRestrictionsLocked()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        boolean $z0;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        $z0 = r0.<com.android.server.infra.AbstractPerUserSystemService: boolean mDisabled>;

        return $z0;
    }

    protected boolean isEnabledLocked()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        boolean $z0, $z1, z2;
        android.content.pm.ServiceInfo $r1;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        $z0 = r0.<com.android.server.infra.AbstractPerUserSystemService: boolean mSetupComplete>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo>;

        if $r1 == null goto label1;

        $z1 = r0.<com.android.server.infra.AbstractPerUserSystemService: boolean mDisabled>;

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    protected final boolean isSetupCompletedLocked()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        boolean $z0;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        $z0 = r0.<com.android.server.infra.AbstractPerUserSystemService: boolean mSetupComplete>;

        return $z0;
    }

    public final boolean isTemporaryServiceSetLocked()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;
        int $i0;
        com.android.server.infra.ServiceNameResolver $r2;
        boolean $z0;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        $r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r2 = $r1.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.ServiceNameResolver mServiceNameResolver>;

        $i0 = r0.<com.android.server.infra.AbstractPerUserSystemService: int mUserId>;

        $z0 = interfaceinvoke $r2.<com.android.server.infra.ServiceNameResolver: boolean isTemporary(int)>($i0);

        return $z0;
    }

    public final boolean isVerbose()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;
        boolean $z0;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        $r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $z0 = $r1.<com.android.server.infra.AbstractMasterSystemService: boolean verbose>;

        return $z0;
    }

    protected android.content.pm.ServiceInfo newServiceInfoLocked(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        android.content.ComponentName r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not overridden");

        throw $r2;
    }

    protected final void removeSelfFromCacheLocked()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        int $i0;
        com.android.server.infra.AbstractMasterSystemService $r1;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        $r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $i0 = r0.<com.android.server.infra.AbstractPerUserSystemService: int mUserId>;

        virtualinvoke $r1.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService removeCachedServiceLocked(int)>($i0);

        return;
    }

    protected final void resetTemporaryServiceLocked()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        com.android.server.infra.AbstractMasterSystemService $r1;
        int $i0;
        com.android.server.infra.ServiceNameResolver $r2;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        $r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r2 = $r1.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.ServiceNameResolver mServiceNameResolver>;

        $i0 = r0.<com.android.server.infra.AbstractPerUserSystemService: int mUserId>;

        interfaceinvoke $r2.<com.android.server.infra.ServiceNameResolver: void resetTemporaryService(int)>($i0);

        return;
    }

    protected boolean updateLocked(boolean)
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6;
        java.lang.String r1, $r16;
        com.android.server.infra.AbstractMasterSystemService $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        z5 := @parameter0: boolean;

        z0 = virtualinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: boolean isEnabledLocked()>();

        $r3 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $z1 = $r3.<com.android.server.infra.AbstractMasterSystemService: boolean verbose>;

        if $z1 == 0 goto label1;

        r1 = r0.<com.android.server.infra.AbstractPerUserSystemService: java.lang.String mTag>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateLocked(u=");

        $i1 = r0.<com.android.server.infra.AbstractPerUserSystemService: int mUserId>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): wasEnabled=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mSetupComplete=");

        $z3 = r0.<com.android.server.infra.AbstractPerUserSystemService: boolean mSetupComplete>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", disabled=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z5);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDisabled=");

        $z4 = r0.<com.android.server.infra.AbstractPerUserSystemService: boolean mDisabled>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r16);

     label1:
        $i0 = r0.<com.android.server.infra.AbstractPerUserSystemService: int mUserId>;

        specialinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: void updateIsSetupComplete(int)>($i0);

        r0.<com.android.server.infra.AbstractPerUserSystemService: boolean mDisabled> = z5;

        virtualinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.ComponentName updateServiceInfoLocked()>();

        $z2 = virtualinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: boolean isEnabledLocked()>();

        if z0 == $z2 goto label2;

        z6 = 1;

        goto label3;

     label2:
        z6 = 0;

     label3:
        return z6;
    }

    protected final android.content.ComponentName updateServiceInfoLocked()
    {
        com.android.server.infra.AbstractPerUserSystemService r0;
        java.lang.String r1, r2, $r6, $r10, $r12, $r15, $r18, r25, r27, r29, r32;
        com.android.server.infra.AbstractMasterSystemService $r3, $r5, $r8;
        com.android.server.infra.ServiceNameResolver $r4;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        android.content.pm.ServiceInfo $r7, $r9, r20, r22;
        android.content.pm.IPackageManager $r11;
        java.lang.Exception $r13, $r16;
        java.lang.StringBuilder $r14, $r17, r23, r28, r30;
        android.content.ComponentName r19, r21;

        r0 := @this: com.android.server.infra.AbstractPerUserSystemService;

        r19 = null;

        $r3 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r4 = $r3.<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.ServiceNameResolver mServiceNameResolver>;

        if $r4 == null goto label24;

        r1 = virtualinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: java.lang.String getComponentNameLocked()>();

        r19 = null;

        r20 = null;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label18;

        r19 = null;

     label01:
        r21 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r1);

     label02:
        r19 = r21;

     label03:
        $r11 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i2 = r0.<com.android.server.infra.AbstractPerUserSystemService: int mUserId>;

        r22 = interfaceinvoke $r11.<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r21, 0, $i2);

     label04:
        if r22 != null goto label16;

        r19 = r21;

     label05:
        r2 = r0.<com.android.server.infra.AbstractPerUserSystemService: java.lang.String mTag>;

     label06:
        r19 = r21;

     label07:
        r23 = new java.lang.StringBuilder;

     label08:
        r19 = r21;

     label09:
        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

     label10:
        r19 = r21;

     label11:
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad service name: ");

     label12:
        r19 = r21;

     label13:
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label14:
        r19 = r21;

     label15:
        $r12 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r2, $r12);

     label16:
        r19 = r21;

        r20 = r22;

        goto label18;

     label17:
        $r13 := @caughtexception;

        r25 = r0.<com.android.server.infra.AbstractPerUserSystemService: java.lang.String mTag>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error getting service info for \'");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r25, $r15);

        r20 = null;

     label18:
        if r20 == null goto label21;

     label19:
        $r7 = virtualinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo newServiceInfoLocked(android.content.ComponentName)>(r19);

        r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo> = $r7;

        $r8 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $z2 = $r8.<com.android.server.infra.AbstractMasterSystemService: boolean debug>;

        if $z2 == 0 goto label22;

        r27 = r0.<com.android.server.infra.AbstractPerUserSystemService: java.lang.String mTag>;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set component for user ");

        $i1 = r0.<com.android.server.infra.AbstractPerUserSystemService: int mUserId>;

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and info as ");

        $r9 = r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo>;

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r10 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r27, $r10);

     label20:
        goto label22;

     label21:
        r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo> = null;

        $r5 = r0.<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $z1 = $r5.<com.android.server.infra.AbstractMasterSystemService: boolean debug>;

        if $z1 == 0 goto label22;

        r29 = r0.<com.android.server.infra.AbstractPerUserSystemService: java.lang.String mTag>;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reset component for user ");

        $i0 = r0.<com.android.server.infra.AbstractPerUserSystemService: int mUserId>;

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r29, $r6);

     label22:
        goto label24;

     label23:
        $r16 := @caughtexception;

        r32 = r0.<com.android.server.infra.AbstractPerUserSystemService: java.lang.String mTag>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad ServiceInfo for \'");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r32, $r18);

        r0.<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo mServiceInfo> = null;

     label24:
        return r19;

        catch java.lang.RuntimeException from label01 to label02 with label17;
        catch android.os.RemoteException from label01 to label02 with label17;
        catch java.lang.RuntimeException from label03 to label04 with label17;
        catch android.os.RemoteException from label03 to label04 with label17;
        catch java.lang.RuntimeException from label05 to label06 with label17;
        catch android.os.RemoteException from label05 to label06 with label17;
        catch java.lang.RuntimeException from label07 to label08 with label17;
        catch android.os.RemoteException from label07 to label08 with label17;
        catch java.lang.RuntimeException from label09 to label10 with label17;
        catch android.os.RemoteException from label09 to label10 with label17;
        catch java.lang.RuntimeException from label11 to label12 with label17;
        catch android.os.RemoteException from label11 to label12 with label17;
        catch java.lang.RuntimeException from label13 to label14 with label17;
        catch android.os.RemoteException from label13 to label14 with label17;
        catch java.lang.RuntimeException from label15 to label16 with label17;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.Exception from label19 to label20 with label23;
        catch java.lang.Exception from label21 to label22 with label23;
    }
}
