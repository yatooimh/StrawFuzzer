class com.android.server.infra.FrameworkResourcesServiceNameResolver$1 extends android.os.Handler
{
    final com.android.server.infra.FrameworkResourcesServiceNameResolver this$0;
    final int val$userId;

    void <init>(com.android.server.infra.FrameworkResourcesServiceNameResolver, android.os.Looper, android.os.Handler$Callback, boolean, int)
    {
        com.android.server.infra.FrameworkResourcesServiceNameResolver$1 r0;
        com.android.server.infra.FrameworkResourcesServiceNameResolver r1;
        android.os.Looper r2;
        android.os.Handler$Callback r3;
        boolean z0;
        int i0;

        r0 := @this: com.android.server.infra.FrameworkResourcesServiceNameResolver$1;

        r1 := @parameter0: com.android.server.infra.FrameworkResourcesServiceNameResolver;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: android.os.Handler$Callback;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        r0.<com.android.server.infra.FrameworkResourcesServiceNameResolver$1: com.android.server.infra.FrameworkResourcesServiceNameResolver this$0> = r1;

        r0.<com.android.server.infra.FrameworkResourcesServiceNameResolver$1: int val$userId> = i0;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback,boolean)>(r2, r3, z0);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.infra.FrameworkResourcesServiceNameResolver$1 r0;
        java.lang.String r1, $r5;
        int $i0, $i2;
        java.lang.StringBuilder $r2;
        com.android.server.infra.FrameworkResourcesServiceNameResolver $r6, $r7;
        java.lang.Throwable $r8;
        android.os.Message r9;
        java.lang.Object r10;

        r0 := @this: com.android.server.infra.FrameworkResourcesServiceNameResolver$1;

        r9 := @parameter0: android.os.Message;

        $i0 = r9.<android.os.Message: int what>;

        if $i0 != 0 goto label6;

        $r6 = r0.<com.android.server.infra.FrameworkResourcesServiceNameResolver$1: com.android.server.infra.FrameworkResourcesServiceNameResolver this$0>;

        r10 = staticinvoke <com.android.server.infra.FrameworkResourcesServiceNameResolver: java.lang.Object access$000(com.android.server.infra.FrameworkResourcesServiceNameResolver)>($r6);

        entermonitor r10;

     label1:
        $r7 = r0.<com.android.server.infra.FrameworkResourcesServiceNameResolver$1: com.android.server.infra.FrameworkResourcesServiceNameResolver this$0>;

        $i2 = r0.<com.android.server.infra.FrameworkResourcesServiceNameResolver$1: int val$userId>;

        virtualinvoke $r7.<com.android.server.infra.FrameworkResourcesServiceNameResolver: void resetTemporaryService(int)>($i2);

        exitmonitor r10;

     label2:
        goto label7;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r10;

     label5:
        throw $r8;

     label6:
        r1 = staticinvoke <com.android.server.infra.FrameworkResourcesServiceNameResolver: java.lang.String access$100()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid handler msg: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r1, $r5);

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
