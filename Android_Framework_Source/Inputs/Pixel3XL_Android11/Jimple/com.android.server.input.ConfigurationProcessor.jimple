class com.android.server.input.ConfigurationProcessor extends java.lang.Object
{
    private static final java.lang.String TAG;

    void <init>()
    {
        com.android.server.input.ConfigurationProcessor r0;

        r0 := @this: com.android.server.input.ConfigurationProcessor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.util.List processExcludedDeviceNames(java.io.InputStream) throws java.lang.Exception
    {
        org.xmlpull.v1.XmlPullParser r0;
        boolean z0;
        java.lang.String r1, $r4, $r5;
        java.util.ArrayList $r2;
        java.io.InputStreamReader $r3;
        java.lang.Throwable $r6, $r7;
        java.io.InputStream r8;

        r8 := @parameter0: java.io.InputStream;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r8);

     label01:
        r0 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>($r3);

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "devices");

     label02:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r0);

        $r4 = "device";

        $r5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

     label03:
        if z0 != 0 goto label04;

        virtualinvoke $r3.<java.io.InputStreamReader: void close()>();

        return $r2;

     label04:
        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label05:
        if r1 == null goto label07;

     label06:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label07:
        goto label02;

     label08:
        $r6 := @caughtexception;

     label09:
        virtualinvoke $r3.<java.io.InputStreamReader: void close()>();

     label10:
        goto label12;

     label11:
        $r7 := @caughtexception;

        virtualinvoke $r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r7);

     label12:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    static java.util.Map processInputPortAssociations(java.io.InputStream) throws java.lang.Exception
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r12, $r13, r14;
        java.util.HashMap $r2;
        java.io.InputStreamReader $r3;
        int $i1;
        java.lang.Integer $r4;
        java.lang.Throwable $r6, $r7, $r8;
        java.io.InputStream r9;
        boolean z0, z1, z2;

        r9 := @parameter0: java.io.InputStream;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r9);

     label01:
        r0 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>($r3);

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "ports");

     label02:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r0);

        $r12 = "port";

        $r13 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

     label03:
        if z0 != 0 goto label04;

        virtualinvoke $r3.<java.io.InputStreamReader: void close()>();

        return $r2;

     label04:
        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "input");

        r14 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "display");

        z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

     label05:
        if z1 != 0 goto label13;

     label06:
        z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r14);

     label07:
        if z2 == 0 goto label08;

        goto label13;

     label08:
        $i1 = staticinvoke <java.lang.Integer: int parseUnsignedInt(java.lang.String)>(r14);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label09:
        goto label12;

     label10:
        $r7 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ConfigurationProcessor", "Display port should be an integer");

     label12:
        goto label02;

     label13:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ConfigurationProcessor", "Ignoring incomplete entry");

     label14:
        goto label02;

     label15:
        $r8 := @caughtexception;

     label16:
        virtualinvoke $r3.<java.io.InputStreamReader: void close()>();

     label17:
        goto label19;

     label18:
        $r6 := @caughtexception;

        virtualinvoke $r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r6);

     label19:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.NumberFormatException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public static void <clinit>()
    {
        <com.android.server.input.ConfigurationProcessor: java.lang.String TAG> = "ConfigurationProcessor";

        return;
    }
}
