final class com.android.server.input.InputManagerService$InputFilterHost extends android.view.IInputFilterHost$Stub
{
    private boolean mDisconnected;
    final com.android.server.input.InputManagerService this$0;

    private void <init>(com.android.server.input.InputManagerService)
    {
        com.android.server.input.InputManagerService$InputFilterHost r0;
        com.android.server.input.InputManagerService r1;

        r0 := @this: com.android.server.input.InputManagerService$InputFilterHost;

        r1 := @parameter0: com.android.server.input.InputManagerService;

        r0.<com.android.server.input.InputManagerService$InputFilterHost: com.android.server.input.InputManagerService this$0> = r1;

        specialinvoke r0.<android.view.IInputFilterHost$Stub: void <init>()>();

        return;
    }

    void <init>(com.android.server.input.InputManagerService, com.android.server.input.InputManagerService$1)
    {
        com.android.server.input.InputManagerService$InputFilterHost r0;
        com.android.server.input.InputManagerService r1;
        com.android.server.input.InputManagerService$1 r2;

        r0 := @this: com.android.server.input.InputManagerService$InputFilterHost;

        r1 := @parameter0: com.android.server.input.InputManagerService;

        r2 := @parameter1: com.android.server.input.InputManagerService$1;

        specialinvoke r0.<com.android.server.input.InputManagerService$InputFilterHost: void <init>(com.android.server.input.InputManagerService)>(r1);

        return;
    }

    public void disconnectLocked()
    {
        com.android.server.input.InputManagerService$InputFilterHost r0;

        r0 := @this: com.android.server.input.InputManagerService$InputFilterHost;

        r0.<com.android.server.input.InputManagerService$InputFilterHost: boolean mDisconnected> = 1;

        return;
    }

    public void sendInputEvent(android.view.InputEvent, int)
    {
        com.android.server.input.InputManagerService$InputFilterHost r0;
        int i0, $i2;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;
        com.android.server.input.InputManagerService $r3, $r4;
        boolean $z0;
        long $l1;
        java.lang.Throwable $r5;
        android.view.InputEvent r6;

        r0 := @this: com.android.server.input.InputManagerService$InputFilterHost;

        r6 := @parameter0: android.view.InputEvent;

        i0 := @parameter1: int;

        if r6 == null goto label7;

        $r3 = r0.<com.android.server.input.InputManagerService$InputFilterHost: com.android.server.input.InputManagerService this$0>;

        r1 = $r3.<com.android.server.input.InputManagerService: java.lang.Object mInputFilterLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.server.input.InputManagerService$InputFilterHost: boolean mDisconnected>;

        if $z0 != 0 goto label2;

        $r4 = r0.<com.android.server.input.InputManagerService$InputFilterHost: com.android.server.input.InputManagerService this$0>;

        $l1 = staticinvoke <com.android.server.input.InputManagerService: long access$1300(com.android.server.input.InputManagerService)>($r4);

        $i2 = i0 | 67108864;

        staticinvoke <com.android.server.input.InputManagerService: int access$1400(long,android.view.InputEvent,int,int,int,int,int)>($l1, r6, 0, 0, 0, 0, $i2);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
