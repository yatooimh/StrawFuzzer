final class com.android.server.inputmethod.AdditionalSubtypeUtils extends java.lang.Object
{
    private static final java.lang.String ADDITIONAL_SUBTYPES_FILE_NAME;
    private static final java.lang.String ATTR_ICON;
    private static final java.lang.String ATTR_ID;
    private static final java.lang.String ATTR_IME_SUBTYPE_EXTRA_VALUE;
    private static final java.lang.String ATTR_IME_SUBTYPE_ID;
    private static final java.lang.String ATTR_IME_SUBTYPE_LANGUAGE_TAG;
    private static final java.lang.String ATTR_IME_SUBTYPE_LOCALE;
    private static final java.lang.String ATTR_IME_SUBTYPE_MODE;
    private static final java.lang.String ATTR_IS_ASCII_CAPABLE;
    private static final java.lang.String ATTR_IS_AUXILIARY;
    private static final java.lang.String ATTR_LABEL;
    private static final java.lang.String INPUT_METHOD_PATH;
    private static final java.lang.String NODE_IMI;
    private static final java.lang.String NODE_SUBTYPE;
    private static final java.lang.String NODE_SUBTYPES;
    private static final java.lang.String SYSTEM_PATH;
    private static final java.lang.String TAG;

    private void <init>()
    {
        com.android.server.inputmethod.AdditionalSubtypeUtils r0;

        r0 := @this: com.android.server.inputmethod.AdditionalSubtypeUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.util.AtomicFile getAdditionalSubtypeFile(java.io.File)
    {
        java.io.File r0, $r2;
        android.util.AtomicFile $r1;

        r0 := @parameter0: java.io.File;

        $r1 = new android.util.AtomicFile;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, "subtypes.xml");

        specialinvoke $r1.<android.util.AtomicFile: void <init>(java.io.File,java.lang.String)>($r2, "input-subtypes");

        return $r1;
    }

    private static java.io.File getInputMethodDir(int)
    {
        int i0;
        java.io.File $r0, $r1, $r2, r3;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "system");

        r3 = $r1;

        goto label2;

     label1:
        r3 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

     label2:
        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "inputmethod");

        return $r0;
    }

    static void load(android.util.ArrayMap, int)
    {
        java.lang.String r0, r3, r4, r5, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r21, r44, r47, r48, r49, r51;
        java.io.FileInputStream r1;
        org.xmlpull.v1.XmlPullParser r2;
        boolean z0, $z1, $z2, $z3, $z4, $z6, z7, z8;
        java.io.File $r7;
        java.nio.charset.Charset $r8;
        android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder $r22, $r23, $r24, $r25, $r26, $r27, $r28, r50, r58;
        android.view.inputmethod.InputMethodSubtype $r29;
        int $i2, i5, i6, i7, i8, i9, i10, i11;
        java.lang.Throwable $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, r46, r56, r61;
        android.util.ArrayMap r41;
        android.util.AtomicFile r42;
        java.util.ArrayList r45, r57;
        java.lang.StringBuilder r59;
        org.xmlpull.v1.XmlPullParserException r60;

        r41 := @parameter0: android.util.ArrayMap;

        i5 := @parameter1: int;

        r0 = "1";

        virtualinvoke r41.<android.util.ArrayMap: void clear()>();

        $r7 = staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: java.io.File getInputMethodDir(int)>(i5);

        r42 = staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: android.util.AtomicFile getAdditionalSubtypeFile(java.io.File)>($r7);

        $z1 = virtualinvoke r42.<android.util.AtomicFile: boolean exists()>();

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = virtualinvoke r42.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label03:
        $r8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r9 = virtualinvoke $r8.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, $r9);

     label04:
        interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label05:
        i6 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

     label06:
        if i6 == 2 goto label07;

        if i6 != 1 goto label05;

     label07:
        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label08:
        $r10 = "subtypes";

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label42;

     label09:
        i7 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label10:
        r44 = null;

        r45 = null;

     label11:
        i8 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

     label12:
        if i8 != 3 goto label17;

     label13:
        i9 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label14:
        if i9 <= i7 goto label15;

        goto label17;

     label15:
        goto label39;

     label16:
        $r36 := @caughtexception;

        r46 = $r36;

        goto label45;

     label17:
        if i8 == 1 goto label39;

        if i8 == 2 goto label18;

        goto label36;

     label18:
        r47 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label19:
        $r11 = "imi";

        z7 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r47);

     label20:
        if z7 == 0 goto label27;

     label21:
        r44 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r44);

        if $z6 == 0 goto label23;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AdditionalSubtypeUtils", "Invalid imi id found in subtypes.xml");

     label22:
        goto label11;

     label23:
        r57 = new java.util.ArrayList;

        specialinvoke r57.<java.util.ArrayList: void <init>()>();

        r45 = r57;

     label24:
        virtualinvoke r41.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r44, r57);

     label25:
        goto label37;

     label26:
        $r34 := @caughtexception;

        r46 = $r34;

        goto label45;

     label27:
        $r12 = "subtype";

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z3 == 0 goto label37;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r44);

        if $z4 != 0 goto label35;

     label28:
        if r45 != null goto label29;

        goto label35;

     label29:
        $r16 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "icon");

        i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);

        $r17 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "label");

        i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17);

        r48 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "imeSubtypeLocale");

     label30:
        r4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "languageTag");

        r49 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "imeSubtypeMode");

        r5 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "imeSubtypeExtraValue");

        $r18 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "isAuxiliary");

        $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r18);

        z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        $r20 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "isAsciiCapable");

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);

        z8 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        r58 = new android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder;

        specialinvoke r58.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: void <init>()>();

        $r22 = virtualinvoke r58.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setSubtypeNameResId(int)>(i11);

        $r23 = virtualinvoke $r22.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setSubtypeIconResId(int)>(i10);

        $r24 = virtualinvoke $r23.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setSubtypeLocale(java.lang.String)>(r48);

        $r25 = virtualinvoke $r24.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setLanguageTag(java.lang.String)>(r4);

        $r26 = virtualinvoke $r25.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setSubtypeMode(java.lang.String)>(r49);

        $r27 = virtualinvoke $r26.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setSubtypeExtraValue(java.lang.String)>(r5);

        $r28 = virtualinvoke $r27.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setIsAuxiliary(boolean)>(z0);

        r50 = virtualinvoke $r28.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setIsAsciiCapable(boolean)>(z8);

        r51 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "subtypeId");

     label31:
        if r51 == null goto label33;

     label32:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r51);

        virtualinvoke r50.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setSubtypeId(int)>($i2);

     label33:
        $r29 = virtualinvoke r50.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype build()>();

        virtualinvoke r45.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);

     label34:
        goto label37;

     label35:
        r59 = new java.lang.StringBuilder;

        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME uninstalled or not valid.: ");

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        $r15 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AdditionalSubtypeUtils", $r15);

     label36:
        goto label11;

     label37:
        goto label11;

     label38:
        $r38 := @caughtexception;

        r46 = $r38;

        goto label45;

     label39:
        if r1 == null goto label41;

     label40:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label41:
        goto label54;

     label42:
        r60 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r60.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Xml doesn\'t start with subtypes");

        r61 = (java.lang.Throwable) r60;

        throw r61;

     label43:
        $r35 := @caughtexception;

        r46 = $r35;

        goto label45;

     label44:
        $r40 := @caughtexception;

        r46 = $r40;

     label45:
        if r1 == null goto label50;

     label46:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label47:
        goto label50;

     label48:
        $r33 := @caughtexception;

     label49:
        virtualinvoke r46.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r33);

     label50:
        throw r46;

     label51:
        $r39 := @caughtexception;

        r56 = $r39;

        goto label53;

     label52:
        $r37 := @caughtexception;

        r56 = $r37;

     label53:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AdditionalSubtypeUtils", "Error reading subtypes", r56);

     label54:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label52;
        catch java.io.IOException from label01 to label02 with label52;
        catch java.lang.NumberFormatException from label01 to label02 with label52;
        catch java.lang.Throwable from label02 to label03 with label44;
        catch java.lang.Throwable from label03 to label04 with label44;
        catch java.lang.Throwable from label04 to label05 with label44;
        catch java.lang.Throwable from label05 to label06 with label44;
        catch java.lang.Throwable from label07 to label08 with label44;
        catch java.lang.Throwable from label08 to label09 with label44;
        catch java.lang.Throwable from label09 to label10 with label44;
        catch java.lang.Throwable from label11 to label12 with label44;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label18 to label19 with label44;
        catch java.lang.Throwable from label19 to label20 with label44;
        catch java.lang.Throwable from label21 to label22 with label16;
        catch java.lang.Throwable from label23 to label24 with label16;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label27 to label28 with label38;
        catch java.lang.Throwable from label29 to label30 with label38;
        catch java.lang.Throwable from label30 to label31 with label43;
        catch java.lang.Throwable from label32 to label33 with label43;
        catch java.lang.Throwable from label33 to label34 with label43;
        catch java.lang.Throwable from label35 to label36 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label40 to label41 with label51;
        catch java.io.IOException from label40 to label41 with label51;
        catch java.lang.NumberFormatException from label40 to label41 with label51;
        catch java.lang.Throwable from label42 to label43 with label43;
        catch java.lang.Throwable from label46 to label47 with label48;
        catch org.xmlpull.v1.XmlPullParserException from label49 to label50 with label51;
        catch java.io.IOException from label49 to label50 with label51;
        catch java.lang.NumberFormatException from label49 to label50 with label51;
        catch org.xmlpull.v1.XmlPullParserException from label50 to label51 with label51;
        catch java.io.IOException from label50 to label51 with label51;
        catch java.lang.NumberFormatException from label50 to label51 with label51;
    }

    static void save(android.util.ArrayMap, android.util.ArrayMap, int)
    {
        android.util.ArrayMap r0, r27;
        java.io.File r1;
        android.util.AtomicFile r2, r28;
        com.android.internal.util.FastXmlSerializer r3;
        java.util.Iterator r4;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        android.view.inputmethod.InputMethodSubtype r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11;
        java.lang.Object $r6, $r7, $r8;
        java.lang.String $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r23, $r34, r37;
        java.lang.StringBuilder $r19, $r22, r38;
        java.io.File[] $r21;
        java.lang.Throwable $r24, $r25, $r26, r39;
        java.io.FileOutputStream r31, r32;
        java.nio.charset.Charset $r33;
        java.lang.Boolean $r35;
        java.util.Set $r36;
        java.util.List r40;
        byte b8, b9;

        r27 := @parameter0: android.util.ArrayMap;

        r0 := @parameter1: android.util.ArrayMap;

        i5 := @parameter2: int;

        r1 = staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: java.io.File getInputMethodDir(int)>(i5);

        $z0 = virtualinvoke r27.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label04;

        $z7 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z7 != 0 goto label01;

        return;

     label01:
        r28 = staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: android.util.AtomicFile getAdditionalSubtypeFile(java.io.File)>(r1);

        $z8 = virtualinvoke r28.<android.util.AtomicFile: boolean exists()>();

        if $z8 == 0 goto label02;

        virtualinvoke r28.<android.util.AtomicFile: void delete()>();

     label02:
        $r21 = staticinvoke <android.os.FileUtils: java.io.File[] listFilesOrEmpty(java.io.File)>(r1);

        $i4 = lengthof $r21;

        if $i4 != 0 goto label03;

        $z9 = virtualinvoke r1.<java.io.File: boolean delete()>();

        if $z9 != 0 goto label03;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete the empty parent directory ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AdditionalSubtypeUtils", $r23);

     label03:
        return;

     label04:
        $z1 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label05;

        $z6 = virtualinvoke r1.<java.io.File: boolean mkdirs()>();

        if $z6 != 0 goto label05;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create a parent directory ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AdditionalSubtypeUtils", $r20);

        return;

     label05:
        if r0 == null goto label06;

        $i3 = virtualinvoke r0.<android.util.ArrayMap: int size()>();

        if $i3 <= 0 goto label06;

        z10 = 1;

        goto label07;

     label06:
        z10 = 0;

     label07:
        r2 = staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: android.util.AtomicFile getAdditionalSubtypeFile(java.io.File)>(r1);

        r31 = null;

     label08:
        r32 = virtualinvoke r2.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label09:
        r31 = r32;

     label10:
        r3 = new com.android.internal.util.FastXmlSerializer;

     label11:
        r31 = r32;

     label12:
        specialinvoke r3.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label13:
        r31 = r32;

     label14:
        $r33 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r34 = virtualinvoke $r33.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r32, $r34);

     label15:
        r31 = r32;

     label16:
        $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r35);

     label17:
        r31 = r32;

     label18:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

     label19:
        r31 = r32;

     label20:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "subtypes");

     label21:
        r31 = r32;

     label22:
        $r36 = virtualinvoke r27.<android.util.ArrayMap: java.util.Set keySet()>();

        r4 = interfaceinvoke $r36.<java.util.Set: java.util.Iterator iterator()>();

     label23:
        r31 = r32;

     label24:
        $z11 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label60;

     label25:
        r31 = r32;

     label26:
        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.lang.String) $r6;

     label27:
        if z10 == 0 goto label31;

     label28:
        $z5 = virtualinvoke r0.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r37);

        if $z5 != 0 goto label31;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME uninstalled or not valid.: ");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r18 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AdditionalSubtypeUtils", $r18);

     label29:
        goto label23;

     label30:
        $r25 := @caughtexception;

        r39 = $r25;

        r31 = r32;

        goto label64;

     label31:
        r31 = r32;

     label32:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "imi");

     label33:
        r31 = r32;

     label34:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", r37);

     label35:
        r31 = r32;

     label36:
        $r7 = virtualinvoke r27.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r37);

        r40 = (java.util.List) $r7;

     label37:
        r31 = r32;

     label38:
        i0 = interfaceinvoke r40.<java.util.List: int size()>();

     label39:
        i6 = 0;

     label40:
        if i6 >= i0 goto label58;

        r31 = r32;

     label41:
        $r8 = interfaceinvoke r40.<java.util.List: java.lang.Object get(int)>(i6);

        r5 = (android.view.inputmethod.InputMethodSubtype) $r8;

     label42:
        r31 = r32;

     label43:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "subtype");

     label44:
        r31 = r32;

     label45:
        $z2 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: boolean hasSubtypeId()>();

        if $z2 == 0 goto label50;

     label46:
        r31 = r32;

     label47:
        i7 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: int getSubtypeId()>();

     label48:
        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i7);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "subtypeId", $r17);

     label49:
        goto label50;

     label50:
        $i1 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: int getIconResId()>();

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "icon", $r9);

        $i2 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: int getNameResId()>();

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "label", $r10);

        $r11 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "imeSubtypeLocale", $r11);

        $r12 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLanguageTag()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "languageTag", $r12);

        $r13 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "imeSubtypeMode", $r13);

        $r14 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "imeSubtypeExtraValue", $r14);

        $z3 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>();

        if $z3 == 0 goto label52;

     label51:
        b8 = 1;

        goto label53;

     label52:
        b8 = 0;

     label53:
        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(b8);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "isAuxiliary", $r15);

        $z4 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: boolean isAsciiCapable()>();

        if $z4 == 0 goto label55;

     label54:
        b9 = 1;

        goto label56;

     label55:
        b9 = 0;

     label56:
        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(b9);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "isAsciiCapable", $r16);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "subtype");

     label57:
        i6 = i6 + 1;

        goto label40;

     label58:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "imi");

     label59:
        goto label23;

     label60:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "subtypes");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r2.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r32);

     label61:
        goto label65;

     label62:
        $r24 := @caughtexception;

        r39 = $r24;

        r31 = r32;

        goto label64;

     label63:
        $r26 := @caughtexception;

        r39 = $r26;

     label64:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AdditionalSubtypeUtils", "Error writing subtypes", r39);

        if r31 == null goto label65;

        virtualinvoke r2.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r31);

     label65:
        return;

        catch java.io.IOException from label08 to label09 with label63;
        catch java.io.IOException from label10 to label11 with label63;
        catch java.io.IOException from label12 to label13 with label63;
        catch java.io.IOException from label14 to label15 with label63;
        catch java.io.IOException from label16 to label17 with label63;
        catch java.io.IOException from label18 to label19 with label63;
        catch java.io.IOException from label20 to label21 with label63;
        catch java.io.IOException from label22 to label23 with label63;
        catch java.io.IOException from label24 to label25 with label63;
        catch java.io.IOException from label26 to label27 with label63;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.io.IOException from label32 to label33 with label63;
        catch java.io.IOException from label34 to label35 with label63;
        catch java.io.IOException from label36 to label37 with label63;
        catch java.io.IOException from label38 to label39 with label63;
        catch java.io.IOException from label41 to label42 with label63;
        catch java.io.IOException from label43 to label44 with label63;
        catch java.io.IOException from label45 to label46 with label63;
        catch java.io.IOException from label47 to label48 with label63;
        catch java.io.IOException from label48 to label49 with label62;
        catch java.io.IOException from label50 to label51 with label62;
        catch java.io.IOException from label53 to label54 with label62;
        catch java.io.IOException from label56 to label57 with label62;
        catch java.io.IOException from label58 to label59 with label62;
        catch java.io.IOException from label60 to label61 with label62;
    }

    public static void <clinit>()
    {
        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String TAG> = "AdditionalSubtypeUtils";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String SYSTEM_PATH> = "system";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String NODE_SUBTYPES> = "subtypes";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String NODE_SUBTYPE> = "subtype";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String NODE_IMI> = "imi";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String INPUT_METHOD_PATH> = "inputmethod";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String ATTR_LABEL> = "label";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String ATTR_IS_AUXILIARY> = "isAuxiliary";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String ATTR_IS_ASCII_CAPABLE> = "isAsciiCapable";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String ATTR_IME_SUBTYPE_MODE> = "imeSubtypeMode";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String ATTR_IME_SUBTYPE_LOCALE> = "imeSubtypeLocale";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String ATTR_IME_SUBTYPE_LANGUAGE_TAG> = "languageTag";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String ATTR_IME_SUBTYPE_ID> = "subtypeId";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String ATTR_IME_SUBTYPE_EXTRA_VALUE> = "imeSubtypeExtraValue";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String ATTR_ID> = "id";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String ATTR_ICON> = "icon";

        <com.android.server.inputmethod.AdditionalSubtypeUtils: java.lang.String ADDITIONAL_SUBTYPES_FILE_NAME> = "subtypes.xml";

        return;
    }
}
