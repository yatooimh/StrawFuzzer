public abstract class com.android.server.inputmethod.InputMethodManagerInternal extends java.lang.Object
{
    private static final com.android.server.inputmethod.InputMethodManagerInternal NOP;

    static void <clinit>()
    {
        com.android.server.inputmethod.InputMethodManagerInternal$1 $r0;

        $r0 = new com.android.server.inputmethod.InputMethodManagerInternal$1;

        specialinvoke $r0.<com.android.server.inputmethod.InputMethodManagerInternal$1: void <init>()>();

        <com.android.server.inputmethod.InputMethodManagerInternal: com.android.server.inputmethod.InputMethodManagerInternal NOP> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.server.inputmethod.InputMethodManagerInternal r0;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.server.inputmethod.InputMethodManagerInternal get()
    {
        java.lang.Object $r0;
        com.android.server.inputmethod.InputMethodManagerInternal r1;

        $r0 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/inputmethod/InputMethodManagerInternal;");

        r1 = (com.android.server.inputmethod.InputMethodManagerInternal) $r0;

        if r1 == null goto label1;

        goto label2;

     label1:
        r1 = <com.android.server.inputmethod.InputMethodManagerInternal: com.android.server.inputmethod.InputMethodManagerInternal NOP>;

     label2:
        return r1;
    }

    public abstract java.util.List getEnabledInputMethodListAsUser(int);

    public abstract java.util.List getInputMethodListAsUser(int);

    public abstract void hideCurrentInputMethod(int);

    public abstract void onCreateInlineSuggestionsRequest(int, com.android.internal.view.InlineSuggestionsRequestInfo, com.android.internal.view.IInlineSuggestionsRequestCallback);

    public abstract void registerInputMethodListListener(com.android.server.inputmethod.InputMethodManagerInternal$InputMethodListListener);

    public abstract void removeImeSurface();

    public abstract void reportImeControl(android.os.IBinder);

    public abstract void setInteractive(boolean);

    public abstract boolean switchToInputMethod(java.lang.String, int);

    public abstract boolean transferTouchFocusToImeWindow(android.os.IBinder, int);
}
