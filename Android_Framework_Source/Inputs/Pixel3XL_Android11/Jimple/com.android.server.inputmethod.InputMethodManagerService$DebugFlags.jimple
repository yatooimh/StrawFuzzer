final class com.android.server.inputmethod.InputMethodManagerService$DebugFlags extends java.lang.Object
{
    static final com.android.server.inputmethod.InputMethodManagerService$DebugFlag FLAG_OPTIMIZE_START_INPUT;
    static final com.android.server.inputmethod.InputMethodManagerService$DebugFlag FLAG_PRE_RENDER_IME_VIEWS;

    static void <clinit>()
    {
        com.android.server.inputmethod.InputMethodManagerService$DebugFlag $r0, $r1;

        $r0 = new com.android.server.inputmethod.InputMethodManagerService$DebugFlag;

        specialinvoke $r0.<com.android.server.inputmethod.InputMethodManagerService$DebugFlag: void <init>(java.lang.String,boolean)>("debug.optimize_startinput", 0);

        <com.android.server.inputmethod.InputMethodManagerService$DebugFlags: com.android.server.inputmethod.InputMethodManagerService$DebugFlag FLAG_OPTIMIZE_START_INPUT> = $r0;

        $r1 = new com.android.server.inputmethod.InputMethodManagerService$DebugFlag;

        specialinvoke $r1.<com.android.server.inputmethod.InputMethodManagerService$DebugFlag: void <init>(java.lang.String,boolean)>("persist.pre_render_ime_views", 0);

        <com.android.server.inputmethod.InputMethodManagerService$DebugFlags: com.android.server.inputmethod.InputMethodManagerService$DebugFlag FLAG_PRE_RENDER_IME_VIEWS> = $r1;

        return;
    }

    private void <init>()
    {
        com.android.server.inputmethod.InputMethodManagerService$DebugFlags r0;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$DebugFlags;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
