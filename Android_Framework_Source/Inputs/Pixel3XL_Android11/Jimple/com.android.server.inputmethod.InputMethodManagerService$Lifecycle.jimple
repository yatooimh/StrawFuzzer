public final class com.android.server.inputmethod.InputMethodManagerService$Lifecycle extends com.android.server.SystemService
{
    private com.android.server.inputmethod.InputMethodManagerService mService;

    public void <init>(android.content.Context)
    {
        com.android.server.inputmethod.InputMethodManagerService$Lifecycle r0;
        android.content.Context r1;
        com.android.server.inputmethod.InputMethodManagerService $r2;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$Lifecycle;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r2 = new com.android.server.inputmethod.InputMethodManagerService;

        specialinvoke $r2.<com.android.server.inputmethod.InputMethodManagerService: void <init>(android.content.Context)>(r1);

        r0.<com.android.server.inputmethod.InputMethodManagerService$Lifecycle: com.android.server.inputmethod.InputMethodManagerService mService> = $r2;

        return;
    }

    public void onBootPhase(int)
    {
        com.android.server.inputmethod.InputMethodManagerService$Lifecycle r0;
        int i0;
        com.android.server.statusbar.StatusBarManagerService r1;
        android.os.IBinder $r2;
        com.android.server.inputmethod.InputMethodManagerService $r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$Lifecycle;

        i0 := @parameter0: int;

        if i0 != 550 goto label1;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("statusbar");

        r1 = (com.android.server.statusbar.StatusBarManagerService) $r2;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService$Lifecycle: com.android.server.inputmethod.InputMethodManagerService mService>;

        virtualinvoke $r3.<com.android.server.inputmethod.InputMethodManagerService: void systemRunning(com.android.server.statusbar.StatusBarManagerService)>(r1);

     label1:
        return;
    }

    public void onStart()
    {
        com.android.server.inputmethod.InputMethodManagerService$Lifecycle r0;
        com.android.server.inputmethod.InputMethodManagerService$LocalServiceImpl $r1;
        com.android.server.inputmethod.InputMethodManagerService $r2, $r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$Lifecycle;

        $r1 = new com.android.server.inputmethod.InputMethodManagerService$LocalServiceImpl;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService$Lifecycle: com.android.server.inputmethod.InputMethodManagerService mService>;

        specialinvoke $r1.<com.android.server.inputmethod.InputMethodManagerService$LocalServiceImpl: void <init>(com.android.server.inputmethod.InputMethodManagerService)>($r2);

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(class "Lcom/android/server/inputmethod/InputMethodManagerInternal;", $r1);

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService$Lifecycle: com.android.server.inputmethod.InputMethodManagerService mService>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService$Lifecycle: void publishBinderService(java.lang.String,android.os.IBinder)>("input_method", $r3);

        return;
    }

    public void onSwitchUser(int)
    {
        com.android.server.inputmethod.InputMethodManagerService$Lifecycle r0;
        int i0;
        android.util.ArrayMap r1;
        com.android.server.inputmethod.InputMethodManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$Lifecycle;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService$Lifecycle: com.android.server.inputmethod.InputMethodManagerService mService>;

        r1 = $r3.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService$Lifecycle: com.android.server.inputmethod.InputMethodManagerService mService>;

        virtualinvoke $r4.<com.android.server.inputmethod.InputMethodManagerService: void scheduleSwitchUserTaskLocked(int,com.android.internal.view.IInputMethodClient)>(i0, null);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onUnlockUser(int)
    {
        com.android.server.inputmethod.InputMethodManagerService$Lifecycle r0;
        int i0;
        com.android.server.inputmethod.InputMethodManagerService $r1, $r2;
        android.os.Handler $r3, $r4;
        android.os.Message $r5;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$Lifecycle;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService$Lifecycle: com.android.server.inputmethod.InputMethodManagerService mService>;

        $r4 = $r1.<com.android.server.inputmethod.InputMethodManagerService: android.os.Handler mHandler>;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService$Lifecycle: com.android.server.inputmethod.InputMethodManagerService mService>;

        $r3 = $r2.<com.android.server.inputmethod.InputMethodManagerService: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(5000, i0, 0);

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r5);

        return;
    }
}
