final class com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl extends android.os.ShellCommand
{
    final com.android.server.inputmethod.InputMethodManagerService mService;

    void <init>(com.android.server.inputmethod.InputMethodManagerService)
    {
        com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl r0;
        com.android.server.inputmethod.InputMethodManagerService r1;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl;

        r1 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: com.android.server.inputmethod.InputMethodManagerService mService> = r1;

        return;
    }

    private int onCommandWithSystemIdentity(java.lang.String)
    {
        com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl r0;
        java.lang.String r1, $r3, $r4, $r5, $r6, $r7, $r16, r18;
        java.io.PrintWriter r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.android.server.inputmethod.InputMethodManagerService $r8, $r9, $r10, $r11, $r12, $r17;
        java.lang.StringBuilder $r13;
        byte b9;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl;

        r18 := @parameter0: java.lang.String;

        $r3 = "refresh_debug_properties";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z0 == 0 goto label01;

        $i8 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: int refreshDebugProperties()>();

        return $i8;

     label01:
        $r4 = "get-last-switch-user-id";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z1 == 0 goto label02;

        $r17 = r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: com.android.server.inputmethod.InputMethodManagerService mService>;

        $i7 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService: int access$2800(com.android.server.inputmethod.InputMethodManagerService,android.os.ShellCommand)>($r17, r0);

        return $i7;

     label02:
        $r5 = "ime";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z2 == 0 goto label18;

        r1 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: java.lang.String getNextArg()>();

        if r1 == null goto label17;

        $r6 = "help";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 != 0 goto label17;

        $r7 = "-h";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label03;

        goto label17;

     label03:
        $i1 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1298848381: goto label09;
            case 113762: goto label08;
            case 3322014: goto label07;
            case 108404047: goto label06;
            case 1671308008: goto label05;
            default: goto label04;
        };

     label04:
        goto label10;

     label05:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("disable");

        if $z5 == 0 goto label04;

        b9 = 2;

        goto label11;

     label06:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("reset");

        if $z6 == 0 goto label04;

        b9 = 4;

        goto label11;

     label07:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z7 == 0 goto label04;

        b9 = 0;

        goto label11;

     label08:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z8 == 0 goto label04;

        b9 = 3;

        goto label11;

     label09:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("enable");

        if $z9 == 0 goto label04;

        b9 = 1;

        goto label11;

     label10:
        b9 = -1;

     label11:
        if b9 == 0 goto label16;

        if b9 == 1 goto label15;

        if b9 == 2 goto label14;

        if b9 == 3 goto label13;

        if b9 == 4 goto label12;

        r2 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: java.io.PrintWriter getOutPrintWriter()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown command: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        return -1;

     label12:
        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: com.android.server.inputmethod.InputMethodManagerService mService>;

        $i6 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService: int access$3200(com.android.server.inputmethod.InputMethodManagerService,android.os.ShellCommand)>($r12, r0);

        return $i6;

     label13:
        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: com.android.server.inputmethod.InputMethodManagerService mService>;

        $i5 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService: int access$3100(com.android.server.inputmethod.InputMethodManagerService,android.os.ShellCommand)>($r11, r0);

        return $i5;

     label14:
        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: com.android.server.inputmethod.InputMethodManagerService mService>;

        $i4 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService: int access$3000(com.android.server.inputmethod.InputMethodManagerService,android.os.ShellCommand,boolean)>($r10, r0, 0);

        return $i4;

     label15:
        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: com.android.server.inputmethod.InputMethodManagerService mService>;

        $i3 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService: int access$3000(com.android.server.inputmethod.InputMethodManagerService,android.os.ShellCommand,boolean)>($r9, r0, 1);

        return $i3;

     label16:
        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: com.android.server.inputmethod.InputMethodManagerService mService>;

        $i2 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService: int access$2900(com.android.server.inputmethod.InputMethodManagerService,android.os.ShellCommand)>($r8, r0);

        return $i2;

     label17:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: void onImeCommandHelp()>();

        return 0;

     label18:
        $i0 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: int handleDefaultCommands(java.lang.String)>(r18);

        return $i0;
    }

    private void onImeCommandHelp()
    {
        com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl r0;
        com.android.internal.util.IndentingPrintWriter $r2;
        java.io.PrintWriter $r3;
        java.lang.Throwable $r26, $r27;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl;

        $r2 = new com.android.internal.util.IndentingPrintWriter;

        $r3 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: java.io.PrintWriter getOutPrintWriter()>();

        specialinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String,int)>($r3, "  ", 100);

     label1:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("ime <command>:");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("list [-a] [-s]");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("prints all enabled input methods.");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("-a: see all input methods");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("-s: only a single summary line of each");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("enable [--user <USER_ID>] <ID>");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("allows the given input method ID to be used.");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("--user <USER_ID>: Specify which user to enable.");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>(" Assumes the current user if not specified.");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("disable [--user <USER_ID>] <ID>");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("disallows the given input method ID to be used.");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("--user <USER_ID>: Specify which user to disable.");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>(" Assumes the current user if not specified.");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("set [--user <USER_ID>] <ID>");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("switches to the given input method ID.");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("--user <USER_ID>: Specify which user to enable.");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>(" Assumes the current user if not specified.");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("reset [--user <USER_ID>]");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("reset currently selected/enabled IMEs to the default ones as if the device is initially booted with the current locale.");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("--user <USER_ID>: Specify which user to reset.");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>(" Assumes the current user if not specified.");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label2:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void close()>();

        return;

     label3:
        $r27 := @caughtexception;

     label4:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void close()>();

     label5:
        goto label7;

     label6:
        $r26 := @caughtexception;

        virtualinvoke $r27.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r26);

     label7:
        throw $r27;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private int refreshDebugProperties()
    {
        com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl r0;
        com.android.server.inputmethod.InputMethodManagerService$DebugFlag $r1, $r2;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl;

        $r1 = <com.android.server.inputmethod.InputMethodManagerService$DebugFlags: com.android.server.inputmethod.InputMethodManagerService$DebugFlag FLAG_OPTIMIZE_START_INPUT>;

        virtualinvoke $r1.<com.android.server.inputmethod.InputMethodManagerService$DebugFlag: void refresh()>();

        $r2 = <com.android.server.inputmethod.InputMethodManagerService$DebugFlags: com.android.server.inputmethod.InputMethodManagerService$DebugFlag FLAG_PRE_RENDER_IME_VIEWS>;

        virtualinvoke $r2.<com.android.server.inputmethod.InputMethodManagerService$DebugFlag: void refresh()>();

        return 0;
    }

    public void lambda$onCommand$0$InputMethodManagerService$ShellCommandImpl(java.lang.String)
    {
        com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl r0;
        java.lang.String r1;
        com.android.server.inputmethod.InputMethodManagerService $r2;
        android.content.Context $r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: com.android.server.inputmethod.InputMethodManagerService mService>;

        $r3 = $r2.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>(r1, null);

        return;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl r0;
        long l0;
        int i1;
        java.lang.String[] $r1;
        java.util.List $r2;
        com.android.server.inputmethod._$$Lambda$InputMethodManagerService$ShellCommandImpl$DbZq_GIUJWcuMsIpw_Jz5jVT2_Y $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "android.permission.DUMP";

        $r1[1] = "android.permission.INTERACT_ACROSS_USERS_FULL";

        $r1[2] = "android.permission.WRITE_SECURE_SETTINGS";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r3 = new com.android.server.inputmethod._$$Lambda$InputMethodManagerService$ShellCommandImpl$DbZq_GIUJWcuMsIpw_Jz5jVT2_Y;

        specialinvoke $r3.<com.android.server.inputmethod._$$Lambda$InputMethodManagerService$ShellCommandImpl$DbZq_GIUJWcuMsIpw_Jz5jVT2_Y: void <init>(com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl)>(r0);

        interfaceinvoke $r2.<java.util.List: void forEach(java.util.function.Consumer)>($r3);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        i1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: int onCommandWithSystemIdentity(java.lang.String)>(r5);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onHelp()
    {
        com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl r0;
        java.lang.Throwable $r2, $r3;
        java.io.PrintWriter r4;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl;

        r4 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: java.io.PrintWriter getOutPrintWriter()>();

     label1:
        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("InputMethodManagerService commands:");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Prints this help text.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  dump [options]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Synonym of dumpsys.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  ime <command> [options]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Manipulate IMEs.  Run \"ime help\" for details.");

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<java.io.PrintWriter: void close()>();

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        if r4 == null goto label8;

     label5:
        virtualinvoke r4.<java.io.PrintWriter: void close()>();

     label6:
        goto label8;

     label7:
        $r2 := @caughtexception;

        virtualinvoke $r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r2);

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
}
