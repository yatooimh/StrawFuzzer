final class com.android.server.inputmethod.InputMethodManagerService$StartInputHistory extends java.lang.Object
{
    private static final int ENTRY_SIZE_FOR_HIGH_RAM_DEVICE;
    private static final int ENTRY_SIZE_FOR_LOW_RAM_DEVICE;
    private final com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry[] mEntries;
    private int mNextIndex;

    private void <init>()
    {
        com.android.server.inputmethod.InputMethodManagerService$StartInputHistory r0;
        int $i0;
        com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry[] $r1;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$StartInputHistory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: int getEntrySize()>();

        $r1 = newarray (com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry)[$i0];

        r0.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry[] mEntries> = $r1;

        r0.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: int mNextIndex> = 0;

        return;
    }

    void <init>(com.android.server.inputmethod.InputMethodManagerService$1)
    {
        com.android.server.inputmethod.InputMethodManagerService$StartInputHistory r0;
        com.android.server.inputmethod.InputMethodManagerService$1 r1;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$StartInputHistory;

        r1 := @parameter0: com.android.server.inputmethod.InputMethodManagerService$1;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: void <init>()>();

        return;
    }

    private static int getEntrySize()
    {
        boolean $z0;

        $z0 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z0 == 0 goto label1;

        return 5;

     label1:
        return 16;
    }

    void addEntry(com.android.server.inputmethod.InputMethodManagerService$StartInputInfo)
    {
        com.android.server.inputmethod.InputMethodManagerService$StartInputHistory r0;
        com.android.server.inputmethod.InputMethodManagerService$StartInputInfo r1;
        int i0, $i1, $i2, $i3, $i4;
        com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry[] r2, $r5;
        com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry $r3, $r4, $r6;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$StartInputHistory;

        r1 := @parameter0: com.android.server.inputmethod.InputMethodManagerService$StartInputInfo;

        i0 = r0.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: int mNextIndex>;

        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry[] mEntries>;

        $r3 = r2[i0];

        if $r3 != null goto label1;

        $r6 = new com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry;

        specialinvoke $r6.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: void <init>(com.android.server.inputmethod.InputMethodManagerService$StartInputInfo)>(r1);

        r2[i0] = $r6;

        goto label2;

     label1:
        $r4 = r2[i0];

        virtualinvoke $r4.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: void set(com.android.server.inputmethod.InputMethodManagerService$StartInputInfo)>(r1);

     label2:
        $i1 = r0.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: int mNextIndex>;

        $i3 = $i1 + 1;

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry[] mEntries>;

        $i2 = lengthof $r5;

        $i4 = $i3 % $i2;

        r0.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: int mNextIndex> = $i4;

        return;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodManagerService$StartInputHistory r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r10, $r14, $r19, $r23, $r26, $r29, $r32, $r36, $r40, $r43, $r47, $r55, $r58, $r60, $r64, $r68, $r72, $r76, $r85;
        java.text.SimpleDateFormat $r4;
        java.util.Locale $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19;
        java.lang.StringBuilder $r6, $r11, $r24, $r33, $r37, $r41, $r56, $r61;
        java.util.Date $r13;
        long $l6, $l7;
        boolean $z0;
        android.view.inputmethod.EditorInfo $r46, $r63, $r67, $r71, $r75, $r79, $r82;
        java.lang.CharSequence $r83;
        com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry[] r86;
        com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry r87;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService$StartInputHistory;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.text.SimpleDateFormat;

        $r5 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd HH:mm:ss.SSS", $r5);

        i19 = 0;

     label1:
        r86 = r0.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry[] mEntries>;

        $i0 = lengthof r86;

        if i19 >= $i0 goto label4;

        $i1 = r0.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: int mNextIndex>;

        $i3 = $i1 + i19;

        $i2 = lengthof r86;

        $i4 = $i3 % $i2;

        r87 = r86[$i4];

        if r87 != null goto label2;

        goto label3;

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StartInput #");

        $i5 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: int mSequenceNumber>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time=");

        $r13 = new java.util.Date;

        $l6 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: long mWallTime>;

        specialinvoke $r13.<java.util.Date: void <init>(long)>($l6);

        $r14 = virtualinvoke $r4.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (timestamp=");

        $l7 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: long mTimestamp>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") reason=");

        $i8 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: int mStartInputReason>;

        $r19 = staticinvoke <com.android.internal.inputmethod.InputMethodDebug: java.lang.String startInputReasonToString(int)>($i8);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" restarting=");

        $z0 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: boolean mRestarting>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r23 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" imeToken=");

        $r26 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: java.lang.String mImeTokenString>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r29 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: java.lang.String mImeId>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r32 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" imeUserId=");

        $i9 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: int mImeUserId>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r36);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" imeDisplayId=");

        $i10 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: int mImeDisplayId>;

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r40);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" targetWin=");

        $r43 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: java.lang.String mTargetWindowString>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r46 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: android.view.inputmethod.EditorInfo mEditorInfo>;

        $r47 = $r46.<android.view.inputmethod.EditorInfo: java.lang.String packageName>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] targetUserId=");

        $i11 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: int mTargetUserId>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" targetDisplayId=");

        $i12 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: int mTargetDisplayId>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" clientBindSeq=");

        $i13 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: int mClientBindSequenceNumber>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r55 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r55);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" softInputMode=");

        $i14 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: int mTargetWindowSoftInputMode>;

        $r58 = staticinvoke <com.android.internal.inputmethod.InputMethodDebug: java.lang.String softInputModeToString(int)>($i14);

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r60);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inputType=0x");

        $r63 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: android.view.inputmethod.EditorInfo mEditorInfo>;

        $i15 = $r63.<android.view.inputmethod.EditorInfo: int inputType>;

        $r64 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i15);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" imeOptions=0x");

        $r67 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: android.view.inputmethod.EditorInfo mEditorInfo>;

        $i16 = $r67.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $r68 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i16);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fieldId=0x");

        $r71 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: android.view.inputmethod.EditorInfo mEditorInfo>;

        $i17 = $r71.<android.view.inputmethod.EditorInfo: int fieldId>;

        $r72 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i17);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fieldName=");

        $r75 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: android.view.inputmethod.EditorInfo mEditorInfo>;

        $r76 = $r75.<android.view.inputmethod.EditorInfo: java.lang.String fieldName>;

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" actionId=");

        $r79 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: android.view.inputmethod.EditorInfo mEditorInfo>;

        $i18 = $r79.<android.view.inputmethod.EditorInfo: int actionId>;

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" actionLabel=");

        $r82 = r87.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory$Entry: android.view.inputmethod.EditorInfo mEditorInfo>;

        $r83 = $r82.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel>;

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r83);

        $r85 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r85);

     label3:
        i19 = i19 + 1;

        goto label1;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: int ENTRY_SIZE_FOR_LOW_RAM_DEVICE> = 5;

        <com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: int ENTRY_SIZE_FOR_HIGH_RAM_DEVICE> = 16;

        return;
    }
}
