public class com.android.server.inputmethod.InputMethodManagerService extends com.android.internal.view.IInputMethodManager$Stub implements android.content.ServiceConnection, android.os.Handler$Callback
{
    private static final java.lang.String ACTION_SHOW_INPUT_METHOD_PICKER;
    static final boolean DEBUG;
    private static final int FALLBACK_DISPLAY_ID;
    private static final int IME_CONNECTION_BIND_FLAGS;
    private static final int IME_VISIBLE_BIND_FLAGS;
    static final int MSG_APPLY_IME_VISIBILITY;
    static final int MSG_BIND_CLIENT;
    static final int MSG_BIND_INPUT;
    static final int MSG_CREATE_SESSION;
    static final int MSG_DISPATCH_ON_INPUT_METHOD_LIST_UPDATED;
    static final int MSG_HARD_KEYBOARD_SWITCH_CHANGED;
    static final int MSG_HIDE_CURRENT_INPUT_METHOD;
    static final int MSG_HIDE_SOFT_INPUT;
    static final int MSG_INITIALIZE_IME;
    static final int MSG_INLINE_SUGGESTIONS_REQUEST;
    static final int MSG_NOTIFY_IME_UID_TO_AUDIO_SERVICE;
    static final int MSG_REMOVE_IME_SURFACE;
    static final int MSG_REMOVE_IME_SURFACE_FROM_WINDOW;
    static final int MSG_REPORT_FULLSCREEN_MODE;
    static final int MSG_REPORT_PRE_RENDERED;
    static final int MSG_SET_ACTIVE;
    static final int MSG_SET_INTERACTIVE;
    static final int MSG_SHOW_IM_CONFIG;
    static final int MSG_SHOW_IM_SUBTYPE_ENABLER;
    static final int MSG_SHOW_IM_SUBTYPE_PICKER;
    static final int MSG_SHOW_SOFT_INPUT;
    static final int MSG_START_INPUT;
    static final int MSG_SYSTEM_UNLOCK_USER;
    static final int MSG_UNBIND_CLIENT;
    static final int MSG_UNBIND_INPUT;
    private static final int NOT_A_SUBTYPE_ID;
    static final int SECURE_SUGGESTION_SPANS_MAX_SIZE;
    static final java.lang.String TAG;
    private static final java.lang.String TAG_TRY_SUPPRESSING_IME_SWITCHER;
    static final long TIME_TO_RECONNECT;
    private boolean mAccessibilityRequestingNoSoftKeyboard;
    private android.util.SparseArray mActivityViewDisplayIdToParentMap;
    private final android.util.ArrayMap mAdditionalSubtypeMap;
    private final android.app.AppOpsManager mAppOpsManager;
    private android.media.AudioManagerInternal mAudioManagerInternal;
    int mBackDisposition;
    boolean mBoundToMethod;
    final com.android.internal.os.HandlerCaller mCaller;
    final android.util.ArrayMap mClients;
    final android.content.Context mContext;
    private android.graphics.Matrix mCurActivityViewToScreenMatrix;
    android.view.inputmethod.EditorInfo mCurAttribute;
    com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient;
    private boolean mCurClientInKeyguard;
    android.os.IBinder mCurFocusedWindow;
    com.android.server.inputmethod.InputMethodManagerService$ClientState mCurFocusedWindowClient;
    int mCurFocusedWindowSoftInputMode;
    private android.os.IBinder mCurHostInputToken;
    java.lang.String mCurId;
    com.android.internal.view.IInputContext mCurInputContext;
    int mCurInputContextMissingMethods;
    android.content.Intent mCurIntent;
    com.android.internal.view.IInputMethod mCurMethod;
    java.lang.String mCurMethodId;
    int mCurMethodUid;
    private boolean mCurPerceptible;
    int mCurSeq;
    android.os.IBinder mCurToken;
    int mCurTokenDisplayId;
    private android.view.inputmethod.InputMethodSubtype mCurrentSubtype;
    private android.app.AlertDialog$Builder mDialogBuilder;
    private final android.hardware.display.DisplayManagerInternal mDisplayManagerInternal;
    com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession;
    final android.os.Handler mHandler;
    private final com.android.server.inputmethod.InputMethodManagerService$HardKeyboardListener mHardKeyboardListener;
    final boolean mHasFeature;
    boolean mHaveConnection;
    private final java.util.WeakHashMap mHideRequestWindowMap;
    private final android.content.pm.IPackageManager mIPackageManager;
    final android.view.IWindowManager mIWindowManager;
    final com.android.server.inputmethod.InputMethodManagerService$ImeDisplayValidator mImeDisplayValidator;
    private android.app.PendingIntent mImeSwitchPendingIntent;
    private android.app.Notification$Builder mImeSwitcherNotification;
    private final java.util.WeakHashMap mImeTargetWindowMap;
    int mImeWindowVis;
    private android.view.inputmethod.InputMethodInfo[] mIms;
    boolean mInFullscreenMode;
    final android.hardware.input.InputManagerInternal mInputManagerInternal;
    private final java.util.concurrent.CopyOnWriteArrayList mInputMethodListListeners;
    boolean mInputShown;
    boolean mIsInteractive;
    private final boolean mIsLowRam;
    private android.app.KeyguardManager mKeyguardManager;
    long mLastBindTime;
    android.os.IBinder mLastImeTargetWindow;
    private int mLastSwitchUserId;
    private android.os.LocaleList mLastSystemLocales;
    final java.util.ArrayList mMethodList;
    final android.util.ArrayMap mMethodMap;
    private int mMethodMapUpdateCount;
    private final com.android.server.inputmethod.InputMethodManagerService$MyPackageMonitor mMyPackageMonitor;
    private android.app.NotificationManager mNotificationManager;
    private boolean mNotificationShown;
    final android.content.pm.PackageManagerInternal mPackageManagerInternal;
    final android.content.res.Resources mRes;
    private final android.util.LruCache mSecureSuggestionSpans;
    final com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings;
    final com.android.server.inputmethod.InputMethodManagerService$SettingsObserver mSettingsObserver;
    boolean mShowExplicitlyRequested;
    boolean mShowForced;
    private boolean mShowImeWithHardKeyboard;
    private boolean mShowOngoingImeSwitcherForPhones;
    private final java.util.WeakHashMap mShowRequestWindowMap;
    boolean mShowRequested;
    private final java.lang.String mSlotIme;
    private final com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory mSoftInputShowHideHistory;
    private final com.android.server.inputmethod.InputMethodManagerService$StartInputHistory mStartInputHistory;
    private com.android.server.statusbar.StatusBarManagerService mStatusBar;
    private int[] mSubtypeIds;
    private final com.android.server.inputmethod.InputMethodSubtypeSwitchingController mSwitchingController;
    private android.app.AlertDialog mSwitchingDialog;
    private android.view.View mSwitchingDialogTitleView;
    private android.os.IBinder mSwitchingDialogToken;
    boolean mSystemReady;
    private final android.os.UserManager mUserManager;
    private final android.os.UserManagerInternal mUserManagerInternal;
    private com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask mUserSwitchHandlerTask;
    boolean mVisibleBound;
    final android.content.ServiceConnection mVisibleConnection;
    final com.android.server.wm.WindowManagerInternal mWindowManagerInternal;

    public void <init>(android.content.Context)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.content.Context r1, $r35, $r38, $r45, $r48, $r51, $r59, $r61;
        android.util.ArrayMap $r2, $r4, $r7, $r68, $r69;
        java.util.ArrayList $r3;
        android.util.LruCache $r5;
        com.android.server.inputmethod.InputMethodManagerService$1 $r6;
        android.util.SparseArray $r8;
        android.os.Binder $r9;
        com.android.server.inputmethod.InputMethodManagerService$MyPackageMonitor $r10;
        java.util.concurrent.CopyOnWriteArrayList $r11;
        java.util.WeakHashMap $r12, $r13, $r14;
        com.android.server.inputmethod.InputMethodManagerService$StartInputHistory $r15;
        com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory $r16;
        android.content.pm.IPackageManager $r17;
        android.content.res.Resources $r18, $r66;
        android.os.Handler $r19, $r21;
        com.android.server.inputmethod.InputMethodManagerService$SettingsObserver $r20;
        android.os.IBinder $r22;
        android.view.IWindowManager $r23;
        java.lang.Object $r24, $r26, $r28, $r30, $r36, $r39, $r41;
        com.android.server.wm.WindowManagerInternal $r25;
        android.content.pm.PackageManagerInternal $r27;
        android.hardware.input.InputManagerInternal $r29;
        android.hardware.display.DisplayManagerInternal $r31;
        com.android.server.inputmethod._$$Lambda$InputMethodManagerService$oxpSIwENeEjKtHbxqUXuaXD0Gn8 $r32;
        com.android.internal.os.HandlerCaller $r33;
        com.android.server.inputmethod.InputMethodManagerService$2 $r34;
        android.app.AppOpsManager $r37;
        android.os.UserManager $r40;
        android.os.UserManagerInternal $r42;
        com.android.server.inputmethod.InputMethodManagerService$HardKeyboardListener $r43;
        android.content.pm.PackageManager $r44;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r46, $r50, $r60;
        android.os.Bundle $r47;
        android.app.Notification$Builder $r49, $r52, $r53, $r54, $r55, $r56, $r57;
        android.content.Intent $r58, r74;
        android.app.PendingIntent $r62;
        android.app.IActivityManager $r63;
        android.content.pm.UserInfo $r64;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r65, $r70;
        android.content.ContentResolver $r67;
        com.android.server.inputmethod.InputMethodSubtypeSwitchingController $r71;
        android.os.RemoteException $r72;
        int i2, i3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.view.IInputMethodManager$Stub: void <init>()>();

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mAdditionalSubtypeMap> = $r2;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.media.AudioManagerInternal mAudioManagerInternal> = null;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.ArrayList mMethodList> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap> = $r4;

        $r5 = new android.util.LruCache;

        specialinvoke $r5.<android.util.LruCache: void <init>(int)>(20);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.LruCache mSecureSuggestionSpans> = $r5;

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mMethodMapUpdateCount> = 0;

        $r6 = new com.android.server.inputmethod.InputMethodManagerService$1;

        specialinvoke $r6.<com.android.server.inputmethod.InputMethodManagerService$1: void <init>(com.android.server.inputmethod.InputMethodManagerService)>(r0);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.ServiceConnection mVisibleConnection> = $r6;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mVisibleBound> = 0;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients> = $r7;

        $r8 = new android.util.SparseArray;

        specialinvoke $r8.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.SparseArray mActivityViewDisplayIdToParentMap> = $r8;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.graphics.Matrix mCurActivityViewToScreenMatrix> = null;

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId> = -1;

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurMethodUid> = -1;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mIsInteractive> = 1;

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mBackDisposition> = 0;

        $r9 = new android.os.Binder;

        specialinvoke $r9.<android.os.Binder: void <init>()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mSwitchingDialogToken> = $r9;

        $r10 = new com.android.server.inputmethod.InputMethodManagerService$MyPackageMonitor;

        specialinvoke $r10.<com.android.server.inputmethod.InputMethodManagerService$MyPackageMonitor: void <init>(com.android.server.inputmethod.InputMethodManagerService)>(r0);

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$MyPackageMonitor mMyPackageMonitor> = $r10;

        $r11 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r11.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.concurrent.CopyOnWriteArrayList mInputMethodListListeners> = $r11;

        $r12 = new java.util.WeakHashMap;

        specialinvoke $r12.<java.util.WeakHashMap: void <init>()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.WeakHashMap mImeTargetWindowMap> = $r12;

        $r13 = new java.util.WeakHashMap;

        specialinvoke $r13.<java.util.WeakHashMap: void <init>()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.WeakHashMap mShowRequestWindowMap> = $r13;

        $r14 = new java.util.WeakHashMap;

        specialinvoke $r14.<java.util.WeakHashMap: void <init>()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.WeakHashMap mHideRequestWindowMap> = $r14;

        $r15 = new com.android.server.inputmethod.InputMethodManagerService$StartInputHistory;

        specialinvoke $r15.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: void <init>(com.android.server.inputmethod.InputMethodManagerService$1)>(null);

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$StartInputHistory mStartInputHistory> = $r15;

        $r16 = new com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory;

        specialinvoke $r16.<com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory: void <init>(com.android.server.inputmethod.InputMethodManagerService$1)>(null);

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory mSoftInputShowHideHistory> = $r16;

        $r17 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager> = $r17;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext> = r1;

        $r18 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.res.Resources mRes> = $r18;

        $r19 = new android.os.Handler;

        specialinvoke $r19.<android.os.Handler: void <init>(android.os.Handler$Callback)>(r0);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.Handler mHandler> = $r19;

        $r20 = new com.android.server.inputmethod.InputMethodManagerService$SettingsObserver;

        $r21 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.Handler mHandler>;

        specialinvoke $r20.<com.android.server.inputmethod.InputMethodManagerService$SettingsObserver: void <init>(com.android.server.inputmethod.InputMethodManagerService,android.os.Handler)>(r0, $r21);

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SettingsObserver mSettingsObserver> = $r20;

        $r22 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r23 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r22);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.IWindowManager mIWindowManager> = $r23;

        $r24 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/WindowManagerInternal;");

        $r25 = (com.android.server.wm.WindowManagerInternal) $r24;

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal> = $r25;

        $r26 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r27 = (android.content.pm.PackageManagerInternal) $r26;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.pm.PackageManagerInternal mPackageManagerInternal> = $r27;

        $r28 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/hardware/input/InputManagerInternal;");

        $r29 = (android.hardware.input.InputManagerInternal) $r28;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.hardware.input.InputManagerInternal mInputManagerInternal> = $r29;

        $r30 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/hardware/display/DisplayManagerInternal;");

        $r31 = (android.hardware.display.DisplayManagerInternal) $r30;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.hardware.display.DisplayManagerInternal mDisplayManagerInternal> = $r31;

        $r32 = new com.android.server.inputmethod._$$Lambda$InputMethodManagerService$oxpSIwENeEjKtHbxqUXuaXD0Gn8;

        specialinvoke $r32.<com.android.server.inputmethod._$$Lambda$InputMethodManagerService$oxpSIwENeEjKtHbxqUXuaXD0Gn8: void <init>(com.android.server.inputmethod.InputMethodManagerService)>(r0);

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ImeDisplayValidator mImeDisplayValidator> = $r32;

        $r33 = new com.android.internal.os.HandlerCaller;

        $r34 = new com.android.server.inputmethod.InputMethodManagerService$2;

        specialinvoke $r34.<com.android.server.inputmethod.InputMethodManagerService$2: void <init>(com.android.server.inputmethod.InputMethodManagerService)>(r0);

        specialinvoke $r33.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>(r1, null, $r34, 1);

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller> = $r33;

        $r35 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r36 = virtualinvoke $r35.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r37 = (android.app.AppOpsManager) $r36;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AppOpsManager mAppOpsManager> = $r37;

        $r38 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r39 = virtualinvoke $r38.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/UserManager;");

        $r40 = (android.os.UserManager) $r39;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.UserManager mUserManager> = $r40;

        $r41 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/UserManagerInternal;");

        $r42 = (android.os.UserManagerInternal) $r41;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.UserManagerInternal mUserManagerInternal> = $r42;

        $r43 = new com.android.server.inputmethod.InputMethodManagerService$HardKeyboardListener;

        specialinvoke $r43.<com.android.server.inputmethod.InputMethodManagerService$HardKeyboardListener: void <init>(com.android.server.inputmethod.InputMethodManagerService,com.android.server.inputmethod.InputMethodManagerService$1)>(r0, null);

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$HardKeyboardListener mHardKeyboardListener> = $r43;

        $r44 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r44.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.input_methods");

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mHasFeature> = $z0;

        $r45 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r46 = virtualinvoke $r45.<android.content.Context: java.lang.String getString(int)>(17041296);

        r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mSlotIme> = $r46;

        $z1 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mIsLowRam> = $z1;

        $r47 = new android.os.Bundle;

        specialinvoke $r47.<android.os.Bundle: void <init>()>();

        virtualinvoke $r47.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.allowDuringSetup", 1);

        $r48 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        i2 = virtualinvoke $r48.<android.content.Context: int getColor(int)>(17170460);

        $r49 = new android.app.Notification$Builder;

        $r51 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r50 = <com.android.internal.notification.SystemNotificationChannels: java.lang.String VIRTUAL_KEYBOARD>;

        specialinvoke $r49.<android.app.Notification$Builder: void <init>(android.content.Context,java.lang.String)>($r51, $r50);

        $r52 = virtualinvoke $r49.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>(17302759);

        $r53 = virtualinvoke $r52.<android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>(0L);

        $r54 = virtualinvoke $r53.<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>(1);

        $r55 = virtualinvoke $r54.<android.app.Notification$Builder: android.app.Notification$Builder addExtras(android.os.Bundle)>($r47);

        $r56 = virtualinvoke $r55.<android.app.Notification$Builder: android.app.Notification$Builder setCategory(java.lang.String)>("sys");

        $r57 = virtualinvoke $r56.<android.app.Notification$Builder: android.app.Notification$Builder setColor(int)>(i2);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.Notification$Builder mImeSwitcherNotification> = $r57;

        $r58 = new android.content.Intent;

        specialinvoke $r58.<android.content.Intent: void <init>(java.lang.String)>("com.android.server.inputmethod.InputMethodManagerService.SHOW_INPUT_METHOD_PICKER");

        $r59 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r60 = virtualinvoke $r59.<android.content.Context: java.lang.String getPackageName()>();

        r74 = virtualinvoke $r58.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r60);

        $r61 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r62 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r61, 0, r74, 0);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.PendingIntent mImeSwitchPendingIntent> = $r62;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowOngoingImeSwitcherForPhones> = 0;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mNotificationShown> = 0;

     label1:
        $r63 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r64 = interfaceinvoke $r63.<android.app.IActivityManager: android.content.pm.UserInfo getCurrentUser()>();

        i3 = $r64.<android.content.pm.UserInfo: int id>;

     label2:
        goto label4;

     label3:
        $r72 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", "Couldn\'t get current user ID; guessing it\'s 0", $r72);

        i3 = 0;

     label4:
        r0.<com.android.server.inputmethod.InputMethodManagerService: int mLastSwitchUserId> = i3;

        $r65 = new com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $r66 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.res.Resources mRes>;

        $r67 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r68 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $z2 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mSystemReady>;

        $z3 = $z2 ^ 1;

        specialinvoke $r65.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void <init>(android.content.res.Resources,android.content.ContentResolver,android.util.ArrayMap,int,boolean)>($r66, $r67, $r68, i3, $z3);

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings> = $r65;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateCurrentProfileIds()>();

        $r69 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mAdditionalSubtypeMap>;

        staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: void load(android.util.ArrayMap,int)>($r69, i3);

        $r70 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r71 = staticinvoke <com.android.server.inputmethod.InputMethodSubtypeSwitchingController: com.android.server.inputmethod.InputMethodSubtypeSwitchingController createInstanceLocked(com.android.server.inputmethod.InputMethodUtils$InputMethodSettings,android.content.Context)>($r70, r1);

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodSubtypeSwitchingController mSwitchingController> = $r71;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static android.app.AlertDialog access$1000(com.android.server.inputmethod.InputMethodManagerService)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.app.AlertDialog $r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        return $r1;
    }

    static android.view.View access$1100(com.android.server.inputmethod.InputMethodManagerService)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.View mSwitchingDialogTitleView>;

        return $r1;
    }

    static com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask access$1200(com.android.server.inputmethod.InputMethodManagerService)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask $r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask mUserSwitchHandlerTask>;

        return $r1;
    }

    static com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask access$1202(com.android.server.inputmethod.InputMethodManagerService, com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask;

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask mUserSwitchHandlerTask> = r1;

        return r1;
    }

    static void access$1300(com.android.server.inputmethod.InputMethodManagerService, int, com.android.internal.view.IInputMethodClient)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        com.android.internal.view.IInputMethodClient r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.internal.view.IInputMethodClient;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void switchUserOnHandlerLocked(int,com.android.internal.view.IInputMethodClient)>(i0, r1);

        return;
    }

    static android.view.inputmethod.InputMethodInfo[] access$1900(com.android.server.inputmethod.InputMethodManagerService)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.view.inputmethod.InputMethodInfo[] $r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodInfo[] mIms>;

        return $r1;
    }

    static int[] access$2000(com.android.server.inputmethod.InputMethodManagerService)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int[] $r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: int[] mSubtypeIds>;

        return $r1;
    }

    static java.util.List access$2100(com.android.server.inputmethod.InputMethodManagerService, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.List getInputMethodListAsUser(int)>(i0);

        return $r1;
    }

    static java.util.List access$2200(com.android.server.inputmethod.InputMethodManagerService, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.List getEnabledInputMethodListAsUser(int)>(i0);

        return $r1;
    }

    static void access$2300(com.android.server.inputmethod.InputMethodManagerService, int, com.android.internal.view.InlineSuggestionsRequestInfo, com.android.internal.view.IInlineSuggestionsRequestCallback)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        com.android.internal.view.InlineSuggestionsRequestInfo r1;
        com.android.internal.view.IInlineSuggestionsRequestCallback r2;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.internal.view.InlineSuggestionsRequestInfo;

        r2 := @parameter3: com.android.internal.view.IInlineSuggestionsRequestCallback;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void onCreateInlineSuggestionsRequest(int,com.android.internal.view.InlineSuggestionsRequestInfo,com.android.internal.view.IInlineSuggestionsRequestCallback)>(i0, r1, r2);

        return;
    }

    static boolean access$2400(com.android.server.inputmethod.InputMethodManagerService, java.lang.String, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean switchToInputMethod(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    static java.util.concurrent.CopyOnWriteArrayList access$2500(com.android.server.inputmethod.InputMethodManagerService)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.concurrent.CopyOnWriteArrayList mInputMethodListListeners>;

        return $r1;
    }

    static boolean access$2600(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean transferTouchFocusToImeWindow(android.os.IBinder,int)>(r1, i0);

        return $z0;
    }

    static void access$2700(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void reportImeControl(android.os.IBinder)>(r1);

        return;
    }

    static int access$2800(com.android.server.inputmethod.InputMethodManagerService, android.os.ShellCommand)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.ShellCommand r1;
        int $i0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.ShellCommand;

        $i0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: int getLastSwitchUserId(android.os.ShellCommand)>(r1);

        return $i0;
    }

    static int access$2900(com.android.server.inputmethod.InputMethodManagerService, android.os.ShellCommand)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.ShellCommand r1;
        int $i0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.ShellCommand;

        $i0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: int handleShellCommandListInputMethods(android.os.ShellCommand)>(r1);

        return $i0;
    }

    static boolean access$300(com.android.server.inputmethod.InputMethodManagerService)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        $z0 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mAccessibilityRequestingNoSoftKeyboard>;

        return $z0;
    }

    static int access$3000(com.android.server.inputmethod.InputMethodManagerService, android.os.ShellCommand, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.ShellCommand r1;
        boolean z0;
        int $i0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.ShellCommand;

        z0 := @parameter2: boolean;

        $i0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: int handleShellCommandEnableDisableInputMethod(android.os.ShellCommand,boolean)>(r1, z0);

        return $i0;
    }

    static boolean access$302(com.android.server.inputmethod.InputMethodManagerService, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mAccessibilityRequestingNoSoftKeyboard> = z0;

        return z0;
    }

    static int access$3100(com.android.server.inputmethod.InputMethodManagerService, android.os.ShellCommand)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.ShellCommand r1;
        int $i0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.ShellCommand;

        $i0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: int handleShellCommandSetInputMethod(android.os.ShellCommand)>(r1);

        return $i0;
    }

    static int access$3200(com.android.server.inputmethod.InputMethodManagerService, android.os.ShellCommand)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.ShellCommand r1;
        int $i0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.ShellCommand;

        $i0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: int handleShellCommandResetInputMethod(android.os.ShellCommand)>(r1);

        return $i0;
    }

    static void access$3300(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder, int, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        int i0, i1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setImeWindowStatus(android.os.IBinder,int,int)>(r1, i0, i1);

        return;
    }

    static void access$3400(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder, android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1, r2;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: android.os.IBinder;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void reportStartInput(android.os.IBinder,android.os.IBinder)>(r1, r2);

        return;
    }

    static com.android.internal.inputmethod.IInputContentUriToken access$3500(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder, android.net.Uri, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        android.net.Uri r2;
        java.lang.String r3;
        com.android.internal.inputmethod.IInputContentUriToken $r4;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: android.net.Uri;

        r3 := @parameter3: java.lang.String;

        $r4 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.os.IBinder,android.net.Uri,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    static void access$3600(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        boolean z0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void reportFullscreenMode(android.os.IBinder,boolean)>(r1, z0);

        return;
    }

    static void access$3700(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setInputMethod(android.os.IBinder,java.lang.String)>(r1, r2);

        return;
    }

    static void access$3800(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder, java.lang.String, android.view.inputmethod.InputMethodSubtype)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        java.lang.String r2;
        android.view.inputmethod.InputMethodSubtype r3;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.view.inputmethod.InputMethodSubtype;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>(r1, r2, r3);

        return;
    }

    static void access$3900(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        int i0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void hideMySoftInput(android.os.IBinder,int)>(r1, i0);

        return;
    }

    static void access$400(com.android.server.inputmethod.InputMethodManagerService, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void resetSelectedInputMethodAndSubtypeLocked(java.lang.String)>(r1);

        return;
    }

    static void access$4000(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        int i0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void showMySoftInput(android.os.IBinder,int)>(r1, i0);

        return;
    }

    static void access$4100(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder, java.lang.String, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        java.lang.String r2;
        int i0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>(r1, r2, i0);

        return;
    }

    static boolean access$4200(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean switchToPreviousInputMethod(android.os.IBinder)>(r1);

        return $z0;
    }

    static boolean access$4300(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        boolean z0, $z1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        $z1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean switchToNextInputMethod(android.os.IBinder,boolean)>(r1, z0);

        return $z1;
    }

    static boolean access$4400(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>(r1);

        return $z0;
    }

    static void access$4500(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void notifyUserAction(android.os.IBinder)>(r1);

        return;
    }

    static void access$4600(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder, android.view.inputmethod.EditorInfo)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        android.view.inputmethod.EditorInfo r2;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: android.view.inputmethod.EditorInfo;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void reportPreRendered(android.os.IBinder,android.view.inputmethod.EditorInfo)>(r1, r2);

        return;
    }

    static void access$4700(com.android.server.inputmethod.InputMethodManagerService, android.os.IBinder, android.os.IBinder, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1, r2;
        boolean z0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: android.os.IBinder;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void applyImeVisibility(android.os.IBinder,android.os.IBinder,boolean)>(r1, r2, z0);

        return;
    }

    static boolean access$500(com.android.server.inputmethod.InputMethodManagerService)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean chooseNewDefaultIMELocked()>();

        return $z0;
    }

    static android.util.ArrayMap access$600(com.android.server.inputmethod.InputMethodManagerService)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mAdditionalSubtypeMap>;

        return $r1;
    }

    static boolean access$700(com.android.server.inputmethod.InputMethodManagerService, java.lang.String, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.lang.String r1;
        boolean z0, $z1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $z1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>(r1, z0);

        return $z1;
    }

    static android.content.pm.IPackageManager access$800(com.android.server.inputmethod.InputMethodManagerService)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.content.pm.IPackageManager $r1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager>;

        return $r1;
    }

    static void access$900(com.android.server.inputmethod.InputMethodManagerService, int, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateSystemUiLocked(int,int)>(i0, i1);

        return;
    }

    private void applyImeVisibility(android.os.IBinder, android.os.IBinder, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1, $r6, $r12, r14;
        boolean z0, $z1;
        android.util.ArrayMap r2;
        java.util.WeakHashMap $r3, $r8;
        com.android.server.wm.WindowManagerInternal $r4, $r9;
        java.lang.Object $r5, $r10;
        com.android.server.inputmethod.InputMethodManagerService$ClientState $r7, $r11;
        int $i0;
        java.lang.Throwable $r13;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r14 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r2;

     label01:
        $z1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r14);

        if $z1 != 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        if z0 != 0 goto label06;

     label04:
        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        if $r7 == null goto label07;

        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.WeakHashMap mHideRequestWindowMap>;

        $r10 = virtualinvoke $r8.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r12 = (android.os.IBinder) $r10;

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $i0 = $r11.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        virtualinvoke $r9.<com.android.server.wm.WindowManagerInternal: void hideIme(android.os.IBinder,int)>($r12, $i0);

     label05:
        goto label07;

     label06:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.WeakHashMap mShowRequestWindowMap>;

        $r5 = virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (android.os.IBinder) $r5;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerInternal: void showImePostLayout(android.os.IBinder)>($r6);

     label07:
        exitmonitor r2;

     label08:
        return;

     label09:
        $r13 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private boolean bindCurrentInputMethodServiceLocked(android.content.Intent, android.content.ServiceConnection, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.content.Intent r1;
        android.content.ServiceConnection r2;
        int i0, $i2;
        java.lang.StringBuilder $r4;
        java.lang.String $r9;
        android.os.UserHandle $r10;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r11;
        android.content.Context $r12;
        boolean $z0;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.ServiceConnection;

        i0 := @parameter2: int;

        if r1 == null goto label2;

        if r2 != null goto label1;

        goto label2;

     label1:
        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r10 = new android.os.UserHandle;

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i2 = virtualinvoke $r11.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        specialinvoke $r10.<android.os.UserHandle: void <init>(int)>($i2);

        $z0 = virtualinvoke $r12.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r1, r2, i0, $r10);

        return $z0;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- bind failed: service = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", conn = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", $r9);

        return 0;
    }

    private boolean calledFromValidUserLocked()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, i1, $i2, $i3;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r2;
        android.content.Context $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r8;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        if i0 != 1000 goto label1;

        return 1;

     label1:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i2 = virtualinvoke $r2.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        if i1 != $i2 goto label2;

        return 1;

     label2:
        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $i3 = virtualinvoke $r3.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i3 != 0 goto label3;

        return 1;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- IPC called from background users. Ignore. callers=");

        $r6 = staticinvoke <android.os.Debug: java.lang.String getCallers(int)>(10);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r8);

        return 0;
    }

    private boolean calledWithValidTokenLocked(android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1, $r4;
        java.security.InvalidParameterException $r3;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r13;
        int $i0;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter0: android.os.IBinder;

        if r1 == null goto label2;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken>;

        if r1 == $r4 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring ");

        $r7 = staticinvoke <android.os.Debug: java.lang.String getCaller()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to an invalid token. uid:");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token:");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", $r13);

        return 0;

     label1:
        return 1;

     label2:
        $r3 = new java.security.InvalidParameterException;

        specialinvoke $r3.<java.security.InvalidParameterException: void <init>(java.lang.String)>("token must not be null.");

        throw $r3;
    }

    private boolean canShowInputMethodPickerLocked(com.android.internal.view.IInputMethodClient)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        com.android.server.inputmethod.InputMethodManagerService$ClientState r1;
        android.app.AppOpsManager $r2;
        android.content.ComponentName $r3;
        java.lang.String $r4;
        boolean $z0;
        com.android.internal.view.IInputMethodClient $r5, r8;
        android.os.IBinder $r6, $r7;
        android.content.Intent r9;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r8 := @parameter0: com.android.internal.view.IInputMethodClient;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurFocusedWindowClient>;

        if r1 == null goto label1;

        if r8 == null goto label1;

        $r5 = r1.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r6 = interfaceinvoke $r5.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r7 = interfaceinvoke r8.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        if $r6 != $r7 goto label1;

        return 1;

     label1:
        r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent>;

        if r9 == null goto label2;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AppOpsManager mAppOpsManager>;

        $r3 = virtualinvoke r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean checkIfPackageBelongsToUid(android.app.AppOpsManager,int,java.lang.String)>($r2, i0, $r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean chooseNewDefaultIMELocked()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.view.inputmethod.InputMethodInfo r1;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r2;
        java.util.ArrayList $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r3 = virtualinvoke $r2.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        r1 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodInfo getMostApplicableDefaultIME(java.util.List)>($r3);

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void resetSelectedInputMethodAndSubtypeLocked(java.lang.String)>($r4);

        return 1;

     label1:
        return 0;
    }

    static int computeImeDisplayIdForTarget(int, com.android.server.inputmethod.InputMethodManagerService$ImeDisplayValidator)
    {
        int i0, i1;
        com.android.server.inputmethod.InputMethodManagerService$ImeDisplayValidator r0;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.server.inputmethod.InputMethodManagerService$ImeDisplayValidator;

        i1 = 0;

        if i0 == 0 goto label3;

        if i0 != -1 goto label1;

        goto label3;

     label1:
        $z0 = interfaceinvoke r0.<com.android.server.inputmethod.InputMethodManagerService$ImeDisplayValidator: boolean displayCanShowIme(int)>(i0);

        if $z0 == 0 goto label2;

        i1 = i0;

     label2:
        return i1;

     label3:
        return 0;
    }

    private com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.os.IBinder, android.net.Uri, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.lang.String r1, $r6, $r7, $r9, $r12, $r16, $r20, $r26;
        android.util.ArrayMap r2;
        int i0, i1, $i2, i5, i6;
        java.lang.NullPointerException $r3, $r4, $r5;
        boolean $z0, $z1;
        java.security.InvalidParameterException $r8;
        android.os.IBinder $r10, $r22, r28;
        android.view.inputmethod.EditorInfo $r11, $r15;
        com.android.server.inputmethod.InputMethodManagerService$ClientState $r13;
        java.lang.Throwable $r27;
        android.net.Uri r29, r32;
        java.lang.StringBuilder r30, r31;
        com.android.server.inputmethod.InputContentUriTokenHandler r33;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r28 := @parameter0: android.os.IBinder;

        r29 := @parameter1: android.net.Uri;

        r1 := @parameter2: java.lang.String;

        if r28 == null goto label15;

        if r1 == null goto label14;

        if r29 == null goto label13;

        $r6 = "content";

        $r7 = virtualinvoke r29.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label12;

        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r2;

     label01:
        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        if $r9 != null goto label03;

        exitmonitor r2;

     label02:
        return null;

     label03:
        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken>;

        if $r10 == r28 goto label05;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring createInputContentUriToken mCurToken=");

        $r22 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken>;

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token=");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r26 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", $r26);

        exitmonitor r2;

     label04:
        return null;

     label05:
        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.EditorInfo mCurAttribute>;

        $r12 = $r11.<android.view.inputmethod.EditorInfo: java.lang.String packageName>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r12, r1);

        if $z1 != 0 goto label07;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring createInputContentUriToken mCurAttribute.packageName=");

        $r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.EditorInfo mCurAttribute>;

        $r16 = $r15.<android.view.inputmethod.EditorInfo: java.lang.String packageName>;

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packageName=");

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", $r20);

        exitmonitor r2;

     label06:
        return null;

     label07:
        i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $i2 = $r13.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        i6 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r29, i5);

        r32 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r29);

        r33 = new com.android.server.inputmethod.InputContentUriTokenHandler;

        specialinvoke r33.<com.android.server.inputmethod.InputContentUriTokenHandler: void <init>(android.net.Uri,int,java.lang.String,int,int)>(r32, i0, r1, i6, i1);

        exitmonitor r2;

     label08:
        return r33;

     label09:
        $r27 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r27;

     label12:
        $r8 = new java.security.InvalidParameterException;

        specialinvoke $r8.<java.security.InvalidParameterException: void <init>(java.lang.String)>("contentUri must have content scheme");

        throw $r8;

     label13:
        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("contentUri");

        throw $r5;

     label14:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("packageName");

        throw $r4;

     label15:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("token");

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void finishSessionLocked(com.android.server.inputmethod.InputMethodManagerService$SessionState)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        com.android.server.inputmethod.InputMethodManagerService$SessionState r1;
        com.android.internal.view.IInputMethodSession $r3, $r5;
        android.view.InputChannel $r4, $r7;
        android.os.RemoteException $r6;
        int $i1;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter0: com.android.server.inputmethod.InputMethodManagerService$SessionState;

        if r1 == null goto label6;

        $r3 = r1.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        if $r3 == null goto label5;

     label1:
        $r5 = r1.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void finishSession()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", "Session failed to close due to remote exception", $r6);

        $i1 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mBackDisposition>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateSystemUiLocked(int,int)>(0, $i1);

     label4:
        r1.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session> = null;

     label5:
        $r7 = r1.<com.android.server.inputmethod.InputMethodManagerService$SessionState: android.view.InputChannel channel>;

        if $r7 == null goto label6;

        $r4 = r1.<com.android.server.inputmethod.InputMethodManagerService$SessionState: android.view.InputChannel channel>;

        virtualinvoke $r4.<android.view.InputChannel: void dispose()>();

        r1.<com.android.server.inputmethod.InputMethodManagerService$SessionState: android.view.InputChannel channel> = null;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private android.graphics.Matrix getActivityViewToScreenMatrixLocked(int, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i1, i2;
        com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        android.graphics.Matrix $r4, $r7, $r8, r9;
        com.android.server.inputmethod.InputMethodManagerService$ClientState $r5, $r6;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        if i2 != i0 goto label1;

        return null;

     label1:
        r9 = null;

     label2:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.SparseArray mActivityViewDisplayIdToParentMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo) $r3;

        if r1 != null goto label3;

        return null;

     label3:
        if r9 != null goto label4;

        $r7 = new android.graphics.Matrix;

        $r8 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: android.graphics.Matrix access$1800(com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo)>(r1);

        specialinvoke $r7.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r8);

        r9 = $r7;

        goto label5;

     label4:
        $r4 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: android.graphics.Matrix access$1800(com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo)>(r1);

        virtualinvoke r9.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r4);

     label5:
        $r5 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: com.android.server.inputmethod.InputMethodManagerService$ClientState access$1700(com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo)>(r1);

        $i1 = $r5.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        if $i1 != i0 goto label6;

        return r9;

     label6:
        $r6 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: com.android.server.inputmethod.InputMethodManagerService$ClientState access$1700(com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo)>(r1);

        i2 = $r6.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        goto label2;
    }

    private int getAppShowFlags()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean $z0, $z1;
        byte b0;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        b0 = 0;

        $z0 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowForced>;

        if $z0 == 0 goto label1;

        b0 = 0 | 2;

        goto label2;

     label1:
        $z1 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowExplicitlyRequested>;

        if $z1 != 0 goto label2;

        b0 = 0 | 1;

     label2:
        return b0;
    }

    private android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtypeLocked()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean z0, $z1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r1, $r3, $r19;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r2, $r10, $r18;
        android.util.ArrayMap $r4;
        java.lang.Object $r5, $r7, $r14;
        java.util.ArrayList $r6;
        android.view.inputmethod.InputMethodSubtype $r8, $r13, $r15, r17, r21, $r22;
        android.content.Context $r9;
        android.content.res.Resources $r11, $r12;
        android.view.inputmethod.InputMethodInfo r16;
        java.util.List r20;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        z0 = virtualinvoke $r2.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean isSubtypeSelected()>();

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        r16 = (android.view.inputmethod.InputMethodInfo) $r5;

        if r16 == null goto label8;

        $i1 = virtualinvoke r16.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        if $i1 != 0 goto label2;

        goto label8;

     label2:
        if z0 == 0 goto label3;

        r17 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        if r17 == null goto label3;

        $i4 = virtualinvoke r17.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        $z1 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean isValidSubtypeId(android.view.inputmethod.InputMethodInfo,int)>(r16, $i4);

        if $z1 != 0 goto label7;

     label3:
        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r19 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        i0 = virtualinvoke $r18.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getSelectedInputMethodSubtypeId(java.lang.String)>($r19);

        if i0 != -1 goto label6;

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        r20 = virtualinvoke $r10.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.content.Context,android.view.inputmethod.InputMethodInfo,boolean)>($r9, r16, 1);

        $i2 = interfaceinvoke r20.<java.util.List: int size()>();

        if $i2 != 1 goto label4;

        $r14 = interfaceinvoke r20.<java.util.List: java.lang.Object get(int)>(0);

        $r15 = (android.view.inputmethod.InputMethodSubtype) $r14;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = $r15;

        goto label5;

     label4:
        $i3 = interfaceinvoke r20.<java.util.List: int size()>();

        if $i3 <= 1 goto label5;

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.res.Resources mRes>;

        r21 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources,java.util.List,java.lang.String,java.lang.String,boolean)>($r11, r20, "keyboard", null, 1);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = r21;

        if r21 != null goto label5;

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.res.Resources mRes>;

        $r13 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources,java.util.List,java.lang.String,java.lang.String,boolean)>($r12, r20, null, null, 1);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = $r13;

     label5:
        goto label7;

     label6:
        $r6 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.util.ArrayList getSubtypes(android.view.inputmethod.InputMethodInfo)>(r16);

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r8 = (android.view.inputmethod.InputMethodSubtype) $r7;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = $r8;

     label7:
        $r22 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        return $r22;

     label8:
        return null;
    }

    private java.util.List getEnabledInputMethodListAsUser(int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        android.util.ArrayMap r1;
        java.lang.Throwable $r2;
        java.util.List r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label1:
        r3 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.List getEnabledInputMethodListLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private java.util.List getEnabledInputMethodListLocked(int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i1;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r4, $r9, $r15;
        android.util.ArrayMap $r5, $r7;
        java.util.ArrayList $r6, $r14, $r16;
        android.content.Context $r8, $r10, $r12;
        android.content.res.Resources $r11;
        android.content.ContentResolver $r13;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i1 = virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        if i0 != $i1 goto label1;

        $r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r16 = virtualinvoke $r15.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        return $r16;

     label1:
        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: void load(android.util.ArrayMap,int)>($r7, i0);

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        staticinvoke <com.android.server.inputmethod.InputMethodManagerService: void queryInputMethodServicesInternal(android.content.Context,int,android.util.ArrayMap,android.util.ArrayMap,java.util.ArrayList)>($r8, i0, $r7, $r5, $r6);

        $r9 = new com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        specialinvoke $r9.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void <init>(android.content.res.Resources,android.content.ContentResolver,android.util.ArrayMap,int,boolean)>($r11, $r13, $r5, i0, 1);

        $r14 = virtualinvoke $r9.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        return $r14;
    }

    private java.util.List getEnabledInputMethodSubtypeListLocked(java.lang.String, boolean, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean z0;
        int i0, $i1;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r3, $r9, $r20;
        android.util.ArrayMap $r4, $r6, $r17, $r23;
        java.util.ArrayList $r5;
        android.content.Context $r7, $r10, $r12, $r14, $r19;
        java.lang.Object $r8, $r18, $r24;
        android.content.res.Resources $r11;
        android.content.ContentResolver $r13;
        java.util.List $r15, $r16, $r21, $r22;
        java.lang.String r25, r26;
        android.view.inputmethod.InputMethodInfo r27, r29;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r25 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i1 = virtualinvoke $r3.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        if i0 != $i1 goto label4;

        if r25 != null goto label1;

        r26 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        if r26 == null goto label1;

        $r23 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r24 = virtualinvoke $r23.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r26);

        r27 = (android.view.inputmethod.InputMethodInfo) $r24;

        goto label2;

     label1:
        $r17 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r18 = virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r25);

        r27 = (android.view.inputmethod.InputMethodInfo) $r18;

     label2:
        if r27 != null goto label3;

        $r22 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r22;

     label3:
        $r20 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r19 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r21 = virtualinvoke $r20.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.content.Context,android.view.inputmethod.InputMethodInfo,boolean)>($r19, r27, z0);

        return $r21;

     label4:
        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: void load(android.util.ArrayMap,int)>($r6, i0);

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        staticinvoke <com.android.server.inputmethod.InputMethodManagerService: void queryInputMethodServicesInternal(android.content.Context,int,android.util.ArrayMap,android.util.ArrayMap,java.util.ArrayList)>($r7, i0, $r6, $r4, $r5);

        $r8 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r25);

        r29 = (android.view.inputmethod.InputMethodInfo) $r8;

        if r29 != null goto label5;

        $r16 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r16;

     label5:
        $r9 = new com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        specialinvoke $r9.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void <init>(android.content.res.Resources,android.content.ContentResolver,android.util.ArrayMap,int,boolean)>($r11, $r13, $r4, i0, 1);

        $r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r15 = virtualinvoke $r9.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.content.Context,android.view.inputmethod.InputMethodInfo,boolean)>($r14, r29, z0);

        return $r15;
    }

    private int getImeShowFlags()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean $z0, $z1;
        byte b0;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        b0 = 0;

        $z0 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowForced>;

        if $z0 == 0 goto label1;

        b0 = 0 | 3;

        goto label2;

     label1:
        $z1 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowExplicitlyRequested>;

        if $z1 == 0 goto label2;

        b0 = 0 | 1;

     label2:
        return b0;
    }

    private java.util.List getInputMethodListAsUser(int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        android.util.ArrayMap r1;
        java.lang.Throwable $r2;
        java.util.List r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label1:
        r3 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.List getInputMethodListLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private java.util.List getInputMethodListLocked(int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i1;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r3;
        android.util.ArrayMap $r4, $r6;
        java.util.ArrayList $r5, $r8, $r9, r10;
        android.content.Context $r7;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i1 = virtualinvoke $r3.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        if i0 != $i1 goto label1;

        $r8 = new java.util.ArrayList;

        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.ArrayList mMethodList>;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        r10 = $r8;

        goto label2;

     label1:
        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r10 = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: void load(android.util.ArrayMap,int)>($r6, i0);

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        staticinvoke <com.android.server.inputmethod.InputMethodManagerService: void queryInputMethodServicesInternal(android.content.Context,int,android.util.ArrayMap,android.util.ArrayMap,java.util.ArrayList)>($r7, i0, $r6, $r4, $r5);

     label2:
        return r10;
    }

    private int getLastSwitchUserId(android.os.ShellCommand)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1;
        java.io.PrintWriter $r2;
        int $i0;
        java.lang.Throwable $r3;
        android.os.ShellCommand r4;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r4 := @parameter0: android.os.ShellCommand;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label1:
        $r2 = virtualinvoke r4.<android.os.ShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $i0 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mLastSwitchUserId>;

        virtualinvoke $r2.<java.io.PrintWriter: void println(int)>($i0);

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private static int handleOptionsForCommandsThatOnlyHaveUserOption(android.os.ShellCommand)
    {
        android.os.ShellCommand r0;
        java.lang.String r1, $r2;
        int i0, $i1;
        boolean $z0, $z1;
        byte b2;

        r0 := @parameter0: android.os.ShellCommand;

     label1:
        r1 = virtualinvoke r0.<android.os.ShellCommand: java.lang.String getNextOption()>();

        if r1 != null goto label2;

        return -2;

     label2:
        b2 = -1;

        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i0 == 1512 goto label5;

        if i0 == 1333469547 goto label4;

     label3:
        goto label6;

     label4:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z1 == 0 goto label3;

        b2 = 1;

        goto label6;

     label5:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-u");

        if $z0 == 0 goto label3;

        b2 = 0;

     label6:
        if b2 == 0 goto label7;

        if b2 == 1 goto label7;

        goto label1;

     label7:
        $r2 = virtualinvoke r0.<android.os.ShellCommand: java.lang.String getNextArgRequired()>();

        $i1 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r2);

        return $i1;
    }

    private void handleSetInteractive(boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean z0, $z1, $z2;
        android.util.ArrayMap r1;
        com.android.internal.os.HandlerCaller r2;
        int $i0, i2;
        com.android.server.inputmethod.InputMethodManagerService$ClientState $r3, $r4, $r6, $r7;
        com.android.internal.view.IInputMethodClient $r5, r10;
        android.os.Message $r8;
        java.lang.Throwable $r9;
        byte b1, b3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mIsInteractive> = z0;

     label02:
        b1 = 0;

        if z0 == 0 goto label05;

     label03:
        i2 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mImeWindowVis>;

     label04:
        goto label06;

     label05:
        i2 = 0;

     label06:
        $i0 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mBackDisposition>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateSystemUiLocked(int,int)>(i2, $i0);

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        if $r3 == null goto label12;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r5 = $r4.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        if $r5 == null goto label12;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        r10 = $r6.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $z1 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mIsInteractive>;

        if $z1 == 0 goto label08;

     label07:
        b3 = 1;

        goto label09;

     label08:
        b3 = 0;

     label09:
        $z2 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInFullscreenMode>;

        if $z2 == 0 goto label11;

     label10:
        b1 = 1;

     label11:
        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r8 = virtualinvoke r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIO(int,int,int,java.lang.Object)>(3020, b3, b1, $r7);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>(r10, $r8);

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r9 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    private int handleShellCommandEnableDisableInputMethod(android.os.ShellCommand, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean z0, $z1;
        java.lang.String r1;
        java.io.PrintWriter r2, r3, $r7;
        android.util.ArrayMap r4;
        int[] r5;
        int i0, i1, $i2, i3, i4;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r6;
        java.lang.Throwable $r8;
        android.os.ShellCommand r9;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r9 := @parameter0: android.os.ShellCommand;

        z0 := @parameter1: boolean;

        i3 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService: int handleOptionsForCommandsThatOnlyHaveUserOption(android.os.ShellCommand)>(r9);

        r1 = virtualinvoke r9.<android.os.ShellCommand: java.lang.String getNextArgRequired()>();

        r2 = virtualinvoke r9.<android.os.ShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r3 = virtualinvoke r9.<android.os.ShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r4;

     label01:
        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i2 = virtualinvoke $r6.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r7 = virtualinvoke r9.<android.os.ShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        r5 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int[] resolveUserId(int,int,java.io.PrintWriter)>(i3, $i2, $r7);

        i0 = lengthof r5;

     label02:
        i4 = 0;

     label03:
        if i4 >= i0 goto label08;

        i1 = r5[i4];

     label04:
        $z1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean userHasDebugPriv(int,android.os.ShellCommand)>(i1, r9);

        if $z1 != 0 goto label06;

     label05:
        goto label07;

     label06:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void handleShellCommandEnableDisableInputMethodInternalLocked(int,java.lang.String,boolean,java.io.PrintWriter,java.io.PrintWriter)>(i1, r1, z0, r2, r3);

     label07:
        i4 = i4 + 1;

        goto label03;

     label08:
        exitmonitor r4;

     label09:
        return 0;

     label10:
        $r8 := @caughtexception;

     label11:
        exitmonitor r4;

     label12:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private void handleShellCommandEnableDisableInputMethodInternalLocked(int, java.lang.String, boolean, java.io.PrintWriter, java.io.PrintWriter)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i1;
        boolean z0, $z2, $z3, $z4, $z5, z8, z9, z10;
        java.io.PrintWriter r1, r2;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r4, $r9;
        android.util.ArrayMap $r5, $r7, $r24;
        java.util.ArrayList $r6, $r20;
        android.content.Context $r8, $r10, $r12;
        android.content.res.Resources $r11;
        android.content.ContentResolver $r13;
        java.lang.StringBuilder $r14, $r16;
        java.util.List $r15;
        java.lang.String $r19, $r23, r25, r31, r32;
        java.lang.Object $r21;
        android.view.inputmethod.InputMethodInfo $r22;
        java.util.Iterator r29;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        r25 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.io.PrintWriter;

        r2 := @parameter4: java.io.PrintWriter;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i1 = virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        if i0 != $i1 goto label02;

        if z0 == 0 goto label01;

        $r24 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $z5 = virtualinvoke $r24.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r25);

        if $z5 != 0 goto label01;

        z8 = 1;

        z9 = 0;

        goto label08;

     label01:
        z9 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>(r25, z0);

        z8 = 0;

        goto label08;

     label02:
        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: void load(android.util.ArrayMap,int)>($r7, i0);

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        staticinvoke <com.android.server.inputmethod.InputMethodManagerService: void queryInputMethodServicesInternal(android.content.Context,int,android.util.ArrayMap,android.util.ArrayMap,java.util.ArrayList)>($r8, i0, $r7, $r5, $r6);

        $r9 = new com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        specialinvoke $r9.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void <init>(android.content.res.Resources,android.content.ContentResolver,android.util.ArrayMap,int,boolean)>($r11, $r13, $r5, i0, 0);

        if z0 == 0 goto label07;

        $z2 = virtualinvoke $r5.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r25);

        if $z2 != 0 goto label03;

        z8 = 1;

        z9 = 0;

        goto label08;

     label03:
        $r20 = virtualinvoke $r9.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        r29 = virtualinvoke $r20.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        z10 = 0;

        $z3 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label06;

        $r21 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        $r22 = (android.view.inputmethod.InputMethodInfo) $r21;

        $r23 = virtualinvoke $r22.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r23, r25);

        if $z4 == 0 goto label05;

        z10 = 1;

        goto label06;

     label05:
        goto label04;

     label06:
        z8 = 0;

        z9 = z10;

        if z10 != 0 goto label08;

        virtualinvoke $r9.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void appendAndPutEnabledInputMethodLocked(java.lang.String,boolean)>(r25, 0);

        z8 = 0;

        z9 = z10;

        goto label08;

     label07:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r9.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodsAndSubtypeListLocked()>();

        z9 = virtualinvoke $r9.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean buildAndPutEnabledInputMethodsStrRemovingIdLocked(java.lang.StringBuilder,java.util.List,java.lang.String)>($r14, $r15, r25);

        z8 = 0;

     label08:
        if z8 == 0 goto label09;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Unknown input method ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r25);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be enabled for user #");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        goto label14;

     label09:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Input method ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r25);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        if z0 != z9 goto label10;

        r31 = "already ";

        goto label11;

     label10:
        r31 = "now ";

     label11:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        if z0 == 0 goto label12;

        r32 = "enabled";

        goto label13;

     label12:
        r32 = "disabled";

     label13:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r32);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" for user #");

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>(i0);

     label14:
        return;
    }

    private int handleShellCommandListInputMethods(android.os.ShellCommand)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.io.PrintWriter r1, $r7;
        int[] r2;
        android.view.inputmethod.InputMethodInfo r3;
        com.android.server.inputmethod._$$Lambda$Z2NtIIfW6UZqUgiVBM1fNETGPS8 r4;
        boolean $z0, $z1, $z2, $z3, z4, z5, $z6;
        java.lang.String $r5, $r9, $r11, r14;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r6;
        int $i0, $i1, i2, i4, i5, i6, i7;
        java.lang.Object $r8;
        java.lang.Throwable $r12;
        android.os.ShellCommand r13;
        byte b3;
        android.util.ArrayMap r15;
        java.util.List r16;
        java.util.Iterator r17;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r13 := @parameter0: android.os.ShellCommand;

        i2 = -2;

        z4 = 0;

        z5 = 0;

     label01:
        r14 = virtualinvoke r13.<android.os.ShellCommand: java.lang.String getNextOption()>();

        b3 = 0;

        if r14 != null goto label22;

        r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r15;

     label02:
        r1 = virtualinvoke r13.<android.os.ShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i0 = virtualinvoke $r6.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r7 = virtualinvoke r13.<android.os.ShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        r2 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int[] resolveUserId(int,int,java.io.PrintWriter)>(i2, $i0, $r7);

        i4 = lengthof r2;

     label03:
        i5 = 0;

     label04:
        if i5 >= i4 goto label17;

        i6 = r2[i5];

        if z5 == 0 goto label07;

     label05:
        r16 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.List getInputMethodListLocked(int)>(i6);

     label06:
        goto label08;

     label07:
        r16 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.List getEnabledInputMethodListLocked(int)>(i6);

     label08:
        $i1 = lengthof r2;

        if $i1 <= 1 goto label09;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("User #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i6);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

     label09:
        r17 = interfaceinvoke r16.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z6 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label16;

        $r8 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.view.inputmethod.InputMethodInfo) $r8;

     label11:
        if z4 == 0 goto label14;

     label12:
        $r11 = virtualinvoke r3.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

     label13:
        goto label15;

     label14:
        $r9 = virtualinvoke r3.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r9);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        r4 = new com.android.server.inputmethod._$$Lambda$Z2NtIIfW6UZqUgiVBM1fNETGPS8;

        specialinvoke r4.<com.android.server.inputmethod._$$Lambda$Z2NtIIfW6UZqUgiVBM1fNETGPS8: void <init>(java.io.PrintWriter)>(r1);

        virtualinvoke r3.<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)>(r4, "  ");

     label15:
        goto label10;

     label16:
        i5 = i5 + 1;

        goto label04;

     label17:
        exitmonitor r15;

     label18:
        return 0;

     label19:
        $r12 := @caughtexception;

     label20:
        exitmonitor r15;

     label21:
        throw $r12;

     label22:
        i7 = virtualinvoke r14.<java.lang.String: int hashCode()>();

        if i7 == 1492 goto label27;

        if i7 == 1510 goto label26;

        if i7 == 1512 goto label25;

        if i7 == 1333469547 goto label24;

     label23:
        goto label28;

     label24:
        $z3 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z3 == 0 goto label23;

        b3 = 3;

        goto label29;

     label25:
        $z2 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("-u");

        if $z2 == 0 goto label23;

        b3 = 2;

        goto label29;

     label26:
        $z1 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z1 == 0 goto label23;

        b3 = 1;

        goto label29;

     label27:
        $z0 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("-a");

        if $z0 == 0 goto label23;

        goto label29;

     label28:
        b3 = -1;

     label29:
        if b3 == 0 goto label32;

        if b3 == 1 goto label31;

        if b3 == 2 goto label30;

        if b3 == 3 goto label30;

        goto label33;

     label30:
        $r5 = virtualinvoke r13.<android.os.ShellCommand: java.lang.String getNextArgRequired()>();

        i2 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r5);

        goto label33;

     label31:
        z4 = 1;

        goto label33;

     label32:
        z5 = 1;

     label33:
        goto label01;

        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    private int handleShellCommandResetInputMethod(android.os.ShellCommand)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.io.PrintWriter r1, $r6;
        android.util.ArrayMap r2, r43, r45;
        int[] r3;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        com.android.server.inputmethod._$$Lambda$InputMethodManagerService$fNiO49PxZWEh32vCF6nuqhrDtOw r4;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r5, $r7, $r22, $r23, $r26, $r29, $r32, $r33, r46;
        boolean $z0;
        android.content.Context $r8, $r9, $r11, $r13, $r25, $r30;
        android.content.res.Resources $r10;
        android.content.ContentResolver $r12;
        android.view.inputmethod.InputMethodInfo $r14;
        java.lang.String $r17, $r20, $r31, r41;
        android.os.IBinder $r21;
        java.util.ArrayList $r24, $r28, r37, r39, r42, r44;
        android.content.pm.IPackageManager $r27;
        java.lang.Throwable $r34, $r35, r50;
        android.os.ShellCommand r36;
        com.android.server.inputmethod._$$Lambda$InputMethodManagerService$_9_NV9_J24Jr9m_wcbQnLu0hhjU r38;
        com.android.server.inputmethod._$$Lambda$InputMethodManagerService$Ufznp6QtlvKmc_UE2qM5QE0C6tE r40;
        java.lang.StringBuilder r47, r48;
        com.android.server.inputmethod._$$Lambda$InputMethodManagerService$i1_7vZfXoh5fbjEb2f7kLcAViOU r49;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r36 := @parameter0: android.os.ShellCommand;

        r1 = virtualinvoke r36.<android.os.ShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        i5 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService: int handleOptionsForCommandsThatOnlyHaveUserOption(android.os.ShellCommand)>(r36);

        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r2;

     label01:
        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i2 = virtualinvoke $r5.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r6 = virtualinvoke r36.<android.os.ShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        r3 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int[] resolveUserId(int,int,java.io.PrintWriter)>(i5, $i2, $r6);

        i0 = lengthof r3;

     label02:
        i6 = 0;

     label03:
        if i6 >= i0 goto label11;

        i1 = r3[i6];

     label04:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean userHasDebugPriv(int,android.os.ShellCommand)>(i1, r36);

        if $z0 != 0 goto label06;

     label05:
        goto label10;

     label06:
        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i3 = virtualinvoke $r7.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        if i1 != $i3 goto label08;

        $r21 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean hideCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>($r21, 0, null, 14);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void unbindCurrentMethodLocked()>();

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void resetSelectedInputMethodAndSubtypeLocked(java.lang.String)>(null);

        $r22 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        virtualinvoke $r22.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putSelectedInputMethod(java.lang.String)>(null);

        $r23 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r37 = virtualinvoke $r23.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        r38 = new com.android.server.inputmethod._$$Lambda$InputMethodManagerService$_9_NV9_J24Jr9m_wcbQnLu0hhjU;

        specialinvoke r38.<com.android.server.inputmethod._$$Lambda$InputMethodManagerService$_9_NV9_J24Jr9m_wcbQnLu0hhjU: void <init>(com.android.server.inputmethod.InputMethodManagerService)>(r0);

        virtualinvoke r37.<java.util.ArrayList: void forEach(java.util.function.Consumer)>(r38);

        $r25 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r24 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.ArrayList mMethodList>;

        r39 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.util.ArrayList getDefaultEnabledImes(android.content.Context,java.util.ArrayList)>($r25, $r24);

        r40 = new com.android.server.inputmethod._$$Lambda$InputMethodManagerService$Ufznp6QtlvKmc_UE2qM5QE0C6tE;

        specialinvoke r40.<com.android.server.inputmethod._$$Lambda$InputMethodManagerService$Ufznp6QtlvKmc_UE2qM5QE0C6tE: void <init>(com.android.server.inputmethod.InputMethodManagerService)>(r0);

        virtualinvoke r39.<java.util.ArrayList: void forEach(java.util.function.Consumer)>(r40);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateInputMethodsFromSettingsLocked(boolean)>(1);

        $r27 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager>;

        $r26 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r28 = virtualinvoke $r26.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        $r29 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i4 = virtualinvoke $r29.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r30 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r31 = virtualinvoke $r30.<android.content.Context: java.lang.String getBasePackageName()>();

        staticinvoke <com.android.server.inputmethod.InputMethodUtils: void setNonSelectedSystemImesDisabledUntilUsed(android.content.pm.IPackageManager,java.util.List,int,java.lang.String)>($r27, $r28, $i4, $r31);

        $r32 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r41 = virtualinvoke $r32.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        $r33 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r42 = virtualinvoke $r33.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

     label07:
        goto label09;

     label08:
        r43 = new android.util.ArrayMap;

        specialinvoke r43.<android.util.ArrayMap: void <init>()>();

        r44 = new java.util.ArrayList;

        specialinvoke r44.<java.util.ArrayList: void <init>()>();

        r45 = new android.util.ArrayMap;

        specialinvoke r45.<android.util.ArrayMap: void <init>()>();

        staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: void load(android.util.ArrayMap,int)>(r45, i1);

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        staticinvoke <com.android.server.inputmethod.InputMethodManagerService: void queryInputMethodServicesInternal(android.content.Context,int,android.util.ArrayMap,android.util.ArrayMap,java.util.ArrayList)>($r8, i1, r45, r43, r44);

        r46 = new com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.res.Resources getResources()>();

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        specialinvoke r46.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void <init>(android.content.res.Resources,android.content.ContentResolver,android.util.ArrayMap,int,boolean)>($r10, $r12, r43, i1, 0);

        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        r42 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.util.ArrayList getDefaultEnabledImes(android.content.Context,java.util.ArrayList)>($r13, r44);

        $r14 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodInfo getMostApplicableDefaultIME(java.util.List)>(r42);

        r41 = virtualinvoke $r14.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke r46.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putEnabledInputMethodsStr(java.lang.String)>("");

        r4 = new com.android.server.inputmethod._$$Lambda$InputMethodManagerService$fNiO49PxZWEh32vCF6nuqhrDtOw;

        specialinvoke r4.<com.android.server.inputmethod._$$Lambda$InputMethodManagerService$fNiO49PxZWEh32vCF6nuqhrDtOw: void <init>(com.android.server.inputmethod.InputMethodUtils$InputMethodSettings)>(r46);

        interfaceinvoke r42.<java.util.List: void forEach(java.util.function.Consumer)>(r4);

        virtualinvoke r46.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putSelectedInputMethod(java.lang.String)>(r41);

        virtualinvoke r46.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putSelectedSubtype(int)>(-1);

     label09:
        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reset current and enabled IMEs for user #");

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r17 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Selected: ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r20 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        r49 = new com.android.server.inputmethod._$$Lambda$InputMethodManagerService$i1_7vZfXoh5fbjEb2f7kLcAViOU;

        specialinvoke r49.<com.android.server.inputmethod._$$Lambda$InputMethodManagerService$i1_7vZfXoh5fbjEb2f7kLcAViOU: void <init>(java.io.PrintWriter)>(r1);

        interfaceinvoke r42.<java.util.List: void forEach(java.util.function.Consumer)>(r49);

     label10:
        i6 = i6 + 1;

        goto label03;

     label11:
        exitmonitor r2;

     label12:
        return 0;

     label13:
        $r34 := @caughtexception;

        r50 = $r34;

     label14:
        exitmonitor r2;

     label15:
        throw r50;

     label16:
        $r35 := @caughtexception;

        r50 = $r35;

        goto label14;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
    }

    private int handleShellCommandSetInputMethod(android.os.ShellCommand)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.lang.String r1;
        java.io.PrintWriter r2, r3, $r7;
        android.util.ArrayMap r4;
        int[] r5;
        int i0, i1, $i2, i3, i4;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r6;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r8;
        android.os.ShellCommand r9;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r9 := @parameter0: android.os.ShellCommand;

        i3 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService: int handleOptionsForCommandsThatOnlyHaveUserOption(android.os.ShellCommand)>(r9);

        r1 = virtualinvoke r9.<android.os.ShellCommand: java.lang.String getNextArgRequired()>();

        r2 = virtualinvoke r9.<android.os.ShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r3 = virtualinvoke r9.<android.os.ShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r4;

     label01:
        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i2 = virtualinvoke $r6.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r7 = virtualinvoke r9.<android.os.ShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        r5 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int[] resolveUserId(int,int,java.io.PrintWriter)>(i3, $i2, $r7);

        i0 = lengthof r5;

     label02:
        i4 = 0;

     label03:
        if i4 >= i0 goto label10;

        i1 = r5[i4];

     label04:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean userHasDebugPriv(int,android.os.ShellCommand)>(i1, r9);

        if $z0 != 0 goto label06;

     label05:
        goto label09;

     label06:
        $z1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean switchToInputMethod(java.lang.String,int)>(r1, i1);

        $z2 = $z1 ^ 1;

        if $z2 == 0 goto label08;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("Unknown input method ");

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" cannot be selected for user #");

        virtualinvoke r3.<java.io.PrintWriter: void println(int)>(i1);

     label07:
        goto label09;

     label08:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Input method ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" selected for user #");

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>(i1);

     label09:
        i4 = i4 + 1;

        goto label03;

     label10:
        exitmonitor r4;

     label11:
        return 0;

     label12:
        $r8 := @caughtexception;

     label13:
        exitmonitor r4;

     label14:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private void hideMySoftInput(android.os.IBinder, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        android.util.ArrayMap r1;
        long l1;
        boolean $z0;
        android.os.IBinder $r2, r5;
        java.lang.Throwable $r3, $r4;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r5 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r5);

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mLastImeTargetWindow>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean hideCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>($r2, i0, null, 4);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r3 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label10:
        throw $r3;

     label11:
        $r4 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private boolean isKeyguardLocked()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.app.KeyguardManager r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.KeyguardManager mKeyguardManager>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.app.KeyguardManager: boolean isKeyguardLocked()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private boolean isScreenLocked()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.app.KeyguardManager r1, $r2;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.KeyguardManager mKeyguardManager>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.app.KeyguardManager: boolean isKeyguardLocked()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.KeyguardManager mKeyguardManager>;

        $z1 = virtualinvoke $r2.<android.app.KeyguardManager: boolean isKeyguardSecure()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    static void lambda$handleMessage$1(java.util.List, int, com.android.server.inputmethod.InputMethodManagerInternal$InputMethodListListener)
    {
        java.util.List r0;
        int i0;
        com.android.server.inputmethod.InputMethodManagerInternal$InputMethodListListener r1;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.server.inputmethod.InputMethodManagerInternal$InputMethodListListener;

        interfaceinvoke r1.<com.android.server.inputmethod.InputMethodManagerInternal$InputMethodListListener: void onInputMethodListUpdated(java.util.List,int)>(r0, i0);

        return;
    }

    static void lambda$handleShellCommandResetInputMethod$4(com.android.server.inputmethod.InputMethodUtils$InputMethodSettings, android.view.inputmethod.InputMethodInfo)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        android.view.inputmethod.InputMethodInfo r1;
        java.lang.String $r2;

        r0 := @parameter0: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter1: android.view.inputmethod.InputMethodInfo;

        $r2 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void appendAndPutEnabledInputMethodLocked(java.lang.String,boolean)>($r2, 0);

        return;
    }

    static void lambda$handleShellCommandResetInputMethod$5(java.io.PrintWriter, android.view.inputmethod.InputMethodInfo)
    {
        java.io.PrintWriter r0;
        android.view.inputmethod.InputMethodInfo r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: android.view.inputmethod.InputMethodInfo;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   Enabled: ");

        $r5 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return;
    }

    private void notifyUserAction(android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1, $r4;
        android.os.IBinder $r2, r9;
        java.lang.String $r3;
        java.lang.Object $r5;
        android.view.inputmethod.InputMethodSubtype $r6;
        com.android.server.inputmethod.InputMethodSubtypeSwitchingController $r7;
        java.lang.Throwable $r8;
        android.view.inputmethod.InputMethodInfo r10;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r9 := @parameter0: android.os.IBinder;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken>;

        if $r2 == r9 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        r10 = (android.view.inputmethod.InputMethodInfo) $r5;

     label04:
        if r10 == null goto label06;

     label05:
        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodSubtypeSwitchingController mSwitchingController>;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        virtualinvoke $r7.<com.android.server.inputmethod.InputMethodSubtypeSwitchingController: void onUserActionLocked(android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>(r10, $r6);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void onCreateInlineSuggestionsRequest(int, com.android.internal.view.InlineSuggestionsRequestInfo, com.android.internal.view.IInlineSuggestionsRequestCallback)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        com.android.internal.view.IInlineSuggestionsRequestCallback r1;
        android.util.ArrayMap r2;
        java.lang.Throwable $r3;
        com.android.internal.view.InlineSuggestionsRequestInfo r4;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        r4 := @parameter1: com.android.internal.view.InlineSuggestionsRequestInfo;

        r1 := @parameter2: com.android.internal.view.IInlineSuggestionsRequestCallback;

        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void onCreateInlineSuggestionsRequestLocked(int,com.android.internal.view.InlineSuggestionsRequestInfo,com.android.internal.view.IInlineSuggestionsRequestCallback)>(i0, r4, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void onCreateInlineSuggestionsRequestLocked(int, com.android.internal.view.InlineSuggestionsRequestInfo, com.android.internal.view.IInlineSuggestionsRequestCallback)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i1, $i2;
        android.view.inputmethod.InputMethodInfo r1;
        com.android.internal.view.IInputMethod r2, r4, $r10;
        com.android.internal.os.HandlerCaller r3;
        com.android.server.inputmethod.InputMethodManagerService$InlineSuggestionsRequestCallbackDecorator r5;
        java.lang.String $r6, $r11, $r18;
        android.util.ArrayMap $r7;
        java.lang.Object $r8;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r9;
        boolean $z0;
        android.os.IBinder $r12;
        android.os.Message $r13;
        android.os.RemoteException $r14;
        java.lang.StringBuilder $r15;
        com.android.internal.view.InlineSuggestionsRequestInfo r19;
        com.android.internal.view.IInlineSuggestionsRequestCallback r20;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        r19 := @parameter1: com.android.internal.view.InlineSuggestionsRequestInfo;

        r20 := @parameter2: com.android.internal.view.IInlineSuggestionsRequestCallback;

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        r1 = (android.view.inputmethod.InputMethodInfo) $r8;

     label1:
        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i1 = virtualinvoke $r9.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        if i0 != $i1 goto label5;

     label2:
        if r1 == null goto label5;

     label3:
        $z0 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: boolean isInlineSuggestionsEnabled()>();

        if $z0 == 0 goto label5;

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r10 == null goto label5;

        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        r5 = new com.android.server.inputmethod.InputMethodManagerService$InlineSuggestionsRequestCallbackDecorator;

        $r11 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        $i2 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken>;

        specialinvoke r5.<com.android.server.inputmethod.InputMethodManagerService$InlineSuggestionsRequestCallbackDecorator: void <init>(com.android.internal.view.IInlineSuggestionsRequestCallback,java.lang.String,int,android.os.IBinder,com.android.server.inputmethod.InputMethodManagerService)>(r20, $r11, $i2, $r12, r0);

        $r13 = virtualinvoke r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOO(int,java.lang.Object,java.lang.Object,java.lang.Object)>(6000, r4, r19, r5);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>(r2, $r13);

     label4:
        goto label6;

     label5:
        interfaceinvoke r20.<com.android.internal.view.IInlineSuggestionsRequestCallback: void onInlineSuggestionsUnsupported()>();

     label6:
        goto label8;

     label7:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException calling onCreateInlineSuggestionsRequest(): ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r18);

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    static void queryInputMethodServicesInternal(android.content.Context, int, android.util.ArrayMap, android.util.ArrayMap, java.util.ArrayList)
    {
        android.content.Context r0;
        android.util.ArrayMap r1, r2;
        java.util.ArrayList r3;
        java.util.List r4, $r12;
        java.lang.String r5, $r9, $r10, $r13, $r20, $r25;
        android.content.pm.PackageManager $r6;
        android.content.Intent $r7;
        int $i0, $i1, $i2, i5, i6;
        java.lang.Object $r8, $r11;
        boolean $z0, $z1;
        java.lang.StringBuilder $r15, $r22;
        java.lang.Exception $r21;
        android.content.pm.ResolveInfo r26;
        android.content.pm.ServiceInfo r27;
        android.view.inputmethod.InputMethodInfo r29;

        r0 := @parameter0: android.content.Context;

        i5 := @parameter1: int;

        r1 := @parameter2: android.util.ArrayMap;

        r2 := @parameter3: android.util.ArrayMap;

        r3 := @parameter4: java.util.ArrayList;

        virtualinvoke r3.<java.util.ArrayList: void clear()>();

        virtualinvoke r2.<android.util.ArrayMap: void clear()>();

        $r6 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.view.InputMethod");

        r4 = virtualinvoke $r6.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r7, 32896, i5);

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        virtualinvoke r3.<java.util.ArrayList: void ensureCapacity(int)>($i0);

        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        virtualinvoke r2.<android.util.ArrayMap: void ensureCapacity(int)>($i1);

        i6 = 0;

     label1:
        $i2 = interfaceinvoke r4.<java.util.List: int size()>();

        if i6 >= $i2 goto label8;

        $r8 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i6);

        r26 = (android.content.pm.ResolveInfo) $r8;

        r27 = r26.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r5 = staticinvoke <android.view.inputmethod.InputMethodInfo: java.lang.String computeId(android.content.pm.ResolveInfo)>(r26);

        $r10 = "android.permission.BIND_INPUT_METHOD";

        $r9 = r27.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label2;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping input method ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": it does not require the permission ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_INPUT_METHOD");

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r20);

        goto label7;

     label2:
        r29 = new android.view.inputmethod.InputMethodInfo;

        $r11 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        $r12 = (java.util.List) $r11;

        specialinvoke r29.<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo,java.util.List)>(r0, r26, $r12);

        $z1 = virtualinvoke r29.<android.view.inputmethod.InputMethodInfo: boolean isVrOnly()>();

        if $z1 == 0 goto label4;

     label3:
        goto label7;

     label4:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r29);

        $r13 = virtualinvoke r29.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r29);

     label5:
        goto label7;

     label6:
        $r21 := @caughtexception;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load input method ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", $r25, $r21);

     label7:
        i6 = i6 + 1;

        goto label1;

     label8:
        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    private void reportFullscreenMode(android.os.IBinder, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean z0, $z1;
        android.util.ArrayMap r1;
        com.android.internal.os.HandlerCaller r2;
        com.android.server.inputmethod.InputMethodManagerService$ClientState $r3, $r4, $r6, $r7;
        com.android.internal.view.IInputMethodClient $r5, r11;
        android.os.Message $r8;
        java.lang.Throwable $r9;
        android.os.IBinder r10;
        byte b0;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r10 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $z1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r10);

        if $z1 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        if $r3 == null goto label07;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r5 = $r4.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        if $r5 == null goto label07;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInFullscreenMode> = z0;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        r11 = $r6.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

     label04:
        if z0 == 0 goto label05;

        b0 = 1;

        goto label06;

     label05:
        b0 = 0;

     label06:
        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r8 = virtualinvoke r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(3045, b0, $r7);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>(r11, $r8);

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void reportImeControl(android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1;
        android.os.IBinder $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r4 := @parameter0: android.os.IBinder;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        if $r2 == r4 goto label2;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mCurPerceptible> = 1;

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void reportPreRendered(android.os.IBinder, android.view.inputmethod.EditorInfo)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.view.inputmethod.EditorInfo r1;
        android.util.ArrayMap r2;
        boolean $z0;
        com.android.server.inputmethod.InputMethodManagerService$ClientState $r3, $r4, $r6, $r7;
        com.android.internal.view.IInputMethodClient $r5, $r9;
        com.android.internal.os.HandlerCaller $r8;
        android.os.Message $r10;
        java.lang.Throwable $r11;
        android.os.IBinder r12;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r12 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.view.inputmethod.EditorInfo;

        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r2;

     label1:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r12);

        if $z0 != 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        if $r3 == null goto label4;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r5 = $r4.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        if $r5 == null goto label4;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r9 = $r6.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r10 = virtualinvoke $r8.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(3060, r1, $r7);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r9, $r10);

     label4:
        exitmonitor r2;

     label5:
        return;

     label6:
        $r11 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void reportStartInput(android.os.IBinder, android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1;
        boolean $z0;
        java.util.WeakHashMap $r2;
        java.lang.Object $r3;
        android.os.IBinder $r4, r7, r8, r9;
        com.android.server.wm.WindowManagerInternal $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r7 := @parameter0: android.os.IBinder;

        r8 := @parameter1: android.os.IBinder;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r7);

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.WeakHashMap mImeTargetWindowMap>;

        $r3 = virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (android.os.IBinder) $r3;

     label04:
        if r9 == null goto label06;

     label05:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mLastImeTargetWindow>;

        if $r4 == r9 goto label06;

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerInternal: void updateInputMethodTargetWindow(android.os.IBinder,android.os.IBinder)>(r7, r9);

     label06:
        r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mLastImeTargetWindow> = r9;

        exitmonitor r1;

     label07:
        return;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void resetDefaultImeLocked(android.content.Context)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.lang.String r1;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r2;
        java.util.ArrayList $r3, r10;
        boolean $z0, $z1;
        java.lang.Object $r4, $r7;
        android.view.inputmethod.InputMethodInfo $r5, $r8;
        android.util.ArrayMap $r6;
        android.content.Context r9;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r9 := @parameter0: android.content.Context;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        if r1 == null goto label1;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = (android.view.inputmethod.InputMethodInfo) $r7;

        $z1 = virtualinvoke $r8.<android.view.inputmethod.InputMethodInfo: boolean isSystem()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r3 = virtualinvoke $r2.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        r10 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.util.ArrayList getDefaultEnabledImes(android.content.Context,java.util.ArrayList)>(r9, $r3);

        $z0 = interfaceinvoke r10.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("InputMethodManagerService", "No default found");

        return;

     label2:
        $r4 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.view.inputmethod.InputMethodInfo) $r4;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setSelectedInputMethodAndSubtypeLocked(android.view.inputmethod.InputMethodInfo,int,boolean)>($r5, -1, 0);

        return;
    }

    private void resetSelectedInputMethodAndSubtypeLocked(java.lang.String)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.view.inputmethod.InputMethodInfo r1;
        android.util.ArrayMap $r4;
        java.lang.Object $r5;
        boolean $z0;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r6;
        int $i1, i3;
        java.lang.Throwable $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r11, r12, r13;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r12 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r12);

        r1 = (android.view.inputmethod.InputMethodInfo) $r5;

        i3 = -1;

        if r1 == null goto label4;

        i3 = -1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z0 != 0 goto label4;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r13 = virtualinvoke $r6.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getLastSubtypeForInputMethodLocked(java.lang.String)>(r12);

        i3 = -1;

        if r13 == null goto label4;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r13);

        i3 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>(r1, $i1);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HashCode for subtype looks broken: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", $r11, $r7);

        i3 = -1;

     label4:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setSelectedInputMethodAndSubtypeLocked(android.view.inputmethod.InputMethodInfo,int,boolean)>(r1, i3, 0);

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void scheduleNotifyImeUidToAudioService(int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        com.android.internal.os.HandlerCaller $r1, $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r1.<com.android.internal.os.HandlerCaller: void removeMessages(int)>(7000);

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageI(int,int)>(7000, i0);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void setImeWindowStatus(android.os.IBinder, int, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        com.android.server.wm.WindowManagerInternal $r1, r5;
        boolean $z0, z1, z2;
        java.lang.Throwable $r2;
        android.os.IBinder r3;
        android.util.ArrayMap r4;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r3 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        i2 = virtualinvoke $r1.<com.android.server.wm.WindowManagerInternal: int getTopFocusedDisplayId()>();

        r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r4;

     label01:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r3);

        if $z0 != 0 goto label03;

        exitmonitor r4;

     label02:
        return;

     label03:
        $i3 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        if $i3 == i2 goto label05;

        $i5 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        if $i5 == 0 goto label05;

        exitmonitor r4;

     label04:
        return;

     label05:
        r0.<com.android.server.inputmethod.InputMethodManagerService: int mImeWindowVis> = i0;

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mBackDisposition> = i1;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateSystemUiLocked(int,int)>(i0, i1);

        exitmonitor r4;

     label06:
        z1 = 0;

        if i1 == 1 goto label10;

        if i1 == 2 goto label09;

        $i4 = i0 & 2;

        if $i4 == 0 goto label07;

        z2 = 1;

        goto label08;

     label07:
        z2 = 0;

     label08:
        goto label11;

     label09:
        z2 = 1;

        goto label11;

     label10:
        z2 = 0;

     label11:
        r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $i6 = i0 & 2;

        if $i6 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r5.<com.android.server.wm.WindowManagerInternal: void updateInputMethodWindowStatus(android.os.IBinder,boolean,boolean)>(r3, z1, z2);

        return;

     label13:
        $r2 := @caughtexception;

     label14:
        exitmonitor r4;

     label15:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private void setInputMethod(android.os.IBinder, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.lang.String r1;
        android.util.ArrayMap r2;
        boolean $z0;
        java.lang.Throwable $r3;
        android.os.IBinder r4;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r4 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r2;

     label1:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r4);

        if $z0 != 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setInputMethodWithSubtypeIdLocked(android.os.IBinder,java.lang.String,int)>(r4, r1, -1);

        exitmonitor r2;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void setInputMethodAndSubtype(android.os.IBinder, java.lang.String, android.view.inputmethod.InputMethodSubtype)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.lang.String r1;
        android.view.inputmethod.InputMethodSubtype r2;
        android.util.ArrayMap r3, $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.view.inputmethod.InputMethodInfo $r6;
        int $i0, $i1;
        java.lang.Throwable $r7;
        android.os.IBinder r8;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.view.inputmethod.InputMethodSubtype;

        r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r3;

     label01:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r8);

        if $z0 != 0 goto label03;

        exitmonitor r3;

     label02:
        return;

     label03:
        if r2 == null goto label06;

     label04:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (android.view.inputmethod.InputMethodInfo) $r5;

        $i0 = virtualinvoke r2.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        $i1 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>($r6, $i0);

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setInputMethodWithSubtypeIdLocked(android.os.IBinder,java.lang.String,int)>(r8, r1, $i1);

     label05:
        goto label07;

     label06:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setInputMethod(android.os.IBinder,java.lang.String)>(r8, r1);

     label07:
        exitmonitor r3;

     label08:
        return;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r3;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private boolean setInputMethodEnabledLocked(java.lang.String, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.lang.String r1, $r7, $r12;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r3, $r5, $r6, $r8;
        java.lang.StringBuilder $r4;
        java.lang.Object $r9, $r11;
        android.util.Pair $r10;
        java.util.List r13;
        java.util.Iterator r14;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r13 = virtualinvoke $r3.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodsAndSubtypeListLocked()>();

        if z0 == 0 goto label4;

        r14 = interfaceinvoke r13.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label3;

        $r9 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.util.Pair) $r9;

        $r11 = $r10.<android.util.Pair: java.lang.Object first>;

        $r12 = (java.lang.String) $r11;

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        virtualinvoke $r8.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void appendAndPutEnabledInputMethodLocked(java.lang.String,boolean)>(r1, 0);

        return 0;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $z1 = virtualinvoke $r5.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean buildAndPutEnabledInputMethodsStrRemovingIdLocked(java.lang.StringBuilder,java.util.List,java.lang.String)>($r4, r13, r1);

        if $z1 == 0 goto label6;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r7 = virtualinvoke $r6.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label5;

        $z3 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean chooseNewDefaultIMELocked()>();

        if $z3 != 0 goto label5;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("InputMethodManagerService", "Can\'t find new IME, unsetting the current input method.");

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void resetSelectedInputMethodAndSubtypeLocked(java.lang.String)>("");

     label5:
        return 1;

     label6:
        return 0;
    }

    private void setInputMethodWithSubtypeIdLocked(android.os.IBinder, java.lang.String, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i2, $i4;
        long l1;
        android.os.IBinder $r1, r11;
        java.lang.StringBuilder $r2;
        java.lang.String $r7, r12;
        android.content.Context $r8;
        java.lang.SecurityException $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r11 := @parameter0: android.os.IBinder;

        r12 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r11 != null goto label2;

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $i4 = virtualinvoke $r8.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WRITE_SECURE_SETTINGS");

        if $i4 != 0 goto label1;

        goto label3;

     label1:
        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>("Using null token requires permission android.permission.WRITE_SECURE_SETTINGS");

        throw $r9;

     label2:
        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken>;

        if $r1 == r11 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring setInputMethod of uid ");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r7);

        return;

     label3:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label4:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setInputMethodLocked(java.lang.String,int)>(r12, i0);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label6:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r10;

        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private void setSelectedInputMethodAndSubtypeLocked(android.view.inputmethod.InputMethodInfo, int, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i1, $i2;
        boolean z0;
        android.view.inputmethod.InputMethodSubtype $r1, $r6, r9;
        java.lang.String $r2, r11;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r3, $r4, $r5, $r7, r10;
        android.view.inputmethod.InputMethodInfo r8;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r8 := @parameter0: android.view.inputmethod.InputMethodInfo;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        virtualinvoke $r3.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void saveCurrentInputMethodAndSubtypeToHistory(java.lang.String,android.view.inputmethod.InputMethodSubtype)>($r2, $r1);

        if r8 == null goto label3;

        if i0 >= 0 goto label1;

        goto label3;

     label1:
        $i1 = virtualinvoke r8.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        if i0 >= $i1 goto label2;

        r9 = virtualinvoke r8.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i0);

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i2 = virtualinvoke r9.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        virtualinvoke $r7.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putSelectedSubtype(int)>($i2);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = r9;

        goto label4;

     label2:
        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        virtualinvoke $r5.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putSelectedSubtype(int)>(-1);

        $r6 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtypeLocked()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = $r6;

        goto label4;

     label3:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putSelectedSubtype(int)>(-1);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = null;

     label4:
        if z0 != 0 goto label7;

        r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        if r8 == null goto label5;

        r11 = virtualinvoke r8.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        goto label6;

     label5:
        r11 = "";

     label6:
        virtualinvoke r10.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putSelectedInputMethod(java.lang.String)>(r11);

     label7:
        return;
    }

    private boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1, $r3;
        boolean $z0;
        java.lang.String $r2;
        com.android.server.inputmethod.InputMethodSubtypeSwitchingController $r4;
        java.lang.Object $r5;
        android.view.inputmethod.InputMethodSubtype $r6;
        android.view.inputmethod.InputMethodInfo $r7;
        com.android.server.inputmethod.InputMethodSubtypeSwitchingController$ImeSubtypeListItem $r8;
        java.lang.Throwable $r9;
        android.os.IBinder r10;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r10 := @parameter0: android.os.IBinder;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label1:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r10);

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodSubtypeSwitchingController mSwitchingController>;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r2);

        $r7 = (android.view.inputmethod.InputMethodInfo) $r5;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        $r8 = virtualinvoke $r4.<com.android.server.inputmethod.InputMethodSubtypeSwitchingController: com.android.server.inputmethod.InputMethodSubtypeSwitchingController$ImeSubtypeListItem getNextInputMethodLocked(boolean,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>(0, $r7, $r6);

        if $r8 != null goto label5;

        exitmonitor r1;

     label4:
        return 0;

     label5:
        exitmonitor r1;

     label6:
        return 1;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private boolean shouldShowImeSwitcherLocked(int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.util.ArrayList r1;
        int i0, i1, $i2, $i3, i4, $i5, i6, i7, i8, i9, i10, i11;
        java.util.List r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.app.AlertDialog $r3;
        com.android.server.wm.WindowManagerInternal $r4, $r5;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r6, $r11;
        java.lang.String $r7, $r8;
        java.lang.Object $r9, $r12;
        android.content.Context $r10;
        android.app.KeyguardManager r13;
        android.view.inputmethod.InputMethodSubtype r14, r15, r17, r18, r19;
        android.view.inputmethod.InputMethodInfo r16;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i4 := @parameter0: int;

        $z0 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowOngoingImeSwitcherForPhones>;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        if $r3 == null goto label02;

        return 0;

     label02:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $z1 = virtualinvoke $r4.<com.android.server.wm.WindowManagerInternal: boolean isKeyguardShowingAndNotOccluded()>();

        if $z1 == 0 goto label03;

        r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.KeyguardManager mKeyguardManager>;

        if r13 == null goto label03;

        $z7 = virtualinvoke r13.<android.app.KeyguardManager: boolean isKeyguardSecure()>();

        if $z7 == 0 goto label03;

        return 0;

     label03:
        $i5 = i4 & 1;

        if $i5 == 0 goto label21;

        $i2 = i4 & 4;

        if $i2 == 0 goto label04;

        goto label21;

     label04:
        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $z2 = virtualinvoke $r5.<com.android.server.wm.WindowManagerInternal: boolean isHardKeyboardAvailable()>();

        if $z2 == 0 goto label05;

        return 1;

     label05:
        $i3 = i4 & 2;

        if $i3 != 0 goto label06;

        return 0;

     label06:
        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r1 = virtualinvoke $r6.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 <= 2 goto label07;

        return 1;

     label07:
        if i0 >= 1 goto label08;

        return 0;

     label08:
        i6 = 0;

        i7 = 0;

        r14 = null;

        r15 = null;

        i8 = 0;

     label09:
        if i8 >= i0 goto label15;

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i8);

        r16 = (android.view.inputmethod.InputMethodInfo) $r9;

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        r2 = virtualinvoke $r11.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.content.Context,android.view.inputmethod.InputMethodInfo,boolean)>($r10, r16, 1);

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 != 0 goto label10;

        i9 = i6 + 1;

        i10 = i7;

        r17 = r14;

        r18 = r15;

        goto label14;

     label10:
        i11 = 0;

     label11:
        i9 = i6;

        i10 = i7;

        r17 = r14;

        r18 = r15;

        if i11 >= i1 goto label14;

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i11);

        r19 = (android.view.inputmethod.InputMethodSubtype) $r12;

        $z6 = virtualinvoke r19.<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>();

        if $z6 != 0 goto label12;

        i6 = i6 + 1;

        r14 = r19;

        goto label13;

     label12:
        i7 = i7 + 1;

        r15 = r19;

     label13:
        i11 = i11 + 1;

        goto label11;

     label14:
        i8 = i8 + 1;

        i6 = i9;

        i7 = i10;

        r14 = r17;

        r15 = r18;

        goto label09;

     label15:
        if i6 > 1 goto label20;

        if i7 <= 1 goto label16;

        goto label20;

     label16:
        if i6 != 1 goto label19;

        if i7 != 1 goto label19;

        if r14 == null goto label18;

        if r15 == null goto label18;

        $r7 = virtualinvoke r14.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $r8 = virtualinvoke r15.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 != 0 goto label17;

        $z4 = virtualinvoke r15.<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>();

        if $z4 != 0 goto label17;

        $z5 = virtualinvoke r14.<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>();

        if $z5 == 0 goto label18;

     label17:
        $z8 = virtualinvoke r14.<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>("TrySuppressingImeSwitcher");

        if $z8 == 0 goto label18;

        return 0;

     label18:
        return 1;

     label19:
        return 0;

     label20:
        return 1;

     label21:
        return 0;
    }

    private void showConfigureInputMethods()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.content.Intent $r2;
        android.os.UserHandle $r4;
        android.content.Context $r5;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.settings.INPUT_METHOD_SETTINGS");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setFlags(int)>(337641472);

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r4 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        virtualinvoke $r5.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>($r2, null, $r4);

        return;
    }

    private void showInputMethodAndSubtypeEnabler(java.lang.String)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        android.content.Intent $r1;
        boolean $z0;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r3;
        android.content.Context $r4;
        android.os.UserHandle $r5;
        java.lang.Throwable $r7;
        java.lang.String r8;
        android.util.ArrayMap r10;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r8 := @parameter0: java.lang.String;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.settings.INPUT_METHOD_SUBTYPE_SETTINGS");

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setFlags(int)>(337641472);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("input_method_id", r8);

     label1:
        r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r10;

     label2:
        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        i0 = virtualinvoke $r3.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        exitmonitor r10;

     label3:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r5 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        virtualinvoke $r4.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>($r1, null, $r5);

        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r10;

     label6:
        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void showInputMethodMenu(boolean, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean z0, $z1, $z2, $z3, z4, z5;
        android.util.ArrayMap r1, $r30;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r2, $r3;
        android.app.AlertDialog$Builder $r5, $r7, $r10, $r15, $r17, r48;
        int[] $r6, $r24, $r28, $r43;
        java.lang.Object $r9, $r21, $r31;
        com.android.server.wm.WindowManagerInternal $r12;
        android.view.View $r13, $r14, r54, r55;
        android.app.AlertDialog $r18, $r20, r60;
        android.os.IBinder $r19;
        android.view.inputmethod.InputMethodInfo $r22, $r26, r41;
        android.view.inputmethod.InputMethodInfo[] $r23, $r25, $r42;
        java.lang.String $r27, $r29, r36;
        java.lang.Throwable $r32, $r33, $r34, $r35, r39;
        com.android.server.inputmethod.InputMethodSubtypeSwitchingController r37;
        java.util.List r38;
        android.view.inputmethod.InputMethodSubtype r40;
        com.android.server.inputmethod.InputMethodSubtypeSwitchingController$ImeSubtypeListItem r44;
        android.app.ActivityThread r45;
        android.view.ContextThemeWrapper r46;
        android.app.ContextImpl r47;
        com.android.server.inputmethod.InputMethodManagerService$3 r49;
        android.content.Context r50;
        android.content.res.TypedArray r51;
        android.graphics.drawable.Drawable r52;
        android.view.LayoutInflater r53;
        byte b14;
        android.widget.Switch r56;
        com.android.server.inputmethod.InputMethodManagerService$4 r57;
        com.android.server.inputmethod.InputMethodManagerService$ImeSubtypeListAdapter r58;
        com.android.server.inputmethod.InputMethodManagerService$5 r59;
        android.view.Window r61;
        android.view.WindowManager$LayoutParams r62;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        z4 := @parameter0: boolean;

        i8 := @parameter1: int;

        z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean isScreenLocked()>();

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r36 = virtualinvoke $r2.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        i9 = virtualinvoke $r3.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getSelectedInputMethodSubtypeId(java.lang.String)>(r36);

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        r37 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodSubtypeSwitchingController mSwitchingController>;

     label02:
        r38 = virtualinvoke r37.<com.android.server.inputmethod.InputMethodSubtypeSwitchingController: java.util.List getSortedInputMethodAndSubtypeListLocked(boolean,boolean)>(z4, z0);

        z5 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>();

     label03:
        if z5 == 0 goto label07;

     label04:
        exitmonitor r1;

     label05:
        return;

     label06:
        $r34 := @caughtexception;

        r39 = $r34;

        goto label36;

     label07:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void hideInputMethodMenuLocked()>();

     label08:
        i10 = i9;

        if i9 != -1 goto label13;

     label09:
        r40 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtypeLocked()>();

     label10:
        i10 = i9;

        if r40 == null goto label13;

     label11:
        $r30 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r29 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r31 = virtualinvoke $r30.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r29);

        r41 = (android.view.inputmethod.InputMethodInfo) $r31;

     label12:
        $i7 = virtualinvoke r40.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        i10 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>(r41, $i7);

     label13:
        i0 = interfaceinvoke r38.<java.util.List: int size()>();

        $r42 = newarray (android.view.inputmethod.InputMethodInfo)[i0];

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodInfo[] mIms> = $r42;

        $r43 = newarray (int)[i0];

        r0.<com.android.server.inputmethod.InputMethodManagerService: int[] mSubtypeIds> = $r43;

     label14:
        i11 = 0;

        i12 = 0;

     label15:
        if i12 >= i0 goto label23;

     label16:
        $r21 = interfaceinvoke r38.<java.util.List: java.lang.Object get(int)>(i12);

        r44 = (com.android.server.inputmethod.InputMethodSubtypeSwitchingController$ImeSubtypeListItem) $r21;

        $r23 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodInfo[] mIms>;

        $r22 = r44.<com.android.server.inputmethod.InputMethodSubtypeSwitchingController$ImeSubtypeListItem: android.view.inputmethod.InputMethodInfo mImi>;

        $r23[i12] = $r22;

        $r24 = r0.<com.android.server.inputmethod.InputMethodManagerService: int[] mSubtypeIds>;

        $i6 = r44.<com.android.server.inputmethod.InputMethodSubtypeSwitchingController$ImeSubtypeListItem: int mSubtypeId>;

        $r24[i12] = $i6;

     label17:
        i13 = i11;

     label18:
        $r25 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodInfo[] mIms>;

        $r26 = $r25[i12];

        $r27 = virtualinvoke $r26.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $z3 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z3 == 0 goto label22;

        $r28 = r0.<com.android.server.inputmethod.InputMethodManagerService: int[] mSubtypeIds>;

        i1 = $r28[i12];

     label19:
        if i1 == -1 goto label21;

        if i10 != -1 goto label20;

        if i1 == 0 goto label21;

     label20:
        i13 = i11;

        if i1 != i10 goto label22;

     label21:
        i13 = i12;

     label22:
        i12 = i12 + 1;

        i11 = i13;

        goto label15;

     label23:
        r45 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        r46 = new android.view.ContextThemeWrapper;

     label24:
        if i8 != 0 goto label27;

     label25:
        r47 = virtualinvoke r45.<android.app.ActivityThread: android.app.ContextImpl getSystemUiContext()>();

     label26:
        goto label28;

     label27:
        r47 = virtualinvoke r45.<android.app.ActivityThread: android.app.ContextImpl createSystemUiContext(int)>(i8);

     label28:
        specialinvoke r46.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r47, 16974371);

        r48 = new android.app.AlertDialog$Builder;

        specialinvoke r48.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r46);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog$Builder mDialogBuilder> = r48;

        r49 = new com.android.server.inputmethod.InputMethodManagerService$3;

        specialinvoke r49.<com.android.server.inputmethod.InputMethodManagerService$3: void <init>(com.android.server.inputmethod.InputMethodManagerService)>(r0);

        virtualinvoke r48.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>(r49);

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog$Builder mDialogBuilder>;

        r50 = virtualinvoke $r5.<android.app.AlertDialog$Builder: android.content.Context getContext()>();

        $r6 = <com.android.internal.R$styleable: int[] DialogPreference>;

        r51 = virtualinvoke r50.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r6, 16842845, 0);

        r52 = virtualinvoke r51.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        virtualinvoke r51.<android.content.res.TypedArray: void recycle()>();

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog$Builder mDialogBuilder>;

        virtualinvoke $r7.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)>(r52);

        $r9 = virtualinvoke r50.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/LayoutInflater;");

        r53 = (android.view.LayoutInflater) $r9;

     label29:
        r54 = virtualinvoke r53.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367177, null);

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog$Builder mDialogBuilder>;

        virtualinvoke $r10.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCustomTitle(android.view.View)>(r54);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.View mSwitchingDialogTitleView> = r54;

        r55 = virtualinvoke r54.<android.view.View: android.view.View findViewById(int)>(16909027);

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $z1 = virtualinvoke $r12.<com.android.server.wm.WindowManagerInternal: boolean isHardKeyboardAvailable()>();

        if $z1 == 0 goto label31;

     label30:
        b14 = 0;

        goto label32;

     label31:
        b14 = 8;

     label32:
        virtualinvoke r55.<android.view.View: void setVisibility(int)>(b14);

        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.View mSwitchingDialogTitleView>;

        $r14 = virtualinvoke $r13.<android.view.View: android.view.View findViewById(int)>(16909028);

        r56 = (android.widget.Switch) $r14;

        $z2 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowImeWithHardKeyboard>;

        virtualinvoke r56.<android.widget.Switch: void setChecked(boolean)>($z2);

        r57 = new com.android.server.inputmethod.InputMethodManagerService$4;

        specialinvoke r57.<com.android.server.inputmethod.InputMethodManagerService$4: void <init>(com.android.server.inputmethod.InputMethodManagerService)>(r0);

        virtualinvoke r56.<android.widget.Switch: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>(r57);

        r58 = new com.android.server.inputmethod.InputMethodManagerService$ImeSubtypeListAdapter;

        specialinvoke r58.<com.android.server.inputmethod.InputMethodManagerService$ImeSubtypeListAdapter: void <init>(android.content.Context,int,java.util.List,int)>(r50, 17367178, r38, i11);

        r59 = new com.android.server.inputmethod.InputMethodManagerService$5;

        specialinvoke r59.<com.android.server.inputmethod.InputMethodManagerService$5: void <init>(com.android.server.inputmethod.InputMethodManagerService,com.android.server.inputmethod.InputMethodManagerService$ImeSubtypeListAdapter)>(r0, r58);

        $r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog$Builder mDialogBuilder>;

        virtualinvoke $r15.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)>(r58, i11, r59);

        $r17 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog$Builder mDialogBuilder>;

        r60 = virtualinvoke $r17.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog> = r60;

        virtualinvoke r60.<android.app.AlertDialog: void setCanceledOnTouchOutside(boolean)>(1);

        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        r61 = virtualinvoke $r18.<android.app.AlertDialog: android.view.Window getWindow()>();

        r62 = virtualinvoke r61.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        virtualinvoke r61.<android.view.Window: void setType(int)>(2012);

        $r19 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mSwitchingDialogToken>;

        r62.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = $r19;

        $i2 = r62.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i3 = $i2 | 16;

        r62.<android.view.WindowManager$LayoutParams: int privateFlags> = $i3;

        virtualinvoke r62.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>("Select input method");

        virtualinvoke r61.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r62);

        $i5 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mImeWindowVis>;

        $i4 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mBackDisposition>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateSystemUiLocked(int,int)>($i5, $i4);

        $r20 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        virtualinvoke $r20.<android.app.AlertDialog: void show()>();

        exitmonitor r1;

     label33:
        return;

     label34:
        $r33 := @caughtexception;

        r39 = $r33;

        goto label36;

     label35:
        $r35 := @caughtexception;

        r39 = $r35;

     label36:
        exitmonitor r1;

     label37:
        throw r39;

     label38:
        $r32 := @caughtexception;

        r39 = $r32;

        goto label36;

        catch java.lang.Throwable from label01 to label02 with label35;
        catch java.lang.Throwable from label02 to label03 with label34;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label34;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
        catch java.lang.Throwable from label12 to label13 with label06;
        catch java.lang.Throwable from label13 to label14 with label34;
        catch java.lang.Throwable from label16 to label17 with label06;
        catch java.lang.Throwable from label18 to label19 with label06;
        catch java.lang.Throwable from label23 to label24 with label34;
        catch java.lang.Throwable from label25 to label26 with label06;
        catch java.lang.Throwable from label27 to label28 with label34;
        catch java.lang.Throwable from label28 to label29 with label34;
        catch java.lang.Throwable from label29 to label30 with label38;
        catch java.lang.Throwable from label32 to label33 with label38;
        catch java.lang.Throwable from label36 to label37 with label38;
    }

    private void showMySoftInput(android.os.IBinder, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        android.util.ArrayMap r1;
        long l1;
        boolean $z0;
        android.os.IBinder $r2, r5;
        java.lang.Throwable $r3, $r4;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r5 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r5);

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mLastImeTargetWindow>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean showCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>($r2, i0, null, 2);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r3 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label10:
        throw $r3;

     label11:
        $r4 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private com.android.internal.view.InputBindResult startInputOrWindowGainedFocusInternalLocked(int, com.android.internal.view.IInputMethodClient, android.os.IBinder, int, int, int, android.view.inputmethod.EditorInfo, com.android.internal.view.IInputContext, int, int, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24, i25, $i26;
        android.view.inputmethod.EditorInfo r1;
        com.android.internal.view.IInputContext r2;
        com.android.server.inputmethod.InputMethodManagerService$ClientState r3;
        com.android.server.wm.WindowManagerInternal $r4, $r12;
        android.util.ArrayMap $r5;
        android.os.IBinder $r6, $r9, $r17, $r18, $r19, $r26, r39, $r43;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8, $r35;
        java.lang.IllegalArgumentException $r10;
        java.lang.String $r11, $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, z11, z12;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r13, $r14;
        com.android.server.inputmethod.InputMethodManagerService$DebugFlag $r15, $r16;
        android.content.res.Resources $r20;
        android.content.res.Configuration $r21;
        com.android.internal.view.InputBindResult $r22, $r23, $r25, $r27, $r29, $r31, $r33, $r34, $r37, r44;
        com.android.internal.view.IInputMethodClient $r24, $r30, $r32, r38;
        android.os.UserManager $r28;
        com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask r41;
        int[] r42;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i19 := @parameter0: int;

        r38 := @parameter1: com.android.internal.view.IInputMethodClient;

        r39 := @parameter2: android.os.IBinder;

        i20 := @parameter3: int;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        r1 := @parameter6: android.view.inputmethod.EditorInfo;

        r2 := @parameter7: com.android.internal.view.IInputContext;

        i2 := @parameter8: int;

        i3 := @parameter9: int;

        i21 := @parameter10: int;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        i22 = virtualinvoke $r4.<com.android.server.wm.WindowManagerInternal: int getDisplayIdForWindow(android.os.IBinder)>(r39);

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients>;

        $r6 = interfaceinvoke r38.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r7 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        r3 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r7;

        if r3 == null goto label37;

        $i5 = r3.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        if $i5 == i22 goto label01;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startInputOrWindowGainedFocusInternal: display ID mismatch. from client:");

        $i18 = r3.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from window:");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", $r36);

        $r37 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult DISPLAY_ID_MISMATCH>;

        return $r37;

     label01:
        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $i8 = r3.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        $i7 = r3.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int pid>;

        $i6 = r3.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        $z0 = virtualinvoke $r12.<com.android.server.wm.WindowManagerInternal: boolean isInputMethodClientFocus(int,int,int)>($i8, $i7, $i6);

        if $z0 != 0 goto label02;

        $r34 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult NOT_IME_TARGET_WINDOW>;

        return $r34;

     label02:
        r41 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask mUserSwitchHandlerTask>;

        if r41 == null goto label07;

        i23 = r41.<com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask: int mToUserId>;

        if i21 != i23 goto label03;

        $r32 = r3.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void scheduleSwitchUserTaskLocked(int,com.android.internal.view.IInputMethodClient)>(i21, $r32);

        $r33 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult USER_SWITCHING>;

        return $r33;

     label03:
        $r28 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.UserManager mUserManager>;

        r42 = virtualinvoke $r28.<android.os.UserManager: int[] getProfileIdsWithDisabled(int)>(i23);

        i24 = lengthof r42;

        i25 = 0;

     label04:
        if i25 >= i24 goto label06;

        $i17 = r42[i25];

        if $i17 != i21 goto label05;

        $r30 = r3.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void scheduleSwitchUserTaskLocked(int,com.android.internal.view.IInputMethodClient)>(i21, $r30);

        $r31 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult USER_SWITCHING>;

        return $r31;

     label05:
        i25 = i25 + 1;

        goto label04;

     label06:
        $r29 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult INVALID_USER>;

        return $r29;

     label07:
        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $z1 = virtualinvoke $r13.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean isCurrentProfile(int)>(i21);

        if $z1 != 0 goto label08;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "A background user is requesting window. Hiding IME.");

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "If you need to impersonate a foreground user/profile from a background user, use EditorInfo.targetInputMethodUser with INTERACT_ACROSS_USERS_FULL permission.");

        $r26 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean hideCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>($r26, 0, null, 10);

        $r27 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult INVALID_USER>;

        return $r27;

     label08:
        $r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i9 = virtualinvoke $r14.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        if i21 == $i9 goto label09;

        $r24 = r3.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void scheduleSwitchUserTaskLocked(int,com.android.internal.view.IInputMethodClient)>(i21, $r24);

        $r25 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult USER_SWITCHING>;

        return $r25;

     label09:
        $r15 = <com.android.server.inputmethod.InputMethodManagerService$DebugFlags: com.android.server.inputmethod.InputMethodManagerService$DebugFlag FLAG_PRE_RENDER_IME_VIEWS>;

        $z2 = virtualinvoke $r15.<com.android.server.inputmethod.InputMethodManagerService$DebugFlag: boolean value()>();

        if $z2 == 0 goto label10;

        $z8 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mIsLowRam>;

        if $z8 != 0 goto label10;

        z9 = 1;

        goto label11;

     label10:
        z9 = 0;

     label11:
        r3.<com.android.server.inputmethod.InputMethodManagerService$ClientState: boolean shouldPreRenderIme> = z9;

        $r43 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        if $r43 != r39 goto label13;

        if r1 == null goto label12;

        $r23 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,int,int)>(r3, r2, i2, r1, i20, i19);

        return $r23;

     label12:
        $r22 = new com.android.internal.view.InputBindResult;

        specialinvoke $r22.<com.android.internal.view.InputBindResult: void <init>(int,com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int,android.graphics.Matrix)>(4, null, null, null, -1, null);

        return $r22;

     label13:
        r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow> = r39;

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurFocusedWindowSoftInputMode> = i0;

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurFocusedWindowClient> = r3;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mCurPerceptible> = 1;

        $i10 = i0 & 240;

        if $i10 == 16 goto label15;

        $r20 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.res.Resources mRes>;

        $r21 = virtualinvoke $r20.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $z7 = virtualinvoke $r21.<android.content.res.Configuration: boolean isLayoutSizeAtLeast(int)>(3);

        if $z7 == 0 goto label14;

        goto label15;

     label14:
        z10 = 0;

        goto label16;

     label15:
        z10 = 1;

     label16:
        $i26 = i20 & 2;

        if $i26 == 0 goto label17;

        z11 = 1;

        goto label18;

     label17:
        z11 = 0;

     label18:
        z12 = 0;

        r44 = null;

        i4 = i0 & 15;

        if i4 == 0 goto label27;

        if i4 == 2 goto label26;

        if i4 == 3 goto label25;

        if i4 == 4 goto label22;

        if i4 == 5 goto label19;

        z12 = 0;

        r44 = null;

        goto label32;

     label19:
        $z6 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean isSoftInputModeStateVisibleAllowed(int,int)>(i3, i20);

        if $z6 == 0 goto label21;

        if r1 == null goto label20;

        r44 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,int,int)>(r3, r2, i2, r1, i20, i19);

        z12 = 1;

        goto label20;

     label20:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean showCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>(r39, 1, null, 7);

        goto label32;

     label21:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", "SOFT_INPUT_STATE_ALWAYS_VISIBLE is ignored because there is no focused view that also returns true from View#onCheckIsTextEditor()");

        z12 = 0;

        r44 = null;

        goto label32;

     label22:
        z12 = 0;

        r44 = null;

        $i16 = i0 & 256;

        if $i16 == 0 goto label32;

        $z5 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean isSoftInputModeStateVisibleAllowed(int,int)>(i3, i20);

        if $z5 == 0 goto label24;

        z12 = 0;

        r44 = null;

        if r1 == null goto label23;

        r44 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,int,int)>(r3, r2, i2, r1, i20, i19);

        z12 = 1;

     label23:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean showCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>(r39, 1, null, 6);

        goto label32;

     label24:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", "SOFT_INPUT_STATE_VISIBLE is ignored because there is no focused view that also returns true from View#onCheckIsTextEditor()");

        z12 = 0;

        r44 = null;

        goto label32;

     label25:
        $r19 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean hideCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>($r19, 0, null, 13);

        z12 = 0;

        r44 = null;

        goto label32;

     label26:
        z12 = 0;

        r44 = null;

        $i15 = i0 & 256;

        if $i15 == 0 goto label32;

        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean hideCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>($r18, 0, null, 12);

        z12 = 0;

        r44 = null;

        goto label32;

     label27:
        if z11 == 0 goto label31;

        if z10 != 0 goto label28;

        goto label31;

     label28:
        z12 = 0;

        r44 = null;

        if z11 == 0 goto label32;

        z12 = 0;

        r44 = null;

        if z10 == 0 goto label32;

        z12 = 0;

        r44 = null;

        $i14 = i0 & 256;

        if $i14 == 0 goto label32;

        if r1 == null goto label29;

        r44 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,int,int)>(r3, r2, i2, r1, i20, i19);

        z12 = 1;

        goto label30;

     label29:
        r44 = null;

        z12 = 0;

     label30:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean showCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>(r39, 1, null, 5);

        goto label32;

     label31:
        z12 = 0;

        r44 = null;

        $z3 = staticinvoke <android.view.WindowManager$LayoutParams: boolean mayUseInputMethod(int)>(i1);

        if $z3 == 0 goto label32;

        $r17 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean hideCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>($r17, 2, null, 11);

        z12 = 0;

        r44 = null;

        $i13 = r3.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        $i12 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        if $i13 == $i12 goto label32;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void unbindCurrentMethodLocked()>();

        r44 = null;

        z12 = 0;

     label32:
        if z12 != 0 goto label36;

        if r1 == null goto label35;

        $r16 = <com.android.server.inputmethod.InputMethodManagerService$DebugFlags: com.android.server.inputmethod.InputMethodManagerService$DebugFlag FLAG_OPTIMIZE_START_INPUT>;

        $z4 = virtualinvoke $r16.<com.android.server.inputmethod.InputMethodManagerService$DebugFlag: boolean value()>();

        if $z4 == 0 goto label34;

        $i11 = i20 & 2;

        if $i11 == 0 goto label33;

        goto label34;

     label33:
        r44 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult NO_EDITOR>;

        goto label36;

     label34:
        r44 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,int,int)>(r3, r2, i2, r1, i20, i19);

        goto label36;

     label35:
        r44 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult NULL_EDITOR_INFO>;

     label36:
        return r44;

     label37:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown client ");

        $r9 = interfaceinvoke r38.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    private boolean switchToInputMethod(java.lang.String, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i1;
        android.util.ArrayMap r1, r2, r3, $r12, $r15;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r4, $r13, r20;
        android.content.Context $r5, $r6, $r8;
        android.content.res.Resources $r7;
        android.content.ContentResolver $r9;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r10, $r14, r19;
        java.lang.Object $r11, $r16;
        java.lang.Throwable $r17;
        java.lang.String r18;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r18 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i1 = virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        if i0 != $i1 goto label07;

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $z2 = virtualinvoke $r12.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r18);

        if $z2 == 0 goto label05;

        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r14 = virtualinvoke $r13.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        $r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r16 = virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r18);

        $z3 = virtualinvoke $r14.<java.util.ArrayList: boolean contains(java.lang.Object)>($r16);

        if $z3 != 0 goto label03;

     label02:
        goto label05;

     label03:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setInputMethodLocked(java.lang.String,int)>(r18, -1);

        exitmonitor r1;

     label04:
        return 1;

     label05:
        exitmonitor r1;

     label06:
        return 0;

     label07:
        r2 = new android.util.ArrayMap;

        specialinvoke r2.<android.util.ArrayMap: void <init>()>();

        r19 = new java.util.ArrayList;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

        r3 = new android.util.ArrayMap;

        specialinvoke r3.<android.util.ArrayMap: void <init>()>();

        staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: void load(android.util.ArrayMap,int)>(r3, i0);

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        staticinvoke <com.android.server.inputmethod.InputMethodManagerService: void queryInputMethodServicesInternal(android.content.Context,int,android.util.ArrayMap,android.util.ArrayMap,java.util.ArrayList)>($r5, i0, r3, r2, r19);

        r20 = new com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        specialinvoke r20.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void <init>(android.content.res.Resources,android.content.ContentResolver,android.util.ArrayMap,int,boolean)>($r7, $r9, r2, i0, 0);

        $z0 = virtualinvoke r2.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r18);

        if $z0 == 0 goto label11;

        $r10 = virtualinvoke r20.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        $r11 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r18);

        $z1 = virtualinvoke $r10.<java.util.ArrayList: boolean contains(java.lang.Object)>($r11);

        if $z1 != 0 goto label09;

     label08:
        goto label11;

     label09:
        virtualinvoke r20.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putSelectedInputMethod(java.lang.String)>(r18);

        virtualinvoke r20.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putSelectedSubtype(int)>(-1);

        exitmonitor r1;

     label10:
        return 1;

     label11:
        exitmonitor r1;

     label12:
        return 0;

     label13:
        $r17 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private boolean switchToNextInputMethod(android.os.IBinder, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean z0, $z1;
        android.util.ArrayMap r1, $r4;
        com.android.server.inputmethod.InputMethodSubtypeSwitchingController$ImeSubtypeListItem r2;
        java.lang.String $r3, $r10;
        com.android.server.inputmethod.InputMethodSubtypeSwitchingController $r5;
        java.lang.Object $r6;
        android.view.inputmethod.InputMethodSubtype $r7;
        android.view.inputmethod.InputMethodInfo $r8, $r9;
        int $i0;
        java.lang.Throwable $r11;
        android.os.IBinder r12;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r12 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $z1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r12);

        if $z1 != 0 goto label03;

        exitmonitor r1;

     label02:
        return 0;

     label03:
        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodSubtypeSwitchingController mSwitchingController>;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r6 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        $r8 = (android.view.inputmethod.InputMethodInfo) $r6;

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        r2 = virtualinvoke $r5.<com.android.server.inputmethod.InputMethodSubtypeSwitchingController: com.android.server.inputmethod.InputMethodSubtypeSwitchingController$ImeSubtypeListItem getNextInputMethodLocked(boolean,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>(z0, $r8, $r7);

     label04:
        if r2 != null goto label07;

     label05:
        exitmonitor r1;

     label06:
        return 0;

     label07:
        $r9 = r2.<com.android.server.inputmethod.InputMethodSubtypeSwitchingController$ImeSubtypeListItem: android.view.inputmethod.InputMethodInfo mImi>;

        $r10 = virtualinvoke $r9.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $i0 = r2.<com.android.server.inputmethod.InputMethodSubtypeSwitchingController$ImeSubtypeListItem: int mSubtypeId>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setInputMethodWithSubtypeIdLocked(android.os.IBinder,java.lang.String,int)>(r12, $r10, $i0);

        exitmonitor r1;

     label08:
        return 1;

     label09:
        $r11 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private boolean switchToPreviousInputMethod(android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1, $r24;
        android.view.inputmethod.InputMethodInfo r2, r30;
        android.view.inputmethod.InputMethodSubtype r3, $r5, $r7, $r8, $r20, $r21;
        boolean $z0, $z1, $z2, $z3, z4, $z5, z6;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r4, $r6;
        java.lang.Object $r9, $r18, $r22, $r23, $r25;
        int $i0, $i1, i2, i3, i4, i5, i6, i7, i8, i9;
        android.content.res.Resources $r10, $r13;
        java.util.ArrayList $r11, r33;
        java.lang.String $r12, $r16, $r17, $r19, r31, r32, r34, r35, r36;
        android.content.res.Configuration $r14;
        java.util.Locale $r15;
        java.lang.Throwable $r26, $r27, r37;
        android.os.IBinder r28;
        android.util.Pair r29;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r28 := @parameter0: android.os.IBinder;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r28);

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return 0;

     label03:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r29 = virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.Pair getLastInputMethodAndSubtypeLocked()>();

     label04:
        if r29 == null goto label07;

     label05:
        $r24 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r23 = r29.<android.util.Pair: java.lang.Object first>;

        $r25 = virtualinvoke $r24.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r23);

        r30 = (android.view.inputmethod.InputMethodInfo) $r25;

     label06:
        goto label08;

     label07:
        r30 = null;

     label08:
        r31 = null;

        i2 = -1;

        if r29 == null goto label14;

        r31 = null;

        i2 = -1;

        if r30 == null goto label14;

     label09:
        $r16 = virtualinvoke r30.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $r17 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        z4 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        $r18 = r29.<android.util.Pair: java.lang.Object second>;

        $r19 = (java.lang.String) $r18;

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);

        $r20 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        if $r20 != null goto label11;

     label10:
        i4 = -1;

        goto label12;

     label11:
        $r21 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        i4 = virtualinvoke $r21.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

     label12:
        if z4 == 0 goto label13;

        r31 = null;

        i2 = -1;

        if i3 == i4 goto label14;

     label13:
        $r22 = r29.<android.util.Pair: java.lang.Object first>;

        r31 = (java.lang.String) $r22;

        i2 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>(r30, i3);

     label14:
        r32 = r31;

        i5 = i2;

     label15:
        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r31);

        if $z5 == 0 goto label36;

     label16:
        r32 = r31;

        i5 = i2;

     label17:
        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        $z1 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean canAddToLastInputMethod(android.view.inputmethod.InputMethodSubtype)>($r5);

        if $z1 != 0 goto label36;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r33 = virtualinvoke $r6.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

     label18:
        r32 = r31;

        i5 = i2;

        if r33 == null goto label36;

     label19:
        i6 = interfaceinvoke r33.<java.util.List: int size()>();

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        if $r7 != null goto label21;

        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.res.Resources mRes>;

        $r14 = virtualinvoke $r13.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r15 = $r14.<android.content.res.Configuration: java.util.Locale locale>;

        r34 = virtualinvoke $r15.<java.util.Locale: java.lang.String toString()>();

     label20:
        goto label22;

     label21:
        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        r34 = virtualinvoke $r8.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

     label22:
        i7 = 0;

     label23:
        r32 = r31;

        i5 = i2;

        if i7 >= i6 goto label36;

     label24:
        $r9 = interfaceinvoke r33.<java.util.List: java.lang.Object get(int)>(i7);

        r2 = (android.view.inputmethod.InputMethodInfo) $r9;

     label25:
        r35 = r31;

        i8 = i2;

     label26:
        $i0 = virtualinvoke r2.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        if $i0 <= 0 goto label35;

     label27:
        r35 = r31;

        i8 = i2;

     label28:
        $z2 = virtualinvoke r2.<android.view.inputmethod.InputMethodInfo: boolean isSystem()>();

        if $z2 == 0 goto label35;

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.res.Resources mRes>;

        $r11 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.util.ArrayList getSubtypes(android.view.inputmethod.InputMethodInfo)>(r2);

        r3 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources,java.util.List,java.lang.String,java.lang.String,boolean)>($r10, $r11, "keyboard", r34, 1);

     label29:
        r35 = r31;

        i8 = i2;

        if r3 == null goto label35;

     label30:
        r36 = virtualinvoke r2.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

     label31:
        $i1 = virtualinvoke r3.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        i9 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>(r2, $i1);

     label32:
        r35 = r36;

        i8 = i9;

     label33:
        $r12 = virtualinvoke r3.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r34);

        if $z3 == 0 goto label35;

     label34:
        r32 = r36;

        i5 = i9;

        goto label36;

     label35:
        i7 = i7 + 1;

        r31 = r35;

        i2 = i8;

        goto label23;

     label36:
        z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r32);

     label37:
        if z6 != 0 goto label40;

     label38:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setInputMethodWithSubtypeIdLocked(android.os.IBinder,java.lang.String,int)>(r28, r32, i5);

        exitmonitor r1;

     label39:
        return 1;

     label40:
        exitmonitor r1;

     label41:
        return 0;

     label42:
        $r26 := @caughtexception;

        r37 = $r26;

     label43:
        exitmonitor r1;

     label44:
        throw r37;

     label45:
        $r27 := @caughtexception;

        r37 = $r27;

        goto label43;

        catch java.lang.Throwable from label01 to label02 with label42;
        catch java.lang.Throwable from label03 to label04 with label42;
        catch java.lang.Throwable from label05 to label06 with label42;
        catch java.lang.Throwable from label09 to label10 with label42;
        catch java.lang.Throwable from label11 to label12 with label42;
        catch java.lang.Throwable from label13 to label14 with label42;
        catch java.lang.Throwable from label15 to label16 with label42;
        catch java.lang.Throwable from label17 to label18 with label42;
        catch java.lang.Throwable from label19 to label20 with label42;
        catch java.lang.Throwable from label21 to label22 with label42;
        catch java.lang.Throwable from label24 to label25 with label42;
        catch java.lang.Throwable from label26 to label27 with label42;
        catch java.lang.Throwable from label28 to label29 with label42;
        catch java.lang.Throwable from label30 to label31 with label42;
        catch java.lang.Throwable from label31 to label32 with label42;
        catch java.lang.Throwable from label33 to label34 with label42;
        catch java.lang.Throwable from label36 to label37 with label42;
        catch java.lang.Throwable from label38 to label39 with label45;
        catch java.lang.Throwable from label40 to label41 with label45;
        catch java.lang.Throwable from label43 to label44 with label45;
    }

    private void switchUserOnHandlerLocked(int, com.android.internal.view.IInputMethodClient)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        com.android.server.inputmethod.InputMethodManagerService$SettingsObserver $r1;
        boolean $z0, $z1, $z2, $z4, $z5, z6, z7, $z8;
        android.util.ArrayMap $r2, $r19;
        android.os.IBinder $r3, $r11;
        java.lang.Object $r4;
        com.android.internal.view.IInputMethodClient $r5, r17;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r6, $r12, $r18, $r20;
        android.content.pm.IPackageManager $r7;
        java.util.ArrayList $r8;
        android.content.Context $r9, $r14;
        java.lang.String $r10, $r13, $r21;
        android.os.UserManagerInternal $r15;
        android.os.RemoteException $r16;
        android.content.res.Resources $r22;
        android.content.res.Configuration $r23;
        android.os.LocaleList $r24;
        com.android.server.inputmethod.InputMethodManagerService$ClientState r25;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        r17 := @parameter1: com.android.internal.view.IInputMethodClient;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SettingsObserver mSettingsObserver>;

        virtualinvoke $r1.<com.android.server.inputmethod.InputMethodManagerService$SettingsObserver: void registerContentObserverLocked(int)>(i0);

        $z0 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mSystemReady>;

        if $z0 == 0 goto label02;

        $r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.UserManagerInternal mUserManagerInternal>;

        $z5 = virtualinvoke $r15.<android.os.UserManagerInternal: boolean isUserUnlockingOrUnlocked(int)>(i0);

        if $z5 != 0 goto label01;

        goto label02;

     label01:
        z6 = 0;

        goto label03;

     label02:
        z6 = 1;

     label03:
        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        virtualinvoke $r18.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void switchCurrentUser(int,boolean)>(i0, z6);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateCurrentProfileIds()>();

        $r19 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mAdditionalSubtypeMap>;

        staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: void load(android.util.ArrayMap,int)>($r19, i0);

        $r20 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r21 = virtualinvoke $r20.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r21);

        $r22 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.res.Resources mRes>;

        $r23 = virtualinvoke $r22.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r24 = virtualinvoke $r23.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.LocaleList mLastSystemLocales> = $r24;

        $z8 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mSystemReady>;

        if $z8 == 0 goto label05;

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean hideCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>($r11, 0, null, 9);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void resetCurrentMethodAndClient(int)>(6);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void buildInputMethodListLocked(boolean)>(z7);

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r13 = virtualinvoke $r12.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r13);

        if $z4 == 0 goto label04;

        $r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void resetDefaultImeLocked(android.content.Context)>($r14);

     label04:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateFromSettingsLocked(boolean)>(1);

     label05:
        if z7 == 0 goto label06;

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager>;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r8 = virtualinvoke $r6.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getBasePackageName()>();

        staticinvoke <com.android.server.inputmethod.InputMethodUtils: void setNonSelectedSystemImesDisabledUntilUsed(android.content.pm.IPackageManager,java.util.List,int,java.lang.String)>($r7, $r8, i0, $r10);

     label06:
        r0.<com.android.server.inputmethod.InputMethodManagerService: int mLastSwitchUserId> = i0;

        $z1 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mIsInteractive>;

        if $z1 == 0 goto label10;

        if r17 == null goto label10;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients>;

        $r3 = interfaceinvoke r17.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r4 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        r25 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r4;

        if r25 != null goto label07;

        return;

     label07:
        $r5 = r25.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $z2 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInFullscreenMode>;

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodClient: void scheduleStartInputIfNecessary(boolean)>($z2);

     label08:
        goto label10;

     label09:
        $r16 := @caughtexception;

     label10:
        return;

        catch android.os.RemoteException from label07 to label08 with label09;
    }

    private boolean transferTouchFocusToImeWindow(android.os.IBinder, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i1;
        android.util.ArrayMap r1;
        android.os.IBinder r2, $r3, r6;
        android.hardware.input.InputManagerInternal $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r6 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label1:
        $i1 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        if i0 != $i1 goto label5;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurHostInputToken>;

        if $r3 != null goto label3;

     label2:
        goto label5;

     label3:
        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurHostInputToken>;

        exitmonitor r1;

     label4:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.hardware.input.InputManagerInternal mInputManagerInternal>;

        $z0 = virtualinvoke $r4.<android.hardware.input.InputManagerInternal: boolean transferTouchFocus(android.os.IBinder,android.os.IBinder)>(r6, r2);

        return $z0;

     label5:
        exitmonitor r1;

     label6:
        return 0;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void updateStatusIcon(android.os.IBinder, java.lang.String, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.lang.String r1, $r10, $r13, r23, r24;
        int i0, $i2;
        android.util.ArrayMap r2;
        long l1;
        com.android.server.statusbar.StatusBarManagerService r3, $r9, $r11, $r12, $r14;
        boolean $z0;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r6;
        android.content.pm.IPackageManager $r7;
        android.content.pm.ApplicationInfo $r8;
        android.os.RemoteException $r15;
        java.lang.Throwable $r16, $r17;
        android.os.IBinder r18;
        java.lang.CharSequence r20, r21;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r18 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r2;

     label01:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r18);

        if $z0 != 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        if i0 != 0 goto label08;

     label05:
        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.statusbar.StatusBarManagerService mStatusBar>;

        if $r12 == null goto label21;

        $r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.statusbar.StatusBarManagerService mStatusBar>;

        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mSlotIme>;

        virtualinvoke $r14.<com.android.server.statusbar.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>($r13, 0);

     label06:
        goto label21;

     label07:
        $r17 := @caughtexception;

        goto label19;

     label08:
        if r1 == null goto label21;

        r20 = null;

     label09:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager>;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i2 = virtualinvoke $r6.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r8 = interfaceinvoke $r7.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 0, $i2);

        r21 = virtualinvoke $r5.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r8);

     label10:
        r20 = r21;

        goto label12;

     label11:
        $r15 := @caughtexception;

     label12:
        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.statusbar.StatusBarManagerService mStatusBar>;

        if $r9 == null goto label21;

        r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.statusbar.StatusBarManagerService mStatusBar>;

        r23 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mSlotIme>;

     label13:
        if r20 == null goto label16;

     label14:
        r24 = interfaceinvoke r20.<java.lang.CharSequence: java.lang.String toString()>();

     label15:
        goto label17;

     label16:
        r24 = null;

     label17:
        virtualinvoke r3.<com.android.server.statusbar.StatusBarManagerService: void setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)>(r23, r1, i0, 0, r24);

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.statusbar.StatusBarManagerService mStatusBar>;

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mSlotIme>;

        virtualinvoke $r11.<com.android.server.statusbar.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>($r10, 1);

     label18:
        goto label21;

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label20:
        throw $r17;

     label21:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label22:
        exitmonitor r2;

     label23:
        return;

     label24:
        $r16 := @caughtexception;

     label25:
        exitmonitor r2;

     label26:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
        catch java.lang.Throwable from label14 to label15 with label07;
        catch java.lang.Throwable from label17 to label18 with label07;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label21 to label22 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    private void updateSystemUiLocked(int, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i2, i3, i4, i5;
        long l1;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.os.IBinder $r1, $r23;
        com.android.server.statusbar.StatusBarManagerService $r2, $r24;
        java.lang.String $r3;
        android.util.ArrayMap $r4;
        java.lang.Object $r5;
        android.app.NotificationManager $r6, $r8, $r17, $r20;
        android.os.UserHandle $r7, $r22;
        android.content.res.Resources $r9;
        android.view.inputmethod.InputMethodSubtype $r10;
        android.content.Context $r11;
        android.app.Notification$Builder $r12, $r13, $r14, $r19;
        android.app.PendingIntent $r15;
        android.view.IWindowManager $r18;
        android.app.Notification $r21;
        java.lang.Throwable $r25;
        android.os.RemoteException $r26;
        android.view.inputmethod.InputMethodInfo r27;
        java.lang.CharSequence r28, r29;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken>;

        if $r1 != null goto label01;

        return;

     label01:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i4 = i3;

        if i3 == 0 goto label06;

        i4 = i3;

     label02:
        $z3 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean isKeyguardLocked()>();

        if $z3 == 0 goto label06;

     label03:
        i4 = i3;

     label04:
        $z4 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mCurClientInKeyguard>;

        if $z4 != 0 goto label06;

     label05:
        i4 = 0;

     label06:
        i5 = i4;

     label07:
        $z5 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mCurPerceptible>;

        if $z5 != 0 goto label09;

     label08:
        i5 = i4 & -3;

     label09:
        z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean shouldShowImeSwitcherLocked(int)>(i5);

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.statusbar.StatusBarManagerService mStatusBar>;

        if $r2 == null goto label10;

        $r24 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.statusbar.StatusBarManagerService mStatusBar>;

        $i2 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        $r23 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken>;

        virtualinvoke $r24.<com.android.server.statusbar.StatusBarManagerService: void setImeWindowStatus(int,android.os.IBinder,int,int,boolean,boolean)>($i2, $r23, i5, i0, z0, 0);

     label10:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        r27 = (android.view.inputmethod.InputMethodInfo) $r5;

     label11:
        if r27 == null goto label17;

        if z0 == 0 goto label17;

     label12:
        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.res.Resources mRes>;

        r28 = virtualinvoke $r9.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17041203);

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        r29 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.lang.CharSequence getImeAndSubtypeDisplayName(android.content.Context,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>($r11, r27, $r10);

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.Notification$Builder mImeSwitcherNotification>;

        $r13 = virtualinvoke $r12.<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>(r28);

        $r14 = virtualinvoke $r13.<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>(r29);

        $r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.PendingIntent mImeSwitchPendingIntent>;

        virtualinvoke $r14.<android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>($r15);

     label13:
        $r17 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.NotificationManager mNotificationManager>;

        if $r17 == null goto label14;

        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.IWindowManager mIWindowManager>;

        $z2 = interfaceinvoke $r18.<android.view.IWindowManager: boolean hasNavigationBar(int)>(0);

        if $z2 != 0 goto label14;

        $r20 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.NotificationManager mNotificationManager>;

        $r19 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.Notification$Builder mImeSwitcherNotification>;

        $r21 = virtualinvoke $r19.<android.app.Notification$Builder: android.app.Notification build()>();

        $r22 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r20.<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>(null, 8, $r21, $r22);

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mNotificationShown> = 1;

     label14:
        goto label16;

     label15:
        $r26 := @caughtexception;

     label16:
        goto label18;

     label17:
        $z1 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mNotificationShown>;

        if $z1 == 0 goto label18;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.NotificationManager mNotificationManager>;

        if $r6 == null goto label18;

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.NotificationManager mNotificationManager>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r8.<android.app.NotificationManager: void cancelAsUser(java.lang.String,int,android.os.UserHandle)>(null, 8, $r7);

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mNotificationShown> = 0;

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label19:
        $r25 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r25;

        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    private boolean userHasDebugPriv(int, android.os.ShellCommand)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        android.os.UserManager $r2;
        android.os.UserHandle $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r8;
        android.os.ShellCommand r9;
        java.io.PrintWriter r10;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        r9 := @parameter1: android.os.ShellCommand;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.UserManager mUserManager>;

        $r3 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        $z0 = virtualinvoke $r2.<android.os.UserManager: boolean hasUserRestriction(java.lang.String,android.os.UserHandle)>("no_debugging_features", $r3);

        if $z0 == 0 goto label1;

        r10 = virtualinvoke r9.<android.os.ShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User #");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is restricted with DISALLOW_DEBUGGING_FEATURES.");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r10.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return 0;

     label1:
        return 1;
    }

    public void addClient(com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7;
        android.util.ArrayMap r1, r2, $r5, $r8;
        android.os.IBinder r3, $r6;
        com.android.server.inputmethod.InputMethodManagerService$ClientState r4, r23;
        java.lang.Object $r9;
        java.lang.String $r17;
        java.lang.Throwable $r18, $r19, r29;
        android.os.RemoteException $r20;
        com.android.internal.view.IInputMethodClient r21;
        com.android.internal.view.IInputContext r22;
        java.lang.SecurityException r24;
        java.lang.StringBuilder r25;
        com.android.server.inputmethod.InputMethodManagerService$ClientDeathRecipient r26;
        java.lang.IllegalStateException r28;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r21 := @parameter0: com.android.internal.view.IInputMethodClient;

        r22 := @parameter1: com.android.internal.view.IInputContext;

        i0 := @parameter2: int;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients>;

        i3 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

     label02:
        i7 = 0;

     label03:
        if i7 >= i3 goto label08;

     label04:
        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r23 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r9;

        $i4 = r23.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        if $i4 != i1 goto label07;

        $i5 = r23.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int pid>;

        if $i5 != i2 goto label07;

        $i6 = r23.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        if $i6 == i0 goto label06;

     label05:
        goto label07;

     label06:
        r24 = new java.lang.SecurityException;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uid=");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/pid=");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/displayId=");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already registered.");

        $r17 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r24.<java.lang.SecurityException: void <init>(java.lang.String)>($r17);

        throw r24;

     label07:
        i7 = i7 + 1;

        goto label03;

     label08:
        r26 = new com.android.server.inputmethod.InputMethodManagerService$ClientDeathRecipient;

     label09:
        specialinvoke r26.<com.android.server.inputmethod.InputMethodManagerService$ClientDeathRecipient: void <init>(com.android.server.inputmethod.InputMethodManagerService,com.android.internal.view.IInputMethodClient)>(r0, r21);

     label10:
        $r6 = interfaceinvoke r21.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        interfaceinvoke $r6.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r26, 0);

     label11:
        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients>;

        r3 = interfaceinvoke r21.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        r4 = new com.android.server.inputmethod.InputMethodManagerService$ClientState;

        specialinvoke r4.<com.android.server.inputmethod.InputMethodManagerService$ClientState: void <init>(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int,int,com.android.server.inputmethod.InputMethodManagerService$ClientDeathRecipient)>(r21, r22, i1, i2, i0, r26);

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r20 := @caughtexception;

     label15:
        r28 = new java.lang.IllegalStateException;

        specialinvoke r28.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r20);

        throw r28;

     label16:
        $r18 := @caughtexception;

        r29 = $r18;

     label17:
        exitmonitor r1;

     label18:
        throw r29;

     label19:
        $r19 := @caughtexception;

        r29 = $r19;

        goto label17;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch android.os.RemoteException from label10 to label11 with label14;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    com.android.internal.view.InputBindResult attachNewInputLocked(int, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18;
        com.android.server.inputmethod.InputMethodManagerService$SessionState r1;
        boolean $z0, $z1, $z2, z4, z5;
        android.os.Binder $r2;
        com.android.server.inputmethod.InputMethodManagerService$StartInputInfo $r3;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r4, $r15, $r29;
        com.android.server.inputmethod.InputMethodManagerService$ClientState $r5, $r8, $r16, $r17, $r31, $r32;
        android.os.IBinder $r6, $r10, $r11, $r28;
        java.lang.String $r7, $r26;
        android.view.inputmethod.EditorInfo $r9, $r18;
        java.util.WeakHashMap $r12;
        com.android.server.inputmethod.InputMethodManagerService$StartInputHistory $r14;
        com.android.internal.view.IInputContext $r19;
        com.android.internal.os.HandlerCaller $r20, $r34;
        com.android.internal.view.IInputMethod $r21, r36;
        android.os.Message $r22, $r35;
        android.view.InputChannel $r23, $r27, r39;
        com.android.internal.view.InputBindResult $r24;
        android.graphics.Matrix $r25;
        android.content.pm.PackageManagerInternal $r30;
        android.view.inputmethod.InputBinding $r33;
        com.android.internal.view.IInputMethodSession r40;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        z4 := @parameter1: boolean;

        $z0 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mBoundToMethod>;

        if $z0 != 0 goto label1;

        r36 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r34 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r32 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r33 = $r32.<com.android.server.inputmethod.InputMethodManagerService$ClientState: android.view.inputmethod.InputBinding binding>;

        $r35 = virtualinvoke $r34.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(1010, r36, $r33);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>(r36, $r35);

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mBoundToMethod> = 1;

     label1:
        $r2 = new android.os.Binder;

        specialinvoke $r2.<android.os.Binder: void <init>()>();

        $r3 = new com.android.server.inputmethod.InputMethodManagerService$StartInputInfo;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i1 = virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken>;

        $i3 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurId>;

        $z1 = z4 ^ 1;

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $i2 = $r5.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $i7 = $r8.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.EditorInfo mCurAttribute>;

        $i6 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurFocusedWindowSoftInputMode>;

        $i5 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurSeq>;

        specialinvoke $r3.<com.android.server.inputmethod.InputMethodManagerService$StartInputInfo: void <init>(int,android.os.IBinder,int,java.lang.String,int,boolean,int,int,android.os.IBinder,android.view.inputmethod.EditorInfo,int,int)>($i1, $r6, $i3, $r7, i0, $z1, $i4, $i7, $r10, $r9, $i6, $i5);

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.WeakHashMap mImeTargetWindowMap>;

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        virtualinvoke $r12.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r11);

        $r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$StartInputHistory mStartInputHistory>;

        virtualinvoke $r14.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: void addEntry(com.android.server.inputmethod.InputMethodManagerService$StartInputInfo)>($r3);

        $r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i8 = virtualinvoke $r15.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r16 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $i9 = $r16.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        $i10 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i9);

        if $i8 != $i10 goto label2;

        $r30 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.pm.PackageManagerInternal mPackageManagerInternal>;

        $r29 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i14 = virtualinvoke $r29.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $i15 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurMethodUid>;

        $i16 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i15);

        $r31 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $i17 = $r31.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        virtualinvoke $r30.<android.content.pm.PackageManagerInternal: void grantImplicitAccess(int,android.content.Intent,int,int,boolean)>($i14, null, $i16, $i17, 1);

     label2:
        $r17 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        r1 = $r17.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.server.inputmethod.InputMethodManagerService$SessionState curSession>;

        $r21 = r1.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethod method>;

        $r20 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $i11 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurInputContextMissingMethods>;

        $z2 = z4 ^ 1;

        $r19 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputContext mCurInputContext>;

        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.EditorInfo mCurAttribute>;

        i18 = (int) $z2;

        $r22 = virtualinvoke $r20.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIOOOO(int,int,int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(2000, $i11, i18, $r2, r1, $r19, $r18);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r21, $r22);

        z5 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowRequested>;

        r39 = null;

        if z5 == 0 goto label3;

        $r28 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        $i13 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: int getAppShowFlags()>();

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean showCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>($r28, $i13, null, 1);

     label3:
        r40 = r1.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        $r23 = r1.<com.android.server.inputmethod.InputMethodManagerService$SessionState: android.view.InputChannel channel>;

        if $r23 == null goto label4;

        $r27 = r1.<com.android.server.inputmethod.InputMethodManagerService$SessionState: android.view.InputChannel channel>;

        r39 = virtualinvoke $r27.<android.view.InputChannel: android.view.InputChannel dup()>();

     label4:
        $r24 = new com.android.internal.view.InputBindResult;

        $r26 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurId>;

        $i12 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurSeq>;

        $r25 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.graphics.Matrix mCurActivityViewToScreenMatrix>;

        specialinvoke $r24.<com.android.internal.view.InputBindResult: void <init>(int,com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int,android.graphics.Matrix)>(0, r40, r39, $r26, $i12, $r25);

        return $r24;
    }

    void buildInputMethodListLocked(boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean z0, $z3, $z4, $z5, $z7, $z9, $z10, $z11, z12, z13, z14, z15, z16;
        int i0, $i1, $i2, $i3, $i4, i7, i8, i9, i10, i11, $i12;
        com.android.server.inputmethod.InputMethodManagerService$MyPackageMonitor $r1, $r26;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r2, $r10, $r13, $r18, $r39;
        android.content.Context $r3, $r7, $r12, $r34;
        java.util.ArrayList $r4, $r11, $r20, r29, r31, $r35, $r36;
        android.util.ArrayMap $r5, $r6, $r14;
        android.content.pm.PackageManager $r8;
        android.content.Intent $r9;
        java.lang.Object $r15, $r19, $r21;
        android.view.inputmethod.InputMethodInfo $r16, r30;
        java.lang.String $r17, $r23, $r24, $r25, r32;
        android.content.pm.ResolveInfo $r22;
        java.util.List r27;
        android.content.pm.ServiceInfo r28;
        com.android.server.inputmethod.InputMethodSubtypeSwitchingController $r33;
        android.os.Handler $r38;
        android.os.Message $r40;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        z0 := @parameter0: boolean;

        $z3 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mSystemReady>;

        if $z3 != 0 goto label01;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", "buildInputMethodListLocked is not allowed until system is ready");

        return;

     label01:
        $i1 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mMethodMapUpdateCount>;

        $i2 = $i1 + 1;

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mMethodMapUpdateCount> = $i2;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$MyPackageMonitor mMyPackageMonitor>;

        virtualinvoke $r1.<com.android.server.inputmethod.InputMethodManagerService$MyPackageMonitor: void clearKnownImePackageNamesLocked()>();

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i3 = virtualinvoke $r2.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mAdditionalSubtypeMap>;

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.ArrayList mMethodList>;

        staticinvoke <com.android.server.inputmethod.InputMethodManagerService: void queryInputMethodServicesInternal(android.content.Context,int,android.util.ArrayMap,android.util.ArrayMap,java.util.ArrayList)>($r3, $i3, $r6, $r5, $r4);

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("android.view.InputMethod");

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i4 = virtualinvoke $r10.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        r27 = virtualinvoke $r8.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r9, 512, $i4);

        i7 = interfaceinvoke r27.<java.util.List: int size()>();

        i8 = 0;

     label02:
        if i8 >= i7 goto label04;

        $r21 = interfaceinvoke r27.<java.util.List: java.lang.Object get(int)>(i8);

        $r22 = (android.content.pm.ResolveInfo) $r21;

        r28 = $r22.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r24 = "android.permission.BIND_INPUT_METHOD";

        $r23 = r28.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z11 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z11 == 0 goto label03;

        $r26 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$MyPackageMonitor mMyPackageMonitor>;

        $r25 = r28.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke $r26.<com.android.server.inputmethod.InputMethodManagerService$MyPackageMonitor: void addKnownImePackageNameLocked(java.lang.String)>($r25);

     label03:
        i8 = i8 + 1;

        goto label02;

     label04:
        z12 = 0;

        z13 = z0;

        if z0 != 0 goto label09;

        z14 = 0;

        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r29 = virtualinvoke $r18.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        i0 = interfaceinvoke r29.<java.util.List: int size()>();

        i9 = 0;

     label05:
        z15 = z14;

        z16 = 0;

        if i9 >= i0 goto label07;

        $r19 = interfaceinvoke r29.<java.util.List: java.lang.Object get(int)>(i9);

        r30 = (android.view.inputmethod.InputMethodInfo) $r19;

        $r20 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.ArrayList mMethodList>;

        $z9 = virtualinvoke $r20.<java.util.ArrayList: boolean contains(java.lang.Object)>(r30);

        if $z9 == 0 goto label06;

        z15 = 1;

        z14 = 1;

        $z10 = virtualinvoke r30.<android.view.inputmethod.InputMethodInfo: boolean isAuxiliaryIme()>();

        if $z10 != 0 goto label06;

        z16 = 1;

        goto label07;

     label06:
        i9 = i9 + 1;

        goto label05;

     label07:
        if z15 != 0 goto label08;

        z13 = 1;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void resetSelectedInputMethodAndSubtypeLocked(java.lang.String)>("");

        z12 = 0;

        goto label09;

     label08:
        z12 = 0;

        z13 = z0;

        if z16 != 0 goto label09;

        z12 = 1;

        z13 = z0;

     label09:
        if z13 != 0 goto label10;

        if z12 == 0 goto label12;

     label10:
        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.ArrayList mMethodList>;

        r31 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.util.ArrayList getDefaultEnabledImes(android.content.Context,java.util.ArrayList,boolean)>($r12, $r11, z12);

        i10 = virtualinvoke r31.<java.util.ArrayList: int size()>();

        i11 = 0;

     label11:
        if i11 >= i10 goto label12;

        $r15 = virtualinvoke r31.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        $r16 = (android.view.inputmethod.InputMethodInfo) $r15;

        $r17 = virtualinvoke $r16.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>($r17, 1);

        i11 = i11 + 1;

        goto label11;

     label12:
        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r32 = virtualinvoke $r13.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r32);

        if $z4 != 0 goto label14;

        $r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $z5 = virtualinvoke $r14.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r32);

        if $z5 != 0 goto label13;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Default IME is uninstalled. Choose new default IME.");

        $z7 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean chooseNewDefaultIMELocked()>();

        if $z7 == 0 goto label14;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateInputMethodsFromSettingsLocked(boolean)>(1);

        goto label14;

     label13:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>(r32, 1);

     label14:
        $r33 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodSubtypeSwitchingController mSwitchingController>;

        $r34 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        virtualinvoke $r33.<com.android.server.inputmethod.InputMethodSubtypeSwitchingController: void resetCircularListLocked(android.content.Context)>($r34);

        $r35 = new java.util.ArrayList;

        $r36 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.ArrayList mMethodList>;

        specialinvoke $r35.<java.util.ArrayList: void <init>(java.util.Collection)>($r36);

        $r38 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.Handler mHandler>;

        $r39 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i12 = virtualinvoke $r39.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r40 = virtualinvoke $r38.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(5010, $i12, 0, $r35);

        virtualinvoke $r40.<android.os.Message: void sendToTarget()>();

        return;
    }

    void clearClientSessionLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        com.android.server.inputmethod.InputMethodManagerService$ClientState r1;
        com.android.server.inputmethod.InputMethodManagerService$SessionState $r2;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter0: com.android.server.inputmethod.InputMethodManagerService$ClientState;

        $r2 = r1.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.server.inputmethod.InputMethodManagerService$SessionState curSession>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void finishSessionLocked(com.android.server.inputmethod.InputMethodManagerService$SessionState)>($r2);

        r1.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.server.inputmethod.InputMethodManagerService$SessionState curSession> = null;

        r1.<com.android.server.inputmethod.InputMethodManagerService$ClientState: boolean sessionRequested> = 0;

        return;
    }

    void clearCurMethodLocked()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, i1;
        com.android.server.statusbar.StatusBarManagerService r1;
        com.android.internal.view.IInputMethod $r2;
        java.lang.String $r3;
        android.util.ArrayMap $r4, $r6;
        com.android.server.inputmethod.InputMethodManagerService$SessionState $r5;
        java.lang.Object $r7;
        com.android.server.inputmethod.InputMethodManagerService$ClientState $r8;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r2 == null goto label3;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients>;

        i0 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r8 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r7;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void clearClientSessionLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void finishSessionLocked(com.android.server.inputmethod.InputMethodManagerService$SessionState)>($r5);

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession> = null;

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod> = null;

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurMethodUid> = -1;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void scheduleNotifyImeUidToAudioService(int)>(-1);

     label3:
        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.statusbar.StatusBarManagerService mStatusBar>;

        if r1 == null goto label4;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mSlotIme>;

        virtualinvoke r1.<com.android.server.statusbar.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>($r3, 0);

     label4:
        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInFullscreenMode> = 0;

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.lang.String[] r1;
        android.content.Context $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        android.util.PrintWriterPrinter $r4;
        java.util.ArrayList $r5, $r116;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;
        java.lang.String $r8, $r11, $r13, $r18, $r21, $r26, $r31, $r33, $r41, $r45, $r48, $r52, $r56, $r60, $r64, $r73, $r76, $r81, $r85, $r100, $r104, $r108, $r111, $r115, $r121, $r127, $r132, $r137;
        android.util.ArrayMap $r9, $r95, r140;
        android.os.IBinder $r23, $r43, $r50, $r90, $r92, $r94;
        com.android.server.inputmethod.InputMethodManagerService$ClientState $r29, r144, r151, r155;
        android.content.Intent $r54;
        com.android.internal.view.IInputMethod $r58, r161;
        com.android.server.inputmethod.InputMethodManagerService$SessionState $r62, $r113;
        com.android.server.inputmethod.InputMethodManagerService$SettingsObserver $r83;
        com.android.server.inputmethod.InputMethodSubtypeSwitchingController $r86;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r87;
        com.android.server.inputmethod.InputMethodManagerService$StartInputHistory $r88;
        com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory $r89;
        com.android.internal.view.IInputMethodClient $r91, $r93, $r102;
        java.lang.Object $r96, $r117;
        com.android.internal.view.IInputContext $r106;
        java.lang.Throwable $r122, $r123, $r128, $r133;
        java.lang.StringBuilder $r124, $r129, $r134, r141, r143, r145, r146, r147, r148, r149, r150, r152, r153, r154, r156, r157, r158, r159, r160, r162, r163, r164, r165, r166, r167;
        java.io.FileDescriptor r138;
        java.io.PrintWriter r139;
        android.view.inputmethod.InputMethodInfo r142;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r138 := @parameter0: java.io.FileDescriptor;

        r139 := @parameter1: java.io.PrintWriter;

        r1 := @parameter2: java.lang.String[];

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r3, "InputMethodManagerService", r139);

        if $z0 != 0 goto label01;

        return;

     label01:
        $r4 = new android.util.PrintWriterPrinter;

        specialinvoke $r4.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r139);

        r140 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r140;

     label02:
        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>("Current Input Method Manager state:");

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.ArrayList mMethodList>;

        i4 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        r141 = new java.lang.StringBuilder;

        specialinvoke r141.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Input Methods: mMethodMapUpdateCount=");

        $i0 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mMethodMapUpdateCount>;

        virtualinvoke r141.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke r141.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r8);

     label03:
        i5 = 0;

     label04:
        if i5 >= i4 goto label07;

     label05:
        $r116 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.ArrayList mMethodList>;

        $r117 = virtualinvoke $r116.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r142 = (android.view.inputmethod.InputMethodInfo) $r117;

        r143 = new java.lang.StringBuilder;

        specialinvoke r143.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  InputMethod #");

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r121 = virtualinvoke r143.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r121);

        virtualinvoke r142.<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)>($r4, "    ");

     label06:
        i5 = i5 + 1;

        goto label04;

     label07:
        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>("  Clients:");

        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients>;

        i6 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

     label08:
        i7 = 0;

     label09:
        if i7 >= i6 goto label12;

     label10:
        $r95 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients>;

        $r96 = virtualinvoke $r95.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r144 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r96;

        r145 = new java.lang.StringBuilder;

        specialinvoke r145.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Client ");

        virtualinvoke r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r144);

        virtualinvoke r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r100 = virtualinvoke r145.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r100);

        r146 = new java.lang.StringBuilder;

        specialinvoke r146.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    client=");

        $r102 = r144.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        virtualinvoke r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r102);

        $r104 = virtualinvoke r146.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r104);

        r147 = new java.lang.StringBuilder;

        specialinvoke r147.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    inputContext=");

        $r106 = r144.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputContext inputContext>;

        virtualinvoke r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r106);

        $r108 = virtualinvoke r147.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r108);

        r148 = new java.lang.StringBuilder;

        specialinvoke r148.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    sessionRequested=");

        $z12 = r144.<com.android.server.inputmethod.InputMethodManagerService$ClientState: boolean sessionRequested>;

        virtualinvoke r148.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        $r111 = virtualinvoke r148.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r111);

        r149 = new java.lang.StringBuilder;

        specialinvoke r149.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    curSession=");

        $r113 = r144.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.server.inputmethod.InputMethodManagerService$SessionState curSession>;

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r113);

        $r115 = virtualinvoke r149.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r115);

     label11:
        i7 = i7 + 1;

        goto label09;

     label12:
        r150 = new java.lang.StringBuilder;

        specialinvoke r150.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurMethodId=");

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        virtualinvoke r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke r150.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r13);

        r151 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        r152 = new java.lang.StringBuilder;

        specialinvoke r152.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurClient=");

        virtualinvoke r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r151);

        virtualinvoke r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurSeq=");

        $i1 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurSeq>;

        virtualinvoke r152.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r18 = virtualinvoke r152.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r18);

        r153 = new java.lang.StringBuilder;

        specialinvoke r153.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurPerceptible=");

        $z1 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mCurPerceptible>;

        virtualinvoke r153.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r21 = virtualinvoke r153.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r21);

        r154 = new java.lang.StringBuilder;

        specialinvoke r154.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurFocusedWindow=");

        $r23 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" softInputMode=");

        $i2 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurFocusedWindowSoftInputMode>;

        $r26 = staticinvoke <com.android.internal.inputmethod.InputMethodDebug: java.lang.String softInputModeToString(int)>($i2);

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client=");

        $r29 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurFocusedWindowClient>;

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke r154.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r31);

        r155 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurFocusedWindowClient>;

        r156 = new java.lang.StringBuilder;

        specialinvoke r156.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurId=");

        $r33 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurId>;

        virtualinvoke r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHaveConnection=");

        $z2 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mHaveConnection>;

        virtualinvoke r156.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBoundToMethod=");

        $z3 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mBoundToMethod>;

        virtualinvoke r156.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVisibleBound=");

        $z4 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mVisibleBound>;

        virtualinvoke r156.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r41 = virtualinvoke r156.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r41);

        r157 = new java.lang.StringBuilder;

        specialinvoke r157.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurToken=");

        $r43 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken>;

        virtualinvoke r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r45 = virtualinvoke r157.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r45);

        r158 = new java.lang.StringBuilder;

        specialinvoke r158.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurTokenDisplayId=");

        $i3 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        virtualinvoke r158.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r48 = virtualinvoke r158.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r48);

        r159 = new java.lang.StringBuilder;

        specialinvoke r159.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurHostInputToken=");

        $r50 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurHostInputToken>;

        virtualinvoke r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r50);

        $r52 = virtualinvoke r159.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r52);

        r160 = new java.lang.StringBuilder;

        specialinvoke r160.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurIntent=");

        $r54 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent>;

        virtualinvoke r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r54);

        $r56 = virtualinvoke r160.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r56);

        r161 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        r162 = new java.lang.StringBuilder;

        specialinvoke r162.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurMethod=");

        $r58 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        virtualinvoke r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r60 = virtualinvoke r162.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r60);

        r163 = new java.lang.StringBuilder;

        specialinvoke r163.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mEnabledSession=");

        $r62 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession>;

        virtualinvoke r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);

        $r64 = virtualinvoke r163.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r64);

        r164 = new java.lang.StringBuilder;

        specialinvoke r164.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mShowRequested=");

        $z5 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowRequested>;

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mShowExplicitlyRequested=");

        $z6 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowExplicitlyRequested>;

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mShowForced=");

        $z7 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowForced>;

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mInputShown=");

        $z8 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInputShown>;

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r73 = virtualinvoke r164.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r73);

        r165 = new java.lang.StringBuilder;

        specialinvoke r165.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mInFullscreenMode=");

        $z9 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInFullscreenMode>;

        virtualinvoke r165.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        $r76 = virtualinvoke r165.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r76);

        r166 = new java.lang.StringBuilder;

        specialinvoke r166.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSystemReady=");

        $z10 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mSystemReady>;

        virtualinvoke r166.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);

        virtualinvoke r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mInteractive=");

        $z11 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mIsInteractive>;

        virtualinvoke r166.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        $r81 = virtualinvoke r166.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r81);

        r167 = new java.lang.StringBuilder;

        specialinvoke r167.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSettingsObserver=");

        $r83 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SettingsObserver mSettingsObserver>;

        virtualinvoke r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r83);

        $r85 = virtualinvoke r167.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r85);

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>("  mSwitchingController:");

        $r86 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodSubtypeSwitchingController mSwitchingController>;

        virtualinvoke $r86.<com.android.server.inputmethod.InputMethodSubtypeSwitchingController: void dump(android.util.Printer)>($r4);

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>("  mSettings:");

        $r87 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        virtualinvoke $r87.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void dumpLocked(android.util.Printer,java.lang.String)>($r4, "    ");

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>("  mStartInputHistory:");

        $r88 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$StartInputHistory mStartInputHistory>;

        virtualinvoke $r88.<com.android.server.inputmethod.InputMethodManagerService$StartInputHistory: void dump(java.io.PrintWriter,java.lang.String)>(r139, "   ");

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>("  mSoftInputShowHideHistory:");

        $r89 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory mSoftInputShowHideHistory>;

        virtualinvoke $r89.<com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory: void dump(java.io.PrintWriter,java.lang.String)>(r139, "   ");

        exitmonitor r140;

     label13:
        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>(" ");

        if r151 == null goto label18;

        virtualinvoke r139.<java.io.PrintWriter: void flush()>();

     label14:
        $r93 = r151.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r94 = interfaceinvoke $r93.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        staticinvoke <com.android.internal.os.TransferPipe: void dumpAsync(android.os.IBinder,java.io.FileDescriptor,java.lang.String[])>($r94, r138, r1);

     label15:
        goto label17;

     label16:
        $r133 := @caughtexception;

        $r134 = new java.lang.StringBuilder;

        specialinvoke $r134.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to dump input method client: ");

        virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r133);

        $r137 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r137);

     label17:
        goto label19;

     label18:
        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>("No input method client.");

     label19:
        if r155 == null goto label23;

        if r151 == r155 goto label23;

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>(" ");

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>("Warning: Current input method client doesn\'t match the last focused. window.");

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>("Dumping input method client in the last focused window just in case.");

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>(" ");

        virtualinvoke r139.<java.io.PrintWriter: void flush()>();

     label20:
        $r91 = r155.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r92 = interfaceinvoke $r91.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        staticinvoke <com.android.internal.os.TransferPipe: void dumpAsync(android.os.IBinder,java.io.FileDescriptor,java.lang.String[])>($r92, r138, r1);

     label21:
        goto label23;

     label22:
        $r128 := @caughtexception;

        $r129 = new java.lang.StringBuilder;

        specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to dump input method client in focused window: ");

        virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r128);

        $r132 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r132);

     label23:
        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>(" ");

        if r161 == null goto label28;

        virtualinvoke r139.<java.io.PrintWriter: void flush()>();

     label24:
        $r90 = interfaceinvoke r161.<com.android.internal.view.IInputMethod: android.os.IBinder asBinder()>();

        staticinvoke <com.android.internal.os.TransferPipe: void dumpAsync(android.os.IBinder,java.io.FileDescriptor,java.lang.String[])>($r90, r138, r1);

     label25:
        goto label27;

     label26:
        $r123 := @caughtexception;

        $r124 = new java.lang.StringBuilder;

        specialinvoke $r124.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to dump input method service: ");

        virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r123);

        $r127 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r127);

     label27:
        goto label29;

     label28:
        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>("No input method service.");

     label29:
        return;

     label30:
        $r122 := @caughtexception;

     label31:
        exitmonitor r140;

     label32:
        throw $r122;

        catch java.lang.Throwable from label02 to label03 with label30;
        catch java.lang.Throwable from label05 to label06 with label30;
        catch java.lang.Throwable from label07 to label08 with label30;
        catch java.lang.Throwable from label10 to label11 with label30;
        catch java.lang.Throwable from label12 to label13 with label30;
        catch java.io.IOException from label14 to label15 with label16;
        catch android.os.RemoteException from label14 to label15 with label16;
        catch java.io.IOException from label20 to label21 with label22;
        catch android.os.RemoteException from label20 to label21 with label22;
        catch java.io.IOException from label24 to label25 with label26;
        catch android.os.RemoteException from label24 to label25 with label26;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    void executeOrSendMessage(android.os.IInterface, android.os.Message)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IInterface r1;
        android.os.Message r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.os.HandlerCaller $r4;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter0: android.os.IInterface;

        r2 := @parameter1: android.os.Message;

        $r3 = interfaceinvoke r1.<android.os.IInterface: android.os.IBinder asBinder()>();

        $z0 = $r3 instanceof android.os.Binder;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r2);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean handleMessage(android.os.Message)>(r2);

        virtualinvoke r2.<android.os.Message: void recycle()>();

     label2:
        return;
    }

    public android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1;
        boolean $z0;
        java.lang.Throwable $r2;
        android.view.inputmethod.InputMethodSubtype r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label1:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledFromValidUserLocked()>();

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return null;

     label3:
        r3 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtypeLocked()>();

        exitmonitor r1;

     label4:
        return r3;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public java.util.List getEnabledInputMethodList(int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i2, $i3, $i4, $i5;
        android.util.ArrayMap r1;
        long l1;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r2;
        android.content.Context $r3;
        java.lang.Throwable $r4, $r5;
        int[] r6;
        java.util.List r7, r8;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if $i2 == i0 goto label01;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", null);

     label01:
        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label02:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i3 = virtualinvoke $r2.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        r6 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int[] resolveUserId(int,int,java.io.PrintWriter)>(i0, $i3, null);

        $i4 = lengthof r6;

        if $i4 == 1 goto label04;

        r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        exitmonitor r1;

     label03:
        return r7;

     label04:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label05:
        $i5 = r6[0];

        r8 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.List getEnabledInputMethodListLocked(int)>($i5);

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r1;

     label07:
        return r8;

     label08:
        $r5 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label10:
        throw $r5;

     label11:
        $r4 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r4;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public java.util.List getEnabledInputMethodSubtypeList(java.lang.String, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean z0;
        int i0, $i2, $i3, $i4;
        android.util.ArrayMap r1;
        int[] r2;
        long l1;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r3;
        java.lang.Throwable $r4, $r5;
        java.lang.String r6;
        java.util.List r7, r8;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r6 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i2 = virtualinvoke $r3.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        r2 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int[] resolveUserId(int,int,java.io.PrintWriter)>(i0, $i2, null);

        $i3 = lengthof r2;

        if $i3 == 1 goto label03;

        r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        exitmonitor r1;

     label02:
        return r7;

     label03:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $i4 = r2[0];

        r8 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeListLocked(java.lang.String,boolean,int)>(r6, z0, $i4);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r1;

     label06:
        return r8;

     label07:
        $r5 := @caughtexception;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label09:
        throw $r5;

     label10:
        $r4 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public java.util.List getInputMethodList(int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i2, $i3, $i4, $i5;
        android.util.ArrayMap r1;
        long l1;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r2;
        android.content.Context $r3;
        java.lang.Throwable $r4, $r5;
        int[] r6;
        java.util.List r7, r8;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if $i2 == i0 goto label01;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", null);

     label01:
        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label02:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i3 = virtualinvoke $r2.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        r6 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int[] resolveUserId(int,int,java.io.PrintWriter)>(i0, $i3, null);

        $i4 = lengthof r6;

        if $i4 == 1 goto label04;

        r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        exitmonitor r1;

     label03:
        return r7;

     label04:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label05:
        $i5 = r6[0];

        r8 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.List getInputMethodListLocked(int)>($i5);

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r1;

     label07:
        return r8;

     label08:
        $r5 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label10:
        throw $r5;

     label11:
        $r4 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r4;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public int getInputMethodWindowVisibleHeight()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int $i0, $i1;
        com.android.server.wm.WindowManagerInternal $r1;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $i0 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        $i1 = virtualinvoke $r1.<com.android.server.wm.WindowManagerInternal: int getInputMethodWindowVisibleHeight(int)>($i0);

        return $i1;
    }

    public android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1, $r9;
        android.view.inputmethod.InputMethodInfo r2;
        boolean $z0, $z1, $z2;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r3;
        java.lang.Object $r4, $r6, $r8, $r10, $r11;
        java.lang.CharSequence $r5, $r7;
        java.lang.String $r12;
        int $i0, i1, i2;
        java.lang.Throwable $r13, $r14;
        android.util.Pair r15;
        android.view.inputmethod.InputMethodSubtype r16;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledFromValidUserLocked()>();

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return null;

     label03:
        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r15 = virtualinvoke $r3.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.Pair getLastInputMethodAndSubtypeLocked()>();

     label04:
        if r15 == null goto label24;

     label05:
        $r4 = r15.<android.util.Pair: java.lang.Object first>;

        $r5 = (java.lang.CharSequence) $r4;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z1 != 0 goto label24;

        $r6 = r15.<android.util.Pair: java.lang.Object second>;

        $r7 = (java.lang.CharSequence) $r6;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z2 == 0 goto label07;

     label06:
        goto label24;

     label07:
        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r8 = r15.<android.util.Pair: java.lang.Object first>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        r2 = (android.view.inputmethod.InputMethodInfo) $r10;

     label08:
        if r2 != null goto label11;

     label09:
        exitmonitor r1;

     label10:
        return null;

     label11:
        $r11 = r15.<android.util.Pair: java.lang.Object second>;

        $r12 = (java.lang.String) $r11;

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

     label12:
        i2 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>(r2, i1);

     label13:
        if i2 < 0 goto label19;

     label14:
        $i0 = virtualinvoke r2.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        if i2 < $i0 goto label16;

     label15:
        goto label19;

     label16:
        r16 = virtualinvoke r2.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i2);

     label17:
        exitmonitor r1;

     label18:
        return r16;

     label19:
        exitmonitor r1;

     label20:
        return null;

     label21:
        $r14 := @caughtexception;

     label22:
        exitmonitor r1;

     label23:
        return null;

     label24:
        exitmonitor r1;

     label25:
        return null;

     label26:
        $r13 := @caughtexception;

     label27:
        exitmonitor r1;

     label28:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.lang.Throwable from label05 to label06 with label26;
        catch java.lang.Throwable from label07 to label08 with label26;
        catch java.lang.Throwable from label09 to label10 with label26;
        catch java.lang.NumberFormatException from label11 to label12 with label21;
        catch java.lang.Throwable from label11 to label12 with label26;
        catch java.lang.NumberFormatException from label12 to label13 with label21;
        catch java.lang.Throwable from label12 to label13 with label26;
        catch java.lang.NumberFormatException from label14 to label15 with label21;
        catch java.lang.Throwable from label14 to label15 with label26;
        catch java.lang.NumberFormatException from label16 to label17 with label21;
        catch java.lang.Throwable from label16 to label17 with label26;
        catch java.lang.Throwable from label17 to label18 with label26;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.lang.Throwable from label22 to label23 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label27 to label28 with label26;
    }

    public boolean handleMessage(android.os.Message)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        com.android.internal.view.IInputContext r1;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i27, $i28, $i32, $i33, i35, i36, i37, i38, i39, i40, i41, i42;
        java.lang.StringBuilder $r2, $r119, $r133, $r144, $r169, $r175, r211;
        java.lang.String $r5, $r7, $r77, $r83, $r85, $r87, $r99, $r105, $r107, $r109, $r128, $r140, $r151, $r157, $r172, $r182;
        java.lang.Object $r6, $r13, $r21, $r23, $r24, $r25, $r26, $r28, $r31, $r33, $r34, $r35, $r37, $r39, $r41, $r42, $r43, $r46, $r48, $r49, $r50, $r51, $r52, $r55, $r56, $r57, $r58, $r60, $r61, $r62, $r63, $r66, $r67, $r68, $r69, $r78, $r81, $r88, $r89, $r90, $r91, $r100, $r103, $r110, $r111, $r112, $r115, $r121, $r125, $r155;
        com.android.server.inputmethod.InputMethodManagerService$SessionState $r8, $r9, $r11, $r15, $r16, $r18, r215;
        com.android.internal.view.IInputMethodSession $r10, $r12, $r17, $r19;
        boolean $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11, $z12, $z13, z14, z15, z16, z17, z18, z19, z20, z21;
        android.os.IBinder $r14, $r65, $r71, $r73, $r82, $r93, $r95, $r104, r214, r224, r241;
        android.media.AudioManagerInternal $r20, $r22, r184;
        com.android.internal.view.IInputMethod $r27, $r54, $r72, $r94, $r114, $r116, r219, r225;
        com.android.server.inputmethod._$$Lambda$InputMethodManagerService$MMyKF1SeotTOu5KNBltIfhafmb8 $r29;
        java.util.concurrent.CopyOnWriteArrayList $r30;
        com.android.internal.view.IInputMethodClient $r32, $r36, $r38, $r47, r203, r207;
        com.android.server.inputmethod.InputMethodManagerService$ClientState $r40, $r53, $r75, $r97, $r122, $r126, r192, r197, r200;
        android.view.InputChannel $r44, $r45, $r158, $r165, $r166, r220;
        com.android.internal.view.IInputSessionCallback $r59;
        java.lang.Integer $r64;
        android.os.ResultReceiver $r70, $r92;
        com.android.server.wm.WindowManagerInternal $r74, $r80, $r84, $r86, $r96, $r102, $r106, $r108;
        android.view.inputmethod.EditorInfo $r76, $r98, r196, r216;
        java.util.WeakHashMap $r79, $r101;
        android.view.inputmethod.InputBinding $r113;
        java.lang.Throwable $r117, $r142, $r161, $r162, $r164;
        android.os.RemoteException $r118, $r129, $r130, $r131, $r132, $r141, $r143, $r152, $r153, $r159, $r160, $r163, $r167, $r168, $r173, $r174;
        android.os.Message r183;
        com.android.internal.os.SomeArgs r185, r195, r206, r213, r218, r223, r230, r234, r238;
        com.android.internal.view.InlineSuggestionsRequestInfo r186;
        com.android.internal.view.IInlineSuggestionsRequestCallback r187;
        java.util.List r190;
        com.android.server.inputmethod.InputMethodManagerService$HardKeyboardListener r191;
        com.android.internal.view.InputBindResult r208;
        com.android.server.inputmethod.InputMethodManagerService$InputMethodPrivilegedOperationsImpl r226;
        android.util.ArrayMap r228, r242, r245;
        com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory r231, r235;
        com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory$Entry r232, r236;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r183 := @parameter0: android.os.Message;

        i35 = r183.<android.os.Message: int what>;

        z14 = 0;

        z15 = 0;

        if i35 == 1 goto label123;

        if i35 == 2 goto label122;

        if i35 == 3 goto label121;

        if i35 == 1060 goto label112;

        if i35 == 1061 goto label103;

        lookupswitch(i35)
        {
            case 1000: goto label099;
            case 1010: goto label094;
            case 1020: goto label089;
            case 1030: goto label084;
            case 1035: goto label077;
            case 1040: goto label072;
            case 1050: goto label064;
            case 2000: goto label057;
            case 3000: goto label053;
            case 3010: goto label042;
            case 3020: goto label033;
            case 3030: goto label031;
            case 3045: goto label025;
            case 3060: goto label020;
            case 3070: goto label014;
            case 4000: goto label012;
            case 5000: goto label011;
            case 5010: goto label010;
            case 6000: goto label005;
            case 7000: goto label002;
            default: goto label001;
        };

     label001:
        return 0;

     label002:
        $r20 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.media.AudioManagerInternal mAudioManagerInternal>;

        if $r20 != null goto label003;

        $r21 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/media/AudioManagerInternal;");

        $r22 = (android.media.AudioManagerInternal) $r21;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.media.AudioManagerInternal mAudioManagerInternal> = $r22;

     label003:
        r184 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.media.AudioManagerInternal mAudioManagerInternal>;

        if r184 == null goto label004;

        $i3 = r183.<android.os.Message: int arg1>;

        virtualinvoke r184.<android.media.AudioManagerInternal: void setInputMethodServiceUid(int)>($i3);

     label004:
        return 1;

     label005:
        $r23 = r183.<android.os.Message: java.lang.Object obj>;

        r185 = (com.android.internal.os.SomeArgs) $r23;

        $r24 = r185.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r186 = (com.android.internal.view.InlineSuggestionsRequestInfo) $r24;

        $r25 = r185.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r187 = (com.android.internal.view.IInlineSuggestionsRequestCallback) $r25;

     label006:
        $r26 = r185.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r27 = (com.android.internal.view.IInputMethod) $r26;

        interfaceinvoke $r27.<com.android.internal.view.IInputMethod: void onCreateInlineSuggestionsRequest(com.android.internal.view.InlineSuggestionsRequestInfo,com.android.internal.view.IInlineSuggestionsRequestCallback)>(r186, r187);

     label007:
        goto label009;

     label008:
        $r168 := @caughtexception;

        $r169 = new java.lang.StringBuilder;

        specialinvoke $r169.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException calling onCreateInlineSuggestionsRequest(): ");

        virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r168);

        $r172 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r172);

     label009:
        virtualinvoke r185.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label010:
        i36 = r183.<android.os.Message: int arg1>;

        $r28 = r183.<android.os.Message: java.lang.Object obj>;

        r190 = (java.util.List) $r28;

        $r30 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.concurrent.CopyOnWriteArrayList mInputMethodListListeners>;

        $r29 = new com.android.server.inputmethod._$$Lambda$InputMethodManagerService$MMyKF1SeotTOu5KNBltIfhafmb8;

        specialinvoke $r29.<com.android.server.inputmethod._$$Lambda$InputMethodManagerService$MMyKF1SeotTOu5KNBltIfhafmb8: void <init>(java.util.List,int)>(r190, i36);

        virtualinvoke $r30.<java.util.concurrent.CopyOnWriteArrayList: void forEach(java.util.function.Consumer)>($r29);

        return 1;

     label011:
        $i4 = r183.<android.os.Message: int arg1>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void onUnlockUser(int)>($i4);

        return 1;

     label012:
        r191 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$HardKeyboardListener mHardKeyboardListener>;

        $i5 = r183.<android.os.Message: int arg1>;

        if $i5 != 1 goto label013;

        z15 = 1;

     label013:
        virtualinvoke r191.<com.android.server.inputmethod.InputMethodManagerService$HardKeyboardListener: void handleHardKeyboardStatusChange(boolean)>(z15);

        return 1;

     label014:
        z16 = 0;

        $i6 = r183.<android.os.Message: int arg1>;

        if $i6 == 0 goto label015;

        z16 = 1;

     label015:
        $r31 = r183.<android.os.Message: java.lang.Object obj>;

        r192 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r31;

     label016:
        $r32 = r192.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        interfaceinvoke $r32.<com.android.internal.view.IInputMethodClient: void applyImeVisibility(boolean)>(z16);

     label017:
        goto label019;

     label018:
        $r143 := @caughtexception;

        $r144 = new java.lang.StringBuilder;

        specialinvoke $r144.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got RemoteException sending applyImeVisibility(");

        virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z16);

        virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") notification to pid=");

        $i27 = r192.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int pid>;

        virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i28 = r192.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r151 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r151);

     label019:
        return 1;

     label020:
        $r33 = r183.<android.os.Message: java.lang.Object obj>;

        r195 = (com.android.internal.os.SomeArgs) $r33;

        $r34 = r195.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r196 = (android.view.inputmethod.EditorInfo) $r34;

        $r35 = r195.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r197 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r35;

     label021:
        $r36 = r197.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        interfaceinvoke $r36.<com.android.internal.view.IInputMethodClient: void reportPreRendered(android.view.inputmethod.EditorInfo)>(r196);

     label022:
        goto label024;

     label023:
        $r174 := @caughtexception;

        $r175 = new java.lang.StringBuilder;

        specialinvoke $r175.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got RemoteException sending reportPreRendered(");

        virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r196);

        virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") notification to pid=");

        $i32 = r197.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int pid>;

        virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i32);

        virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i33 = r197.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);

        $r182 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r182);

     label024:
        virtualinvoke r195.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label025:
        z17 = 0;

        $i7 = r183.<android.os.Message: int arg1>;

        if $i7 == 0 goto label026;

        z17 = 1;

     label026:
        $r37 = r183.<android.os.Message: java.lang.Object obj>;

        r200 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r37;

     label027:
        $r38 = r200.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        interfaceinvoke $r38.<com.android.internal.view.IInputMethodClient: void reportFullscreenMode(boolean)>(z17);

     label028:
        goto label030;

     label029:
        $r132 := @caughtexception;

        $r133 = new java.lang.StringBuilder;

        specialinvoke $r133.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got RemoteException sending reportFullscreen(");

        virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z17);

        virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") notification to pid=");

        $i24 = r200.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int pid>;

        virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i25 = r200.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r140 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r140);

     label030:
        return 1;

     label031:
        z18 = 0;

        $i8 = r183.<android.os.Message: int arg1>;

        if $i8 == 0 goto label032;

        z18 = 1;

     label032:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void handleSetInteractive(boolean)>(z18);

        return 1;

     label033:
        $r39 = r183.<android.os.Message: java.lang.Object obj>;

        $r40 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r39;

        r203 = $r40.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $i9 = r183.<android.os.Message: int arg1>;

        if $i9 == 0 goto label035;

     label034:
        z19 = 1;

        goto label036;

     label035:
        z19 = 0;

     label036:
        $i10 = r183.<android.os.Message: int arg2>;

        if $i10 == 0 goto label038;

     label037:
        z14 = 1;

     label038:
        interfaceinvoke r203.<com.android.internal.view.IInputMethodClient: void setActive(boolean,boolean)>(z19, z14);

     label039:
        goto label041;

     label040:
        $r118 := @caughtexception;

        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got RemoteException sending setActive(false) notification to pid ");

        $r121 = r183.<android.os.Message: java.lang.Object obj>;

        $r122 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r121;

        $i21 = $r122.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int pid>;

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid ");

        $r125 = r183.<android.os.Message: java.lang.Object obj>;

        $r126 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r125;

        $i22 = $r126.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r128 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r128);

     label041:
        return 1;

     label042:
        $r41 = r183.<android.os.Message: java.lang.Object obj>;

        r206 = (com.android.internal.os.SomeArgs) $r41;

        $r42 = r206.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r207 = (com.android.internal.view.IInputMethodClient) $r42;

        $r43 = r206.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r208 = (com.android.internal.view.InputBindResult) $r43;

     label043:
        interfaceinvoke r207.<com.android.internal.view.IInputMethodClient: void onBindMethod(com.android.internal.view.InputBindResult)>(r208);

     label044:
        $r44 = r208.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        if $r44 == null goto label050;

        $z4 = staticinvoke <android.os.Binder: boolean isProxy(android.os.IInterface)>(r207);

        if $z4 == 0 goto label050;

     label045:
        $r45 = r208.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        virtualinvoke $r45.<android.view.InputChannel: void dispose()>();

        goto label050;

     label046:
        $r164 := @caughtexception;

        goto label051;

     label047:
        $r153 := @caughtexception;

     label048:
        r211 = new java.lang.StringBuilder;

        specialinvoke r211.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Client died receiving input method ");

        $r155 = r206.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        virtualinvoke r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r155);

        $r157 = virtualinvoke r211.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r157);

     label049:
        $r158 = r208.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        if $r158 == null goto label050;

        $z11 = staticinvoke <android.os.Binder: boolean isProxy(android.os.IInterface)>(r207);

        if $z11 == 0 goto label050;

        goto label045;

     label050:
        virtualinvoke r206.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label051:
        $r165 = r208.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        if $r165 == null goto label052;

        $z12 = staticinvoke <android.os.Binder: boolean isProxy(android.os.IInterface)>(r207);

        if $z12 == 0 goto label052;

        $r166 = r208.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        virtualinvoke $r166.<android.view.InputChannel: void dispose()>();

     label052:
        throw $r164;

     label053:
        $r46 = r183.<android.os.Message: java.lang.Object obj>;

        $r47 = (com.android.internal.view.IInputMethodClient) $r46;

        $i12 = r183.<android.os.Message: int arg1>;

        $i11 = r183.<android.os.Message: int arg2>;

        interfaceinvoke $r47.<com.android.internal.view.IInputMethodClient: void onUnbindMethod(int,int)>($i12, $i11);

     label054:
        goto label056;

     label055:
        $r173 := @caughtexception;

     label056:
        return 1;

     label057:
        i37 = r183.<android.os.Message: int arg1>;

        $i13 = r183.<android.os.Message: int arg2>;

        if $i13 == 0 goto label058;

        z20 = 1;

        goto label059;

     label058:
        z20 = 0;

     label059:
        $r48 = r183.<android.os.Message: java.lang.Object obj>;

        r213 = (com.android.internal.os.SomeArgs) $r48;

        $r49 = r213.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r214 = (android.os.IBinder) $r49;

        $r50 = r213.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r215 = (com.android.server.inputmethod.InputMethodManagerService$SessionState) $r50;

        $r51 = r213.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r1 = (com.android.internal.view.IInputContext) $r51;

        $r52 = r213.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        r216 = (android.view.inputmethod.EditorInfo) $r52;

     label060:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setEnabledSessionInMainThread(com.android.server.inputmethod.InputMethodManagerService$SessionState)>(r215);

        $r54 = r215.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethod method>;

        $r53 = r215.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.server.inputmethod.InputMethodManagerService$ClientState client>;

        $z5 = $r53.<com.android.server.inputmethod.InputMethodManagerService$ClientState: boolean shouldPreRenderIme>;

        interfaceinvoke $r54.<com.android.internal.view.IInputMethod: void startInput(android.os.IBinder,com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,boolean,boolean)>(r214, r1, i37, r216, z20, $z5);

     label061:
        goto label063;

     label062:
        $r130 := @caughtexception;

     label063:
        virtualinvoke r213.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label064:
        $r55 = r183.<android.os.Message: java.lang.Object obj>;

        r218 = (com.android.internal.os.SomeArgs) $r55;

        $r56 = r218.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r219 = (com.android.internal.view.IInputMethod) $r56;

        $r57 = r218.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r220 = (android.view.InputChannel) $r57;

     label065:
        $r58 = r218.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r59 = (com.android.internal.view.IInputSessionCallback) $r58;

        interfaceinvoke r219.<com.android.internal.view.IInputMethod: void createSession(android.view.InputChannel,com.android.internal.view.IInputSessionCallback)>(r220, $r59);

     label066:
        if r220 == null goto label071;

        $z6 = staticinvoke <android.os.Binder: boolean isProxy(android.os.IInterface)>(r219);

        if $z6 == 0 goto label071;

        goto label070;

     label067:
        $r142 := @caughtexception;

        if r220 == null goto label068;

        $z10 = staticinvoke <android.os.Binder: boolean isProxy(android.os.IInterface)>(r219);

        if $z10 == 0 goto label068;

        virtualinvoke r220.<android.view.InputChannel: void dispose()>();

     label068:
        throw $r142;

     label069:
        $r167 := @caughtexception;

        if r220 == null goto label071;

        $z13 = staticinvoke <android.os.Binder: boolean isProxy(android.os.IInterface)>(r219);

        if $z13 == 0 goto label071;

     label070:
        virtualinvoke r220.<android.view.InputChannel: void dispose()>();

     label071:
        virtualinvoke r218.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label072:
        $r60 = r183.<android.os.Message: java.lang.Object obj>;

        r223 = (com.android.internal.os.SomeArgs) $r60;

     label073:
        $r61 = r223.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r224 = (android.os.IBinder) $r61;

        $r62 = r223.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r225 = (com.android.internal.view.IInputMethod) $r62;

        i38 = r183.<android.os.Message: int arg1>;

        r226 = new com.android.server.inputmethod.InputMethodManagerService$InputMethodPrivilegedOperationsImpl;

        specialinvoke r226.<com.android.server.inputmethod.InputMethodManagerService$InputMethodPrivilegedOperationsImpl: void <init>(com.android.server.inputmethod.InputMethodManagerService,android.os.IBinder)>(r0, r224);

        interfaceinvoke r225.<com.android.internal.view.IInputMethod: void initializeInternal(android.os.IBinder,int,com.android.internal.inputmethod.IInputMethodPrivilegedOperations)>(r224, i38, r226);

     label074:
        goto label076;

     label075:
        $r129 := @caughtexception;

     label076:
        virtualinvoke r223.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label077:
        r228 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r228;

     label078:
        $r63 = r183.<android.os.Message: java.lang.Object obj>;

        $r64 = (java.lang.Integer) $r63;

        i39 = virtualinvoke $r64.<java.lang.Integer: int intValue()>();

        $r65 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean hideCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>($r65, 0, null, i39);

     label079:
        exitmonitor r228;

     label080:
        return 1;

     label081:
        $r161 := @caughtexception;

     label082:
        exitmonitor r228;

     label083:
        throw $r161;

     label084:
        $r66 = r183.<android.os.Message: java.lang.Object obj>;

        r230 = (com.android.internal.os.SomeArgs) $r66;

     label085:
        i40 = r183.<android.os.Message: int arg1>;

        $r67 = r230.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r72 = (com.android.internal.view.IInputMethod) $r67;

        $r68 = r230.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r71 = (android.os.IBinder) $r68;

        $r69 = r230.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r70 = (android.os.ResultReceiver) $r69;

        interfaceinvoke $r72.<com.android.internal.view.IInputMethod: void hideSoftInput(android.os.IBinder,int,android.os.ResultReceiver)>($r71, 0, $r70);

        r231 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory mSoftInputShowHideHistory>;

        r232 = new com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory$Entry;

        $r75 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r76 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.EditorInfo mCurAttribute>;

        $r74 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $r73 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        $r77 = virtualinvoke $r74.<com.android.server.wm.WindowManagerInternal: java.lang.String getWindowName(android.os.IBinder)>($r73);

        $i14 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurFocusedWindowSoftInputMode>;

        $z8 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInFullscreenMode>;

        $r80 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $r79 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.WeakHashMap mHideRequestWindowMap>;

        $r78 = r230.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r81 = virtualinvoke $r79.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r78);

        $r82 = (android.os.IBinder) $r81;

        $r83 = virtualinvoke $r80.<com.android.server.wm.WindowManagerInternal: java.lang.String getWindowName(android.os.IBinder)>($r82);

        $r84 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $i15 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        $r85 = virtualinvoke $r84.<com.android.server.wm.WindowManagerInternal: java.lang.String getImeControlTargetNameForLogging(int)>($i15);

        $r86 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $i16 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        $r87 = virtualinvoke $r86.<com.android.server.wm.WindowManagerInternal: java.lang.String getImeTargetNameForLogging(int)>($i16);

        specialinvoke r232.<com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory$Entry: void <init>(com.android.server.inputmethod.InputMethodManagerService$ClientState,android.view.inputmethod.EditorInfo,java.lang.String,int,int,boolean,java.lang.String,java.lang.String,java.lang.String)>($r75, $r76, $r77, $i14, i40, $z8, $r83, $r85, $r87);

        virtualinvoke r231.<com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory: void addEntry(com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory$Entry)>(r232);

     label086:
        goto label088;

     label087:
        $r159 := @caughtexception;

     label088:
        virtualinvoke r230.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label089:
        $r88 = r183.<android.os.Message: java.lang.Object obj>;

        r234 = (com.android.internal.os.SomeArgs) $r88;

     label090:
        i41 = r183.<android.os.Message: int arg2>;

        $r89 = r234.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r94 = (com.android.internal.view.IInputMethod) $r89;

        $r90 = r234.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r93 = (android.os.IBinder) $r90;

        $i17 = r183.<android.os.Message: int arg1>;

        $r91 = r234.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r92 = (android.os.ResultReceiver) $r91;

        interfaceinvoke $r94.<com.android.internal.view.IInputMethod: void showSoftInput(android.os.IBinder,int,android.os.ResultReceiver)>($r93, $i17, $r92);

        r235 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory mSoftInputShowHideHistory>;

        r236 = new com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory$Entry;

        $r97 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r98 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.EditorInfo mCurAttribute>;

        $r96 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $r95 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        $r99 = virtualinvoke $r96.<com.android.server.wm.WindowManagerInternal: java.lang.String getWindowName(android.os.IBinder)>($r95);

        $i18 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurFocusedWindowSoftInputMode>;

        $z9 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInFullscreenMode>;

        $r102 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $r101 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.WeakHashMap mShowRequestWindowMap>;

        $r100 = r234.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r103 = virtualinvoke $r101.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r100);

        $r104 = (android.os.IBinder) $r103;

        $r105 = virtualinvoke $r102.<com.android.server.wm.WindowManagerInternal: java.lang.String getWindowName(android.os.IBinder)>($r104);

        $r106 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $i19 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        $r107 = virtualinvoke $r106.<com.android.server.wm.WindowManagerInternal: java.lang.String getImeControlTargetNameForLogging(int)>($i19);

        $r108 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $i20 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        $r109 = virtualinvoke $r108.<com.android.server.wm.WindowManagerInternal: java.lang.String getImeTargetNameForLogging(int)>($i20);

        specialinvoke r236.<com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory$Entry: void <init>(com.android.server.inputmethod.InputMethodManagerService$ClientState,android.view.inputmethod.EditorInfo,java.lang.String,int,int,boolean,java.lang.String,java.lang.String,java.lang.String)>($r97, $r98, $r99, $i18, i41, $z9, $r105, $r107, $r109);

        virtualinvoke r235.<com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory: void addEntry(com.android.server.inputmethod.InputMethodManagerService$SoftInputShowHideHistory$Entry)>(r236);

     label091:
        goto label093;

     label092:
        $r160 := @caughtexception;

     label093:
        virtualinvoke r234.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label094:
        $r110 = r183.<android.os.Message: java.lang.Object obj>;

        r238 = (com.android.internal.os.SomeArgs) $r110;

     label095:
        $r111 = r238.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r114 = (com.android.internal.view.IInputMethod) $r111;

        $r112 = r238.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r113 = (android.view.inputmethod.InputBinding) $r112;

        interfaceinvoke $r114.<com.android.internal.view.IInputMethod: void bindInput(android.view.inputmethod.InputBinding)>($r113);

     label096:
        goto label098;

     label097:
        $r141 := @caughtexception;

     label098:
        virtualinvoke r238.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label099:
        $r115 = r183.<android.os.Message: java.lang.Object obj>;

        $r116 = (com.android.internal.view.IInputMethod) $r115;

        interfaceinvoke $r116.<com.android.internal.view.IInputMethod: void unbindInput()>();

     label100:
        goto label102;

     label101:
        $r131 := @caughtexception;

     label102:
        return 1;

     label103:
        $r13 = r183.<android.os.Message: java.lang.Object obj>;

        r241 = (android.os.IBinder) $r13;

        r242 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r242;

     label104:
        $r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        if r241 != $r14 goto label105;

        $r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession>;

        if $r15 == null goto label105;

        $r16 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession>;

        $r17 = $r16.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        if $r17 == null goto label105;

        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession>;

        $r19 = $r18.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        interfaceinvoke $r19.<com.android.internal.view.IInputMethodSession: void removeImeSurface()>();

     label105:
        goto label108;

     label106:
        $r117 := @caughtexception;

        goto label110;

     label107:
        $r152 := @caughtexception;

     label108:
        exitmonitor r242;

     label109:
        return 1;

     label110:
        exitmonitor r242;

     label111:
        throw $r117;

     label112:
        r245 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r245;

     label113:
        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession>;

        if $r8 == null goto label114;

        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession>;

        $r10 = $r9.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        if $r10 == null goto label114;

        $z3 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowRequested>;

        if $z3 != 0 goto label114;

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession>;

        $r12 = $r11.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        interfaceinvoke $r12.<com.android.internal.view.IInputMethodSession: void removeImeSurface()>();

     label114:
        goto label117;

     label115:
        $r162 := @caughtexception;

        goto label119;

     label116:
        $r163 := @caughtexception;

     label117:
        exitmonitor r245;

     label118:
        return 1;

     label119:
        exitmonitor r245;

     label120:
        throw $r162;

     label121:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void showConfigureInputMethods()>();

        return 1;

     label122:
        $r6 = r183.<android.os.Message: java.lang.Object obj>;

        $r7 = (java.lang.String) $r6;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void showInputMethodAndSubtypeEnabler(java.lang.String)>($r7);

        return 1;

     label123:
        i0 = r183.<android.os.Message: int arg2>;

        i42 = r183.<android.os.Message: int arg1>;

        if i42 == 0 goto label126;

        if i42 == 1 goto label125;

        if i42 == 2 goto label124;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown subtype picker mode = ");

        $i1 = r183.<android.os.Message: int arg1>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", $r5);

        return 0;

     label124:
        z21 = 0;

        goto label127;

     label125:
        z21 = 1;

        goto label127;

     label126:
        z21 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInputShown>;

     label127:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void showInputMethodMenu(boolean,int)>(z21, i0);

        return 1;

        catch android.os.RemoteException from label006 to label007 with label008;
        catch android.os.RemoteException from label016 to label017 with label018;
        catch android.os.RemoteException from label021 to label022 with label023;
        catch android.os.RemoteException from label027 to label028 with label029;
        catch android.os.RemoteException from label033 to label034 with label040;
        catch android.os.RemoteException from label036 to label037 with label040;
        catch android.os.RemoteException from label038 to label039 with label040;
        catch android.os.RemoteException from label043 to label044 with label047;
        catch java.lang.Throwable from label043 to label044 with label046;
        catch java.lang.Throwable from label048 to label049 with label046;
        catch android.os.RemoteException from label053 to label054 with label055;
        catch android.os.RemoteException from label060 to label061 with label062;
        catch android.os.RemoteException from label065 to label066 with label069;
        catch java.lang.Throwable from label065 to label066 with label067;
        catch android.os.RemoteException from label073 to label074 with label075;
        catch java.lang.Throwable from label078 to label079 with label081;
        catch java.lang.Throwable from label079 to label080 with label081;
        catch java.lang.Throwable from label082 to label083 with label081;
        catch android.os.RemoteException from label085 to label086 with label087;
        catch android.os.RemoteException from label090 to label091 with label092;
        catch android.os.RemoteException from label095 to label096 with label097;
        catch android.os.RemoteException from label099 to label100 with label101;
        catch android.os.RemoteException from label104 to label105 with label107;
        catch java.lang.Throwable from label104 to label105 with label106;
        catch java.lang.Throwable from label108 to label109 with label106;
        catch java.lang.Throwable from label110 to label111 with label106;
        catch android.os.RemoteException from label113 to label114 with label116;
        catch java.lang.Throwable from label113 to label114 with label115;
        catch java.lang.Throwable from label117 to label118 with label115;
        catch java.lang.Throwable from label119 to label120 with label115;
    }

    boolean hideCurrentInputLocked(android.os.IBinder, int, android.os.ResultReceiver, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.ResultReceiver r1;
        int i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7;
        android.content.ServiceConnection $r2;
        android.content.Context $r3;
        android.os.Binder $r4;
        java.util.WeakHashMap $r5;
        com.android.internal.os.HandlerCaller $r7;
        android.os.Message $r8;
        android.os.IBinder r9;
        com.android.internal.view.IInputMethod r10, r12;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r9 := @parameter0: android.os.IBinder;

        i5 := @parameter1: int;

        r1 := @parameter2: android.os.ResultReceiver;

        i0 := @parameter3: int;

        $i1 = i5 & 1;

        if $i1 == 0 goto label2;

        $z4 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowExplicitlyRequested>;

        if $z4 != 0 goto label1;

        $z5 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowForced>;

        if $z5 == 0 goto label2;

     label1:
        return 0;

     label2:
        $z0 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowForced>;

        if $z0 == 0 goto label3;

        $i4 = i5 & 2;

        if $i4 == 0 goto label3;

        return 0;

     label3:
        r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        z6 = 1;

        if r10 == null goto label5;

        $z3 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInputShown>;

        if $z3 != 0 goto label4;

        $i2 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mImeWindowVis>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label5;

     label4:
        goto label6;

     label5:
        z6 = 0;

     label6:
        if z6 == 0 goto label7;

        $r4 = new android.os.Binder;

        specialinvoke $r4.<android.os.Binder: void <init>()>();

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.WeakHashMap mHideRequestWindowMap>;

        virtualinvoke $r5.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r9);

        r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r8 = virtualinvoke $r7.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIOOO(int,int,java.lang.Object,java.lang.Object,java.lang.Object)>(1030, i0, r12, r1, $r4);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>(r12, $r8);

        z7 = 1;

        goto label8;

     label7:
        z7 = 0;

     label8:
        $z1 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mHaveConnection>;

        if $z1 == 0 goto label9;

        $z2 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mVisibleBound>;

        if $z2 == 0 goto label9;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.ServiceConnection mVisibleConnection>;

        virtualinvoke $r3.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r2);

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mVisibleBound> = 0;

     label9:
        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInputShown> = 0;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowRequested> = 0;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowExplicitlyRequested> = 0;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowForced> = 0;

        return z7;
    }

    void hideInputMethodMenu()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void hideInputMethodMenuLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void hideInputMethodMenuLocked()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.app.AlertDialog r1;
        int $i0, $i1;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.app.AlertDialog: void dismiss()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog> = null;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.View mSwitchingDialogTitleView> = null;

     label1:
        $i1 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mImeWindowVis>;

        $i0 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mBackDisposition>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateSystemUiLocked(int,int)>($i1, $i0);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog$Builder mDialogBuilder> = null;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodInfo[] mIms> = null;

        return;
    }

    public boolean hideSoftInput(com.android.internal.view.IInputMethodClient, android.os.IBinder, int, android.os.ResultReceiver)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i3, $i4, $i5;
        android.util.ArrayMap r1, $r18;
        long l1;
        com.android.server.inputmethod.InputMethodManagerService$ClientState r2, $r3, $r9;
        boolean $z0, z1, z2;
        android.os.IBinder $r5, $r11, $r12, r16, $r19;
        java.lang.String $r7;
        com.android.server.wm.WindowManagerInternal $r8;
        com.android.internal.view.IInputMethodClient $r10, r15;
        java.lang.Throwable $r13, $r14;
        android.os.ResultReceiver r17;
        java.lang.Object $r20;
        java.lang.IllegalArgumentException r21;
        java.lang.StringBuilder r22;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r15 := @parameter0: com.android.internal.view.IInputMethodClient;

        r16 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r17 := @parameter3: android.os.ResultReceiver;

        staticinvoke <android.os.Binder: int getCallingUid()>();

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledFromValidUserLocked()>();

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return 0;

     label03:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        if $r3 == null goto label07;

     label05:
        if r15 == null goto label07;

     label06:
        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r10 = $r9.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r11 = interfaceinvoke $r10.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r12 = interfaceinvoke r15.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        if $r11 == $r12 goto label13;

     label07:
        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients>;

        $r19 = interfaceinvoke r15.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r20 = virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r19);

        r2 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r20;

     label08:
        if r2 == null goto label16;

     label09:
        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $i5 = r2.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        $i4 = r2.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int pid>;

        $i3 = r2.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        z1 = virtualinvoke $r8.<com.android.server.wm.WindowManagerInternal: boolean isInputMethodClientFocus(int,int,int)>($i5, $i4, $i3);

     label10:
        if z1 != 0 goto label13;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r1;

     label12:
        return 0;

     label13:
        z2 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean hideCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>(r16, i0, r17, 3);

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r1;

     label15:
        return z2;

     label16:
        r21 = new java.lang.IllegalArgumentException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown client ");

        $r5 = interfaceinvoke r15.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw r21;

     label17:
        $r14 := @caughtexception;

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label19:
        throw $r14;

     label20:
        $r13 := @caughtexception;

     label21:
        exitmonitor r1;

     label22:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label19 to label20 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    public boolean isInputMethodPickerShownForTest()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1;
        boolean z0;
        android.app.AlertDialog $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        if $r3 != null goto label3;

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        z0 = virtualinvoke $r4.<android.app.AlertDialog: boolean isShowing()>();

        exitmonitor r1;

     label4:
        return z0;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void lambda$handleShellCommandResetInputMethod$2$InputMethodManagerService(android.view.inputmethod.InputMethodInfo)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.view.inputmethod.InputMethodInfo r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter0: android.view.inputmethod.InputMethodInfo;

        $r2 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>($r2, 0);

        return;
    }

    public void lambda$handleShellCommandResetInputMethod$3$InputMethodManagerService(android.view.inputmethod.InputMethodInfo)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.view.inputmethod.InputMethodInfo r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter0: android.view.inputmethod.InputMethodInfo;

        $r2 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>($r2, 1);

        return;
    }

    public boolean lambda$new$0$InputMethodManagerService(int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;
        com.android.server.wm.WindowManagerInternal $r1;
        boolean $z0;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.WindowManagerInternal: boolean shouldShowIme(int)>(i0);

        return $z0;
    }

    void onActionLocaleChanged()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        android.content.Context $r4;
        android.os.LocaleList $r5, r7;
        boolean $z0;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.res.Resources mRes>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r7 = virtualinvoke $r3.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

     label2:
        if r7 == null goto label5;

     label3:
        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.LocaleList mLastSystemLocales>;

        $z0 = virtualinvoke r7.<android.os.LocaleList: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label5;

        exitmonitor r1;

     label4:
        return;

     label5:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void buildInputMethodListLocked(boolean)>(1);

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void resetDefaultImeLocked(android.content.Context)>($r4);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateFromSettingsLocked(boolean)>(1);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.LocaleList mLastSystemLocales> = r7;

        exitmonitor r1;

     label6:
        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1;
        int i0, $i1, $i2, $i3;
        android.content.Intent $r2, $r3, $r6;
        android.content.ComponentName $r4, $r7, r23;
        boolean $z0;
        com.android.internal.view.IInputMethod $r5, $r12, $r14;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r8;
        android.content.pm.PackageManagerInternal $r9;
        android.os.IBinder $r10, $r11, r24;
        com.android.internal.os.HandlerCaller $r13;
        android.os.Message $r15;
        com.android.server.inputmethod.InputMethodManagerService$ClientState $r16, $r17, $r18;
        java.lang.String $r21, r25;
        java.lang.Throwable $r22;
        java.lang.StringBuilder r26;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r23 := @parameter0: android.content.ComponentName;

        r24 := @parameter1: android.os.IBinder;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent>;

        if $r2 == null goto label09;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent>;

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z0 = virtualinvoke r23.<android.content.ComponentName: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label09;

        $r5 = staticinvoke <com.android.internal.view.IInputMethod$Stub: com.android.internal.view.IInputMethod asInterface(android.os.IBinder)>(r24);

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod> = $r5;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent>;

        $r7 = virtualinvoke $r6.<android.content.Intent: android.content.ComponentName getComponent()>();

        r25 = virtualinvoke $r7.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.pm.PackageManagerInternal mPackageManagerInternal>;

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i1 = virtualinvoke $r8.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        i0 = virtualinvoke $r9.<android.content.pm.PackageManagerInternal: int getPackageUidInternal(java.lang.String,int,int)>(r25, 0, $i1);

     label02:
        if i0 >= 0 goto label05;

     label03:
        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get UID for package=");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r21 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", $r21);

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurMethodUid> = -1;

     label04:
        goto label06;

     label05:
        r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurMethodUid> = i0;

     label06:
        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken>;

        if $r10 != null goto label08;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Service connected without a token!");

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void unbindCurrentMethodLocked()>();

        exitmonitor r1;

     label07:
        return;

     label08:
        $r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $i2 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken>;

        $r15 = virtualinvoke $r13.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIOO(int,int,java.lang.Object,java.lang.Object)>(1040, $i2, $r12, $r11);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r14, $r15);

        $i3 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurMethodUid>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void scheduleNotifyImeUidToAudioService(int)>($i3);

        $r16 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        if $r16 == null goto label09;

        $r17 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void clearClientSessionLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState)>($r17);

        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void requestClientSessionLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState)>($r18);

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r22 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1;
        com.android.internal.view.IInputMethod $r2;
        android.content.Intent $r3, $r4;
        android.content.ComponentName $r5, r7;
        boolean $z0, $z1;
        long $l0;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r7 := @parameter0: android.content.ComponentName;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent>;

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z0 = virtualinvoke r7.<android.content.ComponentName: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void clearCurMethodLocked()>();

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: long mLastBindTime> = $l0;

        $z1 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInputShown>;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowRequested> = $z1;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInputShown> = 0;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void unbindCurrentClientLocked(int)>(3);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void onSessionCreated(com.android.internal.view.IInputMethod, com.android.internal.view.IInputMethodSession, android.view.InputChannel)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        com.android.internal.view.IInputMethodSession r1, $r14;
        android.view.InputChannel r2;
        android.util.ArrayMap r3;
        com.android.server.inputmethod.InputMethodManagerService$ClientState r4, $r11, $r12, $r13, $r15, $r16;
        com.android.server.inputmethod.InputMethodManagerService$SessionState r5;
        com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask $r6;
        com.android.internal.view.IInputMethod $r7, $r8, r22;
        android.os.IBinder $r9, $r10;
        com.android.internal.view.IInputMethodClient $r17, $r19;
        com.android.internal.os.HandlerCaller $r18;
        android.os.Message $r20;
        java.lang.Throwable $r21;
        com.android.internal.view.InputBindResult r23;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r22 := @parameter0: com.android.internal.view.IInputMethod;

        r1 := @parameter1: com.android.internal.view.IInputMethodSession;

        r2 := @parameter2: android.view.InputChannel;

        r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r3;

     label01:
        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask mUserSwitchHandlerTask>;

        if $r6 == null goto label03;

        virtualinvoke r2.<android.view.InputChannel: void dispose()>();

        exitmonitor r3;

     label02:
        return;

     label03:
        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r7 == null goto label08;

     label04:
        if r22 == null goto label08;

     label05:
        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r9 = interfaceinvoke $r8.<com.android.internal.view.IInputMethod: android.os.IBinder asBinder()>();

        $r10 = interfaceinvoke r22.<com.android.internal.view.IInputMethod: android.os.IBinder asBinder()>();

        if $r9 != $r10 goto label08;

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        if $r11 == null goto label08;

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void clearClientSessionLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState)>($r12);

        r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        r5 = new com.android.server.inputmethod.InputMethodManagerService$SessionState;

        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        specialinvoke r5.<com.android.server.inputmethod.InputMethodManagerService$SessionState: void <init>(com.android.server.inputmethod.InputMethodManagerService$ClientState,com.android.internal.view.IInputMethod,com.android.internal.view.IInputMethodSession,android.view.InputChannel)>($r13, r22, r1, r2);

        r4.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.server.inputmethod.InputMethodManagerService$SessionState curSession> = r5;

        r23 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.InputBindResult attachNewInputLocked(int,boolean)>(10, 1);

        $r14 = r23.<com.android.internal.view.InputBindResult: com.android.internal.view.IInputMethodSession method>;

        if $r14 == null goto label06;

        $r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r19 = $r15.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r16 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r17 = $r16.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r20 = virtualinvoke $r18.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(3010, $r17, r23);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r19, $r20);

     label06:
        exitmonitor r3;

     label07:
        return;

     label08:
        exitmonitor r3;

     label09:
        virtualinvoke r2.<android.view.InputChannel: void dispose()>();

        return;

     label10:
        $r21 := @caughtexception;

     label11:
        exitmonitor r3;

     label12:
        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        java.io.FileDescriptor r1, r2, r14;
        java.lang.String[] r3;
        android.os.ShellCallback r4;
        android.os.ResultReceiver r5;
        int i0;
        com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r11, r16;
        boolean $z0;
        java.lang.SecurityException $r13;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r14 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.io.FileDescriptor;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: android.os.ShellCallback;

        r5 := @parameter5: android.os.ResultReceiver;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 0 goto label3;

        if i0 == 2000 goto label3;

        if r5 == null goto label1;

        virtualinvoke r5.<android.os.ResultReceiver: void send(int,android.os.Bundle)>(-1, null);

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InputMethodManagerService does not support shell commands from non-shell users. callingUid=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" args=");

        $r11 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        r16 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = staticinvoke <android.os.Process: boolean isCoreUid(int)>(i0);

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", r16);

        return;

     label2:
        $r13 = new java.lang.SecurityException;

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>(r16);

        throw $r13;

     label3:
        $r6 = new com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl;

        specialinvoke $r6.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: void <init>(com.android.server.inputmethod.InputMethodManagerService)>(r0);

        virtualinvoke $r6.<com.android.server.inputmethod.InputMethodManagerService$ShellCommandImpl: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, r14, r1, r2, r3, r4, r5);

        return;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, i1;
        android.os.Parcel r1, r3;
        boolean z0, $z1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        r3 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

     label1:
        z0 = specialinvoke r0.<com.android.internal.view.IInputMethodManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r3, r1, i1);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $z1 = $r2 instanceof java.lang.SecurityException;

        if $z1 != 0 goto label4;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", "Input Method Manager Crash", $r2);

     label4:
        throw $r2;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    void onUnlockUser(int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, i1;
        android.util.ArrayMap r1;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r2, r4;
        boolean $z0, $z1, z2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        i1 = virtualinvoke $r2.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

     label02:
        if i0 == i1 goto label05;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $z0 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mSystemReady>;

        if $z0 != 0 goto label07;

     label06:
        z2 = 1;

        goto label08;

     label07:
        z2 = 0;

     label08:
        virtualinvoke r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void switchCurrentUser(int,boolean)>(i1, z2);

        $z1 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mSystemReady>;

        if $z1 == 0 goto label09;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void buildInputMethodListLocked(boolean)>(0);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateInputMethodsFromSettingsLocked(boolean)>(1);

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r3 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    void removeClient(com.android.internal.view.IInputMethodClient)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1, $r3;
        com.android.server.inputmethod.InputMethodManagerService$ClientState r2, $r9, $r18, $r22;
        android.os.IBinder $r4, $r6;
        java.lang.Object $r5, $r16;
        com.android.server.inputmethod.InputMethodManagerService$ClientDeathRecipient $r7;
        android.util.SparseArray $r8, $r15, $r19;
        int $i0, i1;
        boolean $z1;
        com.android.internal.view.IInputMethod $r10, $r11, $r13;
        com.android.internal.os.HandlerCaller $r12;
        android.os.Message $r14;
        com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo $r17;
        java.lang.Throwable $r20;
        com.android.internal.view.IInputMethodClient r21;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r21 := @parameter0: com.android.internal.view.IInputMethodClient;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients>;

        $r4 = interfaceinvoke r21.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r4);

        r2 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r5;

     label02:
        if r2 == null goto label10;

     label03:
        $r6 = interfaceinvoke r21.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r7 = r2.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.server.inputmethod.InputMethodManagerService$ClientDeathRecipient clientDeathRecipient>;

        interfaceinvoke $r6.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void clearClientSessionLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState)>(r2);

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.SparseArray mActivityViewDisplayIdToParentMap>;

        $i0 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

        i1 = $i0 - 1;

     label04:
        if i1 < 0 goto label07;

     label05:
        $r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.SparseArray mActivityViewDisplayIdToParentMap>;

        $r16 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r17 = (com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo) $r16;

        $r18 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: com.android.server.inputmethod.InputMethodManagerService$ClientState access$1700(com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo)>($r17);

        if $r18 != r2 goto label06;

        $r19 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.SparseArray mActivityViewDisplayIdToParentMap>;

        virtualinvoke $r19.<android.util.SparseArray: void removeAt(int)>(i1);

     label06:
        i1 = i1 + -1;

        goto label04;

     label07:
        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        if $r9 != r2 goto label09;

        $z1 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mBoundToMethod>;

        if $z1 == 0 goto label08;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mBoundToMethod> = 0;

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r10 == null goto label08;

        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r14 = virtualinvoke $r12.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(1000, $r11);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r13, $r14);

     label08:
        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient> = null;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.graphics.Matrix mCurActivityViewToScreenMatrix> = null;

     label09:
        $r22 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurFocusedWindowClient>;

        if $r22 != r2 goto label10;

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurFocusedWindowClient> = null;

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        $r20 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void removeImeSurface()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.Handler r1;
        android.content.Context $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERNAL_SYSTEM_WINDOW", null);

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.Handler mHandler>;

        $r3 = virtualinvoke r1.<android.os.Handler: android.os.Message obtainMessage(int)>(1060);

        virtualinvoke r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3);

        return;
    }

    public void removeImeSurfaceFromWindow(android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1061, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void reportActivityView(com.android.internal.view.IInputMethodClient, int, float[])
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        android.util.ArrayMap r1, $r10;
        com.android.server.inputmethod.InputMethodManagerService$ClientState r2, $r16, $r17, $r19, $r23, $r24, $r25, $r34, $r38, $r43;
        android.hardware.display.DisplayManagerInternal $r3;
        java.lang.StringBuilder $r4, r55, r58, r62;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, $r32, $r40, $r46;
        java.lang.SecurityException $r9, r54, r61;
        android.os.IBinder $r11;
        java.lang.Object $r12, $r14, $r21, $r42;
        android.util.SparseArray $r13, $r20, $r33, $r41, $r47;
        android.graphics.Matrix $r15, $r22, $r27, r60, r63;
        com.android.server.inputmethod.InputMethodManagerService$SessionState $r18;
        com.android.internal.view.IInputMethodClient $r26, r50;
        com.android.server.wm.WindowManagerInternal $r28;
        boolean $z1, z2, z3;
        java.lang.Throwable $r48;
        android.os.RemoteException $r49;
        float[] r51, r65;
        android.view.DisplayInfo r52;
        com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo r53, r56, r59, r64;
        java.security.InvalidParameterException r57;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r50 := @parameter0: com.android.internal.view.IInputMethodClient;

        i0 := @parameter1: int;

        r51 := @parameter2: float[];

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.hardware.display.DisplayManagerInternal mDisplayManagerInternal>;

        r52 = virtualinvoke $r3.<android.hardware.display.DisplayManagerInternal: android.view.DisplayInfo getDisplayInfo(int)>(i0);

        if r52 == null goto label53;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = r52.<android.view.DisplayInfo: int ownerUid>;

        if $i1 != $i2 goto label52;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients>;

        $r11 = interfaceinvoke r50.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r12 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r11);

        r2 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r12;

     label02:
        if r2 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        if r51 != null goto label13;

     label06:
        $r41 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.SparseArray mActivityViewDisplayIdToParentMap>;

        $r42 = virtualinvoke $r41.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r53 = (com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo) $r42;

     label07:
        if r53 != null goto label10;

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r43 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: com.android.server.inputmethod.InputMethodManagerService$ClientState access$1700(com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo)>(r53);

        if $r43 != r2 goto label12;

        $r47 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.SparseArray mActivityViewDisplayIdToParentMap>;

        virtualinvoke $r47.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label11:
        return;

     label12:
        r54 = new java.lang.SecurityException;

        r55 = new java.lang.StringBuilder;

        specialinvoke r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only the owner client can clear ActivityViewGeometry for display #");

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r46 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r54.<java.lang.SecurityException: void <init>(java.lang.String)>($r46);

        throw r54;

     label13:
        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.SparseArray mActivityViewDisplayIdToParentMap>;

        $r14 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r56 = (com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo) $r14;

     label14:
        if r56 == null goto label18;

     label15:
        $r34 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: com.android.server.inputmethod.InputMethodManagerService$ClientState access$1700(com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo)>(r56);

        if $r34 != r2 goto label17;

     label16:
        goto label18;

     label17:
        r57 = new java.security.InvalidParameterException;

        r58 = new java.lang.StringBuilder;

        specialinvoke r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Display #");

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already registered by ");

        $r38 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: com.android.server.inputmethod.InputMethodManagerService$ClientState access$1700(com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo)>(r56);

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r40 = virtualinvoke r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r57.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r40);

        throw r57;

     label18:
        r59 = r56;

        if r56 != null goto label23;

     label19:
        $r28 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $i6 = r2.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        $z1 = virtualinvoke $r28.<com.android.server.wm.WindowManagerInternal: boolean isUidAllowedOnDisplay(int,int)>(i0, $i6);

        if $z1 == 0 goto label22;

        r59 = new com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo;

        r60 = new android.graphics.Matrix;

        specialinvoke r60.<android.graphics.Matrix: void <init>()>();

        specialinvoke r59.<com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: void <init>(com.android.server.inputmethod.InputMethodManagerService$ClientState,android.graphics.Matrix)>(r2, r60);

     label20:
        $r33 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.SparseArray mActivityViewDisplayIdToParentMap>;

        virtualinvoke $r33.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r59);

     label21:
        goto label23;

     label22:
        r61 = new java.lang.SecurityException;

        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot access to display #");

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r32 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r61.<java.lang.SecurityException: void <init>(java.lang.String)>($r32);

        throw r61;

     label23:
        $r15 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: android.graphics.Matrix access$1800(com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo)>(r59);

        virtualinvoke $r15.<android.graphics.Matrix: void setValues(float[])>(r51);

        $r16 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        if $r16 == null goto label47;

        $r17 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r18 = $r17.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.server.inputmethod.InputMethodManagerService$SessionState curSession>;

        if $r18 != null goto label25;

     label24:
        goto label47;

     label25:
        r63 = null;

     label26:
        $r19 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        i7 = $r19.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

     label27:
        z2 = 0;

     label28:
        if i7 != i0 goto label29;

        z3 = 1;

        goto label30;

     label29:
        z3 = 0;

     label30:
        z2 = z2 | z3;

     label31:
        $r20 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.SparseArray mActivityViewDisplayIdToParentMap>;

        $r21 = virtualinvoke $r20.<android.util.SparseArray: java.lang.Object get(int)>(i7);

        r64 = (com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo) $r21;

     label32:
        if r64 != null goto label33;

        goto label43;

     label33:
        if r63 != null goto label36;

     label34:
        r63 = new android.graphics.Matrix;

        $r27 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: android.graphics.Matrix access$1800(com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo)>(r64);

        specialinvoke r63.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r27);

     label35:
        goto label37;

     label36:
        $r22 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: android.graphics.Matrix access$1800(com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo)>(r64);

        virtualinvoke r63.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r22);

     label37:
        $r23 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: com.android.server.inputmethod.InputMethodManagerService$ClientState access$1700(com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo)>(r64);

        $i4 = $r23.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        $i3 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        if $i4 != $i3 goto label45;

     label38:
        if z2 == 0 goto label43;

     label39:
        r65 = newarray (float)[9];

        virtualinvoke r63.<android.graphics.Matrix: void getValues(float[])>(r65);

     label40:
        $r25 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r26 = $r25.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $i5 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurSeq>;

        interfaceinvoke $r26.<com.android.internal.view.IInputMethodClient: void updateActivityViewToScreenMatrix(int,float[])>($i5, r65);

     label41:
        goto label43;

     label42:
        $r49 := @caughtexception;

     label43:
        exitmonitor r1;

     label44:
        return;

     label45:
        $r24 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo: com.android.server.inputmethod.InputMethodManagerService$ClientState access$1700(com.android.server.inputmethod.InputMethodManagerService$ActivityViewInfo)>(r59);

        i7 = $r24.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

     label46:
        goto label28;

     label47:
        exitmonitor r1;

     label48:
        return;

     label49:
        $r48 := @caughtexception;

     label50:
        exitmonitor r1;

     label51:
        throw $r48;

     label52:
        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>("The caller doesn\'t own the display.");

        throw $r9;

     label53:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find display for non-existent displayId: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label49;
        catch java.lang.Throwable from label03 to label04 with label49;
        catch java.lang.Throwable from label06 to label07 with label49;
        catch java.lang.Throwable from label08 to label09 with label49;
        catch java.lang.Throwable from label10 to label11 with label49;
        catch java.lang.Throwable from label12 to label13 with label49;
        catch java.lang.Throwable from label13 to label14 with label49;
        catch java.lang.Throwable from label15 to label16 with label49;
        catch java.lang.Throwable from label17 to label18 with label49;
        catch java.lang.Throwable from label19 to label20 with label49;
        catch java.lang.Throwable from label20 to label21 with label49;
        catch java.lang.Throwable from label22 to label23 with label49;
        catch java.lang.Throwable from label23 to label24 with label49;
        catch java.lang.Throwable from label26 to label27 with label49;
        catch java.lang.Throwable from label31 to label32 with label49;
        catch java.lang.Throwable from label34 to label35 with label49;
        catch java.lang.Throwable from label36 to label37 with label49;
        catch java.lang.Throwable from label37 to label38 with label49;
        catch java.lang.Throwable from label39 to label40 with label49;
        catch android.os.RemoteException from label40 to label41 with label42;
        catch java.lang.Throwable from label40 to label41 with label49;
        catch java.lang.Throwable from label43 to label44 with label49;
        catch java.lang.Throwable from label45 to label46 with label49;
        catch java.lang.Throwable from label47 to label48 with label49;
        catch java.lang.Throwable from label50 to label51 with label49;
    }

    public void reportPerceptible(android.os.IBinder, boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean z0, $z1, $z2;
        android.util.ArrayMap r1;
        long l0;
        android.os.IBinder $r3, r6;
        int $i2, $i3;
        java.lang.Throwable $r4, $r5;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r6 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r6, "windowToken must not be null");

        staticinvoke <android.os.Binder: int getCallingUid()>();

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $z1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledFromValidUserLocked()>();

        if $z1 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        if $r3 != r6 goto label05;

        $z2 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mCurPerceptible>;

        if $z2 == z0 goto label05;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mCurPerceptible> = z0;

        $i3 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mImeWindowVis>;

        $i2 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mBackDisposition>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateSystemUiLocked(int,int)>($i3, $i2);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r5 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label10:
        throw $r5;

     label11:
        $r4 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    void requestClientSessionLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.view.InputChannel[] r1;
        boolean $z0;
        java.lang.String $r2;
        com.android.server.inputmethod.InputMethodManagerService$MethodCallback $r3;
        android.view.InputChannel $r4, $r7;
        com.android.internal.view.IInputMethod $r5, r10;
        com.android.internal.os.HandlerCaller $r6;
        android.os.Message $r8;
        com.android.server.inputmethod.InputMethodManagerService$ClientState r9;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r9 := @parameter0: com.android.server.inputmethod.InputMethodManagerService$ClientState;

        $z0 = r9.<com.android.server.inputmethod.InputMethodManagerService$ClientState: boolean sessionRequested>;

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r9.<com.android.server.inputmethod.InputMethodManagerService$ClientState: java.lang.String toString()>();

        r1 = staticinvoke <android.view.InputChannel: android.view.InputChannel[] openInputChannelPair(java.lang.String)>($r2);

        r9.<com.android.server.inputmethod.InputMethodManagerService$ClientState: boolean sessionRequested> = 1;

        r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r7 = r1[1];

        $r3 = new com.android.server.inputmethod.InputMethodManagerService$MethodCallback;

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r4 = r1[0];

        specialinvoke $r3.<com.android.server.inputmethod.InputMethodManagerService$MethodCallback: void <init>(com.android.server.inputmethod.InputMethodManagerService,com.android.internal.view.IInputMethod,android.view.InputChannel)>(r0, $r5, $r4);

        $r8 = virtualinvoke $r6.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOO(int,java.lang.Object,java.lang.Object,java.lang.Object)>(1050, r10, $r7, $r3);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>(r10, $r8);

     label1:
        return;
    }

    void resetCurrentMethodAndClient(int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId> = null;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void unbindCurrentMethodLocked()>();

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void unbindCurrentClientLocked(int)>(i0);

        return;
    }

    void scheduleSwitchUserTaskLocked(int, com.android.internal.view.IInputMethodClient)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i1;
        com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask r1, $r2, $r4, $r6;
        android.os.Handler $r3, $r5;
        com.android.internal.view.IInputMethodClient r7;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        r7 := @parameter1: com.android.internal.view.IInputMethodClient;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask mUserSwitchHandlerTask>;

        if r1 == null goto label2;

        $i1 = r1.<com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask: int mToUserId>;

        if $i1 != i0 goto label1;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask mUserSwitchHandlerTask>;

        $r6.<com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask: com.android.internal.view.IInputMethodClient mClientToBeReset> = r7;

        return;

     label1:
        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.Handler mHandler>;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask mUserSwitchHandlerTask>;

        virtualinvoke $r5.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

     label2:
        $r2 = new com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask;

        specialinvoke $r2.<com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask: void <init>(com.android.server.inputmethod.InputMethodManagerService,int,com.android.internal.view.IInputMethodClient)>(r0, i0, r7);

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$UserSwitchHandlerTask mUserSwitchHandlerTask> = $r2;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void setAdditionalInputMethodSubtypes(java.lang.String, android.view.inputmethod.InputMethodSubtype[])
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.view.inputmethod.InputMethodSubtype[] r1;
        long l0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.ArrayList $r3;
        android.util.ArrayMap $r4, $r9, $r13, $r14, $r15, r32;
        java.lang.Object $r5;
        android.content.pm.IPackageManager $r6;
        int $i1, $i2, $i3, i6, i7, i8, i9;
        java.lang.String $r7, $r8, $r10, $r16, $r20, $r23, $r25, r29;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r12;
        java.lang.StringBuilder $r18;
        android.os.RemoteException $r26;
        java.lang.Throwable $r27, $r28;
        android.view.inputmethod.InputMethodSubtype r30;
        android.view.inputmethod.InputMethodInfo r33;
        java.lang.String[] r34;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r29 := @parameter0: java.lang.String;

        r1 := @parameter1: android.view.inputmethod.InputMethodSubtype[];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r29);

        if $z0 != 0 goto label39;

        if r1 != null goto label01;

        goto label39;

     label01:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i6 = lengthof r1;

        i7 = 0;

     label02:
        if i7 >= i6 goto label05;

        r30 = r1[i7];

        $z4 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r30);

        if $z4 != 0 goto label03;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r30);

        goto label04;

     label03:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicated subtype definition found: ");

        $r20 = virtualinvoke r30.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r23 = virtualinvoke r30.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r25);

     label04:
        i7 = i7 + 1;

        goto label02;

     label05:
        r32 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r32;

     label06:
        $z1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledFromValidUserLocked()>();

        if $z1 != 0 goto label08;

        exitmonitor r32;

     label07:
        return;

     label08:
        $z2 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mSystemReady>;

        if $z2 != 0 goto label10;

        exitmonitor r32;

     label09:
        return;

     label10:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r29);

        r33 = (android.view.inputmethod.InputMethodInfo) $r5;

     label11:
        if r33 != null goto label14;

     label12:
        exitmonitor r32;

     label13:
        return;

     label14:
        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r34 = interfaceinvoke $r6.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>($i1);

     label15:
        if r34 == null goto label31;

     label16:
        i8 = lengthof r34;

     label17:
        i9 = 0;

     label18:
        if i9 >= i8 goto label31;

     label19:
        $r7 = r34[i9];

        $r8 = virtualinvoke r33.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label30;

        $i2 = lengthof r1;

        if $i2 <= 0 goto label21;

        $r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mAdditionalSubtypeMap>;

        $r16 = virtualinvoke r33.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r3);

     label20:
        goto label22;

     label21:
        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mAdditionalSubtypeMap>;

        $r10 = virtualinvoke r33.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r10);

     label22:
        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mAdditionalSubtypeMap>;

        $r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i3 = virtualinvoke $r12.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        staticinvoke <com.android.server.inputmethod.AdditionalSubtypeUtils: void save(android.util.ArrayMap,android.util.ArrayMap,int)>($r13, $r14, $i3);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label23:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void buildInputMethodListLocked(boolean)>(0);

     label24:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label25:
        exitmonitor r32;

     label26:
        return;

     label27:
        $r28 := @caughtexception;

     label28:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label29:
        throw $r28;

     label30:
        i9 = i9 + 1;

        goto label18;

     label31:
        exitmonitor r32;

     label32:
        return;

     label33:
        $r26 := @caughtexception;

     label34:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", "Failed to get package infos");

        exitmonitor r32;

     label35:
        return;

     label36:
        $r27 := @caughtexception;

     label37:
        exitmonitor r32;

     label38:
        throw $r27;

     label39:
        return;

        catch java.lang.Throwable from label06 to label07 with label36;
        catch java.lang.Throwable from label08 to label09 with label36;
        catch java.lang.Throwable from label10 to label11 with label36;
        catch java.lang.Throwable from label12 to label13 with label36;
        catch android.os.RemoteException from label14 to label15 with label33;
        catch java.lang.Throwable from label14 to label15 with label36;
        catch java.lang.Throwable from label16 to label17 with label36;
        catch java.lang.Throwable from label19 to label20 with label36;
        catch java.lang.Throwable from label21 to label22 with label36;
        catch java.lang.Throwable from label22 to label23 with label36;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label24 to label25 with label36;
        catch java.lang.Throwable from label25 to label26 with label36;
        catch java.lang.Throwable from label28 to label29 with label36;
        catch java.lang.Throwable from label29 to label30 with label36;
        catch java.lang.Throwable from label31 to label32 with label36;
        catch java.lang.Throwable from label34 to label35 with label36;
        catch java.lang.Throwable from label37 to label38 with label36;
    }

    void setCurHostInputToken(android.os.IBinder, android.os.IBinder)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1, r4;
        android.util.ArrayMap r2;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r4 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.os.IBinder;

        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r2;

     label1:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledWithValidTokenLocked(android.os.IBinder)>(r4);

        if $z0 != 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurHostInputToken> = r1;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    void setEnabledSessionInMainThread(com.android.server.inputmethod.InputMethodManagerService$SessionState)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        com.android.internal.view.IInputMethodSession $r1, $r4, $r6, $r9;
        com.android.server.inputmethod.InputMethodManagerService$SessionState $r2, $r3, $r7, $r8, r13, r14;
        com.android.internal.view.IInputMethod $r5, $r10;
        android.os.RemoteException $r11, $r12;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r13 := @parameter0: com.android.server.inputmethod.InputMethodManagerService$SessionState;

        r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession>;

        if r14 == r13 goto label8;

        if r14 == null goto label4;

        $r6 = r14.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        if $r6 == null goto label4;

     label1:
        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession>;

        $r10 = $r7.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethod method>;

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession>;

        $r9 = $r8.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        interfaceinvoke $r10.<com.android.internal.view.IInputMethod: void setSessionEnabled(com.android.internal.view.IInputMethodSession,boolean)>($r9, 0);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

     label4:
        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession> = r13;

        if r13 == null goto label8;

        $r1 = r13.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        if $r1 == null goto label8;

     label5:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession>;

        $r5 = $r2.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethod method>;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SessionState mEnabledSession>;

        $r4 = $r3.<com.android.server.inputmethod.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        interfaceinvoke $r5.<com.android.internal.view.IInputMethod: void setSessionEnabled(com.android.internal.view.IInputMethodSession,boolean)>($r4, 1);

     label6:
        goto label8;

     label7:
        $r12 := @caughtexception;

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    void setInputMethodLocked(java.lang.String, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, i1, $i4, $i5;
        long l2;
        android.util.ArrayMap $r1;
        java.lang.Object $r2, $r9;
        java.lang.StringBuilder $r3, $r15;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7, $r8, $r20, r25;
        boolean $z0, $z1;
        android.app.ActivityManagerInternal $r10;
        android.os.UserHandle $r13;
        android.content.Context $r14;
        com.android.internal.view.IInputMethod $r21, $r22;
        android.os.RemoteException $r23;
        java.lang.Throwable $r24;
        android.view.inputmethod.InputMethodInfo r26;
        android.view.inputmethod.InputMethodSubtype r27, r28;
        android.content.Intent r31;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r25 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r25);

        r26 = (android.view.inputmethod.InputMethodInfo) $r2;

        if r26 == null goto label15;

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $z0 = virtualinvoke r25.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label10;

        i1 = virtualinvoke r26.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        if i1 > 0 goto label01;

        return;

     label01:
        r27 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        if i0 < 0 goto label02;

        if i0 >= i1 goto label02;

        r28 = virtualinvoke r26.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i0);

        goto label03;

     label02:
        r28 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtypeLocked()>();

     label03:
        if r28 == null goto label09;

        if r27 != null goto label04;

        goto label09;

     label04:
        if r28 == r27 goto label08;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setSelectedInputMethodAndSubtypeLocked(android.view.inputmethod.InputMethodInfo,int,boolean)>(r26, i0, 1);

        $r21 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r21 == null goto label08;

     label05:
        $i5 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mImeWindowVis>;

        $i4 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mBackDisposition>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateSystemUiLocked(int,int)>($i5, $i4);

        $r22 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        interfaceinvoke $r22.<com.android.internal.view.IInputMethod: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>(r28);

     label06:
        goto label08;

     label07:
        $r23 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Failed to call changeInputMethodSubtype");

     label08:
        return;

     label09:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal subtype state: old subtype = ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new subtype = ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r20);

        return;

     label10:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label11:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setSelectedInputMethodAndSubtypeLocked(android.view.inputmethod.InputMethodInfo,int,boolean)>(r26, i0, 0);

        r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId> = r25;

        $r9 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        $r10 = (android.app.ActivityManagerInternal) $r9;

        $z1 = virtualinvoke $r10.<android.app.ActivityManagerInternal: boolean isSystemReady()>();

        if $z1 == 0 goto label12;

        r31 = new android.content.Intent;

        specialinvoke r31.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.INPUT_METHOD_CHANGED");

        virtualinvoke r31.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        virtualinvoke r31.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("input_method_id", r25);

        $r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r13 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        virtualinvoke $r14.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r31, $r13);

     label12:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void unbindCurrentClientLocked(int)>(2);

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label14:
        $r24 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r24;

     label15:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown id: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    boolean showCurrentInputLocked(android.os.IBinder, int, android.os.ResultReceiver, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.os.IBinder r1;
        int i0, i1, $i2, $i3, $i13;
        android.os.ResultReceiver r2;
        boolean $z2, $z3, $z5, $z6, $z8, z9;
        com.android.internal.view.IInputMethod $r4, $r14, $r16;
        long $l4, $l5, $l6, $l8, $l9, $l10;
        byte $b7;
        java.lang.Object[] $r5;
        java.lang.String $r6;
        java.lang.Long $r7;
        java.lang.Integer $r8;
        android.content.Context $r9;
        android.content.Intent $r10, $r19;
        android.os.Binder $r11;
        java.util.WeakHashMap $r12;
        com.android.internal.os.HandlerCaller $r15;
        android.os.Message $r17;
        android.content.ServiceConnection $r18;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ResultReceiver;

        i1 := @parameter3: int;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowRequested> = 1;

        $z2 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mAccessibilityRequestingNoSoftKeyboard>;

        if $z2 == 0 goto label1;

        return 0;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowExplicitlyRequested> = 1;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowForced> = 1;

        goto label3;

     label2:
        $i3 = i0 & 1;

        if $i3 != 0 goto label3;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowExplicitlyRequested> = 1;

     label3:
        $z8 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mSystemReady>;

        if $z8 != 0 goto label4;

        return 0;

     label4:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r4 == null goto label7;

        $r11 = new android.os.Binder;

        specialinvoke $r11.<android.os.Binder: void <init>()>();

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.util.WeakHashMap mShowRequestWindowMap>;

        virtualinvoke $r12.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r1);

        $r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $i13 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: int getImeShowFlags()>();

        $r16 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r17 = virtualinvoke $r15.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIOOO(int,int,int,java.lang.Object,java.lang.Object,java.lang.Object)>(1020, $i13, i1, $r16, r2, $r11);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r14, $r17);

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mInputShown> = 1;

        $z5 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mHaveConnection>;

        if $z5 == 0 goto label5;

        $z6 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mVisibleBound>;

        if $z6 != 0 goto label5;

        $r19 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent>;

        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.ServiceConnection mVisibleConnection>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean bindCurrentInputMethodServiceLocked(android.content.Intent,android.content.ServiceConnection,int)>($r19, $r18, 738725889);

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mVisibleBound> = 1;

     label5:
        z9 = 1;

     label6:
        goto label8;

     label7:
        z9 = 0;

        $z3 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mHaveConnection>;

        if $z3 == 0 goto label6;

        z9 = 0;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = r0.<com.android.server.inputmethod.InputMethodManagerService: long mLastBindTime>;

        $l6 = $l5 + 3000L;

        $b7 = $l4 cmp $l6;

        if $b7 < 0 goto label6;

        $r5 = newarray (java.lang.Object)[3];

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r5[0] = $r6;

        $l8 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l9 = r0.<com.android.server.inputmethod.InputMethodManagerService: long mLastBindTime>;

        $l10 = $l8 - $l9;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);

        $r5[1] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r5[2] = $r8;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(32000, $r5);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Force disconnect/connect to the IME in showCurrentInputLocked()");

        $r9 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        virtualinvoke $r9.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean bindCurrentInputMethodServiceLocked(android.content.Intent,android.content.ServiceConnection,int)>($r10, r0, 1082130437);

        z9 = 0;

     label8:
        return z9;
    }

    public void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean $z0;
        com.android.internal.os.HandlerCaller $r1;
        com.android.internal.view.IInputMethod $r2;
        android.os.Message $r3;
        java.lang.Throwable $r4;
        com.android.internal.view.IInputMethodClient r5;
        java.lang.String r6;
        android.util.ArrayMap r7;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r5 := @parameter0: com.android.internal.view.IInputMethodClient;

        r6 := @parameter1: java.lang.String;

        r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r7;

     label1:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledFromValidUserLocked()>();

        if $z0 != 0 goto label3;

        exitmonitor r7;

     label2:
        return;

     label3:
        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = virtualinvoke $r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(2, r6);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r2, $r3);

        exitmonitor r7;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r7;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i1, i3;
        android.util.ArrayMap r1;
        boolean $z0, $z1;
        com.android.server.inputmethod.InputMethodManagerService$ClientState $r2, $r4;
        android.os.Message $r3;
        java.lang.String $r9;
        java.lang.Throwable $r10;
        com.android.internal.view.IInputMethodClient r11;
        java.lang.StringBuilder r12;
        android.os.Handler r13;
        com.android.internal.os.HandlerCaller r14;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r11 := @parameter0: com.android.internal.view.IInputMethodClient;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledFromValidUserLocked()>();

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $z1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean canShowInputMethodPickerLocked(com.android.internal.view.IInputMethodClient)>(r11);

        if $z1 != 0 goto label05;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring showInputMethodPickerFromClient of uid ");

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r9 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r9);

        exitmonitor r1;

     label04:
        return;

     label05:
        r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.Handler mHandler>;

        r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        if $r2 == null goto label07;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        i3 = $r4.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

     label06:
        goto label08;

     label07:
        i3 = 0;

     label08:
        $r3 = virtualinvoke r14.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageII(int,int,int)>(1, i0, i3);

        virtualinvoke r13.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3);

        exitmonitor r1;

     label09:
        return;

     label10:
        $r10 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void showInputMethodPickerFromSystem(com.android.internal.view.IInputMethodClient, int, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        com.android.internal.view.IInputMethodClient r1;
        int i0, i1, $i2;
        android.content.Context $r2;
        java.lang.SecurityException $r3;
        com.android.internal.os.HandlerCaller $r4;
        android.os.Handler $r5;
        android.os.Message $r6;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $i2 = virtualinvoke $r2.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.WRITE_SECURE_SETTINGS");

        if $i2 != 0 goto label1;

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.Handler mHandler>;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r6 = virtualinvoke $r4.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageII(int,int,int)>(1, i0, i1);

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>($r6);

        return;

     label1:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("showInputMethodPickerFromSystem requires WRITE_SECURE_SETTINGS permission");

        throw $r3;
    }

    public boolean showSoftInput(com.android.internal.view.IInputMethodClient, android.os.IBinder, int, android.os.ResultReceiver)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, i1, $i3, $i4, $i5;
        android.util.ArrayMap r1, $r23;
        long l2;
        com.android.server.inputmethod.InputMethodManagerService$ClientState r2, $r3, $r14;
        boolean z0, $z1, $z2;
        android.os.IBinder $r5, $r16, $r17, r21, $r24;
        java.lang.String $r7, $r13;
        com.android.server.wm.WindowManagerInternal $r8;
        com.android.internal.view.IInputMethodClient $r15, r20;
        java.lang.Throwable $r18, $r19;
        android.os.ResultReceiver r22;
        java.lang.Object $r25;
        java.lang.StringBuilder r26, r28;
        java.lang.IllegalArgumentException r27;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r20 := @parameter0: com.android.internal.view.IInputMethodClient;

        r21 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r22 := @parameter3: android.os.ResultReceiver;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $z1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean calledFromValidUserLocked()>();

        if $z1 != 0 goto label03;

        exitmonitor r1;

     label02:
        return 0;

     label03:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        if $r3 == null goto label07;

     label05:
        if r20 == null goto label07;

     label06:
        $r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r15 = $r14.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r16 = interfaceinvoke $r15.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r17 = interfaceinvoke r20.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        if $r16 == $r17 goto label12;

     label07:
        $r23 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mClients>;

        $r24 = interfaceinvoke r20.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r25 = virtualinvoke $r23.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r24);

        r2 = (com.android.server.inputmethod.InputMethodManagerService$ClientState) $r25;

     label08:
        if r2 == null goto label15;

     label09:
        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $i5 = r2.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        $i4 = r2.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int pid>;

        $i3 = r2.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        $z2 = virtualinvoke $r8.<com.android.server.wm.WindowManagerInternal: boolean isInputMethodClientFocus(int,int,int)>($i5, $i4, $i3);

        if $z2 != 0 goto label12;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring showSoftInput of uid ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        $r13 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r13);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r1;

     label11:
        return 0;

     label12:
        z0 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean showCurrentInputLocked(android.os.IBinder,int,android.os.ResultReceiver,int)>(r21, i0, r22, 0);

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r1;

     label14:
        return z0;

     label15:
        r27 = new java.lang.IllegalArgumentException;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown client ");

        $r5 = interfaceinvoke r20.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw r27;

     label16:
        $r19 := @caughtexception;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label18:
        throw $r19;

     label19:
        $r18 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label18 to label19 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public com.android.internal.view.InputBindResult startInputOrWindowGainedFocus(int, com.android.internal.view.IInputMethodClient, android.os.IBinder, int, int, int, android.view.inputmethod.EditorInfo, com.android.internal.view.IInputContext, int, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, i1, i2, i3, i4, i5, $i8, i11;
        com.android.internal.view.IInputContext r1;
        android.util.ArrayMap r2, r34, r38;
        long l6;
        java.lang.StringBuilder $r3, $r19;
        java.lang.String $r5, $r8, $r12, $r23;
        com.android.internal.view.InputBindResult $r13, $r24, $r25, r33;
        android.os.UserHandle $r14, $r15, $r17;
        android.content.Context $r16;
        android.os.UserManagerInternal $r18;
        boolean $z0;
        java.lang.Throwable $r26, $r27, $r28, r39;
        com.android.internal.view.IInputMethodClient r29;
        android.os.IBinder r30;
        android.view.inputmethod.EditorInfo r31;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        r29 := @parameter1: com.android.internal.view.IInputMethodClient;

        r30 := @parameter2: android.os.IBinder;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r31 := @parameter6: android.view.inputmethod.EditorInfo;

        r1 := @parameter7: com.android.internal.view.IInputContext;

        i4 := @parameter8: int;

        i5 := @parameter9: int;

        if r30 != null goto label01;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", "windowToken cannot be null.");

        $r25 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult NULL>;

        return $r25;

     label01:
        i11 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if r31 == null goto label03;

        $r14 = r31.<android.view.inputmethod.EditorInfo: android.os.UserHandle targetInputMethodUser>;

        if $r14 == null goto label03;

        $r15 = r31.<android.view.inputmethod.EditorInfo: android.os.UserHandle targetInputMethodUser>;

        $i8 = virtualinvoke $r15.<android.os.UserHandle: int getIdentifier()>();

        if $i8 == i11 goto label03;

        $r16 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        virtualinvoke $r16.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", "Using EditorInfo.targetInputMethodUser requires INTERACT_ACROSS_USERS_FULL.");

        $r17 = r31.<android.view.inputmethod.EditorInfo: android.os.UserHandle targetInputMethodUser>;

        i11 = virtualinvoke $r17.<android.os.UserHandle: int getIdentifier()>();

        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.UserManagerInternal mUserManagerInternal>;

        $z0 = virtualinvoke $r18.<android.os.UserManagerInternal: boolean isUserRunning(int)>(i11);

        if $z0 != 0 goto label02;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User #");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not running.");

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", $r23);

        $r24 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult INVALID_USER>;

        return $r24;

     label02:
        goto label03;

     label03:
        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r2;

     label04:
        l6 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label05:
        r33 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.InputBindResult startInputOrWindowGainedFocusInternalLocked(int,com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext,int,int,int)>(i0, r29, r30, i1, i2, i3, r31, r1, i4, i5, i11);

     label06:
        r34 = r2;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l6);

     label08:
        r34 = r2;

     label09:
        exitmonitor r2;

     label10:
        if r33 != null goto label11;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InputBindResult is @NonNull. startInputReason=");

        $r5 = staticinvoke <com.android.internal.inputmethod.InputMethodDebug: java.lang.String startInputReasonToString(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" windowFlags=#");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" editorInfo=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31);

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("InputMethodManagerService", $r12);

        $r13 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult NULL>;

        return $r13;

     label11:
        return r33;

     label12:
        $r28 := @caughtexception;

        r34 = r2;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l6);

     label14:
        r34 = r2;

     label15:
        throw $r28;

     label16:
        $r26 := @caughtexception;

        r38 = r2;

        r39 = $r26;

     label17:
        r34 = r38;

     label18:
        exitmonitor r38;

     label19:
        throw r39;

     label20:
        $r27 := @caughtexception;

        r39 = $r27;

        r38 = r34;

        goto label17;

        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState, com.android.internal.view.IInputContext, int, android.view.inputmethod.EditorInfo, int, int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.view.inputmethod.EditorInfo r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i12, $i13, $i22, $i23, $i24, $i25, $i27, i28, $i29;
        com.android.server.inputmethod.InputMethodManagerService$ClientState r2, r66;
        java.lang.String $r3, $r4, $r11, $r14, $r30, $r32, $r36, $r37, $r41, $r45, $r47, $r58, $r60, $r63, r69, $r71;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        android.app.AppOpsManager $r5;
        com.android.server.wm.WindowManagerInternal $r6;
        com.android.server.inputmethod.InputMethodManagerService$ImeDisplayValidator $r7;
        android.graphics.Matrix $r8, $r49;
        java.lang.StringBuilder $r9, $r26, $r54;
        java.lang.IllegalArgumentException $r13;
        android.content.Intent $r15, $r18, $r20, $r21, $r25, $r28;
        android.content.ComponentName $r16;
        android.content.Context $r22;
        android.app.PendingIntent $r23;
        com.android.internal.view.InputBindResult $r31, $r35, $r44, $r46, $r48, $r53, $r61, $r62, $r64;
        long $l11, $l14, $l15, $l16, $l18, $l19, $l20;
        android.os.Binder $r33;
        android.view.IWindowManager $r34;
        com.android.server.inputmethod.InputMethodManagerService$SessionState $r38;
        com.android.internal.view.IInputMethod $r39;
        byte $b17;
        java.lang.Object[] $r40;
        java.lang.Long $r42;
        java.lang.Integer $r43;
        com.android.internal.os.HandlerCaller $r50;
        com.android.internal.view.IInputMethodClient $r51;
        android.os.Message $r52;
        android.os.RemoteException $r65;
        com.android.internal.view.IInputContext r67;
        android.util.ArrayMap $r70;
        java.lang.Object $r72;
        android.view.inputmethod.InputMethodInfo r73;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r66 := @parameter0: com.android.server.inputmethod.InputMethodManagerService$ClientState;

        r67 := @parameter1: com.android.internal.view.IInputContext;

        i28 := @parameter2: int;

        r1 := @parameter3: android.view.inputmethod.EditorInfo;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        if $r3 != null goto label01;

        $r64 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult NO_IME>;

        return $r64;

     label01:
        $z0 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mSystemReady>;

        if $z0 != 0 goto label02;

        $r62 = new com.android.internal.view.InputBindResult;

        $r63 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $i27 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurSeq>;

        specialinvoke $r62.<com.android.internal.view.InputBindResult: void <init>(int,com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int,android.graphics.Matrix)>(8, null, null, $r63, $i27, null);

        return $r62;

     label02:
        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AppOpsManager mAppOpsManager>;

        $i4 = r66.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        $r4 = r1.<android.view.inputmethod.EditorInfo: java.lang.String packageName>;

        $z1 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean checkIfPackageBelongsToUid(android.app.AppOpsManager,int,java.lang.String)>($r5, $i4, $r4);

        if $z1 != 0 goto label03;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rejecting this client as it reported an invalid package name. uid=");

        $i25 = r66.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" package=");

        $r58 = r1.<android.view.inputmethod.EditorInfo: java.lang.String packageName>;

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", $r60);

        $r61 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult INVALID_PACKAGE_NAME>;

        return $r61;

     label03:
        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $i6 = r66.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        $i5 = r66.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int uid>;

        $z2 = virtualinvoke $r6.<com.android.server.wm.WindowManagerInternal: boolean isUidAllowedOnDisplay(int,int)>($i6, $i5);

        if $z2 != 0 goto label04;

        $r53 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult INVALID_DISPLAY_ID>;

        return $r53;

     label04:
        $i7 = r66.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ImeDisplayValidator mImeDisplayValidator>;

        i2 = staticinvoke <com.android.server.inputmethod.InputMethodManagerService: int computeImeDisplayIdForTarget(int,com.android.server.inputmethod.InputMethodManagerService$ImeDisplayValidator)>($i7, $r7);

        r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        z8 = 1;

        if r2 == r66 goto label05;

        $z6 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean isKeyguardLocked()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mCurClientInKeyguard> = $z6;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void unbindCurrentClientLocked(int)>(1);

        $z7 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mIsInteractive>;

        if $z7 == 0 goto label05;

        $r51 = r66.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r50 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r52 = virtualinvoke $r50.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(3020, 1, r66);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r51, $r52);

     label05:
        $i29 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurSeq>;

        i3 = $i29 + 1;

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurSeq> = i3;

        if i3 > 0 goto label06;

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurSeq> = 1;

     label06:
        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient> = r66;

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputContext mCurInputContext> = r67;

        $i8 = r66.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        $r8 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: android.graphics.Matrix getActivityViewToScreenMatrixLocked(int,int)>($i8, i2);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.graphics.Matrix mCurActivityViewToScreenMatrix> = $r8;

        $i9 = r66.<com.android.server.inputmethod.InputMethodManagerService$ClientState: int selfReportedDisplayId>;

        if $i9 == i2 goto label07;

        $r49 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.graphics.Matrix mCurActivityViewToScreenMatrix>;

        if $r49 != null goto label07;

        i28 = i28 | 8;

        goto label07;

     label07:
        r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurInputContextMissingMethods> = i28;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.EditorInfo mCurAttribute> = r1;

        r69 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurId>;

        if r69 == null goto label13;

        $r37 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $z4 = virtualinvoke r69.<java.lang.String: boolean equals(java.lang.Object)>($r37);

        if $z4 == 0 goto label13;

        $i13 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        if i2 != $i13 goto label13;

        $r38 = r66.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.server.inputmethod.InputMethodManagerService$SessionState curSession>;

        if $r38 == null goto label10;

        $i24 = i0 & 4;

        if $i24 == 0 goto label08;

        goto label09;

     label08:
        z8 = 0;

     label09:
        $r48 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.InputBindResult attachNewInputLocked(int,boolean)>(i1, z8);

        return $r48;

     label10:
        $z5 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mHaveConnection>;

        if $z5 == 0 goto label13;

        $r39 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r39 == null goto label11;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void requestClientSessionLocked(com.android.server.inputmethod.InputMethodManagerService$ClientState)>(r66);

        $r46 = new com.android.internal.view.InputBindResult;

        $r47 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurId>;

        $i23 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurSeq>;

        specialinvoke $r46.<com.android.internal.view.InputBindResult: void <init>(int,com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int,android.graphics.Matrix)>(1, null, null, $r47, $i23, null);

        return $r46;

     label11:
        $l14 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l15 = r0.<com.android.server.inputmethod.InputMethodManagerService: long mLastBindTime>;

        $l16 = $l15 + 3000L;

        $b17 = $l14 cmp $l16;

        if $b17 >= 0 goto label12;

        $r44 = new com.android.internal.view.InputBindResult;

        $r45 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurId>;

        $i22 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurSeq>;

        specialinvoke $r44.<com.android.internal.view.InputBindResult: void <init>(int,com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int,android.graphics.Matrix)>(2, null, null, $r45, $i22, null);

        return $r44;

     label12:
        $r40 = newarray (java.lang.Object)[3];

        $r41 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r40[0] = $r41;

        $l18 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l19 = r0.<com.android.server.inputmethod.InputMethodManagerService: long mLastBindTime>;

        $l20 = $l18 - $l19;

        $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l20);

        $r40[1] = $r42;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r40[2] = $r43;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(32000, $r40);

        goto label13;

     label13:
        $r70 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        $r71 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r72 = virtualinvoke $r70.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r71);

        r73 = (android.view.inputmethod.InputMethodInfo) $r72;

        if r73 == null goto label19;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void unbindCurrentMethodLocked()>();

        $r15 = new android.content.Intent;

        specialinvoke $r15.<android.content.Intent: void <init>(java.lang.String)>("android.view.InputMethod");

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent> = $r15;

        $r16 = virtualinvoke r73.<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()>();

        virtualinvoke $r15.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r16);

        $r18 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent>;

        virtualinvoke $r18.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.client_label", 17040328);

        $r21 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent>;

        $r22 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r20 = new android.content.Intent;

        specialinvoke $r20.<android.content.Intent: void <init>(java.lang.String)>("android.settings.INPUT_METHOD_SETTINGS");

        $r23 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>($r22, 0, $r20, 0);

        virtualinvoke $r21.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.client_intent", $r23);

        $r25 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent>;

        $z3 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean bindCurrentInputMethodServiceLocked(android.content.Intent,android.content.ServiceConnection,int)>($r25, r0, 1082130437);

        if $z3 == 0 goto label18;

        $l11 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: long mLastBindTime> = $l11;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mHaveConnection> = 1;

        $r32 = virtualinvoke r73.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurId> = $r32;

        $r33 = new android.os.Binder;

        specialinvoke $r33.<android.os.Binder: void <init>()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken> = $r33;

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId> = i2;

     label14:
        $r34 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.IWindowManager mIWindowManager>;

        interfaceinvoke $r34.<android.view.IWindowManager: void addWindowToken(android.os.IBinder,int,int)>($r33, 2011, i2);

     label15:
        goto label17;

     label16:
        $r65 := @caughtexception;

     label17:
        $r35 = new com.android.internal.view.InputBindResult;

        $r36 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurId>;

        $i12 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurSeq>;

        specialinvoke $r35.<com.android.internal.view.InputBindResult: void <init>(int,com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int,android.graphics.Matrix)>(2, null, null, $r36, $i12, null);

        return $r35;

     label18:
        r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent> = null;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure connecting to input method service: ");

        $r28 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Intent mCurIntent>;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r30);

        $r31 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult IME_NOT_CONNECTED>;

        return $r31;

     label19:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown id: ");

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurMethodId>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

        catch android.os.RemoteException from label14 to label15 with label16;
    }

    public void systemRunning(com.android.server.statusbar.StatusBarManagerService)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.util.ArrayMap r1;
        int i0, $i1, $i2;
        boolean $z1, $z2, $z3, z4, z5, z6, z7;
        android.content.res.Resources $r2, $r13;
        android.content.res.Configuration $r3;
        android.os.LocaleList $r4;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r5, $r21, $r23, r33;
        android.os.UserManagerInternal $r6;
        android.content.Context $r7, $r10, $r15, $r26, r35, r38;
        java.lang.Object $r8, $r11;
        android.app.KeyguardManager $r9;
        android.app.NotificationManager $r12;
        android.os.UserHandle $r14, $r19;
        com.android.server.inputmethod.InputMethodManagerService$MyPackageMonitor $r16;
        com.android.server.inputmethod.InputMethodManagerService$SettingsObserver $r17;
        java.lang.String $r22, $r27, $r30;
        android.content.pm.IPackageManager $r24;
        java.util.ArrayList $r25;
        com.android.server.inputmethod.InputMethodManagerService$HardKeyboardListener $r28;
        com.android.server.wm.WindowManagerInternal $r29;
        java.lang.Throwable $r31;
        com.android.server.statusbar.StatusBarManagerService r32;
        android.content.IntentFilter r34, r37;
        com.android.server.inputmethod.InputMethodManagerService$ImmsBroadcastReceiverForSystemUser r36;
        com.android.server.inputmethod.InputMethodManagerService$ImmsBroadcastReceiverForAllUsers r39;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r32 := @parameter0: com.android.server.statusbar.StatusBarManagerService;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.util.ArrayMap mMethodMap>;

        entermonitor r1;

     label01:
        $z1 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mSystemReady>;

        if $z1 != 0 goto label15;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mSystemReady> = 1;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.res.Resources mRes>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r4 = virtualinvoke $r3.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.LocaleList mLastSystemLocales> = $r4;

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        i0 = virtualinvoke $r5.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        r33 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.UserManagerInternal mUserManagerInternal>;

        z4 = virtualinvoke $r6.<android.os.UserManagerInternal: boolean isUserUnlockingOrUnlocked(int)>(i0);

     label02:
        if z4 != 0 goto label03;

        z5 = 1;

        goto label04;

     label03:
        z5 = 0;

     label04:
        virtualinvoke r33.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void switchCurrentUser(int,boolean)>(i0, z5);

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/KeyguardManager;");

        $r9 = (android.app.KeyguardManager) $r8;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.KeyguardManager mKeyguardManager> = $r9;

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/NotificationManager;");

        $r12 = (android.app.NotificationManager) $r11;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.NotificationManager mNotificationManager> = $r12;

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.statusbar.StatusBarManagerService mStatusBar> = r32;

     label05:
        if r32 == null goto label07;

     label06:
        $r30 = r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mSlotIme>;

        virtualinvoke r32.<com.android.server.statusbar.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>($r30, 0);

     label07:
        $i2 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mImeWindowVis>;

        $i1 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mBackDisposition>;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateSystemUiLocked(int,int)>($i2, $i1);

        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.res.Resources mRes>;

        z6 = virtualinvoke $r13.<android.content.res.Resources: boolean getBoolean(int)>(17891611);

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowOngoingImeSwitcherForPhones> = z6;

     label08:
        if z6 == 0 goto label10;

     label09:
        $r29 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $r28 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$HardKeyboardListener mHardKeyboardListener>;

        virtualinvoke $r29.<com.android.server.wm.WindowManagerInternal: void setOnHardKeyboardStatusChangeListener(com.android.server.wm.WindowManagerInternal$OnHardKeyboardStatusChangeListener)>($r28);

     label10:
        $r16 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$MyPackageMonitor mMyPackageMonitor>;

        $r15 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r14 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r16.<com.android.server.inputmethod.InputMethodManagerService$MyPackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>($r15, null, $r14, 1);

        $r17 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$SettingsObserver mSettingsObserver>;

        virtualinvoke $r17.<com.android.server.inputmethod.InputMethodManagerService$SettingsObserver: void registerContentObserverLocked(int)>(i0);

        r34 = new android.content.IntentFilter;

        specialinvoke r34.<android.content.IntentFilter: void <init>()>();

        virtualinvoke r34.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_ADDED");

        virtualinvoke r34.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_REMOVED");

        virtualinvoke r34.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.LOCALE_CHANGED");

        virtualinvoke r34.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.server.inputmethod.InputMethodManagerService.SHOW_INPUT_METHOD_PICKER");

        r35 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        r36 = new com.android.server.inputmethod.InputMethodManagerService$ImmsBroadcastReceiverForSystemUser;

        specialinvoke r36.<com.android.server.inputmethod.InputMethodManagerService$ImmsBroadcastReceiverForSystemUser: void <init>(com.android.server.inputmethod.InputMethodManagerService,com.android.server.inputmethod.InputMethodManagerService$1)>(r0, null);

        virtualinvoke r35.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r36, r34);

        r37 = new android.content.IntentFilter;

        specialinvoke r37.<android.content.IntentFilter: void <init>()>();

        virtualinvoke r37.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.CLOSE_SYSTEM_DIALOGS");

        r38 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        r39 = new com.android.server.inputmethod.InputMethodManagerService$ImmsBroadcastReceiverForAllUsers;

        specialinvoke r39.<com.android.server.inputmethod.InputMethodManagerService$ImmsBroadcastReceiverForAllUsers: void <init>(com.android.server.inputmethod.InputMethodManagerService,com.android.server.inputmethod.InputMethodManagerService$1)>(r0, null);

        $r19 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke r38.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>(r39, $r19, r37, null, null);

     label11:
        z7 = 0;

     label12:
        $r21 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r22 = virtualinvoke $r21.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r22);

        $z3 = $z2 ^ 1;

        if $z3 != 0 goto label14;

     label13:
        z7 = 1;

     label14:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void buildInputMethodListLocked(boolean)>(z7);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateFromSettingsLocked(boolean)>(1);

        $r24 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager>;

        $r23 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r25 = virtualinvoke $r23.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        $r26 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r27 = virtualinvoke $r26.<android.content.Context: java.lang.String getBasePackageName()>();

        staticinvoke <com.android.server.inputmethod.InputMethodUtils: void setNonSelectedSystemImesDisabledUntilUsed(android.content.pm.IPackageManager,java.util.List,int,java.lang.String)>($r24, $r25, i0, $r27);

     label15:
        exitmonitor r1;

     label16:
        return;

     label17:
        $r31 := @caughtexception;

     label18:
        exitmonitor r1;

     label19:
        throw $r31;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    void unbindCurrentClientLocked(int)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        int i0, $i1;
        com.android.internal.view.IInputMethod r1;
        com.android.server.inputmethod.InputMethodManagerService$ClientState $r2, $r5, $r8, $r10, $r13, $r16;
        boolean $z0;
        com.android.internal.os.HandlerCaller $r3, $r7, $r12;
        android.os.Message $r4, $r9, $r15;
        com.android.internal.view.IInputMethodClient $r6, $r11, $r14;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        if $r2 == null goto label2;

        $z0 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mBoundToMethod>;

        if $z0 == 0 goto label1;

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mBoundToMethod> = 0;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if r1 == null goto label1;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(1000, r1);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>(r1, $r4);

     label1:
        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r6 = $r5.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r7 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r9 = virtualinvoke $r7.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIO(int,int,int,java.lang.Object)>(3020, 0, 0, $r8);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r6, $r9);

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r11 = $r10.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r12 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $i1 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurSeq>;

        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r14 = $r13.<com.android.server.inputmethod.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r15 = virtualinvoke $r12.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIO(int,int,int,java.lang.Object)>(3000, $i1, i0, $r14);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r11, $r15);

        $r16 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient>;

        $r16.<com.android.server.inputmethod.InputMethodManagerService$ClientState: boolean sessionRequested> = 0;

        r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodManagerService$ClientState mCurClient> = null;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.graphics.Matrix mCurActivityViewToScreenMatrix> = null;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void hideInputMethodMenuLocked()>();

     label2:
        return;
    }

    void unbindCurrentMethodLocked()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean $z0, $z1;
        int $i0;
        android.view.IWindowManager $r1;
        android.content.Context $r2, $r4;
        android.content.ServiceConnection $r3;
        android.os.RemoteException $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        $z0 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mVisibleBound>;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.ServiceConnection mVisibleConnection>;

        virtualinvoke $r4.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r3);

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mVisibleBound> = 0;

     label1:
        $z1 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mHaveConnection>;

        if $z1 == 0 goto label2;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mHaveConnection> = 0;

     label2:
        r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken>;

        if r6 == null goto label7;

     label3:
        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.IWindowManager mIWindowManager>;

        $i0 = r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId>;

        interfaceinvoke $r1.<android.view.IWindowManager: void removeWindowToken(android.os.IBinder,int)>(r6, $i0);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

     label6:
        r0.<com.android.server.inputmethod.InputMethodManagerService: int mImeWindowVis> = 0;

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mBackDisposition> = 0;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateSystemUiLocked(int,int)>(0, 0);

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurToken> = null;

        r0.<com.android.server.inputmethod.InputMethodManagerService: int mCurTokenDisplayId> = -1;

        r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.IBinder mCurHostInputToken> = null;

     label7:
        r0.<com.android.server.inputmethod.InputMethodManagerService: java.lang.String mCurId> = null;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void clearCurMethodLocked()>();

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    void updateCurrentProfileIds()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r1;
        android.os.UserManager $r2;
        int $i0;
        int[] $r3;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.os.UserManager mUserManager>;

        $i0 = virtualinvoke r1.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r3 = virtualinvoke $r2.<android.os.UserManager: int[] getProfileIdsWithDisabled(int)>($i0);

        virtualinvoke r1.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void setCurrentProfileIds(int[])>($r3);

        return;
    }

    void updateFromSettingsLocked(boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean z0;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateInputMethodsFromSettingsLocked(boolean)>(z0);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void updateKeyboardFromSettingsLocked()>();

        return;
    }

    void updateInputMethodsFromSettingsLocked(boolean)
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        boolean z0, $z1, $z2, $z3;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r1, $r4, $r5, $r6, $r10, $r13;
        android.content.Context $r2, $r14;
        com.android.server.inputmethod.InputMethodSubtypeSwitchingController $r3;
        int $i0, $i1, $i2, $i3, $i4, i6;
        java.lang.Object $r7;
        android.content.pm.IPackageManager $r8, $r11;
        java.lang.String $r9, $r12, $r15, $r20, r26, r27;
        java.lang.Throwable $r16;
        java.lang.StringBuilder $r17;
        android.os.RemoteException $r21;
        java.util.ArrayList r22;
        android.view.inputmethod.InputMethodInfo r23;
        android.content.pm.ApplicationInfo r24;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label08;

        $r6 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r22 = virtualinvoke $r6.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList getEnabledInputMethodListLocked()>();

        i6 = 0;

     label01:
        $i1 = interfaceinvoke r22.<java.util.List: int size()>();

        if i6 >= $i1 goto label08;

        $r7 = interfaceinvoke r22.<java.util.List: java.lang.Object get(int)>(i6);

        r23 = (android.view.inputmethod.InputMethodInfo) $r7;

     label02:
        $r8 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager>;

        $r9 = virtualinvoke r23.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        $r10 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i2 = virtualinvoke $r10.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        r24 = interfaceinvoke $r8.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>($r9, 32768, $i2);

     label03:
        if r24 == null goto label05;

     label04:
        $i3 = r24.<android.content.pm.ApplicationInfo: int enabledSetting>;

        if $i3 != 4 goto label05;

        $r11 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager>;

        $r12 = virtualinvoke r23.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        $r13 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i4 = virtualinvoke $r13.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r14 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: java.lang.String getBasePackageName()>();

        interfaceinvoke $r11.<android.content.pm.IPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>($r12, 0, 1, $i4, $r15);

     label05:
        goto label07;

     label06:
        $r21 := @caughtexception;

     label07:
        i6 = i6 + 1;

        goto label01;

     label08:
        $r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r26 = virtualinvoke $r1.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        r27 = r26;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r26);

        if $z1 == 0 goto label09;

        r27 = r26;

        $z2 = specialinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: boolean chooseNewDefaultIMELocked()>();

        if $z2 == 0 goto label09;

        $r5 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r27 = virtualinvoke $r5.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

     label09:
        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r27);

        if $z3 != 0 goto label14;

     label10:
        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i0 = virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getSelectedInputMethodSubtypeId(java.lang.String)>(r27);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void setInputMethodLocked(java.lang.String,int)>(r27, $i0);

     label11:
        goto label13;

     label12:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown input method from prefs: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", $r20, $r16);

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void resetCurrentMethodAndClient(int)>(5);

     label13:
        goto label15;

     label14:
        virtualinvoke r0.<com.android.server.inputmethod.InputMethodManagerService: void resetCurrentMethodAndClient(int)>(4);

     label15:
        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodSubtypeSwitchingController mSwitchingController>;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<com.android.server.inputmethod.InputMethodSubtypeSwitchingController: void resetCircularListLocked(android.content.Context)>($r2);

        return;

        catch android.os.RemoteException from label02 to label03 with label06;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.IllegalArgumentException from label10 to label11 with label12;
    }

    public void updateKeyboardFromSettingsLocked()
    {
        com.android.server.inputmethod.InputMethodManagerService r0;
        android.app.AlertDialog r1;
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings $r2;
        boolean $z0, $z1, $z2;
        android.view.View $r3, $r4, $r5;
        android.widget.Switch $r6;

        r0 := @this: com.android.server.inputmethod.InputMethodManagerService;

        $r2 = r0.<com.android.server.inputmethod.InputMethodManagerService: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $z0 = virtualinvoke $r2.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean isShowImeWithHardKeyboardEnabled()>();

        r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowImeWithHardKeyboard> = $z0;

        r1 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        if r1 == null goto label1;

        $r3 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.View mSwitchingDialogTitleView>;

        if $r3 == null goto label1;

        $z1 = virtualinvoke r1.<android.app.AlertDialog: boolean isShowing()>();

        if $z1 == 0 goto label1;

        $r4 = r0.<com.android.server.inputmethod.InputMethodManagerService: android.view.View mSwitchingDialogTitleView>;

        $r5 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>(16909028);

        $r6 = (android.widget.Switch) $r5;

        $z2 = r0.<com.android.server.inputmethod.InputMethodManagerService: boolean mShowImeWithHardKeyboard>;

        virtualinvoke $r6.<android.widget.Switch: void setChecked(boolean)>($z2);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.inputmethod.InputMethodManagerService: long TIME_TO_RECONNECT> = 3000L;

        <com.android.server.inputmethod.InputMethodManagerService: java.lang.String TAG_TRY_SUPPRESSING_IME_SWITCHER> = "TrySuppressingImeSwitcher";

        <com.android.server.inputmethod.InputMethodManagerService: java.lang.String TAG> = "InputMethodManagerService";

        <com.android.server.inputmethod.InputMethodManagerService: int SECURE_SUGGESTION_SPANS_MAX_SIZE> = 20;

        <com.android.server.inputmethod.InputMethodManagerService: int NOT_A_SUBTYPE_ID> = -1;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_UNBIND_INPUT> = 1000;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_UNBIND_CLIENT> = 3000;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_SYSTEM_UNLOCK_USER> = 5000;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_START_INPUT> = 2000;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_SHOW_SOFT_INPUT> = 1020;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_SHOW_IM_SUBTYPE_PICKER> = 1;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_SHOW_IM_SUBTYPE_ENABLER> = 2;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_SHOW_IM_CONFIG> = 3;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_SET_INTERACTIVE> = 3030;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_SET_ACTIVE> = 3020;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_REPORT_PRE_RENDERED> = 3060;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_REPORT_FULLSCREEN_MODE> = 3045;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_REMOVE_IME_SURFACE_FROM_WINDOW> = 1061;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_REMOVE_IME_SURFACE> = 1060;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_NOTIFY_IME_UID_TO_AUDIO_SERVICE> = 7000;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_INLINE_SUGGESTIONS_REQUEST> = 6000;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_INITIALIZE_IME> = 1040;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_HIDE_SOFT_INPUT> = 1030;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_HIDE_CURRENT_INPUT_METHOD> = 1035;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_HARD_KEYBOARD_SWITCH_CHANGED> = 4000;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_DISPATCH_ON_INPUT_METHOD_LIST_UPDATED> = 5010;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_CREATE_SESSION> = 1050;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_BIND_INPUT> = 1010;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_BIND_CLIENT> = 3010;

        <com.android.server.inputmethod.InputMethodManagerService: int MSG_APPLY_IME_VISIBILITY> = 3070;

        <com.android.server.inputmethod.InputMethodManagerService: int IME_VISIBLE_BIND_FLAGS> = 738725889;

        <com.android.server.inputmethod.InputMethodManagerService: int IME_CONNECTION_BIND_FLAGS> = 1082130437;

        <com.android.server.inputmethod.InputMethodManagerService: int FALLBACK_DISPLAY_ID> = 0;

        <com.android.server.inputmethod.InputMethodManagerService: boolean DEBUG> = 0;

        <com.android.server.inputmethod.InputMethodManagerService: java.lang.String ACTION_SHOW_INPUT_METHOD_PICKER> = "com.android.server.inputmethod.InputMethodManagerService.SHOW_INPUT_METHOD_PICKER";

        return;
    }
}
