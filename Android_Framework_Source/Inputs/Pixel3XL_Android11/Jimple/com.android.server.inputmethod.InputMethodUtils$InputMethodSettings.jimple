public class com.android.server.inputmethod.InputMethodUtils$InputMethodSettings extends java.lang.Object
{
    private static final android.util.ArraySet CLONE_TO_MANAGED_PROFILE;
    private static final android.os.UserManagerInternal sUserManagerInternal;
    private boolean mCopyOnWrite;
    private final android.util.ArrayMap mCopyOnWriteDataStore;
    private int[] mCurrentProfileIds;
    private int mCurrentUserId;
    private java.lang.String mEnabledInputMethodsStrCache;
    private final android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter;
    private final android.util.ArrayMap mMethodMap;
    private final android.content.res.Resources mRes;
    private final android.content.ContentResolver mResolver;
    private final android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter;

    static void <clinit>()
    {
        android.util.ArraySet $r1;
        java.lang.Object $r2;
        android.os.UserManagerInternal $r3;

        $r1 = new android.util.ArraySet;

        specialinvoke $r1.<android.util.ArraySet: void <init>()>();

        <com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArraySet CLONE_TO_MANAGED_PROFILE> = $r1;

        staticinvoke <android.provider.Settings$Secure: void getCloneToManagedProfileSettings(java.util.Set)>($r1);

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/UserManagerInternal;");

        $r3 = (android.os.UserManagerInternal) $r2;

        <com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.os.UserManagerInternal sUserManagerInternal> = $r3;

        return;
    }

    void <init>(android.content.res.Resources, android.content.ContentResolver, android.util.ArrayMap, int, boolean)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        android.content.res.Resources r1;
        android.content.ContentResolver r2;
        android.util.ArrayMap r3, $r6;
        int i0;
        boolean z0;
        android.text.TextUtils$SimpleStringSplitter $r4, $r5;
        int[] $r7;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.content.ContentResolver;

        r3 := @parameter2: android.util.ArrayMap;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.text.TextUtils$SimpleStringSplitter;

        specialinvoke $r4.<android.text.TextUtils$SimpleStringSplitter: void <init>(char)>(58);

        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter> = $r4;

        $r5 = new android.text.TextUtils$SimpleStringSplitter;

        specialinvoke $r5.<android.text.TextUtils$SimpleStringSplitter: void <init>(char)>(59);

        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter> = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArrayMap mCopyOnWriteDataStore> = $r6;

        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean mCopyOnWrite> = 0;

        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String mEnabledInputMethodsStrCache> = "";

        $r7 = newarray (int)[0];

        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int[] mCurrentProfileIds> = $r7;

        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.content.res.Resources mRes> = r1;

        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver> = r2;

        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArrayMap mMethodMap> = r3;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void switchCurrentUser(int,boolean)>(i0, z0);

        return;
    }

    private void addSubtypeToHistory(java.lang.String, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1, r2, $r8;
        java.util.List r3;
        java.util.Iterator r4;
        android.util.Pair r5;
        boolean $z0, $z1;
        java.lang.Object $r6, $r7;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List loadInputMethodAndSubtypeHistoryLocked()>();

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.util.Pair) $r6;

        $r7 = r5.<android.util.Pair: java.lang.Object first>;

        $r8 = (java.lang.String) $r7;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>(r5);

        goto label3;

     label2:
        goto label1;

     label3:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void saveSubtypeHistory(java.util.List,java.lang.String,java.lang.String)>(r3, r1, r2);

        return;
    }

    private static void buildEnabledInputMethodsSettingString(java.lang.StringBuilder, android.util.Pair)
    {
        java.lang.StringBuilder r0;
        java.lang.String r1, $r3;
        java.lang.Object $r2, $r5, $r7;
        java.util.ArrayList $r6;
        boolean $z0;
        android.util.Pair r10;
        java.util.Iterator r11;

        r0 := @parameter0: java.lang.StringBuilder;

        r10 := @parameter1: android.util.Pair;

        $r2 = r10.<android.util.Pair: java.lang.Object first>;

        $r3 = (java.lang.String) $r2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = r10.<android.util.Pair: java.lang.Object second>;

        $r6 = (java.util.ArrayList) $r5;

        r11 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.lang.String) $r7;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        goto label1;

     label2:
        return;
    }

    private static java.util.List buildInputMethodsAndSubtypeList(java.lang.String, android.text.TextUtils$SimpleStringSplitter, android.text.TextUtils$SimpleStringSplitter)
    {
        android.text.TextUtils$SimpleStringSplitter r0, r1;
        java.util.ArrayList $r4, $r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r5, $r8, r9, r10;
        android.util.Pair $r7;

        r9 := @parameter0: java.lang.String;

        r0 := @parameter1: android.text.TextUtils$SimpleStringSplitter;

        r1 := @parameter2: android.text.TextUtils$SimpleStringSplitter;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z0 == 0 goto label1;

        return $r4;

     label1:
        virtualinvoke r0.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r9);

     label2:
        $z1 = virtualinvoke r0.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r5 = virtualinvoke r0.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        virtualinvoke r1.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>($r5);

        $z2 = virtualinvoke r1.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r10 = virtualinvoke r1.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

     label3:
        $z3 = virtualinvoke r1.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r8 = virtualinvoke r1.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label3;

     label4:
        $r7 = new android.util.Pair;

        specialinvoke $r7.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r10, $r6);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label5:
        goto label2;

     label6:
        return $r4;
    }

    private java.util.ArrayList createEnabledInputMethodListLocked(java.util.List)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3, $r4, $r6;
        android.util.ArrayMap $r5;
        java.util.List r7;
        java.util.Iterator r8;
        android.util.Pair r9;
        android.view.inputmethod.InputMethodInfo r10;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r7 := @parameter0: java.util.List;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (android.util.Pair) $r3;

        $r5 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArrayMap mMethodMap>;

        $r4 = r9.<android.util.Pair: java.lang.Object first>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r10 = (android.view.inputmethod.InputMethodInfo) $r6;

        if r10 == null goto label2;

        $z1 = virtualinvoke r10.<android.view.inputmethod.InputMethodInfo: boolean isVrOnly()>();

        if $z1 != 0 goto label2;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

     label2:
        goto label1;

     label3:
        return $r2;
    }

    private boolean getBoolean(java.lang.String, boolean)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1;
        boolean z0, z1;
        int i0, i1;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i1 = (int) z0;

        i0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getInt(java.lang.String,int)>(r1, i1);

        z1 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private java.lang.String getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(java.util.List, java.lang.String, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1, $r4, $r12, $r14, r16, r23, r24, $r26;
        int i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r2, $r3, $r5, $r7, $r8, $r10;
        android.util.ArrayMap $r6;
        android.content.res.Resources $r9;
        android.view.inputmethod.InputMethodSubtype $r11;
        java.lang.Throwable $r13;
        java.util.List r15;
        java.util.Iterator r17, r22;
        android.util.Pair r18;
        java.util.ArrayList r19, r21;
        android.view.inputmethod.InputMethodInfo r20;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r15 := @parameter0: java.util.List;

        r16 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r17 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r2 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (android.util.Pair) $r2;

        $r3 = r18.<android.util.Pair: java.lang.Object first>;

        $r4 = (java.lang.String) $r3;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z1 == 0 goto label14;

        $r5 = r18.<android.util.Pair: java.lang.Object second>;

        r19 = (java.util.ArrayList) $r5;

        $r6 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArrayMap mMethodMap>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r16);

        r20 = (android.view.inputmethod.InputMethodInfo) $r7;

        $i1 = virtualinvoke r19.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label05;

        if r20 == null goto label13;

        $i3 = virtualinvoke r20.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        if $i3 <= 0 goto label13;

        $r9 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.content.res.Resources mRes>;

        r21 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.util.ArrayList getImplicitlyApplicableSubtypesLocked(android.content.res.Resources,android.view.inputmethod.InputMethodInfo)>($r9, r20);

        if r21 == null goto label04;

        i0 = interfaceinvoke r21.<java.util.List: int size()>();

        i5 = 0;

     label02:
        if i5 >= i0 goto label04;

        $r10 = interfaceinvoke r21.<java.util.List: java.lang.Object get(int)>(i5);

        $r11 = (android.view.inputmethod.InputMethodSubtype) $r10;

        $i4 = virtualinvoke $r11.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label03;

        return r1;

     label03:
        i5 = i5 + 1;

        goto label02;

     label04:
        goto label13;

     label05:
        r22 = virtualinvoke r19.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r8 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.lang.String) $r8;

        $z3 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label12;

     label07:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        $z4 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean isValidSubtypeId(android.view.inputmethod.InputMethodInfo,int)>(r20, $i2);

        if $z4 == 0 goto label09;

     label08:
        return r23;

     label09:
        r24 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.lang.String access$300()>();

     label10:
        return r24;

     label11:
        $r13 := @caughtexception;

        $r14 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.lang.String access$300()>();

        return $r14;

     label12:
        goto label06;

     label13:
        $r26 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.lang.String access$300()>();

        return $r26;

     label14:
        goto label01;

     label15:
        return null;

        catch java.lang.NumberFormatException from label07 to label08 with label11;
        catch java.lang.NumberFormatException from label09 to label10 with label11;
    }

    private int getInt(java.lang.String, int)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        boolean $z0, $z1;
        int $i0, $i1, i2;
        android.content.ContentResolver $r1;
        android.util.ArrayMap $r2, $r3;
        java.lang.Object $r4;
        java.lang.String r5, r6;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r5 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        $z0 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean mCopyOnWrite>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArrayMap mCopyOnWriteDataStore>;

        $z1 = virtualinvoke $r2.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r5);

        if $z1 == 0 goto label2;

        $r3 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArrayMap mCopyOnWriteDataStore>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (java.lang.String) $r4;

        if r6 == null goto label1;

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6);

        goto label1;

     label1:
        return i2;

     label2:
        $r1 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver>;

        $i0 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        $i1 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r1, r5, i2, $i0);

        return $i1;
    }

    private android.util.Pair getLastSubtypeForInputMethodLockedInternal(java.lang.String)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1, r4, r11, r12;
        java.util.List r2, $r5;
        java.util.Iterator r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r6, $r7, $r8;
        android.util.Pair $r9, r10;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodsAndSubtypeListLocked()>();

        $r5 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List loadInputMethodAndSubtypeHistoryLocked()>();

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r10 = (android.util.Pair) $r6;

        $r7 = r10.<android.util.Pair: java.lang.Object first>;

        r4 = (java.lang.String) $r7;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label2;

        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label3;

     label2:
        $r8 = r10.<android.util.Pair: java.lang.Object second>;

        r11 = (java.lang.String) $r8;

        r12 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(java.util.List,java.lang.String,java.lang.String)>(r2, r4, r11);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z2 != 0 goto label3;

        $r9 = new android.util.Pair;

        specialinvoke $r9.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r4, r12);

        return $r9;

     label3:
        goto label1;

     label4:
        return null;
    }

    private int getSelectedInputMethodSubtypeHashCode()
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int $i0;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $i0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getInt(java.lang.String,int)>("selected_input_method_subtype", -1);

        return $i0;
    }

    private java.lang.String getString(java.lang.String, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1, r6, r7;
        boolean $z0, $z1;
        int $i0;
        android.content.ContentResolver $r2;
        android.util.ArrayMap $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean mCopyOnWrite>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArrayMap mCopyOnWriteDataStore>;

        $z1 = virtualinvoke $r3.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r6);

        if $z1 == 0 goto label1;

        $r4 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArrayMap mCopyOnWriteDataStore>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (java.lang.String) $r5;

        goto label2;

     label1:
        $r2 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver>;

        $i0 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        r7 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r2, r6, $i0);

     label2:
        if r7 == null goto label3;

        goto label4;

     label3:
        r7 = r1;

     label4:
        return r7;
    }

    private java.lang.String getSubtypeHistoryStr()
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $r1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getString(java.lang.String,java.lang.String)>("input_methods_subtype_history", "");

        return $r1;
    }

    private java.util.List loadInputMethodAndSubtypeHistoryLocked()
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r2, r13, r14, r15;
        java.util.ArrayList $r3;
        boolean $z0, $z1, $z2, $z3;
        android.text.TextUtils$SimpleStringSplitter $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12;
        android.util.Pair $r11;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r13 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSubtypeHistoryStr()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r13);

        if $z0 == 0 goto label1;

        return $r3;

     label1:
        $r4 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter>;

        virtualinvoke $r4.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r13);

     label2:
        $r5 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter>;

        $z1 = virtualinvoke $r5.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter>;

        r14 = virtualinvoke $r6.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $r7 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        virtualinvoke $r7.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r14);

        $r8 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        $z2 = virtualinvoke $r8.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r15 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.lang.String access$300()>();

        $r9 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        r2 = virtualinvoke $r9.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $r10 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        $z3 = virtualinvoke $r10.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r12 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        r15 = virtualinvoke $r12.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

     label3:
        $r11 = new android.util.Pair;

        specialinvoke $r11.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r2, r15);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label4:
        goto label2;

     label5:
        return $r3;
    }

    private void putBoolean(java.lang.String, boolean)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1;
        boolean z0;
        int i0;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 = (int) z0;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putInt(java.lang.String,int)>(r1, i0);

        return;
    }

    private void putInt(java.lang.String, int)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1, $r6;
        int i0, $i1, i2;
        boolean $z0, $z1;
        android.util.ArraySet $r2;
        android.content.ContentResolver $r3;
        android.os.UserManagerInternal $r4;
        android.util.ArrayMap $r5;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean mCopyOnWrite>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArrayMap mCopyOnWriteDataStore>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        goto label4;

     label1:
        $r2 = <com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArraySet CLONE_TO_MANAGED_PROFILE>;

        $z1 = virtualinvoke $r2.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r4 = <com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.os.UserManagerInternal sUserManagerInternal>;

        $i1 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        i2 = virtualinvoke $r4.<android.os.UserManagerInternal: int getProfileParentId(int)>($i1);

        goto label3;

     label2:
        i2 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

     label3:
        $r3 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver>;

        staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r3, r1, i0, i2);

     label4:
        return;
    }

    private void putString(java.lang.String, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1, r2;
        boolean $z0, $z1;
        android.util.ArraySet $r3;
        android.content.ContentResolver $r4;
        int $i0, i1;
        android.os.UserManagerInternal $r5;
        android.util.ArrayMap $r6;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean mCopyOnWrite>;

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArrayMap mCopyOnWriteDataStore>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        goto label4;

     label1:
        $r3 = <com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArraySet CLONE_TO_MANAGED_PROFILE>;

        $z1 = virtualinvoke $r3.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r5 = <com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.os.UserManagerInternal sUserManagerInternal>;

        $i0 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        i1 = virtualinvoke $r5.<android.os.UserManagerInternal: int getProfileParentId(int)>($i0);

        goto label3;

     label2:
        i1 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

     label3:
        $r4 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver>;

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r4, r1, r2, i1);

     label4:
        return;
    }

    private void putSubtypeHistoryStr(java.lang.String)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putString(java.lang.String,java.lang.String)>("input_methods_subtype_history", null);

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putString(java.lang.String,java.lang.String)>("input_methods_subtype_history", r1);

     label2:
        return;
    }

    private void saveSubtypeHistory(java.util.List, java.lang.String, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.util.Iterator r2;
        java.lang.StringBuilder $r3;
        boolean $z1, $z2, $z3, z4, $z5;
        java.lang.String $r4, r16, r17, r19, r20, r21;
        java.lang.Object $r5, $r6, $r7;
        java.util.List r15;
        android.util.Pair r18;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r15 := @parameter0: java.util.List;

        r16 := @parameter1: java.lang.String;

        r17 := @parameter2: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        z4 = 0;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r16);

        if $z1 != 0 goto label1;

        z4 = 0;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r17);

        if $z3 != 0 goto label1;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        z4 = 1;

     label1:
        r2 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z5 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label6;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r18 = (android.util.Pair) $r5;

        $r6 = r18.<android.util.Pair: java.lang.Object first>;

        r19 = (java.lang.String) $r6;

        $r7 = r18.<android.util.Pair: java.lang.Object second>;

        r20 = (java.lang.String) $r7;

        r21 = r20;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r20);

        if $z2 == 0 goto label3;

        r21 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.lang.String access$300()>();

     label3:
        if z4 == 0 goto label4;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        goto label5;

     label4:
        z4 = 1;

     label5:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        goto label2;

     label6:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putSubtypeHistoryStr(java.lang.String)>($r4);

        return;
    }

    void appendAndPutEnabledInputMethodLocked(java.lang.String, boolean)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1, $r3, $r5, $r9;
        boolean z0, $z1;
        java.lang.StringBuilder $r4;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getEnabledInputMethodsStr()>();

     label1:
        $r3 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String mEnabledInputMethodsStrCache>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putEnabledInputMethodsStr(java.lang.String)>(r1);

        goto label3;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String mEnabledInputMethodsStrCache>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putEnabledInputMethodsStr(java.lang.String)>($r9);

     label3:
        return;
    }

    boolean buildAndPutEnabledInputMethodsStrRemovingIdLocked(java.lang.StringBuilder, java.util.List, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.StringBuilder r1;
        java.lang.String r2, $r4, $r7;
        android.util.Pair r3;
        boolean $z0, $z1, z2, z3;
        java.lang.Object $r5, $r6;
        java.util.List r9;
        java.util.Iterator r10;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.StringBuilder;

        r9 := @parameter1: java.util.List;

        r2 := @parameter2: java.lang.String;

        z2 = 0;

        z3 = 0;

        r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.util.Pair) $r5;

        $r6 = r3.<android.util.Pair: java.lang.Object first>;

        $r7 = (java.lang.String) $r6;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        z2 = 1;

        goto label5;

     label2:
        if z3 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        goto label4;

     label3:
        z3 = 1;

     label4:
        staticinvoke <com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void buildEnabledInputMethodsSettingString(java.lang.StringBuilder,android.util.Pair)>(r1, r3);

     label5:
        goto label1;

     label6:
        if z2 == 0 goto label7;

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putEnabledInputMethodsStr(java.lang.String)>($r4);

     label7:
        return z2;
    }

    public void dumpLocked(android.util.Printer, java.lang.String)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        android.util.Printer r1;
        java.lang.String r2, $r7, $r12, $r14, $r19, $r23, $r25;
        java.lang.StringBuilder $r3, $r8, $r15, $r20;
        int $i0;
        int[] $r11;
        boolean $z0;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCurrentUserId=");

        $i0 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCurrentProfileIds=");

        $r11 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int[] mCurrentProfileIds>;

        $r12 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r11);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCopyOnWrite=");

        $z0 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean mCopyOnWrite>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r19);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mEnabledInputMethodsStrCache=");

        $r23 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String mEnabledInputMethodsStrCache>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r25);

        return;
    }

    public int getCurrentUserId()
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int $i0;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $i0 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        return $i0;
    }

    java.util.ArrayList getEnabledInputMethodListLocked()
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.util.List $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $r1 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodsAndSubtypeListLocked()>();

        $r2 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList createEnabledInputMethodListLocked(java.util.List)>($r1);

        return $r2;
    }

    java.util.List getEnabledInputMethodSubtypeListLocked(android.content.Context, android.view.inputmethod.InputMethodInfo, boolean)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        android.content.Context r1;
        android.view.inputmethod.InputMethodInfo r2;
        boolean z0, $z1;
        java.util.List r3, $r6, r7;
        android.content.res.Resources $r4;
        java.lang.Object r5;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.inputmethod.InputMethodInfo;

        z0 := @parameter2: boolean;

        r3 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo)>(r2);

        r5 = r3;

        if z0 == 0 goto label1;

        r5 = r3;

        $z1 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r5 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.util.ArrayList getImplicitlyApplicableSubtypesLocked(android.content.res.Resources,android.view.inputmethod.InputMethodInfo)>($r4, r2);

     label1:
        r7 = (java.util.List) r5;

        $r6 = staticinvoke <android.view.inputmethod.InputMethodSubtype: java.util.List sort(android.content.Context,int,android.view.inputmethod.InputMethodInfo,java.util.List)>(r1, 0, r2, r7);

        return $r6;
    }

    java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        android.util.Pair r2;
        int i0, $i1, i2;
        android.view.inputmethod.InputMethodSubtype r3;
        java.util.ArrayList $r4, $r12;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r5, $r6, $r8, $r11, $r13;
        android.util.ArrayMap $r7;
        java.lang.String $r9, $r10, $r14, r20;
        android.view.inputmethod.InputMethodInfo r15, r18;
        java.util.List r16;
        java.util.Iterator r17, r19;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r15 := @parameter0: android.view.inputmethod.InputMethodInfo;

        r16 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodsAndSubtypeListLocked()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        if r15 == null goto label8;

        r17 = interfaceinvoke r16.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.util.Pair) $r5;

        $r7 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArrayMap mMethodMap>;

        $r6 = r2.<android.util.Pair: java.lang.Object first>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        r18 = (android.view.inputmethod.InputMethodInfo) $r8;

        if r18 == null goto label7;

        $r9 = virtualinvoke r18.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $r10 = virtualinvoke r15.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label7;

        i0 = virtualinvoke r18.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        i2 = 0;

     label2:
        if i2 >= i0 goto label6;

        r3 = virtualinvoke r18.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i2);

        $r11 = r2.<android.util.Pair: java.lang.Object second>;

        $r12 = (java.util.ArrayList) $r11;

        r19 = virtualinvoke $r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r13 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r13;

        $i1 = virtualinvoke r3.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r20);

        if $z3 == 0 goto label4;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label4:
        goto label3;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        goto label8;

     label7:
        goto label1;

     label8:
        return $r4;
    }

    java.util.List getEnabledInputMethodsAndSubtypeListLocked()
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String $r1;
        android.text.TextUtils$SimpleStringSplitter $r2, $r3;
        java.util.List $r4;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $r1 = virtualinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getEnabledInputMethodsStr()>();

        $r3 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter>;

        $r2 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        $r4 = staticinvoke <com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List buildInputMethodsAndSubtypeList(java.lang.String,android.text.TextUtils$SimpleStringSplitter,android.text.TextUtils$SimpleStringSplitter)>($r1, $r3, $r2);

        return $r4;
    }

    java.lang.String getEnabledInputMethodsStr()
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getString(java.lang.String,java.lang.String)>("enabled_input_methods", "");

        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String mEnabledInputMethodsStrCache> = r1;

        return r1;
    }

    android.util.Pair getLastInputMethodAndSubtypeLocked()
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        android.util.Pair $r1;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $r1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.Pair getLastSubtypeForInputMethodLockedInternal(java.lang.String)>(null);

        return $r1;
    }

    java.lang.String getLastSubtypeForInputMethodLocked(java.lang.String)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.Object $r1;
        java.lang.String $r2, r3;
        android.util.Pair r4;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r3 := @parameter0: java.lang.String;

        r4 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.Pair getLastSubtypeForInputMethodLockedInternal(java.lang.String)>(r3);

        if r4 == null goto label1;

        $r1 = r4.<android.util.Pair: java.lang.Object second>;

        $r2 = (java.lang.String) $r1;

        return $r2;

     label1:
        return null;
    }

    java.lang.String getSelectedInputMethod()
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $r1 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getString(java.lang.String,java.lang.String)>("default_input_method", null);

        return $r1;
    }

    int getSelectedInputMethodSubtypeId(java.lang.String)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        java.lang.String r3;
        android.view.inputmethod.InputMethodInfo r4;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArrayMap mMethodMap>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (android.view.inputmethod.InputMethodInfo) $r2;

        if r4 != null goto label1;

        return -1;

     label1:
        $i0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getSelectedInputMethodSubtypeHashCode()>();

        $i1 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>(r4, $i0);

        return $i1;
    }

    public boolean isCurrentProfile(int)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int i0, $i1, $i2, $i3, i4;
        int[] $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        $i1 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        if i0 != $i1 goto label03;

        exitmonitor r0;

     label02:
        return 1;

     label03:
        i4 = 0;

     label04:
        $r2 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int[] mCurrentProfileIds>;

        $i2 = lengthof $r2;

        if i4 >= $i2 goto label07;

        $r3 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int[] mCurrentProfileIds>;

        $i3 = $r3[i4];

        if i0 != $i3 goto label06;

        exitmonitor r0;

     label05:
        return 1;

     label06:
        i4 = i4 + 1;

        goto label04;

     label07:
        exitmonitor r0;

     label08:
        return 0;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    boolean isShowImeWithHardKeyboardEnabled()
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        boolean $z0;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $z0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean getBoolean(java.lang.String,boolean)>("show_ime_with_hard_keyboard", 0);

        return $z0;
    }

    boolean isSubtypeSelected()
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        $i0 = specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int getSelectedInputMethodSubtypeHashCode()>();

        if $i0 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void putEnabledInputMethodsStr(java.lang.String)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        boolean $z0;
        java.lang.String r1;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putString(java.lang.String,java.lang.String)>("enabled_input_methods", null);

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putString(java.lang.String,java.lang.String)>("enabled_input_methods", r1);

     label2:
        if r1 == null goto label3;

        goto label4;

     label3:
        r1 = "";

     label4:
        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String mEnabledInputMethodsStrCache> = r1;

        return;
    }

    void putSelectedInputMethod(java.lang.String)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putString(java.lang.String,java.lang.String)>("default_input_method", r1);

        return;
    }

    void putSelectedSubtype(int)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int i0;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putInt(java.lang.String,int)>("selected_input_method_subtype", i0);

        return;
    }

    void saveCurrentInputMethodAndSubtypeToHistory(java.lang.String, android.view.inputmethod.InputMethodSubtype)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1, r3;
        android.view.inputmethod.InputMethodSubtype r2;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype;

        r3 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.lang.String access$300()>();

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

     label1:
        $z0 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean canAddToLastInputMethod(android.view.inputmethod.InputMethodSubtype)>(r2);

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void addSubtypeToHistory(java.lang.String,java.lang.String)>(r1, r3);

     label2:
        return;
    }

    public void setCurrentProfileIds(int[])
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.Throwable $r1;
        int[] r2;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        r2 := @parameter0: int[];

        entermonitor r0;

     label1:
        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int[] mCurrentProfileIds> = r2;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void setShowImeWithHardKeyboard(boolean)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        boolean z0;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: void putBoolean(java.lang.String,boolean)>("show_ime_with_hard_keyboard", z0);

        return;
    }

    void switchCurrentUser(int, boolean)
    {
        com.android.server.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int i0, $i1;
        boolean z0, $z1;
        android.util.ArrayMap $r1;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils$InputMethodSettings;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        if $i1 != i0 goto label1;

        $z1 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean mCopyOnWrite>;

        if $z1 == z0 goto label2;

     label1:
        $r1 = r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: android.util.ArrayMap mCopyOnWriteDataStore>;

        virtualinvoke $r1.<android.util.ArrayMap: void clear()>();

        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String mEnabledInputMethodsStrCache> = "";

     label2:
        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId> = i0;

        r0.<com.android.server.inputmethod.InputMethodUtils$InputMethodSettings: boolean mCopyOnWrite> = z0;

        return;
    }
}
