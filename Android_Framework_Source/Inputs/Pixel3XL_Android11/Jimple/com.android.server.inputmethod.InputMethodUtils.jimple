final class com.android.server.inputmethod.InputMethodUtils extends java.lang.Object
{
    public static final boolean DEBUG;
    private static final java.util.Locale ENGLISH_LOCALE;
    private static final char INPUT_METHOD_SEPARATOR;
    private static final char INPUT_METHOD_SUBTYPE_SEPARATOR;
    static final int NOT_A_SUBTYPE_ID;
    private static final java.lang.String NOT_A_SUBTYPE_ID_STR;
    private static final java.util.Locale[] SEARCH_ORDER_OF_FALLBACK_LOCALES;
    private static final java.lang.String SUBTYPE_MODE_ANY;
    static final java.lang.String SUBTYPE_MODE_KEYBOARD;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE;
    private static final java.lang.Object sCacheLock;
    private static android.view.inputmethod.InputMethodInfo sCachedInputMethodInfo;
    private static java.util.ArrayList sCachedResult;
    private static android.os.LocaleList sCachedSystemLocales;
    private static final com.android.server.inputmethod.LocaleUtils$LocaleExtractor sSubtypeToLocale;

    static void <clinit>()
    {
        java.util.Locale $r0, $r3, $r4, $r5;
        java.lang.String $r1;
        java.util.Locale[] $r2;
        java.lang.Object $r6;
        com.android.server.inputmethod.InputMethodUtils$1 $r7;

        <com.android.server.inputmethod.InputMethodUtils: java.lang.String TAG_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE> = "EnabledWhenDefaultIsNotAsciiCapable";

        <com.android.server.inputmethod.InputMethodUtils: java.lang.String TAG> = "InputMethodUtils";

        <com.android.server.inputmethod.InputMethodUtils: java.lang.String SUBTYPE_MODE_KEYBOARD> = "keyboard";

        <com.android.server.inputmethod.InputMethodUtils: int NOT_A_SUBTYPE_ID> = -1;

        <com.android.server.inputmethod.InputMethodUtils: char INPUT_METHOD_SUBTYPE_SEPARATOR> = 59;

        <com.android.server.inputmethod.InputMethodUtils: char INPUT_METHOD_SEPARATOR> = 58;

        <com.android.server.inputmethod.InputMethodUtils: boolean DEBUG> = 0;

        <com.android.server.inputmethod.InputMethodUtils: java.lang.String SUBTYPE_MODE_ANY> = null;

        $r0 = new java.util.Locale;

        specialinvoke $r0.<java.util.Locale: void <init>(java.lang.String)>("en");

        <com.android.server.inputmethod.InputMethodUtils: java.util.Locale ENGLISH_LOCALE> = $r0;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(-1);

        <com.android.server.inputmethod.InputMethodUtils: java.lang.String NOT_A_SUBTYPE_ID_STR> = $r1;

        $r2 = newarray (java.util.Locale)[3];

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2[0] = $r3;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r2[1] = $r4;

        $r5 = <java.util.Locale: java.util.Locale UK>;

        $r2[2] = $r5;

        <com.android.server.inputmethod.InputMethodUtils: java.util.Locale[] SEARCH_ORDER_OF_FALLBACK_LOCALES> = $r2;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        <com.android.server.inputmethod.InputMethodUtils: java.lang.Object sCacheLock> = $r6;

        $r7 = new com.android.server.inputmethod.InputMethodUtils$1;

        specialinvoke $r7.<com.android.server.inputmethod.InputMethodUtils$1: void <init>()>();

        <com.android.server.inputmethod.InputMethodUtils: com.android.server.inputmethod.LocaleUtils$LocaleExtractor sSubtypeToLocale> = $r7;

        return;
    }

    private void <init>()
    {
        com.android.server.inputmethod.InputMethodUtils r0;

        r0 := @this: com.android.server.inputmethod.InputMethodUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean access$000(android.view.inputmethod.InputMethodInfo, android.content.Context, boolean, java.util.Locale, boolean, java.lang.String)
    {
        android.view.inputmethod.InputMethodInfo r0;
        android.content.Context r1;
        boolean z0, z1, $z2;
        java.util.Locale r2;
        java.lang.String r3;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        r1 := @parameter1: android.content.Context;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.util.Locale;

        z1 := @parameter4: boolean;

        r3 := @parameter5: java.lang.String;

        $z2 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean isSystemImeThatHasSubtypeOf(android.view.inputmethod.InputMethodInfo,android.content.Context,boolean,java.util.Locale,boolean,java.lang.String)>(r0, r1, z0, r2, z1, r3);

        return $z2;
    }

    static boolean access$100(android.view.inputmethod.InputMethodInfo, android.content.Context, boolean)
    {
        android.view.inputmethod.InputMethodInfo r0;
        android.content.Context r1;
        boolean z0, $z1;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        r1 := @parameter1: android.content.Context;

        z0 := @parameter2: boolean;

        $z1 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean isSystemAuxilialyImeThatHasAutomaticSubtype(android.view.inputmethod.InputMethodInfo,android.content.Context,boolean)>(r0, r1, z0);

        return $z1;
    }

    static java.lang.String access$300()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.inputmethod.InputMethodUtils: java.lang.String NOT_A_SUBTYPE_ID_STR>;

        return $r0;
    }

    static boolean canAddToLastInputMethod(android.view.inputmethod.InputMethodSubtype)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        boolean $z0, $z1;

        r0 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        if r0 != null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>();

        $z1 = 1 ^ $z0;

        return $z1;
    }

    static boolean checkIfPackageBelongsToUid(android.app.AppOpsManager, int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        java.lang.Throwable $r1;
        android.app.AppOpsManager r2;

        r2 := @parameter0: android.app.AppOpsManager;

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

     label1:
        virtualinvoke r2.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>(i0, r0);

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    static boolean containsSubtypeOf(android.view.inputmethod.InputMethodInfo, java.util.Locale, boolean, java.lang.String)
    {
        android.view.inputmethod.InputMethodInfo r0;
        java.util.Locale r1, r4, $r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String r2, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        int i0, i1;
        android.view.inputmethod.InputMethodSubtype r3;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        r1 := @parameter1: java.util.Locale;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label8;

        r3 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i1);

        if z0 == 0 goto label4;

        r4 = virtualinvoke r3.<android.view.inputmethod.InputMethodSubtype: java.util.Locale getLocaleObject()>();

        if r4 == null goto label6;

        $r12 = virtualinvoke r4.<java.util.Locale: java.lang.String getLanguage()>();

        $r13 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r12, $r13);

        if $z4 == 0 goto label6;

        $r14 = virtualinvoke r4.<java.util.Locale: java.lang.String getCountry()>();

        $r15 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        $z5 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r14, $r15);

        if $z5 != 0 goto label3;

        goto label6;

     label3:
        goto label5;

     label4:
        $r5 = new java.util.Locale;

        $r6 = virtualinvoke r3.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $r7 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.lang.String getLanguageFromLocaleString(java.lang.String)>($r6);

        specialinvoke $r5.<java.util.Locale: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r5.<java.util.Locale: java.lang.String getLanguage()>();

        $r9 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r8, $r9);

        if $z1 != 0 goto label5;

        goto label6;

     label5:
        $r10 = <com.android.server.inputmethod.InputMethodUtils: java.lang.String SUBTYPE_MODE_ANY>;

        if r2 == $r10 goto label7;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z2 != 0 goto label7;

        $r11 = virtualinvoke r3.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $z3 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r11);

        if $z3 == 0 goto label6;

        goto label7;

     label6:
        i1 = i1 + 1;

        goto label2;

     label7:
        return 1;

     label8:
        return 0;
    }

    static android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources, java.util.List, java.lang.String, java.lang.String, boolean)
    {
        java.util.List r0;
        java.lang.String r1, r2, r3, r4, $r8, r12, r13;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6;
        int i0, $i1, i2;
        java.lang.Object $r5, $r6;
        android.view.inputmethod.InputMethodSubtype $r7, r14, r15, r16, r17, r18, r19;
        android.content.res.Configuration $r9;
        java.util.Locale $r10;
        android.content.res.Resources r11;

        r11 := @parameter0: android.content.res.Resources;

        r0 := @parameter1: java.util.List;

        r1 := @parameter2: java.lang.String;

        r12 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        if r0 == null goto label10;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i1 != 0 goto label01;

        goto label10;

     label01:
        r13 = r12;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z1 == 0 goto label02;

        $r9 = virtualinvoke r11.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r10 = $r9.<android.content.res.Configuration: java.util.Locale locale>;

        r13 = virtualinvoke $r10.<java.util.Locale: java.lang.String toString()>();

     label02:
        r2 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.lang.String getLanguageFromLocaleString(java.lang.String)>(r13);

        z5 = 0;

        r14 = null;

        r15 = null;

        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i2 = 0;

     label03:
        r16 = r14;

        r17 = r15;

        if i2 >= i0 goto label08;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r16 = (android.view.inputmethod.InputMethodSubtype) $r5;

        r3 = virtualinvoke r16.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        r4 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.lang.String getLanguageFromLocaleString(java.lang.String)>(r3);

        if r1 == null goto label04;

        z6 = z5;

        r18 = r14;

        r19 = r15;

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r7 = (android.view.inputmethod.InputMethodSubtype) $r6;

        $r8 = virtualinvoke $r7.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z4 == 0 goto label07;

     label04:
        r17 = r15;

        if r15 != null goto label05;

        r17 = r16;

     label05:
        $z2 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label06;

        goto label08;

     label06:
        z6 = z5;

        r18 = r14;

        r19 = r17;

        if z5 != 0 goto label07;

        z6 = z5;

        r18 = r14;

        r19 = r17;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label07;

        z6 = 1;

        r19 = r17;

        r18 = r16;

     label07:
        i2 = i2 + 1;

        z5 = z6;

        r14 = r18;

        r15 = r19;

        goto label03;

     label08:
        if r16 != null goto label09;

        if z0 == 0 goto label09;

        return r17;

     label09:
        return r16;

     label10:
        return null;
    }

    static java.lang.String getApiCallStack()
    {
        java.lang.StackTraceElement[] r0;
        java.lang.RuntimeException $r1, r4;
        int $i0, $i1, i2;
        java.lang.StackTraceElement $r2;
        boolean $z0;
        java.lang.String r3, r6;

        r3 = "";

     label1:
        r4 = new java.lang.RuntimeException;

        specialinvoke r4.<java.lang.RuntimeException: void <init>()>();

        throw r4;

     label2:
        $r1 := @caughtexception;

        r0 = virtualinvoke $r1.<java.lang.RuntimeException: java.lang.StackTraceElement[] getStackTrace()>();

        i2 = 1;

     label3:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label6;

        $r2 = r0[i2];

        r6 = virtualinvoke $r2.<java.lang.StackTraceElement: java.lang.String toString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label4;

        goto label5;

     label4:
        $i1 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>("Transact(");

        if $i1 >= 0 goto label6;

     label5:
        r3 = r6;

        i2 = i2 + 1;

        goto label3;

     label6:
        return r3;

        catch java.lang.RuntimeException from label1 to label2 with label2;
    }

    static java.util.ArrayList getDefaultEnabledImes(android.content.Context, java.util.ArrayList)
    {
        android.content.Context r0;
        java.util.ArrayList r1, $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.ArrayList;

        $r2 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.util.ArrayList getDefaultEnabledImes(android.content.Context,java.util.ArrayList,boolean)>(r0, r1, 0);

        return $r2;
    }

    static java.util.ArrayList getDefaultEnabledImes(android.content.Context, java.util.ArrayList, boolean)
    {
        android.content.Context r0;
        java.util.ArrayList r1, $r3;
        boolean z0;
        java.util.Locale r2, r7;
        java.lang.String $r4;
        com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder $r5, r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.ArrayList;

        z0 := @parameter2: boolean;

        r7 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.util.Locale getFallbackLocaleForDefaultIme(java.util.ArrayList,android.content.Context)>(r1, r0);

        r2 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.util.Locale getSystemLocaleFromContext(android.content.Context)>(r0);

        r8 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder getMinimumKeyboardSetWithSystemLocale(java.util.ArrayList,android.content.Context,java.util.Locale,java.util.Locale)>(r1, r0, r2, r7);

        if z0 != 0 goto label1;

        $r4 = <com.android.server.inputmethod.InputMethodUtils: java.lang.String SUBTYPE_MODE_ANY>;

        $r5 = virtualinvoke r8.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder fillImes(java.util.ArrayList,android.content.Context,boolean,java.util.Locale,boolean,java.lang.String)>(r1, r0, 1, r2, 1, $r4);

        virtualinvoke $r5.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder fillAuxiliaryImes(java.util.ArrayList,android.content.Context)>(r1, r0);

     label1:
        $r3 = virtualinvoke r8.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: java.util.ArrayList build()>();

        return $r3;
    }

    private static java.util.Locale getFallbackLocaleForDefaultIme(java.util.ArrayList, android.content.Context)
    {
        java.util.ArrayList r0;
        java.lang.StringBuilder $r1;
        java.lang.Object[] $r3;
        java.lang.String $r4, $r6;
        int $i2, $i3, i4, i5, i6, i7, i8, i9;
        java.lang.Object $r7, $r9;
        android.view.inputmethod.InputMethodInfo $r8, $r10;
        boolean $z0, $z1;
        android.content.Context r11;
        java.util.Locale[] r12, r14;
        java.util.Locale r13, r15;

        r0 := @parameter0: java.util.ArrayList;

        r11 := @parameter1: android.content.Context;

        r12 = <com.android.server.inputmethod.InputMethodUtils: java.util.Locale[] SEARCH_ORDER_OF_FALLBACK_LOCALES>;

        i4 = lengthof r12;

        i5 = 0;

     label01:
        if i5 >= i4 goto label05;

        r13 = r12[i5];

        i6 = 0;

     label02:
        $i3 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i6 >= $i3 goto label04;

        $r9 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r10 = (android.view.inputmethod.InputMethodInfo) $r9;

        $z1 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean isSystemImeThatHasSubtypeOf(android.view.inputmethod.InputMethodInfo,android.content.Context,boolean,java.util.Locale,boolean,java.lang.String)>($r10, r11, 1, r13, 1, "keyboard");

        if $z1 == 0 goto label03;

        return r13;

     label03:
        i6 = i6 + 1;

        goto label02;

     label04:
        i5 = i5 + 1;

        goto label01;

     label05:
        r14 = <com.android.server.inputmethod.InputMethodUtils: java.util.Locale[] SEARCH_ORDER_OF_FALLBACK_LOCALES>;

        i7 = lengthof r14;

        i8 = 0;

     label06:
        if i8 >= i7 goto label10;

        r15 = r14[i8];

        i9 = 0;

     label07:
        $i2 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i9 >= $i2 goto label09;

        $r7 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r8 = (android.view.inputmethod.InputMethodInfo) $r7;

        $z0 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean isSystemImeThatHasSubtypeOf(android.view.inputmethod.InputMethodInfo,android.content.Context,boolean,java.util.Locale,boolean,java.lang.String)>($r8, r11, 0, r15, 1, "keyboard");

        if $z0 == 0 goto label08;

        return r15;

     label08:
        i9 = i9 + 1;

        goto label07;

     label09:
        i8 = i8 + 1;

        goto label06;

     label10:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found no fallback locale. imis=");

        $r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object[] toArray()>();

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodUtils", $r6);

        return null;
    }

    static java.lang.CharSequence getImeAndSubtypeDisplayName(android.content.Context, android.view.inputmethod.InputMethodInfo, android.view.inputmethod.InputMethodSubtype)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.CharSequence r1, r12, r15;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3, r13;
        android.content.pm.ServiceInfo $r4;
        android.content.pm.ApplicationInfo $r5;
        boolean $z0;
        java.lang.Object[] $r9;
        android.content.Context r10;
        android.view.inputmethod.InputMethodInfo r11;
        java.lang.StringBuilder r16;
        java.lang.CharSequence[] r17;

        r10 := @parameter0: android.content.Context;

        r11 := @parameter1: android.view.inputmethod.InputMethodInfo;

        r0 := @parameter2: android.view.inputmethod.InputMethodSubtype;

        $r2 = virtualinvoke r10.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke r11.<android.view.inputmethod.InputMethodInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r2);

        if r0 == null goto label3;

        $r3 = virtualinvoke r11.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        $r4 = virtualinvoke r11.<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r5 = $r4.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r12 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>(r10, $r3, $r5);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        r13 = "";

        goto label2;

     label1:
        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        r13 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r9 = newarray (java.lang.CharSequence)[2];

        $r9[0] = r12;

        $r9[1] = r13;

        r17 = (java.lang.CharSequence[]) $r9;

        r15 = staticinvoke <android.text.TextUtils: java.lang.CharSequence concat(java.lang.CharSequence[])>(r17);

        goto label4;

     label3:
        r15 = r1;

     label4:
        return r15;
    }

    static java.util.ArrayList getImplicitlyApplicableSubtypesLocked(android.content.res.Resources, android.view.inputmethod.InputMethodInfo)
    {
        android.os.LocaleList r0, $r2;
        android.content.res.Configuration $r1;
        boolean $z0;
        android.view.inputmethod.InputMethodInfo $r3, r8;
        java.util.ArrayList $r4, r10, r11, r13;
        java.lang.Throwable $r5, $r6;
        android.content.res.Resources r7;
        java.lang.Object r9, r12;

        r7 := @parameter0: android.content.res.Resources;

        r8 := @parameter1: android.view.inputmethod.InputMethodInfo;

        $r1 = virtualinvoke r7.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r0 = virtualinvoke $r1.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        r9 = <com.android.server.inputmethod.InputMethodUtils: java.lang.Object sCacheLock>;

        entermonitor r9;

     label01:
        $r2 = <com.android.server.inputmethod.InputMethodUtils: android.os.LocaleList sCachedSystemLocales>;

        $z0 = virtualinvoke r0.<android.os.LocaleList: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label03;

        $r3 = <com.android.server.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodInfo sCachedInputMethodInfo>;

        if $r3 != r8 goto label03;

        r10 = new java.util.ArrayList;

        $r4 = <com.android.server.inputmethod.InputMethodUtils: java.util.ArrayList sCachedResult>;

        specialinvoke r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        exitmonitor r9;

     label02:
        return r10;

     label03:
        exitmonitor r9;

     label04:
        r11 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.util.ArrayList getImplicitlyApplicableSubtypesLockedImpl(android.content.res.Resources,android.view.inputmethod.InputMethodInfo)>(r7, r8);

        r12 = <com.android.server.inputmethod.InputMethodUtils: java.lang.Object sCacheLock>;

        entermonitor r12;

     label05:
        <com.android.server.inputmethod.InputMethodUtils: android.os.LocaleList sCachedSystemLocales> = r0;

        <com.android.server.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodInfo sCachedInputMethodInfo> = r8;

        r13 = new java.util.ArrayList;

        specialinvoke r13.<java.util.ArrayList: void <init>(java.util.Collection)>(r11);

        <com.android.server.inputmethod.InputMethodUtils: java.util.ArrayList sCachedResult> = r13;

        exitmonitor r12;

     label06:
        return r11;

     label07:
        $r5 := @caughtexception;

     label08:
        exitmonitor r12;

     label09:
        throw $r5;

     label10:
        $r6 := @caughtexception;

     label11:
        exitmonitor r9;

     label12:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private static java.util.ArrayList getImplicitlyApplicableSubtypesLockedImpl(android.content.res.Resources, android.view.inputmethod.InputMethodInfo)
    {
        java.util.ArrayList r0, $r6, $r7, $r11, $r20, $r21, $r23, $r27;
        java.lang.String r1, $r13, $r14, $r18, r33, r37;
        int i0, $i1, i2, i3, i4, i5, i6, i7;
        android.content.res.Configuration $r2;
        java.util.Locale $r3;
        boolean $z1, $z2, $z4, $z5, $z7, $z8, $z9, $z12, $z13, z14, $z15, $z16;
        android.util.ArrayMap $r4, $r5;
        com.android.server.inputmethod.LocaleUtils$LocaleExtractor $r8, $r10;
        java.lang.Object $r9, $r12, $r15, $r17, $r19, $r25;
        android.view.inputmethod.InputMethodSubtype $r16, r32, r36, r39, r40;
        java.util.Collection $r24, $r41;
        android.content.res.Resources r28;
        android.view.inputmethod.InputMethodInfo r29;
        android.os.LocaleList r30;
        java.util.Iterator r42;

        r28 := @parameter0: android.content.res.Resources;

        r29 := @parameter1: android.view.inputmethod.InputMethodInfo;

        r0 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: java.util.ArrayList getSubtypes(android.view.inputmethod.InputMethodInfo)>(r29);

        $r2 = virtualinvoke r28.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r30 = virtualinvoke $r2.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        $r3 = virtualinvoke r30.<android.os.LocaleList: java.util.Locale get(int)>(0);

        r1 = virtualinvoke $r3.<java.util.Locale: java.lang.String toString()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label01;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        return $r27;

     label01:
        i2 = interfaceinvoke r0.<java.util.List: int size()>();

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        i3 = 0;

     label02:
        if i3 >= i2 goto label04;

        $r25 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        r32 = (android.view.inputmethod.InputMethodSubtype) $r25;

        $z12 = virtualinvoke r32.<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>();

        if $z12 == 0 goto label03;

        r33 = virtualinvoke r32.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $z13 = virtualinvoke $r4.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r33);

        if $z13 != 0 goto label03;

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r33, r32);

     label03:
        i3 = i3 + 1;

        goto label02;

     label04:
        $i1 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        if $i1 <= 0 goto label05;

        $r23 = new java.util.ArrayList;

        $r24 = virtualinvoke $r4.<android.util.ArrayMap: java.util.Collection values()>();

        specialinvoke $r23.<java.util.ArrayList: void <init>(java.util.Collection)>($r24);

        return $r23;

     label05:
        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        i4 = 0;

     label06:
        if i4 >= i2 goto label10;

        $r17 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i4);

        r36 = (android.view.inputmethod.InputMethodSubtype) $r17;

        r37 = virtualinvoke r36.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $r18 = "keyboard";

        $z8 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r37);

        if $z8 == 0 goto label07;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r36);

        goto label09;

     label07:
        $z9 = virtualinvoke $r5.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r37);

        if $z9 != 0 goto label08;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r37, $r21);

     label08:
        $r19 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r37);

        $r20 = (java.util.ArrayList) $r19;

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>(r36);

     label09:
        i4 = i4 + 1;

        goto label06;

     label10:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = <com.android.server.inputmethod.InputMethodUtils: com.android.server.inputmethod.LocaleUtils$LocaleExtractor sSubtypeToLocale>;

        staticinvoke <com.android.server.inputmethod.LocaleUtils: void filterByLanguage(java.util.List,com.android.server.inputmethod.LocaleUtils$LocaleExtractor,android.os.LocaleList,java.util.ArrayList)>($r6, $r8, r30, $r7);

        $z2 = virtualinvoke $r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label16;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i5 = 0;

     label11:
        z14 = 0;

        if i5 >= i0 goto label13;

        $r15 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r16 = (android.view.inputmethod.InputMethodSubtype) $r15;

        $z7 = virtualinvoke $r16.<android.view.inputmethod.InputMethodSubtype: boolean isAsciiCapable()>();

        if $z7 == 0 goto label12;

        z14 = 1;

        goto label13;

     label12:
        i5 = i5 + 1;

        goto label11;

     label13:
        if z14 != 0 goto label16;

        i6 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i7 = 0;

     label14:
        if i7 >= i6 goto label16;

        $r12 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r39 = (android.view.inputmethod.InputMethodSubtype) $r12;

        $r13 = "keyboard";

        $r14 = virtualinvoke r39.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z4 == 0 goto label15;

        $z5 = virtualinvoke r39.<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>("EnabledWhenDefaultIsNotAsciiCapable");

        if $z5 == 0 goto label15;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r39);

     label15:
        i7 = i7 + 1;

        goto label14;

     label16:
        $z15 = virtualinvoke $r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z15 == 0 goto label17;

        r40 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources,java.util.List,java.lang.String,java.lang.String,boolean)>(r28, r0, "keyboard", r1, 1);

        if r40 == null goto label17;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r40);

        goto label17;

     label17:
        $r41 = virtualinvoke $r5.<android.util.ArrayMap: java.util.Collection values()>();

        r42 = interfaceinvoke $r41.<java.util.Collection: java.util.Iterator iterator()>();

     label18:
        $z16 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label19;

        $r9 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.util.ArrayList) $r9;

        $r10 = <com.android.server.inputmethod.InputMethodUtils: com.android.server.inputmethod.LocaleUtils$LocaleExtractor sSubtypeToLocale>;

        staticinvoke <com.android.server.inputmethod.LocaleUtils: void filterByLanguage(java.util.List,com.android.server.inputmethod.LocaleUtils$LocaleExtractor,android.os.LocaleList,java.util.ArrayList)>($r11, $r10, r30, $r7);

        goto label18;

     label19:
        return $r7;
    }

    private static java.lang.String getLanguageFromLocaleString(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(95);

        if i0 >= 0 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r1;
    }

    private static com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder getMinimumKeyboardSetWithSystemLocale(java.util.ArrayList, android.content.Context, java.util.Locale, java.util.Locale)
    {
        java.util.ArrayList r0;
        java.util.Locale r1, r2;
        com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r11;
        java.lang.Object[] $r13;
        java.lang.String $r14, $r20;
        android.content.Context r21;

        r0 := @parameter0: java.util.ArrayList;

        r21 := @parameter1: android.content.Context;

        r1 := @parameter2: java.util.Locale;

        r2 := @parameter3: java.util.Locale;

        $r4 = new com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder;

        specialinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: void <init>(com.android.server.inputmethod.InputMethodUtils$1)>(null);

        virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder fillImes(java.util.ArrayList,android.content.Context,boolean,java.util.Locale,boolean,java.lang.String)>(r0, r21, 1, r1, 1, "keyboard");

        $z0 = virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return $r4;

     label1:
        virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder fillImes(java.util.ArrayList,android.content.Context,boolean,java.util.Locale,boolean,java.lang.String)>(r0, r21, 1, r1, 0, "keyboard");

        $z1 = virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        return $r4;

     label2:
        virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder fillImes(java.util.ArrayList,android.content.Context,boolean,java.util.Locale,boolean,java.lang.String)>(r0, r21, 1, r2, 1, "keyboard");

        $z2 = virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: boolean isEmpty()>();

        if $z2 != 0 goto label3;

        return $r4;

     label3:
        virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder fillImes(java.util.ArrayList,android.content.Context,boolean,java.util.Locale,boolean,java.lang.String)>(r0, r21, 1, r2, 0, "keyboard");

        $z3 = virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: boolean isEmpty()>();

        if $z3 != 0 goto label4;

        return $r4;

     label4:
        virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder fillImes(java.util.ArrayList,android.content.Context,boolean,java.util.Locale,boolean,java.lang.String)>(r0, r21, 0, r2, 1, "keyboard");

        $z4 = virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: boolean isEmpty()>();

        if $z4 != 0 goto label5;

        return $r4;

     label5:
        virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder fillImes(java.util.ArrayList,android.content.Context,boolean,java.util.Locale,boolean,java.lang.String)>(r0, r21, 0, r2, 0, "keyboard");

        $z5 = virtualinvoke $r4.<com.android.server.inputmethod.InputMethodUtils$InputMethodListBuilder: boolean isEmpty()>();

        if $z5 != 0 goto label6;

        return $r4;

     label6:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No software keyboard is found. imis=");

        $r13 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object[] toArray()>();

        $r14 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" systemLocale=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fallbackLocale=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r20 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodUtils", $r20);

        return $r4;
    }

    static android.view.inputmethod.InputMethodInfo getMostApplicableDefaultIME(java.util.List)
    {
        java.util.List r0;
        android.view.inputmethod.InputMethodInfo r1, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, i1, i2, i3;
        java.lang.Object $r2, $r4;
        java.util.Locale $r5;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label7;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label7;

     label1:
        i1 = interfaceinvoke r0.<java.util.List: int size()>();

        i2 = -1;

     label2:
        if i1 <= 0 goto label6;

        i1 = i1 + -1;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (android.view.inputmethod.InputMethodInfo) $r4;

        $z1 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: boolean isAuxiliaryIme()>();

        if $z1 == 0 goto label3;

        goto label2;

     label3:
        $z2 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: boolean isSystem()>();

        if $z2 == 0 goto label4;

        $r5 = <com.android.server.inputmethod.InputMethodUtils: java.util.Locale ENGLISH_LOCALE>;

        $z4 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean containsSubtypeOf(android.view.inputmethod.InputMethodInfo,java.util.Locale,boolean,java.lang.String)>(r1, $r5, 0, "keyboard");

        if $z4 == 0 goto label4;

        return r1;

     label4:
        i3 = i2;

        if i2 >= 0 goto label5;

        i3 = i2;

        $z3 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: boolean isSystem()>();

        if $z3 == 0 goto label5;

        i3 = i1;

     label5:
        i2 = i3;

        goto label2;

     label6:
        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(i2, 0);

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (android.view.inputmethod.InputMethodInfo) $r2;

        return $r3;

     label7:
        return null;
    }

    static int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo, int)
    {
        android.view.inputmethod.InputMethodInfo r0;
        int i0, i1, $i2, i3;
        android.view.inputmethod.InputMethodSubtype $r1;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        i0 := @parameter1: int;

        if r0 == null goto label3;

        i1 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        $r1 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i3);

        $i2 = virtualinvoke $r1.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        if i0 != $i2 goto label2;

        return i3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    static java.util.ArrayList getSubtypes(android.view.inputmethod.InputMethodInfo)
    {
        android.view.inputmethod.InputMethodInfo r0;
        int i0, i1;
        java.util.ArrayList $r2;
        android.view.inputmethod.InputMethodSubtype $r3;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i0 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private static java.util.Locale getSystemLocaleFromContext(android.content.Context)
    {
        android.content.res.Resources $r0;
        android.content.res.Configuration $r1;
        android.content.res.Resources$NotFoundException $r2;
        android.content.Context r3;
        java.util.Locale r4;

        r3 := @parameter0: android.content.Context;

     label1:
        $r0 = virtualinvoke r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r4 = $r1.<android.content.res.Configuration: java.util.Locale locale>;

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        return null;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    static boolean isSoftInputModeStateVisibleAllowed(int, int)
    {
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= 28 goto label1;

        return 1;

     label1:
        $i2 = i1 & 1;

        if $i2 != 0 goto label2;

        return 0;

     label2:
        $i3 = i1 & 2;

        if $i3 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    private static boolean isSystemAuxilialyImeThatHasAutomaticSubtype(android.view.inputmethod.InputMethodInfo, android.content.Context, boolean)
    {
        android.view.inputmethod.InputMethodInfo r0;
        android.content.Context r1;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, i1;
        android.view.inputmethod.InputMethodSubtype $r2;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        r1 := @parameter1: android.content.Context;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: boolean isSystem()>();

        if $z1 != 0 goto label1;

        return 0;

     label1:
        if z0 == 0 goto label2;

        $z4 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: boolean isDefault(android.content.Context)>(r1);

        if $z4 != 0 goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: boolean isAuxiliaryIme()>();

        if $z2 != 0 goto label3;

        return 0;

     label3:
        i0 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        i1 = 0;

     label4:
        if i1 >= i0 goto label6;

        $r2 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i1);

        $z3 = virtualinvoke $r2.<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>();

        if $z3 == 0 goto label5;

        return 1;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        return 0;
    }

    private static boolean isSystemImeThatHasSubtypeOf(android.view.inputmethod.InputMethodInfo, android.content.Context, boolean, java.util.Locale, boolean, java.lang.String)
    {
        android.view.inputmethod.InputMethodInfo r0;
        android.content.Context r1;
        boolean z0, z1, $z2, $z3, $z4;
        java.util.Locale r2;
        java.lang.String r3;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        r1 := @parameter1: android.content.Context;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.util.Locale;

        z1 := @parameter4: boolean;

        r3 := @parameter5: java.lang.String;

        $z2 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: boolean isSystem()>();

        if $z2 != 0 goto label1;

        return 0;

     label1:
        if z0 == 0 goto label2;

        $z4 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: boolean isDefault(android.content.Context)>(r1);

        if $z4 != 0 goto label2;

        return 0;

     label2:
        $z3 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean containsSubtypeOf(android.view.inputmethod.InputMethodInfo,java.util.Locale,boolean,java.lang.String)>(r0, r2, z1, r3);

        if $z3 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    static boolean isValidSubtypeId(android.view.inputmethod.InputMethodInfo, int)
    {
        android.view.inputmethod.InputMethodInfo r0;
        int i0, $i1;
        boolean z0;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        i0 := @parameter1: int;

        $i1 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>(r0, i0);

        if $i1 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static int[] resolveUserId(int, int, java.io.PrintWriter)
    {
        int i0, i1;
        java.io.PrintWriter r0;
        android.os.UserManagerInternal r1;
        java.lang.Object $r2;
        boolean $z0;
        int[] $r3, $r4, $r5, $r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: java.io.PrintWriter;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/UserManagerInternal;");

        r1 = (android.os.UserManagerInternal) $r2;

        if i0 != -1 goto label1;

        $r6 = virtualinvoke r1.<android.os.UserManagerInternal: int[] getUserIds()>();

        return $r6;

     label1:
        if i0 != -2 goto label2;

        goto label5;

     label2:
        if i0 >= 0 goto label4;

        if r0 == null goto label3;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Pseudo user ID ");

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" is not supported.");

     label3:
        $r5 = newarray (int)[0];

        return $r5;

     label4:
        $z0 = virtualinvoke r1.<android.os.UserManagerInternal: boolean exists(int)>(i0);

        if $z0 == 0 goto label6;

        i1 = i0;

     label5:
        $r4 = newarray (int)[1];

        $r4[0] = i1;

        return $r4;

     label6:
        if r0 == null goto label7;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("User #");

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" does not exit.");

     label7:
        $r3 = newarray (int)[0];

        return $r3;
    }

    private static void setDisabledUntilUsed(android.content.pm.IPackageManager, java.lang.String, int, java.lang.String)
    {
        java.lang.String r0, $r8, $r17, r19;
        int i0, i1;
        android.os.RemoteException $r2, $r9;
        java.lang.StringBuilder $r3, $r10;
        android.content.pm.IPackageManager r18;

        r18 := @parameter0: android.content.pm.IPackageManager;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r19 := @parameter3: java.lang.String;

     label1:
        i1 = interfaceinvoke r18.<android.content.pm.IPackageManager: int getApplicationEnabledSetting(java.lang.String,int)>(r0, i0);

     label2:
        if i1 == 0 goto label3;

        if i1 != 1 goto label4;

     label3:
        interfaceinvoke r18.<android.content.pm.IPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>(r0, 4, 0, i0, r19);

     label4:
        return;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setApplicationEnabledSetting failed. packageName=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" userId=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callingPackage=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodUtils", $r17, $r9);

        return;

     label6:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getApplicationEnabledSetting failed. packageName=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" userId=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodUtils", $r8, $r2);

        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    static void setNonSelectedSystemImesDisabledUntilUsed(android.content.pm.IPackageManager, java.util.List, int, java.lang.String)
    {
        android.content.pm.IPackageManager r0;
        java.util.List r1;
        int i0, i1, $i2, $i3, $i4, i6, i7, i8;
        java.lang.String r2, r5, $r9, $r12, $r19;
        java.lang.String[] r3;
        android.view.textservice.SpellCheckerInfo r4;
        android.content.res.Resources $r7;
        com.android.server.textservices.TextServicesManagerInternal $r8;
        boolean $z1, $z2, z3, z4;
        java.lang.Object $r10;
        android.view.inputmethod.InputMethodInfo $r11;
        android.os.RemoteException $r13;
        java.lang.StringBuilder $r14;
        android.content.pm.ApplicationInfo r20;

        r0 := @parameter0: android.content.pm.IPackageManager;

        r1 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $r7 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r3 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236014);

        if r3 == null goto label16;

        $i2 = lengthof r3;

        if $i2 != 0 goto label01;

        goto label16;

     label01:
        $r8 = staticinvoke <com.android.server.textservices.TextServicesManagerInternal: com.android.server.textservices.TextServicesManagerInternal get()>();

        r4 = virtualinvoke $r8.<com.android.server.textservices.TextServicesManagerInternal: android.view.textservice.SpellCheckerInfo getCurrentSpellCheckerForUser(int)>(i0);

        i1 = lengthof r3;

        i6 = 0;

     label02:
        if i6 >= i1 goto label15;

        r5 = r3[i6];

        i7 = 0;

     label03:
        z3 = 0;

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        if i7 >= $i3 goto label05;

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        $r11 = (android.view.inputmethod.InputMethodInfo) $r10;

        $r12 = virtualinvoke $r11.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 == 0 goto label04;

        z3 = 1;

        goto label05;

     label04:
        i7 = i7 + 1;

        goto label03;

     label05:
        if z3 == 0 goto label06;

        goto label14;

     label06:
        if r4 == null goto label07;

        $r9 = virtualinvoke r4.<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()>();

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label07;

        goto label14;

     label07:
        r20 = interfaceinvoke r0.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r5, 32768, i0);

     label08:
        if r20 != null goto label09;

        goto label14;

     label09:
        i8 = r20.<android.content.pm.ApplicationInfo: int flags>;

        z4 = 1;

        $i4 = i8 & 1;

        if $i4 == 0 goto label10;

        goto label11;

     label10:
        z4 = 0;

     label11:
        if z4 != 0 goto label12;

        goto label14;

     label12:
        staticinvoke <com.android.server.inputmethod.InputMethodUtils: void setDisabledUntilUsed(android.content.pm.IPackageManager,java.lang.String,int,java.lang.String)>(r0, r5, i0, r2);

        goto label14;

     label13:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getApplicationInfo failed. packageName=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" userId=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodUtils", $r19, $r13);

     label14:
        i6 = i6 + 1;

        goto label02;

     label15:
        return;

     label16:
        return;

        catch android.os.RemoteException from label07 to label08 with label13;
    }
}
