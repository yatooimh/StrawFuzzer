final class com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks extends com.android.internal.view.IInputMethodManager$Stub
{
    private final android.app.AppOpsManager mAppOpsManager;
    private final android.content.Context mContext;
    private final com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap mInputMethodInfoMap;
    private final com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap;
    private final com.android.server.wm.WindowManagerInternal mWindowManagerInternal;

    void <init>(android.content.Context, com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap, com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        android.content.Context r1;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap r2;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap r3;
        java.lang.Object $r4, $r6;
        android.app.AppOpsManager $r5;
        com.android.server.wm.WindowManagerInternal $r7;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap;

        r3 := @parameter2: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap;

        specialinvoke r0.<com.android.internal.view.IInputMethodManager$Stub: void <init>()>();

        r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: android.content.Context mContext> = r1;

        r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap> = r2;

        r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap mInputMethodInfoMap> = r3;

        $r4 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r5 = (android.app.AppOpsManager) $r4;

        r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: android.app.AppOpsManager mAppOpsManager> = $r5;

        $r6 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/WindowManagerInternal;");

        $r7 = (com.android.server.wm.WindowManagerInternal) $r6;

        r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: com.android.server.wm.WindowManagerInternal mWindowManagerInternal> = $r7;

        return;
    }

    private boolean checkFocus(int, int, int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        int i0, i1, i2;
        com.android.server.wm.WindowManagerInternal $r1;
        boolean $z0;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.WindowManagerInternal: boolean isInputMethodClientFocus(int,int,int)>(i0, i1, i2);

        return $z0;
    }

    public void addClient(com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext, int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        int i0, i1, i2, i3;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData r1;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r10;
        java.lang.Throwable $r11;
        com.android.internal.view.IInputMethodClient r12;
        com.android.internal.view.IInputContext r13;
        java.lang.Object r15;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r12 := @parameter0: com.android.internal.view.IInputMethodClient;

        r13 := @parameter1: com.android.internal.view.IInputContext;

        i0 := @parameter2: int;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $r2 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap>;

        r1 = virtualinvoke $r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData get(int)>(i3);

        if r1 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addClient() from unknown userId=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pid=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r10);

        return;

     label1:
        r15 = r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r15;

     label2:
        virtualinvoke r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: void addClientLocked(int,int,com.android.internal.view.IInputMethodClient,int)>(i1, i2, r12, i0);

        exitmonitor r15;

     label3:
        return;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r15;

     label6:
        throw $r11;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;
        android.content.Context $r3;
        boolean $z0;
        com.android.internal.util.IndentingPrintWriter $r4;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap $r5, $r7;
        java.io.PrintWriter r8;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r1 := @parameter0: java.io.FileDescriptor;

        r8 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r3, "MultiClientInputMethodManagerService", r8);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r8.<java.io.PrintWriter: void println(java.lang.String)>("Current Multi Client Input Method Manager state:");

        $r4 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r4.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r8, " ");

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("mUserDataMap=");

        $r5 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap>;

        if $r5 == null goto label2;

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r7 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap>;

        virtualinvoke $r7.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap: void dump(java.io.FileDescriptor,com.android.internal.util.IndentingPrintWriter,java.lang.String[])>(r1, $r4, r2);

     label2:
        return;
    }

    public android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void access$200()>();

        return null;
    }

    public java.util.List getEnabledInputMethodList(int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        int i0, $i1;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap $r1;
        java.util.List $r2;
        android.content.Context $r3;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if $i1 == i0 goto label1;

        $r3 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", null);

     label1:
        $r1 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap mInputMethodInfoMap>;

        $r2 = virtualinvoke $r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap: java.util.List getAsList(int)>(i0);

        return $r2;
    }

    public java.util.List getEnabledInputMethodSubtypeList(java.lang.String, boolean)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        java.lang.String r1;
        boolean z0;
        java.util.List $r2;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void access$200()>();

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;
    }

    public java.util.List getInputMethodList(int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        int i0, $i1;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap $r1;
        java.util.List $r2;
        android.content.Context $r3;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if $i1 == i0 goto label1;

        $r3 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", null);

     label1:
        $r1 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap mInputMethodInfoMap>;

        $r2 = virtualinvoke $r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap: java.util.List getAsList(int)>(i0);

        return $r2;
    }

    public int getInputMethodWindowVisibleHeight()
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void access$200()>();

        return 0;
    }

    public android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void access$200()>();

        return null;
    }

    public boolean hideSoftInput(com.android.internal.view.IInputMethodClient, android.os.IBinder, int, android.os.ResultReceiver)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        int i0, i1, i2, $i3, $i4, i7, i8;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData r1;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap $r2;
        com.android.internal.inputmethod.IMultiClientInputMethodSession $r3;
        java.lang.String $r8, $r16;
        java.lang.StringBuilder $r9, r25;
        android.os.RemoteException $r17;
        java.lang.Throwable $r18;
        com.android.internal.view.IInputMethodClient r19;
        android.os.IBinder r20;
        android.os.ResultReceiver r21;
        java.lang.Object r23;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo r24;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r19 := @parameter0: com.android.internal.view.IInputMethodClient;

        r20 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r21 := @parameter3: android.os.ResultReceiver;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i7 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $r2 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap>;

        r1 = virtualinvoke $r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData get(int)>(i7);

        if r1 != null goto label01;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hideSoftInput() from unknown userId=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pid=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r16);

        return 0;

     label01:
        r23 = r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r23;

     label02:
        r24 = virtualinvoke r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo getClientLocked(com.android.internal.view.IInputMethodClient)>(r19);

     label03:
        if r24 != null goto label06;

     label04:
        exitmonitor r23;

     label05:
        return 0;

     label06:
        $i3 = r24.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mUid>;

        if $i3 == i1 goto label08;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected calling UID=");

        $i4 = r24.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mUid>;

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" actual=");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r8);

        exitmonitor r23;

     label07:
        return 0;

     label08:
        i8 = r24.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mState>;

     label09:
        if i8 == 3 goto label10;

        if i8 == 4 goto label10;

        goto label13;

     label10:
        $r3 = r24.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: com.android.internal.inputmethod.IMultiClientInputMethodSession mMSInputMethodSession>;

        interfaceinvoke $r3.<com.android.internal.inputmethod.IMultiClientInputMethodSession: void hideSoftInput(int,android.os.ResultReceiver)>(i0, r21);

     label11:
        goto label13;

     label12:
        $r17 := @caughtexception;

     label13:
        exitmonitor r23;

     label14:
        return 1;

     label15:
        $r18 := @caughtexception;

     label16:
        exitmonitor r23;

     label17:
        throw $r18;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public boolean isInputMethodPickerShownForTest()
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void access$200()>();

        return 0;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        android.os.ShellCallback r5;
        android.os.ResultReceiver r6;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.FileDescriptor;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.ShellCallback;

        r6 := @parameter5: android.os.ResultReceiver;

        return;
    }

    public void removeImeSurface()
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void access$200()>();

        return;
    }

    public void removeImeSurfaceFromWindow(android.os.IBinder)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        android.os.IBinder r1;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r1 := @parameter0: android.os.IBinder;

        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void access$200()>();

        return;
    }

    public void reportActivityView(com.android.internal.view.IInputMethodClient, int, float[])
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        com.android.internal.view.IInputMethodClient r1;
        int i0;
        float[] r2;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        i0 := @parameter1: int;

        r2 := @parameter2: float[];

        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void access$200()>();

        return;
    }

    public void reportPerceptible(android.os.IBinder, boolean)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        android.os.IBinder r1;
        boolean z0;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void access$200()>();

        return;
    }

    public void setAdditionalInputMethodSubtypes(java.lang.String, android.view.inputmethod.InputMethodSubtype[])
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        java.lang.String r1;
        android.view.inputmethod.InputMethodSubtype[] r2;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype[];

        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void access$200()>();

        return;
    }

    public void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient, java.lang.String)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        com.android.internal.view.IInputMethodClient r1;
        java.lang.String r2;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        r2 := @parameter1: java.lang.String;

        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void access$200()>();

        return;
    }

    public void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient, int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        com.android.internal.view.IInputMethodClient r1;
        int i0;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        i0 := @parameter1: int;

        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void access$200()>();

        return;
    }

    public void showInputMethodPickerFromSystem(com.android.internal.view.IInputMethodClient, int, int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        com.android.internal.view.IInputMethodClient r1;
        int i0, i1;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void access$200()>();

        return;
    }

    public boolean showSoftInput(com.android.internal.view.IInputMethodClient, android.os.IBinder, int, android.os.ResultReceiver)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        int i0, i1, i2, $i3, $i4, i8, i9;
        android.os.ResultReceiver r1;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData r2;
        java.lang.Object r3;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap $r4;
        com.android.internal.inputmethod.IMultiClientInputMethodSession $r5;
        com.android.server.wm.WindowManagerInternal $r6;
        java.lang.String $r11, $r19;
        java.lang.StringBuilder $r12, r26;
        android.os.RemoteException $r20;
        java.lang.Throwable $r21;
        com.android.internal.view.IInputMethodClient r22;
        android.os.IBinder r23;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo r25;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        r22 := @parameter0: com.android.internal.view.IInputMethodClient;

        r23 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r1 := @parameter3: android.os.ResultReceiver;

        i8 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i8);

        $r4 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap>;

        r2 = virtualinvoke $r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData get(int)>(i2);

        if r2 != null goto label01;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("showSoftInput() from unknown userId=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pid=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r19);

        return 0;

     label01:
        r3 = r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r3;

     label02:
        r25 = virtualinvoke r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo getClientLocked(com.android.internal.view.IInputMethodClient)>(r22);

     label03:
        if r25 != null goto label06;

     label04:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", "showSoftInput. client not found. ignoring.");

        exitmonitor r3;

     label05:
        return 0;

     label06:
        $i3 = r25.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mUid>;

        if $i3 == i8 goto label08;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected calling UID=");

        $i4 = r25.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mUid>;

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" actual=");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r11 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r11);

        exitmonitor r3;

     label07:
        return 0;

     label08:
        i9 = r25.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mState>;

     label09:
        if i9 == 3 goto label10;

        if i9 == 4 goto label10;

        goto label13;

     label10:
        $r5 = r25.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: com.android.internal.inputmethod.IMultiClientInputMethodSession mMSInputMethodSession>;

        interfaceinvoke $r5.<com.android.internal.inputmethod.IMultiClientInputMethodSession: void showSoftInput(int,android.os.ResultReceiver)>(i0, r1);

        $r6 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        virtualinvoke $r6.<com.android.server.wm.WindowManagerInternal: void showImePostLayout(android.os.IBinder)>(r23);

     label11:
        goto label13;

     label12:
        $r20 := @caughtexception;

     label13:
        exitmonitor r3;

     label14:
        return 1;

     label15:
        $r21 := @caughtexception;

     label16:
        exitmonitor r3;

     label17:
        throw $r21;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public com.android.internal.view.InputBindResult startInputOrWindowGainedFocus(int, com.android.internal.view.IInputMethodClient, android.os.IBinder, int, int, int, android.view.inputmethod.EditorInfo, com.android.internal.view.IInputContext, int, int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i15, i19, i20, i21, i22, i23, i24, i25, $i26, $i27, $i28, i29, i30, i31, i32, $i33;
        com.android.internal.view.IInputContext r1;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData r2;
        java.lang.Object r3, $r9, r54, r62;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo r4;
        boolean z0, $z1, z2;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap $r5;
        android.view.inputmethod.InputMethodInfo $r6, $r74;
        java.lang.String $r7, $r14, $r19, $r27, $r33, $r35, $r37, $r75;
        java.util.WeakHashMap $r8, $r10;
        java.lang.StringBuilder $r20, $r29, r55, r78;
        com.android.internal.view.InputBindResult $r28, $r36, $r39, r52, r56, r60, r65, r66, r70, r76, r77, r79;
        android.app.AppOpsManager $r38;
        android.os.RemoteException $r40, $r42, $r45, $r46;
        java.lang.Throwable $r41, $r43, $r44, r53;
        com.android.internal.view.IInputMethodClient r47;
        android.os.IBinder r48;
        android.view.inputmethod.EditorInfo r49;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$WindowInfo r57, r58, r59;
        com.android.internal.inputmethod.IMultiClientInputMethodSession r61, r67;
        com.android.internal.view.IInputMethodSession $r71;
        android.view.InputChannel $r72, $r73;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks;

        i19 := @parameter0: int;

        r47 := @parameter1: com.android.internal.view.IInputMethodClient;

        r48 := @parameter2: android.os.IBinder;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i20 := @parameter5: int;

        r49 := @parameter6: android.view.inputmethod.EditorInfo;

        r1 := @parameter7: com.android.internal.view.IInputContext;

        i2 := @parameter8: int;

        i21 := @parameter9: int;

        i22 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i23 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i22);

        if r47 != null goto label001;

        $r39 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult INVALID_CLIENT>;

        return $r39;

     label001:
        if r49 == null goto label002;

        $r38 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: android.app.AppOpsManager mAppOpsManager>;

        $r37 = r49.<android.view.inputmethod.EditorInfo: java.lang.String packageName>;

        $z1 = staticinvoke <com.android.server.inputmethod.InputMethodUtils: boolean checkIfPackageBelongsToUid(android.app.AppOpsManager,int,java.lang.String)>($r38, i22, $r37);

        if $z1 == 0 goto label002;

        z2 = 1;

        goto label003;

     label002:
        z2 = 0;

     label003:
        if r49 == null goto label004;

        if z2 != 0 goto label004;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rejecting this client as it reported an invalid package name. uid=");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" package=");

        $r33 = r49.<android.view.inputmethod.EditorInfo: java.lang.String packageName>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r35);

        $r36 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult INVALID_PACKAGE_NAME>;

        return $r36;

     label004:
        $r5 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap>;

        r2 = virtualinvoke $r5.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData get(int)>(i23);

        if r2 != null goto label005;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startInputOrWindowGainedFocus() from unknown userId=");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pid=");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r27 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r27);

        $r28 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult INVALID_USER>;

        return $r28;

     label005:
        r3 = r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r3;

     label006:
        r4 = virtualinvoke r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo getClientLocked(com.android.internal.view.IInputMethodClient)>(r47);

     label007:
        if r4 != null goto label011;

     label008:
        r52 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult INVALID_CLIENT>;

        exitmonitor r3;

     label009:
        return r52;

     label010:
        $r41 := @caughtexception;

        r53 = $r41;

        r54 = r3;

        goto label118;

     label011:
        i24 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mUid>;

     label012:
        if i24 == i22 goto label015;

     label013:
        r55 = new java.lang.StringBuilder;

        specialinvoke r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected calling UID=");

        $i15 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mUid>;

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" actual=");

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        $r19 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r19);

        r56 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult INVALID_CLIENT>;

        exitmonitor r3;

     label014:
        return r56;

     label015:
        i25 = r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

     label016:
        tableswitch(i25)
        {
            case 1: goto label097;
            case 2: goto label097;
            case 3: goto label097;
            case 4: goto label097;
            case 5: goto label018;
            case 6: goto label097;
            default: goto label017;
        };

     label017:
        goto label102;

     label018:
        if r48 == null goto label024;

     label019:
        $r8 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: java.util.WeakHashMap mWindowMap>;

        $r9 = virtualinvoke $r8.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r48);

        r57 = (com.android.server.inputmethod.MultiClientInputMethodManagerService$WindowInfo) $r9;

     label020:
        if r57 != null goto label023;

     label021:
        r58 = new com.android.server.inputmethod.MultiClientInputMethodManagerService$WindowInfo;

        $i12 = staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService$WindowHandleSource: int getNext()>();

        specialinvoke r58.<com.android.server.inputmethod.MultiClientInputMethodManagerService$WindowInfo: void <init>(android.os.IBinder,int)>(r48, $i12);

        $r10 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: java.util.WeakHashMap mWindowMap>;

        virtualinvoke $r10.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r48, r58);

     label022:
        r59 = r58;

        goto label025;

     label023:
        r59 = r57;

        goto label025;

     label024:
        r59 = null;

     label025:
        $i26 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mUid>;

        $i27 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mPid>;

        $i28 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mSelfReportedDisplayId>;

        z0 = specialinvoke r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ApiCallbacks: boolean checkFocus(int,int,int)>($i26, $i27, $i28);

     label026:
        if z0 != 0 goto label029;

     label027:
        r60 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult NOT_IME_TARGET_WINDOW>;

        exitmonitor r3;

     label028:
        return r60;

     label029:
        i29 = -1;

        if r49 != null goto label047;

     label030:
        i30 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mState>;

     label031:
        if i30 == 3 goto label032;

        if i30 == 4 goto label032;

        goto label042;

     label032:
        if r59 == null goto label035;

     label033:
        i31 = r59.<com.android.server.inputmethod.MultiClientInputMethodManagerService$WindowInfo: int mWindowHandle>;

     label034:
        goto label036;

     label035:
        i31 = -1;

     label036:
        r61 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: com.android.internal.inputmethod.IMultiClientInputMethodSession mMSInputMethodSession>;

     label037:
        r62 = r3;

     label038:
        interfaceinvoke r61.<com.android.internal.inputmethod.IMultiClientInputMethodSession: void startInputOrWindowGainedFocus(com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,int,int,int)>(r1, i2, r49, i0, i1, i31);

     label039:
        goto label042;

     label040:
        $r42 := @caughtexception;

        goto label042;

     label041:
        $r46 := @caughtexception;

     label042:
        r62 = r3;

     label043:
        r65 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult NULL_EDITOR_INFO>;

     label044:
        r62 = r3;

     label045:
        exitmonitor r3;

     label046:
        return r65;

     label047:
        r62 = r3;

     label048:
        i32 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mState>;

     label049:
        if i32 == 1 goto label084;

        if i32 == 2 goto label084;

        if i32 == 3 goto label059;

        if i32 == 4 goto label059;

        if i32 == 5 goto label052;

        r62 = r3;

     label050:
        exitmonitor r3;

     label051:
        return null;

     label052:
        r62 = r3;

     label053:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", "The client is already unregistered.");

     label054:
        r62 = r3;

     label055:
        r66 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult INVALID_CLIENT>;

     label056:
        r62 = r3;

     label057:
        exitmonitor r3;

     label058:
        return r66;

     label059:
        r62 = r3;

     label060:
        $i8 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mBindingSequence>;

        $i9 = $i8 + 1;

        r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mBindingSequence> = $i9;

     label061:
        r62 = r3;

     label062:
        $i10 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mBindingSequence>;

        if $i10 >= 0 goto label065;

     label063:
        r62 = r3;

     label064:
        r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mBindingSequence> = 0;

     label065:
        if r59 == null goto label068;

        r62 = r3;

     label066:
        i29 = r59.<com.android.server.inputmethod.MultiClientInputMethodManagerService$WindowInfo: int mWindowHandle>;

     label067:
        goto label068;

     label068:
        r62 = r3;

     label069:
        r67 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: com.android.internal.inputmethod.IMultiClientInputMethodSession mMSInputMethodSession>;

     label070:
        r62 = r3;

     label071:
        interfaceinvoke r67.<com.android.internal.inputmethod.IMultiClientInputMethodSession: void startInputOrWindowGainedFocus(com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,int,int,int)>(r1, i2, r49, i0, i1, i29);

     label072:
        goto label075;

     label073:
        $r45 := @caughtexception;

        goto label075;

     label074:
        $r40 := @caughtexception;

     label075:
        r62 = r3;

     label076:
        r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mState> = 4;

     label077:
        r62 = r3;

     label078:
        r70 = new com.android.internal.view.InputBindResult;

     label079:
        r62 = r3;

     label080:
        $r71 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: com.android.internal.view.IInputMethodSession mInputMethodSession>;

        $r72 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: android.view.InputChannel mWriteChannel>;

        $r73 = virtualinvoke $r72.<android.view.InputChannel: android.view.InputChannel dup()>();

        $r74 = r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.view.inputmethod.InputMethodInfo mCurrentInputMethodInfo>;

        $r75 = virtualinvoke $r74.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $i33 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mBindingSequence>;

        specialinvoke r70.<com.android.internal.view.InputBindResult: void <init>(int,com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int,android.graphics.Matrix)>(0, $r71, $r73, $r75, $i33, null);

     label081:
        r62 = r3;

     label082:
        exitmonitor r3;

     label083:
        return r70;

     label084:
        r62 = r3;

     label085:
        $i4 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mBindingSequence>;

        $i5 = $i4 + 1;

        r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mBindingSequence> = $i5;

     label086:
        r62 = r3;

     label087:
        $i6 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mBindingSequence>;

        if $i6 >= 0 goto label090;

     label088:
        r62 = r3;

     label089:
        r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mBindingSequence> = 0;

     label090:
        r62 = r3;

     label091:
        r76 = new com.android.internal.view.InputBindResult;

     label092:
        r62 = r3;

     label093:
        $r6 = r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.view.inputmethod.InputMethodInfo mCurrentInputMethodInfo>;

        $r7 = virtualinvoke $r6.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $i7 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mBindingSequence>;

        specialinvoke r76.<com.android.internal.view.InputBindResult: void <init>(int,com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int,android.graphics.Matrix)>(1, null, null, $r7, $i7, null);

     label094:
        r62 = r3;

     label095:
        exitmonitor r3;

     label096:
        return r76;

     label097:
        r62 = r3;

     label098:
        r77 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult IME_NOT_CONNECTED>;

     label099:
        r62 = r3;

     label100:
        exitmonitor r3;

     label101:
        return r77;

     label102:
        r62 = r3;

     label103:
        r78 = new java.lang.StringBuilder;

     label104:
        r62 = r3;

     label105:
        specialinvoke r78.<java.lang.StringBuilder: void <init>()>();

     label106:
        r62 = r3;

     label107:
        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected state=");

     label108:
        r62 = r3;

     label109:
        $i13 = r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

     label110:
        r62 = r3;

     label111:
        $r14 = virtualinvoke r78.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r14);

     label112:
        r62 = r3;

     label113:
        r79 = <com.android.internal.view.InputBindResult: com.android.internal.view.InputBindResult IME_NOT_CONNECTED>;

     label114:
        r62 = r3;

     label115:
        exitmonitor r3;

     label116:
        return r79;

     label117:
        $r43 := @caughtexception;

        r53 = $r43;

        r54 = r3;

     label118:
        r62 = r54;

     label119:
        exitmonitor r54;

     label120:
        throw r53;

     label121:
        $r44 := @caughtexception;

        r53 = $r44;

        r54 = r62;

        goto label118;

        catch java.lang.Throwable from label006 to label007 with label117;
        catch java.lang.Throwable from label008 to label009 with label010;
        catch java.lang.Throwable from label011 to label012 with label117;
        catch java.lang.Throwable from label013 to label014 with label010;
        catch java.lang.Throwable from label015 to label016 with label117;
        catch java.lang.Throwable from label019 to label020 with label010;
        catch java.lang.Throwable from label021 to label022 with label010;
        catch java.lang.Throwable from label025 to label026 with label117;
        catch java.lang.Throwable from label027 to label028 with label010;
        catch java.lang.Throwable from label030 to label031 with label117;
        catch java.lang.Throwable from label033 to label034 with label010;
        catch android.os.RemoteException from label036 to label037 with label041;
        catch java.lang.Throwable from label036 to label037 with label117;
        catch android.os.RemoteException from label038 to label039 with label040;
        catch java.lang.Throwable from label038 to label039 with label121;
        catch java.lang.Throwable from label043 to label044 with label121;
        catch java.lang.Throwable from label045 to label046 with label121;
        catch java.lang.Throwable from label048 to label049 with label121;
        catch java.lang.Throwable from label050 to label051 with label121;
        catch java.lang.Throwable from label053 to label054 with label121;
        catch java.lang.Throwable from label055 to label056 with label121;
        catch java.lang.Throwable from label057 to label058 with label121;
        catch java.lang.Throwable from label060 to label061 with label121;
        catch java.lang.Throwable from label062 to label063 with label121;
        catch java.lang.Throwable from label064 to label065 with label121;
        catch java.lang.Throwable from label066 to label067 with label121;
        catch android.os.RemoteException from label069 to label070 with label074;
        catch java.lang.Throwable from label069 to label070 with label121;
        catch android.os.RemoteException from label071 to label072 with label073;
        catch java.lang.Throwable from label071 to label072 with label121;
        catch java.lang.Throwable from label076 to label077 with label121;
        catch java.lang.Throwable from label078 to label079 with label121;
        catch java.lang.Throwable from label080 to label081 with label121;
        catch java.lang.Throwable from label082 to label083 with label121;
        catch java.lang.Throwable from label085 to label086 with label121;
        catch java.lang.Throwable from label087 to label088 with label121;
        catch java.lang.Throwable from label089 to label090 with label121;
        catch java.lang.Throwable from label091 to label092 with label121;
        catch java.lang.Throwable from label093 to label094 with label121;
        catch java.lang.Throwable from label095 to label096 with label121;
        catch java.lang.Throwable from label098 to label099 with label121;
        catch java.lang.Throwable from label100 to label101 with label121;
        catch java.lang.Throwable from label103 to label104 with label121;
        catch java.lang.Throwable from label105 to label106 with label121;
        catch java.lang.Throwable from label107 to label108 with label121;
        catch java.lang.Throwable from label109 to label110 with label121;
        catch java.lang.Throwable from label111 to label112 with label121;
        catch java.lang.Throwable from label113 to label114 with label121;
        catch java.lang.Throwable from label115 to label116 with label121;
        catch java.lang.Throwable from label119 to label120 with label121;
    }
}
