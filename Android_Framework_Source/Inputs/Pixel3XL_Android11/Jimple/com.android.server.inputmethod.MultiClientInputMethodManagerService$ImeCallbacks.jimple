final class com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks extends com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub
{
    private final com.android.server.wm.WindowManagerInternal mIWindowManagerInternal;
    private final com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData;

    void <init>(com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks r0;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData r1;
        java.lang.Object $r2;
        com.android.server.wm.WindowManagerInternal $r3;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks;

        r1 := @parameter0: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData;

        specialinvoke r0.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub: void <init>()>();

        r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData> = r1;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/WindowManagerInternal;");

        $r3 = (com.android.server.wm.WindowManagerInternal) $r2;

        r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.wm.WindowManagerInternal mIWindowManagerInternal> = $r3;

        return;
    }

    public void acceptClient(int, com.android.internal.view.IInputMethodSession, com.android.internal.inputmethod.IMultiClientInputMethodSession, android.view.InputChannel)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks r0;
        int i0, $i1, $i2;
        com.android.internal.inputmethod.IMultiClientInputMethodSession r1;
        android.view.InputChannel r2;
        java.lang.Object r3;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo r4;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData $r5, $r6;
        com.android.internal.view.IInputMethodClient $r7;
        java.lang.String $r10, $r13;
        java.lang.Throwable $r14;
        android.os.RemoteException $r15;
        com.android.internal.view.IInputMethodSession r16;
        java.lang.StringBuilder r17, r18;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks;

        i0 := @parameter0: int;

        r16 := @parameter1: com.android.internal.view.IInputMethodSession;

        r1 := @parameter2: com.android.internal.inputmethod.IMultiClientInputMethodSession;

        r2 := @parameter3: android.view.InputChannel;

        $r5 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        r3 = $r5.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r3;

     label01:
        $r6 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        r4 = virtualinvoke $r6.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo getClientFromIdLocked(int)>(i0);

     label02:
        if r4 != null goto label05;

     label03:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown clientId=");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r13);

        exitmonitor r3;

     label04:
        return;

     label05:
        $i1 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mState>;

        if $i1 == 2 goto label07;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected state=");

        $i2 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mState>;

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r10);

     label06:
        goto label09;

     label07:
        $r7 = r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: com.android.internal.view.IInputMethodClient mClient>;

        interfaceinvoke $r7.<com.android.internal.view.IInputMethodClient: void setActive(boolean,boolean)>(1, 0);

     label08:
        r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: int mState> = 3;

        r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: android.view.InputChannel mWriteChannel> = r2;

        r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: com.android.internal.view.IInputMethodSession mInputMethodSession> = r16;

        r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: com.android.internal.inputmethod.IMultiClientInputMethodSession mMSInputMethodSession> = r1;

     label09:
        exitmonitor r3;

     label10:
        return;

     label11:
        $r15 := @caughtexception;

     label12:
        exitmonitor r3;

     label13:
        return;

     label14:
        $r14 := @caughtexception;

     label15:
        exitmonitor r3;

     label16:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch android.os.RemoteException from label07 to label08 with label11;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public android.os.IBinder createInputMethodWindowToken(int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks r0;
        int i0, i1, $i2, i3;
        java.lang.Object r1, $r15;
        android.util.ArraySet r3, $r6, $r14;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData $r4, $r5, $r12, $r13;
        com.android.server.inputmethod.'-$$Lambda$AmbbXLEJhTNO0thyboUFa1hBy_8' $r7;
        com.android.server.wm.WindowManagerInternal $r8;
        java.lang.Integer $r9, $r10;
        com.android.internal.util.function.pooled.PooledRunnable $r11;
        java.lang.Throwable $r16;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo r17, r22;
        android.os.Binder r18, r21;
        com.android.internal.util.function.QuadConsumer r23;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        r1 = $r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        $r6 = $r5.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.util.ArraySet mDisplayIdToImeWindowTokenMap>;

        i1 = virtualinvoke $r6.<android.util.ArraySet: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i1 goto label07;

     label04:
        $r13 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        $r14 = $r13.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.util.ArraySet mDisplayIdToImeWindowTokenMap>;

        $r15 = virtualinvoke $r14.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        r17 = (com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo) $r15;

        $i2 = r17.<com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo: int mDisplayId>;

        if $i2 != i0 goto label06;

        r18 = r17.<com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo: android.os.Binder mToken>;

        exitmonitor r1;

     label05:
        return r18;

     label06:
        i3 = i3 + 1;

        goto label03;

     label07:
        r21 = new android.os.Binder;

        specialinvoke r21.<android.os.Binder: void <init>()>();

        $r7 = <com.android.server.inputmethod._$$Lambda$AmbbXLEJhTNO0thyboUFa1hBy_8: com.android.server.inputmethod.'-$$Lambda$AmbbXLEJhTNO0thyboUFa1hBy_8' INSTANCE>;

        $r8 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.wm.WindowManagerInternal mIWindowManagerInternal>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2011);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r23 = (com.android.internal.util.function.QuadConsumer) $r7;

        $r11 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledRunnable obtainRunnable(com.android.internal.util.function.QuadConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r23, $r8, r21, $r9, $r10);

        staticinvoke <android.os.Binder: void withCleanCallingIdentity(com.android.internal.util.FunctionalUtils$ThrowingRunnable)>($r11);

        $r12 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        r3 = $r12.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.util.ArraySet mDisplayIdToImeWindowTokenMap>;

        r22 = new com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo;

        specialinvoke r22.<com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo: void <init>(android.os.Binder,int)>(r21, i0);

        virtualinvoke r3.<android.util.ArraySet: boolean add(java.lang.Object)>(r22);

        exitmonitor r1;

     label08:
        return r21;

     label09:
        $r16 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void deleteInputMethodWindowToken(android.os.IBinder)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks r0;
        java.lang.Object r1, $r8;
        int i0, i1;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo r2;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData $r3, $r4, $r6, $r10;
        android.util.ArraySet $r5, $r7, $r11;
        android.os.Binder $r9;
        java.lang.Throwable $r12;
        android.os.IBinder r13;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks;

        r13 := @parameter0: android.os.IBinder;

        $r3 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        r1 = $r3.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        $r5 = $r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.util.ArraySet mDisplayIdToImeWindowTokenMap>;

        i0 = virtualinvoke $r5.<android.util.ArraySet: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label07;

     label04:
        $r6 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        $r7 = $r6.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.util.ArraySet mDisplayIdToImeWindowTokenMap>;

        $r8 = virtualinvoke $r7.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        r2 = (com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo) $r8;

        $r9 = r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo: android.os.Binder mToken>;

        if $r9 != r13 goto label06;

        $r10 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        $r11 = $r10.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.util.ArraySet mDisplayIdToImeWindowTokenMap>;

        virtualinvoke $r11.<android.util.ArraySet: boolean remove(java.lang.Object)>(r2);

     label05:
        goto label07;

     label06:
        i1 = i1 + 1;

        goto label03;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r12 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean isUidAllowedOnDisplay(int, int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks r0;
        int i0, i1;
        com.android.server.wm.WindowManagerInternal $r1;
        boolean $z0;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.wm.WindowManagerInternal mIWindowManagerInternal>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.WindowManagerInternal: boolean isUidAllowedOnDisplay(int,int)>(i0, i1);

        return $z0;
    }

    public void reportImeWindowTarget(int, int, android.os.IBinder)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks r0;
        int i0, i1, $i2;
        java.lang.Object r1, $r6;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData $r2, $r3;
        java.util.WeakHashMap $r4;
        java.util.Collection $r5;
        boolean $z0;
        com.android.server.wm.WindowManagerInternal $r7;
        java.lang.String $r10;
        java.lang.Throwable $r11;
        android.os.IBinder r12, r17;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo r13;
        java.lang.StringBuilder r14;
        java.util.Iterator r15;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$WindowInfo r16;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r12 := @parameter2: android.os.IBinder;

        $r2 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        r1 = $r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        r13 = virtualinvoke $r3.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo getClientFromIdLocked(int)>(i0);

     label02:
        if r13 != null goto label05;

     label03:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown clientId=");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r10);

        exitmonitor r1;

     label04:
        return;

     label05:
        $r4 = r13.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: java.util.WeakHashMap mWindowMap>;

        $r5 = virtualinvoke $r4.<java.util.WeakHashMap: java.util.Collection values()>();

        r15 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r6 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (com.android.server.inputmethod.MultiClientInputMethodManagerService$WindowInfo) $r6;

        $i2 = r16.<com.android.server.inputmethod.MultiClientInputMethodManagerService$WindowInfo: int mWindowHandle>;

        if $i2 != i1 goto label07;

        r17 = r16.<com.android.server.inputmethod.MultiClientInputMethodManagerService$WindowInfo: android.os.IBinder mWindowToken>;

        $r7 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.wm.WindowManagerInternal mIWindowManagerInternal>;

        virtualinvoke $r7.<com.android.server.wm.WindowManagerInternal: void updateInputMethodTargetWindow(android.os.IBinder,android.os.IBinder)>(r12, r17);

     label07:
        goto label06;

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r11 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void setActive(int, boolean)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks r0;
        int i0;
        boolean z0;
        java.lang.Object r1;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData $r2, $r3;
        com.android.internal.view.IInputMethodClient $r4;
        java.lang.String $r7;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo r10;
        java.lang.StringBuilder r11;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        r1 = $r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData mPerUserData>;

        r10 = virtualinvoke $r3.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo getClientFromIdLocked(int)>(i0);

     label02:
        if r10 != null goto label05;

     label03:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown clientId=");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r7);

        exitmonitor r1;

     label04:
        return;

     label05:
        $r4 = r10.<com.android.server.inputmethod.MultiClientInputMethodManagerService$InputMethodClientInfo: com.android.internal.view.IInputMethodClient mClient>;

        interfaceinvoke $r4.<com.android.internal.view.IInputMethodClient: void setActive(boolean,boolean)>(z0, 0);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r9 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }
}
