final class com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback extends java.lang.Object
{
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap mInputMethodInfoMap;
    private final com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap;

    void <init>(android.content.Context, com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap, com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap, android.os.Handler)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback r0;
        android.content.Context r1;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap r2;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap r3;
        android.os.Handler r4;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap;

        r3 := @parameter2: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap;

        r4 := @parameter3: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: android.content.Context mContext> = r1;

        r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap> = r2;

        r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap mInputMethodInfoMap> = r3;

        r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: android.os.Handler mHandler> = r4;

        return;
    }

    public static void lambda$RXozRqnqnYcbtt5pr216uYhnGCc(com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback, int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback r0;
        int i0;

        r0 := @parameter0: com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: void tryBindInputMethodService(int)>(i0);

        return;
    }

    private void tryBindInputMethodService(int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback r0;
        int i0, i1, $i2, $i4;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap $r1;
        android.content.Context $r2, $r5;
        android.content.ComponentName $r3, $r11;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap $r4, $r25;
        boolean $z0;
        java.lang.String $r8, $r13, $r17;
        java.lang.StringBuilder $r9, $r14, r28;
        java.lang.Throwable $r18, $r19;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData r20;
        android.view.inputmethod.InputMethodInfo r22;
        java.lang.Object r24, r27;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap>;

        r20 = virtualinvoke $r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData get(int)>(i0);

        if r20 != null goto label01;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tryBindInputMethodService is called for an unknown user=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r17);

        return;

     label01:
        $r2 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: android.content.Context mContext>;

        $r3 = staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: android.content.ComponentName access$300()>();

        r22 = staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: android.view.inputmethod.InputMethodInfo access$400(android.content.Context,int,android.content.ComponentName)>($r2, i0, $r3);

        if r22 != null goto label10;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multi-client InputMethod is not found. component=");

        $r11 = staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: android.content.ComponentName access$300()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r13);

        r24 = r20.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r24;

     label02:
        i1 = r20.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

     label03:
        if i1 == 1 goto label04;

        if i1 == 2 goto label04;

        if i1 == 3 goto label04;

        if i1 == 6 goto label04;

        goto label05;

     label04:
        $r25 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap mInputMethodInfoMap>;

        virtualinvoke $r25.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap: void remove(int)>(i0);

     label05:
        exitmonitor r24;

     label06:
        return;

     label07:
        $r18 := @caughtexception;

     label08:
        exitmonitor r24;

     label09:
        throw $r18;

     label10:
        r27 = r20.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r27;

     label11:
        $i2 = r20.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

        tableswitch($i2)
        {
            case 1: goto label19;
            case 2: goto label15;
            case 3: goto label15;
            case 4: goto label13;
            case 5: goto label13;
            case 6: goto label15;
            default: goto label12;
        };

     label12:
        goto label21;

     label13:
        exitmonitor r27;

     label14:
        return;

     label15:
        r20.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState> = 3;

        r20.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.view.inputmethod.InputMethodInfo mCurrentInputMethodInfo> = r22;

        $r4 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap mInputMethodInfoMap>;

        virtualinvoke $r4.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap: void put(int,android.view.inputmethod.InputMethodInfo)>(i0, r22);

        $r5 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: android.content.Context mContext>;

        $z0 = virtualinvoke r20.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: boolean bindServiceLocked(android.content.Context,int)>($r5, i0);

        if $z0 != 0 goto label17;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", "Failed to bind Multi-client InputMethod.");

        exitmonitor r27;

     label16:
        return;

     label17:
        r20.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState> = 4;

        exitmonitor r27;

     label18:
        return;

     label19:
        exitmonitor r27;

     label20:
        return;

     label21:
        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown state=");

        $i4 = r20.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r8 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r8);

        exitmonitor r27;

     label22:
        return;

     label23:
        $r19 := @caughtexception;

     label24:
        exitmonitor r27;

     label25:
        throw $r19;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    android.os.Handler getHandler()
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback r0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback;

        $r1 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: android.os.Handler mHandler>;

        return $r1;
    }

    void onBindingDied(com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback r0;
        java.lang.Object r1, $r3, $r14;
        int i0, $i1, $i2, $i4, i5, i6;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo r2;
        android.util.ArraySet $r4, $r5, $r13;
        android.os.Handler $r6;
        com.android.server.inputmethod.'-$$Lambda$MultiClientInputMethodManagerService$OnWorkerThreadCallback$RXozRqnqnYcbtt5pr216uYhnGCc' $r7;
        java.lang.Integer $r8;
        android.os.Message $r9;
        java.lang.String $r12;
        android.os.Binder $r15;
        java.lang.Throwable $r16;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData r17;
        com.android.server.wm.WindowManagerInternal r18;
        java.lang.StringBuilder r21;
        java.util.function.BiConsumer r22;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback;

        r17 := @parameter0: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/WindowManagerInternal;");

        r18 = (com.android.server.wm.WindowManagerInternal) $r3;

        r1 = r17.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r17.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.util.ArraySet mDisplayIdToImeWindowTokenMap>;

        i0 = virtualinvoke $r4.<android.util.ArraySet: int size()>();

     label02:
        i5 = 0;

     label03:
        if i5 >= i0 goto label06;

     label04:
        $r13 = r17.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.util.ArraySet mDisplayIdToImeWindowTokenMap>;

        $r14 = virtualinvoke $r13.<android.util.ArraySet: java.lang.Object valueAt(int)>(i5);

        r2 = (com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo) $r14;

        $r15 = r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo: android.os.Binder mToken>;

        $i4 = r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo: int mDisplayId>;

        virtualinvoke r18.<com.android.server.wm.WindowManagerInternal: void removeWindowToken(android.os.IBinder,boolean,int)>($r15, 0, $i4);

     label05:
        i5 = i5 + 1;

        goto label03;

     label06:
        $r5 = r17.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.util.ArraySet mDisplayIdToImeWindowTokenMap>;

        virtualinvoke $r5.<android.util.ArraySet: void clear()>();

        i6 = r17.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

     label07:
        if i6 == 4 goto label12;

        if i6 == 5 goto label12;

        if i6 == 6 goto label10;

     label08:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown state=");

        $i2 = r17.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r12);

        exitmonitor r1;

     label09:
        return;

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        r17.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState> = 6;

        r17.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: com.android.internal.inputmethod.IMultiClientInputMethod mCurrentInputMethod> = null;

        virtualinvoke r17.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: void onInputMethodDisconnectedLocked()>();

        $r6 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: android.os.Handler mHandler>;

        $r7 = <com.android.server.inputmethod._$$Lambda$MultiClientInputMethodManagerService$OnWorkerThreadCallback$RXozRqnqnYcbtt5pr216uYhnGCc: com.android.server.inputmethod.'-$$Lambda$MultiClientInputMethodManagerService$OnWorkerThreadCallback$RXozRqnqnYcbtt5pr216uYhnGCc' INSTANCE>;

        $i1 = staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int access$500(com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData)>(r17);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r22 = (java.util.function.BiConsumer) $r7;

        $r9 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r22, r0, $r8);

        virtualinvoke $r6.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r9, 1000L);

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r16 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    void onBootPhase(int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback r0;
        int i0, $i1;
        android.content.IntentFilter $r1;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback$1 $r2;
        android.content.Context $r3, $r6, $r9, $r13, $r25;
        android.os.Handler $r4;
        android.content.res.Resources $r7;
        boolean $z0;
        android.os.Bundle $r8;
        java.lang.Object $r10;
        android.app.Notification$Builder $r11, $r15, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26;
        java.lang.String $r12;
        android.app.NotificationManager $r14;
        android.app.Notification$BigTextStyle $r16, $r17;
        android.app.Notification $r27;
        android.os.UserHandle $r28;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback;

        i0 := @parameter0: int;

        if i0 == 550 goto label2;

        if i0 == 1000 goto label1;

        goto label3;

     label1:
        $r6 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r7.<android.content.res.Resources: boolean getBoolean(int)>(17891332);

        if $z0 != 0 goto label3;

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        virtualinvoke $r8.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.allowDuringSetup", 1);

        $r9 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/NotificationManager;");

        $r14 = (android.app.NotificationManager) $r10;

        $r11 = new android.app.Notification$Builder;

        $r13 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: android.content.Context mContext>;

        $r12 = <com.android.internal.notification.SystemNotificationChannels: java.lang.String VIRTUAL_KEYBOARD>;

        specialinvoke $r11.<android.app.Notification$Builder: void <init>(android.content.Context,java.lang.String)>($r13, $r12);

        $r15 = virtualinvoke $r11.<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>("config_perDisplayFocusEnabled is not true.");

        $r16 = new android.app.Notification$BigTextStyle;

        specialinvoke $r16.<android.app.Notification$BigTextStyle: void <init>()>();

        $r17 = virtualinvoke $r16.<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle bigText(java.lang.CharSequence)>("Consider rebuilding the system image after enabling config_perDisplayFocusEnabled to make IME focus compatible with multi-client IME mode.");

        $r18 = virtualinvoke $r15.<android.app.Notification$Builder: android.app.Notification$Builder setStyle(android.app.Notification$Style)>($r17);

        $r19 = virtualinvoke $r18.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>(17302759);

        $r20 = virtualinvoke $r19.<android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>(0L);

        $r21 = virtualinvoke $r20.<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>(1);

        $r22 = virtualinvoke $r21.<android.app.Notification$Builder: android.app.Notification$Builder setLocalOnly(boolean)>(1);

        $r23 = virtualinvoke $r22.<android.app.Notification$Builder: android.app.Notification$Builder addExtras(android.os.Bundle)>($r8);

        $r24 = virtualinvoke $r23.<android.app.Notification$Builder: android.app.Notification$Builder setCategory(java.lang.String)>("sys");

        $r25 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: android.content.Context mContext>;

        $i1 = virtualinvoke $r25.<android.content.Context: int getColor(int)>(17170460);

        $r26 = virtualinvoke $r24.<android.app.Notification$Builder: android.app.Notification$Builder setColor(int)>($i1);

        $r27 = virtualinvoke $r26.<android.app.Notification$Builder: android.app.Notification build()>();

        $r28 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r14.<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>("MultiClientInputMethodManagerService", 8, $r27, $r28);

        goto label3;

     label2:
        $r1 = new android.content.IntentFilter;

        specialinvoke $r1.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke $r1.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r3 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: android.content.Context mContext>;

        $r2 = new com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback$1;

        specialinvoke $r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback$1: void <init>(com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback)>(r0);

        $r4 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r2, $r1, null, $r4);

     label3:
        return;
    }

    void onPackageAdded(android.content.Intent)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback r0;
        android.content.Intent r1;
        boolean $z0, $z1;
        android.content.ComponentName $r2, $r3;
        java.lang.String $r4, r6;
        int $i0, $i1;
        android.net.Uri r5;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback;

        r1 := @parameter0: android.content.Intent;

        r5 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        if r5 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r1.<android.content.Intent: boolean hasExtra(java.lang.String)>("android.intent.extra.UID");

        if $z0 != 0 goto label2;

        return;

     label2:
        r6 = virtualinvoke r5.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        $r2 = staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: android.content.ComponentName access$300()>();

        if $r2 == null goto label4;

        if r6 == null goto label4;

        $r3 = staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: android.content.ComponentName access$300()>();

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, r6);

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        $i0 = virtualinvoke r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", 0);

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        specialinvoke r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: void tryBindInputMethodService(int)>($i1);

        return;

     label4:
        return;
    }

    void onServiceConnected(com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData, com.android.internal.inputmethod.IMultiClientInputMethod)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback r0;
        java.lang.Object r1;
        int i0, $i1;
        com.android.internal.inputmethod.IMultiClientInputMethod r2, r9;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData r8;
        java.lang.StringBuilder r10;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks r11;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback;

        r8 := @parameter0: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData;

        r9 := @parameter1: com.android.internal.inputmethod.IMultiClientInputMethod;

        r1 = r8.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        i0 = r8.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

     label02:
        if i0 == 4 goto label07;

        if i0 == 6 goto label05;

     label03:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown state=");

        $i1 = r8.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r5);

        exitmonitor r1;

     label04:
        return;

     label05:
        exitmonitor r1;

     label06:
        return;

     label07:
        r8.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState> = 5;

        r8.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: com.android.internal.inputmethod.IMultiClientInputMethod mCurrentInputMethod> = r9;

     label08:
        r2 = r8.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: com.android.internal.inputmethod.IMultiClientInputMethod mCurrentInputMethod>;

        r11 = new com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks;

        specialinvoke r11.<com.android.server.inputmethod.MultiClientInputMethodManagerService$ImeCallbacks: void <init>(com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData)>(r8);

        interfaceinvoke r2.<com.android.internal.inputmethod.IMultiClientInputMethod: void initialize(com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations)>(r11);

     label09:
        goto label11;

     label10:
        $r7 := @caughtexception;

     label11:
        virtualinvoke r8.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: void onInputMethodConnectedLocked()>();

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r6 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    void onServiceDisconnected(com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback r0;
        java.lang.Object r1, $r3, $r10;
        int i0, $i1, $i3, i4, i5;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo r2;
        android.util.ArraySet $r4, $r5, $r9;
        java.lang.String $r8;
        android.os.Binder $r11;
        java.lang.Throwable $r12;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData r13;
        com.android.server.wm.WindowManagerInternal r14;
        java.lang.StringBuilder r15;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback;

        r13 := @parameter0: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/WindowManagerInternal;");

        r14 = (com.android.server.wm.WindowManagerInternal) $r3;

        r1 = r13.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r13.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.util.ArraySet mDisplayIdToImeWindowTokenMap>;

        i0 = virtualinvoke $r4.<android.util.ArraySet: int size()>();

     label02:
        i4 = 0;

     label03:
        if i4 >= i0 goto label06;

     label04:
        $r9 = r13.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.util.ArraySet mDisplayIdToImeWindowTokenMap>;

        $r10 = virtualinvoke $r9.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        r2 = (com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo) $r10;

        $r11 = r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo: android.os.Binder mToken>;

        $i3 = r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$TokenInfo: int mDisplayId>;

        virtualinvoke r14.<com.android.server.wm.WindowManagerInternal: void removeWindowToken(android.os.IBinder,boolean,int)>($r11, 0, $i3);

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        $r5 = r13.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: android.util.ArraySet mDisplayIdToImeWindowTokenMap>;

        virtualinvoke $r5.<android.util.ArraySet: void clear()>();

        i5 = r13.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

     label07:
        if i5 == 4 goto label12;

        if i5 == 5 goto label12;

        if i5 == 6 goto label10;

     label08:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown state=");

        $i1 = r13.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r8);

        exitmonitor r1;

     label09:
        return;

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        r13.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState> = 4;

        r13.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: com.android.internal.inputmethod.IMultiClientInputMethod mCurrentInputMethod> = null;

        virtualinvoke r13.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: void onInputMethodDisconnectedLocked()>();

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r12 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    void onStartUser(int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback r0;
        int i0;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData $r2;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap $r3;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback;

        i0 := @parameter0: int;

        $r2 = new com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData;

        specialinvoke $r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: void <init>(int,android.view.inputmethod.InputMethodInfo,int,com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback)>(i0, null, 1, r0);

        $r3 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap>;

        virtualinvoke $r3.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap: void put(int,com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData)>(i0, $r2);

        return;
    }

    void onStopUser(int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback r0;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData r1;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap $r2;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap $r3;
        int $i0, i3, i4;
        java.lang.String $r6, $r10;
        java.lang.StringBuilder $r7, r14;
        java.lang.Throwable $r11;
        java.lang.Object r13;
        android.content.Context $r15;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback;

        i3 := @parameter0: int;

        $r2 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap mInputMethodInfoMap>;

        virtualinvoke $r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserToInputMethodInfoMap: void remove(int)>(i3);

        $r3 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap>;

        r1 = virtualinvoke $r3.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData removeReturnOld(int)>(i3);

        if r1 != null goto label01;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onStopUser is called for an unknown user=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r10);

        return;

     label01:
        r13 = r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r13;

     label02:
        i4 = r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

     label03:
        if i4 == 1 goto label08;

        if i4 == 3 goto label08;

        if i4 == 4 goto label06;

        if i4 == 5 goto label06;

        if i4 == 6 goto label08;

     label04:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown state=");

        $i0 = r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r6);

     label05:
        goto label06;

     label06:
        $r15 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: android.content.Context mContext>;

        virtualinvoke r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: void unbindServiceLocked(android.content.Context)>($r15);

        r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState> = 6;

        r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: com.android.internal.inputmethod.IMultiClientInputMethod mCurrentInputMethod> = null;

        virtualinvoke r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: void onInputMethodDisconnectedLocked()>();

        exitmonitor r13;

     label07:
        return;

     label08:
        exitmonitor r13;

     label09:
        return;

     label10:
        $r11 := @caughtexception;

     label11:
        exitmonitor r13;

     label12:
        throw $r11;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void onUnlockUser(int)
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback r0;
        int i0, $i1, $i2;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData r1;
        com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap $r2;
        java.lang.String $r5, $r9;
        java.lang.StringBuilder $r6, r13;
        java.lang.Throwable $r10;
        java.lang.Object r12;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap mUserDataMap>;

        r1 = virtualinvoke $r2.<com.android.server.inputmethod.MultiClientInputMethodManagerService$UserDataMap: com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData get(int)>(i0);

        if r1 != null goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onUnlockUser is called for an unknown user=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r9);

        return;

     label1:
        r12 = r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: java.lang.Object mLock>;

        entermonitor r12;

     label2:
        $i1 = r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

        if $i1 == 1 goto label4;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown state=");

        $i2 = r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState>;

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r5);

     label3:
        goto label5;

     label4:
        r1.<com.android.server.inputmethod.MultiClientInputMethodManagerService$PerUserData: int mState> = 2;

        specialinvoke r0.<com.android.server.inputmethod.MultiClientInputMethodManagerService$OnWorkerThreadCallback: void tryBindInputMethodService(int)>(i0);

     label5:
        exitmonitor r12;

     label6:
        return;

     label7:
        $r10 := @caughtexception;

     label8:
        exitmonitor r12;

     label9:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }
}
