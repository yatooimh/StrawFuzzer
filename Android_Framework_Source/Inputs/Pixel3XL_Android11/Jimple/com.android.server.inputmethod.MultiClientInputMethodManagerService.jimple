public final class com.android.server.inputmethod.MultiClientInputMethodManagerService extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final int IME_CONNECTION_UNIFIED_BIND_FLAGS;
    private static final java.lang.String PER_DISPLAY_FOCUS_DISABLED_WARNING_MSG;
    private static final java.lang.String PER_DISPLAY_FOCUS_DISABLED_WARNING_TITLE;
    private static final long RECONNECT_DELAY_MSEC;
    private static final java.lang.String TAG;
    private static final android.content.ComponentName sImeComponentName;

    static void <clinit>()
    {
        android.content.ComponentName $r0;

        <com.android.server.inputmethod.MultiClientInputMethodManagerService: java.lang.String TAG> = "MultiClientInputMethodManagerService";

        <com.android.server.inputmethod.MultiClientInputMethodManagerService: long RECONNECT_DELAY_MSEC> = 1000L;

        <com.android.server.inputmethod.MultiClientInputMethodManagerService: java.lang.String PER_DISPLAY_FOCUS_DISABLED_WARNING_TITLE> = "config_perDisplayFocusEnabled is not true.";

        <com.android.server.inputmethod.MultiClientInputMethodManagerService: java.lang.String PER_DISPLAY_FOCUS_DISABLED_WARNING_MSG> = "Consider rebuilding the system image after enabling config_perDisplayFocusEnabled to make IME focus compatible with multi-client IME mode.";

        <com.android.server.inputmethod.MultiClientInputMethodManagerService: int IME_CONNECTION_UNIFIED_BIND_FLAGS> = 1140850693;

        <com.android.server.inputmethod.MultiClientInputMethodManagerService: boolean DEBUG> = 0;

        $r0 = <com.android.server.inputmethod.InputMethodSystemProperty: android.content.ComponentName sMultiClientImeComponentName>;

        <com.android.server.inputmethod.MultiClientInputMethodManagerService: android.content.ComponentName sImeComponentName> = $r0;

        return;
    }

    private void <init>()
    {
        com.android.server.inputmethod.MultiClientInputMethodManagerService r0;

        r0 := @this: com.android.server.inputmethod.MultiClientInputMethodManagerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$200()
    {
        staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: void reportNotSupported()>();

        return;
    }

    static android.content.ComponentName access$300()
    {
        android.content.ComponentName $r0;

        $r0 = <com.android.server.inputmethod.MultiClientInputMethodManagerService: android.content.ComponentName sImeComponentName>;

        return $r0;
    }

    static android.view.inputmethod.InputMethodInfo access$400(android.content.Context, int, android.content.ComponentName)
    {
        android.content.Context r0;
        int i0;
        android.content.ComponentName r1;
        android.view.inputmethod.InputMethodInfo $r2;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.ComponentName;

        $r2 = staticinvoke <com.android.server.inputmethod.MultiClientInputMethodManagerService: android.view.inputmethod.InputMethodInfo queryInputMethod(android.content.Context,int,android.content.ComponentName)>(r0, i0, r1);

        return $r2;
    }

    private static android.view.inputmethod.InputMethodInfo queryInputMethod(android.content.Context, int, android.content.ComponentName)
    {
        int i0, $i1, $i2, $i3;
        android.content.pm.ResolveInfo r0;
        android.content.pm.PackageManager $r1;
        android.content.Intent $r2, $r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;
        java.lang.String $r5, $r6, $r12, $r17, $r22, r27;
        android.view.inputmethod.InputMethodInfo $r7;
        android.content.pm.ApplicationInfo $r8;
        java.lang.StringBuilder $r9, $r13, $r19;
        java.lang.Exception $r18;
        android.content.Context r23;
        android.content.ComponentName r24;
        java.util.List r25;
        android.content.pm.ServiceInfo r26;

        r23 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r24 := @parameter2: android.content.ComponentName;

        if r24 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r23.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.inputmethodservice.MultiClientInputMethodService");

        $r3 = virtualinvoke $r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r24);

        r25 = virtualinvoke $r1.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r3, 128, i0);

        $z0 = interfaceinvoke r25.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", "No IME found");

        return null;

     label2:
        $i1 = interfaceinvoke r25.<java.util.List: int size()>();

        if $i1 <= 1 goto label3;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", "Only one IME service is supported.");

        return null;

     label3:
        $r4 = interfaceinvoke r25.<java.util.List: java.lang.Object get(int)>(0);

        r0 = (android.content.pm.ResolveInfo) $r4;

        r26 = r0.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r27 = staticinvoke <android.view.inputmethod.InputMethodInfo: java.lang.String computeId(android.content.pm.ResolveInfo)>(r0);

        $r6 = "android.permission.BIND_INPUT_METHOD";

        $r5 = r26.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must have required");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_INPUT_METHOD");

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r17);

        return null;

     label4:
        $z2 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z2 != 0 goto label5;

        $r8 = r26.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r8.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = 1 & $i2;

        if $i3 != 0 goto label5;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be pre-installed when Build.IS_DEBUGGABLE is false");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MultiClientInputMethodManagerService", $r12);

        return null;

     label5:
        $r7 = new android.view.inputmethod.InputMethodInfo;

        specialinvoke $r7.<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>(r23, r0);

     label6:
        return $r7;

     label7:
        $r18 := @caughtexception;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load input method ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiClientInputMethodManagerService", $r22, $r18);

        return null;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    private static void reportNotSupported()
    {
        return;
    }
}
