class com.android.server.job.JobConcurrencyManager$JobCountTracker extends java.lang.Object
{
    private int mConfigNumMaxBgJobs;
    private int mConfigNumMaxTotalJobs;
    private int mConfigNumMinBgJobs;
    private int mNumActualMaxBgJobs;
    private int mNumActualMaxFgJobs;
    private int mNumPendingBgJobs;
    private int mNumPendingFgJobs;
    private int mNumReservedForBg;
    private int mNumRunningBgJobs;
    private int mNumRunningFgJobs;
    private int mNumStartingBgJobs;
    private int mNumStartingFgJobs;

    void <init>()
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    boolean canJobStart(boolean)
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean z2, z3, z4;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        z2 := @parameter0: boolean;

        if z2 == 0 goto label3;

        $i5 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningFgJobs>;

        $i4 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingFgJobs>;

        $i7 = $i5 + $i4;

        $i6 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxFgJobs>;

        if $i7 >= $i6 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;

     label3:
        $i1 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningBgJobs>;

        $i0 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingBgJobs>;

        $i3 = $i1 + $i0;

        $i2 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxBgJobs>;

        if $i3 >= $i2 goto label4;

        z4 = 1;

        goto label5;

     label4:
        z4 = 0;

     label5:
        return z4;
    }

    public void dumpProto(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;
        android.util.proto.ProtoOutputStream r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        long l12, l13;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l12 := @parameter1: long;

        l13 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l12);

        $i0 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxTotalJobs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i0);

        $i1 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxBgJobs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i1);

        $i2 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMinBgJobs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i2);

        $i3 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningFgJobs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i3);

        $i4 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningBgJobs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464261L, $i4);

        $i5 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingFgJobs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464262L, $i5);

        $i6 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingBgJobs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464263L, $i6);

        $i7 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxFgJobs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464264L, $i7);

        $i8 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxBgJobs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464265L, $i8);

        $i9 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumReservedForBg>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464266L, $i9);

        $i10 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingFgJobs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464267L, $i10);

        $i11 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingBgJobs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464268L, $i11);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l13);

        return;
    }

    int getFgRunningJobCountToNote()
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        $i1 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningFgJobs>;

        $i0 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingFgJobs>;

        $i2 = $i1 + $i0;

        return $i2;
    }

    public int getNumStartingBgJobs()
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;
        int $i0;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        $i0 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingBgJobs>;

        return $i0;
    }

    public int getNumStartingFgJobs()
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;
        int $i0;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        $i0 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingFgJobs>;

        return $i0;
    }

    int getTotalRunningJobCountToNote()
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        $i1 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningFgJobs>;

        $i0 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningBgJobs>;

        $i3 = $i1 + $i0;

        $i2 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingFgJobs>;

        $i5 = $i3 + $i2;

        $i4 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingBgJobs>;

        $i6 = $i5 + $i4;

        return $i6;
    }

    void incrementPendingJobCount(boolean)
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingFgJobs>;

        $i3 = $i2 + 1;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingFgJobs> = $i3;

        goto label2;

     label1:
        $i0 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingBgJobs>;

        $i1 = $i0 + 1;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingBgJobs> = $i1;

     label2:
        return;
    }

    void incrementRunningJobCount(boolean)
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningFgJobs>;

        $i3 = $i2 + 1;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningFgJobs> = $i3;

        goto label2;

     label1:
        $i0 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningBgJobs>;

        $i1 = $i0 + 1;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningBgJobs> = $i1;

     label2:
        return;
    }

    void logStatus()
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        $z0 = staticinvoke <com.android.server.job.JobConcurrencyManager: boolean access$100()>();

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("assignJobsToContexts: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("JobScheduler", $r5);

     label1:
        return;
    }

    void onCountDone()
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        $i3 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMinBgJobs>;

        $i1 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningBgJobs>;

        $i0 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingBgJobs>;

        $i2 = $i1 + $i0;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        $i6 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxTotalJobs>;

        $i5 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningFgJobs>;

        $i7 = $i6 - $i5;

        i23 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i7);

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumReservedForBg> = i23;

        $i9 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxTotalJobs>;

        $i8 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningBgJobs>;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i8, i23);

        $i14 = $i9 - $i10;

        $i12 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningFgJobs>;

        $i11 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingFgJobs>;

        $i13 = $i12 + $i11;

        i24 = staticinvoke <java.lang.Math: int min(int,int)>($i14, $i13);

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxFgJobs> = i24;

        $i17 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxBgJobs>;

        $i15 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxTotalJobs>;

        $i16 = $i15 - i24;

        $i18 = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i16);

        $i20 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningBgJobs>;

        $i19 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingBgJobs>;

        $i21 = $i20 + $i19;

        $i22 = staticinvoke <java.lang.Math: int min(int,int)>($i18, $i21);

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxBgJobs> = $i22;

        return;
    }

    void onStartingNewJob(boolean)
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingFgJobs>;

        $i3 = $i2 + 1;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingFgJobs> = $i3;

        goto label2;

     label1:
        $i0 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingBgJobs>;

        $i1 = $i0 + 1;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingBgJobs> = $i1;

     label2:
        return;
    }

    void reset(int, int, int)
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;
        int i0, i1, i2;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxTotalJobs> = i0;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxBgJobs> = i1;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMinBgJobs> = i2;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningFgJobs> = 0;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningBgJobs> = 0;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingFgJobs> = 0;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingBgJobs> = 0;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingFgJobs> = 0;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingBgJobs> = 0;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumReservedForBg> = 0;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxFgJobs> = 0;

        r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxBgJobs> = 0;

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.job.JobConcurrencyManager$JobCountTracker r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40;
        java.lang.Object[] $r1;
        java.lang.Integer $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        java.lang.String $r21, r22, r23, r24, r25, r26, r27;

        r0 := @this: com.android.server.job.JobConcurrencyManager$JobCountTracker;

        $i22 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningFgJobs>;

        $i21 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingFgJobs>;

        i0 = $i22 + $i21;

        $i24 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningBgJobs>;

        $i23 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingBgJobs>;

        i1 = $i24 + $i23;

        i2 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxTotalJobs>;

        i3 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMinBgJobs>;

        i4 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxBgJobs>;

        i5 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningFgJobs>;

        i6 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningBgJobs>;

        i7 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningFgJobs>;

        i8 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumRunningBgJobs>;

        i9 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingFgJobs>;

        i10 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingBgJobs>;

        i11 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingFgJobs>;

        i12 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumPendingBgJobs>;

        i13 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxFgJobs>;

        i39 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxTotalJobs>;

        r22 = "";

        if i0 > i39 goto label01;

        r23 = "";

        goto label02;

     label01:
        r23 = "*";

     label02:
        i14 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxBgJobs>;

        $i25 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxBgJobs>;

        if i1 > $i25 goto label03;

        r24 = "";

        goto label04;

     label03:
        r24 = "*";

     label04:
        i15 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxFgJobs>;

        i16 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxBgJobs>;

        $i27 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxFgJobs>;

        $i26 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxBgJobs>;

        $i29 = $i27 + $i26;

        $i28 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxTotalJobs>;

        if $i29 > $i28 goto label05;

        r25 = "";

        goto label06;

     label05:
        r25 = "*";

     label06:
        i17 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumReservedForBg>;

        i18 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingFgJobs>;

        i19 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingBgJobs>;

        i20 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingFgJobs>;

        i40 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumStartingBgJobs>;

        $i30 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxFgJobs>;

        if i0 > $i30 goto label07;

        r26 = "";

        goto label08;

     label07:
        r26 = "*";

     label08:
        $i31 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mNumActualMaxBgJobs>;

        if i1 > $i31 goto label09;

        r27 = "";

        goto label10;

     label09:
        r27 = "*";

     label10:
        $i33 = i0 + i1;

        $i32 = r0.<com.android.server.job.JobConcurrencyManager$JobCountTracker: int mConfigNumMaxTotalJobs>;

        if $i33 > $i32 goto label11;

        goto label12;

     label11:
        r22 = "*";

     label12:
        $r1 = newarray (java.lang.Object)[25];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r1[2] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r1[3] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r1[4] = $r6;

        $i34 = i7 + i8;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i34);

        $r1[5] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        $r1[6] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        $r1[7] = $r9;

        $i35 = i11 + i12;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i35);

        $r1[8] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i13);

        $r1[9] = $r11;

        $r1[10] = r23;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i14);

        $r1[11] = $r12;

        $r1[12] = r24;

        $i36 = i15 + i16;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i36);

        $r1[13] = $r13;

        $r1[14] = r25;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i17);

        $r1[15] = $r14;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i18);

        $r1[16] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i19);

        $r1[17] = $r16;

        $i37 = i20 + i40;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i37);

        $r1[18] = $r17;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[19] = $r18;

        $r1[20] = r26;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r1[21] = $r19;

        $r1[22] = r27;

        $i38 = i0 + i1;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i38);

        $r1[23] = $r20;

        $r1[24] = r22;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Config={tot=%d bg min/max=%d/%d} Running[FG/BG (total)]: %d / %d (%d) Pending: %d / %d (%d) Actual max: %d%s / %d%s (%d%s) Res BG: %d Starting: %d / %d (%d) Total: %d%s / %d%s (%d%s)", $r1);

        return $r21;
    }
}
