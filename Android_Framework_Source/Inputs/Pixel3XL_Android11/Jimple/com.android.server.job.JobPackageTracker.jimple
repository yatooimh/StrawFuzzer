public final class com.android.server.job.JobPackageTracker extends java.lang.Object
{
    static final long BATCHING_TIME;
    private static final int EVENT_BUFFER_SIZE;
    public static final int EVENT_CMD_MASK;
    public static final int EVENT_NULL;
    public static final int EVENT_START_JOB;
    public static final int EVENT_START_PERIODIC_JOB;
    public static final int EVENT_STOP_JOB;
    public static final int EVENT_STOP_PERIODIC_JOB;
    public static final int EVENT_STOP_REASON_MASK;
    public static final int EVENT_STOP_REASON_SHIFT;
    static final int NUM_HISTORY;
    com.android.server.job.JobPackageTracker$DataSet mCurDataSet;
    private final int[] mEventCmds;
    private final com.android.internal.util.RingBufferIndices mEventIndices;
    private final int[] mEventJobIds;
    private final java.lang.String[] mEventReasons;
    private final java.lang.String[] mEventTags;
    private final long[] mEventTimes;
    private final int[] mEventUids;
    com.android.server.job.JobPackageTracker$DataSet[] mLastDataSets;

    public void <init>()
    {
        com.android.server.job.JobPackageTracker r0;
        com.android.internal.util.RingBufferIndices $r1;
        int[] $r2, $r4, $r6;
        long[] $r3;
        java.lang.String[] $r5, $r7;
        com.android.server.job.JobPackageTracker$DataSet $r8;
        com.android.server.job.JobPackageTracker$DataSet[] $r9;

        r0 := @this: com.android.server.job.JobPackageTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.internal.util.RingBufferIndices;

        specialinvoke $r1.<com.android.internal.util.RingBufferIndices: void <init>(int)>(100);

        r0.<com.android.server.job.JobPackageTracker: com.android.internal.util.RingBufferIndices mEventIndices> = $r1;

        $r2 = newarray (int)[100];

        r0.<com.android.server.job.JobPackageTracker: int[] mEventCmds> = $r2;

        $r3 = newarray (long)[100];

        r0.<com.android.server.job.JobPackageTracker: long[] mEventTimes> = $r3;

        $r4 = newarray (int)[100];

        r0.<com.android.server.job.JobPackageTracker: int[] mEventUids> = $r4;

        $r5 = newarray (java.lang.String)[100];

        r0.<com.android.server.job.JobPackageTracker: java.lang.String[] mEventTags> = $r5;

        $r6 = newarray (int)[100];

        r0.<com.android.server.job.JobPackageTracker: int[] mEventJobIds> = $r6;

        $r7 = newarray (java.lang.String)[100];

        r0.<com.android.server.job.JobPackageTracker: java.lang.String[] mEventReasons> = $r7;

        $r8 = new com.android.server.job.JobPackageTracker$DataSet;

        specialinvoke $r8.<com.android.server.job.JobPackageTracker$DataSet: void <init>()>();

        r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet> = $r8;

        $r9 = newarray (com.android.server.job.JobPackageTracker$DataSet)[5];

        r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet[] mLastDataSets> = $r9;

        return;
    }

    public void addEvent(int, int, java.lang.String, int, int, java.lang.String)
    {
        com.android.server.job.JobPackageTracker r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        java.lang.String r1, r2;
        com.android.internal.util.RingBufferIndices $r3;
        int[] $r4, $r7, $r9;
        java.time.Clock $r5;
        long[] $r6;
        long $l8;
        java.lang.String[] $r8, $r10;

        r0 := @this: com.android.server.job.JobPackageTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 := @parameter5: java.lang.String;

        $r3 = r0.<com.android.server.job.JobPackageTracker: com.android.internal.util.RingBufferIndices mEventIndices>;

        i4 = virtualinvoke $r3.<com.android.internal.util.RingBufferIndices: int add()>();

        $r4 = r0.<com.android.server.job.JobPackageTracker: int[] mEventCmds>;

        $i5 = i3 << 8;

        $i6 = $i5 & 65280;

        $i7 = $i6 | i0;

        $r4[i4] = $i7;

        $r6 = r0.<com.android.server.job.JobPackageTracker: long[] mEventTimes>;

        $r5 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        $l8 = virtualinvoke $r5.<java.time.Clock: long millis()>();

        $r6[i4] = $l8;

        $r7 = r0.<com.android.server.job.JobPackageTracker: int[] mEventUids>;

        $r7[i4] = i1;

        $r8 = r0.<com.android.server.job.JobPackageTracker: java.lang.String[] mEventTags>;

        $r8[i4] = r1;

        $r9 = r0.<com.android.server.job.JobPackageTracker: int[] mEventJobIds>;

        $r9[i4] = i2;

        $r10 = r0.<com.android.server.job.JobPackageTracker: java.lang.String[] mEventReasons>;

        $r10[i4] = r2;

        return;
    }

    public void dump(android.util.proto.ProtoOutputStream, long, int)
    {
        com.android.server.job.JobPackageTracker r0;
        android.util.proto.ProtoOutputStream r1;
        int i0, i5, $i6;
        long l1, l2, l3, l4;
        com.android.server.job.JobPackageTracker$DataSet[] r2, $r13, r15;
        java.time.Clock $r3, $r4;
        com.android.server.job.JobPackageTracker$DataSet $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, r16;

        r0 := @this: com.android.server.job.JobPackageTracker;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l3 := @parameter1: long;

        i0 := @parameter2: int;

        l4 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l3);

        $r3 = <com.android.server.job.JobSchedulerService: java.time.Clock sUptimeMillisClock>;

        l1 = virtualinvoke $r3.<java.time.Clock: long millis()>();

        $r4 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l2 = virtualinvoke $r4.<java.time.Clock: long millis()>();

        r15 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet[] mLastDataSets>;

        $r5 = r15[0];

        if $r5 == null goto label1;

        $r11 = new com.android.server.job.JobPackageTracker$DataSet;

        $r12 = r15[0];

        specialinvoke $r11.<com.android.server.job.JobPackageTracker$DataSet: void <init>(com.android.server.job.JobPackageTracker$DataSet)>($r12);

        r16 = $r11;

        $r13 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet[] mLastDataSets>;

        $r14 = $r13[0];

        virtualinvoke $r14.<com.android.server.job.JobPackageTracker$DataSet: void addTo(com.android.server.job.JobPackageTracker$DataSet,long)>($r11, l1);

        goto label2;

     label1:
        $r6 = new com.android.server.job.JobPackageTracker$DataSet;

        $r7 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        specialinvoke $r6.<com.android.server.job.JobPackageTracker$DataSet: void <init>(com.android.server.job.JobPackageTracker$DataSet)>($r7);

        r16 = $r6;

     label2:
        $r8 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        virtualinvoke $r8.<com.android.server.job.JobPackageTracker$DataSet: void addTo(com.android.server.job.JobPackageTracker$DataSet,long)>(r16, l1);

        i5 = 1;

     label3:
        r2 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet[] mLastDataSets>;

        $i6 = lengthof r2;

        if i5 >= $i6 goto label5;

        $r9 = r2[i5];

        if $r9 == null goto label4;

        $r10 = r2[i5];

        virtualinvoke $r10.<com.android.server.job.JobPackageTracker$DataSet: void dump(android.util.proto.ProtoOutputStream,long,long,long,int)>(r1, 2246267895809L, l1, l2, i0);

        goto label4;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        virtualinvoke r16.<com.android.server.job.JobPackageTracker$DataSet: void dump(android.util.proto.ProtoOutputStream,long,long,long,int)>(r1, 1146756268034L, l1, l2, i0);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l4);

        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String, int)
    {
        com.android.server.job.JobPackageTracker r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        int i0, i3, $i4;
        long l1, l2;
        com.android.server.job.JobPackageTracker$DataSet[] r3, $r14, r16;
        java.time.Clock $r4, $r5;
        com.android.server.job.JobPackageTracker$DataSet $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, r17;

        r0 := @this: com.android.server.job.JobPackageTracker;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r4 = <com.android.server.job.JobSchedulerService: java.time.Clock sUptimeMillisClock>;

        l1 = virtualinvoke $r4.<java.time.Clock: long millis()>();

        $r5 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l2 = virtualinvoke $r5.<java.time.Clock: long millis()>();

        r16 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet[] mLastDataSets>;

        $r6 = r16[0];

        if $r6 == null goto label1;

        $r12 = new com.android.server.job.JobPackageTracker$DataSet;

        $r13 = r16[0];

        specialinvoke $r12.<com.android.server.job.JobPackageTracker$DataSet: void <init>(com.android.server.job.JobPackageTracker$DataSet)>($r13);

        r17 = $r12;

        $r14 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet[] mLastDataSets>;

        $r15 = $r14[0];

        virtualinvoke $r15.<com.android.server.job.JobPackageTracker$DataSet: void addTo(com.android.server.job.JobPackageTracker$DataSet,long)>($r12, l1);

        goto label2;

     label1:
        $r7 = new com.android.server.job.JobPackageTracker$DataSet;

        $r8 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        specialinvoke $r7.<com.android.server.job.JobPackageTracker$DataSet: void <init>(com.android.server.job.JobPackageTracker$DataSet)>($r8);

        r17 = $r7;

     label2:
        $r9 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        virtualinvoke $r9.<com.android.server.job.JobPackageTracker$DataSet: void addTo(com.android.server.job.JobPackageTracker$DataSet,long)>(r17, l1);

        i3 = 1;

     label3:
        r3 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet[] mLastDataSets>;

        $i4 = lengthof r3;

        if i3 >= $i4 goto label5;

        $r10 = r3[i3];

        if $r10 == null goto label4;

        $r11 = r3[i3];

        virtualinvoke $r11.<com.android.server.job.JobPackageTracker$DataSet: void dump(java.io.PrintWriter,java.lang.String,java.lang.String,long,long,int)>(r1, "Historical stats", r2, l1, l2, i0);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        virtualinvoke r17.<com.android.server.job.JobPackageTracker$DataSet: void dump(java.io.PrintWriter,java.lang.String,java.lang.String,long,long,int)>(r1, "Current stats", r2, l1, l2, i0);

        return;
    }

    public void dumpHistory(android.util.proto.ProtoOutputStream, long, int)
    {
        com.android.server.job.JobPackageTracker r0;
        android.util.proto.ProtoOutputStream r1;
        int i0, i1, i4, i5, $i6, $i9, $i10, $i11, $i12, $i13, i15, i17;
        long l2, l3, $l7, $l8, l14, l18;
        com.android.internal.util.RingBufferIndices $r2, $r4;
        java.time.Clock $r3;
        int[] $r5, $r6, $r8, $r11;
        long[] $r7;
        java.lang.String[] $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.job.JobPackageTracker;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l14 := @parameter1: long;

        i0 := @parameter2: int;

        $r2 = r0.<com.android.server.job.JobPackageTracker: com.android.internal.util.RingBufferIndices mEventIndices>;

        i1 = virtualinvoke $r2.<com.android.internal.util.RingBufferIndices: int size()>();

        if i1 != 0 goto label1;

        return;

     label1:
        l2 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l14);

        $r3 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l3 = virtualinvoke $r3.<java.time.Clock: long millis()>();

        i15 = 0;

     label2:
        if i15 >= i1 goto label8;

        $r4 = r0.<com.android.server.job.JobPackageTracker: com.android.internal.util.RingBufferIndices mEventIndices>;

        i4 = virtualinvoke $r4.<com.android.internal.util.RingBufferIndices: int indexOf(int)>(i15);

        $r5 = r0.<com.android.server.job.JobPackageTracker: int[] mEventUids>;

        i5 = $r5[i4];

        if i0 == -1 goto label3;

        $i13 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i5);

        if i0 == $i13 goto label3;

        goto label7;

     label3:
        $r6 = r0.<com.android.server.job.JobPackageTracker: int[] mEventCmds>;

        $i6 = $r6[i4];

        i17 = $i6 & 255;

        if i17 != 0 goto label4;

        goto label7;

     label4:
        l18 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895809L);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169921L, i17);

        $r7 = r0.<com.android.server.job.JobPackageTracker: long[] mEventTimes>;

        $l7 = $r7[i4];

        $l8 = l3 - $l7;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529666L, $l8);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, i5);

        $r8 = r0.<com.android.server.job.JobPackageTracker: int[] mEventJobIds>;

        $i9 = $r8[i4];

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i9);

        $r9 = r0.<com.android.server.job.JobPackageTracker: java.lang.String[] mEventTags>;

        $r10 = $r9[i4];

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333445L, $r10);

        if i17 == 2 goto label5;

        if i17 != 4 goto label6;

     label5:
        $r11 = r0.<com.android.server.job.JobPackageTracker: int[] mEventCmds>;

        $i10 = $r11[i4];

        $i11 = $i10 & 65280;

        $i12 = $i11 >> 8;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169926L, $i12);

     label6:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l18);

     label7:
        i15 = i15 + 1;

        goto label2;

     label8:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

        return;
    }

    public boolean dumpHistory(java.io.PrintWriter, java.lang.String, int)
    {
        com.android.server.job.JobPackageTracker r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r8, $r10, $r11, r12, $r16;
        int i0, i1, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, i11, $i14;
        long l2, $l12, $l13;
        com.android.internal.util.RingBufferIndices $r3, $r5;
        java.time.Clock $r4;
        int[] $r6, $r7, $r9, $r14;
        long[] $r13;
        java.lang.String[] $r15, r17;

        r0 := @this: com.android.server.job.JobPackageTracker;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.job.JobPackageTracker: com.android.internal.util.RingBufferIndices mEventIndices>;

        i1 = virtualinvoke $r3.<com.android.internal.util.RingBufferIndices: int size()>();

        if i1 > 0 goto label01;

        return 0;

     label01:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Job history:");

        $r4 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l2 = virtualinvoke $r4.<java.time.Clock: long millis()>();

        i11 = 0;

     label02:
        if i11 >= i1 goto label14;

        $r5 = r0.<com.android.server.job.JobPackageTracker: com.android.internal.util.RingBufferIndices mEventIndices>;

        i3 = virtualinvoke $r5.<com.android.internal.util.RingBufferIndices: int indexOf(int)>(i11);

        $r6 = r0.<com.android.server.job.JobPackageTracker: int[] mEventUids>;

        i4 = $r6[i3];

        if i0 == -1 goto label03;

        $i10 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i4);

        if i0 == $i10 goto label03;

        goto label13;

     label03:
        $r7 = r0.<com.android.server.job.JobPackageTracker: int[] mEventCmds>;

        $i6 = $r7[i3];

        i5 = $i6 & 255;

        if i5 != 0 goto label04;

        goto label13;

     label04:
        if i5 == 1 goto label08;

        if i5 == 2 goto label07;

        if i5 == 3 goto label06;

        if i5 == 4 goto label05;

        r12 = "     ??";

        goto label09;

     label05:
        r12 = " STOP-P";

        goto label09;

     label06:
        r12 = "START-P";

        goto label09;

     label07:
        r12 = "   STOP";

        goto label09;

     label08:
        r12 = "  START";

     label09:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r13 = r0.<com.android.server.job.JobPackageTracker: long[] mEventTimes>;

        $l12 = $r13[i3];

        $l13 = $l12 - l2;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)>($l13, r1, 19);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": #");

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, i4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("/");

        $r14 = r0.<com.android.server.job.JobPackageTracker: int[] mEventJobIds>;

        $i14 = $r14[i3];

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r15 = r0.<com.android.server.job.JobPackageTracker: java.lang.String[] mEventTags>;

        $r16 = $r15[i3];

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r16);

        if i5 == 2 goto label10;

        if i5 != 4 goto label12;

     label10:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        r17 = r0.<com.android.server.job.JobPackageTracker: java.lang.String[] mEventReasons>;

        $r8 = r17[i3];

        if $r8 == null goto label11;

        $r11 = r17[i3];

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r11);

        goto label12;

     label11:
        $r9 = r0.<com.android.server.job.JobPackageTracker: int[] mEventCmds>;

        $i7 = $r9[i3];

        $i8 = $i7 & 65280;

        $i9 = $i8 >> 8;

        $r10 = staticinvoke <android.app.job.JobParameters: java.lang.String getReasonCodeDescription(int)>($i9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r10);

     label12:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label13:
        i11 = i11 + 1;

        goto label02;

     label14:
        return 1;
    }

    public float getLoadFactor(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.JobPackageTracker r0;
        int i0;
        com.android.server.job.JobPackageTracker$PackageEntry r1, r12;
        com.android.server.job.JobPackageTracker$DataSet[] r2, $r7;
        long l1, l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, l10, l11, l12;
        com.android.server.job.JobPackageTracker$DataSet $r3, $r4, $r6, $r8, $r9;
        java.time.Clock $r5;
        float $f0, $f1, $f2;
        com.android.server.job.controllers.JobStatus r10;
        java.lang.String r11;

        r0 := @this: com.android.server.job.JobPackageTracker;

        r10 := @parameter0: com.android.server.job.controllers.JobStatus;

        i0 = virtualinvoke r10.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        r11 = virtualinvoke r10.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        $r3 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        r1 = virtualinvoke $r3.<com.android.server.job.JobPackageTracker$DataSet: com.android.server.job.JobPackageTracker$PackageEntry getEntry(int,java.lang.String)>(i0, r11);

        r2 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet[] mLastDataSets>;

        $r4 = r2[0];

        if $r4 == null goto label1;

        $r9 = r2[0];

        r12 = virtualinvoke $r9.<com.android.server.job.JobPackageTracker$DataSet: com.android.server.job.JobPackageTracker$PackageEntry getEntry(int,java.lang.String)>(i0, r11);

        goto label2;

     label1:
        r12 = null;

     label2:
        if r1 != null goto label3;

        if r12 != null goto label3;

        return 0.0F;

     label3:
        $r5 = <com.android.server.job.JobSchedulerService: java.time.Clock sUptimeMillisClock>;

        l1 = virtualinvoke $r5.<java.time.Clock: long millis()>();

        l10 = 0L;

        if r1 == null goto label4;

        $l7 = virtualinvoke r1.<com.android.server.job.JobPackageTracker$PackageEntry: long getActiveTime(long)>(l1);

        $l8 = virtualinvoke r1.<com.android.server.job.JobPackageTracker$PackageEntry: long getPendingTime(long)>(l1);

        $l9 = $l7 + $l8;

        l10 = 0L + $l9;

     label4:
        $r6 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        l2 = virtualinvoke $r6.<com.android.server.job.JobPackageTracker$DataSet: long getTotalTime(long)>(l1);

        l11 = l10;

        l12 = l2;

        if r12 == null goto label5;

        $l3 = virtualinvoke r12.<com.android.server.job.JobPackageTracker$PackageEntry: long getActiveTime(long)>(l1);

        $l4 = virtualinvoke r12.<com.android.server.job.JobPackageTracker$PackageEntry: long getPendingTime(long)>(l1);

        $l5 = $l3 + $l4;

        l11 = l10 + $l5;

        $r7 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet[] mLastDataSets>;

        $r8 = $r7[0];

        $l6 = virtualinvoke $r8.<com.android.server.job.JobPackageTracker$DataSet: long getTotalTime(long)>(l1);

        l12 = l2 + $l6;

     label5:
        $f1 = (float) l11;

        $f0 = (float) l12;

        $f2 = $f1 / $f0;

        return $f2;
    }

    public void noteActive(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.JobPackageTracker r0;
        com.android.server.job.controllers.JobStatus r1;
        long l0;
        java.time.Clock $r2;
        int $i1, $i2, $i3, $i4, $i5;
        com.android.server.job.JobPackageTracker$DataSet $r3, $r7;
        java.lang.String $r4, $r6, $r8;
        android.app.job.JobInfo $r5;
        boolean $z0;
        byte b6;

        r0 := @this: com.android.server.job.JobPackageTracker;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $r2 = <com.android.server.job.JobSchedulerService: java.time.Clock sUptimeMillisClock>;

        l0 = virtualinvoke $r2.<java.time.Clock: long millis()>();

        r1.<com.android.server.job.controllers.JobStatus: long madeActive> = l0;

        virtualinvoke r0.<com.android.server.job.JobPackageTracker: void rebatchIfNeeded(long)>(l0);

        $i1 = r1.<com.android.server.job.controllers.JobStatus: int lastEvaluatedPriority>;

        if $i1 < 40 goto label1;

        $r7 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        $i5 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $r8 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        virtualinvoke $r7.<com.android.server.job.JobPackageTracker$DataSet: void incActiveTop(int,java.lang.String,long)>($i5, $r8, l0);

        goto label2;

     label1:
        $r3 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        $i2 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $r4 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        virtualinvoke $r3.<com.android.server.job.JobPackageTracker$DataSet: void incActive(int,java.lang.String,long)>($i2, $r4, l0);

     label2:
        $r5 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo getJob()>();

        $z0 = virtualinvoke $r5.<android.app.job.JobInfo: boolean isPeriodic()>();

        if $z0 == 0 goto label3;

        b6 = 3;

        goto label4;

     label3:
        b6 = 1;

     label4:
        $i3 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $r6 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getBatteryName()>();

        $i4 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getJobId()>();

        virtualinvoke r0.<com.android.server.job.JobPackageTracker: void addEvent(int,int,java.lang.String,int,int,java.lang.String)>(b6, $i3, $r6, $i4, 0, null);

        return;
    }

    public void noteConcurrency(int, int)
    {
        com.android.server.job.JobPackageTracker r0;
        int i0, i1, $i2, $i3;
        com.android.server.job.JobPackageTracker$DataSet $r1, $r2, $r3, $r4;

        r0 := @this: com.android.server.job.JobPackageTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        $i2 = $r1.<com.android.server.job.JobPackageTracker$DataSet: int mMaxTotalActive>;

        if i0 <= $i2 goto label1;

        $r4 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        $r4.<com.android.server.job.JobPackageTracker$DataSet: int mMaxTotalActive> = i0;

     label1:
        $r2 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        $i3 = $r2.<com.android.server.job.JobPackageTracker$DataSet: int mMaxFgActive>;

        if i1 <= $i3 goto label2;

        $r3 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        $r3.<com.android.server.job.JobPackageTracker$DataSet: int mMaxFgActive> = i1;

     label2:
        return;
    }

    public void noteInactive(com.android.server.job.controllers.JobStatus, int, java.lang.String)
    {
        com.android.server.job.JobPackageTracker r0;
        com.android.server.job.controllers.JobStatus r1;
        int i0, $i2, $i3, $i4, $i5, $i6;
        java.lang.String r2, $r5, $r7, $r9;
        long l1;
        java.time.Clock $r3;
        com.android.server.job.JobPackageTracker$DataSet $r4, $r8;
        android.app.job.JobInfo $r6;
        boolean $z0;
        byte b7;

        r0 := @this: com.android.server.job.JobPackageTracker;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = <com.android.server.job.JobSchedulerService: java.time.Clock sUptimeMillisClock>;

        l1 = virtualinvoke $r3.<java.time.Clock: long millis()>();

        $i2 = r1.<com.android.server.job.controllers.JobStatus: int lastEvaluatedPriority>;

        if $i2 < 40 goto label1;

        $r8 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        $i6 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $r9 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        virtualinvoke $r8.<com.android.server.job.JobPackageTracker$DataSet: void decActiveTop(int,java.lang.String,long,int)>($i6, $r9, l1, i0);

        goto label2;

     label1:
        $r4 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        $i3 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $r5 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        virtualinvoke $r4.<com.android.server.job.JobPackageTracker$DataSet: void decActive(int,java.lang.String,long,int)>($i3, $r5, l1, i0);

     label2:
        virtualinvoke r0.<com.android.server.job.JobPackageTracker: void rebatchIfNeeded(long)>(l1);

        $r6 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo getJob()>();

        $z0 = virtualinvoke $r6.<android.app.job.JobInfo: boolean isPeriodic()>();

        if $z0 == 0 goto label3;

        b7 = 2;

        goto label4;

     label3:
        b7 = 4;

     label4:
        $i4 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $r7 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getBatteryName()>();

        $i5 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getJobId()>();

        virtualinvoke r0.<com.android.server.job.JobPackageTracker: void addEvent(int,int,java.lang.String,int,int,java.lang.String)>(b7, $i4, $r7, $i5, i0, r2);

        return;
    }

    public void noteNonpending(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.JobPackageTracker r0;
        com.android.server.job.controllers.JobStatus r1;
        long l0;
        java.time.Clock $r2;
        com.android.server.job.JobPackageTracker$DataSet $r3;
        int $i1;
        java.lang.String $r4;

        r0 := @this: com.android.server.job.JobPackageTracker;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $r2 = <com.android.server.job.JobSchedulerService: java.time.Clock sUptimeMillisClock>;

        l0 = virtualinvoke $r2.<java.time.Clock: long millis()>();

        $r3 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        $i1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $r4 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        virtualinvoke $r3.<com.android.server.job.JobPackageTracker$DataSet: void decPending(int,java.lang.String,long)>($i1, $r4, l0);

        virtualinvoke r0.<com.android.server.job.JobPackageTracker: void rebatchIfNeeded(long)>(l0);

        return;
    }

    public void notePending(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.JobPackageTracker r0;
        com.android.server.job.controllers.JobStatus r1;
        long l0;
        java.time.Clock $r2;
        com.android.server.job.JobPackageTracker$DataSet $r3;
        int $i1;
        java.lang.String $r4;

        r0 := @this: com.android.server.job.JobPackageTracker;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $r2 = <com.android.server.job.JobSchedulerService: java.time.Clock sUptimeMillisClock>;

        l0 = virtualinvoke $r2.<java.time.Clock: long millis()>();

        r1.<com.android.server.job.controllers.JobStatus: long madePending> = l0;

        virtualinvoke r0.<com.android.server.job.JobPackageTracker: void rebatchIfNeeded(long)>(l0);

        $r3 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        $i1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $r4 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        virtualinvoke $r3.<com.android.server.job.JobPackageTracker$DataSet: void incPending(int,java.lang.String,long)>($i1, $r4, l0);

        return;
    }

    void rebatchIfNeeded(long)
    {
        com.android.server.job.JobPackageTracker r0;
        long l0, l1;
        com.android.server.job.JobPackageTracker$DataSet r1, $r2, $r3;
        byte $b2;
        int $i3, $i4;
        com.android.server.job.JobPackageTracker$DataSet[] $r4, r6;

        r0 := @this: com.android.server.job.JobPackageTracker;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        l1 = virtualinvoke $r2.<com.android.server.job.JobPackageTracker$DataSet: long getTotalTime(long)>(l0);

        $b2 = l1 cmp 1800000L;

        if $b2 <= 0 goto label1;

        r1 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet>;

        r1.<com.android.server.job.JobPackageTracker$DataSet: long mSummedTime> = l1;

        $r3 = new com.android.server.job.JobPackageTracker$DataSet;

        specialinvoke $r3.<com.android.server.job.JobPackageTracker$DataSet: void <init>()>();

        r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet mCurDataSet> = $r3;

        virtualinvoke r1.<com.android.server.job.JobPackageTracker$DataSet: void finish(com.android.server.job.JobPackageTracker$DataSet,long)>($r3, l0);

        r6 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet[] mLastDataSets>;

        $i3 = lengthof r6;

        $i4 = $i3 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r6, 1, $i4);

        $r4 = r0.<com.android.server.job.JobPackageTracker: com.android.server.job.JobPackageTracker$DataSet[] mLastDataSets>;

        $r4[0] = r1;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.job.JobPackageTracker: int NUM_HISTORY> = 5;

        <com.android.server.job.JobPackageTracker: int EVENT_STOP_REASON_SHIFT> = 8;

        <com.android.server.job.JobPackageTracker: int EVENT_STOP_REASON_MASK> = 65280;

        <com.android.server.job.JobPackageTracker: int EVENT_STOP_PERIODIC_JOB> = 4;

        <com.android.server.job.JobPackageTracker: int EVENT_STOP_JOB> = 2;

        <com.android.server.job.JobPackageTracker: int EVENT_START_PERIODIC_JOB> = 3;

        <com.android.server.job.JobPackageTracker: int EVENT_START_JOB> = 1;

        <com.android.server.job.JobPackageTracker: int EVENT_NULL> = 0;

        <com.android.server.job.JobPackageTracker: int EVENT_CMD_MASK> = 255;

        <com.android.server.job.JobPackageTracker: int EVENT_BUFFER_SIZE> = 100;

        <com.android.server.job.JobPackageTracker: long BATCHING_TIME> = 1800000L;

        return;
    }
}
