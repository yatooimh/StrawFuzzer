class com.android.server.job.JobSchedulerService$ConstantsObserver extends android.database.ContentObserver
{
    private android.content.ContentResolver mResolver;
    final com.android.server.job.JobSchedulerService this$0;

    public void <init>(com.android.server.job.JobSchedulerService, android.os.Handler)
    {
        com.android.server.job.JobSchedulerService$ConstantsObserver r0;
        com.android.server.job.JobSchedulerService r1;
        android.os.Handler r2;

        r0 := @this: com.android.server.job.JobSchedulerService$ConstantsObserver;

        r1 := @parameter0: com.android.server.job.JobSchedulerService;

        r2 := @parameter1: android.os.Handler;

        r0.<com.android.server.job.JobSchedulerService$ConstantsObserver: com.android.server.job.JobSchedulerService this$0> = r1;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r2);

        return;
    }

    private void updateConstants()
    {
        com.android.server.job.JobSchedulerService$ConstantsObserver r0;
        java.lang.Object r1, $r12;
        com.android.server.job.JobSchedulerService $r2, $r3, $r7, $r9, $r10;
        android.content.ContentResolver $r4;
        com.android.server.job.JobSchedulerService$Constants $r5;
        java.lang.String $r6;
        java.util.List $r8, $r11;
        int $i0, i2;
        com.android.server.job.controllers.StateController $r13;
        java.lang.Throwable $r14, $r15;

        r0 := @this: com.android.server.job.JobSchedulerService$ConstantsObserver;

        $r2 = r0.<com.android.server.job.JobSchedulerService$ConstantsObserver: com.android.server.job.JobSchedulerService this$0>;

        r1 = $r2.<com.android.server.job.JobSchedulerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.job.JobSchedulerService$ConstantsObserver: com.android.server.job.JobSchedulerService this$0>;

        $r5 = $r3.<com.android.server.job.JobSchedulerService: com.android.server.job.JobSchedulerService$Constants mConstants>;

        $r4 = r0.<com.android.server.job.JobSchedulerService$ConstantsObserver: android.content.ContentResolver mResolver>;

        $r6 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r4, "job_scheduler_constants");

        virtualinvoke $r5.<com.android.server.job.JobSchedulerService$Constants: void updateConstantsLocked(java.lang.String)>($r6);

     label02:
        i2 = 0;

     label03:
        $r7 = r0.<com.android.server.job.JobSchedulerService$ConstantsObserver: com.android.server.job.JobSchedulerService this$0>;

        $r8 = $r7.<com.android.server.job.JobSchedulerService: java.util.List mControllers>;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i2 >= $i0 goto label05;

        $r10 = r0.<com.android.server.job.JobSchedulerService$ConstantsObserver: com.android.server.job.JobSchedulerService this$0>;

        $r11 = $r10.<com.android.server.job.JobSchedulerService: java.util.List mControllers>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i2);

        $r13 = (com.android.server.job.controllers.StateController) $r12;

        virtualinvoke $r13.<com.android.server.job.controllers.StateController: void onConstantsUpdatedLocked()>();

     label04:
        i2 = i2 + 1;

        goto label03;

     label05:
        $r9 = r0.<com.android.server.job.JobSchedulerService$ConstantsObserver: com.android.server.job.JobSchedulerService this$0>;

        virtualinvoke $r9.<com.android.server.job.JobSchedulerService: void updateQuotaTracker()>();

     label06:
        goto label10;

     label07:
        $r15 := @caughtexception;

        goto label12;

     label08:
        $r14 := @caughtexception;

     label09:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("JobScheduler", "Bad jobscheduler settings", $r14);

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        exitmonitor r1;

     label13:
        throw $r15;

        catch java.lang.IllegalArgumentException from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.IllegalArgumentException from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.IllegalArgumentException from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
    }

    public void onChange(boolean, android.net.Uri)
    {
        com.android.server.job.JobSchedulerService$ConstantsObserver r0;
        boolean z0;
        android.net.Uri r1;

        r0 := @this: com.android.server.job.JobSchedulerService$ConstantsObserver;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.net.Uri;

        specialinvoke r0.<com.android.server.job.JobSchedulerService$ConstantsObserver: void updateConstants()>();

        return;
    }

    public void start(android.content.ContentResolver)
    {
        com.android.server.job.JobSchedulerService$ConstantsObserver r0;
        android.content.ContentResolver r1;
        android.net.Uri $r2;

        r0 := @this: com.android.server.job.JobSchedulerService$ConstantsObserver;

        r1 := @parameter0: android.content.ContentResolver;

        r0.<com.android.server.job.JobSchedulerService$ConstantsObserver: android.content.ContentResolver mResolver> = r1;

        $r2 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("job_scheduler_constants");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r2, 0, r0);

        specialinvoke r0.<com.android.server.job.JobSchedulerService$ConstantsObserver: void updateConstants()>();

        return;
    }
}
