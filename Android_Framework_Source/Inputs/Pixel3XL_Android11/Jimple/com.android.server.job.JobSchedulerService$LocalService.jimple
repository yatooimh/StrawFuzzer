final class com.android.server.job.JobSchedulerService$LocalService extends java.lang.Object implements com.android.server.job.JobSchedulerInternal
{
    final com.android.server.job.JobSchedulerService this$0;

    void <init>(com.android.server.job.JobSchedulerService)
    {
        com.android.server.job.JobSchedulerService$LocalService r0;
        com.android.server.job.JobSchedulerService r1;

        r0 := @this: com.android.server.job.JobSchedulerService$LocalService;

        r1 := @parameter0: com.android.server.job.JobSchedulerService;

        r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addBackingUpUid(int)
    {
        com.android.server.job.JobSchedulerService$LocalService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.job.JobSchedulerService $r3, $r4;
        android.util.SparseIntArray $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.job.JobSchedulerService$LocalService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        r1 = $r3.<com.android.server.job.JobSchedulerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        $r5 = $r4.<com.android.server.job.JobSchedulerService: android.util.SparseIntArray mBackingUpUids>;

        virtualinvoke $r5.<android.util.SparseIntArray: void put(int,int)>(i0, i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void cancelJobsForUid(int, java.lang.String)
    {
        com.android.server.job.JobSchedulerService$LocalService r0;
        int i0;
        java.lang.String r1;
        com.android.server.job.JobSchedulerService $r2;

        r0 := @this: com.android.server.job.JobSchedulerService$LocalService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        virtualinvoke $r2.<com.android.server.job.JobSchedulerService: boolean cancelJobsForUid(int,java.lang.String)>(i0, r1);

        return;
    }

    public void clearAllBackingUpUids()
    {
        com.android.server.job.JobSchedulerService$LocalService r0;
        java.lang.Object r1;
        com.android.server.job.JobSchedulerService $r3, $r4, $r6, $r8;
        android.util.SparseIntArray $r5, $r7;
        int $i0;
        com.android.server.job.JobSchedulerService$JobHandler $r9;
        android.os.Message $r10;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.job.JobSchedulerService$LocalService;

        $r3 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        r1 = $r3.<com.android.server.job.JobSchedulerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        $r5 = $r4.<com.android.server.job.JobSchedulerService: android.util.SparseIntArray mBackingUpUids>;

        $i0 = virtualinvoke $r5.<android.util.SparseIntArray: int size()>();

        if $i0 <= 0 goto label2;

        $r6 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        $r7 = $r6.<com.android.server.job.JobSchedulerService: android.util.SparseIntArray mBackingUpUids>;

        virtualinvoke $r7.<android.util.SparseIntArray: void clear()>();

        $r8 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        $r9 = $r8.<com.android.server.job.JobSchedulerService: com.android.server.job.JobSchedulerService$JobHandler mHandler>;

        $r10 = virtualinvoke $r9.<com.android.server.job.JobSchedulerService$JobHandler: android.os.Message obtainMessage(int)>(1);

        virtualinvoke $r10.<android.os.Message: void sendToTarget()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.lang.String getMediaBackupPackage()
    {
        com.android.server.job.JobSchedulerService$LocalService r0;
        com.android.server.job.JobSchedulerService $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.job.JobSchedulerService$LocalService;

        $r1 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        $r2 = staticinvoke <com.android.server.job.JobSchedulerService: java.lang.String access$700(com.android.server.job.JobSchedulerService)>($r1);

        return $r2;
    }

    public com.android.server.job.JobSchedulerInternal$JobStorePersistStats getPersistStats()
    {
        com.android.server.job.JobSchedulerService$LocalService r0;
        java.lang.Object r1;
        com.android.server.job.JobSchedulerService $r2, $r3;
        com.android.server.job.JobStore $r4;
        com.android.server.job.JobSchedulerInternal$JobStorePersistStats $r5, r7;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.job.JobSchedulerService$LocalService;

        $r2 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        r1 = $r2.<com.android.server.job.JobSchedulerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r7 = new com.android.server.job.JobSchedulerInternal$JobStorePersistStats;

        $r3 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        $r4 = $r3.<com.android.server.job.JobSchedulerService: com.android.server.job.JobStore mJobs>;

        $r5 = virtualinvoke $r4.<com.android.server.job.JobStore: com.android.server.job.JobSchedulerInternal$JobStorePersistStats getPersistStats()>();

        specialinvoke r7.<com.android.server.job.JobSchedulerInternal$JobStorePersistStats: void <init>(com.android.server.job.JobSchedulerInternal$JobStorePersistStats)>($r5);

        exitmonitor r1;

     label2:
        return r7;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getSystemScheduledPendingJobs()
    {
        com.android.server.job.JobSchedulerService$LocalService r0;
        java.lang.Object r1;
        com.android.server.job.JobStore r2;
        com.android.server.job._$$Lambda$JobSchedulerService$LocalService$yaChpLJ2odu2Fk7A6H8erUndrN8 r3;
        com.android.server.job.JobSchedulerService $r4, $r5;
        java.lang.Throwable $r6;
        java.util.ArrayList r7;

        r0 := @this: com.android.server.job.JobSchedulerService$LocalService;

        $r4 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        r1 = $r4.<com.android.server.job.JobSchedulerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        r2 = $r5.<com.android.server.job.JobSchedulerService: com.android.server.job.JobStore mJobs>;

        r3 = new com.android.server.job._$$Lambda$JobSchedulerService$LocalService$yaChpLJ2odu2Fk7A6H8erUndrN8;

        specialinvoke r3.<com.android.server.job._$$Lambda$JobSchedulerService$LocalService$yaChpLJ2odu2Fk7A6H8erUndrN8: void <init>(com.android.server.job.JobSchedulerService$LocalService,java.util.List)>(r0, r7);

        virtualinvoke r2.<com.android.server.job.JobStore: void forEachJob(int,java.util.function.Consumer)>(1000, r3);

        exitmonitor r1;

     label2:
        return r7;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$getSystemScheduledPendingJobs$0$JobSchedulerService$LocalService(java.util.List, com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.JobSchedulerService$LocalService r0;
        java.util.List r1;
        com.android.server.job.controllers.JobStatus r2;
        android.app.job.JobInfo $r3, $r4;
        boolean $z0, $z2;
        com.android.server.job.JobSchedulerService $r5;

        r0 := @this: com.android.server.job.JobSchedulerService$LocalService;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: com.android.server.job.controllers.JobStatus;

        $r3 = virtualinvoke r2.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo getJob()>();

        $z0 = virtualinvoke $r3.<android.app.job.JobInfo: boolean isPeriodic()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        $z2 = staticinvoke <com.android.server.job.JobSchedulerService: boolean access$800(com.android.server.job.JobSchedulerService,com.android.server.job.controllers.JobStatus)>($r5, r2);

        if $z2 != 0 goto label2;

     label1:
        $r4 = virtualinvoke r2.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo getJob()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

     label2:
        return;
    }

    public void removeBackingUpUid(int)
    {
        com.android.server.job.JobSchedulerService$LocalService r0;
        int i0, $i1;
        java.lang.Object r1;
        com.android.server.job.JobSchedulerService $r3, $r4, $r6, $r8;
        android.util.SparseIntArray $r5;
        com.android.server.job.JobStore $r7;
        com.android.server.job.JobSchedulerService$JobHandler $r9;
        android.os.Message $r10;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.job.JobSchedulerService$LocalService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        r1 = $r3.<com.android.server.job.JobSchedulerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        $r5 = $r4.<com.android.server.job.JobSchedulerService: android.util.SparseIntArray mBackingUpUids>;

        virtualinvoke $r5.<android.util.SparseIntArray: void delete(int)>(i0);

        $r6 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        $r7 = $r6.<com.android.server.job.JobSchedulerService: com.android.server.job.JobStore mJobs>;

        $i1 = virtualinvoke $r7.<com.android.server.job.JobStore: int countJobsForUid(int)>(i0);

        if $i1 <= 0 goto label2;

        $r8 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        $r9 = $r8.<com.android.server.job.JobSchedulerService: com.android.server.job.JobSchedulerService$JobHandler mHandler>;

        $r10 = virtualinvoke $r9.<com.android.server.job.JobSchedulerService$JobHandler: android.os.Message obtainMessage(int)>(1);

        virtualinvoke $r10.<android.os.Message: void sendToTarget()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void reportAppUsage(java.lang.String, int)
    {
        com.android.server.job.JobSchedulerService$LocalService r0;
        java.lang.String r1;
        int i0;
        com.android.server.job.JobSchedulerService $r2;

        r0 := @this: com.android.server.job.JobSchedulerService$LocalService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.job.JobSchedulerService$LocalService: com.android.server.job.JobSchedulerService this$0>;

        virtualinvoke $r2.<com.android.server.job.JobSchedulerService: void reportAppUsage(java.lang.String,int)>(r1, i0);

        return;
    }
}
