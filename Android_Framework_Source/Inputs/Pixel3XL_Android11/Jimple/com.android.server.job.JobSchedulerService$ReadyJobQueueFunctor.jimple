final class com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor extends java.lang.Object implements java.util.function.Consumer
{
    final java.util.ArrayList newReadyJobs;
    final com.android.server.job.JobSchedulerService this$0;

    void <init>(com.android.server.job.JobSchedulerService)
    {
        com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor r0;
        com.android.server.job.JobSchedulerService r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor;

        r1 := @parameter0: com.android.server.job.JobSchedulerService;

        r0.<com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor: com.android.server.job.JobSchedulerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor: java.util.ArrayList newReadyJobs> = $r2;

        return;
    }

    public void accept(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor r0;
        com.android.server.job.controllers.JobStatus r1;
        com.android.server.job.JobSchedulerService $r3, $r4;
        boolean $z0, $z1;
        java.util.ArrayList $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r8, $r10;

        r0 := @this: com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $r3 = r0.<com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor: com.android.server.job.JobSchedulerService this$0>;

        $z0 = virtualinvoke $r3.<com.android.server.job.JobSchedulerService: boolean isReadyToBeExecutedLocked(com.android.server.job.controllers.JobStatus)>(r1);

        if $z0 == 0 goto label2;

        $z1 = <com.android.server.job.JobSchedulerService: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    queued ");

        $r8 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String toShortString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("JobScheduler", $r10);

     label1:
        $r5 = r0.<com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor: java.util.ArrayList newReadyJobs>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        goto label3;

     label2:
        $r4 = r0.<com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor: com.android.server.job.JobSchedulerService this$0>;

        virtualinvoke $r4.<com.android.server.job.JobSchedulerService: void evaluateControllerStatesLocked(com.android.server.job.controllers.JobStatus)>(r1);

     label3:
        return;
    }

    public volatile void accept(java.lang.Object)
    {
        com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor r0;
        java.lang.Object r1;
        com.android.server.job.controllers.JobStatus $r2;

        r0 := @this: com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.server.job.controllers.JobStatus) r1;

        virtualinvoke r0.<com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor: void accept(com.android.server.job.controllers.JobStatus)>($r2);

        return;
    }

    public void postProcess()
    {
        com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor r0;
        java.util.ArrayList $r1, $r4, $r5, $r7, $r8, $r10;
        com.android.server.job.JobSchedulerService $r2, $r3, $r6, $r9;
        int $i0;
        java.util.Comparator $r11;

        r0 := @this: com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor;

        $r2 = r0.<com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor: com.android.server.job.JobSchedulerService this$0>;

        $r1 = r0.<com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor: java.util.ArrayList newReadyJobs>;

        virtualinvoke $r2.<com.android.server.job.JobSchedulerService: void noteJobsPending(java.util.List)>($r1);

        $r3 = r0.<com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor: com.android.server.job.JobSchedulerService this$0>;

        $r5 = $r3.<com.android.server.job.JobSchedulerService: java.util.ArrayList mPendingJobs>;

        $r4 = r0.<com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor: java.util.ArrayList newReadyJobs>;

        virtualinvoke $r5.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r4);

        $r6 = r0.<com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor: com.android.server.job.JobSchedulerService this$0>;

        $r7 = $r6.<com.android.server.job.JobSchedulerService: java.util.ArrayList mPendingJobs>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i0 <= 1 goto label1;

        $r9 = r0.<com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor: com.android.server.job.JobSchedulerService this$0>;

        $r10 = $r9.<com.android.server.job.JobSchedulerService: java.util.ArrayList mPendingJobs>;

        $r11 = staticinvoke <com.android.server.job.JobSchedulerService: java.util.Comparator access$200()>();

        virtualinvoke $r10.<java.util.ArrayList: void sort(java.util.Comparator)>($r11);

     label1:
        $r8 = r0.<com.android.server.job.JobSchedulerService$ReadyJobQueueFunctor: java.util.ArrayList newReadyJobs>;

        virtualinvoke $r8.<java.util.ArrayList: void clear()>();

        return;
    }
}
