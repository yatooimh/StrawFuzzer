public final class com.android.server.job.JobStore$JobSet extends java.lang.Object
{
    final android.util.SparseArray mJobs;
    final android.util.SparseArray mJobsPerSourceUid;

    public void <init>()
    {
        com.android.server.job.JobStore$JobSet r0;
        android.util.SparseArray $r1, $r2;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs> = $r1;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobsPerSourceUid> = $r2;

        return;
    }

    static boolean lambda$removeJobsOfNonUsers$0(int[], com.android.server.job.controllers.JobStatus)
    {
        int[] r0;
        com.android.server.job.controllers.JobStatus r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @parameter0: int[];

        r1 := @parameter1: com.android.server.job.controllers.JobStatus;

        $i0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUserId()>();

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(int[],int)>(r0, $i0);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    static boolean lambda$removeJobsOfNonUsers$1(int[], com.android.server.job.controllers.JobStatus)
    {
        int[] r0;
        com.android.server.job.controllers.JobStatus r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @parameter0: int[];

        r1 := @parameter1: com.android.server.job.controllers.JobStatus;

        $i0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getUserId()>();

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(int[],int)>(r0, $i0);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    private void removeAll(java.util.function.Predicate)
    {
        com.android.server.job.JobStore$JobSet r0;
        java.util.function.Predicate r1;
        android.util.SparseArray $r2, $r3, $r4, $r6, $r7, $r9;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object $r5, $r8;
        android.util.ArraySet r10, r11;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        r1 := @parameter0: java.util.function.Predicate;

        $r2 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i4 = $i0 - 1;

     label1:
        if i4 < 0 goto label3;

        $r7 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r10 = (android.util.ArraySet) $r8;

        virtualinvoke r10.<android.util.ArraySet: boolean removeIf(java.util.function.Predicate)>(r1);

        $i3 = virtualinvoke r10.<android.util.ArraySet: int size()>();

        if $i3 != 0 goto label2;

        $r9 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        virtualinvoke $r9.<android.util.SparseArray: void removeAt(int)>(i4);

     label2:
        i4 = i4 + -1;

        goto label1;

     label3:
        $r3 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobsPerSourceUid>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i5 = $i1 - 1;

     label4:
        if i5 < 0 goto label6;

        $r4 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobsPerSourceUid>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r11 = (android.util.ArraySet) $r5;

        virtualinvoke r11.<android.util.ArraySet: boolean removeIf(java.util.function.Predicate)>(r1);

        $i2 = virtualinvoke r11.<android.util.ArraySet: int size()>();

        if $i2 != 0 goto label5;

        $r6 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobsPerSourceUid>;

        virtualinvoke $r6.<android.util.SparseArray: void removeAt(int)>(i5);

     label5:
        i5 = i5 + -1;

        goto label4;

     label6:
        return;
    }

    public boolean add(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.JobStore$JobSet r0;
        int i0, i1;
        android.util.ArraySet r1, $r12, $r14, r17, r18, r19;
        boolean z0, z1, z2;
        android.util.SparseArray $r2, $r4, $r13, $r15;
        java.lang.Object $r3, $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r11;
        com.android.server.job.controllers.JobStatus r16;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        r16 := @parameter0: com.android.server.job.controllers.JobStatus;

        i0 = virtualinvoke r16.<com.android.server.job.controllers.JobStatus: int getUid()>();

        i1 = virtualinvoke r16.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $r2 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r17 = (android.util.ArraySet) $r3;

        r18 = r17;

        if r17 != null goto label1;

        $r14 = new android.util.ArraySet;

        specialinvoke $r14.<android.util.ArraySet: void <init>()>();

        r18 = $r14;

        $r15 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        virtualinvoke $r15.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r14);

     label1:
        $r4 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobsPerSourceUid>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r1 = (android.util.ArraySet) $r5;

        r19 = r1;

        if r1 != null goto label2;

        $r12 = new android.util.ArraySet;

        specialinvoke $r12.<android.util.ArraySet: void <init>()>();

        r19 = $r12;

        $r13 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobsPerSourceUid>;

        virtualinvoke $r13.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, $r12);

     label2:
        z0 = virtualinvoke r18.<android.util.ArraySet: boolean add(java.lang.Object)>(r16);

        z1 = virtualinvoke r19.<android.util.ArraySet: boolean add(java.lang.Object)>(r16);

        if z0 == z1 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mJobs and mJobsPerSourceUid mismatch; caller= ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" source= ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("JobStore", $r11);

     label3:
        if z0 != 0 goto label5;

        if z1 == 0 goto label4;

        goto label5;

     label4:
        z2 = 0;

        goto label6;

     label5:
        z2 = 1;

     label6:
        return z2;
    }

    public void clear()
    {
        com.android.server.job.JobStore$JobSet r0;
        android.util.SparseArray $r1, $r2;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        $r1 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        virtualinvoke $r1.<android.util.SparseArray: void clear()>();

        $r2 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobsPerSourceUid>;

        virtualinvoke $r2.<android.util.SparseArray: void clear()>();

        return;
    }

    public boolean contains(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.JobStore$JobSet r0;
        com.android.server.job.controllers.JobStatus r1;
        int i0;
        android.util.ArraySet r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        boolean $z0, z1;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        i0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getUid()>();

        $r3 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.ArraySet) $r4;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public int countJobsForUid(int)
    {
        com.android.server.job.JobStore$JobSet r0;
        android.util.ArraySet r1;
        com.android.server.job.controllers.JobStatus r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r5;
        int $i1, $i2, $i3, i4, i5, i6, i7, i8;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        i4 := @parameter0: int;

        i5 = 0;

        $r3 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i4);

        r1 = (android.util.ArraySet) $r4;

        if r1 == null goto label3;

        $i1 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i6 = $i1 - 1;

        i7 = 0;

     label1:
        i5 = i7;

        if i6 < 0 goto label3;

        $r5 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i6);

        r2 = (com.android.server.job.controllers.JobStatus) $r5;

        i8 = i7;

        $i2 = virtualinvoke r2.<com.android.server.job.controllers.JobStatus: int getUid()>();

        $i3 = virtualinvoke r2.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        if $i2 != $i3 goto label2;

        i8 = i7 + 1;

     label2:
        i6 = i6 + -1;

        i7 = i8;

        goto label1;

     label3:
        return i5;
    }

    public void forEachJob(int, java.util.function.Consumer)
    {
        com.android.server.job.JobStore$JobSet r0;
        java.util.function.Consumer r1;
        android.util.ArraySet r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r5;
        int $i0, i1, i2;
        com.android.server.job.controllers.JobStatus $r6;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        i1 := @parameter0: int;

        r1 := @parameter1: java.util.function.Consumer;

        $r3 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r2 = (android.util.ArraySet) $r4;

        if r2 == null goto label2;

        $i0 = virtualinvoke r2.<android.util.ArraySet: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label2;

        $r5 = virtualinvoke r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        $r6 = (com.android.server.job.controllers.JobStatus) $r5;

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r6);

        i2 = i2 + -1;

        goto label1;

     label2:
        return;
    }

    public void forEachJob(java.util.function.Predicate, java.util.function.Consumer)
    {
        com.android.server.job.JobStore$JobSet r0;
        java.util.function.Predicate r1;
        java.util.function.Consumer r2;
        android.util.ArraySet r3;
        com.android.server.job.controllers.JobStatus r4;
        android.util.SparseArray $r5, $r6;
        int $i0, $i1, i2, i3;
        java.lang.Object $r7, $r8;
        boolean $z0;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        r1 := @parameter0: java.util.function.Predicate;

        r2 := @parameter1: java.util.function.Consumer;

        $r5 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $i0 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label6;

        $r6 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r3 = (android.util.ArraySet) $r7;

        if r3 == null goto label5;

        $i1 = virtualinvoke r3.<android.util.ArraySet: int size()>();

        i3 = $i1 - 1;

     label2:
        if i3 < 0 goto label5;

        $r8 = virtualinvoke r3.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        r4 = (com.android.server.job.controllers.JobStatus) $r8;

        if r1 == null goto label3;

        $z0 = interfaceinvoke r1.<java.util.function.Predicate: boolean test(java.lang.Object)>(r4);

        if $z0 == 0 goto label4;

     label3:
        interfaceinvoke r2.<java.util.function.Consumer: void accept(java.lang.Object)>(r4);

     label4:
        i3 = i3 + -1;

        goto label2;

     label5:
        i2 = i2 + -1;

        goto label1;

     label6:
        return;
    }

    public void forEachJobForSourceUid(int, java.util.function.Consumer)
    {
        com.android.server.job.JobStore$JobSet r0;
        java.util.function.Consumer r1;
        android.util.ArraySet r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r5;
        int $i0, i1, i2;
        com.android.server.job.controllers.JobStatus $r6;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        i1 := @parameter0: int;

        r1 := @parameter1: java.util.function.Consumer;

        $r3 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobsPerSourceUid>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r2 = (android.util.ArraySet) $r4;

        if r2 == null goto label2;

        $i0 = virtualinvoke r2.<android.util.ArraySet: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label2;

        $r5 = virtualinvoke r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        $r6 = (com.android.server.job.controllers.JobStatus) $r5;

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r6);

        i2 = i2 + -1;

        goto label1;

     label2:
        return;
    }

    public com.android.server.job.controllers.JobStatus get(int, int)
    {
        com.android.server.job.JobStore$JobSet r0;
        int i0, $i1, $i2, i3, i4;
        android.util.ArraySet r1;
        com.android.server.job.controllers.JobStatus r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r5;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r1 = (android.util.ArraySet) $r4;

        if r1 == null goto label3;

        $i1 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i4 = $i1 - 1;

     label1:
        if i4 < 0 goto label3;

        $r5 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        r2 = (com.android.server.job.controllers.JobStatus) $r5;

        $i2 = virtualinvoke r2.<com.android.server.job.controllers.JobStatus: int getJobId()>();

        if $i2 != i0 goto label2;

        return r2;

     label2:
        i4 = i4 + -1;

        goto label1;

     label3:
        return null;
    }

    public java.util.List getAllJobs()
    {
        com.android.server.job.JobStore$JobSet r0;
        android.util.ArraySet r2;
        java.util.ArrayList $r3;
        int $i0, $i1, $i2, i3, i4;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r7;
        com.android.server.job.controllers.JobStatus $r8;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        $r3 = new java.util.ArrayList;

        $i0 = virtualinvoke r0.<com.android.server.job.JobStore$JobSet: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label4;

        $r5 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r2 = (android.util.ArraySet) $r6;

        if r2 == null goto label3;

        $i2 = virtualinvoke r2.<android.util.ArraySet: int size()>();

        i4 = $i2 - 1;

     label2:
        if i4 < 0 goto label3;

        $r7 = virtualinvoke r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        $r8 = (com.android.server.job.controllers.JobStatus) $r7;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        i4 = i4 + -1;

        goto label2;

     label3:
        i3 = i3 + -1;

        goto label1;

     label4:
        return $r3;
    }

    public java.util.List getJobsByUid(int)
    {
        com.android.server.job.JobStore$JobSet r0;
        int i0;
        android.util.ArraySet r2;
        java.util.ArrayList $r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        i0 := @parameter0: int;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.ArraySet) $r5;

        if r2 == null goto label1;

        virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r2);

     label1:
        return $r3;
    }

    public java.util.List getJobsByUser(int)
    {
        com.android.server.job.JobStore$JobSet r0;
        int i0, $i1, $i2, $i3, i4;
        android.util.ArraySet r2;
        java.util.ArrayList $r3;
        android.util.SparseArray $r4, $r5, $r6;
        java.lang.Object $r7;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        i0 := @parameter0: int;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobsPerSourceUid>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i4 = $i1 - 1;

     label1:
        if i4 < 0 goto label3;

        $r5 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobsPerSourceUid>;

        $i2 = virtualinvoke $r5.<android.util.SparseArray: int keyAt(int)>(i4);

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        if $i3 != i0 goto label2;

        $r6 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobsPerSourceUid>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r2 = (android.util.ArraySet) $r7;

        if r2 == null goto label2;

        virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r2);

     label2:
        i4 = i4 + -1;

        goto label1;

     label3:
        return $r3;
    }

    public boolean remove(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.JobStore$JobSet r0;
        int i0, i1, $i2, $i3;
        android.util.ArraySet r1, r2;
        android.util.SparseArray $r3, $r5, $r7, $r8;
        java.lang.Object $r4, $r6;
        java.lang.StringBuilder $r9;
        java.lang.String $r14;
        boolean $z0, $z1, z2, z3;
        com.android.server.job.controllers.JobStatus r15;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        r15 := @parameter0: com.android.server.job.controllers.JobStatus;

        i0 = virtualinvoke r15.<com.android.server.job.controllers.JobStatus: int getUid()>();

        $r3 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.ArraySet) $r4;

        i1 = virtualinvoke r15.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $r5 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobsPerSourceUid>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r2 = (android.util.ArraySet) $r6;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.util.ArraySet: boolean remove(java.lang.Object)>(r15);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<android.util.ArraySet: boolean remove(java.lang.Object)>(r15);

        if $z0 == 0 goto label3;

        z3 = 1;

        goto label4;

     label3:
        z3 = 0;

     label4:
        if z2 == z3 goto label5;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job presence mismatch; caller=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" source=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("JobStore", $r14);

     label5:
        if z2 != 0 goto label7;

        if z3 == 0 goto label6;

        goto label7;

     label6:
        return 0;

     label7:
        if r1 == null goto label8;

        $i3 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        if $i3 != 0 goto label8;

        $r8 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        virtualinvoke $r8.<android.util.SparseArray: void remove(int)>(i0);

     label8:
        if r2 == null goto label9;

        $i2 = virtualinvoke r2.<android.util.ArraySet: int size()>();

        if $i2 != 0 goto label9;

        $r7 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobsPerSourceUid>;

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>(i1);

     label9:
        return 1;
    }

    public void removeJobsOfNonUsers(int[])
    {
        com.android.server.job.JobStore$JobSet r0;
        int[] r1;
        com.android.server.job._$$Lambda$JobStore$JobSet$D9839QVHHu4X_hnxouyIMkP5NWA $r2;
        com.android.server.job._$$Lambda$JobStore$JobSet$id1Y3Yh8Y9sEb_njlNCUNay6U9k $r3;
        java.util.function.Predicate $r4;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        r1 := @parameter0: int[];

        $r2 = new com.android.server.job._$$Lambda$JobStore$JobSet$D9839QVHHu4X_hnxouyIMkP5NWA;

        specialinvoke $r2.<com.android.server.job._$$Lambda$JobStore$JobSet$D9839QVHHu4X_hnxouyIMkP5NWA: void <init>(int[])>(r1);

        $r3 = new com.android.server.job._$$Lambda$JobStore$JobSet$id1Y3Yh8Y9sEb_njlNCUNay6U9k;

        specialinvoke $r3.<com.android.server.job._$$Lambda$JobStore$JobSet$id1Y3Yh8Y9sEb_njlNCUNay6U9k: void <init>(int[])>(r1);

        $r4 = interfaceinvoke $r2.<java.util.function.Predicate: java.util.function.Predicate or(java.util.function.Predicate)>($r3);

        specialinvoke r0.<com.android.server.job.JobStore$JobSet: void removeAll(java.util.function.Predicate)>($r4);

        return;
    }

    public int size()
    {
        com.android.server.job.JobStore$JobSet r0;
        android.util.SparseArray $r1, $r2;
        int $i0, $i1, i2, i3;
        java.lang.Object $r3;
        android.util.ArraySet $r4;

        r0 := @this: com.android.server.job.JobStore$JobSet;

        i2 = 0;

        $r1 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label2;

        $r2 = r0.<com.android.server.job.JobStore$JobSet: android.util.SparseArray mJobs>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r4 = (android.util.ArraySet) $r3;

        $i1 = virtualinvoke $r4.<android.util.ArraySet: int size()>();

        i2 = i2 + $i1;

        i3 = i3 + -1;

        goto label1;

     label2:
        return i2;
    }
}
