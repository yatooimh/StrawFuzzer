class com.android.server.job.controllers.BackgroundJobsController$1 extends com.android.server.AppStateTracker$Listener
{
    final com.android.server.job.controllers.BackgroundJobsController this$0;

    void <init>(com.android.server.job.controllers.BackgroundJobsController)
    {
        com.android.server.job.controllers.BackgroundJobsController$1 r0;
        com.android.server.job.controllers.BackgroundJobsController r1;

        r0 := @this: com.android.server.job.controllers.BackgroundJobsController$1;

        r1 := @parameter0: com.android.server.job.controllers.BackgroundJobsController;

        r0.<com.android.server.job.controllers.BackgroundJobsController$1: com.android.server.job.controllers.BackgroundJobsController this$0> = r1;

        specialinvoke r0.<com.android.server.AppStateTracker$Listener: void <init>()>();

        return;
    }

    public void updateAllJobs()
    {
        com.android.server.job.controllers.BackgroundJobsController$1 r0;
        java.lang.Object r1;
        com.android.server.job.controllers.BackgroundJobsController $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.job.controllers.BackgroundJobsController$1;

        $r3 = r0.<com.android.server.job.controllers.BackgroundJobsController$1: com.android.server.job.controllers.BackgroundJobsController this$0>;

        r1 = $r3.<com.android.server.job.controllers.BackgroundJobsController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.job.controllers.BackgroundJobsController$1: com.android.server.job.controllers.BackgroundJobsController this$0>;

        staticinvoke <com.android.server.job.controllers.BackgroundJobsController: void access$000(com.android.server.job.controllers.BackgroundJobsController)>($r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void updateJobsForUid(int, boolean)
    {
        com.android.server.job.controllers.BackgroundJobsController$1 r0;
        int i0;
        boolean z0;
        java.lang.Object r1;
        com.android.server.job.controllers.BackgroundJobsController $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.job.controllers.BackgroundJobsController$1;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.server.job.controllers.BackgroundJobsController$1: com.android.server.job.controllers.BackgroundJobsController this$0>;

        r1 = $r3.<com.android.server.job.controllers.BackgroundJobsController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.job.controllers.BackgroundJobsController$1: com.android.server.job.controllers.BackgroundJobsController this$0>;

        staticinvoke <com.android.server.job.controllers.BackgroundJobsController: void access$100(com.android.server.job.controllers.BackgroundJobsController,int,boolean)>($r4, i0, z0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void updateJobsForUidPackage(int, java.lang.String, boolean)
    {
        com.android.server.job.controllers.BackgroundJobsController$1 r0;
        int i0;
        boolean z0;
        com.android.server.job.controllers.BackgroundJobsController $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;
        java.lang.Object r6;

        r0 := @this: com.android.server.job.controllers.BackgroundJobsController$1;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = r0.<com.android.server.job.controllers.BackgroundJobsController$1: com.android.server.job.controllers.BackgroundJobsController this$0>;

        r6 = $r2.<com.android.server.job.controllers.BackgroundJobsController: java.lang.Object mLock>;

        entermonitor r6;

     label1:
        $r3 = r0.<com.android.server.job.controllers.BackgroundJobsController$1: com.android.server.job.controllers.BackgroundJobsController this$0>;

        staticinvoke <com.android.server.job.controllers.BackgroundJobsController: void access$100(com.android.server.job.controllers.BackgroundJobsController,int,boolean)>($r3, i0, z0);

        exitmonitor r6;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r6;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
