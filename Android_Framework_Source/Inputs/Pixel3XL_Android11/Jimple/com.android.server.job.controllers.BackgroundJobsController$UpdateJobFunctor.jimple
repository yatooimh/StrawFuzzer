final class com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor extends java.lang.Object implements java.util.function.Consumer
{
    final int activeState;
    boolean mChanged;
    int mCheckedCount;
    int mTotalCount;
    final com.android.server.job.controllers.BackgroundJobsController this$0;

    public void <init>(com.android.server.job.controllers.BackgroundJobsController, int)
    {
        com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor r0;
        com.android.server.job.controllers.BackgroundJobsController r1;
        int i0;

        r0 := @this: com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor;

        r1 := @parameter0: com.android.server.job.controllers.BackgroundJobsController;

        i0 := @parameter1: int;

        r0.<com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor: com.android.server.job.controllers.BackgroundJobsController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor: boolean mChanged> = 0;

        r0.<com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor: int mTotalCount> = 0;

        r0.<com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor: int mCheckedCount> = 0;

        r0.<com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor: int activeState> = i0;

        return;
    }

    public void accept(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor r0;
        com.android.server.job.controllers.JobStatus r1;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.server.job.controllers.BackgroundJobsController $r2;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor: int mTotalCount>;

        $i1 = $i0 + 1;

        r0.<com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor: int mTotalCount> = $i1;

        $i2 = r0.<com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor: int mCheckedCount>;

        $i3 = $i2 + 1;

        r0.<com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor: int mCheckedCount> = $i3;

        $r2 = r0.<com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor: com.android.server.job.controllers.BackgroundJobsController this$0>;

        $i4 = r0.<com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor: int activeState>;

        $z0 = virtualinvoke $r2.<com.android.server.job.controllers.BackgroundJobsController: boolean updateSingleJobRestrictionLocked(com.android.server.job.controllers.JobStatus,int)>(r1, $i4);

        if $z0 == 0 goto label1;

        r0.<com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor: boolean mChanged> = 1;

     label1:
        return;
    }

    public volatile void accept(java.lang.Object)
    {
        com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor r0;
        java.lang.Object r1;
        com.android.server.job.controllers.JobStatus $r2;

        r0 := @this: com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.server.job.controllers.JobStatus) r1;

        virtualinvoke r0.<com.android.server.job.controllers.BackgroundJobsController$UpdateJobFunctor: void accept(com.android.server.job.controllers.JobStatus)>($r2);

        return;
    }
}
