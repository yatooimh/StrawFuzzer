public final class com.android.server.job.controllers.BatteryController extends com.android.server.job.controllers.RestrictingController
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker;
    private final android.util.ArraySet mTrackedTasks;

    static void <clinit>()
    {
        boolean $z0, $z1, z2;

        <com.android.server.job.controllers.BatteryController: java.lang.String TAG> = "JobScheduler.Battery";

        $z0 = <com.android.server.job.JobSchedulerService: boolean DEBUG>;

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("JobScheduler.Battery", 3);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        <com.android.server.job.controllers.BatteryController: boolean DEBUG> = z2;

        return;
    }

    public void <init>(com.android.server.job.JobSchedulerService)
    {
        com.android.server.job.controllers.BatteryController r0;
        android.util.ArraySet $r1;
        com.android.server.job.controllers.BatteryController$ChargingTracker $r2;
        com.android.server.job.JobSchedulerService r3;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        r3 := @parameter0: com.android.server.job.JobSchedulerService;

        specialinvoke r0.<com.android.server.job.controllers.RestrictingController: void <init>(com.android.server.job.JobSchedulerService)>(r3);

        $r1 = new android.util.ArraySet;

        specialinvoke $r1.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.job.controllers.BatteryController: android.util.ArraySet mTrackedTasks> = $r1;

        $r2 = new com.android.server.job.controllers.BatteryController$ChargingTracker;

        specialinvoke $r2.<com.android.server.job.controllers.BatteryController$ChargingTracker: void <init>(com.android.server.job.controllers.BatteryController)>(r0);

        r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker> = $r2;

        virtualinvoke $r2.<com.android.server.job.controllers.BatteryController$ChargingTracker: void startTracking()>();

        return;
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = <com.android.server.job.controllers.BatteryController: boolean DEBUG>;

        return $z0;
    }

    static void access$100(com.android.server.job.controllers.BatteryController)
    {
        com.android.server.job.controllers.BatteryController r0;

        r0 := @parameter0: com.android.server.job.controllers.BatteryController;

        specialinvoke r0.<com.android.server.job.controllers.BatteryController: void maybeReportNewChargingStateLocked()>();

        return;
    }

    private void maybeReportNewChargingStateLocked()
    {
        com.android.server.job.controllers.BatteryController r0;
        boolean z0, z1, $z2, $z3, $z4, z5;
        com.android.server.job.controllers.BatteryController$ChargingTracker $r1, $r2;
        android.util.ArraySet $r3, $r6;
        int $i0, i2;
        com.android.server.job.StateChangedListener $r4, $r5;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r11;
        com.android.server.job.controllers.JobStatus r13;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        $r1 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        z0 = virtualinvoke $r1.<com.android.server.job.controllers.BatteryController$ChargingTracker: boolean isOnStablePower()>();

        $r2 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        z1 = virtualinvoke $r2.<com.android.server.job.controllers.BatteryController$ChargingTracker: boolean isBatteryNotLow()>();

        $z2 = <com.android.server.job.controllers.BatteryController: boolean DEBUG>;

        if $z2 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maybeReportNewChargingStateLocked: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("JobScheduler.Battery", $r11);

     label1:
        z5 = 0;

        $r3 = r0.<com.android.server.job.controllers.BatteryController: android.util.ArraySet mTrackedTasks>;

        $i0 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        i2 = $i0 - 1;

     label2:
        if i2 < 0 goto label5;

        $r6 = r0.<com.android.server.job.controllers.BatteryController: android.util.ArraySet mTrackedTasks>;

        $r7 = virtualinvoke $r6.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        r13 = (com.android.server.job.controllers.JobStatus) $r7;

        $z3 = virtualinvoke r13.<com.android.server.job.controllers.JobStatus: boolean setChargingConstraintSatisfied(boolean)>(z0);

        if $z3 == z0 goto label3;

        z5 = 1;

     label3:
        $z4 = virtualinvoke r13.<com.android.server.job.controllers.JobStatus: boolean setBatteryNotLowConstraintSatisfied(boolean)>(z1);

        if $z4 == z1 goto label4;

        z5 = 1;

     label4:
        i2 = i2 + -1;

        goto label2;

     label5:
        if z0 != 0 goto label7;

        if z1 == 0 goto label6;

        goto label7;

     label6:
        if z5 == 0 goto label8;

        $r5 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.StateChangedListener mStateChangedListener>;

        interfaceinvoke $r5.<com.android.server.job.StateChangedListener: void onControllerStateChanged()>();

        goto label8;

     label7:
        $r4 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.StateChangedListener mStateChangedListener>;

        interfaceinvoke $r4.<com.android.server.job.StateChangedListener: void onRunJobNow(com.android.server.job.controllers.JobStatus)>(null);

     label8:
        return;
    }

    public void dumpControllerStateLocked(android.util.proto.ProtoOutputStream, long, java.util.function.Predicate)
    {
        com.android.server.job.controllers.BatteryController r0;
        android.util.proto.ProtoOutputStream r1;
        java.util.function.Predicate r2;
        long l0, l1, l5, l6;
        com.android.server.job.controllers.JobStatus r3;
        com.android.server.job.controllers.BatteryController$ChargingTracker $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;
        int $i2, $i3, $i4, i7;
        android.util.ArraySet $r8, $r9;
        java.lang.Object $r10;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l5 := @parameter1: long;

        r2 := @parameter2: java.util.function.Predicate;

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l5);

        l6 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268034L);

        $r4 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        $z0 = virtualinvoke $r4.<com.android.server.job.controllers.BatteryController$ChargingTracker: boolean isOnStablePower()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366145L, $z0);

        $r5 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        $z1 = virtualinvoke $r5.<com.android.server.job.controllers.BatteryController$ChargingTracker: boolean isBatteryNotLow()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366146L, $z1);

        $r6 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        $z2 = virtualinvoke $r6.<com.android.server.job.controllers.BatteryController$ChargingTracker: boolean isMonitoring()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366147L, $z2);

        $r7 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        $i2 = virtualinvoke $r7.<com.android.server.job.controllers.BatteryController$ChargingTracker: int getSeq()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i2);

        i7 = 0;

     label1:
        $r8 = r0.<com.android.server.job.controllers.BatteryController: android.util.ArraySet mTrackedTasks>;

        $i3 = virtualinvoke $r8.<android.util.ArraySet: int size()>();

        if i7 >= $i3 goto label4;

        $r9 = r0.<com.android.server.job.controllers.BatteryController: android.util.ArraySet mTrackedTasks>;

        $r10 = virtualinvoke $r9.<android.util.ArraySet: java.lang.Object valueAt(int)>(i7);

        r3 = (com.android.server.job.controllers.JobStatus) $r10;

        $z3 = interfaceinvoke r2.<java.util.function.Predicate: boolean test(java.lang.Object)>(r3);

        if $z3 != 0 goto label2;

        goto label3;

     label2:
        l1 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895813L);

        virtualinvoke r3.<com.android.server.job.controllers.JobStatus: void writeToShortProto(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268033L);

        $i4 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i4);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

     label3:
        i7 = i7 + 1;

        goto label1;

     label4:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l6);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        return;
    }

    public void dumpControllerStateLocked(com.android.internal.util.IndentingPrintWriter, java.util.function.Predicate)
    {
        com.android.server.job.controllers.BatteryController r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.util.function.Predicate r2;
        java.lang.StringBuilder $r3, $r8;
        com.android.server.job.controllers.BatteryController$ChargingTracker $r5, $r10, $r13, $r16;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r7, $r12;
        android.util.ArraySet $r14, $r19;
        java.lang.Object $r15;
        int $i0, $i1, i2, $i3;
        com.android.server.job.controllers.JobStatus r20;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r2 := @parameter1: java.util.function.Predicate;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stable power: ");

        $r5 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        $z0 = virtualinvoke $r5.<com.android.server.job.controllers.BatteryController$ChargingTracker: boolean isOnStablePower()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not low: ");

        $r10 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        $z1 = virtualinvoke $r10.<com.android.server.job.controllers.BatteryController$ChargingTracker: boolean isBatteryNotLow()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r12);

        $r13 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        $z2 = virtualinvoke $r13.<com.android.server.job.controllers.BatteryController$ChargingTracker: boolean isMonitoring()>();

        if $z2 == 0 goto label1;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("MONITORING: seq=");

        $r16 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        $i1 = virtualinvoke $r16.<com.android.server.job.controllers.BatteryController$ChargingTracker: int getSeq()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(int)>($i1);

     label1:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        i2 = 0;

     label2:
        $r19 = r0.<com.android.server.job.controllers.BatteryController: android.util.ArraySet mTrackedTasks>;

        $i3 = virtualinvoke $r19.<android.util.ArraySet: int size()>();

        if i2 >= $i3 goto label5;

        $r14 = r0.<com.android.server.job.controllers.BatteryController: android.util.ArraySet mTrackedTasks>;

        $r15 = virtualinvoke $r14.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        r20 = (com.android.server.job.controllers.JobStatus) $r15;

        $z3 = interfaceinvoke r2.<java.util.function.Predicate: boolean test(java.lang.Object)>(r20);

        if $z3 != 0 goto label3;

        goto label4;

     label3:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("#");

        virtualinvoke r20.<com.android.server.job.controllers.JobStatus: void printUniqueId(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(" from ");

        $i0 = virtualinvoke r20.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i0);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        return;
    }

    public com.android.server.job.controllers.BatteryController$ChargingTracker getTracker()
    {
        com.android.server.job.controllers.BatteryController r0;
        com.android.server.job.controllers.BatteryController$ChargingTracker $r1;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        $r1 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        return $r1;
    }

    public void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus, com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.BatteryController r0;
        com.android.server.job.controllers.JobStatus r1, r2;
        boolean $z0, $z2, $z4;
        android.util.ArraySet $r3;
        com.android.server.job.controllers.BatteryController$ChargingTracker $r4, $r5;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        r2 := @parameter1: com.android.server.job.controllers.JobStatus;

        $z0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasPowerConstraint()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.job.controllers.BatteryController: android.util.ArraySet mTrackedTasks>;

        virtualinvoke $r3.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<com.android.server.job.controllers.JobStatus: void setTrackingController(int)>(1);

        $r4 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        $z2 = virtualinvoke $r4.<com.android.server.job.controllers.BatteryController$ChargingTracker: boolean isOnStablePower()>();

        virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean setChargingConstraintSatisfied(boolean)>($z2);

        $r5 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        $z4 = virtualinvoke $r5.<com.android.server.job.controllers.BatteryController$ChargingTracker: boolean isBatteryNotLow()>();

        virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean setBatteryNotLowConstraintSatisfied(boolean)>($z4);

     label1:
        return;
    }

    public void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus, com.android.server.job.controllers.JobStatus, boolean)
    {
        com.android.server.job.controllers.BatteryController r0;
        com.android.server.job.controllers.JobStatus r1, r2;
        boolean z0, $z1;
        android.util.ArraySet $r3;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        r2 := @parameter1: com.android.server.job.controllers.JobStatus;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean clearTrackingController(int)>(1);

        if $z1 == 0 goto label1;

        $r3 = r0.<com.android.server.job.controllers.BatteryController: android.util.ArraySet mTrackedTasks>;

        virtualinvoke $r3.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void startTrackingRestrictedJobLocked(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.BatteryController r0;
        com.android.server.job.controllers.JobStatus r1;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        virtualinvoke r0.<com.android.server.job.controllers.BatteryController: void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus)>(r1, null);

        return;
    }

    public void stopTrackingRestrictedJobLocked(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.BatteryController r0;
        com.android.server.job.controllers.JobStatus r1;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $z0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasPowerConstraint()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.server.job.controllers.BatteryController: void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus,boolean)>(r1, null, 0);

     label1:
        return;
    }
}
