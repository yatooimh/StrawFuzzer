final class com.android.server.job.controllers.ContentObserverController$JobInstance extends java.lang.Object
{
    android.util.ArraySet mChangedAuthorities;
    android.util.ArraySet mChangedUris;
    final java.lang.Runnable mExecuteRunner;
    final com.android.server.job.controllers.JobStatus mJobStatus;
    final java.util.ArrayList mMyObservers;
    final java.lang.Runnable mTimeoutRunner;
    boolean mTriggerPending;
    final com.android.server.job.controllers.ContentObserverController this$0;

    void <init>(com.android.server.job.controllers.ContentObserverController, com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.ContentObserverController$JobInstance r0;
        com.android.server.job.controllers.ContentObserverController r1;
        com.android.server.job.controllers.JobStatus r2;
        android.app.job.JobInfo$TriggerContentUri[] r3;
        int i0, i1, i2, $i3, $i5, $i6, $i7, i9;
        android.app.job.JobInfo$TriggerContentUri r4;
        java.util.ArrayList $r5, $r47;
        com.android.server.job.controllers.ContentObserverController$TriggerRunnable $r6, $r7;
        android.app.job.JobInfo $r8;
        android.util.SparseArray $r9, $r39;
        java.lang.Object $r10, $r11;
        boolean $z0, $z3, z4, z5;
        java.lang.StringBuilder $r12, $r27;
        android.net.Uri $r16, $r26, $r31;
        java.lang.String $r20, $r37;
        com.android.server.job.controllers.ContentObserverController$ObserverInstance $r21, r42, r43;
        android.os.Handler $r22;
        android.content.Context $r24;
        android.content.ContentResolver $r25;
        android.util.ArrayMap $r38, r40, r41;
        android.util.ArraySet $r46;

        r0 := @this: com.android.server.job.controllers.ContentObserverController$JobInstance;

        r1 := @parameter0: com.android.server.job.controllers.ContentObserverController;

        r2 := @parameter1: com.android.server.job.controllers.JobStatus;

        r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.ContentObserverController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: java.util.ArrayList mMyObservers> = $r5;

        r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.JobStatus mJobStatus> = r2;

        $r6 = new com.android.server.job.controllers.ContentObserverController$TriggerRunnable;

        specialinvoke $r6.<com.android.server.job.controllers.ContentObserverController$TriggerRunnable: void <init>(com.android.server.job.controllers.ContentObserverController$JobInstance)>(r0);

        r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: java.lang.Runnable mExecuteRunner> = $r6;

        $r7 = new com.android.server.job.controllers.ContentObserverController$TriggerRunnable;

        specialinvoke $r7.<com.android.server.job.controllers.ContentObserverController$TriggerRunnable: void <init>(com.android.server.job.controllers.ContentObserverController$JobInstance)>(r0);

        r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: java.lang.Runnable mTimeoutRunner> = $r7;

        $r8 = virtualinvoke r2.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo getJob()>();

        r3 = virtualinvoke $r8.<android.app.job.JobInfo: android.app.job.JobInfo$TriggerContentUri[] getTriggerContentUris()>();

        i0 = virtualinvoke r2.<com.android.server.job.controllers.JobStatus: int getSourceUserId()>();

        $r9 = r1.<com.android.server.job.controllers.ContentObserverController: android.util.SparseArray mObservers>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r40 = (android.util.ArrayMap) $r10;

        r41 = r40;

        if r40 != null goto label01;

        $r38 = new android.util.ArrayMap;

        specialinvoke $r38.<android.util.ArrayMap: void <init>()>();

        r41 = $r38;

        $r39 = r1.<com.android.server.job.controllers.ContentObserverController: android.util.SparseArray mObservers>;

        virtualinvoke $r39.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r38);

     label01:
        if r3 == null goto label10;

        i1 = lengthof r3;

        i9 = 0;

     label02:
        if i9 >= i1 goto label10;

        r4 = r3[i9];

        $r11 = virtualinvoke r41.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r42 = (com.android.server.job.controllers.ContentObserverController$ObserverInstance) $r11;

        if r42 != null goto label06;

        $r21 = new com.android.server.job.controllers.ContentObserverController$ObserverInstance;

        $r22 = r1.<com.android.server.job.controllers.ContentObserverController: android.os.Handler mHandler>;

        $i5 = virtualinvoke r2.<com.android.server.job.controllers.JobStatus: int getSourceUserId()>();

        specialinvoke $r21.<com.android.server.job.controllers.ContentObserverController$ObserverInstance: void <init>(com.android.server.job.controllers.ContentObserverController,android.os.Handler,android.app.job.JobInfo$TriggerContentUri,int)>(r1, $r22, r4, $i5);

        r43 = $r21;

        virtualinvoke r41.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r21);

        $i6 = virtualinvoke r4.<android.app.job.JobInfo$TriggerContentUri: int getFlags()>();

        $i7 = $i6 & 1;

        if $i7 == 0 goto label03;

        z4 = 1;

        goto label04;

     label03:
        z4 = 0;

     label04:
        $z3 = staticinvoke <com.android.server.job.controllers.ContentObserverController: boolean access$000()>();

        if $z3 == 0 goto label05;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New observer ");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r31 = virtualinvoke r4.<android.app.job.JobInfo$TriggerContentUri: android.net.Uri getUri()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" andDescendants=");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z4);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sourceUserId=");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r37 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("JobScheduler.ContentObserver", $r37);

     label05:
        $r24 = r1.<com.android.server.job.controllers.ContentObserverController: android.content.Context mContext>;

        $r25 = virtualinvoke $r24.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r26 = virtualinvoke r4.<android.app.job.JobInfo$TriggerContentUri: android.net.Uri getUri()>();

        virtualinvoke $r25.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r26, z4, $r21, i0);

        goto label09;

     label06:
        r43 = r42;

        $z0 = staticinvoke <com.android.server.job.controllers.ContentObserverController: boolean access$000()>();

        if $z0 == 0 goto label09;

        i2 = virtualinvoke r4.<android.app.job.JobInfo$TriggerContentUri: int getFlags()>();

        z5 = 1;

        $i3 = i2 & 1;

        if $i3 == 0 goto label07;

        goto label08;

     label07:
        z5 = 0;

     label08:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reusing existing observer ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r16 = virtualinvoke r4.<android.app.job.JobInfo$TriggerContentUri: android.net.Uri getUri()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" andDescendants=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z5);

        $r20 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("JobScheduler.ContentObserver", $r20);

        r43 = r42;

     label09:
        $r46 = r43.<com.android.server.job.controllers.ContentObserverController$ObserverInstance: android.util.ArraySet mJobs>;

        virtualinvoke $r46.<android.util.ArraySet: boolean add(java.lang.Object)>(r0);

        $r47 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: java.util.ArrayList mMyObservers>;

        virtualinvoke $r47.<java.util.ArrayList: boolean add(java.lang.Object)>(r43);

        i9 = i9 + 1;

        goto label02;

     label10:
        return;
    }

    void detachLocked()
    {
        com.android.server.job.controllers.ContentObserverController$JobInstance r0;
        int i0, $i1, $i2, i4;
        com.android.server.job.controllers.ContentObserverController$ObserverInstance r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4, $r12;
        android.util.ArraySet $r5, $r6;
        boolean $z1;
        com.android.server.job.controllers.ContentObserverController $r7, $r10;
        android.content.Context $r8;
        android.content.ContentResolver $r9;
        android.util.SparseArray $r11;
        android.app.job.JobInfo$TriggerContentUri $r13, $r19;
        java.lang.StringBuilder $r15;
        android.net.Uri $r20;
        java.lang.String $r22;
        android.util.ArrayMap r24;

        r0 := @this: com.android.server.job.controllers.ContentObserverController$JobInstance;

        $r2 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: java.util.ArrayList mMyObservers>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        $r3 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: java.util.ArrayList mMyObservers>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r1 = (com.android.server.job.controllers.ContentObserverController$ObserverInstance) $r4;

        $r5 = r1.<com.android.server.job.controllers.ContentObserverController$ObserverInstance: android.util.ArraySet mJobs>;

        virtualinvoke $r5.<android.util.ArraySet: boolean remove(java.lang.Object)>(r0);

        $r6 = r1.<com.android.server.job.controllers.ContentObserverController$ObserverInstance: android.util.ArraySet mJobs>;

        $i1 = virtualinvoke $r6.<android.util.ArraySet: int size()>();

        if $i1 != 0 goto label3;

        $z1 = staticinvoke <com.android.server.job.controllers.ContentObserverController: boolean access$000()>();

        if $z1 == 0 goto label2;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unregistering observer ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r19 = r1.<com.android.server.job.controllers.ContentObserverController$ObserverInstance: android.app.job.JobInfo$TriggerContentUri mUri>;

        $r20 = virtualinvoke $r19.<android.app.job.JobInfo$TriggerContentUri: android.net.Uri getUri()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("JobScheduler.ContentObserver", $r22);

     label2:
        $r7 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.ContentObserverController this$0>;

        $r8 = $r7.<com.android.server.job.controllers.ContentObserverController: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r9.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>(r1);

        $r10 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.ContentObserverController this$0>;

        $r11 = $r10.<com.android.server.job.controllers.ContentObserverController: android.util.SparseArray mObservers>;

        $i2 = r1.<com.android.server.job.controllers.ContentObserverController$ObserverInstance: int mUserId>;

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        r24 = (android.util.ArrayMap) $r12;

        if r24 == null goto label3;

        $r13 = r1.<com.android.server.job.controllers.ContentObserverController$ObserverInstance: android.app.job.JobInfo$TriggerContentUri mUri>;

        virtualinvoke r24.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r13);

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return;
    }

    void scheduleLocked()
    {
        com.android.server.job.controllers.ContentObserverController$JobInstance r0;
        boolean $z0;
        com.android.server.job.controllers.ContentObserverController $r1, $r5, $r9, $r12;
        java.lang.Runnable $r2, $r8, $r10, $r15;
        android.os.Handler $r3, $r7, $r11, $r14;
        android.util.ArraySet $r4;
        int $i0;
        com.android.server.job.controllers.JobStatus $r6, $r13;
        long $l1, $l2;

        r0 := @this: com.android.server.job.controllers.ContentObserverController$JobInstance;

        $z0 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: boolean mTriggerPending>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: boolean mTriggerPending> = 1;

        $r12 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.ContentObserverController this$0>;

        $r14 = $r12.<com.android.server.job.controllers.ContentObserverController: android.os.Handler mHandler>;

        $r15 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: java.lang.Runnable mTimeoutRunner>;

        $r13 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.JobStatus mJobStatus>;

        $l2 = virtualinvoke $r13.<com.android.server.job.controllers.JobStatus: long getTriggerContentMaxDelay()>();

        virtualinvoke $r14.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r15, $l2);

     label1:
        $r1 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.ContentObserverController this$0>;

        $r3 = $r1.<com.android.server.job.controllers.ContentObserverController: android.os.Handler mHandler>;

        $r2 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: java.lang.Runnable mExecuteRunner>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        $r4 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: android.util.ArraySet mChangedUris>;

        $i0 = virtualinvoke $r4.<android.util.ArraySet: int size()>();

        if $i0 < 40 goto label2;

        $r9 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.ContentObserverController this$0>;

        $r11 = $r9.<com.android.server.job.controllers.ContentObserverController: android.os.Handler mHandler>;

        $r10 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: java.lang.Runnable mExecuteRunner>;

        virtualinvoke $r11.<android.os.Handler: boolean post(java.lang.Runnable)>($r10);

        goto label3;

     label2:
        $r5 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.ContentObserverController this$0>;

        $r7 = $r5.<com.android.server.job.controllers.ContentObserverController: android.os.Handler mHandler>;

        $r8 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: java.lang.Runnable mExecuteRunner>;

        $r6 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.JobStatus mJobStatus>;

        $l1 = virtualinvoke $r6.<com.android.server.job.controllers.JobStatus: long getTriggerContentUpdateDelay()>();

        virtualinvoke $r7.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r8, $l1);

     label3:
        return;
    }

    void trigger()
    {
        com.android.server.job.controllers.ContentObserverController$JobInstance r0;
        java.lang.Object r1;
        com.android.server.job.controllers.ContentObserverController $r3, $r4;
        boolean $z1, $z2, z3;
        com.android.server.job.StateChangedListener $r5;
        com.android.server.job.controllers.JobStatus $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.job.controllers.ContentObserverController$JobInstance;

        z3 = 0;

        $r3 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.ContentObserverController this$0>;

        r1 = $r3.<com.android.server.job.controllers.ContentObserverController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z1 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: boolean mTriggerPending>;

        if $z1 == 0 goto label06;

     label02:
        z3 = 0;

     label03:
        $r6 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.JobStatus mJobStatus>;

        $z2 = virtualinvoke $r6.<com.android.server.job.controllers.JobStatus: boolean setContentTriggerConstraintSatisfied(boolean)>(1);

        if $z2 == 0 goto label05;

     label04:
        z3 = 1;

     label05:
        virtualinvoke r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: void unscheduleLocked()>();

     label06:
        exitmonitor r1;

     label07:
        if z3 == 0 goto label08;

        $r4 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.ContentObserverController this$0>;

        $r5 = $r4.<com.android.server.job.controllers.ContentObserverController: com.android.server.job.StateChangedListener mStateChangedListener>;

        interfaceinvoke $r5.<com.android.server.job.StateChangedListener: void onControllerStateChanged()>();

     label08:
        return;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void unscheduleLocked()
    {
        com.android.server.job.controllers.ContentObserverController$JobInstance r0;
        boolean $z0;
        com.android.server.job.controllers.ContentObserverController $r1, $r4;
        java.lang.Runnable $r2, $r5;
        android.os.Handler $r3, $r6;

        r0 := @this: com.android.server.job.controllers.ContentObserverController$JobInstance;

        $z0 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: boolean mTriggerPending>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.ContentObserverController this$0>;

        $r3 = $r1.<com.android.server.job.controllers.ContentObserverController: android.os.Handler mHandler>;

        $r2 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: java.lang.Runnable mExecuteRunner>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        $r4 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: com.android.server.job.controllers.ContentObserverController this$0>;

        $r6 = $r4.<com.android.server.job.controllers.ContentObserverController: android.os.Handler mHandler>;

        $r5 = r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: java.lang.Runnable mTimeoutRunner>;

        virtualinvoke $r6.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r5);

        r0.<com.android.server.job.controllers.ContentObserverController$JobInstance: boolean mTriggerPending> = 0;

     label1:
        return;
    }
}
