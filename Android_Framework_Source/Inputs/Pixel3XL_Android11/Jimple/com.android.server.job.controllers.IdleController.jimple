public final class com.android.server.job.controllers.IdleController extends com.android.server.job.controllers.RestrictingController implements com.android.server.job.controllers.idle.IdlenessListener
{
    private static final java.lang.String TAG;
    com.android.server.job.controllers.idle.IdlenessTracker mIdleTracker;
    final android.util.ArraySet mTrackedTasks;

    public void <init>(com.android.server.job.JobSchedulerService)
    {
        com.android.server.job.controllers.IdleController r0;
        com.android.server.job.JobSchedulerService r1;
        android.util.ArraySet $r2;
        android.content.Context $r3;

        r0 := @this: com.android.server.job.controllers.IdleController;

        r1 := @parameter0: com.android.server.job.JobSchedulerService;

        specialinvoke r0.<com.android.server.job.controllers.RestrictingController: void <init>(com.android.server.job.JobSchedulerService)>(r1);

        $r2 = new android.util.ArraySet;

        specialinvoke $r2.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.job.controllers.IdleController: android.util.ArraySet mTrackedTasks> = $r2;

        $r3 = r0.<com.android.server.job.controllers.IdleController: android.content.Context mContext>;

        specialinvoke r0.<com.android.server.job.controllers.IdleController: void initIdleStateTracking(android.content.Context)>($r3);

        return;
    }

    private void initIdleStateTracking(android.content.Context)
    {
        com.android.server.job.controllers.IdleController r0;
        android.content.Context r1, $r2;
        android.content.pm.PackageManager $r3;
        boolean $z0;
        com.android.server.job.controllers.idle.DeviceIdlenessTracker $r4;
        com.android.server.job.controllers.idle.IdlenessTracker $r5;
        com.android.server.job.controllers.idle.CarIdlenessTracker $r6;

        r0 := @this: com.android.server.job.controllers.IdleController;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<com.android.server.job.controllers.IdleController: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r3.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.type.automotive");

        if $z0 == 0 goto label1;

        $r6 = new com.android.server.job.controllers.idle.CarIdlenessTracker;

        specialinvoke $r6.<com.android.server.job.controllers.idle.CarIdlenessTracker: void <init>()>();

        r0.<com.android.server.job.controllers.IdleController: com.android.server.job.controllers.idle.IdlenessTracker mIdleTracker> = $r6;

        goto label2;

     label1:
        $r4 = new com.android.server.job.controllers.idle.DeviceIdlenessTracker;

        specialinvoke $r4.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: void <init>()>();

        r0.<com.android.server.job.controllers.IdleController: com.android.server.job.controllers.idle.IdlenessTracker mIdleTracker> = $r4;

     label2:
        $r5 = r0.<com.android.server.job.controllers.IdleController: com.android.server.job.controllers.idle.IdlenessTracker mIdleTracker>;

        interfaceinvoke $r5.<com.android.server.job.controllers.idle.IdlenessTracker: void startTracking(android.content.Context,com.android.server.job.controllers.idle.IdlenessListener)>(r1, r0);

        return;
    }

    public void dumpControllerStateLocked(android.util.proto.ProtoOutputStream, long, java.util.function.Predicate)
    {
        com.android.server.job.controllers.IdleController r0;
        android.util.proto.ProtoOutputStream r1;
        java.util.function.Predicate r2;
        long l0, l1, l4, l5;
        com.android.server.job.controllers.JobStatus r3;
        com.android.server.job.controllers.idle.IdlenessTracker $r4, $r5;
        boolean $z0, $z1;
        android.util.ArraySet $r6, $r7;
        int $i2, $i3, i6;
        java.lang.Object $r8;

        r0 := @this: com.android.server.job.controllers.IdleController;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l4 := @parameter1: long;

        r2 := @parameter2: java.util.function.Predicate;

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l4);

        l5 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268038L);

        $r4 = r0.<com.android.server.job.controllers.IdleController: com.android.server.job.controllers.idle.IdlenessTracker mIdleTracker>;

        $z0 = interfaceinvoke $r4.<com.android.server.job.controllers.idle.IdlenessTracker: boolean isIdle()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366145L, $z0);

        $r5 = r0.<com.android.server.job.controllers.IdleController: com.android.server.job.controllers.idle.IdlenessTracker mIdleTracker>;

        interfaceinvoke $r5.<com.android.server.job.controllers.idle.IdlenessTracker: void dump(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268035L);

        i6 = 0;

     label1:
        $r6 = r0.<com.android.server.job.controllers.IdleController: android.util.ArraySet mTrackedTasks>;

        $i2 = virtualinvoke $r6.<android.util.ArraySet: int size()>();

        if i6 >= $i2 goto label4;

        $r7 = r0.<com.android.server.job.controllers.IdleController: android.util.ArraySet mTrackedTasks>;

        $r8 = virtualinvoke $r7.<android.util.ArraySet: java.lang.Object valueAt(int)>(i6);

        r3 = (com.android.server.job.controllers.JobStatus) $r8;

        $z1 = interfaceinvoke r2.<java.util.function.Predicate: boolean test(java.lang.Object)>(r3);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        l1 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895810L);

        virtualinvoke r3.<com.android.server.job.controllers.JobStatus: void writeToShortProto(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268033L);

        $i3 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i3);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l5);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        return;
    }

    public void dumpControllerStateLocked(com.android.internal.util.IndentingPrintWriter, java.util.function.Predicate)
    {
        com.android.server.job.controllers.IdleController r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.util.function.Predicate r2;
        java.lang.StringBuilder $r3;
        com.android.server.job.controllers.idle.IdlenessTracker $r5, $r8;
        boolean $z0, $z1;
        java.lang.String $r7;
        android.util.ArraySet $r9, $r10;
        int $i0, $i1, i2;
        java.lang.Object $r11;
        com.android.server.job.controllers.JobStatus r13;

        r0 := @this: com.android.server.job.controllers.IdleController;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r2 := @parameter1: java.util.function.Predicate;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Currently idle: ");

        $r5 = r0.<com.android.server.job.controllers.IdleController: com.android.server.job.controllers.idle.IdlenessTracker mIdleTracker>;

        $z0 = interfaceinvoke $r5.<com.android.server.job.controllers.idle.IdlenessTracker: boolean isIdle()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r7);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Idleness tracker:");

        $r8 = r0.<com.android.server.job.controllers.IdleController: com.android.server.job.controllers.idle.IdlenessTracker mIdleTracker>;

        interfaceinvoke $r8.<com.android.server.job.controllers.idle.IdlenessTracker: void dump(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        i2 = 0;

     label1:
        $r9 = r0.<com.android.server.job.controllers.IdleController: android.util.ArraySet mTrackedTasks>;

        $i0 = virtualinvoke $r9.<android.util.ArraySet: int size()>();

        if i2 >= $i0 goto label4;

        $r10 = r0.<com.android.server.job.controllers.IdleController: android.util.ArraySet mTrackedTasks>;

        $r11 = virtualinvoke $r10.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        r13 = (com.android.server.job.controllers.JobStatus) $r11;

        $z1 = interfaceinvoke r2.<java.util.function.Predicate: boolean test(java.lang.Object)>(r13);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("#");

        virtualinvoke r13.<com.android.server.job.controllers.JobStatus: void printUniqueId(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(" from ");

        $i1 = virtualinvoke r13.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i1);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    public void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus, com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.IdleController r0;
        com.android.server.job.controllers.JobStatus r1, r2;
        boolean $z0, $z2;
        android.util.ArraySet $r3;
        com.android.server.job.controllers.idle.IdlenessTracker $r4;

        r0 := @this: com.android.server.job.controllers.IdleController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        r2 := @parameter1: com.android.server.job.controllers.JobStatus;

        $z0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasIdleConstraint()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.job.controllers.IdleController: android.util.ArraySet mTrackedTasks>;

        virtualinvoke $r3.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<com.android.server.job.controllers.JobStatus: void setTrackingController(int)>(8);

        $r4 = r0.<com.android.server.job.controllers.IdleController: com.android.server.job.controllers.idle.IdlenessTracker mIdleTracker>;

        $z2 = interfaceinvoke $r4.<com.android.server.job.controllers.idle.IdlenessTracker: boolean isIdle()>();

        virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean setIdleConstraintSatisfied(boolean)>($z2);

     label1:
        return;
    }

    public void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus, com.android.server.job.controllers.JobStatus, boolean)
    {
        com.android.server.job.controllers.IdleController r0;
        com.android.server.job.controllers.JobStatus r1, r2;
        boolean z0, $z1;
        android.util.ArraySet $r3;

        r0 := @this: com.android.server.job.controllers.IdleController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        r2 := @parameter1: com.android.server.job.controllers.JobStatus;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean clearTrackingController(int)>(8);

        if $z1 == 0 goto label1;

        $r3 = r0.<com.android.server.job.controllers.IdleController: android.util.ArraySet mTrackedTasks>;

        virtualinvoke $r3.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void reportNewIdleState(boolean)
    {
        com.android.server.job.controllers.IdleController r0;
        boolean z0;
        java.lang.Object r1, $r6;
        android.util.ArraySet $r3, $r5;
        int $i0, i1;
        com.android.server.job.StateChangedListener $r4;
        com.android.server.job.controllers.JobStatus $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.job.controllers.IdleController;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.job.controllers.IdleController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.job.controllers.IdleController: android.util.ArraySet mTrackedTasks>;

        $i0 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label5;

     label3:
        $r5 = r0.<com.android.server.job.controllers.IdleController: android.util.ArraySet mTrackedTasks>;

        $r6 = virtualinvoke $r5.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        $r7 = (com.android.server.job.controllers.JobStatus) $r6;

        virtualinvoke $r7.<com.android.server.job.controllers.JobStatus: boolean setIdleConstraintSatisfied(boolean)>(z0);

     label4:
        i1 = i1 + -1;

        goto label2;

     label5:
        exitmonitor r1;

     label6:
        $r4 = r0.<com.android.server.job.controllers.IdleController: com.android.server.job.StateChangedListener mStateChangedListener>;

        interfaceinvoke $r4.<com.android.server.job.StateChangedListener: void onControllerStateChanged()>();

        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void startTrackingRestrictedJobLocked(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.IdleController r0;
        com.android.server.job.controllers.JobStatus r1;

        r0 := @this: com.android.server.job.controllers.IdleController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        virtualinvoke r0.<com.android.server.job.controllers.IdleController: void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus)>(r1, null);

        return;
    }

    public void stopTrackingRestrictedJobLocked(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.IdleController r0;
        com.android.server.job.controllers.JobStatus r1;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.IdleController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $z0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasIdleConstraint()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.server.job.controllers.IdleController: void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus,boolean)>(r1, null, 0);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.job.controllers.IdleController: java.lang.String TAG> = "JobScheduler.IdleController";

        return;
    }
}
