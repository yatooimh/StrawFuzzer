public final class com.android.server.job.controllers.JobStatus extends java.lang.Object
{
    static final int CONSTRAINTS_OF_INTEREST;
    static final int CONSTRAINT_BACKGROUND_NOT_RESTRICTED;
    static final int CONSTRAINT_BATTERY_NOT_LOW;
    static final int CONSTRAINT_CHARGING;
    static final int CONSTRAINT_CONNECTIVITY;
    static final int CONSTRAINT_CONTENT_TRIGGER;
    static final int CONSTRAINT_DEADLINE;
    static final int CONSTRAINT_DEVICE_NOT_DOZING;
    static final int CONSTRAINT_IDLE;
    static final int CONSTRAINT_STORAGE_NOT_LOW;
    static final int CONSTRAINT_TIMING_DELAY;
    static final int CONSTRAINT_WITHIN_QUOTA;
    static final boolean DEBUG;
    static final boolean DEBUG_PREPARE;
    public static final long DEFAULT_TRIGGER_MAX_DELAY;
    public static final long DEFAULT_TRIGGER_UPDATE_DELAY;
    private static final int DYNAMIC_RESTRICTED_CONSTRAINTS;
    public static final int INTERNAL_FLAG_HAS_FOREGROUND_EXEMPTION;
    private static final android.net.Uri[] MEDIA_URIS_FOR_STANDBY_EXEMPTION;
    public static final long MIN_TRIGGER_MAX_DELAY;
    public static final long MIN_TRIGGER_UPDATE_DELAY;
    public static final long NO_EARLIEST_RUNTIME;
    public static final long NO_LATEST_RUNTIME;
    public static final int OVERRIDE_FULL;
    public static final int OVERRIDE_NONE;
    public static final int OVERRIDE_SOFT;
    public static final int OVERRIDE_SORTING;
    static final int SOFT_OVERRIDE_CONSTRAINTS;
    private static final int STATSD_CONSTRAINTS_TO_LOG;
    private static final boolean STATS_LOG_ENABLED;
    private static final java.lang.String TAG;
    public static final int TRACKING_BATTERY;
    public static final int TRACKING_CONNECTIVITY;
    public static final int TRACKING_CONTENT;
    public static final int TRACKING_IDLE;
    public static final int TRACKING_QUOTA;
    public static final int TRACKING_STORAGE;
    public static final int TRACKING_TIME;
    final java.lang.String batteryName;
    final int callingUid;
    public android.util.ArraySet changedAuthorities;
    public android.util.ArraySet changedUris;
    com.android.server.job.controllers.ContentObserverController$JobInstance contentObserverJobInstance;
    public boolean dozeWhitelisted;
    private final long earliestRunTimeElapsedMillis;
    public long enqueueTime;
    public java.util.ArrayList executingWork;
    final android.app.job.JobInfo job;
    public int lastEvaluatedPriority;
    private final long latestRunTimeElapsedMillis;
    private int mDynamicConstraints;
    private long mFirstForceBatchedTimeElapsed;
    private final boolean mHasMediaBackupExemption;
    private int mInternalFlags;
    private long mLastFailedRunTime;
    private long mLastSuccessfulRunTime;
    private long mOriginalLatestRunTimeElapsedMillis;
    private android.util.Pair mPersistedUtcTimes;
    private boolean mReadyDeadlineSatisfied;
    private boolean mReadyDynamicSatisfied;
    private boolean mReadyNotDozing;
    private boolean mReadyNotRestrictedInBg;
    private boolean mReadyWithinQuota;
    private final int mRequiredConstraintsOfInterest;
    private int mSatisfiedConstraintsOfInterest;
    private long mTotalNetworkDownloadBytes;
    private long mTotalNetworkUploadBytes;
    public long madeActive;
    public long madePending;
    public android.net.Network network;
    public int nextPendingWorkId;
    private final int numFailures;
    public int overrideState;
    public java.util.ArrayList pendingWork;
    private boolean prepared;
    final int requiredConstraints;
    int satisfiedConstraints;
    final java.lang.String sourcePackageName;
    final java.lang.String sourceTag;
    final int sourceUid;
    final int sourceUserId;
    private int standbyBucket;
    final java.lang.String tag;
    private int trackingControllers;
    public boolean uidActive;
    private java.lang.Throwable unpreparedPoint;
    private com.android.server.job.GrantedUriPermissions uriPerms;
    private long whenStandbyDeferred;

    static void <clinit>()
    {
        boolean $z0;
        android.net.Uri[] $r0;
        android.net.Uri $r1, $r2;

        <com.android.server.job.controllers.JobStatus: int TRACKING_TIME> = 32;

        <com.android.server.job.controllers.JobStatus: int TRACKING_STORAGE> = 16;

        <com.android.server.job.controllers.JobStatus: int TRACKING_QUOTA> = 64;

        <com.android.server.job.controllers.JobStatus: int TRACKING_IDLE> = 8;

        <com.android.server.job.controllers.JobStatus: int TRACKING_CONTENT> = 4;

        <com.android.server.job.controllers.JobStatus: int TRACKING_CONNECTIVITY> = 2;

        <com.android.server.job.controllers.JobStatus: int TRACKING_BATTERY> = 1;

        <com.android.server.job.controllers.JobStatus: java.lang.String TAG> = "JobScheduler.JobStatus";

        <com.android.server.job.controllers.JobStatus: boolean STATS_LOG_ENABLED> = 0;

        <com.android.server.job.controllers.JobStatus: int STATSD_CONSTRAINTS_TO_LOG> = -989855732;

        <com.android.server.job.controllers.JobStatus: int SOFT_OVERRIDE_CONSTRAINTS> = -2147483633;

        <com.android.server.job.controllers.JobStatus: int OVERRIDE_SORTING> = 1;

        <com.android.server.job.controllers.JobStatus: int OVERRIDE_SOFT> = 2;

        <com.android.server.job.controllers.JobStatus: int OVERRIDE_NONE> = 0;

        <com.android.server.job.controllers.JobStatus: int OVERRIDE_FULL> = 3;

        <com.android.server.job.controllers.JobStatus: long NO_LATEST_RUNTIME> = 9223372036854775807L;

        <com.android.server.job.controllers.JobStatus: long NO_EARLIEST_RUNTIME> = 0L;

        <com.android.server.job.controllers.JobStatus: long MIN_TRIGGER_UPDATE_DELAY> = 500L;

        <com.android.server.job.controllers.JobStatus: long MIN_TRIGGER_MAX_DELAY> = 1000L;

        <com.android.server.job.controllers.JobStatus: int INTERNAL_FLAG_HAS_FOREGROUND_EXEMPTION> = 1;

        <com.android.server.job.controllers.JobStatus: int DYNAMIC_RESTRICTED_CONSTRAINTS> = 268435463;

        <com.android.server.job.controllers.JobStatus: long DEFAULT_TRIGGER_UPDATE_DELAY> = 10000L;

        <com.android.server.job.controllers.JobStatus: long DEFAULT_TRIGGER_MAX_DELAY> = 120000L;

        <com.android.server.job.controllers.JobStatus: boolean DEBUG_PREPARE> = 1;

        <com.android.server.job.controllers.JobStatus: int CONSTRAINT_WITHIN_QUOTA> = 16777216;

        <com.android.server.job.controllers.JobStatus: int CONSTRAINT_TIMING_DELAY> = -2147483648;

        <com.android.server.job.controllers.JobStatus: int CONSTRAINT_STORAGE_NOT_LOW> = 8;

        <com.android.server.job.controllers.JobStatus: int CONSTRAINT_IDLE> = 4;

        <com.android.server.job.controllers.JobStatus: int CONSTRAINT_DEVICE_NOT_DOZING> = 33554432;

        <com.android.server.job.controllers.JobStatus: int CONSTRAINT_DEADLINE> = 1073741824;

        <com.android.server.job.controllers.JobStatus: int CONSTRAINT_CONTENT_TRIGGER> = 67108864;

        <com.android.server.job.controllers.JobStatus: int CONSTRAINT_CONNECTIVITY> = 268435456;

        <com.android.server.job.controllers.JobStatus: int CONSTRAINT_CHARGING> = 1;

        <com.android.server.job.controllers.JobStatus: int CONSTRAINT_BATTERY_NOT_LOW> = 2;

        <com.android.server.job.controllers.JobStatus: int CONSTRAINT_BACKGROUND_NOT_RESTRICTED> = 4194304;

        <com.android.server.job.controllers.JobStatus: int CONSTRAINTS_OF_INTEREST> = -1811939313;

        $z0 = <com.android.server.job.JobSchedulerService: boolean DEBUG>;

        <com.android.server.job.controllers.JobStatus: boolean DEBUG> = $z0;

        $r0 = newarray (android.net.Uri)[2];

        $r1 = <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r0[0] = $r1;

        $r2 = <android.provider.MediaStore$Video$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r0[1] = $r2;

        <com.android.server.job.controllers.JobStatus: android.net.Uri[] MEDIA_URIS_FOR_STANDBY_EXEMPTION> = $r0;

        return;
    }

    private void <init>(android.app.job.JobInfo, int, java.lang.String, int, int, java.lang.String, int, long, long, long, long, int)
    {
        com.android.server.job.controllers.JobStatus r0;
        android.app.job.JobInfo r1;
        int i0, i5, $i8, $i9, i10, i11, i12, i14, i15, i16, i17, i18, i19, i20, $i21, $i22, $i23;
        long l1, l2, l3, l4;
        java.lang.String $r3, $r7, $r9, $r14, $r15, $r22, $r26, $r29, r32, r33, r35;
        android.content.ComponentName $r4, $r25, $r28;
        java.lang.StringBuilder $r5, $r21;
        android.net.NetworkRequest $r10, $r12, $r16;
        byte $b6, $b7;
        android.app.job.JobInfo$TriggerContentUri[] $r11, r37;
        java.lang.Object $r13;
        boolean $z0, $z1, $z2, z3, z4, z6, z7;
        android.net.NetworkCapabilities $r17;
        android.net.Uri[] $r19;
        android.net.Uri $r20;
        android.content.pm.IPackageManager $r30;
        android.os.RemoteException $r31;
        android.app.job.JobInfo$TriggerContentUri r38;
        com.android.server.job.JobSchedulerInternal r39;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: android.app.job.JobInfo;

        i10 := @parameter1: int;

        r32 := @parameter2: java.lang.String;

        i11 := @parameter3: int;

        i0 := @parameter4: int;

        r33 := @parameter5: java.lang.String;

        i12 := @parameter6: int;

        l1 := @parameter7: long;

        l2 := @parameter8: long;

        l3 := @parameter9: long;

        l4 := @parameter10: long;

        i5 := @parameter11: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.job.controllers.JobStatus: java.lang.Throwable unpreparedPoint> = null;

        r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints> = 0;

        r0.<com.android.server.job.controllers.JobStatus: int mSatisfiedConstraintsOfInterest> = 0;

        r0.<com.android.server.job.controllers.JobStatus: int mDynamicConstraints> = 0;

        r0.<com.android.server.job.controllers.JobStatus: int nextPendingWorkId> = 1;

        r0.<com.android.server.job.controllers.JobStatus: int overrideState> = 0;

        r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkDownloadBytes> = -1L;

        r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkUploadBytes> = -1L;

        r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job> = r1;

        r0.<com.android.server.job.controllers.JobStatus: int callingUid> = i10;

        r0.<com.android.server.job.controllers.JobStatus: int standbyBucket> = i0;

        i14 = -1;

        if i11 == -1 goto label04;

        i14 = -1;

        if r32 == null goto label04;

     label01:
        $r30 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        i14 = interfaceinvoke $r30.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r32, 0, i11);

     label02:
        goto label04;

     label03:
        $r31 := @caughtexception;

        i14 = -1;

     label04:
        if i14 != -1 goto label05;

        r0.<com.android.server.job.controllers.JobStatus: int sourceUid> = i10;

        $i9 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i10);

        r0.<com.android.server.job.controllers.JobStatus: int sourceUserId> = $i9;

        $r28 = virtualinvoke r1.<android.app.job.JobInfo: android.content.ComponentName getService()>();

        $r29 = virtualinvoke $r28.<android.content.ComponentName: java.lang.String getPackageName()>();

        r0.<com.android.server.job.controllers.JobStatus: java.lang.String sourcePackageName> = $r29;

        r0.<com.android.server.job.controllers.JobStatus: java.lang.String sourceTag> = null;

        goto label06;

     label05:
        r0.<com.android.server.job.controllers.JobStatus: int sourceUid> = i14;

        r0.<com.android.server.job.controllers.JobStatus: int sourceUserId> = i11;

        r0.<com.android.server.job.controllers.JobStatus: java.lang.String sourcePackageName> = r32;

        r0.<com.android.server.job.controllers.JobStatus: java.lang.String sourceTag> = r33;

     label06:
        $r3 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String sourceTag>;

        if $r3 == null goto label07;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String sourceTag>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r25 = virtualinvoke r1.<android.app.job.JobInfo: android.content.ComponentName getService()>();

        $r26 = virtualinvoke $r25.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        r35 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label08;

     label07:
        $r4 = virtualinvoke r1.<android.app.job.JobInfo: android.content.ComponentName getService()>();

        r35 = virtualinvoke $r4.<android.content.ComponentName: java.lang.String flattenToShortString()>();

     label08:
        r0.<com.android.server.job.controllers.JobStatus: java.lang.String batteryName> = r35;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*job*/");

        $r7 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String batteryName>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.job.controllers.JobStatus: java.lang.String tag> = $r9;

        r0.<com.android.server.job.controllers.JobStatus: long earliestRunTimeElapsedMillis> = l1;

        r0.<com.android.server.job.controllers.JobStatus: long latestRunTimeElapsedMillis> = l2;

        r0.<com.android.server.job.controllers.JobStatus: long mOriginalLatestRunTimeElapsedMillis> = l2;

        r0.<com.android.server.job.controllers.JobStatus: int numFailures> = i12;

        z3 = 0;

        i15 = virtualinvoke r1.<android.app.job.JobInfo: int getConstraintFlags()>();

        i16 = i15;

        $r10 = virtualinvoke r1.<android.app.job.JobInfo: android.net.NetworkRequest getRequiredNetwork()>();

        if $r10 == null goto label09;

        i16 = i15 | 268435456;

        z3 = 1;

     label09:
        i17 = i16;

        $b6 = l1 cmp 0L;

        if $b6 == 0 goto label10;

        i17 = i16 | -2147483648;

     label10:
        i18 = i17;

        $b7 = l2 cmp 9223372036854775807L;

        if $b7 == 0 goto label11;

        i18 = i17 | 1073741824;

     label11:
        z4 = 0;

        $r11 = virtualinvoke r1.<android.app.job.JobInfo: android.app.job.JobInfo$TriggerContentUri[] getTriggerContentUris()>();

        if $r11 == null goto label15;

        i18 = i18 | 67108864;

        r37 = virtualinvoke r1.<android.app.job.JobInfo: android.app.job.JobInfo$TriggerContentUri[] getTriggerContentUris()>();

        i19 = lengthof r37;

        i20 = 0;

     label12:
        if i20 >= i19 goto label14;

        r38 = r37[i20];

        $r19 = <com.android.server.job.controllers.JobStatus: android.net.Uri[] MEDIA_URIS_FOR_STANDBY_EXEMPTION>;

        $r20 = virtualinvoke r38.<android.app.job.JobInfo$TriggerContentUri: android.net.Uri getUri()>();

        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>($r19, $r20);

        if $z2 != 0 goto label13;

        z4 = 0;

        goto label15;

     label13:
        i20 = i20 + 1;

        goto label12;

     label14:
        z4 = 1;

        goto label15;

     label15:
        r0.<com.android.server.job.controllers.JobStatus: int requiredConstraints> = i18;

        $i21 = -1811939313 & i18;

        r0.<com.android.server.job.controllers.JobStatus: int mRequiredConstraintsOfInterest> = $i21;

        $i22 = virtualinvoke r1.<android.app.job.JobInfo: int getFlags()>();

        $i23 = $i22 & 1;

        if $i23 == 0 goto label16;

        z6 = 1;

        goto label17;

     label16:
        z6 = 0;

     label17:
        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotDozing> = z6;

        if i0 != 5 goto label18;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void addDynamicConstraints(int)>(268435463);

        goto label19;

     label18:
        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDynamicSatisfied> = 0;

     label19:
        r0.<com.android.server.job.controllers.JobStatus: long mLastSuccessfulRunTime> = l3;

        r0.<com.android.server.job.controllers.JobStatus: long mLastFailedRunTime> = l4;

        r0.<com.android.server.job.controllers.JobStatus: int mInternalFlags> = i5;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void updateEstimatedNetworkBytesLocked()>();

        $r12 = virtualinvoke r1.<android.app.job.JobInfo: android.net.NetworkRequest getRequiredNetwork()>();

        if $r12 == null goto label20;

        $r16 = virtualinvoke r1.<android.app.job.JobInfo: android.net.NetworkRequest getRequiredNetwork()>();

        $r17 = $r16.<android.net.NetworkRequest: android.net.NetworkCapabilities networkCapabilities>;

        $i8 = r0.<com.android.server.job.controllers.JobStatus: int sourceUid>;

        virtualinvoke $r17.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setSingleUid(int)>($i8);

     label20:
        $r13 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/job/JobSchedulerInternal;");

        r39 = (com.android.server.job.JobSchedulerInternal) $r13;

        $z0 = virtualinvoke r1.<android.app.job.JobInfo: boolean hasLateConstraint()>();

        if $z0 != 0 goto label21;

        if z4 == 0 goto label21;

        if z3 == 0 goto label21;

        $r14 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String sourcePackageName>;

        $r15 = interfaceinvoke r39.<com.android.server.job.JobSchedulerInternal: java.lang.String getMediaBackupPackage()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z1 == 0 goto label21;

        z7 = 1;

        goto label22;

     label21:
        z7 = 0;

     label22:
        r0.<com.android.server.job.controllers.JobStatus: boolean mHasMediaBackupExemption> = z7;

        return;

        catch android.os.RemoteException from label01 to label02 with label03;
    }

    public void <init>(android.app.job.JobInfo, int, java.lang.String, int, int, java.lang.String, long, long, long, long, android.util.Pair, int)
    {
        com.android.server.job.controllers.JobStatus r0;
        android.app.job.JobInfo r1;
        int i0, i1, i2, i7;
        java.lang.String r2, r3;
        long l3, l4, l5, l6;
        android.util.Pair r4;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: android.app.job.JobInfo;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: java.lang.String;

        l3 := @parameter6: long;

        l4 := @parameter7: long;

        l5 := @parameter8: long;

        l6 := @parameter9: long;

        r4 := @parameter10: android.util.Pair;

        i7 := @parameter11: int;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void <init>(android.app.job.JobInfo,int,java.lang.String,int,int,java.lang.String,int,long,long,long,long,int)>(r1, i0, r2, i1, i2, r3, 0, l3, l4, l5, l6, i7);

        r0.<com.android.server.job.controllers.JobStatus: android.util.Pair mPersistedUtcTimes> = r4;

        if r4 == null goto label1;

        $z0 = <com.android.server.job.controllers.JobStatus: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("JobScheduler.JobStatus", "+ restored job with RTC times because of bad boot clock");

     label1:
        return;
    }

    public void <init>(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.JobStatus r0, r1;
        android.app.job.JobInfo $r2;
        int $i0, $i1, $i2, $i3, $i8;
        java.lang.String $r3, $r4;
        long $l4, $l5, $l6, $l7;
        android.util.Pair $r5, $r6;
        boolean $z0;
        java.lang.RuntimeException $r7;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $r2 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo getJob()>();

        $i0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getUid()>();

        $r3 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        $i1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUserId()>();

        $i2 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getStandbyBucket()>();

        $r4 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourceTag()>();

        $i3 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getNumFailures()>();

        $l4 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: long getEarliestRunTime()>();

        $l5 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: long getLatestRunTimeElapsed()>();

        $l6 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: long getLastSuccessfulRunTime()>();

        $l7 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: long getLastFailedRunTime()>();

        $i8 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getInternalFlags()>();

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void <init>(android.app.job.JobInfo,int,java.lang.String,int,int,java.lang.String,int,long,long,long,long,int)>($r2, $i0, $r3, $i1, $i2, $r4, $i3, $l4, $l5, $l6, $l7, $i8);

        $r5 = r1.<com.android.server.job.controllers.JobStatus: android.util.Pair mPersistedUtcTimes>;

        r0.<com.android.server.job.controllers.JobStatus: android.util.Pair mPersistedUtcTimes> = $r5;

        $r6 = r1.<com.android.server.job.controllers.JobStatus: android.util.Pair mPersistedUtcTimes>;

        if $r6 == null goto label1;

        $z0 = <com.android.server.job.controllers.JobStatus: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("JobScheduler.JobStatus", "Cloning job with persisted run times", $r7);

     label1:
        return;
    }

    public void <init>(com.android.server.job.controllers.JobStatus, long, long, int, long, long)
    {
        com.android.server.job.controllers.JobStatus r0, r1;
        long l0, l1, l3, l4;
        int i2, $i5, $i6, $i7, $i8;
        android.app.job.JobInfo $r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        l3 := @parameter4: long;

        l4 := @parameter5: long;

        $r2 = r1.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i5 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getUid()>();

        $r3 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        $i6 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUserId()>();

        $i7 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getStandbyBucket()>();

        $r4 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourceTag()>();

        $i8 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getInternalFlags()>();

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void <init>(android.app.job.JobInfo,int,java.lang.String,int,int,java.lang.String,int,long,long,long,long,int)>($r2, $i5, $r3, $i6, $i7, $r4, i2, l0, l1, l3, l4, $i8);

        return;
    }

    private void addDynamicConstraints(int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0, $i1, $i2, $i3, i5, i6, i7, i8, i9;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i5 := @parameter0: int;

        i6 = i5;

        $i0 = 16777216 & i5;

        if $i0 == 0 goto label1;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("JobScheduler.JobStatus", "Tried to set quota as a dynamic constraint");

        i6 = i5 & -16777217;

     label1:
        i7 = i6;

        $z0 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean hasConnectivityConstraint()>();

        if $z0 != 0 goto label2;

        i7 = i6 & -268435457;

     label2:
        i8 = i7;

        $z1 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean hasContentTriggerConstraint()>();

        if $z1 != 0 goto label3;

        i8 = i7 & -67108865;

     label3:
        $i1 = r0.<com.android.server.job.controllers.JobStatus: int mDynamicConstraints>;

        i9 = $i1 | i8;

        r0.<com.android.server.job.controllers.JobStatus: int mDynamicConstraints> = i9;

        if i9 == 0 goto label4;

        $i2 = r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints>;

        $i3 = $i2 & i9;

        if i9 != $i3 goto label4;

        z2 = 1;

        goto label5;

     label4:
        z2 = 0;

     label5:
        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDynamicSatisfied> = z2;

        return;
    }

    static java.lang.String bucketName(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == 0 goto label6;

        if i0 == 1 goto label5;

        if i0 == 2 goto label4;

        if i0 == 3 goto label3;

        if i0 == 4 goto label2;

        if i0 == 5 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        return "RESTRICTED";

     label2:
        return "NEVER";

     label3:
        return "RARE";

     label4:
        return "FREQUENT";

     label5:
        return "WORKING_SET";

     label6:
        return "ACTIVE";
    }

    public static com.android.server.job.controllers.JobStatus createFromJobInfo(android.app.job.JobInfo, int, java.lang.String, int, java.lang.String)
    {
        android.app.job.JobInfo r0;
        int i0, i1, $i3;
        java.lang.String r1, r2, r6;
        long l2, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, l13, l14, l15;
        java.time.Clock $r3;
        boolean $z0, $z1, $z2;
        android.content.ComponentName $r4;
        com.android.server.job.controllers.JobStatus $r5;

        r0 := @parameter0: android.app.job.JobInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        $r3 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l2 = virtualinvoke $r3.<java.time.Clock: long millis()>();

        $z0 = virtualinvoke r0.<android.app.job.JobInfo: boolean isPeriodic()>();

        if $z0 == 0 goto label1;

        $l6 = staticinvoke <android.app.job.JobInfo: long getMinPeriodMillis()>();

        $l7 = virtualinvoke r0.<android.app.job.JobInfo: long getIntervalMillis()>();

        $l8 = staticinvoke <java.lang.Math: long min(long,long)>(31536000000L, $l7);

        l13 = staticinvoke <java.lang.Math: long max(long,long)>($l6, $l8);

        l14 = l2 + l13;

        $l9 = staticinvoke <android.app.job.JobInfo: long getMinFlexMillis()>();

        $l10 = virtualinvoke r0.<android.app.job.JobInfo: long getFlexMillis()>();

        $l11 = staticinvoke <java.lang.Math: long min(long,long)>(l13, $l10);

        $l12 = staticinvoke <java.lang.Math: long max(long,long)>($l9, $l11);

        l15 = l14 - $l12;

        goto label5;

     label1:
        $z1 = virtualinvoke r0.<android.app.job.JobInfo: boolean hasEarlyConstraint()>();

        if $z1 == 0 goto label2;

        $l5 = virtualinvoke r0.<android.app.job.JobInfo: long getMinLatencyMillis()>();

        l15 = $l5 + l2;

        goto label3;

     label2:
        l15 = 0L;

     label3:
        $z2 = virtualinvoke r0.<android.app.job.JobInfo: boolean hasLateConstraint()>();

        if $z2 == 0 goto label4;

        $l4 = virtualinvoke r0.<android.app.job.JobInfo: long getMaxExecutionDelayMillis()>();

        l14 = $l4 + l2;

        goto label5;

     label4:
        l14 = 9223372036854775807L;

     label5:
        if r1 == null goto label6;

        r6 = r1;

        goto label7;

     label6:
        $r4 = virtualinvoke r0.<android.app.job.JobInfo: android.content.ComponentName getService()>();

        r6 = virtualinvoke $r4.<android.content.ComponentName: java.lang.String getPackageName()>();

     label7:
        $r5 = new com.android.server.job.controllers.JobStatus;

        $i3 = staticinvoke <com.android.server.job.JobSchedulerService: int standbyBucketForPackage(java.lang.String,int,long)>(r6, i1, l2);

        specialinvoke $r5.<com.android.server.job.controllers.JobStatus: void <init>(android.app.job.JobInfo,int,java.lang.String,int,int,java.lang.String,int,long,long,long,long,int)>(r0, i0, r1, i1, $i3, r2, 0, l15, l14, 0L, 0L, 0);

        return $r5;
    }

    private void dumpJobWorkItem(android.util.proto.ProtoOutputStream, long, android.app.job.JobWorkItem)
    {
        com.android.server.job.controllers.JobStatus r0;
        android.util.proto.ProtoOutputStream r1;
        int $i0, $i1;
        android.content.Intent $r2, $r4;
        com.android.server.job.GrantedUriPermissions $r3;
        long l2, l3;
        android.app.job.JobWorkItem r5;
        java.lang.Object r6;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l2 := @parameter1: long;

        r5 := @parameter2: android.app.job.JobWorkItem;

        l3 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l2);

        $i0 = virtualinvoke r5.<android.app.job.JobWorkItem: int getWorkId()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i0);

        $i1 = virtualinvoke r5.<android.app.job.JobWorkItem: int getDeliveryCount()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i1);

        $r2 = virtualinvoke r5.<android.app.job.JobWorkItem: android.content.Intent getIntent()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke r5.<android.app.job.JobWorkItem: android.content.Intent getIntent()>();

        virtualinvoke $r4.<android.content.Intent: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268035L);

     label1:
        r6 = virtualinvoke r5.<android.app.job.JobWorkItem: java.lang.Object getGrants()>();

        if r6 == null goto label2;

        $r3 = (com.android.server.job.GrantedUriPermissions) r6;

        virtualinvoke $r3.<com.android.server.job.GrantedUriPermissions: void dump(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268036L);

     label2:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l3);

        return;
    }

    private void dumpJobWorkItem(java.io.PrintWriter, java.lang.String, android.app.job.JobWorkItem, int)
    {
        com.android.server.job.controllers.JobStatus r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r10;
        int i0, $i1, $i2;
        android.content.Intent $r4;
        java.lang.Object $r5, $r6;
        java.lang.StringBuilder $r7;
        android.app.job.JobWorkItem r11;
        com.android.server.job.GrantedUriPermissions r12;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r11 := @parameter2: android.app.job.JobWorkItem;

        i0 := @parameter3: int;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": #");

        $i1 = virtualinvoke r11.<android.app.job.JobWorkItem: int getWorkId()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $i2 = virtualinvoke r11.<android.app.job.JobWorkItem: int getDeliveryCount()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("x ");

        $r4 = virtualinvoke r11.<android.app.job.JobWorkItem: android.content.Intent getIntent()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r4);

        $r5 = virtualinvoke r11.<android.app.job.JobWorkItem: java.lang.Object getGrants()>();

        if $r5 == null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  URI grants:");

        $r6 = virtualinvoke r11.<android.app.job.JobWorkItem: java.lang.Object getGrants()>();

        r12 = (com.android.server.job.GrantedUriPermissions) $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<com.android.server.job.GrantedUriPermissions: void dump(java.io.PrintWriter,java.lang.String)>(r1, $r10);

     label1:
        return;
    }

    private void formatRunTime(java.io.PrintWriter, long, long, long)
    {
        com.android.server.job.controllers.JobStatus r0;
        java.io.PrintWriter r1;
        long l0, l1, l2, $l4;
        byte $b3;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: java.io.PrintWriter;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        $b3 = l0 cmp l1;

        if $b3 != 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("none");

        goto label2;

     label1:
        $l4 = l0 - l2;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l4, r1);

     label2:
        return;
    }

    private void formatRunTime(java.lang.StringBuilder, long, long, long)
    {
        com.android.server.job.controllers.JobStatus r0;
        java.lang.StringBuilder r1;
        long l0, l1, l2, $l4;
        byte $b3;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: java.lang.StringBuilder;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        $b3 = l0 cmp l1;

        if $b3 != 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("none");

        goto label2;

     label1:
        $l4 = l0 - l2;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l4, r1);

     label2:
        return;
    }

    private static java.lang.CharSequence formatTime(long)
    {
        long l0;
        java.lang.CharSequence $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>("yyyy-MM-dd HH:mm:ss", l0);

        return $r0;
    }

    private int getProtoConstraint(int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i0 := @parameter0: int;

        if i0 == -2147483648 goto label11;

        if i0 == 4 goto label10;

        if i0 == 8 goto label09;

        if i0 == 4194304 goto label08;

        if i0 == 16777216 goto label07;

        if i0 == 33554432 goto label06;

        if i0 == 67108864 goto label05;

        if i0 == 268435456 goto label04;

        if i0 == 1073741824 goto label03;

        if i0 == 1 goto label02;

        if i0 == 2 goto label01;

        return 0;

     label01:
        return 2;

     label02:
        return 1;

     label03:
        return 5;

     label04:
        return 7;

     label05:
        return 8;

     label06:
        return 9;

     label07:
        return 10;

     label08:
        return 11;

     label09:
        return 3;

     label10:
        return 6;

     label11:
        return 4;
    }

    private boolean hasConstraint(int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.job.controllers.JobStatus: int requiredConstraints>;

        $i2 = $i1 & i0;

        if $i2 != 0 goto label2;

        $i3 = r0.<com.android.server.job.controllers.JobStatus: int mDynamicConstraints>;

        $i4 = $i3 & i0;

        if $i4 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private boolean isConstraintsSatisfied(int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0, $i1, $i2, $i3, i4, i6, i7;
        boolean z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i4 := @parameter0: int;

        i0 = r0.<com.android.server.job.controllers.JobStatus: int overrideState>;

        z0 = 1;

        if i0 != 3 goto label1;

        return 1;

     label1:
        i6 = i4;

        if i0 != 2 goto label2;

        $i2 = r0.<com.android.server.job.controllers.JobStatus: int requiredConstraints>;

        $i3 = $i2 & -2147483633;

        i6 = i4 | $i3;

     label2:
        i7 = r0.<com.android.server.job.controllers.JobStatus: int mRequiredConstraintsOfInterest>;

        $i1 = i6 & i7;

        if $i1 != i7 goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        return z0;
    }

    private boolean isReady(int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0, $i1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i0 := @parameter0: int;

        z0 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyWithinQuota>;

        z6 = 0;

        if z0 != 0 goto label1;

        $z5 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDynamicSatisfied>;

        if $z5 == 0 goto label2;

     label1:
        $i1 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: int getEffectiveStandbyBucket()>();

        if $i1 != 4 goto label3;

     label2:
        return 0;

     label3:
        $z1 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotDozing>;

        if $z1 == 0 goto label5;

        $z2 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotRestrictedInBg>;

        if $z2 == 0 goto label5;

        $z3 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDeadlineSatisfied>;

        if $z3 != 0 goto label4;

        $z4 = specialinvoke r0.<com.android.server.job.controllers.JobStatus: boolean isConstraintsSatisfied(int)>(i0);

        if $z4 == 0 goto label5;

     label4:
        z6 = 1;

        goto label5;

     label5:
        return z6;
    }

    private void removeDynamicConstraints(int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0, $i1, $i2, i3, i4;
        boolean z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i3 := @parameter0: int;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int mDynamicConstraints>;

        i4 = $i0 & i3;

        r0.<com.android.server.job.controllers.JobStatus: int mDynamicConstraints> = i4;

        if i4 == 0 goto label1;

        $i1 = r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints>;

        $i2 = $i1 & i4;

        if i4 != $i2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDynamicSatisfied> = z0;

        return;
    }

    private static void ungrantWorkItem(android.app.job.JobWorkItem)
    {
        android.app.job.JobWorkItem r0;
        java.lang.Object $r1, $r2;
        com.android.server.job.GrantedUriPermissions $r3;

        r0 := @parameter0: android.app.job.JobWorkItem;

        $r1 = virtualinvoke r0.<android.app.job.JobWorkItem: java.lang.Object getGrants()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<android.app.job.JobWorkItem: java.lang.Object getGrants()>();

        $r3 = (com.android.server.job.GrantedUriPermissions) $r2;

        virtualinvoke $r3.<com.android.server.job.GrantedUriPermissions: void revoke()>();

     label1:
        return;
    }

    private static void ungrantWorkList(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        int i0, i1;
        java.lang.Object $r1;
        android.app.job.JobWorkItem $r2;

        r0 := @parameter0: java.util.ArrayList;

        if r0 == null goto label2;

        i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r2 = (android.app.job.JobWorkItem) $r1;

        staticinvoke <com.android.server.job.controllers.JobStatus: void ungrantWorkItem(android.app.job.JobWorkItem)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void updateEstimatedNetworkBytesLocked()
    {
        com.android.server.job.controllers.JobStatus r0;
        android.app.job.JobInfo $r1, $r2;
        long $l0, $l1, $l3, $l6, $l7, $l9, $l10, l12, $l13, l15;
        java.util.ArrayList $r3, $r4, $r5, $r8;
        int $i2, i11;
        byte $b4, $b5, $b8, $b14;
        java.lang.Object $r6, $r9;
        android.app.job.JobWorkItem $r7, $r10;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l0 = virtualinvoke $r1.<android.app.job.JobInfo: long getEstimatedNetworkDownloadBytes()>();

        r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkDownloadBytes> = $l0;

        $r2 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l1 = virtualinvoke $r2.<android.app.job.JobInfo: long getEstimatedNetworkUploadBytes()>();

        r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkUploadBytes> = $l1;

        $r3 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        if $r3 == null goto label4;

        i11 = 0;

     label1:
        $r4 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i11 >= $i2 goto label4;

        $l3 = r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkDownloadBytes>;

        $b4 = $l3 cmp -1L;

        if $b4 == 0 goto label2;

        $r8 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        $r10 = (android.app.job.JobWorkItem) $r9;

        l12 = virtualinvoke $r10.<android.app.job.JobWorkItem: long getEstimatedNetworkDownloadBytes()>();

        $b8 = l12 cmp -1L;

        if $b8 == 0 goto label2;

        $l9 = r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkDownloadBytes>;

        $l10 = $l9 + l12;

        r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkDownloadBytes> = $l10;

     label2:
        $l13 = r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkUploadBytes>;

        $b14 = $l13 cmp -1L;

        if $b14 == 0 goto label3;

        $r5 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        $r7 = (android.app.job.JobWorkItem) $r6;

        l15 = virtualinvoke $r7.<android.app.job.JobWorkItem: long getEstimatedNetworkUploadBytes()>();

        $b5 = l15 cmp -1L;

        if $b5 == 0 goto label3;

        $l6 = r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkUploadBytes>;

        $l7 = $l6 + l15;

        r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkUploadBytes> = $l7;

     label3:
        i11 = i11 + 1;

        goto label1;

     label4:
        return;
    }

    public void addInternalFlags(int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.job.controllers.JobStatus: int mInternalFlags>;

        $i2 = $i1 | i0;

        r0.<com.android.server.job.controllers.JobStatus: int mInternalFlags> = $i2;

        return;
    }

    public boolean areDynamicConstraintsSatisfied()
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $z0 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDynamicSatisfied>;

        return $z0;
    }

    public void clearPersistedUtcTimes()
    {
        com.android.server.job.controllers.JobStatus r0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r0.<com.android.server.job.controllers.JobStatus: android.util.Pair mPersistedUtcTimes> = null;

        return;
    }

    boolean clearTrackingController(int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0, i1, $i2, $i3;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i0 := @parameter0: int;

        i1 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i2 = i1 & i0;

        if $i2 == 0 goto label1;

        $i3 = i1 & i0;

        r0.<com.android.server.job.controllers.JobStatus: int trackingControllers> = $i3;

        return 1;

     label1:
        return 0;
    }

    public boolean completeWorkLocked(int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0, i1, $i2, i3;
        java.util.ArrayList $r1, $r3, r5;
        java.lang.Object $r2;
        android.app.job.JobWorkItem r6;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i0 := @parameter0: int;

        r5 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        if r5 == null goto label3;

        i1 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r6 = (android.app.job.JobWorkItem) $r2;

        $i2 = virtualinvoke r6.<android.app.job.JobWorkItem: int getWorkId()>();

        if $i2 != i0 goto label2;

        $r3 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>(i3);

        staticinvoke <com.android.server.job.controllers.JobStatus: void ungrantWorkItem(android.app.job.JobWorkItem)>(r6);

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    public android.app.job.JobWorkItem dequeueWorkLocked()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0;
        java.util.ArrayList $r1, $r3, $r4, $r5, r6;
        java.lang.Object $r2;
        android.app.job.JobWorkItem r7;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r6 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        if r6 == null goto label3;

        $i0 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label3;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r7 = (android.app.job.JobWorkItem) $r2;

        if r7 == null goto label2;

        $r3 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        if $r3 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork> = $r5;

     label1:
        $r4 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

        virtualinvoke r7.<android.app.job.JobWorkItem: void bumpDeliveryCount()>();

     label2:
        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void updateEstimatedNetworkBytesLocked()>();

        return r7;

     label3:
        return null;
    }

    public void dump(android.util.proto.ProtoOutputStream, long, boolean, long)
    {
        com.android.server.job.controllers.JobStatus r0;
        android.util.proto.ProtoOutputStream r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        long l0, l1, $l20, $l21, $l25, $l27, $l28, $l30, $l31, $l41, $l42, $l48, $l49, $l51, $l53, $l55, $l57, $l58, l60, l61, l63, l64, l65, l66, l69, l74, l75, l76, l77, l78, l79;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i29, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i43, $i44, $i45, $i50, $i52, $i59, i62, $i67, $i68, i70, i71, i72, i73;
        java.lang.String $r2, $r3, $r20, $r24, $r67;
        android.util.ArraySet $r4, $r5, $r16, $r17, $r21, $r22;
        java.util.ArrayList $r6, $r7, $r8, $r9, $r12, $r13;
        byte $b22, $b23, $b24, $b26, $b46, $b47, $b54, $b56;
        java.lang.Object $r10, $r14, $r18, $r23;
        android.app.job.JobWorkItem $r11, $r15;
        android.net.Uri $r19, r69;
        android.app.job.JobInfo $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r39, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r62, $r63, $r64, $r65, $r70, $r72, $r74;
        android.content.ComponentName $r27;
        android.app.job.JobInfo$TriggerContentUri[] $r38, $r60, $r66;
        android.net.NetworkRequest $r40, $r48;
        android.content.ClipData $r50, $r75;
        android.os.Bundle $r52, $r54, $r73;
        android.os.PersistableBundle $r56, $r58, $r71;
        android.app.job.JobInfo$TriggerContentUri r68;
        com.android.server.job.GrantedUriPermissions r76;
        android.net.Network r77;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l60 := @parameter1: long;

        z0 := @parameter2: boolean;

        l0 := @parameter3: long;

        l1 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l60);

        $i2 = r0.<com.android.server.job.controllers.JobStatus: int callingUid>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i2);

        $r2 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String tag>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r2);

        $i3 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i3);

        $i4 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: int getSourceUserId()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i4);

        $r3 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333445L, $r3);

        if z0 == 0 goto label13;

        l61 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268038L);

        $r26 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r27 = virtualinvoke $r26.<android.app.job.JobInfo: android.content.ComponentName getService()>();

        virtualinvoke $r27.<android.content.ComponentName: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268033L);

        $r28 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z7 = virtualinvoke $r28.<android.app.job.JobInfo: boolean isPeriodic()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366146L, $z7);

        $r29 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l41 = virtualinvoke $r29.<android.app.job.JobInfo: long getIntervalMillis()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529667L, $l41);

        $r30 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l42 = virtualinvoke $r30.<android.app.job.JobInfo: long getFlexMillis()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529668L, $l42);

        $r31 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z8 = virtualinvoke $r31.<android.app.job.JobInfo: boolean isPersisted()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366149L, $z8);

        $r32 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i43 = virtualinvoke $r32.<android.app.job.JobInfo: int getPriority()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1172526071814L, $i43);

        $r33 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i44 = virtualinvoke $r33.<android.app.job.JobInfo: int getFlags()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464263L, $i44);

        $i45 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: int getInternalFlags()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1112396529688L, $i45);

        $r34 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z9 = virtualinvoke $r34.<android.app.job.JobInfo: boolean isRequireCharging()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366152L, $z9);

        $r35 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z10 = virtualinvoke $r35.<android.app.job.JobInfo: boolean isRequireBatteryNotLow()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366153L, $z10);

        $r36 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z11 = virtualinvoke $r36.<android.app.job.JobInfo: boolean isRequireDeviceIdle()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366154L, $z11);

        $r37 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r38 = virtualinvoke $r37.<android.app.job.JobInfo: android.app.job.JobInfo$TriggerContentUri[] getTriggerContentUris()>();

        if $r38 == null goto label05;

        i62 = 0;

     label01:
        $r59 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r60 = virtualinvoke $r59.<android.app.job.JobInfo: android.app.job.JobInfo$TriggerContentUri[] getTriggerContentUris()>();

        $i52 = lengthof $r60;

        if i62 >= $i52 goto label03;

        l63 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895819L);

        $r65 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r66 = virtualinvoke $r65.<android.app.job.JobInfo: android.app.job.JobInfo$TriggerContentUri[] getTriggerContentUris()>();

        r68 = $r66[i62];

        $i59 = virtualinvoke r68.<android.app.job.JobInfo$TriggerContentUri: int getFlags()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i59);

        r69 = virtualinvoke r68.<android.app.job.JobInfo$TriggerContentUri: android.net.Uri getUri()>();

        if r69 == null goto label02;

        $r67 = virtualinvoke r69.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r67);

        goto label02;

     label02:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l63);

        i62 = i62 + 1;

        goto label01;

     label03:
        $r61 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l53 = virtualinvoke $r61.<android.app.job.JobInfo: long getTriggerContentUpdateDelay()>();

        $b54 = $l53 cmp 0L;

        if $b54 < 0 goto label04;

        $r64 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l58 = virtualinvoke $r64.<android.app.job.JobInfo: long getTriggerContentUpdateDelay()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529676L, $l58);

     label04:
        $r62 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l55 = virtualinvoke $r62.<android.app.job.JobInfo: long getTriggerContentMaxDelay()>();

        $b56 = $l55 cmp 0L;

        if $b56 < 0 goto label05;

        $r63 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l57 = virtualinvoke $r63.<android.app.job.JobInfo: long getTriggerContentMaxDelay()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529677L, $l57);

     label05:
        $r70 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r71 = virtualinvoke $r70.<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>();

        if $r71 == null goto label06;

        $r55 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r56 = virtualinvoke $r55.<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>();

        $z15 = virtualinvoke $r56.<android.os.PersistableBundle: boolean isDefinitelyEmpty()>();

        if $z15 != 0 goto label06;

        $r57 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r58 = virtualinvoke $r57.<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>();

        virtualinvoke $r58.<android.os.PersistableBundle: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268046L);

     label06:
        $r72 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r73 = virtualinvoke $r72.<android.app.job.JobInfo: android.os.Bundle getTransientExtras()>();

        if $r73 == null goto label07;

        $r51 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r52 = virtualinvoke $r51.<android.app.job.JobInfo: android.os.Bundle getTransientExtras()>();

        $z14 = virtualinvoke $r52.<android.os.Bundle: boolean isDefinitelyEmpty()>();

        if $z14 != 0 goto label07;

        $r53 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r54 = virtualinvoke $r53.<android.app.job.JobInfo: android.os.Bundle getTransientExtras()>();

        virtualinvoke $r54.<android.os.Bundle: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268047L);

     label07:
        $r74 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r75 = virtualinvoke $r74.<android.app.job.JobInfo: android.content.ClipData getClipData()>();

        if $r75 == null goto label08;

        $r49 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r50 = virtualinvoke $r49.<android.app.job.JobInfo: android.content.ClipData getClipData()>();

        virtualinvoke $r50.<android.content.ClipData: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268048L);

     label08:
        r76 = r0.<com.android.server.job.controllers.JobStatus: com.android.server.job.GrantedUriPermissions uriPerms>;

        if r76 == null goto label09;

        virtualinvoke r76.<com.android.server.job.GrantedUriPermissions: void dump(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268049L);

     label09:
        $r39 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r40 = virtualinvoke $r39.<android.app.job.JobInfo: android.net.NetworkRequest getRequiredNetwork()>();

        if $r40 == null goto label10;

        $r47 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r48 = virtualinvoke $r47.<android.app.job.JobInfo: android.net.NetworkRequest getRequiredNetwork()>();

        virtualinvoke $r48.<android.net.NetworkRequest: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268050L);

     label10:
        l64 = r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkDownloadBytes>;

        $b46 = l64 cmp -1L;

        if $b46 == 0 goto label11;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529689L, l64);

     label11:
        l65 = r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkUploadBytes>;

        $b47 = l65 cmp -1L;

        if $b47 == 0 goto label12;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529690L, l65);

     label12:
        $r41 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l48 = virtualinvoke $r41.<android.app.job.JobInfo: long getMinLatencyMillis()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529684L, $l48);

        $r42 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l49 = virtualinvoke $r42.<android.app.job.JobInfo: long getMaxExecutionDelayMillis()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529685L, $l49);

        l66 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268054L);

        $r43 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i50 = virtualinvoke $r43.<android.app.job.JobInfo: int getBackoffPolicy()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169921L, $i50);

        $r44 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l51 = virtualinvoke $r44.<android.app.job.JobInfo: long getInitialBackoffMillis()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529666L, $l51);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l66);

        $r45 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z12 = virtualinvoke $r45.<android.app.job.JobInfo: boolean hasEarlyConstraint()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366167L, $z12);

        $r46 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z13 = virtualinvoke $r46.<android.app.job.JobInfo: boolean hasLateConstraint()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366168L, $z13);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l61);

     label13:
        $i67 = r0.<com.android.server.job.controllers.JobStatus: int requiredConstraints>;

        virtualinvoke r0.<com.android.server.job.controllers.JobStatus: void dumpConstraints(android.util.proto.ProtoOutputStream,long,int)>(r1, 2259152797703L, $i67);

        $i68 = r0.<com.android.server.job.controllers.JobStatus: int mDynamicConstraints>;

        virtualinvoke r0.<com.android.server.job.controllers.JobStatus: void dumpConstraints(android.util.proto.ProtoOutputStream,long,int)>(r1, 2259152797727L, $i68);

        if z0 == 0 goto label14;

        $i36 = r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints>;

        virtualinvoke r0.<com.android.server.job.controllers.JobStatus: void dumpConstraints(android.util.proto.ProtoOutputStream,long,int)>(r1, 2259152797704L, $i36);

        $i37 = r0.<com.android.server.job.controllers.JobStatus: int requiredConstraints>;

        $i39 = $i37 | 16777216;

        $i38 = r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints>;

        $i40 = $i39 & $i38;

        virtualinvoke r0.<com.android.server.job.controllers.JobStatus: void dumpConstraints(android.util.proto.ProtoOutputStream,long,int)>(r1, 2259152797705L, $i40);

        $z4 = r0.<com.android.server.job.controllers.JobStatus: boolean dozeWhitelisted>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366154L, $z4);

        $z5 = r0.<com.android.server.job.controllers.JobStatus: boolean uidActive>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366170L, $z5);

        $r25 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z6 = virtualinvoke $r25.<android.app.job.JobInfo: boolean isExemptedFromAppStandby()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366171L, $z6);

     label14:
        $i5 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i6 = $i5 & 1;

        if $i6 == 0 goto label15;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(2259152797707L, 0);

     label15:
        $i7 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i8 = $i7 & 2;

        if $i8 == 0 goto label16;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(2259152797707L, 1);

     label16:
        $i9 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i10 = $i9 & 4;

        if $i10 == 0 goto label17;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(2259152797707L, 2);

     label17:
        $i11 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i12 = $i11 & 8;

        if $i12 == 0 goto label18;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(2259152797707L, 3);

     label18:
        $i13 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i14 = $i13 & 16;

        if $i14 == 0 goto label19;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(2259152797707L, 4);

     label19:
        $i15 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i16 = $i15 & 32;

        if $i16 == 0 goto label20;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(2259152797707L, 5);

     label20:
        $i17 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i18 = $i17 & 64;

        if $i18 == 0 goto label21;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(2259152797707L, 6);

     label21:
        l69 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268057L);

        $z1 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotDozing>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366145L, $z1);

        $z2 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotRestrictedInBg>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366146L, $z2);

        $z3 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDynamicSatisfied>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366147L, $z3);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l69);

        $r4 = r0.<com.android.server.job.controllers.JobStatus: android.util.ArraySet changedAuthorities>;

        if $r4 == null goto label23;

        i70 = 0;

     label22:
        $r21 = r0.<com.android.server.job.controllers.JobStatus: android.util.ArraySet changedAuthorities>;

        $i35 = virtualinvoke $r21.<android.util.ArraySet: int size()>();

        if i70 >= $i35 goto label23;

        $r22 = r0.<com.android.server.job.controllers.JobStatus: android.util.ArraySet changedAuthorities>;

        $r23 = virtualinvoke $r22.<android.util.ArraySet: java.lang.Object valueAt(int)>(i70);

        $r24 = (java.lang.String) $r23;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(2237677961228L, $r24);

        i70 = i70 + 1;

        goto label22;

     label23:
        $r5 = r0.<com.android.server.job.controllers.JobStatus: android.util.ArraySet changedUris>;

        if $r5 == null goto label25;

        i71 = 0;

     label24:
        $r16 = r0.<com.android.server.job.controllers.JobStatus: android.util.ArraySet changedUris>;

        $i34 = virtualinvoke $r16.<android.util.ArraySet: int size()>();

        if i71 >= $i34 goto label25;

        $r17 = r0.<com.android.server.job.controllers.JobStatus: android.util.ArraySet changedUris>;

        $r18 = virtualinvoke $r17.<android.util.ArraySet: java.lang.Object valueAt(int)>(i71);

        $r19 = (android.net.Uri) $r18;

        $r20 = virtualinvoke $r19.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(2237677961229L, $r20);

        i71 = i71 + 1;

        goto label24;

     label25:
        r77 = r0.<com.android.server.job.controllers.JobStatus: android.net.Network network>;

        if r77 == null goto label26;

        virtualinvoke r77.<android.net.Network: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268046L);

     label26:
        $r6 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        if $r6 == null goto label28;

        i72 = 0;

     label27:
        $r12 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        $i33 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if i72 >= $i33 goto label28;

        $r13 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i72);

        $r15 = (android.app.job.JobWorkItem) $r14;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void dumpJobWorkItem(android.util.proto.ProtoOutputStream,long,android.app.job.JobWorkItem)>(r1, 2246267895823L, $r15);

        i72 = i72 + 1;

        goto label27;

     label28:
        $r7 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        if $r7 == null goto label30;

        i73 = 0;

     label29:
        $r8 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        $i32 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i73 >= $i32 goto label30;

        $r9 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i73);

        $r11 = (android.app.job.JobWorkItem) $r10;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void dumpJobWorkItem(android.util.proto.ProtoOutputStream,long,android.app.job.JobWorkItem)>(r1, 2246267895824L, $r11);

        i73 = i73 + 1;

        goto label29;

     label30:
        $i19 = r0.<com.android.server.job.controllers.JobStatus: int standbyBucket>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169937L, $i19);

        $l20 = r0.<com.android.server.job.controllers.JobStatus: long enqueueTime>;

        $l21 = l0 - $l20;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529682L, $l21);

        l74 = r0.<com.android.server.job.controllers.JobStatus: long whenStandbyDeferred>;

        $b22 = l74 cmp 0L;

        if $b22 != 0 goto label31;

        l75 = 0L;

        goto label32;

     label31:
        l75 = l0 - l74;

     label32:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529692L, l75);

        l76 = r0.<com.android.server.job.controllers.JobStatus: long mFirstForceBatchedTimeElapsed>;

        $b23 = l76 cmp 0L;

        if $b23 != 0 goto label33;

        l77 = 0L;

        goto label34;

     label33:
        l77 = l0 - l76;

     label34:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529693L, l77);

        l78 = r0.<com.android.server.job.controllers.JobStatus: long earliestRunTimeElapsedMillis>;

        $b24 = l78 cmp 0L;

        if $b24 != 0 goto label35;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1176821039123L, 0);

        goto label36;

     label35:
        $l25 = l78 - l0;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1176821039123L, $l25);

     label36:
        l79 = r0.<com.android.server.job.controllers.JobStatus: long latestRunTimeElapsedMillis>;

        $b26 = l79 cmp 9223372036854775807L;

        if $b26 != 0 goto label37;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1176821039124L, 0);

        goto label38;

     label37:
        $l27 = l79 - l0;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1176821039124L, $l27);

     label38:
        $l28 = r0.<com.android.server.job.controllers.JobStatus: long mOriginalLatestRunTimeElapsedMillis>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1116691496990L, $l28);

        $i29 = r0.<com.android.server.job.controllers.JobStatus: int numFailures>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464277L, $i29);

        $l30 = r0.<com.android.server.job.controllers.JobStatus: long mLastSuccessfulRunTime>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529686L, $l30);

        $l31 = r0.<com.android.server.job.controllers.JobStatus: long mLastFailedRunTime>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529687L, $l31);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String, boolean, long)
    {
        com.android.server.job.controllers.JobStatus r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r4, $r5, $r25, $r29, $r50, $r59, $r64, $r73, $r75, $r77, $r79, $r100;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        long l0, $l4, $l6, $l7, $l8, $l9, $l11, $l13, $l15, $l16, $l18, $l19, $l48, $l50, $l52, $l54, $l57, $l58, $l59, $l60, $l61, $l63, $l65, $l67, $l68, $l75, $l76, $l85;
        int $i1, $i2, $i3, $i10, $i17, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i56, $i62, $i69, $i70, $i71, $i72, $i73, $i74, i77, $i78, $i79, $i80, i81, i82, i83, i84;
        android.util.ArraySet $r6, $r19, $r20, $r22, $r23, $r97;
        android.net.Network $r7, $r18;
        byte $b5, $b12, $b14, $b49, $b51, $b53, $b55, $b64, $b66, $b86;
        java.lang.CharSequence $r8, $r9;
        java.util.ArrayList $r10, $r11, $r14, $r15, r98, r99;
        java.lang.Object $r12, $r16, $r21, $r24;
        android.app.job.JobWorkItem $r13, $r17;
        android.app.job.JobInfo $r26, $r27, $r30, $r31, $r32, $r33, $r35, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r52, $r55, $r57, $r60, $r62, $r65, $r67, $r68, $r69, $r70, $r71, $r76, $r78, $r80, $r81, $r82, $r83, $r84, $r85, $r88, $r90, $r92, $r96;
        android.content.ComponentName $r28;
        com.android.server.job.GrantedUriPermissions $r34, r95;
        android.net.NetworkRequest $r36, $r46;
        java.lang.StringBuilder $r47, $r51;
        android.content.ClipData $r53, $r93;
        android.os.Bundle $r56, $r58, $r91;
        android.os.PersistableBundle $r61, $r63, $r89;
        android.app.job.JobInfo$TriggerContentUri[] $r66, $r72, $r86;
        android.net.Uri $r74;
        android.app.job.JobInfo$TriggerContentUri r87;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        l0 := @parameter3: long;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $i1 = r0.<com.android.server.job.controllers.JobStatus: int callingUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" tag=");

        $r4 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String tag>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Source: uid=");

        $i2 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" user=");

        $i3 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: int getSourceUserId()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" pkg=");

        $r5 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        if z0 == 0 goto label21;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("JobInfo:");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Service: ");

        $r27 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r28 = virtualinvoke $r27.<android.app.job.JobInfo: android.content.ComponentName getService()>();

        $r29 = virtualinvoke $r28.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        $r30 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z6 = virtualinvoke $r30.<android.app.job.JobInfo: boolean isPeriodic()>();

        if $z6 == 0 goto label01;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  PERIODIC: interval=");

        $r80 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l75 = virtualinvoke $r80.<android.app.job.JobInfo: long getIntervalMillis()>();

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l75, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" flex=");

        $r81 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l76 = virtualinvoke $r81.<android.app.job.JobInfo: long getFlexMillis()>();

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l76, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label01:
        $r31 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z7 = virtualinvoke $r31.<android.app.job.JobInfo: boolean isPersisted()>();

        if $z7 == 0 goto label02;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  PERSISTED");

     label02:
        $r32 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i45 = virtualinvoke $r32.<android.app.job.JobInfo: int getPriority()>();

        if $i45 == 0 goto label03;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Priority: ");

        $r78 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i74 = virtualinvoke $r78.<android.app.job.JobInfo: int getPriority()>();

        $r79 = staticinvoke <android.app.job.JobInfo: java.lang.String getPriorityString(int)>($i74);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r79);

     label03:
        $r33 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i46 = virtualinvoke $r33.<android.app.job.JobInfo: int getFlags()>();

        if $i46 == 0 goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Flags: ");

        $r76 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i73 = virtualinvoke $r76.<android.app.job.JobInfo: int getFlags()>();

        $r77 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i73);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r77);

     label04:
        $i47 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: int getInternalFlags()>();

        if $i47 == 0 goto label06;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Internal flags: ");

        $i70 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: int getInternalFlags()>();

        $r75 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i70);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r75);

        $i71 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: int getInternalFlags()>();

        $i72 = $i71 & 1;

        if $i72 == 0 goto label05;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" HAS_FOREGROUND_EXEMPTION");

     label05:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label06:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Requires: charging=");

        $r82 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z12 = virtualinvoke $r82.<android.app.job.JobInfo: boolean isRequireCharging()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" batteryNotLow=");

        $r83 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z13 = virtualinvoke $r83.<android.app.job.JobInfo: boolean isRequireBatteryNotLow()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" deviceIdle=");

        $r84 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z14 = virtualinvoke $r84.<android.app.job.JobInfo: boolean isRequireDeviceIdle()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z14);

        $r85 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r86 = virtualinvoke $r85.<android.app.job.JobInfo: android.app.job.JobInfo$TriggerContentUri[] getTriggerContentUris()>();

        if $r86 == null goto label10;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Trigger content URIs:");

        i77 = 0;

     label07:
        $r65 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r66 = virtualinvoke $r65.<android.app.job.JobInfo: android.app.job.JobInfo$TriggerContentUri[] getTriggerContentUris()>();

        $i62 = lengthof $r66;

        if i77 >= $i62 goto label08;

        $r71 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r72 = virtualinvoke $r71.<android.app.job.JobInfo: android.app.job.JobInfo$TriggerContentUri[] getTriggerContentUris()>();

        r87 = $r72[i77];

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $i69 = virtualinvoke r87.<android.app.job.JobInfo$TriggerContentUri: int getFlags()>();

        $r73 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i69);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r73);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        $r74 = virtualinvoke r87.<android.app.job.JobInfo$TriggerContentUri: android.net.Uri getUri()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r74);

        i77 = i77 + 1;

        goto label07;

     label08:
        $r67 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l63 = virtualinvoke $r67.<android.app.job.JobInfo: long getTriggerContentUpdateDelay()>();

        $b64 = $l63 cmp 0L;

        if $b64 < 0 goto label09;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Trigger update delay: ");

        $r70 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l68 = virtualinvoke $r70.<android.app.job.JobInfo: long getTriggerContentUpdateDelay()>();

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l68, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label09:
        $r68 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l65 = virtualinvoke $r68.<android.app.job.JobInfo: long getTriggerContentMaxDelay()>();

        $b66 = $l65 cmp 0L;

        if $b66 < 0 goto label10;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Trigger max delay: ");

        $r69 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l67 = virtualinvoke $r69.<android.app.job.JobInfo: long getTriggerContentMaxDelay()>();

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l67, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label10:
        $r88 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r89 = virtualinvoke $r88.<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>();

        if $r89 == null goto label11;

        $r60 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r61 = virtualinvoke $r60.<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>();

        $z11 = virtualinvoke $r61.<android.os.PersistableBundle: boolean isDefinitelyEmpty()>();

        if $z11 != 0 goto label11;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Extras: ");

        $r62 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r63 = virtualinvoke $r62.<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>();

        $r64 = virtualinvoke $r63.<android.os.PersistableBundle: java.lang.String toShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r64);

     label11:
        $r90 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r91 = virtualinvoke $r90.<android.app.job.JobInfo: android.os.Bundle getTransientExtras()>();

        if $r91 == null goto label12;

        $r55 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r56 = virtualinvoke $r55.<android.app.job.JobInfo: android.os.Bundle getTransientExtras()>();

        $z10 = virtualinvoke $r56.<android.os.Bundle: boolean isDefinitelyEmpty()>();

        if $z10 != 0 goto label12;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Transient extras: ");

        $r57 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r58 = virtualinvoke $r57.<android.app.job.JobInfo: android.os.Bundle getTransientExtras()>();

        $r59 = virtualinvoke $r58.<android.os.Bundle: java.lang.String toShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r59);

     label12:
        $r92 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r93 = virtualinvoke $r92.<android.app.job.JobInfo: android.content.ClipData getClipData()>();

        if $r93 == null goto label13;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Clip data: ");

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>(int)>(128);

        $r52 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r53 = virtualinvoke $r52.<android.app.job.JobInfo: android.content.ClipData getClipData()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r51);

     label13:
        $r34 = r0.<com.android.server.job.controllers.JobStatus: com.android.server.job.GrantedUriPermissions uriPerms>;

        if $r34 == null goto label14;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Granted URI permissions:");

        r95 = r0.<com.android.server.job.controllers.JobStatus: com.android.server.job.GrantedUriPermissions uriPerms>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r95.<com.android.server.job.GrantedUriPermissions: void dump(java.io.PrintWriter,java.lang.String)>(r1, $r50);

     label14:
        $r35 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r36 = virtualinvoke $r35.<android.app.job.JobInfo: android.net.NetworkRequest getRequiredNetwork()>();

        if $r36 == null goto label15;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Network type: ");

        $r45 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r46 = virtualinvoke $r45.<android.app.job.JobInfo: android.net.NetworkRequest getRequiredNetwork()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r46);

     label15:
        $l48 = r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkDownloadBytes>;

        $b49 = $l48 cmp -1L;

        if $b49 == 0 goto label16;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Network download bytes: ");

        $l61 = r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkDownloadBytes>;

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l61);

     label16:
        $l50 = r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkUploadBytes>;

        $b51 = $l50 cmp -1L;

        if $b51 == 0 goto label17;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Network upload bytes: ");

        $l60 = r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkUploadBytes>;

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l60);

     label17:
        $r37 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l52 = virtualinvoke $r37.<android.app.job.JobInfo: long getMinLatencyMillis()>();

        $b53 = $l52 cmp 0L;

        if $b53 == 0 goto label18;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Minimum latency: ");

        $r44 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l59 = virtualinvoke $r44.<android.app.job.JobInfo: long getMinLatencyMillis()>();

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l59, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label18:
        $r38 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l54 = virtualinvoke $r38.<android.app.job.JobInfo: long getMaxExecutionDelayMillis()>();

        $b55 = $l54 cmp 0L;

        if $b55 == 0 goto label19;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Max execution delay: ");

        $r43 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l58 = virtualinvoke $r43.<android.app.job.JobInfo: long getMaxExecutionDelayMillis()>();

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l58, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label19:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Backoff: policy=");

        $r39 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i56 = virtualinvoke $r39.<android.app.job.JobInfo: int getBackoffPolicy()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i56);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" initial=");

        $r40 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $l57 = virtualinvoke $r40.<android.app.job.JobInfo: long getInitialBackoffMillis()>();

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l57, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $r41 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z8 = virtualinvoke $r41.<android.app.job.JobInfo: boolean hasEarlyConstraint()>();

        if $z8 == 0 goto label20;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Has early constraint");

     label20:
        $r42 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z9 = virtualinvoke $r42.<android.app.job.JobInfo: boolean hasLateConstraint()>();

        if $z9 == 0 goto label21;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Has late constraint");

     label21:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Required constraints:");

        $i78 = r0.<com.android.server.job.controllers.JobStatus: int requiredConstraints>;

        virtualinvoke r0.<com.android.server.job.controllers.JobStatus: void dumpConstraints(java.io.PrintWriter,int)>(r1, $i78);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Dynamic constraints:");

        $i79 = r0.<com.android.server.job.controllers.JobStatus: int mDynamicConstraints>;

        virtualinvoke r0.<com.android.server.job.controllers.JobStatus: void dumpConstraints(java.io.PrintWriter,int)>(r1, $i79);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        if z0 == 0 goto label24;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Satisfied constraints:");

        $i40 = r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints>;

        virtualinvoke r0.<com.android.server.job.controllers.JobStatus: void dumpConstraints(java.io.PrintWriter,int)>(r1, $i40);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Unsatisfied constraints:");

        $i41 = r0.<com.android.server.job.controllers.JobStatus: int requiredConstraints>;

        $i43 = $i41 | 16777216;

        $i42 = r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints>;

        $i44 = $i43 & $i42;

        virtualinvoke r0.<com.android.server.job.controllers.JobStatus: void dumpConstraints(java.io.PrintWriter,int)>(r1, $i44);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $z3 = r0.<com.android.server.job.controllers.JobStatus: boolean dozeWhitelisted>;

        if $z3 == 0 goto label22;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Doze whitelisted: true");

     label22:
        $z4 = r0.<com.android.server.job.controllers.JobStatus: boolean uidActive>;

        if $z4 == 0 goto label23;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Uid: active");

     label23:
        $r26 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z5 = virtualinvoke $r26.<android.app.job.JobInfo: boolean isExemptedFromAppStandby()>();

        if $z5 == 0 goto label24;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Is exempted from app standby");

     label24:
        $i80 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        if $i80 == 0 goto label32;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Tracking:");

        $i26 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i27 = $i26 & 1;

        if $i27 == 0 goto label25;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" BATTERY");

     label25:
        $i28 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i29 = $i28 & 2;

        if $i29 == 0 goto label26;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" CONNECTIVITY");

     label26:
        $i30 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i31 = $i30 & 4;

        if $i31 == 0 goto label27;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" CONTENT");

     label27:
        $i32 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i33 = $i32 & 8;

        if $i33 == 0 goto label28;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" IDLE");

     label28:
        $i34 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i35 = $i34 & 16;

        if $i35 == 0 goto label29;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" STORAGE");

     label29:
        $i36 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i37 = 32 & $i36;

        if $i37 == 0 goto label30;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" TIME");

     label30:
        $i38 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i39 = $i38 & 64;

        if $i39 == 0 goto label31;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" QUOTA");

     label31:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label32:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Implicit constraints:");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  readyNotDozing: ");

        $z15 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotDozing>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z15);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  readyNotRestrictedInBg: ");

        $z16 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotRestrictedInBg>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z16);

        $r96 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z17 = virtualinvoke $r96.<android.app.job.JobInfo: boolean isPeriodic()>();

        if $z17 != 0 goto label33;

        $z1 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean hasDeadlineConstraint()>();

        if $z1 == 0 goto label33;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  readyDeadlineSatisfied: ");

        $z2 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDeadlineSatisfied>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z2);

     label33:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  readyDynamicSatisfied: ");

        $z18 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDynamicSatisfied>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z18);

        $r97 = r0.<com.android.server.job.controllers.JobStatus: android.util.ArraySet changedAuthorities>;

        if $r97 == null goto label35;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Changed authorities:");

        i81 = 0;

     label34:
        $r22 = r0.<com.android.server.job.controllers.JobStatus: android.util.ArraySet changedAuthorities>;

        $i25 = virtualinvoke $r22.<android.util.ArraySet: int size()>();

        if i81 >= $i25 goto label35;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r23 = r0.<com.android.server.job.controllers.JobStatus: android.util.ArraySet changedAuthorities>;

        $r24 = virtualinvoke $r23.<android.util.ArraySet: java.lang.Object valueAt(int)>(i81);

        $r25 = (java.lang.String) $r24;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        i81 = i81 + 1;

        goto label34;

     label35:
        $r6 = r0.<com.android.server.job.controllers.JobStatus: android.util.ArraySet changedUris>;

        if $r6 == null goto label37;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Changed URIs:");

        i82 = 0;

     label36:
        $r19 = r0.<com.android.server.job.controllers.JobStatus: android.util.ArraySet changedUris>;

        $i24 = virtualinvoke $r19.<android.util.ArraySet: int size()>();

        if i82 >= $i24 goto label37;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r20 = r0.<com.android.server.job.controllers.JobStatus: android.util.ArraySet changedUris>;

        $r21 = virtualinvoke $r20.<android.util.ArraySet: java.lang.Object valueAt(int)>(i82);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r21);

        i82 = i82 + 1;

        goto label36;

     label37:
        $r7 = r0.<com.android.server.job.controllers.JobStatus: android.net.Network network>;

        if $r7 == null goto label38;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Network: ");

        $r18 = r0.<com.android.server.job.controllers.JobStatus: android.net.Network network>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r18);

     label38:
        r98 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        if r98 == null goto label40;

        $i22 = virtualinvoke r98.<java.util.ArrayList: int size()>();

        if $i22 <= 0 goto label40;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Pending work:");

        i83 = 0;

     label39:
        $r14 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        $i23 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if i83 >= $i23 goto label40;

        $r15 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i83);

        $r17 = (android.app.job.JobWorkItem) $r16;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void dumpJobWorkItem(java.io.PrintWriter,java.lang.String,android.app.job.JobWorkItem,int)>(r1, r2, $r17, i83);

        i83 = i83 + 1;

        goto label39;

     label40:
        r99 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        if r99 == null goto label42;

        $i20 = virtualinvoke r99.<java.util.ArrayList: int size()>();

        if $i20 <= 0 goto label42;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Executing work:");

        i84 = 0;

     label41:
        $r10 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        $i21 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if i84 >= $i21 goto label42;

        $r11 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i84);

        $r13 = (android.app.job.JobWorkItem) $r12;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void dumpJobWorkItem(java.io.PrintWriter,java.lang.String,android.app.job.JobWorkItem,int)>(r1, r2, $r13, i84);

        i84 = i84 + 1;

        goto label41;

     label42:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Standby bucket: ");

        $r100 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: java.lang.String getBucketName()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r100);

        $l85 = r0.<com.android.server.job.controllers.JobStatus: long whenStandbyDeferred>;

        $b86 = $l85 cmp 0L;

        if $b86 == 0 goto label43;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Deferred since: ");

        $l19 = r0.<com.android.server.job.controllers.JobStatus: long whenStandbyDeferred>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l19, l0, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label43:
        $l4 = r0.<com.android.server.job.controllers.JobStatus: long mFirstForceBatchedTimeElapsed>;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label44;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Time since first force batch attempt: ");

        $l18 = r0.<com.android.server.job.controllers.JobStatus: long mFirstForceBatchedTimeElapsed>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l18, l0, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label44:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Enqueue time: ");

        $l6 = r0.<com.android.server.job.controllers.JobStatus: long enqueueTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l6, l0, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Run time: earliest=");

        $l7 = r0.<com.android.server.job.controllers.JobStatus: long earliestRunTimeElapsedMillis>;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void formatRunTime(java.io.PrintWriter,long,long,long)>(r1, $l7, 0L, l0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", latest=");

        $l8 = r0.<com.android.server.job.controllers.JobStatus: long latestRunTimeElapsedMillis>;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void formatRunTime(java.io.PrintWriter,long,long,long)>(r1, $l8, 9223372036854775807L, l0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", original latest=");

        $l9 = r0.<com.android.server.job.controllers.JobStatus: long mOriginalLatestRunTimeElapsedMillis>;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void formatRunTime(java.io.PrintWriter,long,long,long)>(r1, $l9, 9223372036854775807L, l0);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $i10 = r0.<com.android.server.job.controllers.JobStatus: int numFailures>;

        if $i10 == 0 goto label45;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Num failures: ");

        $i17 = r0.<com.android.server.job.controllers.JobStatus: int numFailures>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i17);

     label45:
        $l11 = r0.<com.android.server.job.controllers.JobStatus: long mLastSuccessfulRunTime>;

        $b12 = $l11 cmp 0L;

        if $b12 == 0 goto label46;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Last successful run: ");

        $l16 = r0.<com.android.server.job.controllers.JobStatus: long mLastSuccessfulRunTime>;

        $r9 = staticinvoke <com.android.server.job.controllers.JobStatus: java.lang.CharSequence formatTime(long)>($l16);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r9);

     label46:
        $l13 = r0.<com.android.server.job.controllers.JobStatus: long mLastFailedRunTime>;

        $b14 = $l13 cmp 0L;

        if $b14 == 0 goto label47;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Last failed run: ");

        $l15 = r0.<com.android.server.job.controllers.JobStatus: long mLastFailedRunTime>;

        $r8 = staticinvoke <com.android.server.job.controllers.JobStatus: java.lang.CharSequence formatTime(long)>($l15);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r8);

     label47:
        return;
    }

    void dumpConstraints(android.util.proto.ProtoOutputStream, long, int)
    {
        com.android.server.job.controllers.JobStatus r0;
        android.util.proto.ProtoOutputStream r1;
        long l0;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $i2 = i1 & 1;

        if $i2 == 0 goto label01;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(l0, 1);

     label01:
        $i3 = i1 & 2;

        if $i3 == 0 goto label02;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(l0, 2);

     label02:
        $i4 = i1 & 8;

        if $i4 == 0 goto label03;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(l0, 3);

     label03:
        $i5 = -2147483648 & i1;

        if $i5 == 0 goto label04;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(l0, 4);

     label04:
        $i6 = 1073741824 & i1;

        if $i6 == 0 goto label05;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(l0, 5);

     label05:
        $i7 = i1 & 4;

        if $i7 == 0 goto label06;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(l0, 6);

     label06:
        $i8 = 268435456 & i1;

        if $i8 == 0 goto label07;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(l0, 7);

     label07:
        $i9 = 67108864 & i1;

        if $i9 == 0 goto label08;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(l0, 8);

     label08:
        $i10 = 33554432 & i1;

        if $i10 == 0 goto label09;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(l0, 9);

     label09:
        $i11 = 16777216 & i1;

        if $i11 == 0 goto label10;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(l0, 10);

     label10:
        $i12 = 4194304 & i1;

        if $i12 == 0 goto label11;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(l0, 11);

     label11:
        return;
    }

    void dumpConstraints(java.io.PrintWriter, int)
    {
        com.android.server.job.controllers.JobStatus r0;
        java.io.PrintWriter r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r2;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label01;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" CHARGING");

     label01:
        $i2 = i0 & 2;

        if $i2 == 0 goto label02;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" BATTERY_NOT_LOW");

     label02:
        $i3 = i0 & 8;

        if $i3 == 0 goto label03;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" STORAGE_NOT_LOW");

     label03:
        $i4 = -2147483648 & i0;

        if $i4 == 0 goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" TIMING_DELAY");

     label04:
        $i5 = 1073741824 & i0;

        if $i5 == 0 goto label05;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" DEADLINE");

     label05:
        $i6 = i0 & 4;

        if $i6 == 0 goto label06;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" IDLE");

     label06:
        $i7 = 268435456 & i0;

        if $i7 == 0 goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" CONNECTIVITY");

     label07:
        $i8 = 67108864 & i0;

        if $i8 == 0 goto label08;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" CONTENT_TRIGGER");

     label08:
        $i9 = 33554432 & i0;

        if $i9 == 0 goto label09;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" DEVICE_NOT_DOZING");

     label09:
        $i10 = 4194304 & i0;

        if $i10 == 0 goto label10;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" BACKGROUND_NOT_RESTRICTED");

     label10:
        $i11 = 16777216 & i0;

        if $i11 == 0 goto label11;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" WITHIN_QUOTA");

     label11:
        if i0 == 0 goto label12;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" [0x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("]");

     label12:
        return;
    }

    public void enqueueWorkLocked(android.app.job.JobWorkItem)
    {
        com.android.server.job.controllers.JobStatus r0;
        android.app.job.JobWorkItem r1;
        java.util.ArrayList $r2, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.content.Intent $r3, $r4, $r5;
        boolean $z1;
        java.lang.String $r6, $r7;
        com.android.server.job.GrantedUriPermissions $r8;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: android.app.job.JobWorkItem;

        $r2 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        if $r2 != null goto label1;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork> = $r9;

     label1:
        $i0 = r0.<com.android.server.job.controllers.JobStatus: int nextPendingWorkId>;

        virtualinvoke r1.<android.app.job.JobWorkItem: void setWorkId(int)>($i0);

        $i1 = r0.<com.android.server.job.controllers.JobStatus: int nextPendingWorkId>;

        $i2 = $i1 + 1;

        r0.<com.android.server.job.controllers.JobStatus: int nextPendingWorkId> = $i2;

        $r3 = virtualinvoke r1.<android.app.job.JobWorkItem: android.content.Intent getIntent()>();

        if $r3 == null goto label2;

        $r4 = virtualinvoke r1.<android.app.job.JobWorkItem: android.content.Intent getIntent()>();

        $i3 = virtualinvoke $r4.<android.content.Intent: int getFlags()>();

        $z1 = staticinvoke <com.android.server.job.GrantedUriPermissions: boolean checkGrantFlags(int)>($i3);

        if $z1 == 0 goto label2;

        $r5 = virtualinvoke r1.<android.app.job.JobWorkItem: android.content.Intent getIntent()>();

        $i4 = r0.<com.android.server.job.controllers.JobStatus: int sourceUid>;

        $r6 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String sourcePackageName>;

        $i5 = r0.<com.android.server.job.controllers.JobStatus: int sourceUserId>;

        $r7 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: java.lang.String toShortString()>();

        $r8 = staticinvoke <com.android.server.job.GrantedUriPermissions: com.android.server.job.GrantedUriPermissions createFromIntent(android.content.Intent,int,java.lang.String,int,java.lang.String)>($r5, $i4, $r6, $i5, $r7);

        virtualinvoke r1.<android.app.job.JobWorkItem: void setGrants(java.lang.Object)>($r8);

     label2:
        $r10 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void updateEstimatedNetworkBytesLocked()>();

        return;
    }

    public java.lang.String getBatteryName()
    {
        com.android.server.job.controllers.JobStatus r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String batteryName>;

        return $r1;
    }

    java.lang.String getBucketName()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int standbyBucket>;

        $r1 = staticinvoke <com.android.server.job.controllers.JobStatus: java.lang.String bucketName(int)>($i0);

        return $r1;
    }

    public long getEarliestRunTime()
    {
        com.android.server.job.controllers.JobStatus r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $l0 = r0.<com.android.server.job.controllers.JobStatus: long earliestRunTimeElapsedMillis>;

        return $l0;
    }

    public int getEffectiveStandbyBucket()
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        android.app.job.JobInfo $r1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $z0 = r0.<com.android.server.job.controllers.JobStatus: boolean uidActive>;

        if $z0 != 0 goto label3;

        $r1 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo getJob()>();

        $z1 = virtualinvoke $r1.<android.app.job.JobInfo: boolean isExemptedFromAppStandby()>();

        if $z1 == 0 goto label1;

        goto label3;

     label1:
        i0 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: int getStandbyBucket()>();

        if i0 == 5 goto label2;

        if i0 == 4 goto label2;

        $z2 = r0.<com.android.server.job.controllers.JobStatus: boolean mHasMediaBackupExemption>;

        if $z2 == 0 goto label2;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(1, i0);

        return $i1;

     label2:
        return i0;

     label3:
        return 0;
    }

    public long getEstimatedNetworkDownloadBytes()
    {
        com.android.server.job.controllers.JobStatus r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $l0 = r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkDownloadBytes>;

        return $l0;
    }

    public long getEstimatedNetworkUploadBytes()
    {
        com.android.server.job.controllers.JobStatus r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $l0 = r0.<com.android.server.job.controllers.JobStatus: long mTotalNetworkUploadBytes>;

        return $l0;
    }

    public long getFirstForceBatchedTimeElapsed()
    {
        com.android.server.job.controllers.JobStatus r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $l0 = r0.<com.android.server.job.controllers.JobStatus: long mFirstForceBatchedTimeElapsed>;

        return $l0;
    }

    public int getFlags()
    {
        com.android.server.job.controllers.JobStatus r0;
        android.app.job.JobInfo $r1;
        int $i0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i0 = virtualinvoke $r1.<android.app.job.JobInfo: int getFlags()>();

        return $i0;
    }

    public float getFractionRunTime()
    {
        com.android.server.job.controllers.JobStatus r0;
        long l0, l1, $l7, $l8, $l10, $l12, l14, l15;
        java.time.Clock $r1;
        byte $b2, $b3, $b4, $b5, $b6, $b9, $b11, $b13;
        float $f0, $f1, $f2, f3;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l0 = virtualinvoke $r1.<java.time.Clock: long millis()>();

        l14 = r0.<com.android.server.job.controllers.JobStatus: long earliestRunTimeElapsedMillis>;

        f3 = 1.0F;

        $b2 = l14 cmp 0L;

        if $b2 != 0 goto label1;

        $l12 = r0.<com.android.server.job.controllers.JobStatus: long latestRunTimeElapsedMillis>;

        $b13 = $l12 cmp 9223372036854775807L;

        if $b13 != 0 goto label1;

        return 1.0F;

     label1:
        l1 = r0.<com.android.server.job.controllers.JobStatus: long earliestRunTimeElapsedMillis>;

        $b3 = l1 cmp 0L;

        if $b3 != 0 goto label4;

        $l10 = r0.<com.android.server.job.controllers.JobStatus: long latestRunTimeElapsedMillis>;

        $b11 = l0 cmp $l10;

        if $b11 < 0 goto label2;

        goto label3;

     label2:
        f3 = 0.0F;

     label3:
        return f3;

     label4:
        l15 = r0.<com.android.server.job.controllers.JobStatus: long latestRunTimeElapsedMillis>;

        $b4 = l15 cmp 9223372036854775807L;

        if $b4 != 0 goto label7;

        $b9 = l0 cmp l1;

        if $b9 < 0 goto label5;

        goto label6;

     label5:
        f3 = 0.0F;

     label6:
        return f3;

     label7:
        $b5 = l0 cmp l1;

        if $b5 > 0 goto label8;

        return 0.0F;

     label8:
        $b6 = l0 cmp l15;

        if $b6 < 0 goto label9;

        return 1.0F;

     label9:
        $l7 = l0 - l1;

        $f1 = (float) $l7;

        $l8 = l15 - l1;

        $f0 = (float) $l8;

        $f2 = $f1 / $f0;

        return $f2;
    }

    public int getInternalFlags()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int mInternalFlags>;

        return $i0;
    }

    public android.app.job.JobInfo getJob()
    {
        com.android.server.job.controllers.JobStatus r0;
        android.app.job.JobInfo $r1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        return $r1;
    }

    public int getJobId()
    {
        com.android.server.job.controllers.JobStatus r0;
        android.app.job.JobInfo $r1;
        int $i0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i0 = virtualinvoke $r1.<android.app.job.JobInfo: int getId()>();

        return $i0;
    }

    public long getLastFailedRunTime()
    {
        com.android.server.job.controllers.JobStatus r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $l0 = r0.<com.android.server.job.controllers.JobStatus: long mLastFailedRunTime>;

        return $l0;
    }

    public long getLastSuccessfulRunTime()
    {
        com.android.server.job.controllers.JobStatus r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $l0 = r0.<com.android.server.job.controllers.JobStatus: long mLastSuccessfulRunTime>;

        return $l0;
    }

    public long getLatestRunTimeElapsed()
    {
        com.android.server.job.controllers.JobStatus r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $l0 = r0.<com.android.server.job.controllers.JobStatus: long latestRunTimeElapsedMillis>;

        return $l0;
    }

    public int getNumFailures()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int numFailures>;

        return $i0;
    }

    public long getOriginalLatestRunTimeElapsed()
    {
        com.android.server.job.controllers.JobStatus r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $l0 = r0.<com.android.server.job.controllers.JobStatus: long mOriginalLatestRunTimeElapsedMillis>;

        return $l0;
    }

    public android.util.Pair getPersistedUtcTimes()
    {
        com.android.server.job.controllers.JobStatus r0;
        android.util.Pair $r1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.util.Pair mPersistedUtcTimes>;

        return $r1;
    }

    public int getPriority()
    {
        com.android.server.job.controllers.JobStatus r0;
        android.app.job.JobInfo $r1;
        int $i0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i0 = virtualinvoke $r1.<android.app.job.JobInfo: int getPriority()>();

        return $i0;
    }

    public int getSatisfiedConstraintFlags()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints>;

        return $i0;
    }

    public android.content.ComponentName getServiceComponent()
    {
        com.android.server.job.controllers.JobStatus r0;
        android.app.job.JobInfo $r1;
        android.content.ComponentName $r2;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r2 = virtualinvoke $r1.<android.app.job.JobInfo: android.content.ComponentName getService()>();

        return $r2;
    }

    public int getServiceToken()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int callingUid>;

        return $i0;
    }

    public java.lang.String getSourcePackageName()
    {
        com.android.server.job.controllers.JobStatus r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String sourcePackageName>;

        return $r1;
    }

    public java.lang.String getSourceTag()
    {
        com.android.server.job.controllers.JobStatus r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String sourceTag>;

        return $r1;
    }

    public int getSourceUid()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int sourceUid>;

        return $i0;
    }

    public int getSourceUserId()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int sourceUserId>;

        return $i0;
    }

    public int getStandbyBucket()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int standbyBucket>;

        return $i0;
    }

    public java.lang.String getTag()
    {
        com.android.server.job.controllers.JobStatus r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String tag>;

        return $r1;
    }

    public long getTriggerContentMaxDelay()
    {
        com.android.server.job.controllers.JobStatus r0;
        long l0, $l2;
        android.app.job.JobInfo $r1;
        byte $b1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        l0 = virtualinvoke $r1.<android.app.job.JobInfo: long getTriggerContentMaxDelay()>();

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        return 120000L;

     label1:
        $l2 = staticinvoke <java.lang.Math: long max(long,long)>(l0, 1000L);

        return $l2;
    }

    public long getTriggerContentUpdateDelay()
    {
        com.android.server.job.controllers.JobStatus r0;
        long l0, $l2;
        android.app.job.JobInfo $r1;
        byte $b1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        l0 = virtualinvoke $r1.<android.app.job.JobInfo: long getTriggerContentUpdateDelay()>();

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        return 10000L;

     label1:
        $l2 = staticinvoke <java.lang.Math: long max(long,long)>(l0, 500L);

        return $l2;
    }

    public int getUid()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int callingUid>;

        return $i0;
    }

    public int getUserId()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0, $i1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int callingUid>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        return $i1;
    }

    public long getWhenStandbyDeferred()
    {
        com.android.server.job.controllers.JobStatus r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $l0 = r0.<com.android.server.job.controllers.JobStatus: long whenStandbyDeferred>;

        return $l0;
    }

    public boolean hasBatteryNotLowConstraint()
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $z0 = specialinvoke r0.<com.android.server.job.controllers.JobStatus: boolean hasConstraint(int)>(2);

        return $z0;
    }

    public boolean hasChargingConstraint()
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $z0 = specialinvoke r0.<com.android.server.job.controllers.JobStatus: boolean hasConstraint(int)>(1);

        return $z0;
    }

    public boolean hasConnectivityConstraint()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int requiredConstraints>;

        $i1 = $i0 & 268435456;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasContentTriggerConstraint()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int requiredConstraints>;

        $i1 = $i0 & 67108864;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasDeadlineConstraint()
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $z0 = specialinvoke r0.<com.android.server.job.controllers.JobStatus: boolean hasConstraint(int)>(1073741824);

        return $z0;
    }

    public boolean hasExecutingWorkLocked()
    {
        com.android.server.job.controllers.JobStatus r0;
        java.util.ArrayList r1;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasIdleConstraint()
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $z0 = specialinvoke r0.<com.android.server.job.controllers.JobStatus: boolean hasConstraint(int)>(4);

        return $z0;
    }

    boolean hasPowerConstraint()
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $z0 = specialinvoke r0.<com.android.server.job.controllers.JobStatus: boolean hasConstraint(int)>(3);

        return $z0;
    }

    public boolean hasStorageNotLowConstraint()
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $z0 = specialinvoke r0.<com.android.server.job.controllers.JobStatus: boolean hasConstraint(int)>(8);

        return $z0;
    }

    public boolean hasTimingDelayConstraint()
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $z0 = specialinvoke r0.<com.android.server.job.controllers.JobStatus: boolean hasConstraint(int)>(-2147483648);

        return $z0;
    }

    public boolean hasWorkLocked()
    {
        com.android.server.job.controllers.JobStatus r0;
        java.util.ArrayList r1;
        boolean $z0, z1;
        int $i0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 > 0 goto label2;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean hasExecutingWorkLocked()>();

        if $z0 == 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;
    }

    boolean isConstraintSatisfied(int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints>;

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isConstraintsSatisfied()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int mSatisfiedConstraintsOfInterest>;

        $z0 = specialinvoke r0.<com.android.server.job.controllers.JobStatus: boolean isConstraintsSatisfied(int)>($i0);

        return $z0;
    }

    public boolean isPersisted()
    {
        com.android.server.job.controllers.JobStatus r0;
        android.app.job.JobInfo $r1;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z0 = virtualinvoke $r1.<android.app.job.JobInfo: boolean isPersisted()>();

        return $z0;
    }

    public boolean isPreparedLocked()
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $z0 = r0.<com.android.server.job.controllers.JobStatus: boolean prepared>;

        return $z0;
    }

    public boolean isReady()
    {
        com.android.server.job.controllers.JobStatus r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int mSatisfiedConstraintsOfInterest>;

        $z0 = specialinvoke r0.<com.android.server.job.controllers.JobStatus: boolean isReady(int)>($i0);

        return $z0;
    }

    public boolean matches(int, int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0, i1, $i2, $i3;
        android.app.job.JobInfo $r1;
        boolean z0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i2 = virtualinvoke $r1.<android.app.job.JobInfo: int getId()>();

        if $i2 != i1 goto label1;

        $i3 = r0.<com.android.server.job.controllers.JobStatus: int callingUid>;

        if $i3 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void maybeAddForegroundExemption(java.util.function.Predicate)
    {
        com.android.server.job.controllers.JobStatus r0;
        java.util.function.Predicate r1;
        android.app.job.JobInfo $r2, $r3;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        java.lang.Integer $r4;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: java.util.function.Predicate;

        $r2 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z0 = virtualinvoke $r2.<android.app.job.JobInfo: boolean hasEarlyConstraint()>();

        if $z0 != 0 goto label4;

        $r3 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z1 = virtualinvoke $r3.<android.app.job.JobInfo: boolean hasLateConstraint()>();

        if $z1 == 0 goto label1;

        goto label4;

     label1:
        $i0 = r0.<com.android.server.job.controllers.JobStatus: int mInternalFlags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label2;

        return;

     label2:
        $i2 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $z2 = interfaceinvoke r1.<java.util.function.Predicate: boolean test(java.lang.Object)>($r4);

        if $z2 == 0 goto label3;

        virtualinvoke r0.<com.android.server.job.controllers.JobStatus: void addInternalFlags(int)>(1);

     label3:
        return;

     label4:
        return;
    }

    public void prepareLocked()
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean $z0;
        android.app.job.JobInfo $r1, $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r4, $r9;
        com.android.server.job.GrantedUriPermissions $r5;
        java.lang.StringBuilder $r6;
        android.content.ClipData r11;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $z0 = r0.<com.android.server.job.controllers.JobStatus: boolean prepared>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already prepared: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("JobScheduler.JobStatus", $r9);

        return;

     label1:
        r0.<com.android.server.job.controllers.JobStatus: boolean prepared> = 1;

        r0.<com.android.server.job.controllers.JobStatus: java.lang.Throwable unpreparedPoint> = null;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        r11 = virtualinvoke $r1.<android.app.job.JobInfo: android.content.ClipData getClipData()>();

        if r11 == null goto label2;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int sourceUid>;

        $r3 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String sourcePackageName>;

        $i1 = r0.<com.android.server.job.controllers.JobStatus: int sourceUserId>;

        $r2 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i2 = virtualinvoke $r2.<android.app.job.JobInfo: int getClipGrantFlags()>();

        $r4 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: java.lang.String toShortString()>();

        $r5 = staticinvoke <com.android.server.job.GrantedUriPermissions: com.android.server.job.GrantedUriPermissions createFromClip(android.content.ClipData,int,java.lang.String,int,int,java.lang.String)>(r11, $i0, $r3, $i1, $i2, $r4);

        r0.<com.android.server.job.controllers.JobStatus: com.android.server.job.GrantedUriPermissions uriPerms> = $r5;

     label2:
        return;
    }

    public void printUniqueId(java.io.PrintWriter)
    {
        com.android.server.job.controllers.JobStatus r0;
        java.io.PrintWriter r1;
        int $i0, $i1;
        android.app.job.JobInfo $r2;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: java.io.PrintWriter;

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int callingUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("/");

        $r2 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i1 = virtualinvoke $r2.<android.app.job.JobInfo: int getId()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        return;
    }

    boolean setBackgroundNotRestrictedConstraintSatisfied(boolean)
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean setConstraintSatisfied(int,boolean)>(4194304, z0);

        if $z1 == 0 goto label1;

        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotRestrictedInBg> = z0;

        return 1;

     label1:
        return 0;
    }

    boolean setBatteryNotLowConstraintSatisfied(boolean)
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean setConstraintSatisfied(int,boolean)>(2, z0);

        return $z1;
    }

    boolean setChargingConstraintSatisfied(boolean)
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean setConstraintSatisfied(int,boolean)>(1, z0);

        return $z1;
    }

    boolean setConnectivityConstraintSatisfied(boolean)
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean setConstraintSatisfied(int,boolean)>(268435456, z0);

        return $z1;
    }

    boolean setConstraintSatisfied(int, boolean)
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0, $i1, $i2, $i3, $i4, i6, i7, i8, i9, i10;
        boolean $z1, z2, z3, z4;
        java.lang.StringBuilder $r2;
        java.lang.String $r8, $r10, r11;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i6 := @parameter0: int;

        z2 := @parameter1: boolean;

        i7 = r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints>;

        $i1 = i7 & i6;

        if $i1 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        if z3 != z2 goto label3;

        return 0;

     label3:
        $z1 = <com.android.server.job.controllers.JobStatus: boolean DEBUG>;

        if $z1 == 0 goto label6;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constraint ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ");

        if z2 != 0 goto label4;

        r11 = "NOT ";

        goto label5;

     label4:
        r11 = "";

     label5:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("satisfied for ");

        $r8 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: java.lang.String toShortString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("JobScheduler.JobStatus", $r10);

     label6:
        i0 = r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints>;

        if z2 == 0 goto label7;

        i8 = i6;

        goto label8;

     label7:
        i8 = 0;

     label8:
        $i2 = i0 & i6;

        i9 = $i2 | i8;

        r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints> = i9;

        $i3 = -1811939313 & i9;

        r0.<com.android.server.job.controllers.JobStatus: int mSatisfiedConstraintsOfInterest> = $i3;

        i10 = r0.<com.android.server.job.controllers.JobStatus: int mDynamicConstraints>;

        z4 = 0;

        if i10 == 0 goto label9;

        z4 = 0;

        $i4 = i9 & i10;

        if i10 != $i4 goto label9;

        z4 = 1;

     label9:
        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDynamicSatisfied> = z4;

        return 1;
    }

    boolean setContentTriggerConstraintSatisfied(boolean)
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean setConstraintSatisfied(int,boolean)>(67108864, z0);

        return $z1;
    }

    boolean setDeadlineConstraintSatisfied(boolean)
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean z0, $z2, $z3, z4, z5;
        android.app.job.JobInfo $r1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        z0 := @parameter0: boolean;

        z4 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean setConstraintSatisfied(int,boolean)>(1073741824, z0);

        if z4 == 0 goto label2;

        z5 = 0;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z2 = virtualinvoke $r1.<android.app.job.JobInfo: boolean isPeriodic()>();

        if $z2 != 0 goto label1;

        z5 = 0;

        $z3 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean hasDeadlineConstraint()>();

        if $z3 == 0 goto label1;

        z5 = 0;

        if z0 == 0 goto label1;

        z5 = 1;

     label1:
        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDeadlineSatisfied> = z5;

        return 1;

     label2:
        return 0;
    }

    boolean setDeviceNotDozingConstraintSatisfied(boolean, boolean)
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean z0, z1, z2, z4;
        android.app.job.JobInfo $r1;
        int $i0, $i1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        z1 := @parameter0: boolean;

        z2 := @parameter1: boolean;

        r0.<com.android.server.job.controllers.JobStatus: boolean dozeWhitelisted> = z2;

        z0 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean setConstraintSatisfied(int,boolean)>(33554432, z1);

        if z0 == 0 goto label3;

        if z1 != 0 goto label1;

        z4 = 0;

        $r1 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i0 = virtualinvoke $r1.<android.app.job.JobInfo: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label2;

     label1:
        z4 = 1;

     label2:
        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotDozing> = z4;

        return 1;

     label3:
        return 0;
    }

    public void setFirstForceBatchedTimeElapsed(long)
    {
        com.android.server.job.controllers.JobStatus r0;
        long l0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        l0 := @parameter0: long;

        r0.<com.android.server.job.controllers.JobStatus: long mFirstForceBatchedTimeElapsed> = l0;

        return;
    }

    boolean setIdleConstraintSatisfied(boolean)
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean setConstraintSatisfied(int,boolean)>(4, z0);

        return $z1;
    }

    public void setOriginalLatestRunTimeElapsed(long)
    {
        com.android.server.job.controllers.JobStatus r0;
        long l0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        l0 := @parameter0: long;

        r0.<com.android.server.job.controllers.JobStatus: long mOriginalLatestRunTimeElapsedMillis> = l0;

        return;
    }

    boolean setQuotaConstraintSatisfied(boolean)
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean setConstraintSatisfied(int,boolean)>(16777216, z0);

        if $z1 == 0 goto label1;

        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyWithinQuota> = z0;

        return 1;

     label1:
        return 0;
    }

    public void setStandbyBucket(int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0, $i1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i0 := @parameter0: int;

        if i0 != 5 goto label1;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void addDynamicConstraints(int)>(268435463);

        goto label2;

     label1:
        $i1 = r0.<com.android.server.job.controllers.JobStatus: int standbyBucket>;

        if $i1 != 5 goto label2;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void removeDynamicConstraints(int)>(268435463);

     label2:
        r0.<com.android.server.job.controllers.JobStatus: int standbyBucket> = i0;

        return;
    }

    boolean setStorageNotLowConstraintSatisfied(boolean)
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean setConstraintSatisfied(int,boolean)>(8, z0);

        return $z1;
    }

    boolean setTimingDelayConstraintSatisfied(boolean)
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean setConstraintSatisfied(int,boolean)>(-2147483648, z0);

        return $z1;
    }

    void setTrackingController(int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.job.controllers.JobStatus: int trackingControllers>;

        $i2 = $i1 | i0;

        r0.<com.android.server.job.controllers.JobStatus: int trackingControllers> = $i2;

        return;
    }

    boolean setUidActive(boolean)
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.job.controllers.JobStatus: boolean uidActive>;

        if z0 == $z1 goto label1;

        r0.<com.android.server.job.controllers.JobStatus: boolean uidActive> = z0;

        return 1;

     label1:
        return 0;
    }

    public void setWhenStandbyDeferred(long)
    {
        com.android.server.job.controllers.JobStatus r0;
        long l0;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        l0 := @parameter0: long;

        r0.<com.android.server.job.controllers.JobStatus: long whenStandbyDeferred> = l0;

        return;
    }

    public void stopTrackingJobLocked(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.JobStatus r0, r1;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r6, $r7, r8, $r9, r10;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        if r1 == null goto label4;

        r8 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        if r8 == null goto label1;

        $i1 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label1;

        $r7 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        r1.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork> = $r7;

     label1:
        $r9 = r1.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        if $r9 != null goto label2;

        $r6 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        r1.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork> = $r6;

        goto label3;

     label2:
        r10 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        if r10 == null goto label3;

        $i0 = virtualinvoke r10.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label3;

        $r5 = r1.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        $r4 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        virtualinvoke $r5.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r4);

     label3:
        r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork> = null;

        r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork> = null;

        $i2 = r0.<com.android.server.job.controllers.JobStatus: int nextPendingWorkId>;

        r1.<com.android.server.job.controllers.JobStatus: int nextPendingWorkId> = $i2;

        specialinvoke r1.<com.android.server.job.controllers.JobStatus: void updateEstimatedNetworkBytesLocked()>();

        goto label5;

     label4:
        $r2 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork>;

        staticinvoke <com.android.server.job.controllers.JobStatus: void ungrantWorkList(java.util.ArrayList)>($r2);

        r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList pendingWork> = null;

        $r3 = r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork>;

        staticinvoke <com.android.server.job.controllers.JobStatus: void ungrantWorkList(java.util.ArrayList)>($r3);

        r0.<com.android.server.job.controllers.JobStatus: java.util.ArrayList executingWork> = null;

     label5:
        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void updateEstimatedNetworkBytesLocked()>();

        return;
    }

    public java.lang.String toShortString()
    {
        com.android.server.job.controllers.JobStatus r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r10, $r12;
        android.app.job.JobInfo $r7;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #");

        $i1 = r0.<com.android.server.job.controllers.JobStatus: int callingUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.lang.StringBuilder,int)>($r2, $i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i2 = virtualinvoke $r7.<android.app.job.JobInfo: int getId()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r10 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String batteryName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public java.lang.String toShortStringExceptUniqueId()
    {
        com.android.server.job.controllers.JobStatus r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r3, $r6, $r8;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r6 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String batteryName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public java.lang.String toString()
    {
        com.android.server.job.controllers.JobStatus r0;
        long l0, $l6, $l8, $l9, $l14;
        java.lang.StringBuilder $r2;
        int $i1, $i2, $i3, $i4, $i5, $i10, $i11, $i12, $i13;
        java.lang.String $r4, $r11, $r29, $r36;
        android.app.job.JobInfo $r8, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r34, $r46;
        byte $b7, $b15;
        java.time.Clock $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.app.job.JobInfo$TriggerContentUri[] $r27, $r35;
        android.net.NetworkRequest $r47;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JobStatus{");

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #");

        $i2 = r0.<com.android.server.job.controllers.JobStatus: int callingUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.lang.StringBuilder,int)>($r2, $i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i3 = virtualinvoke $r8.<android.app.job.JobInfo: int getId()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r11 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String batteryName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u=");

        $i4 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: int getUserId()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" s=");

        $i5 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $l6 = r0.<com.android.server.job.controllers.JobStatus: long earliestRunTimeElapsedMillis>;

        $b7 = $l6 cmp 0L;

        if $b7 != 0 goto label01;

        $l14 = r0.<com.android.server.job.controllers.JobStatus: long latestRunTimeElapsedMillis>;

        $b15 = $l14 cmp 9223372036854775807L;

        if $b15 == 0 goto label02;

     label01:
        $r17 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l0 = virtualinvoke $r17.<java.time.Clock: long millis()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" TIME=");

        $l8 = r0.<com.android.server.job.controllers.JobStatus: long earliestRunTimeElapsedMillis>;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void formatRunTime(java.lang.StringBuilder,long,long,long)>($r2, $l8, 0L, l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $l9 = r0.<com.android.server.job.controllers.JobStatus: long latestRunTimeElapsedMillis>;

        specialinvoke r0.<com.android.server.job.controllers.JobStatus: void formatRunTime(java.lang.StringBuilder,long,long,long)>($r2, $l9, 9223372036854775807L, l0);

     label02:
        $r46 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r47 = virtualinvoke $r46.<android.app.job.JobInfo: android.net.NetworkRequest getRequiredNetwork()>();

        if $r47 == null goto label03;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NET");

     label03:
        $r20 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z0 = virtualinvoke $r20.<android.app.job.JobInfo: boolean isRequireCharging()>();

        if $z0 == 0 goto label04;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" CHARGING");

     label04:
        $r21 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z1 = virtualinvoke $r21.<android.app.job.JobInfo: boolean isRequireBatteryNotLow()>();

        if $z1 == 0 goto label05;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" BATNOTLOW");

     label05:
        $r22 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z2 = virtualinvoke $r22.<android.app.job.JobInfo: boolean isRequireStorageNotLow()>();

        if $z2 == 0 goto label06;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" STORENOTLOW");

     label06:
        $r23 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z3 = virtualinvoke $r23.<android.app.job.JobInfo: boolean isRequireDeviceIdle()>();

        if $z3 == 0 goto label07;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" IDLE");

     label07:
        $r24 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z4 = virtualinvoke $r24.<android.app.job.JobInfo: boolean isPeriodic()>();

        if $z4 == 0 goto label08;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PERIODIC");

     label08:
        $r25 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $z5 = virtualinvoke $r25.<android.app.job.JobInfo: boolean isPersisted()>();

        if $z5 == 0 goto label09;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PERSISTED");

     label09:
        $i10 = r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints>;

        $i11 = $i10 & 33554432;

        if $i11 != 0 goto label10;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WAIT:DEV_NOT_DOZING");

     label10:
        $r26 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r27 = virtualinvoke $r26.<android.app.job.JobInfo: android.app.job.JobInfo$TriggerContentUri[] getTriggerContentUris()>();

        if $r27 == null goto label11;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" URIS=");

        $r34 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $r35 = virtualinvoke $r34.<android.app.job.JobInfo: android.app.job.JobInfo$TriggerContentUri[] getTriggerContentUris()>();

        $r36 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r35);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

     label11:
        $i12 = r0.<com.android.server.job.controllers.JobStatus: int numFailures>;

        if $i12 == 0 goto label12;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failures=");

        $i13 = r0.<com.android.server.job.controllers.JobStatus: int numFailures>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

     label12:
        $z6 = virtualinvoke r0.<com.android.server.job.controllers.JobStatus: boolean isReady()>();

        if $z6 == 0 goto label13;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" READY");

     label13:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r29 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r29;
    }

    public void unprepareLocked()
    {
        com.android.server.job.controllers.JobStatus r0;
        boolean $z0;
        java.lang.Throwable $r1, $r2, r8;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        com.android.server.job.GrantedUriPermissions r9;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        $z0 = r0.<com.android.server.job.controllers.JobStatus: boolean prepared>;

        if $z0 != 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hasn\'t been prepared: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("JobScheduler.JobStatus", $r6);

        r8 = r0.<com.android.server.job.controllers.JobStatus: java.lang.Throwable unpreparedPoint>;

        if r8 == null goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("JobScheduler.JobStatus", "Was already unprepared at ", r8);

     label1:
        return;

     label2:
        r0.<com.android.server.job.controllers.JobStatus: boolean prepared> = 0;

        $r1 = new java.lang.Throwable;

        specialinvoke $r1.<java.lang.Throwable: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

        r0.<com.android.server.job.controllers.JobStatus: java.lang.Throwable unpreparedPoint> = $r2;

        r9 = r0.<com.android.server.job.controllers.JobStatus: com.android.server.job.GrantedUriPermissions uriPerms>;

        if r9 == null goto label3;

        virtualinvoke r9.<com.android.server.job.GrantedUriPermissions: void revoke()>();

        r0.<com.android.server.job.controllers.JobStatus: com.android.server.job.GrantedUriPermissions uriPerms> = null;

     label3:
        return;
    }

    boolean wouldBeReadyWithConstraint(int)
    {
        com.android.server.job.controllers.JobStatus r0;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        boolean z2, z3, z4, z5;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        i4 := @parameter0: int;

        i5 = r0.<com.android.server.job.controllers.JobStatus: int mSatisfiedConstraintsOfInterest>;

        if i4 == 4194304 goto label06;

        if i4 == 16777216 goto label05;

        if i4 == 33554432 goto label04;

        if i4 == 1073741824 goto label03;

        i5 = i5 | i4;

        i0 = r0.<com.android.server.job.controllers.JobStatus: int mDynamicConstraints>;

        if i0 == 0 goto label01;

        $i3 = i5 & i0;

        if i0 != $i3 goto label01;

        z2 = 1;

        goto label02;

     label01:
        z2 = 0;

     label02:
        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDynamicSatisfied> = z2;

        z3 = 0;

        goto label07;

     label03:
        z3 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDeadlineSatisfied>;

        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDeadlineSatisfied> = 1;

        goto label07;

     label04:
        z3 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotDozing>;

        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotDozing> = 1;

        goto label07;

     label05:
        z3 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyWithinQuota>;

        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyWithinQuota> = 1;

        goto label07;

     label06:
        z3 = r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotRestrictedInBg>;

        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotRestrictedInBg> = 1;

     label07:
        z4 = specialinvoke r0.<com.android.server.job.controllers.JobStatus: boolean isReady(int)>(i5);

        if i4 == 4194304 goto label12;

        if i4 == 16777216 goto label11;

        if i4 == 33554432 goto label10;

        if i4 == 1073741824 goto label09;

        i6 = r0.<com.android.server.job.controllers.JobStatus: int mDynamicConstraints>;

        z5 = 0;

        if i6 == 0 goto label08;

        z5 = 0;

        $i1 = r0.<com.android.server.job.controllers.JobStatus: int satisfiedConstraints>;

        $i2 = $i1 & i6;

        if i6 != $i2 goto label08;

        z5 = 1;

     label08:
        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDynamicSatisfied> = z5;

        goto label13;

     label09:
        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyDeadlineSatisfied> = z3;

        goto label13;

     label10:
        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotDozing> = z3;

        goto label13;

     label11:
        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyWithinQuota> = z3;

        goto label13;

     label12:
        r0.<com.android.server.job.controllers.JobStatus: boolean mReadyNotRestrictedInBg> = z3;

     label13:
        return z4;
    }

    public void writeToShortProto(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.job.controllers.JobStatus r0;
        android.util.proto.ProtoOutputStream r1;
        int $i0, $i1;
        android.app.job.JobInfo $r2;
        java.lang.String $r3;
        long l2, l3;

        r0 := @this: com.android.server.job.controllers.JobStatus;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l2 := @parameter1: long;

        l3 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l2);

        $i0 = r0.<com.android.server.job.controllers.JobStatus: int callingUid>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i0);

        $r2 = r0.<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo job>;

        $i1 = virtualinvoke $r2.<android.app.job.JobInfo: int getId()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i1);

        $r3 = r0.<com.android.server.job.controllers.JobStatus: java.lang.String batteryName>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333443L, $r3);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l3);

        return;
    }
}
