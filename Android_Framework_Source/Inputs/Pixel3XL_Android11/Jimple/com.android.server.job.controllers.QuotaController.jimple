public final class com.android.server.job.controllers.QuotaController extends com.android.server.job.controllers.StateController
{
    private static final java.lang.String ALARM_TAG_CLEANUP;
    private static final java.lang.String ALARM_TAG_QUOTA_CHECK;
    private static final boolean DEBUG;
    private static final long MAX_PERIOD_MS;
    private static final int MSG_CHECK_PACKAGE;
    private static final int MSG_CLEAN_UP_SESSIONS;
    private static final int MSG_REACHED_QUOTA;
    private static final int MSG_UID_PROCESS_STATE_CHANGED;
    private static final java.lang.String TAG;
    private final android.app.ActivityManagerInternal mActivityManagerInternal;
    private final android.app.AlarmManager mAlarmManager;
    private long mAllowedTimeIntoQuotaMs;
    private long mAllowedTimePerPeriodMs;
    private final long[] mBucketPeriodsMs;
    private final com.android.server.job.controllers.QuotaController$ChargingTracker mChargeTracker;
    private final com.android.server.job.controllers.QuotaController$DeleteTimingSessionsFunctor mDeleteOldSessionsFunctor;
    private final com.android.server.job.controllers.QuotaController$EarliestEndTimeFunctor mEarliestEndTimeFunctor;
    private final android.util.SparseArrayMap mExecutionStatsCache;
    private final android.util.SparseBooleanArray mForegroundUids;
    private final android.os.Handler mHandler;
    private final com.android.server.job.controllers.QuotaController$InQuotaAlarmListener mInQuotaAlarmListener;
    private final int[] mMaxBucketJobCounts;
    private final int[] mMaxBucketSessionCounts;
    private long mMaxExecutionTimeIntoQuotaMs;
    private long mMaxExecutionTimeMs;
    private int mMaxJobCountPerRateLimitingWindow;
    private int mMaxSessionCountPerRateLimitingWindow;
    private long mNextCleanupTimeElapsed;
    private final android.content.BroadcastReceiver mPackageAddedReceiver;
    private final android.util.SparseArrayMap mPkgTimers;
    private final com.android.server.job.controllers.QuotaController$QcConstants mQcConstants;
    private long mQuotaBufferMs;
    private long mRateLimitingWindowMs;
    private final android.app.AlarmManager$OnAlarmListener mSessionCleanupAlarmListener;
    private final com.android.server.job.controllers.QuotaController$TimerChargingUpdateFunctor mTimerChargingUpdateFunctor;
    private long mTimingSessionCoalescingDurationMs;
    private final android.util.SparseArrayMap mTimingSessions;
    private final android.util.ArraySet mTopStartedJobs;
    private final android.util.SparseArrayMap mTrackedJobs;
    private final android.app.IUidObserver mUidObserver;
    private final android.util.SparseSetArray mUidToPackageCache;
    private final com.android.server.job.controllers.QuotaController$UidConstraintUpdater mUpdateUidConstraints;

    static void <clinit>()
    {
        boolean $z0, $z1, z2;

        <com.android.server.job.controllers.QuotaController: java.lang.String TAG> = "JobScheduler.Quota";

        <com.android.server.job.controllers.QuotaController: int MSG_UID_PROCESS_STATE_CHANGED> = 3;

        <com.android.server.job.controllers.QuotaController: int MSG_REACHED_QUOTA> = 0;

        <com.android.server.job.controllers.QuotaController: int MSG_CLEAN_UP_SESSIONS> = 1;

        <com.android.server.job.controllers.QuotaController: int MSG_CHECK_PACKAGE> = 2;

        <com.android.server.job.controllers.QuotaController: long MAX_PERIOD_MS> = 86400000L;

        <com.android.server.job.controllers.QuotaController: java.lang.String ALARM_TAG_QUOTA_CHECK> = "*job.quota_check*";

        <com.android.server.job.controllers.QuotaController: java.lang.String ALARM_TAG_CLEANUP> = "*job.cleanup*";

        $z0 = <com.android.server.job.JobSchedulerService: boolean DEBUG>;

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("JobScheduler.Quota", 3);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        <com.android.server.job.controllers.QuotaController: boolean DEBUG> = z2;

        return;
    }

    public void <init>(com.android.server.job.JobSchedulerService)
    {
        com.android.server.job.controllers.QuotaController r0;
        android.util.SparseArrayMap $r1, $r2, $r3, $r5;
        com.android.server.job.controllers.QuotaController$InQuotaAlarmListener $r4;
        android.util.SparseBooleanArray $r6;
        android.util.SparseSetArray $r7;
        android.util.ArraySet $r8;
        long $l0, $l1;
        com.android.server.job.controllers.QuotaController$1 $r9;
        com.android.server.job.controllers.QuotaController$2 $r10;
        com.android.server.job.controllers.QuotaController$3 $r11;
        long[] $r12;
        int[] $r13, $r14;
        com.android.server.job.controllers.QuotaController$EarliestEndTimeFunctor $r15;
        com.android.server.job.controllers.QuotaController$TimerChargingUpdateFunctor $r16;
        com.android.server.job.controllers.QuotaController$UidConstraintUpdater $r17;
        com.android.server.job.controllers.QuotaController$DeleteTimingSessionsFunctor $r18;
        com.android.server.job.controllers.QuotaController$QcHandler $r19;
        android.content.Context $r20, $r25, $r33;
        android.os.Looper $r21;
        com.android.server.job.controllers.QuotaController$ChargingTracker $r22;
        java.lang.Object $r23, $r26, $r35;
        android.app.ActivityManagerInternal $r24;
        android.app.AlarmManager $r27;
        com.android.server.job.controllers.QuotaController$QcConstants $r28;
        android.os.Handler $r29;
        android.content.IntentFilter $r30;
        android.os.UserHandle $r31;
        android.content.BroadcastReceiver $r32;
        com.android.server.job.controllers.QuotaController$StandbyTracker $r36;
        com.android.server.usage.AppStandbyInternal $r37;
        android.app.IActivityManager $r38;
        android.app.IUidObserver $r39;
        android.os.RemoteException $r40;
        com.android.server.job.JobSchedulerService r41;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r41 := @parameter0: com.android.server.job.JobSchedulerService;

        specialinvoke r0.<com.android.server.job.controllers.StateController: void <init>(com.android.server.job.JobSchedulerService)>(r41);

        $r1 = new android.util.SparseArrayMap;

        specialinvoke $r1.<android.util.SparseArrayMap: void <init>()>();

        r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs> = $r1;

        $r2 = new android.util.SparseArrayMap;

        specialinvoke $r2.<android.util.SparseArrayMap: void <init>()>();

        r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers> = $r2;

        $r3 = new android.util.SparseArrayMap;

        specialinvoke $r3.<android.util.SparseArrayMap: void <init>()>();

        r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTimingSessions> = $r3;

        $r4 = new com.android.server.job.controllers.QuotaController$InQuotaAlarmListener;

        specialinvoke $r4.<com.android.server.job.controllers.QuotaController$InQuotaAlarmListener: void <init>(com.android.server.job.controllers.QuotaController,com.android.server.job.controllers.QuotaController$1)>(r0, null);

        r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$InQuotaAlarmListener mInQuotaAlarmListener> = $r4;

        $r5 = new android.util.SparseArrayMap;

        specialinvoke $r5.<android.util.SparseArrayMap: void <init>()>();

        r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache> = $r5;

        $r6 = new android.util.SparseBooleanArray;

        specialinvoke $r6.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.job.controllers.QuotaController: android.util.SparseBooleanArray mForegroundUids> = $r6;

        $r7 = new android.util.SparseSetArray;

        specialinvoke $r7.<android.util.SparseSetArray: void <init>()>();

        r0.<com.android.server.job.controllers.QuotaController: android.util.SparseSetArray mUidToPackageCache> = $r7;

        $r8 = new android.util.ArraySet;

        specialinvoke $r8.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.job.controllers.QuotaController: android.util.ArraySet mTopStartedJobs> = $r8;

        r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimePerPeriodMs> = 600000L;

        r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeMs> = 14400000L;

        r0.<com.android.server.job.controllers.QuotaController: long mQuotaBufferMs> = 30000L;

        $l0 = 600000L - 30000L;

        r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimeIntoQuotaMs> = $l0;

        $l1 = 14400000L - 30000L;

        r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeIntoQuotaMs> = $l1;

        r0.<com.android.server.job.controllers.QuotaController: long mRateLimitingWindowMs> = 60000L;

        r0.<com.android.server.job.controllers.QuotaController: int mMaxJobCountPerRateLimitingWindow> = 20;

        r0.<com.android.server.job.controllers.QuotaController: int mMaxSessionCountPerRateLimitingWindow> = 20;

        r0.<com.android.server.job.controllers.QuotaController: long mNextCleanupTimeElapsed> = 0L;

        $r9 = new com.android.server.job.controllers.QuotaController$1;

        specialinvoke $r9.<com.android.server.job.controllers.QuotaController$1: void <init>(com.android.server.job.controllers.QuotaController)>(r0);

        r0.<com.android.server.job.controllers.QuotaController: android.app.AlarmManager$OnAlarmListener mSessionCleanupAlarmListener> = $r9;

        $r10 = new com.android.server.job.controllers.QuotaController$2;

        specialinvoke $r10.<com.android.server.job.controllers.QuotaController$2: void <init>(com.android.server.job.controllers.QuotaController)>(r0);

        r0.<com.android.server.job.controllers.QuotaController: android.app.IUidObserver mUidObserver> = $r10;

        $r11 = new com.android.server.job.controllers.QuotaController$3;

        specialinvoke $r11.<com.android.server.job.controllers.QuotaController$3: void <init>(com.android.server.job.controllers.QuotaController)>(r0);

        r0.<com.android.server.job.controllers.QuotaController: android.content.BroadcastReceiver mPackageAddedReceiver> = $r11;

        $r12 = newarray (long)[6];

        $r12[0] = 600000L;

        $r12[1] = 7200000L;

        $r12[2] = 28800000L;

        $r12[3] = 86400000L;

        $r12[4] = 0L;

        $r12[5] = 86400000L;

        r0.<com.android.server.job.controllers.QuotaController: long[] mBucketPeriodsMs> = $r12;

        $r13 = newarray (int)[6];

        $r13[0] = 75;

        $r13[1] = 120;

        $r13[2] = 200;

        $r13[3] = 48;

        $r13[4] = 0;

        $r13[5] = 10;

        r0.<com.android.server.job.controllers.QuotaController: int[] mMaxBucketJobCounts> = $r13;

        $r14 = newarray (int)[6];

        $r14[0] = 75;

        $r14[1] = 10;

        $r14[2] = 8;

        $r14[3] = 3;

        $r14[4] = 0;

        $r14[5] = 1;

        r0.<com.android.server.job.controllers.QuotaController: int[] mMaxBucketSessionCounts> = $r14;

        r0.<com.android.server.job.controllers.QuotaController: long mTimingSessionCoalescingDurationMs> = 5000L;

        $r15 = new com.android.server.job.controllers.QuotaController$EarliestEndTimeFunctor;

        specialinvoke $r15.<com.android.server.job.controllers.QuotaController$EarliestEndTimeFunctor: void <init>(com.android.server.job.controllers.QuotaController,com.android.server.job.controllers.QuotaController$1)>(r0, null);

        r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$EarliestEndTimeFunctor mEarliestEndTimeFunctor> = $r15;

        $r16 = new com.android.server.job.controllers.QuotaController$TimerChargingUpdateFunctor;

        specialinvoke $r16.<com.android.server.job.controllers.QuotaController$TimerChargingUpdateFunctor: void <init>(com.android.server.job.controllers.QuotaController,com.android.server.job.controllers.QuotaController$1)>(r0, null);

        r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$TimerChargingUpdateFunctor mTimerChargingUpdateFunctor> = $r16;

        $r17 = new com.android.server.job.controllers.QuotaController$UidConstraintUpdater;

        specialinvoke $r17.<com.android.server.job.controllers.QuotaController$UidConstraintUpdater: void <init>(com.android.server.job.controllers.QuotaController,com.android.server.job.controllers.QuotaController$1)>(r0, null);

        r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$UidConstraintUpdater mUpdateUidConstraints> = $r17;

        $r18 = new com.android.server.job.controllers.QuotaController$DeleteTimingSessionsFunctor;

        specialinvoke $r18.<com.android.server.job.controllers.QuotaController$DeleteTimingSessionsFunctor: void <init>(com.android.server.job.controllers.QuotaController,com.android.server.job.controllers.QuotaController$1)>(r0, null);

        r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$DeleteTimingSessionsFunctor mDeleteOldSessionsFunctor> = $r18;

        $r19 = new com.android.server.job.controllers.QuotaController$QcHandler;

        $r20 = r0.<com.android.server.job.controllers.QuotaController: android.content.Context mContext>;

        $r21 = virtualinvoke $r20.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r19.<com.android.server.job.controllers.QuotaController$QcHandler: void <init>(com.android.server.job.controllers.QuotaController,android.os.Looper)>(r0, $r21);

        r0.<com.android.server.job.controllers.QuotaController: android.os.Handler mHandler> = $r19;

        $r22 = new com.android.server.job.controllers.QuotaController$ChargingTracker;

        specialinvoke $r22.<com.android.server.job.controllers.QuotaController$ChargingTracker: void <init>(com.android.server.job.controllers.QuotaController)>(r0);

        r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$ChargingTracker mChargeTracker> = $r22;

        virtualinvoke $r22.<com.android.server.job.controllers.QuotaController$ChargingTracker: void startTracking()>();

        $r23 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        $r24 = (android.app.ActivityManagerInternal) $r23;

        r0.<com.android.server.job.controllers.QuotaController: android.app.ActivityManagerInternal mActivityManagerInternal> = $r24;

        $r25 = r0.<com.android.server.job.controllers.QuotaController: android.content.Context mContext>;

        $r26 = virtualinvoke $r25.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r27 = (android.app.AlarmManager) $r26;

        r0.<com.android.server.job.controllers.QuotaController: android.app.AlarmManager mAlarmManager> = $r27;

        $r28 = new com.android.server.job.controllers.QuotaController$QcConstants;

        $r29 = r0.<com.android.server.job.controllers.QuotaController: android.os.Handler mHandler>;

        specialinvoke $r28.<com.android.server.job.controllers.QuotaController$QcConstants: void <init>(com.android.server.job.controllers.QuotaController,android.os.Handler)>(r0, $r29);

        r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$QcConstants mQcConstants> = $r28;

        $r30 = new android.content.IntentFilter;

        specialinvoke $r30.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        $r33 = r0.<com.android.server.job.controllers.QuotaController: android.content.Context mContext>;

        $r32 = r0.<com.android.server.job.controllers.QuotaController: android.content.BroadcastReceiver mPackageAddedReceiver>;

        $r31 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r33.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r32, $r31, $r30, null, null);

        $r35 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/usage/AppStandbyInternal;");

        $r37 = (com.android.server.usage.AppStandbyInternal) $r35;

        $r36 = new com.android.server.job.controllers.QuotaController$StandbyTracker;

        specialinvoke $r36.<com.android.server.job.controllers.QuotaController$StandbyTracker: void <init>(com.android.server.job.controllers.QuotaController)>(r0);

        interfaceinvoke $r37.<com.android.server.usage.AppStandbyInternal: void addListener(com.android.server.usage.AppStandbyInternal$AppIdleStateChangeListener)>($r36);

     label1:
        $r38 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r39 = r0.<com.android.server.job.controllers.QuotaController: android.app.IUidObserver mUidObserver>;

        interfaceinvoke $r38.<android.app.IActivityManager: void registerUidObserver(android.app.IUidObserver,int,int,java.lang.String)>($r39, 1, 4, null);

     label2:
        goto label4;

     label3:
        $r40 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static java.lang.String access$000(int, java.lang.String)
    {
        int i0;
        java.lang.String r0, $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <com.android.server.job.controllers.QuotaController: java.lang.String string(int,java.lang.String)>(i0, r0);

        return $r1;
    }

    static int access$100(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <com.android.server.job.controllers.QuotaController: int hashLong(long)>(l0);

        return $i1;
    }

    static boolean access$1000(com.android.server.job.controllers.QuotaController, com.android.server.job.controllers.JobStatus, boolean)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.JobStatus r1;
        boolean z0, $z1;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        r1 := @parameter1: com.android.server.job.controllers.JobStatus;

        z0 := @parameter2: boolean;

        $z1 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean setConstraintSatisfied(com.android.server.job.controllers.JobStatus,boolean)>(r1, z0);

        return $z1;
    }

    static com.android.server.job.controllers.QuotaController$InQuotaAlarmListener access$1100(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.QuotaController$InQuotaAlarmListener $r1;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$InQuotaAlarmListener mInQuotaAlarmListener>;

        return $r1;
    }

    static boolean access$1300()
    {
        boolean $z0;

        $z0 = <com.android.server.job.controllers.QuotaController: boolean DEBUG>;

        return $z0;
    }

    static void access$1400(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        specialinvoke r0.<com.android.server.job.controllers.QuotaController: void handleNewChargingStateLocked()>();

        return;
    }

    static boolean access$1500(com.android.server.job.controllers.QuotaController, com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.JobStatus r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        r1 := @parameter1: com.android.server.job.controllers.JobStatus;

        $z0 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isTopStartedJobLocked(com.android.server.job.controllers.JobStatus)>(r1);

        return $z0;
    }

    static com.android.server.job.controllers.QuotaController$ChargingTracker access$1600(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.QuotaController$ChargingTracker $r1;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$ChargingTracker mChargeTracker>;

        return $r1;
    }

    static void access$1700(com.android.server.job.controllers.QuotaController, int, java.lang.String)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.job.controllers.QuotaController: void incrementTimingSessionCount(int,java.lang.String)>(i0, r1);

        return;
    }

    static android.util.SparseBooleanArray access$1800(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        android.util.SparseBooleanArray $r1;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseBooleanArray mForegroundUids>;

        return $r1;
    }

    static android.util.SparseArrayMap access$1900(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        android.util.SparseArrayMap $r1;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs>;

        return $r1;
    }

    static android.util.SparseArrayMap access$2000(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        android.util.SparseArrayMap $r1;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        return $r1;
    }

    static boolean access$2100(com.android.server.job.controllers.QuotaController, int, java.lang.String)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean maybeUpdateConstraintForPkgLocked(int,java.lang.String)>(i0, r1);

        return $z0;
    }

    static boolean access$2300(com.android.server.job.controllers.QuotaController, int)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean maybeUpdateConstraintForUidLocked(int)>(i0);

        return $z0;
    }

    static android.app.AlarmManager access$2400(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        android.app.AlarmManager $r1;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: android.app.AlarmManager mAlarmManager>;

        return $r1;
    }

    static long access$2500(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        long $l0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $l0 = r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeMs>;

        return $l0;
    }

    static long access$2502(com.android.server.job.controllers.QuotaController, long)
    {
        com.android.server.job.controllers.QuotaController r0;
        long l0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        l0 := @parameter1: long;

        r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeMs> = l0;

        return l0;
    }

    static long access$2602(com.android.server.job.controllers.QuotaController, long)
    {
        com.android.server.job.controllers.QuotaController r0;
        long l0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        l0 := @parameter1: long;

        r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeIntoQuotaMs> = l0;

        return l0;
    }

    static long access$2700(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        long $l0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $l0 = r0.<com.android.server.job.controllers.QuotaController: long mQuotaBufferMs>;

        return $l0;
    }

    static long access$2702(com.android.server.job.controllers.QuotaController, long)
    {
        com.android.server.job.controllers.QuotaController r0;
        long l0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        l0 := @parameter1: long;

        r0.<com.android.server.job.controllers.QuotaController: long mQuotaBufferMs> = l0;

        return l0;
    }

    static long access$2800(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        long $l0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $l0 = r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimePerPeriodMs>;

        return $l0;
    }

    static long access$2802(com.android.server.job.controllers.QuotaController, long)
    {
        com.android.server.job.controllers.QuotaController r0;
        long l0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        l0 := @parameter1: long;

        r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimePerPeriodMs> = l0;

        return l0;
    }

    static long access$2902(com.android.server.job.controllers.QuotaController, long)
    {
        com.android.server.job.controllers.QuotaController r0;
        long l0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        l0 := @parameter1: long;

        r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimeIntoQuotaMs> = l0;

        return l0;
    }

    static android.os.Handler access$300(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: android.os.Handler mHandler>;

        return $r1;
    }

    static long[] access$3000(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        long[] $r1;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: long[] mBucketPeriodsMs>;

        return $r1;
    }

    static long access$3100(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        long $l0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $l0 = r0.<com.android.server.job.controllers.QuotaController: long mRateLimitingWindowMs>;

        return $l0;
    }

    static long access$3102(com.android.server.job.controllers.QuotaController, long)
    {
        com.android.server.job.controllers.QuotaController r0;
        long l0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        l0 := @parameter1: long;

        r0.<com.android.server.job.controllers.QuotaController: long mRateLimitingWindowMs> = l0;

        return l0;
    }

    static int access$3200(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        int $i0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $i0 = r0.<com.android.server.job.controllers.QuotaController: int mMaxJobCountPerRateLimitingWindow>;

        return $i0;
    }

    static int access$3202(com.android.server.job.controllers.QuotaController, int)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        i0 := @parameter1: int;

        r0.<com.android.server.job.controllers.QuotaController: int mMaxJobCountPerRateLimitingWindow> = i0;

        return i0;
    }

    static int[] access$3300(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        int[] $r1;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: int[] mMaxBucketJobCounts>;

        return $r1;
    }

    static int access$3400(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        int $i0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $i0 = r0.<com.android.server.job.controllers.QuotaController: int mMaxSessionCountPerRateLimitingWindow>;

        return $i0;
    }

    static int access$3402(com.android.server.job.controllers.QuotaController, int)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        i0 := @parameter1: int;

        r0.<com.android.server.job.controllers.QuotaController: int mMaxSessionCountPerRateLimitingWindow> = i0;

        return i0;
    }

    static int[] access$3500(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        int[] $r1;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: int[] mMaxBucketSessionCounts>;

        return $r1;
    }

    static long access$3600(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        long $l0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $l0 = r0.<com.android.server.job.controllers.QuotaController: long mTimingSessionCoalescingDurationMs>;

        return $l0;
    }

    static long access$3602(com.android.server.job.controllers.QuotaController, long)
    {
        com.android.server.job.controllers.QuotaController r0;
        long l0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        l0 := @parameter1: long;

        r0.<com.android.server.job.controllers.QuotaController: long mTimingSessionCoalescingDurationMs> = l0;

        return l0;
    }

    static void access$3700(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        specialinvoke r0.<com.android.server.job.controllers.QuotaController: void maybeUpdateAllConstraintsLocked()>();

        return;
    }

    static android.util.SparseSetArray access$400(com.android.server.job.controllers.QuotaController)
    {
        com.android.server.job.controllers.QuotaController r0;
        android.util.SparseSetArray $r1;

        r0 := @parameter0: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseSetArray mUidToPackageCache>;

        return $r1;
    }

    private long calculateTimeUntilQuotaConsumedLocked(java.util.List, long, long)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.QuotaController$TimingSession r1;
        int $i1, i19;
        long $l2, $l5, $l7, $l9, $l11, $l12, $l13, $l14, $l15, $l16, l17, l18, l20, l21, l22, l23, l24;
        byte $b3, $b6, $b8, $b10;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        java.lang.Object $r6;
        java.util.List r7;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r7 := @parameter0: java.util.List;

        l17 := @parameter1: long;

        l18 := @parameter2: long;

        i19 = 0;

        l20 = l17;

        l21 = l18;

        l22 = 0L;

     label1:
        $i1 = interfaceinvoke r7.<java.util.List: int size()>();

        if i19 >= $i1 goto label6;

        $r6 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i19);

        r1 = (com.android.server.job.controllers.QuotaController$TimingSession) $r6;

        $l5 = r1.<com.android.server.job.controllers.QuotaController$TimingSession: long endTimeElapsed>;

        $b6 = $l5 cmp l17;

        if $b6 >= 0 goto label2;

        goto label5;

     label2:
        $l7 = r1.<com.android.server.job.controllers.QuotaController$TimingSession: long startTimeElapsed>;

        $b8 = $l7 cmp l17;

        if $b8 > 0 goto label3;

        $l15 = r1.<com.android.server.job.controllers.QuotaController$TimingSession: long endTimeElapsed>;

        $l16 = $l15 - l17;

        l22 = l22 + $l16;

        l20 = r1.<com.android.server.job.controllers.QuotaController$TimingSession: long endTimeElapsed>;

        goto label5;

     label3:
        $l9 = r1.<com.android.server.job.controllers.QuotaController$TimingSession: long startTimeElapsed>;

        l23 = $l9 - l20;

        $b10 = l23 cmp l21;

        if $b10 <= 0 goto label4;

        goto label6;

     label4:
        $l12 = r1.<com.android.server.job.controllers.QuotaController$TimingSession: long endTimeElapsed>;

        $l11 = r1.<com.android.server.job.controllers.QuotaController$TimingSession: long startTimeElapsed>;

        $l13 = $l12 - $l11;

        $l14 = $l13 + l23;

        l22 = l22 + $l14;

        l21 = l21 - l23;

        l20 = r1.<com.android.server.job.controllers.QuotaController$TimingSession: long endTimeElapsed>;

     label5:
        i19 = i19 + 1;

        goto label1;

     label6:
        l24 = l22 + l21;

        $l2 = r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeMs>;

        $b3 = l24 cmp $l2;

        if $b3 <= 0 goto label7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calculated quota consumed time too high: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l24);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("JobScheduler.Quota", $r5);

     label7:
        return l24;
    }

    private com.android.server.job.controllers.QuotaController$ExecutionStats getExecutionStatsLocked(int, java.lang.String, int, boolean)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0, i2, $i8, $i9, $i10, i12, i13;
        java.lang.String r1;
        boolean z0, $z1;
        com.android.server.job.controllers.QuotaController$ExecutionStats r2, $r11, $r14, r17;
        long l1, $l3, $l4, $l6;
        android.util.SparseArrayMap $r3, $r8, $r13;
        java.lang.Object $r4, $r9;
        long[] $r5, $r12;
        int[] $r6, $r7;
        java.time.Clock $r10;
        byte $b5, $b7;
        com.android.server.job.controllers.QuotaController$ExecutionStats[] r15, r16;
        com.android.server.job.controllers.QuotaController$Timer r18;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i12 := @parameter2: int;

        z0 := @parameter3: boolean;

        if i12 != 4 goto label1;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("JobScheduler.Quota", "getExecutionStatsLocked called for a NEVER app.");

        $r14 = new com.android.server.job.controllers.QuotaController$ExecutionStats;

        specialinvoke $r14.<com.android.server.job.controllers.QuotaController$ExecutionStats: void <init>()>();

        return $r14;

     label1:
        $r3 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        $r4 = virtualinvoke $r3.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i0, r1);

        r15 = (com.android.server.job.controllers.QuotaController$ExecutionStats[]) $r4;

        r16 = r15;

        if r15 != null goto label2;

        $r12 = r0.<com.android.server.job.controllers.QuotaController: long[] mBucketPeriodsMs>;

        $i10 = lengthof $r12;

        r16 = newarray (com.android.server.job.controllers.QuotaController$ExecutionStats)[$i10];

        $r13 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        virtualinvoke $r13.<android.util.SparseArrayMap: void add(int,java.lang.String,java.lang.Object)>(i0, r1, r16);

     label2:
        r2 = r16[i12];

        r17 = r2;

        if r2 != null goto label3;

        $r11 = new com.android.server.job.controllers.QuotaController$ExecutionStats;

        specialinvoke $r11.<com.android.server.job.controllers.QuotaController$ExecutionStats: void <init>()>();

        r17 = $r11;

        r16[i12] = $r11;

     label3:
        if z0 == 0 goto label6;

        $r5 = r0.<com.android.server.job.controllers.QuotaController: long[] mBucketPeriodsMs>;

        l1 = $r5[i12];

        $r6 = r0.<com.android.server.job.controllers.QuotaController: int[] mMaxBucketJobCounts>;

        i2 = $r6[i12];

        $r7 = r0.<com.android.server.job.controllers.QuotaController: int[] mMaxBucketSessionCounts>;

        i13 = $r7[i12];

        $r8 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        $r9 = virtualinvoke $r8.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i0, r1);

        r18 = (com.android.server.job.controllers.QuotaController$Timer) $r9;

        if r18 == null goto label4;

        $z1 = virtualinvoke r18.<com.android.server.job.controllers.QuotaController$Timer: boolean isActive()>();

        if $z1 != 0 goto label5;

     label4:
        $l3 = r17.<com.android.server.job.controllers.QuotaController$ExecutionStats: long expirationTimeElapsed>;

        $r10 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        $l4 = virtualinvoke $r10.<java.time.Clock: long millis()>();

        $b5 = $l3 cmp $l4;

        if $b5 <= 0 goto label5;

        $l6 = r17.<com.android.server.job.controllers.QuotaController$ExecutionStats: long windowSizeMs>;

        $b7 = $l6 cmp l1;

        if $b7 != 0 goto label5;

        $i8 = r17.<com.android.server.job.controllers.QuotaController$ExecutionStats: int jobCountLimit>;

        if $i8 != i2 goto label5;

        $i9 = r17.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountLimit>;

        if $i9 == i13 goto label6;

     label5:
        r17.<com.android.server.job.controllers.QuotaController$ExecutionStats: long windowSizeMs> = l1;

        r17.<com.android.server.job.controllers.QuotaController$ExecutionStats: int jobCountLimit> = i2;

        r17.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountLimit> = i13;

        virtualinvoke r0.<com.android.server.job.controllers.QuotaController: void updateExecutionStatsLocked(int,java.lang.String,com.android.server.job.controllers.QuotaController$ExecutionStats)>(i0, r1, r17);

     label6:
        return r17;
    }

    private long getRemainingExecutionTimeLocked(int, java.lang.String, int)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0, i1;
        java.lang.String r1;
        com.android.server.job.controllers.QuotaController$ExecutionStats $r2;
        long $l2;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        if i1 != 4 goto label1;

        return 0L;

     label1:
        $r2 = virtualinvoke r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$ExecutionStats getExecutionStatsLocked(int,java.lang.String,int)>(i0, r1, i1);

        $l2 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: long getRemainingExecutionTimeLocked(com.android.server.job.controllers.QuotaController$ExecutionStats)>($r2);

        return $l2;
    }

    private long getRemainingExecutionTimeLocked(com.android.server.job.controllers.QuotaController$ExecutionStats)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.QuotaController$ExecutionStats r1;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: com.android.server.job.controllers.QuotaController$ExecutionStats;

        $l1 = r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimePerPeriodMs>;

        $l0 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInWindowMs>;

        $l5 = $l1 - $l0;

        $l3 = r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeMs>;

        $l2 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs>;

        $l4 = $l3 - $l2;

        $l6 = staticinvoke <java.lang.Math: long min(long,long)>($l5, $l4);

        return $l6;
    }

    private void handleNewChargingStateLocked()
    {
        com.android.server.job.controllers.QuotaController r0;
        java.time.Clock $r2;
        com.android.server.job.controllers.QuotaController$TimerChargingUpdateFunctor $r3, $r5;
        long $l0;
        com.android.server.job.controllers.QuotaController$ChargingTracker $r4, $r9;
        boolean $z0, $z1, $z2;
        android.util.SparseArrayMap $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r11;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $r3 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$TimerChargingUpdateFunctor mTimerChargingUpdateFunctor>;

        $r2 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        $l0 = virtualinvoke $r2.<java.time.Clock: long millis()>();

        $r4 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$ChargingTracker mChargeTracker>;

        $z0 = virtualinvoke $r4.<com.android.server.job.controllers.QuotaController$ChargingTracker: boolean isCharging()>();

        staticinvoke <com.android.server.job.controllers.QuotaController$TimerChargingUpdateFunctor: void access$900(com.android.server.job.controllers.QuotaController$TimerChargingUpdateFunctor,long,boolean)>($r3, $l0, $z0);

        $z1 = <com.android.server.job.controllers.QuotaController: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleNewChargingStateLocked: ");

        $r9 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$ChargingTracker mChargeTracker>;

        $z2 = virtualinvoke $r9.<com.android.server.job.controllers.QuotaController$ChargingTracker: boolean isCharging()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("JobScheduler.Quota", $r11);

     label1:
        $r6 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        $r5 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$TimerChargingUpdateFunctor mTimerChargingUpdateFunctor>;

        virtualinvoke $r6.<android.util.SparseArrayMap: void forEach(java.util.function.Consumer)>($r5);

        specialinvoke r0.<com.android.server.job.controllers.QuotaController: void maybeUpdateAllConstraintsLocked()>();

        return;
    }

    private static int hashLong(long)
    {
        long l0, $l1, $l2;
        int $i3;

        l0 := @parameter0: long;

        $l1 = l0 >>> 32;

        $l2 = $l1 ^ l0;

        $i3 = (int) $l2;

        return $i3;
    }

    private void incrementTimingSessionCount(int, java.lang.String)
    {
        com.android.server.job.controllers.QuotaController r0;
        long l0, $l1, $l5, $l6;
        java.time.Clock $r1;
        android.util.SparseArrayMap $r2, $r6;
        java.lang.Object $r3;
        byte $b2;
        int $i3, $i4, $i7, i8, i9, $i10;
        com.android.server.job.controllers.QuotaController$ExecutionStats $r4, r10, r11;
        long[] $r5;
        java.lang.String r7;
        com.android.server.job.controllers.QuotaController$ExecutionStats[] r8, r9;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i8 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        $r1 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l0 = virtualinvoke $r1.<java.time.Clock: long millis()>();

        $r2 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        $r3 = virtualinvoke $r2.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i8, r7);

        r8 = (com.android.server.job.controllers.QuotaController$ExecutionStats[]) $r3;

        r9 = r8;

        if r8 != null goto label1;

        $r5 = r0.<com.android.server.job.controllers.QuotaController: long[] mBucketPeriodsMs>;

        $i7 = lengthof $r5;

        r9 = newarray (com.android.server.job.controllers.QuotaController$ExecutionStats)[$i7];

        $r6 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        virtualinvoke $r6.<android.util.SparseArrayMap: void add(int,java.lang.String,java.lang.Object)>(i8, r7, r9);

     label1:
        i9 = 0;

     label2:
        $i10 = lengthof r9;

        if i9 >= $i10 goto label5;

        r10 = r9[i9];

        r11 = r10;

        if r10 != null goto label3;

        $r4 = new com.android.server.job.controllers.QuotaController$ExecutionStats;

        specialinvoke $r4.<com.android.server.job.controllers.QuotaController$ExecutionStats: void <init>()>();

        r11 = $r4;

        r9[i9] = $r4;

     label3:
        $l1 = r11.<com.android.server.job.controllers.QuotaController$ExecutionStats: long sessionRateLimitExpirationTimeElapsed>;

        $b2 = $l1 cmp l0;

        if $b2 > 0 goto label4;

        $l5 = r0.<com.android.server.job.controllers.QuotaController: long mRateLimitingWindowMs>;

        $l6 = $l5 + l0;

        r11.<com.android.server.job.controllers.QuotaController$ExecutionStats: long sessionRateLimitExpirationTimeElapsed> = $l6;

        r11.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountInRateLimitingWindow> = 0;

     label4:
        $i3 = r11.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountInRateLimitingWindow>;

        $i4 = $i3 + 1;

        r11.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountInRateLimitingWindow> = $i4;

        i9 = i9 + 1;

        goto label2;

     label5:
        return;
    }

    private boolean isTopStartedJobLocked(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.JobStatus r1;
        android.util.ArraySet $r2;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $r2 = r0.<com.android.server.job.controllers.QuotaController: android.util.ArraySet mTopStartedJobs>;

        $z0 = virtualinvoke $r2.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    private boolean isUidInForeground(int)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0;
        java.lang.Object r1;
        boolean z0, $z1;
        android.util.SparseBooleanArray $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        $z1 = staticinvoke <android.os.UserHandle: boolean isCore(int)>(i0);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.<com.android.server.job.controllers.QuotaController: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        $r3 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseBooleanArray mForegroundUids>;

        z0 = virtualinvoke $r3.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        exitmonitor r1;

     label3:
        return z0;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private boolean isUnderJobCountQuotaLocked(com.android.server.job.controllers.QuotaController$ExecutionStats, int)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.QuotaController$ExecutionStats r1;
        int i0, $i4, $i5, $i6, $i7;
        long l1, l2;
        java.time.Clock $r2;
        byte $b3;
        int[] $r3;
        boolean z1, z2;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: com.android.server.job.controllers.QuotaController$ExecutionStats;

        i0 := @parameter1: int;

        $r2 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l1 = virtualinvoke $r2.<java.time.Clock: long millis()>();

        l2 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long jobRateLimitExpirationTimeElapsed>;

        $b3 = l2 cmp l1;

        if $b3 <= 0 goto label2;

        $i7 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int jobCountInRateLimitingWindow>;

        $i6 = r0.<com.android.server.job.controllers.QuotaController: int mMaxJobCountPerRateLimitingWindow>;

        if $i7 >= $i6 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        z2 = 0;

        if z1 == 0 goto label4;

        z2 = 0;

        $i5 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInWindow>;

        $r3 = r0.<com.android.server.job.controllers.QuotaController: int[] mMaxBucketJobCounts>;

        $i4 = $r3[i0];

        if $i5 >= $i4 goto label4;

        z2 = 1;

     label4:
        return z2;
    }

    private boolean isUnderSessionCountQuotaLocked(com.android.server.job.controllers.QuotaController$ExecutionStats, int)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.QuotaController$ExecutionStats r1;
        int i0, $i4, $i5, $i6, $i7;
        long l1, l2;
        java.time.Clock $r2;
        byte $b3;
        int[] $r3;
        boolean z1, z2;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: com.android.server.job.controllers.QuotaController$ExecutionStats;

        i0 := @parameter1: int;

        $r2 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l1 = virtualinvoke $r2.<java.time.Clock: long millis()>();

        l2 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long sessionRateLimitExpirationTimeElapsed>;

        $b3 = l2 cmp l1;

        if $b3 <= 0 goto label2;

        $i7 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountInRateLimitingWindow>;

        $i6 = r0.<com.android.server.job.controllers.QuotaController: int mMaxSessionCountPerRateLimitingWindow>;

        if $i7 >= $i6 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        z2 = 0;

        if z1 == 0 goto label4;

        z2 = 0;

        $i5 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountInWindow>;

        $r3 = r0.<com.android.server.job.controllers.QuotaController: int[] mMaxBucketSessionCounts>;

        $i4 = $r3[i0];

        if $i5 >= $i4 goto label4;

        z2 = 1;

     label4:
        return z2;
    }

    static void lambda$invalidateAllExecutionStatsLocked$0(long, com.android.server.job.controllers.QuotaController$ExecutionStats[])
    {
        long l0;
        com.android.server.job.controllers.QuotaController$ExecutionStats[] r0;
        com.android.server.job.controllers.QuotaController$ExecutionStats r1;
        int $i1, i2;

        l0 := @parameter0: long;

        r0 := @parameter1: com.android.server.job.controllers.QuotaController$ExecutionStats[];

        if r0 == null goto label3;

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label3;

        r1 = r0[i2];

        if r1 == null goto label2;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long expirationTimeElapsed> = l0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private void maybeUpdateAllConstraintsLocked()
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0, $i1, $i2, i3, i4;
        android.util.SparseArrayMap $r1, $r3, $r4, $r5;
        com.android.server.job.StateChangedListener $r2;
        java.lang.String $r6;
        boolean $z0, z1;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        z1 = 0;

        i3 = 0;

     label1:
        $r1 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs>;

        $i1 = virtualinvoke $r1.<android.util.SparseArrayMap: int numMaps()>();

        if i3 >= $i1 goto label4;

        $r3 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs>;

        i0 = virtualinvoke $r3.<android.util.SparseArrayMap: int keyAt(int)>(i3);

        i4 = 0;

     label2:
        $r4 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs>;

        $i2 = virtualinvoke $r4.<android.util.SparseArrayMap: int numElementsForKey(int)>(i0);

        if i4 >= $i2 goto label3;

        $r5 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs>;

        $r6 = virtualinvoke $r5.<android.util.SparseArrayMap: java.lang.String keyAt(int,int)>(i3, i4);

        $z0 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean maybeUpdateConstraintForPkgLocked(int,java.lang.String)>(i0, $r6);

        z1 = z1 | $z0;

        i4 = i4 + 1;

        goto label2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        if z1 == 0 goto label5;

        $r2 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.StateChangedListener mStateChangedListener>;

        interfaceinvoke $r2.<com.android.server.job.StateChangedListener: void onControllerStateChanged()>();

     label5:
        return;
    }

    private boolean maybeUpdateConstraintForPkgLocked(int, java.lang.String)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0, i1, $i2, $i3, $i4, i5;
        java.lang.String r1;
        android.util.ArraySet r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;
        com.android.server.job.controllers.JobStatus r3, $r7;
        android.util.SparseArrayMap $r4;
        java.lang.Object $r5, $r6, $r9;
        com.android.server.job.controllers.QuotaController$InQuotaAlarmListener $r8;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs>;

        $r5 = virtualinvoke $r4.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i0, r1);

        r2 = (android.util.ArraySet) $r5;

        if r2 == null goto label9;

        $i2 = virtualinvoke r2.<android.util.ArraySet: int size()>();

        if $i2 != 0 goto label1;

        goto label9;

     label1:
        $r6 = virtualinvoke r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(0);

        $r7 = (com.android.server.job.controllers.JobStatus) $r6;

        i1 = virtualinvoke $r7.<com.android.server.job.controllers.JobStatus: int getStandbyBucket()>();

        z0 = virtualinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isWithinQuotaLocked(int,java.lang.String,int)>(i0, r1, i1);

        z6 = 0;

        $i3 = virtualinvoke r2.<android.util.ArraySet: int size()>();

        i5 = $i3 - 1;

     label2:
        if i5 < 0 goto label6;

        $r9 = virtualinvoke r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i5);

        r3 = (com.android.server.job.controllers.JobStatus) $r9;

        $z1 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isTopStartedJobLocked(com.android.server.job.controllers.JobStatus)>(r3);

        if $z1 == 0 goto label3;

        $z5 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: boolean setQuotaConstraintSatisfied(boolean)>(1);

        z6 = z6 | $z5;

        goto label5;

     label3:
        if i1 == 0 goto label4;

        $i4 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: int getEffectiveStandbyBucket()>();

        if i1 != $i4 goto label4;

        $z4 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean setConstraintSatisfied(com.android.server.job.controllers.JobStatus,boolean)>(r3, z0);

        z6 = z6 | $z4;

        goto label5;

     label4:
        $z2 = virtualinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isWithinQuotaLocked(com.android.server.job.controllers.JobStatus)>(r3);

        $z3 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean setConstraintSatisfied(com.android.server.job.controllers.JobStatus,boolean)>(r3, $z2);

        z6 = z6 | $z3;

     label5:
        i5 = i5 + -1;

        goto label2;

     label6:
        if z0 != 0 goto label7;

        virtualinvoke r0.<com.android.server.job.controllers.QuotaController: void maybeScheduleStartAlarmLocked(int,java.lang.String,int)>(i0, r1, i1);

        goto label8;

     label7:
        $r8 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$InQuotaAlarmListener mInQuotaAlarmListener>;

        virtualinvoke $r8.<com.android.server.job.controllers.QuotaController$InQuotaAlarmListener: void removeAlarmLocked(int,java.lang.String)>(i0, r1);

     label8:
        return z6;

     label9:
        return 0;
    }

    private boolean maybeUpdateConstraintForUidLocked(int)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0;
        boolean z0;
        com.android.server.job.JobSchedulerService $r1;
        com.android.server.job.JobStore $r2;
        com.android.server.job.controllers.QuotaController$UidConstraintUpdater $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.JobSchedulerService mService>;

        $r2 = virtualinvoke $r1.<com.android.server.job.JobSchedulerService: com.android.server.job.JobStore getJobStore()>();

        $r3 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$UidConstraintUpdater mUpdateUidConstraints>;

        virtualinvoke $r2.<com.android.server.job.JobStore: void forEachJobForSourceUid(int,java.util.function.Consumer)>(i0, $r3);

        $r4 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$UidConstraintUpdater mUpdateUidConstraints>;

        virtualinvoke $r4.<com.android.server.job.controllers.QuotaController$UidConstraintUpdater: void postProcess()>();

        $r5 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$UidConstraintUpdater mUpdateUidConstraints>;

        z0 = $r5.<com.android.server.job.controllers.QuotaController$UidConstraintUpdater: boolean wasJobChanged>;

        $r6 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$UidConstraintUpdater mUpdateUidConstraints>;

        virtualinvoke $r6.<com.android.server.job.controllers.QuotaController$UidConstraintUpdater: void reset()>();

        return z0;
    }

    private boolean setConstraintSatisfied(com.android.server.job.controllers.JobStatus, boolean)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.JobStatus r1;
        boolean z0, $z1;
        long $l0, $l2;
        byte $b1;
        java.time.Clock $r2;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label1;

        $l0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: long getWhenStandbyDeferred()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r2 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        $l2 = virtualinvoke $r2.<java.time.Clock: long millis()>();

        virtualinvoke r1.<com.android.server.job.controllers.JobStatus: void setWhenStandbyDeferred(long)>($l2);

     label1:
        $z1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean setQuotaConstraintSatisfied(boolean)>(z0);

        return $z1;
    }

    private static java.lang.String string(int, java.lang.String)
    {
        int i0;
        java.lang.String r0, $r7;
        java.lang.StringBuilder $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void clearAppStats(int, java.lang.String)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0;
        java.lang.String r1;
        com.android.server.job.controllers.QuotaController$Timer r2;
        android.util.SparseArrayMap $r3, $r5, $r9, $r11, $r13;
        java.lang.Object $r6;
        boolean $z0;
        com.android.server.job.controllers.QuotaController$InQuotaAlarmListener $r12;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs>;

        virtualinvoke $r3.<android.util.SparseArrayMap: java.lang.Object delete(int,java.lang.String)>(i0, r1);

        $r5 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i0, r1);

        r2 = (com.android.server.job.controllers.QuotaController$Timer) $r6;

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<com.android.server.job.controllers.QuotaController$Timer: boolean isActive()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("JobScheduler.Quota", "clearAppStats called before Timer turned off.");

        virtualinvoke r2.<com.android.server.job.controllers.QuotaController$Timer: void dropEverythingLocked()>();

     label1:
        $r9 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        virtualinvoke $r9.<android.util.SparseArrayMap: java.lang.Object delete(int,java.lang.String)>(i0, r1);

     label2:
        $r11 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTimingSessions>;

        virtualinvoke $r11.<android.util.SparseArrayMap: java.lang.Object delete(int,java.lang.String)>(i0, r1);

        $r12 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$InQuotaAlarmListener mInQuotaAlarmListener>;

        virtualinvoke $r12.<com.android.server.job.controllers.QuotaController$InQuotaAlarmListener: void removeAlarmLocked(int,java.lang.String)>(i0, r1);

        $r13 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        virtualinvoke $r13.<android.util.SparseArrayMap: java.lang.Object delete(int,java.lang.String)>(i0, r1);

        return;
    }

    void deleteObsoleteSessionsLocked()
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.QuotaController$DeleteTimingSessionsFunctor $r1;
        android.util.SparseArrayMap $r2;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $r2 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTimingSessions>;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$DeleteTimingSessionsFunctor mDeleteOldSessionsFunctor>;

        virtualinvoke $r2.<android.util.SparseArrayMap: void forEach(java.util.function.Consumer)>($r1);

        return;
    }

    public void dumpConstants(android.util.proto.ProtoOutputStream)
    {
        com.android.server.job.controllers.QuotaController r0;
        android.util.proto.ProtoOutputStream r1;
        com.android.server.job.controllers.QuotaController$QcConstants $r2;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        $r2 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$QcConstants mQcConstants>;

        staticinvoke <com.android.server.job.controllers.QuotaController$QcConstants: void access$3900(com.android.server.job.controllers.QuotaController$QcConstants,android.util.proto.ProtoOutputStream)>($r2, r1);

        return;
    }

    public void dumpConstants(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.internal.util.IndentingPrintWriter r1;
        com.android.server.job.controllers.QuotaController$QcConstants $r2;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        $r2 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$QcConstants mQcConstants>;

        staticinvoke <com.android.server.job.controllers.QuotaController$QcConstants: void access$3800(com.android.server.job.controllers.QuotaController$QcConstants,com.android.internal.util.IndentingPrintWriter)>($r2, r1);

        return;
    }

    public void dumpControllerStateLocked(android.util.proto.ProtoOutputStream, long, java.util.function.Predicate)
    {
        com.android.server.job.controllers.QuotaController r0;
        android.util.proto.ProtoOutputStream r1;
        java.util.function.Predicate r2;
        long l0, l1, $l2, $l8, $l9, $l12, $l14, $l17, $l18, $l20, l25, l26, l29, l35;
        com.android.server.job.controllers.QuotaController$ChargingTracker $r3;
        boolean $z0;
        java.time.Clock $r4;
        android.util.SparseBooleanArray $r5, $r27;
        int $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i13, $i15, $i16, $i19, $i21, $i22, $i23, $i24, i27, i28, i30, i31, i32, i33, i34, i36, i37;
        android.util.SparseSetArray $r6, $r23, $r24;
        com.android.server.job.controllers._$$Lambda$QuotaController$gwTxd6QsR2hKQdgMoq978a_hGnk $r7;
        android.util.SparseArrayMap $r8, $r9, $r11, $r12, $r13, $r14, $r17, $r19;
        com.android.server.job.controllers.QuotaController$InQuotaAlarmListener $r10;
        java.lang.Object $r15, $r18, $r20, $r21, $r25;
        com.android.server.job.controllers.QuotaController$Timer $r16;
        com.android.server.job.controllers.QuotaController$TimingSession $r22;
        java.lang.String $r26, r29;
        android.util.ArraySet r28;
        java.util.List r30;
        com.android.server.job.controllers.QuotaController$ExecutionStats[] r31;
        com.android.server.job.controllers.QuotaController$ExecutionStats r32;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l25 := @parameter1: long;

        r2 := @parameter2: java.util.function.Predicate;

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l25);

        l26 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268041L);

        $r3 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$ChargingTracker mChargeTracker>;

        $z0 = virtualinvoke $r3.<com.android.server.job.controllers.QuotaController$ChargingTracker: boolean isCharging()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366145L, $z0);

        $r4 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        $l2 = virtualinvoke $r4.<java.time.Clock: long millis()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529670L, $l2);

        i27 = 0;

     label01:
        $r5 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseBooleanArray mForegroundUids>;

        $i3 = virtualinvoke $r5.<android.util.SparseBooleanArray: int size()>();

        if i27 >= $i3 goto label02;

        $r27 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseBooleanArray mForegroundUids>;

        $i24 = virtualinvoke $r27.<android.util.SparseBooleanArray: int keyAt(int)>(i27);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(2220498092035L, $i24);

        i27 = i27 + 1;

        goto label01;

     label02:
        i28 = 0;

     label03:
        $r6 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseSetArray mUidToPackageCache>;

        $i4 = virtualinvoke $r6.<android.util.SparseSetArray: int size()>();

        if i28 >= $i4 goto label06;

        l29 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895815L);

        $r23 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseSetArray mUidToPackageCache>;

        i30 = virtualinvoke $r23.<android.util.SparseSetArray: int keyAt(int)>(i28);

        $r24 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseSetArray mUidToPackageCache>;

        r28 = virtualinvoke $r24.<android.util.SparseSetArray: android.util.ArraySet get(int)>(i30);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, i30);

        i31 = 0;

     label04:
        $i23 = virtualinvoke r28.<android.util.ArraySet: int size()>();

        if i31 >= $i23 goto label05;

        $r25 = virtualinvoke r28.<android.util.ArraySet: java.lang.Object valueAt(int)>(i31);

        $r26 = (java.lang.String) $r25;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(2237677961218L, $r26);

        i31 = i31 + 1;

        goto label04;

     label05:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l29);

        i28 = i28 + 1;

        goto label03;

     label06:
        $r8 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs>;

        $r7 = new com.android.server.job.controllers._$$Lambda$QuotaController$gwTxd6QsR2hKQdgMoq978a_hGnk;

        specialinvoke $r7.<com.android.server.job.controllers._$$Lambda$QuotaController$gwTxd6QsR2hKQdgMoq978a_hGnk: void <init>(com.android.server.job.controllers.QuotaController,java.util.function.Predicate,android.util.proto.ProtoOutputStream)>(r0, r2, r1);

        virtualinvoke $r8.<android.util.SparseArrayMap: void forEach(java.util.function.Consumer)>($r7);

        i32 = 0;

     label07:
        $r9 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        $i5 = virtualinvoke $r9.<android.util.SparseArrayMap: int numMaps()>();

        if i32 >= $i5 goto label18;

        $r11 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        i33 = virtualinvoke $r11.<android.util.SparseArrayMap: int keyAt(int)>(i32);

        i34 = 0;

     label08:
        $r12 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        $i6 = virtualinvoke $r12.<android.util.SparseArrayMap: int numElementsForKey(int)>(i33);

        if i34 >= $i6 goto label17;

        $r13 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        r29 = virtualinvoke $r13.<android.util.SparseArrayMap: java.lang.String keyAt(int,int)>(i32, i34);

        l35 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895813L);

        $r14 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        $r15 = virtualinvoke $r14.<android.util.SparseArrayMap: java.lang.Object valueAt(int,int)>(i32, i34);

        $r16 = (com.android.server.job.controllers.QuotaController$Timer) $r15;

        virtualinvoke $r16.<com.android.server.job.controllers.QuotaController$Timer: void dump(android.util.proto.ProtoOutputStream,long,java.util.function.Predicate)>(r1, 1146756268034L, r2);

        $r17 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTimingSessions>;

        $r18 = virtualinvoke $r17.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i33, r29);

        r30 = (java.util.List) $r18;

        if r30 == null goto label11;

        $i22 = interfaceinvoke r30.<java.util.List: int size()>();

        i36 = $i22 - 1;

     label09:
        if i36 < 0 goto label10;

        $r21 = interfaceinvoke r30.<java.util.List: java.lang.Object get(int)>(i36);

        $r22 = (com.android.server.job.controllers.QuotaController$TimingSession) $r21;

        virtualinvoke $r22.<com.android.server.job.controllers.QuotaController$TimingSession: void dump(android.util.proto.ProtoOutputStream,long)>(r1, 2246267895811L);

        i36 = i36 + -1;

        goto label09;

     label10:
        goto label11;

     label11:
        $r19 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        $r20 = virtualinvoke $r19.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i33, r29);

        r31 = (com.android.server.job.controllers.QuotaController$ExecutionStats[]) $r20;

        if r31 == null goto label16;

        i37 = 0;

     label12:
        $i7 = lengthof r31;

        if i37 >= $i7 goto label15;

        r32 = r31[i37];

        if r32 != null goto label13;

        goto label14;

     label13:
        l1 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895812L);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169921L, i37);

        $l8 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: long expirationTimeElapsed>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529666L, $l8);

        $l9 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: long windowSizeMs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529667L, $l9);

        $i10 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: int jobCountLimit>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464270L, $i10);

        $i11 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountLimit>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464271L, $i11);

        $l12 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInWindowMs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529668L, $l12);

        $i13 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInWindow>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464261L, $i13);

        $l14 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529670L, $l14);

        $i15 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInMaxPeriod>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464263L, $i15);

        $i16 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountInWindow>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464267L, $i16);

        $l17 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529672L, $l17);

        $l18 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: long jobRateLimitExpirationTimeElapsed>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529673L, $l18);

        $i19 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: int jobCountInRateLimitingWindow>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464266L, $i19);

        $l20 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: long sessionRateLimitExpirationTimeElapsed>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529676L, $l20);

        $i21 = r32.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountInRateLimitingWindow>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464269L, $i21);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

     label14:
        i37 = i37 + 1;

        goto label12;

     label15:
        goto label16;

     label16:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l35);

        i34 = i34 + 1;

        goto label08;

     label17:
        i32 = i32 + 1;

        goto label07;

     label18:
        $r10 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$InQuotaAlarmListener mInQuotaAlarmListener>;

        virtualinvoke $r10.<com.android.server.job.controllers.QuotaController$InQuotaAlarmListener: void dumpLocked(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268040L);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l26);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        return;
    }

    public void dumpControllerStateLocked(com.android.internal.util.IndentingPrintWriter, java.util.function.Predicate)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.lang.StringBuilder $r2, $r7;
        com.android.server.job.controllers.QuotaController$ChargingTracker $r4;
        boolean $z0;
        java.lang.String $r6, $r11, $r13, $r30, $r33, r54, r56;
        java.time.Clock $r9;
        long $l0;
        android.util.SparseBooleanArray $r12;
        android.util.SparseSetArray $r15, $r48, $r49;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17;
        com.android.server.job.controllers._$$Lambda$QuotaController$ecfLuekQaza_6Us0YWTdja9N_Mk $r17;
        android.util.SparseArrayMap $r18, $r19, $r21, $r25, $r26, $r27, $r28, $r34, $r35, $r36, $r37, $r40;
        com.android.server.job.controllers.QuotaController$InQuotaAlarmListener $r23;
        java.lang.Object $r29, $r38, $r41, $r46;
        com.android.server.job.controllers.QuotaController$Timer $r39;
        com.android.server.job.controllers.QuotaController$TimingSession $r47;
        android.util.ArraySet $r50;
        java.util.function.Predicate r51;
        java.util.List r55;
        com.android.server.job.controllers.QuotaController$ExecutionStats[] r57;
        com.android.server.job.controllers.QuotaController$ExecutionStats r58;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r51 := @parameter1: java.util.function.Predicate;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Is charging: ");

        $r4 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$ChargingTracker mChargeTracker>;

        $z0 = virtualinvoke $r4.<com.android.server.job.controllers.QuotaController$ChargingTracker: boolean isCharging()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current elapsed time: ");

        $r9 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        $l0 = virtualinvoke $r9.<java.time.Clock: long millis()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r11);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("Foreground UIDs: ");

        $r12 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseBooleanArray mForegroundUids>;

        $r13 = virtualinvoke $r12.<android.util.SparseBooleanArray: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r13);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Cached UID->package map:");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        i8 = 0;

     label01:
        $r15 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseSetArray mUidToPackageCache>;

        $i1 = virtualinvoke $r15.<android.util.SparseSetArray: int size()>();

        if i8 >= $i1 goto label02;

        $r48 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseSetArray mUidToPackageCache>;

        i9 = virtualinvoke $r48.<android.util.SparseSetArray: int keyAt(int)>(i8);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(int)>(i9);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(": ");

        $r49 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseSetArray mUidToPackageCache>;

        $r50 = virtualinvoke $r49.<android.util.SparseSetArray: android.util.ArraySet get(int)>(i9);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>($r50);

        i8 = i8 + 1;

        goto label01;

     label02:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        $r18 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs>;

        $r17 = new com.android.server.job.controllers._$$Lambda$QuotaController$ecfLuekQaza_6Us0YWTdja9N_Mk;

        specialinvoke $r17.<com.android.server.job.controllers._$$Lambda$QuotaController$ecfLuekQaza_6Us0YWTdja9N_Mk: void <init>(com.android.server.job.controllers.QuotaController,java.util.function.Predicate,com.android.internal.util.IndentingPrintWriter)>(r0, r51, r1);

        virtualinvoke $r18.<android.util.SparseArrayMap: void forEach(java.util.function.Consumer)>($r17);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        i10 = 0;

     label03:
        $r19 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        $i2 = virtualinvoke $r19.<android.util.SparseArrayMap: int numMaps()>();

        if i10 >= $i2 goto label09;

        $r34 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        i11 = virtualinvoke $r34.<android.util.SparseArrayMap: int keyAt(int)>(i10);

        i12 = 0;

     label04:
        $r35 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        $i6 = virtualinvoke $r35.<android.util.SparseArrayMap: int numElementsForKey(int)>(i11);

        if i12 >= $i6 goto label08;

        $r36 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        r54 = virtualinvoke $r36.<android.util.SparseArrayMap: java.lang.String keyAt(int,int)>(i10, i12);

        $r37 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        $r38 = virtualinvoke $r37.<android.util.SparseArrayMap: java.lang.Object valueAt(int,int)>(i10, i12);

        $r39 = (com.android.server.job.controllers.QuotaController$Timer) $r38;

        virtualinvoke $r39.<com.android.server.job.controllers.QuotaController$Timer: void dump(com.android.internal.util.IndentingPrintWriter,java.util.function.Predicate)>(r1, r51);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        $r40 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTimingSessions>;

        $r41 = virtualinvoke $r40.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i11, r54);

        r55 = (java.util.List) $r41;

        if r55 == null goto label07;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Saved sessions:");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $i7 = interfaceinvoke r55.<java.util.List: int size()>();

        i13 = $i7 - 1;

     label05:
        if i13 < 0 goto label06;

        $r46 = interfaceinvoke r55.<java.util.List: java.lang.Object get(int)>(i13);

        $r47 = (com.android.server.job.controllers.QuotaController$TimingSession) $r46;

        virtualinvoke $r47.<com.android.server.job.controllers.QuotaController$TimingSession: void dump(com.android.internal.util.IndentingPrintWriter)>(r1);

        i13 = i13 + -1;

        goto label05;

     label06:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

     label07:
        i12 = i12 + 1;

        goto label04;

     label08:
        i10 = i10 + 1;

        goto label03;

     label09:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Cached execution stats:");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        i14 = 0;

     label10:
        $r21 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        $i3 = virtualinvoke $r21.<android.util.SparseArrayMap: int numMaps()>();

        if i14 >= $i3 goto label16;

        $r25 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        i15 = virtualinvoke $r25.<android.util.SparseArrayMap: int keyAt(int)>(i14);

        i16 = 0;

     label11:
        $r26 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        $i4 = virtualinvoke $r26.<android.util.SparseArrayMap: int numElementsForKey(int)>(i15);

        if i16 >= $i4 goto label15;

        $r27 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        r56 = virtualinvoke $r27.<android.util.SparseArrayMap: java.lang.String keyAt(int,int)>(i14, i16);

        $r28 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        $r29 = virtualinvoke $r28.<android.util.SparseArrayMap: java.lang.Object valueAt(int,int)>(i14, i16);

        r57 = (com.android.server.job.controllers.QuotaController$ExecutionStats[]) $r29;

        $r30 = staticinvoke <com.android.server.job.controllers.QuotaController: java.lang.String string(int,java.lang.String)>(i15, r56);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r30);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        i17 = 0;

     label12:
        $i5 = lengthof r57;

        if i17 >= $i5 goto label14;

        r58 = r57[i17];

        if r58 == null goto label13;

        $r33 = staticinvoke <com.android.server.job.controllers.JobStatus: java.lang.String bucketName(int)>(i17);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>($r33);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>(r58);

     label13:
        i17 = i17 + 1;

        goto label12;

     label14:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        i16 = i16 + 1;

        goto label11;

     label15:
        i14 = i14 + 1;

        goto label10;

     label16:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        $r23 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$InQuotaAlarmListener mInQuotaAlarmListener>;

        virtualinvoke $r23.<com.android.server.job.controllers.QuotaController$InQuotaAlarmListener: void dumpLocked(com.android.internal.util.IndentingPrintWriter)>(r1);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    long getAllowedTimePerPeriodMs()
    {
        com.android.server.job.controllers.QuotaController r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $l0 = r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimePerPeriodMs>;

        return $l0;
    }

    int[] getBucketMaxJobCounts()
    {
        com.android.server.job.controllers.QuotaController r0;
        int[] $r1;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: int[] mMaxBucketJobCounts>;

        return $r1;
    }

    int[] getBucketMaxSessionCounts()
    {
        com.android.server.job.controllers.QuotaController r0;
        int[] $r1;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: int[] mMaxBucketSessionCounts>;

        return $r1;
    }

    long[] getBucketWindowSizes()
    {
        com.android.server.job.controllers.QuotaController r0;
        long[] $r1;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: long[] mBucketPeriodsMs>;

        return $r1;
    }

    com.android.server.job.controllers.QuotaController$ExecutionStats getExecutionStatsLocked(int, java.lang.String, int)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0, i1;
        java.lang.String r1;
        com.android.server.job.controllers.QuotaController$ExecutionStats $r2;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r2 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$ExecutionStats getExecutionStatsLocked(int,java.lang.String,int,boolean)>(i0, r1, i1, 1);

        return $r2;
    }

    android.util.SparseBooleanArray getForegroundUids()
    {
        com.android.server.job.controllers.QuotaController r0;
        android.util.SparseBooleanArray $r1;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseBooleanArray mForegroundUids>;

        return $r1;
    }

    android.os.Handler getHandler()
    {
        com.android.server.job.controllers.QuotaController r0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: android.os.Handler mHandler>;

        return $r1;
    }

    long getInQuotaBufferMs()
    {
        com.android.server.job.controllers.QuotaController r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $l0 = r0.<com.android.server.job.controllers.QuotaController: long mQuotaBufferMs>;

        return $l0;
    }

    long getMaxExecutionTimeMs()
    {
        com.android.server.job.controllers.QuotaController r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $l0 = r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeMs>;

        return $l0;
    }

    int getMaxJobCountPerRateLimitingWindow()
    {
        com.android.server.job.controllers.QuotaController r0;
        int $i0;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $i0 = r0.<com.android.server.job.controllers.QuotaController: int mMaxJobCountPerRateLimitingWindow>;

        return $i0;
    }

    public long getMaxJobExecutionTimeMsLocked(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.JobStatus r1;
        com.android.server.job.controllers.QuotaController$ChargingTracker $r2;
        boolean $z0, $z1, $z2;
        int $i0;
        long $l1;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $r2 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$ChargingTracker mChargeTracker>;

        $z0 = virtualinvoke $r2.<com.android.server.job.controllers.QuotaController$ChargingTracker: boolean isCharging()>();

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isTopStartedJobLocked(com.android.server.job.controllers.JobStatus)>(r1);

        if $z1 != 0 goto label2;

        $i0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $z2 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isUidInForeground(int)>($i0);

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        $l1 = virtualinvoke r0.<com.android.server.job.controllers.QuotaController: long getRemainingExecutionTimeLocked(com.android.server.job.controllers.JobStatus)>(r1);

        return $l1;

     label2:
        return 600000L;
    }

    int getMaxSessionCountPerRateLimitingWindow()
    {
        com.android.server.job.controllers.QuotaController r0;
        int $i0;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $i0 = r0.<com.android.server.job.controllers.QuotaController: int mMaxSessionCountPerRateLimitingWindow>;

        return $i0;
    }

    com.android.server.job.controllers.QuotaController$QcConstants getQcConstants()
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.QuotaController$QcConstants $r1;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$QcConstants mQcConstants>;

        return $r1;
    }

    long getRateLimitingWindowMs()
    {
        com.android.server.job.controllers.QuotaController r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $l0 = r0.<com.android.server.job.controllers.QuotaController: long mRateLimitingWindowMs>;

        return $l0;
    }

    long getRemainingExecutionTimeLocked(int, java.lang.String)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0, $i2;
        java.lang.String r1;
        java.time.Clock $r2;
        long $l1, $l3;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        $l1 = virtualinvoke $r2.<java.time.Clock: long millis()>();

        $i2 = staticinvoke <com.android.server.job.JobSchedulerService: int standbyBucketForPackage(java.lang.String,int,long)>(r1, i0, $l1);

        $l3 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: long getRemainingExecutionTimeLocked(int,java.lang.String,int)>(i0, r1, $i2);

        return $l3;
    }

    long getRemainingExecutionTimeLocked(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.JobStatus r1;
        int $i0, $i1;
        java.lang.String $r2;
        long $l2;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $i0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUserId()>();

        $r2 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        $i1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getEffectiveStandbyBucket()>();

        $l2 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: long getRemainingExecutionTimeLocked(int,java.lang.String,int)>($i0, $r2, $i1);

        return $l2;
    }

    long getTimeUntilQuotaConsumedLocked(int, java.lang.String)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0, i2, $i9;
        long l1, l3, l4, l5, l6, l7, $l8, $l10, $l11, $l12, $l13, $l15, $l16, $l17, $l18, $l19, $l20;
        java.util.List r1;
        java.time.Clock $r2;
        android.util.SparseArrayMap $r3;
        java.lang.Object $r4;
        byte $b14;
        java.lang.String r5;
        com.android.server.job.controllers.QuotaController$ExecutionStats r6;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        $r2 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l1 = virtualinvoke $r2.<java.time.Clock: long millis()>();

        i2 = staticinvoke <com.android.server.job.JobSchedulerService: int standbyBucketForPackage(java.lang.String,int,long)>(r5, i0, l1);

        if i2 != 4 goto label1;

        return 0L;

     label1:
        $r3 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTimingSessions>;

        $r4 = virtualinvoke $r3.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i0, r5);

        r1 = (java.util.List) $r4;

        if r1 == null goto label4;

        $i9 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i9 != 0 goto label2;

        goto label4;

     label2:
        r6 = virtualinvoke r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$ExecutionStats getExecutionStatsLocked(int,java.lang.String,int)>(i0, r5, i2);

        l3 = r6.<com.android.server.job.controllers.QuotaController$ExecutionStats: long windowSizeMs>;

        l4 = l1 - 86400000L;

        l5 = r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimePerPeriodMs>;

        l6 = r6.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInWindowMs>;

        $l11 = r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeMs>;

        $l10 = r6.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs>;

        l7 = $l11 - $l10;

        $l13 = r6.<com.android.server.job.controllers.QuotaController$ExecutionStats: long windowSizeMs>;

        $l12 = r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimePerPeriodMs>;

        $b14 = $l13 cmp $l12;

        if $b14 != 0 goto label3;

        $l20 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: long calculateTimeUntilQuotaConsumedLocked(java.util.List,long,long)>(r1, l4, l7);

        return $l20;

     label3:
        $l15 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: long calculateTimeUntilQuotaConsumedLocked(java.util.List,long,long)>(r1, l4, l7);

        $l17 = l1 - l3;

        $l16 = l5 - l6;

        $l18 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: long calculateTimeUntilQuotaConsumedLocked(java.util.List,long,long)>(r1, $l17, $l16);

        $l19 = staticinvoke <java.lang.Math: long min(long,long)>($l15, $l18);

        return $l19;

     label4:
        $l8 = r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimePerPeriodMs>;

        return $l8;
    }

    long getTimingSessionCoalescingDurationMs()
    {
        com.android.server.job.controllers.QuotaController r0;
        long $l0;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $l0 = r0.<com.android.server.job.controllers.QuotaController: long mTimingSessionCoalescingDurationMs>;

        return $l0;
    }

    java.util.List getTimingSessions(int, java.lang.String)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0;
        java.lang.String r1;
        android.util.SparseArrayMap $r2;
        java.lang.Object $r3;
        java.util.List $r4;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTimingSessions>;

        $r3 = virtualinvoke $r2.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i0, r1);

        $r4 = (java.util.List) $r3;

        return $r4;
    }

    void incrementJobCount(int, java.lang.String, int)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0, $i4, $i5, $i8, i9, i10, $i11;
        long l1, $l2, $l6, $l7;
        java.time.Clock $r1;
        android.util.SparseArrayMap $r2, $r6;
        java.lang.Object $r3;
        byte $b3;
        com.android.server.job.controllers.QuotaController$ExecutionStats $r4, r10, r11;
        long[] $r5;
        java.lang.String r7;
        com.android.server.job.controllers.QuotaController$ExecutionStats[] r8, r9;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i9 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r1 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l1 = virtualinvoke $r1.<java.time.Clock: long millis()>();

        $r2 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        $r3 = virtualinvoke $r2.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i9, r7);

        r8 = (com.android.server.job.controllers.QuotaController$ExecutionStats[]) $r3;

        r9 = r8;

        if r8 != null goto label1;

        $r5 = r0.<com.android.server.job.controllers.QuotaController: long[] mBucketPeriodsMs>;

        $i8 = lengthof $r5;

        r9 = newarray (com.android.server.job.controllers.QuotaController$ExecutionStats)[$i8];

        $r6 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        virtualinvoke $r6.<android.util.SparseArrayMap: void add(int,java.lang.String,java.lang.Object)>(i9, r7, r9);

     label1:
        i10 = 0;

     label2:
        $i11 = lengthof r9;

        if i10 >= $i11 goto label5;

        r10 = r9[i10];

        r11 = r10;

        if r10 != null goto label3;

        $r4 = new com.android.server.job.controllers.QuotaController$ExecutionStats;

        specialinvoke $r4.<com.android.server.job.controllers.QuotaController$ExecutionStats: void <init>()>();

        r11 = $r4;

        r9[i10] = $r4;

     label3:
        $l2 = r11.<com.android.server.job.controllers.QuotaController$ExecutionStats: long jobRateLimitExpirationTimeElapsed>;

        $b3 = $l2 cmp l1;

        if $b3 > 0 goto label4;

        $l6 = r0.<com.android.server.job.controllers.QuotaController: long mRateLimitingWindowMs>;

        $l7 = $l6 + l1;

        r11.<com.android.server.job.controllers.QuotaController$ExecutionStats: long jobRateLimitExpirationTimeElapsed> = $l7;

        r11.<com.android.server.job.controllers.QuotaController$ExecutionStats: int jobCountInRateLimitingWindow> = 0;

     label4:
        $i4 = r11.<com.android.server.job.controllers.QuotaController$ExecutionStats: int jobCountInRateLimitingWindow>;

        $i5 = $i4 + i0;

        r11.<com.android.server.job.controllers.QuotaController$ExecutionStats: int jobCountInRateLimitingWindow> = $i5;

        i10 = i10 + 1;

        goto label2;

     label5:
        return;
    }

    void invalidateAllExecutionStatsLocked()
    {
        com.android.server.job.controllers.QuotaController r0;
        long l0;
        java.time.Clock $r1;
        com.android.server.job.controllers._$$Lambda$QuotaController$nhAzHg7QTBpf8pouN_v8m2BZNzI $r2;
        android.util.SparseArrayMap $r3;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $r1 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l0 = virtualinvoke $r1.<java.time.Clock: long millis()>();

        $r3 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        $r2 = new com.android.server.job.controllers._$$Lambda$QuotaController$nhAzHg7QTBpf8pouN_v8m2BZNzI;

        specialinvoke $r2.<com.android.server.job.controllers._$$Lambda$QuotaController$nhAzHg7QTBpf8pouN_v8m2BZNzI: void <init>(long)>(l0);

        virtualinvoke $r3.<android.util.SparseArrayMap: void forEach(java.util.function.Consumer)>($r2);

        return;
    }

    void invalidateAllExecutionStatsLocked(int, java.lang.String)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.QuotaController$ExecutionStats[] r1;
        long l0;
        android.util.SparseArrayMap $r2;
        java.lang.Object $r3;
        java.time.Clock $r4;
        int $i1, i2, i3;
        java.lang.String r5;
        com.android.server.job.controllers.QuotaController$ExecutionStats r6;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i2 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        $r3 = virtualinvoke $r2.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i2, r5);

        r1 = (com.android.server.job.controllers.QuotaController$ExecutionStats[]) $r3;

        if r1 == null goto label3;

        $r4 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l0 = virtualinvoke $r4.<java.time.Clock: long millis()>();

        i3 = 0;

     label1:
        $i1 = lengthof r1;

        if i3 >= $i1 goto label3;

        r6 = r1[i3];

        if r6 == null goto label2;

        r6.<com.android.server.job.controllers.QuotaController$ExecutionStats: long expirationTimeElapsed> = l0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }

    boolean isWithinQuotaLocked(int, java.lang.String, int)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0, i1;
        com.android.server.job.controllers.QuotaController$ChargingTracker $r1;
        boolean $z0, $z1, $z2, z3;
        long $l2;
        byte $b3;
        java.lang.String r2;
        com.android.server.job.controllers.QuotaController$ExecutionStats r3;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        z3 = 0;

        if i1 != 4 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$ChargingTracker mChargeTracker>;

        $z0 = virtualinvoke $r1.<com.android.server.job.controllers.QuotaController$ChargingTracker: boolean isCharging()>();

        if $z0 == 0 goto label2;

        if i1 == 5 goto label2;

        return 1;

     label2:
        r3 = virtualinvoke r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$ExecutionStats getExecutionStatsLocked(int,java.lang.String,int)>(i0, r2, i1);

        $l2 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: long getRemainingExecutionTimeLocked(com.android.server.job.controllers.QuotaController$ExecutionStats)>(r3);

        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label3;

        $z1 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isUnderJobCountQuotaLocked(com.android.server.job.controllers.QuotaController$ExecutionStats,int)>(r3, i1);

        if $z1 == 0 goto label3;

        $z2 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isUnderSessionCountQuotaLocked(com.android.server.job.controllers.QuotaController$ExecutionStats,int)>(r3, i1);

        if $z2 == 0 goto label3;

        z3 = 1;

        goto label3;

     label3:
        return z3;
    }

    boolean isWithinQuotaLocked(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.JobStatus r1;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2, z3;
        java.lang.String $r2;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        i0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getEffectiveStandbyBucket()>();

        $z0 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isTopStartedJobLocked(com.android.server.job.controllers.JobStatus)>(r1);

        if $z0 != 0 goto label2;

        $i1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $z1 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isUidInForeground(int)>($i1);

        if $z1 != 0 goto label2;

        $i2 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUserId()>();

        $r2 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        $z2 = virtualinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isWithinQuotaLocked(int,java.lang.String,int)>($i2, $r2, i0);

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    public void lambda$dumpControllerStateLocked$1$QuotaController(java.util.function.Predicate, com.android.internal.util.IndentingPrintWriter, android.util.ArraySet)
    {
        com.android.server.job.controllers.QuotaController r0;
        java.util.function.Predicate r1;
        com.android.internal.util.IndentingPrintWriter r2;
        android.util.ArraySet r3, $r6;
        com.android.server.job.controllers.JobStatus r4;
        int $i0, $i1, $i2, i4;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;
        java.lang.String $r8;
        long $l3;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: java.util.function.Predicate;

        r2 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        r3 := @parameter2: android.util.ArraySet;

        i4 = 0;

     label1:
        $i0 = virtualinvoke r3.<android.util.ArraySet: int size()>();

        if i4 >= $i0 goto label7;

        $r5 = virtualinvoke r3.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        r4 = (com.android.server.job.controllers.JobStatus) $r5;

        $z0 = interfaceinvoke r1.<java.util.function.Predicate: boolean test(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

        goto label6;

     label2:
        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("#");

        virtualinvoke r4.<com.android.server.job.controllers.JobStatus: void printUniqueId(java.io.PrintWriter)>(r2);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(" from ");

        $i1 = virtualinvoke r4.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r2, $i1);

        $r6 = r0.<com.android.server.job.controllers.QuotaController: android.util.ArraySet mTopStartedJobs>;

        $z1 = virtualinvoke $r6.<android.util.ArraySet: boolean contains(java.lang.Object)>(r4);

        if $z1 == 0 goto label3;

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(" (TOP)");

     label3:
        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $i2 = virtualinvoke r4.<com.android.server.job.controllers.JobStatus: int getEffectiveStandbyBucket()>();

        $r8 = staticinvoke <com.android.server.job.controllers.JobStatus: java.lang.String bucketName(int)>($i2);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(", ");

        $z2 = virtualinvoke r4.<com.android.server.job.controllers.JobStatus: boolean isConstraintSatisfied(int)>(16777216);

        if $z2 == 0 goto label4;

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("within quota");

        goto label5;

     label4:
        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("not within quota");

     label5:
        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(", ");

        $l3 = virtualinvoke r0.<com.android.server.job.controllers.QuotaController: long getRemainingExecutionTimeLocked(com.android.server.job.controllers.JobStatus)>(r4);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(long)>($l3);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("ms remaining in quota");

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void println()>();

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        return;
    }

    public void lambda$dumpControllerStateLocked$2$QuotaController(java.util.function.Predicate, android.util.proto.ProtoOutputStream, android.util.ArraySet)
    {
        com.android.server.job.controllers.QuotaController r0;
        java.util.function.Predicate r1;
        android.util.proto.ProtoOutputStream r2;
        android.util.ArraySet r3, $r6;
        com.android.server.job.controllers.JobStatus r4;
        long l0, $l4;
        int $i1, $i2, $i3, i5;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: java.util.function.Predicate;

        r2 := @parameter1: android.util.proto.ProtoOutputStream;

        r3 := @parameter2: android.util.ArraySet;

        i5 = 0;

     label1:
        $i1 = virtualinvoke r3.<android.util.ArraySet: int size()>();

        if i5 >= $i1 goto label4;

        $r5 = virtualinvoke r3.<android.util.ArraySet: java.lang.Object valueAt(int)>(i5);

        r4 = (com.android.server.job.controllers.JobStatus) $r5;

        $z0 = interfaceinvoke r1.<java.util.function.Predicate: boolean test(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        l0 = virtualinvoke r2.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895812L);

        virtualinvoke r4.<com.android.server.job.controllers.JobStatus: void writeToShortProto(android.util.proto.ProtoOutputStream,long)>(r2, 1146756268033L);

        $i2 = virtualinvoke r4.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        virtualinvoke r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i2);

        $i3 = virtualinvoke r4.<com.android.server.job.controllers.JobStatus: int getEffectiveStandbyBucket()>();

        virtualinvoke r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169923L, $i3);

        $r6 = r0.<com.android.server.job.controllers.QuotaController: android.util.ArraySet mTopStartedJobs>;

        $z1 = virtualinvoke $r6.<android.util.ArraySet: boolean contains(java.lang.Object)>(r4);

        virtualinvoke r2.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366148L, $z1);

        $z2 = virtualinvoke r4.<com.android.server.job.controllers.JobStatus: boolean isConstraintSatisfied(int)>(16777216);

        virtualinvoke r2.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366149L, $z2);

        $l4 = virtualinvoke r0.<com.android.server.job.controllers.QuotaController: long getRemainingExecutionTimeLocked(com.android.server.job.controllers.JobStatus)>(r4);

        virtualinvoke r2.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529670L, $l4);

        virtualinvoke r2.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        return;
    }

    void maybeScheduleCleanupAlarmLocked()
    {
        com.android.server.job.controllers.QuotaController r0;
        long l0, $l1, $l2, $l5, $l6, $l8, $l11, $l12, $l13, $l14, l16, l17;
        java.time.Clock $r1, $r17;
        byte $b3, $b4, $b7;
        com.android.server.job.controllers.QuotaController$EarliestEndTimeFunctor $r2, $r3, $r5;
        android.util.SparseArrayMap $r4;
        android.os.Handler $r6;
        android.app.AlarmManager$OnAlarmListener $r7;
        android.app.AlarmManager $r8;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r9, $r13;
        java.lang.String $r12, $r20;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $l1 = r0.<com.android.server.job.controllers.QuotaController: long mNextCleanupTimeElapsed>;

        $r1 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        $l2 = virtualinvoke $r1.<java.time.Clock: long millis()>();

        $b3 = $l1 cmp $l2;

        if $b3 <= 0 goto label2;

        $z2 = <com.android.server.job.controllers.QuotaController: boolean DEBUG>;

        if $z2 == 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not scheduling cleanup since there\'s already one at ");

        $l11 = r0.<com.android.server.job.controllers.QuotaController: long mNextCleanupTimeElapsed>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $l12 = r0.<com.android.server.job.controllers.QuotaController: long mNextCleanupTimeElapsed>;

        $r17 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        $l13 = virtualinvoke $r17.<java.time.Clock: long millis()>();

        $l14 = $l12 - $l13;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms)");

        $r20 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("JobScheduler.Quota", $r20);

     label1:
        return;

     label2:
        $r2 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$EarliestEndTimeFunctor mEarliestEndTimeFunctor>;

        virtualinvoke $r2.<com.android.server.job.controllers.QuotaController$EarliestEndTimeFunctor: void reset()>();

        $r4 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTimingSessions>;

        $r3 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$EarliestEndTimeFunctor mEarliestEndTimeFunctor>;

        virtualinvoke $r4.<android.util.SparseArrayMap: void forEach(java.util.function.Consumer)>($r3);

        $r5 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$EarliestEndTimeFunctor mEarliestEndTimeFunctor>;

        l16 = $r5.<com.android.server.job.controllers.QuotaController$EarliestEndTimeFunctor: long earliestEndElapsed>;

        $b4 = l16 cmp 9223372036854775807L;

        if $b4 != 0 goto label4;

        $z1 = <com.android.server.job.controllers.QuotaController: boolean DEBUG>;

        if $z1 == 0 goto label3;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("JobScheduler.Quota", "Didn\'t find a time to schedule cleanup");

     label3:
        return;

     label4:
        l0 = 86400000L + l16;

        l17 = l0;

        $l5 = r0.<com.android.server.job.controllers.QuotaController: long mNextCleanupTimeElapsed>;

        $l6 = l0 - $l5;

        $b7 = $l6 cmp 600000L;

        if $b7 > 0 goto label5;

        l17 = l0 + 600000L;

     label5:
        r0.<com.android.server.job.controllers.QuotaController: long mNextCleanupTimeElapsed> = l17;

        $r8 = r0.<com.android.server.job.controllers.QuotaController: android.app.AlarmManager mAlarmManager>;

        $r7 = r0.<com.android.server.job.controllers.QuotaController: android.app.AlarmManager$OnAlarmListener mSessionCleanupAlarmListener>;

        $r6 = r0.<com.android.server.job.controllers.QuotaController: android.os.Handler mHandler>;

        virtualinvoke $r8.<android.app.AlarmManager: void set(int,long,java.lang.String,android.app.AlarmManager$OnAlarmListener,android.os.Handler)>(3, l17, "*job.cleanup*", $r7, $r6);

        $z0 = <com.android.server.job.controllers.QuotaController: boolean DEBUG>;

        if $z0 == 0 goto label6;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduled next cleanup for ");

        $l8 = r0.<com.android.server.job.controllers.QuotaController: long mNextCleanupTimeElapsed>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("JobScheduler.Quota", $r12);

     label6:
        return;
    }

    void maybeScheduleStartAlarmLocked(int, java.lang.String, int)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0, i1, $i7, $i8, $i10, $i11;
        java.lang.String r1, $r13, $r23, r24;
        boolean z0, z1, $z2;
        long $l2, $l3, $l5, $l9, $l12, $l13, $l14, $l16, l18, l19, l20, l21, $l22, l24;
        byte $b4, $b15, $b23;
        com.android.server.job.controllers.QuotaController$InQuotaAlarmListener $r2, $r14;
        java.time.Clock $r3, $r27;
        java.lang.StringBuilder $r4, $r17;
        android.os.Handler $r15;
        android.os.Message $r16;
        com.android.server.job.controllers.QuotaController$ExecutionStats r25;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        if i1 != 4 goto label1;

        return;

     label1:
        r24 = staticinvoke <com.android.server.job.controllers.QuotaController: java.lang.String string(int,java.lang.String)>(i0, r1);

        r25 = virtualinvoke r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$ExecutionStats getExecutionStatsLocked(int,java.lang.String,int)>(i0, r1, i1);

        z0 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isUnderJobCountQuotaLocked(com.android.server.job.controllers.QuotaController$ExecutionStats,int)>(r25, i1);

        z1 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isUnderSessionCountQuotaLocked(com.android.server.job.controllers.QuotaController$ExecutionStats,int)>(r25, i1);

        $l3 = r25.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInWindowMs>;

        $l2 = r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimePerPeriodMs>;

        $b4 = $l3 cmp $l2;

        if $b4 >= 0 goto label3;

        $l14 = r25.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs>;

        $l13 = r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeMs>;

        $b15 = $l14 cmp $l13;

        if $b15 >= 0 goto label3;

        if z0 == 0 goto label3;

        if z1 == 0 goto label3;

        $z2 = <com.android.server.job.controllers.QuotaController: boolean DEBUG>;

        if $z2 == 0 goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maybeScheduleStartAlarmLocked called for ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" even though it already has ");

        $l16 = specialinvoke r0.<com.android.server.job.controllers.QuotaController: long getRemainingExecutionTimeLocked(int,java.lang.String,int)>(i0, r1, i1);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms in its quota.");

        $r23 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("JobScheduler.Quota", $r23);

     label2:
        $r14 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$InQuotaAlarmListener mInQuotaAlarmListener>;

        virtualinvoke $r14.<com.android.server.job.controllers.QuotaController$InQuotaAlarmListener: void removeAlarmLocked(int,java.lang.String)>(i0, r1);

        $r15 = r0.<com.android.server.job.controllers.QuotaController: android.os.Handler mHandler>;

        $r16 = virtualinvoke $r15.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(2, i0, 0, r1);

        virtualinvoke $r16.<android.os.Message: void sendToTarget()>();

        return;

     label3:
        l18 = r25.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed>;

        l19 = l18;

        if z0 != 0 goto label4;

        l19 = l18;

        $i11 = r25.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInWindow>;

        $i10 = r25.<com.android.server.job.controllers.QuotaController$ExecutionStats: int jobCountLimit>;

        if $i11 >= $i10 goto label4;

        $l12 = r25.<com.android.server.job.controllers.QuotaController$ExecutionStats: long jobRateLimitExpirationTimeElapsed>;

        l19 = staticinvoke <java.lang.Math: long max(long,long)>(l18, $l12);

     label4:
        l20 = l19;

        if z1 != 0 goto label5;

        l20 = l19;

        $i8 = r25.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountInWindow>;

        $i7 = r25.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountLimit>;

        if $i8 >= $i7 goto label5;

        $l9 = r25.<com.android.server.job.controllers.QuotaController$ExecutionStats: long sessionRateLimitExpirationTimeElapsed>;

        l20 = staticinvoke <java.lang.Math: long max(long,long)>(l19, $l9);

     label5:
        l21 = l20;

        $r27 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        $l22 = virtualinvoke $r27.<java.time.Clock: long millis()>();

        $b23 = l20 cmp $l22;

        if $b23 > 0 goto label6;

        $r3 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l24 = virtualinvoke $r3.<java.time.Clock: long millis()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("In quota time is ");

        $l5 = l24 - l20;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms old. Now=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l24);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", inQuotaTime=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l20);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("JobScheduler.Quota", $r13);

        l21 = l24 + 300000L;

     label6:
        $r2 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$InQuotaAlarmListener mInQuotaAlarmListener>;

        virtualinvoke $r2.<com.android.server.job.controllers.QuotaController$InQuotaAlarmListener: void addAlarmLocked(int,java.lang.String,long)>(i0, r1, l21);

        return;
    }

    public void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus, com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.JobStatus r1, r8;
        int i0, $i1;
        java.lang.String r2;
        android.util.ArraySet r3, $r6, r9;
        boolean z0;
        android.util.SparseArrayMap $r4, $r7;
        java.lang.Object $r5;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        r8 := @parameter1: com.android.server.job.controllers.JobStatus;

        i0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUserId()>();

        r2 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        $r4 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs>;

        $r5 = virtualinvoke $r4.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i0, r2);

        r3 = (android.util.ArraySet) $r5;

        r9 = r3;

        if r3 != null goto label1;

        $r6 = new android.util.ArraySet;

        specialinvoke $r6.<android.util.ArraySet: void <init>()>();

        r9 = $r6;

        $r7 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs>;

        virtualinvoke $r7.<android.util.SparseArrayMap: void add(int,java.lang.String,java.lang.Object)>(i0, r2, $r6);

     label1:
        virtualinvoke r9.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<com.android.server.job.controllers.JobStatus: void setTrackingController(int)>(64);

        z0 = virtualinvoke r0.<com.android.server.job.controllers.QuotaController: boolean isWithinQuotaLocked(com.android.server.job.controllers.JobStatus)>(r1);

        specialinvoke r0.<com.android.server.job.controllers.QuotaController: boolean setConstraintSatisfied(com.android.server.job.controllers.JobStatus,boolean)>(r1, z0);

        if z0 != 0 goto label2;

        $i1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getEffectiveStandbyBucket()>();

        virtualinvoke r0.<com.android.server.job.controllers.QuotaController: void maybeScheduleStartAlarmLocked(int,java.lang.String,int)>(i0, r2, $i1);

     label2:
        return;
    }

    public void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus, com.android.server.job.controllers.JobStatus, boolean)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.JobStatus r1, r9;
        boolean z0, $z1;
        android.util.SparseArrayMap $r2, $r5;
        int $i0, $i1;
        java.lang.String $r3, $r6;
        java.lang.Object $r4, $r7;
        android.util.ArraySet $r8, r11;
        com.android.server.job.controllers.QuotaController$Timer r10;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        r9 := @parameter1: com.android.server.job.controllers.JobStatus;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean clearTrackingController(int)>(64);

        if $z1 == 0 goto label3;

        $r2 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        $i0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUserId()>();

        $r3 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        $r4 = virtualinvoke $r2.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>($i0, $r3);

        r10 = (com.android.server.job.controllers.QuotaController$Timer) $r4;

        if r10 == null goto label1;

        virtualinvoke r10.<com.android.server.job.controllers.QuotaController$Timer: void stopTrackingJob(com.android.server.job.controllers.JobStatus)>(r1);

     label1:
        $r5 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs>;

        $i1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUserId()>();

        $r6 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        $r7 = virtualinvoke $r5.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>($i1, $r6);

        r11 = (android.util.ArraySet) $r7;

        if r11 == null goto label2;

        virtualinvoke r11.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

     label2:
        $r8 = r0.<com.android.server.job.controllers.QuotaController: android.util.ArraySet mTopStartedJobs>;

        virtualinvoke $r8.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

     label3:
        return;
    }

    public void onAppRemovedLocked(java.lang.String, int)
    {
        com.android.server.job.controllers.QuotaController r0;
        java.lang.String r1;
        int i0, $i1;
        android.util.SparseBooleanArray $r2;
        android.util.SparseSetArray $r3;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("JobScheduler.Quota", "Told app removed but given null package name.");

        return;

     label1:
        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke r0.<com.android.server.job.controllers.QuotaController: void clearAppStats(int,java.lang.String)>($i1, r1);

        $r2 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseBooleanArray mForegroundUids>;

        virtualinvoke $r2.<android.util.SparseBooleanArray: void delete(int)>(i0);

        $r3 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseSetArray mUidToPackageCache>;

        virtualinvoke $r3.<android.util.SparseSetArray: void remove(int)>(i0);

        return;
    }

    public void onSystemServicesReady()
    {
        com.android.server.job.controllers.QuotaController r0;
        android.content.Context $r1;
        com.android.server.job.controllers.QuotaController$QcConstants $r2;
        android.content.ContentResolver $r3;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        $r2 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$QcConstants mQcConstants>;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <com.android.server.job.controllers.QuotaController$QcConstants: void access$500(com.android.server.job.controllers.QuotaController$QcConstants,android.content.ContentResolver)>($r2, $r3);

        return;
    }

    public void onUserRemovedLocked(int)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0;
        android.util.SparseArrayMap $r1, $r2, $r3, $r5;
        com.android.server.job.controllers.QuotaController$InQuotaAlarmListener $r4;
        android.util.SparseSetArray $r6;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTrackedJobs>;

        virtualinvoke $r1.<android.util.SparseArrayMap: void delete(int)>(i0);

        $r2 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        virtualinvoke $r2.<android.util.SparseArrayMap: void delete(int)>(i0);

        $r3 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTimingSessions>;

        virtualinvoke $r3.<android.util.SparseArrayMap: void delete(int)>(i0);

        $r4 = r0.<com.android.server.job.controllers.QuotaController: com.android.server.job.controllers.QuotaController$InQuotaAlarmListener mInQuotaAlarmListener>;

        virtualinvoke $r4.<com.android.server.job.controllers.QuotaController$InQuotaAlarmListener: void removeAlarmsLocked(int)>(i0);

        $r5 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mExecutionStatsCache>;

        virtualinvoke $r5.<android.util.SparseArrayMap: void delete(int)>(i0);

        $r6 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseSetArray mUidToPackageCache>;

        virtualinvoke $r6.<android.util.SparseSetArray: void clear()>();

        return;
    }

    public void prepareForExecutionLocked(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.JobStatus r1;
        int i0, i1, $i2;
        java.lang.String r2, $r11, $r14, $r17, $r19;
        com.android.server.job.controllers.QuotaController$Timer r3, $r7, r22;
        boolean $z0, $z1;
        android.app.ActivityManagerInternal $r4;
        android.util.SparseArrayMap $r5, $r8;
        java.lang.Object $r6;
        android.util.ArraySet $r9;
        java.lang.StringBuilder $r10, $r15;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $z0 = <com.android.server.job.controllers.QuotaController: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prepping for ");

        $r17 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String toShortString()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("JobScheduler.Quota", $r19);

     label1:
        i0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        $r4 = r0.<com.android.server.job.controllers.QuotaController: android.app.ActivityManagerInternal mActivityManagerInternal>;

        $i2 = virtualinvoke $r4.<android.app.ActivityManagerInternal: int getUidProcessState(int)>(i0);

        if $i2 > 2 goto label3;

        $z1 = <com.android.server.job.controllers.QuotaController: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String toShortString()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is top started job");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("JobScheduler.Quota", $r14);

     label2:
        $r9 = r0.<com.android.server.job.controllers.QuotaController: android.util.ArraySet mTopStartedJobs>;

        virtualinvoke $r9.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        return;

     label3:
        i1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: int getSourceUserId()>();

        r2 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String getSourcePackageName()>();

        $r5 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i1, r2);

        r3 = (com.android.server.job.controllers.QuotaController$Timer) $r6;

        r22 = r3;

        if r3 != null goto label4;

        $r7 = new com.android.server.job.controllers.QuotaController$Timer;

        specialinvoke $r7.<com.android.server.job.controllers.QuotaController$Timer: void <init>(com.android.server.job.controllers.QuotaController,int,int,java.lang.String)>(r0, i0, i1, r2);

        r22 = $r7;

        $r8 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        virtualinvoke $r8.<android.util.SparseArrayMap: void add(int,java.lang.String,java.lang.Object)>(i1, r2, $r7);

     label4:
        virtualinvoke r22.<com.android.server.job.controllers.QuotaController$Timer: void startTrackingJobLocked(com.android.server.job.controllers.JobStatus)>(r1);

        return;
    }

    void saveTimingSession(int, java.lang.String, com.android.server.job.controllers.QuotaController$TimingSession)
    {
        com.android.server.job.controllers.QuotaController r0;
        int i0;
        com.android.server.job.controllers.QuotaController$TimingSession r1;
        java.lang.Object r2, $r5, r9;
        java.util.List r3, r12;
        android.util.SparseArrayMap $r4, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        java.util.ArrayList r11;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: com.android.server.job.controllers.QuotaController$TimingSession;

        r2 = r0.<com.android.server.job.controllers.QuotaController: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTimingSessions>;

        $r5 = virtualinvoke $r4.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i0, r8);

        r3 = (java.util.List) $r5;

     label2:
        r9 = r3;

        if r3 != null goto label5;

     label3:
        r11 = new java.util.ArrayList;

        r9 = r11;

        specialinvoke r11.<java.util.ArrayList: void <init>()>();

     label4:
        $r6 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTimingSessions>;

        virtualinvoke $r6.<android.util.SparseArrayMap: void add(int,java.lang.String,java.lang.Object)>(i0, r8, r11);

     label5:
        r12 = (java.util.List) r9;

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>(r1);

        virtualinvoke r0.<com.android.server.job.controllers.QuotaController: void invalidateAllExecutionStatsLocked(int,java.lang.String)>(i0, r8);

        virtualinvoke r0.<com.android.server.job.controllers.QuotaController: void maybeScheduleCleanupAlarmLocked()>();

        exitmonitor r2;

     label6:
        return;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void updateExecutionStatsLocked(int, java.lang.String, com.android.server.job.controllers.QuotaController$ExecutionStats)
    {
        com.android.server.job.controllers.QuotaController r0;
        com.android.server.job.controllers.QuotaController$ExecutionStats r1;
        long l0, l1, l2, $l6, $l8, $l9, $l11, $l13, $l14, $l15, $l16, $l20, $l21, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l34, $l38, $l39, $l40, $l41, $l43, $l44, $l45, $l46, $l47, $l48, $l49, $l50, $l51, $l53, $l54, $l55, $l56, $l60, $l61, $l66, $l67, $l68, $l69, $l70, $l72, $l73, $l74, $l75, $l77, $l78, $l79, $l80, $l81, $l82, $l83, $l84, $l85, $l86, $l87, $l88, $l89, $l90, $l91, $l92, $l93, $l95, $l96, $l100, $l101, $l102, $l103, $l104, $l105, $l106, $l107, $l108, $l109, $l110, $l111, $l112, $l113, $l114, $l117, l118, l122, l123, $l124;
        java.util.List r2;
        int i3, $i4, $i5, $i7, $i17, $i18, $i19, $i35, $i36, $i37, $i57, $i58, $i59, $i63, $i64, $i65, $i71, $i98, $i99, $i115, i116, i119, i120, i121, i126;
        java.lang.Object $r3, $r4, $r8, $r12;
        byte $b10, $b12, $b22, $b42, $b52, $b62, $b76, $b94, $b97, $b125;
        com.android.server.job.controllers.QuotaController$TimingSession $r5, r14;
        boolean $z0;
        java.lang.String r6;
        android.util.SparseArrayMap $r7, $r11;
        com.android.server.job.controllers.QuotaController$Timer r9;
        java.time.Clock $r10;

        r0 := @this: com.android.server.job.controllers.QuotaController;

        i116 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        r1 := @parameter2: com.android.server.job.controllers.QuotaController$ExecutionStats;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInWindowMs> = 0L;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInWindow> = 0;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs> = 0L;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInMaxPeriod> = 0;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountInWindow> = 0;

        $i4 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int jobCountLimit>;

        if $i4 == 0 goto label02;

        $i115 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountLimit>;

        if $i115 != 0 goto label01;

        goto label02;

     label01:
        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed> = 0L;

        goto label03;

     label02:
        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed> = 9223372036854775807L;

     label03:
        $r7 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mPkgTimers>;

        $r8 = virtualinvoke $r7.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i116, r6);

        r9 = (com.android.server.job.controllers.QuotaController$Timer) $r8;

        $r10 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l0 = virtualinvoke $r10.<java.time.Clock: long millis()>();

        $l117 = l0 + 86400000L;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long expirationTimeElapsed> = $l117;

        if r9 == null goto label06;

        $z0 = virtualinvoke r9.<com.android.server.job.controllers.QuotaController$Timer: boolean isActive()>();

        if $z0 == 0 goto label06;

        l118 = virtualinvoke r9.<com.android.server.job.controllers.QuotaController$Timer: long getCurrentDuration(long)>(l0);

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs> = l118;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInWindowMs> = l118;

        i119 = virtualinvoke r9.<com.android.server.job.controllers.QuotaController$Timer: int getBgJobCount()>();

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInMaxPeriod> = i119;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInWindow> = i119;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long expirationTimeElapsed> = l0;

        $l93 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInWindowMs>;

        $l92 = r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimeIntoQuotaMs>;

        $b94 = $l93 cmp $l92;

        if $b94 < 0 goto label04;

        $l113 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed>;

        $l109 = r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimeIntoQuotaMs>;

        $l111 = l0 - $l109;

        $l110 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long windowSizeMs>;

        $l112 = $l111 + $l110;

        $l114 = staticinvoke <java.lang.Math: long max(long,long)>($l113, $l112);

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed> = $l114;

     label04:
        $l96 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs>;

        $l95 = r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeIntoQuotaMs>;

        $b97 = $l96 cmp $l95;

        if $b97 < 0 goto label05;

        $l107 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed>;

        $l104 = r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeIntoQuotaMs>;

        $l105 = l0 - $l104;

        $l106 = $l105 + 86400000L;

        $l108 = staticinvoke <java.lang.Math: long max(long,long)>($l107, $l106);

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed> = $l108;

     label05:
        $i99 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInWindow>;

        $i98 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int jobCountLimit>;

        if $i99 < $i98 goto label06;

        $l102 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed>;

        $l100 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long windowSizeMs>;

        $l101 = $l100 + l0;

        $l103 = staticinvoke <java.lang.Math: long max(long,long)>($l102, $l101);

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed> = $l103;

     label06:
        $r11 = r0.<com.android.server.job.controllers.QuotaController: android.util.SparseArrayMap mTimingSessions>;

        $r12 = virtualinvoke $r11.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i116, r6);

        r2 = (java.util.List) $r12;

        if r2 == null goto label22;

        $i5 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i5 != 0 goto label07;

        goto label22;

     label07:
        $l6 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long windowSizeMs>;

        l1 = l0 - $l6;

        l2 = l0 - 86400000L;

        i120 = 0;

        $i7 = interfaceinvoke r2.<java.util.List: int size()>();

        i3 = $i7 - 1;

        i121 = i3;

        l122 = 9223372036854775807L;

     label08:
        if i121 < 0 goto label20;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i121);

        r14 = (com.android.server.job.controllers.QuotaController$TimingSession) $r3;

        $l9 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long endTimeElapsed>;

        $b10 = l1 cmp $l9;

        if $b10 >= 0 goto label16;

        $l51 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long startTimeElapsed>;

        $b52 = l1 cmp $l51;

        if $b52 >= 0 goto label09;

        l123 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long startTimeElapsed>;

        $l90 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long startTimeElapsed>;

        $l91 = $l90 - l1;

        l122 = staticinvoke <java.lang.Math: long min(long,long)>(l122, $l91);

        goto label10;

     label09:
        l123 = l1;

        l122 = 0L;

     label10:
        $l55 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInWindowMs>;

        $l53 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long endTimeElapsed>;

        $l54 = $l53 - l123;

        $l56 = $l55 + $l54;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInWindowMs> = $l56;

        $i58 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInWindow>;

        $i57 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: int bgJobCount>;

        $i59 = $i58 + $i57;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInWindow> = $i59;

        $l61 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInWindowMs>;

        $l60 = r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimeIntoQuotaMs>;

        $b62 = $l61 cmp $l60;

        if $b62 < 0 goto label11;

        $l88 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed>;

        $l82 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInWindowMs>;

        $l84 = $l82 + l123;

        $l83 = r0.<com.android.server.job.controllers.QuotaController: long mAllowedTimeIntoQuotaMs>;

        $l86 = $l84 - $l83;

        $l85 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long windowSizeMs>;

        $l87 = $l86 + $l85;

        $l89 = staticinvoke <java.lang.Math: long max(long,long)>($l88, $l87);

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed> = $l89;

        goto label11;

     label11:
        $i64 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInWindow>;

        $i63 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int jobCountLimit>;

        if $i64 < $i63 goto label12;

        $l80 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed>;

        $l78 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long endTimeElapsed>;

        $l77 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long windowSizeMs>;

        $l79 = $l78 + $l77;

        $l81 = staticinvoke <java.lang.Math: long max(long,long)>($l80, $l79);

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed> = $l81;

     label12:
        if i121 == i3 goto label14;

        $i71 = i121 + 1;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i71);

        $r5 = (com.android.server.job.controllers.QuotaController$TimingSession) $r4;

        $l73 = $r5.<com.android.server.job.controllers.QuotaController$TimingSession: long startTimeElapsed>;

        $l72 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long endTimeElapsed>;

        $l75 = $l73 - $l72;

        $l74 = r0.<com.android.server.job.controllers.QuotaController: long mTimingSessionCoalescingDurationMs>;

        $b76 = $l75 cmp $l74;

        if $b76 <= 0 goto label13;

        goto label14;

     label13:
        goto label16;

     label14:
        i120 = i120 + 1;

        $i65 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountLimit>;

        if i120 < $i65 goto label15;

        $l69 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed>;

        $l67 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long endTimeElapsed>;

        $l66 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long windowSizeMs>;

        $l68 = $l67 + $l66;

        $l70 = staticinvoke <java.lang.Math: long max(long,long)>($l69, $l68);

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed> = $l70;

     label15:
        goto label16;

     label16:
        $l124 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long startTimeElapsed>;

        $b125 = l2 cmp $l124;

        if $b125 >= 0 goto label18;

        $l33 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs>;

        $l31 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long endTimeElapsed>;

        $l30 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long startTimeElapsed>;

        $l32 = $l31 - $l30;

        $l34 = $l33 + $l32;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs> = $l34;

        $i36 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInMaxPeriod>;

        $i35 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: int bgJobCount>;

        $i37 = $i36 + $i35;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInMaxPeriod> = $i37;

        $l38 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long startTimeElapsed>;

        $l39 = $l38 - l2;

        l122 = staticinvoke <java.lang.Math: long min(long,long)>(l122, $l39);

        $l41 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs>;

        $l40 = r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeIntoQuotaMs>;

        $b42 = $l41 cmp $l40;

        if $b42 < 0 goto label17;

        $l49 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed>;

        $l44 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long startTimeElapsed>;

        $l43 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs>;

        $l46 = $l44 + $l43;

        $l45 = r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeIntoQuotaMs>;

        $l47 = $l46 - $l45;

        $l48 = $l47 + 86400000L;

        $l50 = staticinvoke <java.lang.Math: long max(long,long)>($l49, $l48);

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed> = $l50;

     label17:
        goto label19;

     label18:
        i126 = i120;

        $l11 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long endTimeElapsed>;

        $b12 = l2 cmp $l11;

        if $b12 >= 0 goto label21;

        $l15 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs>;

        $l13 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: long endTimeElapsed>;

        $l14 = $l13 - l2;

        $l16 = $l15 + $l14;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs> = $l16;

        $i18 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInMaxPeriod>;

        $i17 = r14.<com.android.server.job.controllers.QuotaController$TimingSession: int bgJobCount>;

        $i19 = $i18 + $i17;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int bgJobCountInMaxPeriod> = $i19;

        l122 = 0L;

        $l21 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs>;

        $l20 = r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeIntoQuotaMs>;

        $b22 = $l21 cmp $l20;

        if $b22 < 0 goto label19;

        $l28 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed>;

        $l23 = r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long executionTimeInMaxPeriodMs>;

        $l25 = $l23 + l2;

        $l24 = r0.<com.android.server.job.controllers.QuotaController: long mMaxExecutionTimeIntoQuotaMs>;

        $l26 = $l25 - $l24;

        $l27 = $l26 + 86400000L;

        $l29 = staticinvoke <java.lang.Math: long max(long,long)>($l28, $l27);

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long inQuotaTimeElapsed> = $l29;

        goto label19;

     label19:
        i121 = i121 + -1;

        goto label08;

     label20:
        i126 = i120;

     label21:
        $l8 = l0 + l122;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: long expirationTimeElapsed> = $l8;

        r1.<com.android.server.job.controllers.QuotaController$ExecutionStats: int sessionCountInWindow> = i126;

        return;

     label22:
        return;
    }
}
