public abstract class com.android.server.job.controllers.StateController extends java.lang.Object
{
    private static final java.lang.String TAG;
    protected final com.android.server.job.JobSchedulerService$Constants mConstants;
    protected final android.content.Context mContext;
    protected final java.lang.Object mLock;
    protected final com.android.server.job.JobSchedulerService mService;
    protected final com.android.server.job.StateChangedListener mStateChangedListener;

    void <init>(com.android.server.job.JobSchedulerService)
    {
        com.android.server.job.controllers.StateController r0;
        com.android.server.job.JobSchedulerService r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        com.android.server.job.JobSchedulerService$Constants $r4;

        r0 := @this: com.android.server.job.controllers.StateController;

        r1 := @parameter0: com.android.server.job.JobSchedulerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.job.controllers.StateController: com.android.server.job.JobSchedulerService mService> = r1;

        r0.<com.android.server.job.controllers.StateController: com.android.server.job.StateChangedListener mStateChangedListener> = r1;

        $r2 = virtualinvoke r1.<com.android.server.job.JobSchedulerService: android.content.Context getTestableContext()>();

        r0.<com.android.server.job.controllers.StateController: android.content.Context mContext> = $r2;

        $r3 = virtualinvoke r1.<com.android.server.job.JobSchedulerService: java.lang.Object getLock()>();

        r0.<com.android.server.job.controllers.StateController: java.lang.Object mLock> = $r3;

        $r4 = virtualinvoke r1.<com.android.server.job.JobSchedulerService: com.android.server.job.JobSchedulerService$Constants getConstants()>();

        r0.<com.android.server.job.controllers.StateController: com.android.server.job.JobSchedulerService$Constants mConstants> = $r4;

        return;
    }

    public void dumpConstants(android.util.proto.ProtoOutputStream)
    {
        com.android.server.job.controllers.StateController r0;
        android.util.proto.ProtoOutputStream r1;

        r0 := @this: com.android.server.job.controllers.StateController;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        return;
    }

    public void dumpConstants(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.job.controllers.StateController r0;
        com.android.internal.util.IndentingPrintWriter r1;

        r0 := @this: com.android.server.job.controllers.StateController;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        return;
    }

    public abstract void dumpControllerStateLocked(android.util.proto.ProtoOutputStream, long, java.util.function.Predicate);

    public abstract void dumpControllerStateLocked(com.android.internal.util.IndentingPrintWriter, java.util.function.Predicate);

    public void evaluateStateLocked(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.StateController r0;
        com.android.server.job.controllers.JobStatus r1;

        r0 := @this: com.android.server.job.controllers.StateController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        return;
    }

    public abstract void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus, com.android.server.job.controllers.JobStatus);

    public abstract void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus, com.android.server.job.controllers.JobStatus, boolean);

    public void onAppRemovedLocked(java.lang.String, int)
    {
        com.android.server.job.controllers.StateController r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.job.controllers.StateController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return;
    }

    public void onConstantsUpdatedLocked()
    {
        com.android.server.job.controllers.StateController r0;

        r0 := @this: com.android.server.job.controllers.StateController;

        return;
    }

    public void onSystemServicesReady()
    {
        com.android.server.job.controllers.StateController r0;

        r0 := @this: com.android.server.job.controllers.StateController;

        return;
    }

    public void onUserRemovedLocked(int)
    {
        com.android.server.job.controllers.StateController r0;
        int i0;

        r0 := @this: com.android.server.job.controllers.StateController;

        i0 := @parameter0: int;

        return;
    }

    public void prepareForExecutionLocked(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.StateController r0;
        com.android.server.job.controllers.JobStatus r1;

        r0 := @this: com.android.server.job.controllers.StateController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        return;
    }

    public void reevaluateStateLocked(int)
    {
        com.android.server.job.controllers.StateController r0;
        int i0;

        r0 := @this: com.android.server.job.controllers.StateController;

        i0 := @parameter0: int;

        return;
    }

    public void rescheduleForFailureLocked(com.android.server.job.controllers.JobStatus, com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.StateController r0;
        com.android.server.job.controllers.JobStatus r1, r2;

        r0 := @this: com.android.server.job.controllers.StateController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        r2 := @parameter1: com.android.server.job.controllers.JobStatus;

        return;
    }

    protected boolean wouldBeReadyWithConstraintLocked(com.android.server.job.controllers.JobStatus, int)
    {
        com.android.server.job.controllers.StateController r0;
        com.android.server.job.controllers.JobStatus r1;
        int i0;
        boolean z0, $z1, $z2;
        com.android.server.job.JobSchedulerService $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r12;

        r0 := @this: com.android.server.job.controllers.StateController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        i0 := @parameter1: int;

        z0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean wouldBeReadyWithConstraint(int)>(i0);

        $z1 = <com.android.server.job.JobSchedulerService: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wouldBeReadyWithConstraintLocked: ");

        $r6 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: java.lang.String toShortString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" constraint=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" readyWithConstraint=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("JobScheduler.SC", $r12);

     label1:
        if z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = r0.<com.android.server.job.controllers.StateController: com.android.server.job.JobSchedulerService mService>;

        $z2 = virtualinvoke $r3.<com.android.server.job.JobSchedulerService: boolean areComponentsInPlaceLocked(com.android.server.job.controllers.JobStatus)>(r1);

        return $z2;
    }

    public static void <clinit>()
    {
        <com.android.server.job.controllers.StateController: java.lang.String TAG> = "JobScheduler.SC";

        return;
    }
}
