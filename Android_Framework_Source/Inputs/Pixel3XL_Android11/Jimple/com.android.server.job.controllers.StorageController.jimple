public final class com.android.server.job.controllers.StorageController extends com.android.server.job.controllers.StateController
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final com.android.server.job.controllers.StorageController$StorageTracker mStorageTracker;
    private final android.util.ArraySet mTrackedTasks;

    static void <clinit>()
    {
        boolean $z0, $z1, z2;

        <com.android.server.job.controllers.StorageController: java.lang.String TAG> = "JobScheduler.Storage";

        $z0 = <com.android.server.job.JobSchedulerService: boolean DEBUG>;

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("JobScheduler.Storage", 3);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        <com.android.server.job.controllers.StorageController: boolean DEBUG> = z2;

        return;
    }

    public void <init>(com.android.server.job.JobSchedulerService)
    {
        com.android.server.job.controllers.StorageController r0;
        android.util.ArraySet $r1;
        com.android.server.job.controllers.StorageController$StorageTracker $r2;
        com.android.server.job.JobSchedulerService r3;

        r0 := @this: com.android.server.job.controllers.StorageController;

        r3 := @parameter0: com.android.server.job.JobSchedulerService;

        specialinvoke r0.<com.android.server.job.controllers.StateController: void <init>(com.android.server.job.JobSchedulerService)>(r3);

        $r1 = new android.util.ArraySet;

        specialinvoke $r1.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.job.controllers.StorageController: android.util.ArraySet mTrackedTasks> = $r1;

        $r2 = new com.android.server.job.controllers.StorageController$StorageTracker;

        specialinvoke $r2.<com.android.server.job.controllers.StorageController$StorageTracker: void <init>(com.android.server.job.controllers.StorageController)>(r0);

        r0.<com.android.server.job.controllers.StorageController: com.android.server.job.controllers.StorageController$StorageTracker mStorageTracker> = $r2;

        virtualinvoke $r2.<com.android.server.job.controllers.StorageController$StorageTracker: void startTracking()>();

        return;
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = <com.android.server.job.controllers.StorageController: boolean DEBUG>;

        return $z0;
    }

    static void access$100(com.android.server.job.controllers.StorageController)
    {
        com.android.server.job.controllers.StorageController r0;

        r0 := @parameter0: com.android.server.job.controllers.StorageController;

        specialinvoke r0.<com.android.server.job.controllers.StorageController: void maybeReportNewStorageState()>();

        return;
    }

    private void maybeReportNewStorageState()
    {
        com.android.server.job.controllers.StorageController r0;
        boolean z0, $z1, z2;
        java.lang.Object r1, $r8;
        com.android.server.job.controllers.StorageController$StorageTracker $r3;
        android.util.ArraySet $r4, $r7;
        int $i0, i1;
        com.android.server.job.StateChangedListener $r5, $r6;
        com.android.server.job.controllers.JobStatus $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.job.controllers.StorageController;

        $r3 = r0.<com.android.server.job.controllers.StorageController: com.android.server.job.controllers.StorageController$StorageTracker mStorageTracker>;

        z0 = virtualinvoke $r3.<com.android.server.job.controllers.StorageController$StorageTracker: boolean isStorageNotLow()>();

        z2 = 0;

        r1 = r0.<com.android.server.job.controllers.StorageController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.job.controllers.StorageController: android.util.ArraySet mTrackedTasks>;

        $i0 = virtualinvoke $r4.<android.util.ArraySet: int size()>();

        i1 = $i0 - 1;

     label02:
        if i1 < 0 goto label05;

     label03:
        $r7 = r0.<com.android.server.job.controllers.StorageController: android.util.ArraySet mTrackedTasks>;

        $r8 = virtualinvoke $r7.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        $r9 = (com.android.server.job.controllers.JobStatus) $r8;

        $z1 = virtualinvoke $r9.<com.android.server.job.controllers.JobStatus: boolean setStorageNotLowConstraintSatisfied(boolean)>(z0);

        z2 = z2 | $z1;

     label04:
        i1 = i1 + -1;

        goto label02;

     label05:
        exitmonitor r1;

     label06:
        if z0 == 0 goto label07;

        $r6 = r0.<com.android.server.job.controllers.StorageController: com.android.server.job.StateChangedListener mStateChangedListener>;

        interfaceinvoke $r6.<com.android.server.job.StateChangedListener: void onRunJobNow(com.android.server.job.controllers.JobStatus)>(null);

        goto label08;

     label07:
        if z2 == 0 goto label08;

        $r5 = r0.<com.android.server.job.controllers.StorageController: com.android.server.job.StateChangedListener mStateChangedListener>;

        interfaceinvoke $r5.<com.android.server.job.StateChangedListener: void onControllerStateChanged()>();

     label08:
        return;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void dumpControllerStateLocked(android.util.proto.ProtoOutputStream, long, java.util.function.Predicate)
    {
        com.android.server.job.controllers.StorageController r0;
        android.util.proto.ProtoOutputStream r1;
        java.util.function.Predicate r2;
        long l0, l1, l5, l6;
        com.android.server.job.controllers.JobStatus r3;
        com.android.server.job.controllers.StorageController$StorageTracker $r4, $r5;
        boolean $z0, $z1;
        int $i2, $i3, $i4, i7;
        android.util.ArraySet $r6, $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.server.job.controllers.StorageController;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l5 := @parameter1: long;

        r2 := @parameter2: java.util.function.Predicate;

        l6 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l5);

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268039L);

        $r4 = r0.<com.android.server.job.controllers.StorageController: com.android.server.job.controllers.StorageController$StorageTracker mStorageTracker>;

        $z0 = virtualinvoke $r4.<com.android.server.job.controllers.StorageController$StorageTracker: boolean isStorageNotLow()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366145L, $z0);

        $r5 = r0.<com.android.server.job.controllers.StorageController: com.android.server.job.controllers.StorageController$StorageTracker mStorageTracker>;

        $i2 = virtualinvoke $r5.<com.android.server.job.controllers.StorageController$StorageTracker: int getSeq()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i2);

        i7 = 0;

     label1:
        $r6 = r0.<com.android.server.job.controllers.StorageController: android.util.ArraySet mTrackedTasks>;

        $i3 = virtualinvoke $r6.<android.util.ArraySet: int size()>();

        if i7 >= $i3 goto label4;

        $r7 = r0.<com.android.server.job.controllers.StorageController: android.util.ArraySet mTrackedTasks>;

        $r8 = virtualinvoke $r7.<android.util.ArraySet: java.lang.Object valueAt(int)>(i7);

        r3 = (com.android.server.job.controllers.JobStatus) $r8;

        $z1 = interfaceinvoke r2.<java.util.function.Predicate: boolean test(java.lang.Object)>(r3);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        l1 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895811L);

        virtualinvoke r3.<com.android.server.job.controllers.JobStatus: void writeToShortProto(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268033L);

        $i4 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i4);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

     label3:
        i7 = i7 + 1;

        goto label1;

     label4:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l6);

        return;
    }

    public void dumpControllerStateLocked(com.android.internal.util.IndentingPrintWriter, java.util.function.Predicate)
    {
        com.android.server.job.controllers.StorageController r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.util.function.Predicate r2;
        java.lang.StringBuilder $r3, $r8;
        com.android.server.job.controllers.StorageController$StorageTracker $r5, $r10;
        boolean $z0, $z1;
        java.lang.String $r7, $r12;
        int $i0, $i1, $i2, i3;
        android.util.ArraySet $r13, $r14;
        java.lang.Object $r15;
        com.android.server.job.controllers.JobStatus r18;

        r0 := @this: com.android.server.job.controllers.StorageController;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r2 := @parameter1: java.util.function.Predicate;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not low: ");

        $r5 = r0.<com.android.server.job.controllers.StorageController: com.android.server.job.controllers.StorageController$StorageTracker mStorageTracker>;

        $z0 = virtualinvoke $r5.<com.android.server.job.controllers.StorageController$StorageTracker: boolean isStorageNotLow()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sequence: ");

        $r10 = r0.<com.android.server.job.controllers.StorageController: com.android.server.job.controllers.StorageController$StorageTracker mStorageTracker>;

        $i0 = virtualinvoke $r10.<com.android.server.job.controllers.StorageController$StorageTracker: int getSeq()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r12);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        i3 = 0;

     label1:
        $r13 = r0.<com.android.server.job.controllers.StorageController: android.util.ArraySet mTrackedTasks>;

        $i1 = virtualinvoke $r13.<android.util.ArraySet: int size()>();

        if i3 >= $i1 goto label4;

        $r14 = r0.<com.android.server.job.controllers.StorageController: android.util.ArraySet mTrackedTasks>;

        $r15 = virtualinvoke $r14.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        r18 = (com.android.server.job.controllers.JobStatus) $r15;

        $z1 = interfaceinvoke r2.<java.util.function.Predicate: boolean test(java.lang.Object)>(r18);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("#");

        virtualinvoke r18.<com.android.server.job.controllers.JobStatus: void printUniqueId(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(" from ");

        $i2 = virtualinvoke r18.<com.android.server.job.controllers.JobStatus: int getSourceUid()>();

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i2);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return;
    }

    public com.android.server.job.controllers.StorageController$StorageTracker getTracker()
    {
        com.android.server.job.controllers.StorageController r0;
        com.android.server.job.controllers.StorageController$StorageTracker $r1;

        r0 := @this: com.android.server.job.controllers.StorageController;

        $r1 = r0.<com.android.server.job.controllers.StorageController: com.android.server.job.controllers.StorageController$StorageTracker mStorageTracker>;

        return $r1;
    }

    public void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus, com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.StorageController r0;
        com.android.server.job.controllers.JobStatus r1, r2;
        boolean $z0, $z2;
        android.util.ArraySet $r3;
        com.android.server.job.controllers.StorageController$StorageTracker $r4;

        r0 := @this: com.android.server.job.controllers.StorageController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        r2 := @parameter1: com.android.server.job.controllers.JobStatus;

        $z0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasStorageNotLowConstraint()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.job.controllers.StorageController: android.util.ArraySet mTrackedTasks>;

        virtualinvoke $r3.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<com.android.server.job.controllers.JobStatus: void setTrackingController(int)>(16);

        $r4 = r0.<com.android.server.job.controllers.StorageController: com.android.server.job.controllers.StorageController$StorageTracker mStorageTracker>;

        $z2 = virtualinvoke $r4.<com.android.server.job.controllers.StorageController$StorageTracker: boolean isStorageNotLow()>();

        virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean setStorageNotLowConstraintSatisfied(boolean)>($z2);

     label1:
        return;
    }

    public void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus, com.android.server.job.controllers.JobStatus, boolean)
    {
        com.android.server.job.controllers.StorageController r0;
        com.android.server.job.controllers.JobStatus r1, r2;
        boolean z0, $z1;
        android.util.ArraySet $r3;

        r0 := @this: com.android.server.job.controllers.StorageController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        r2 := @parameter1: com.android.server.job.controllers.JobStatus;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean clearTrackingController(int)>(16);

        if $z1 == 0 goto label1;

        $r3 = r0.<com.android.server.job.controllers.StorageController: android.util.ArraySet mTrackedTasks>;

        virtualinvoke $r3.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }
}
