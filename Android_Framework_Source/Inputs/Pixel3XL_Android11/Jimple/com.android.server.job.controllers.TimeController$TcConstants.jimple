class com.android.server.job.controllers.TimeController$TcConstants extends android.database.ContentObserver
{
    private static final boolean DEFAULT_USE_NON_WAKEUP_ALARM_FOR_DELAY;
    private static final java.lang.String KEY_USE_NON_WAKEUP_ALARM_FOR_DELAY;
    public boolean USE_NON_WAKEUP_ALARM_FOR_DELAY;
    private final android.util.KeyValueListParser mParser;
    private android.content.ContentResolver mResolver;
    final com.android.server.job.controllers.TimeController this$0;

    void <init>(com.android.server.job.controllers.TimeController, android.os.Handler)
    {
        com.android.server.job.controllers.TimeController$TcConstants r0;
        com.android.server.job.controllers.TimeController r1;
        android.os.Handler r2;
        android.util.KeyValueListParser $r3;

        r0 := @this: com.android.server.job.controllers.TimeController$TcConstants;

        r1 := @parameter0: com.android.server.job.controllers.TimeController;

        r2 := @parameter1: android.os.Handler;

        r0.<com.android.server.job.controllers.TimeController$TcConstants: com.android.server.job.controllers.TimeController this$0> = r1;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r2);

        $r3 = new android.util.KeyValueListParser;

        specialinvoke $r3.<android.util.KeyValueListParser: void <init>(char)>(44);

        r0.<com.android.server.job.controllers.TimeController$TcConstants: android.util.KeyValueListParser mParser> = $r3;

        r0.<com.android.server.job.controllers.TimeController$TcConstants: boolean USE_NON_WAKEUP_ALARM_FOR_DELAY> = 1;

        return;
    }

    static void access$000(com.android.server.job.controllers.TimeController$TcConstants, android.content.ContentResolver)
    {
        com.android.server.job.controllers.TimeController$TcConstants r0;
        android.content.ContentResolver r1;

        r0 := @parameter0: com.android.server.job.controllers.TimeController$TcConstants;

        r1 := @parameter1: android.content.ContentResolver;

        specialinvoke r0.<com.android.server.job.controllers.TimeController$TcConstants: void start(android.content.ContentResolver)>(r1);

        return;
    }

    static void access$200(com.android.server.job.controllers.TimeController$TcConstants, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.job.controllers.TimeController$TcConstants r0;
        com.android.internal.util.IndentingPrintWriter r1;

        r0 := @parameter0: com.android.server.job.controllers.TimeController$TcConstants;

        r1 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        specialinvoke r0.<com.android.server.job.controllers.TimeController$TcConstants: void dump(com.android.internal.util.IndentingPrintWriter)>(r1);

        return;
    }

    static void access$300(com.android.server.job.controllers.TimeController$TcConstants, android.util.proto.ProtoOutputStream)
    {
        com.android.server.job.controllers.TimeController$TcConstants r0;
        android.util.proto.ProtoOutputStream r1;

        r0 := @parameter0: com.android.server.job.controllers.TimeController$TcConstants;

        r1 := @parameter1: android.util.proto.ProtoOutputStream;

        specialinvoke r0.<com.android.server.job.controllers.TimeController$TcConstants: void dump(android.util.proto.ProtoOutputStream)>(r1);

        return;
    }

    private void dump(android.util.proto.ProtoOutputStream)
    {
        com.android.server.job.controllers.TimeController$TcConstants r0;
        android.util.proto.ProtoOutputStream r1;
        long l0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.TimeController$TcConstants;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268057L);

        $z0 = r0.<com.android.server.job.controllers.TimeController$TcConstants: boolean USE_NON_WAKEUP_ALARM_FOR_DELAY>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366146L, $z0);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        return;
    }

    private void dump(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.job.controllers.TimeController$TcConstants r0;
        com.android.internal.util.IndentingPrintWriter r1, $r4;
        boolean $z0;
        java.lang.Boolean $r3;

        r0 := @this: com.android.server.job.controllers.TimeController$TcConstants;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("TimeController:");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $z0 = r0.<com.android.server.job.controllers.TimeController$TcConstants: boolean USE_NON_WAKEUP_ALARM_FOR_DELAY>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("use_non_wakeup_delay_alarm", $r3);

        virtualinvoke $r4.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    private void start(android.content.ContentResolver)
    {
        com.android.server.job.controllers.TimeController$TcConstants r0;
        android.content.ContentResolver r1;
        android.net.Uri $r2;

        r0 := @this: com.android.server.job.controllers.TimeController$TcConstants;

        r1 := @parameter0: android.content.ContentResolver;

        r0.<com.android.server.job.controllers.TimeController$TcConstants: android.content.ContentResolver mResolver> = r1;

        $r2 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("job_scheduler_time_controller_constants");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r2, 0, r0);

        virtualinvoke r0.<com.android.server.job.controllers.TimeController$TcConstants: void onChange(boolean,android.net.Uri)>(1, null);

        return;
    }

    public void onChange(boolean, android.net.Uri)
    {
        com.android.server.job.controllers.TimeController$TcConstants r0;
        boolean z0, $z1;
        android.content.ContentResolver $r1;
        android.util.KeyValueListParser $r2, $r3;
        java.lang.Exception $r4;
        android.net.Uri r5;
        java.lang.String r6;

        r0 := @this: com.android.server.job.controllers.TimeController$TcConstants;

        z0 := @parameter0: boolean;

        r5 := @parameter1: android.net.Uri;

        $r1 = r0.<com.android.server.job.controllers.TimeController$TcConstants: android.content.ContentResolver mResolver>;

        r6 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r1, "job_scheduler_time_controller_constants");

     label1:
        $r2 = r0.<com.android.server.job.controllers.TimeController$TcConstants: android.util.KeyValueListParser mParser>;

        virtualinvoke $r2.<android.util.KeyValueListParser: void setString(java.lang.String)>(r6);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("JobScheduler.Time", "Bad jobscheduler time controller settings", $r4);

     label4:
        $r3 = r0.<com.android.server.job.controllers.TimeController$TcConstants: android.util.KeyValueListParser mParser>;

        $z1 = virtualinvoke $r3.<android.util.KeyValueListParser: boolean getBoolean(java.lang.String,boolean)>("use_non_wakeup_delay_alarm", 1);

        r0.<com.android.server.job.controllers.TimeController$TcConstants: boolean USE_NON_WAKEUP_ALARM_FOR_DELAY> = $z1;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.job.controllers.TimeController$TcConstants: java.lang.String KEY_USE_NON_WAKEUP_ALARM_FOR_DELAY> = "use_non_wakeup_delay_alarm";

        <com.android.server.job.controllers.TimeController$TcConstants: boolean DEFAULT_USE_NON_WAKEUP_ALARM_FOR_DELAY> = 1;

        return;
    }
}
