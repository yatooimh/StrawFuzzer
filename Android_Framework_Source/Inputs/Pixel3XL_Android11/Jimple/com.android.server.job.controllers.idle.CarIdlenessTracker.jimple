public final class com.android.server.job.controllers.idle.CarIdlenessTracker extends android.content.BroadcastReceiver implements com.android.server.job.controllers.idle.IdlenessTracker
{
    public static final java.lang.String ACTION_FORCE_IDLE;
    public static final java.lang.String ACTION_GARAGE_MODE_OFF;
    public static final java.lang.String ACTION_GARAGE_MODE_ON;
    public static final java.lang.String ACTION_UNFORCE_IDLE;
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private boolean mForced;
    private boolean mGarageModeOn;
    private boolean mIdle;
    private com.android.server.job.controllers.idle.IdlenessListener mIdleListener;

    static void <clinit>()
    {
        boolean $z0, $z1, z2;

        <com.android.server.job.controllers.idle.CarIdlenessTracker: java.lang.String TAG> = "JobScheduler.CarIdlenessTracker";

        <com.android.server.job.controllers.idle.CarIdlenessTracker: java.lang.String ACTION_UNFORCE_IDLE> = "com.android.server.jobscheduler.UNFORCE_IDLE";

        <com.android.server.job.controllers.idle.CarIdlenessTracker: java.lang.String ACTION_GARAGE_MODE_ON> = "com.android.server.jobscheduler.GARAGE_MODE_ON";

        <com.android.server.job.controllers.idle.CarIdlenessTracker: java.lang.String ACTION_GARAGE_MODE_OFF> = "com.android.server.jobscheduler.GARAGE_MODE_OFF";

        <com.android.server.job.controllers.idle.CarIdlenessTracker: java.lang.String ACTION_FORCE_IDLE> = "com.android.server.jobscheduler.FORCE_IDLE";

        $z0 = <com.android.server.job.JobSchedulerService: boolean DEBUG>;

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("JobScheduler.CarIdlenessTracker", 3);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        <com.android.server.job.controllers.idle.CarIdlenessTracker: boolean DEBUG> = z2;

        return;
    }

    public void <init>()
    {
        com.android.server.job.controllers.idle.CarIdlenessTracker r0;

        r0 := @this: com.android.server.job.controllers.idle.CarIdlenessTracker;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mIdle> = 0;

        r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mGarageModeOn> = 0;

        r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mForced> = 0;

        return;
    }

    private void handleScreenOn()
    {
        com.android.server.job.controllers.idle.CarIdlenessTracker r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.job.controllers.idle.CarIdlenessTracker;

        $z0 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mForced>;

        if $z0 != 0 goto label3;

        $z1 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mGarageModeOn>;

        if $z1 == 0 goto label1;

        goto label3;

     label1:
        $z2 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mIdle>;

        if $z2 == 0 goto label2;

        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>("Device is exiting idle");

        r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mIdle> = 0;

        goto label4;

     label2:
        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>("Device is already non-idle");

        goto label4;

     label3:
        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>("Screen is on, but device cannot exit idle");

     label4:
        return;
    }

    private static void logIfDebug(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = <com.android.server.job.controllers.idle.CarIdlenessTracker: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("JobScheduler.CarIdlenessTracker", r0);

     label1:
        return;
    }

    private void setForceIdleState(boolean)
    {
        com.android.server.job.controllers.idle.CarIdlenessTracker r0;
        boolean z0;

        r0 := @this: com.android.server.job.controllers.idle.CarIdlenessTracker;

        z0 := @parameter0: boolean;

        r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mForced> = z0;

        specialinvoke r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: void updateIdlenessState()>();

        return;
    }

    private void triggerIdlenessOnce()
    {
        com.android.server.job.controllers.idle.CarIdlenessTracker r0;
        boolean $z0;
        com.android.server.job.controllers.idle.IdlenessListener $r1;

        r0 := @this: com.android.server.job.controllers.idle.CarIdlenessTracker;

        $z0 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mIdle>;

        if $z0 == 0 goto label1;

        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>("Device is already idle");

        goto label2;

     label1:
        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>("Device is going idle once");

        r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mIdle> = 1;

        $r1 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: com.android.server.job.controllers.idle.IdlenessListener mIdleListener>;

        interfaceinvoke $r1.<com.android.server.job.controllers.idle.IdlenessListener: void reportNewIdleState(boolean)>(1);

     label2:
        return;
    }

    private void updateIdlenessState()
    {
        com.android.server.job.controllers.idle.CarIdlenessTracker r0;
        boolean $z0, $z1, z2, $z3;
        java.lang.StringBuilder $r1, $r5;
        java.lang.String $r4, $r8;
        com.android.server.job.controllers.idle.IdlenessListener $r9;

        r0 := @this: com.android.server.job.controllers.idle.CarIdlenessTracker;

        $z0 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mForced>;

        if $z0 != 0 goto label2;

        $z1 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mGarageModeOn>;

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        $z3 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mIdle>;

        if $z3 == z2 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Device idleness changed. New idle=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>($r8);

        r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mIdle> = z2;

        $r9 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: com.android.server.job.controllers.idle.IdlenessListener mIdleListener>;

        interfaceinvoke $r9.<com.android.server.job.controllers.idle.IdlenessListener: void reportNewIdleState(boolean)>(z2);

        goto label5;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Device idleness is the same. Current idle=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>($r4);

     label5:
        return;
    }

    public void dump(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.job.controllers.idle.CarIdlenessTracker r0;
        android.util.proto.ProtoOutputStream r1;
        long l0, l1, l2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.job.controllers.idle.CarIdlenessTracker;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l1 := @parameter1: long;

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l1);

        l2 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268034L);

        $z0 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mIdle>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366145L, $z0);

        $z1 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mGarageModeOn>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366146L, $z1);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.job.controllers.idle.CarIdlenessTracker r0;
        java.io.PrintWriter r1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.job.controllers.idle.CarIdlenessTracker;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mIdle: ");

        $z0 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mIdle>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mGarageModeOn: ");

        $z1 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mGarageModeOn>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z1);

        return;
    }

    public boolean isIdle()
    {
        com.android.server.job.controllers.idle.CarIdlenessTracker r0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.idle.CarIdlenessTracker;

        $z0 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mIdle>;

        return $z0;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.job.controllers.idle.CarIdlenessTracker r0;
        java.lang.StringBuilder $r1, $r5;
        java.lang.String $r4, $r10, r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.content.Context r11;
        android.content.Intent r12;

        r0 := @this: com.android.server.job.controllers.idle.CarIdlenessTracker;

        r11 := @parameter0: android.content.Context;

        r12 := @parameter1: android.content.Intent;

        r13 = virtualinvoke r12.<android.content.Intent: java.lang.String getAction()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received action: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>($r4);

        $z0 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("com.android.server.jobscheduler.FORCE_IDLE");

        if $z0 == 0 goto label1;

        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>("Forcing idle...");

        specialinvoke r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: void setForceIdleState(boolean)>(1);

        goto label7;

     label1:
        $z1 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("com.android.server.jobscheduler.UNFORCE_IDLE");

        if $z1 == 0 goto label2;

        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>("Unforcing idle...");

        specialinvoke r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: void setForceIdleState(boolean)>(0);

        goto label7;

     label2:
        $z2 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.SCREEN_ON");

        if $z2 == 0 goto label3;

        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>("Screen is on...");

        specialinvoke r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: void handleScreenOn()>();

        goto label7;

     label3:
        $z3 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("com.android.server.jobscheduler.GARAGE_MODE_ON");

        if $z3 == 0 goto label4;

        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>("GarageMode is on...");

        r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mGarageModeOn> = 1;

        specialinvoke r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: void updateIdlenessState()>();

        goto label7;

     label4:
        $z4 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("com.android.server.jobscheduler.GARAGE_MODE_OFF");

        if $z4 == 0 goto label5;

        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>("GarageMode is off...");

        r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mGarageModeOn> = 0;

        specialinvoke r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: void updateIdlenessState()>();

        goto label7;

     label5:
        $z5 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("com.android.server.ACTION_TRIGGER_IDLE");

        if $z5 == 0 goto label7;

        $z6 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mGarageModeOn>;

        if $z6 != 0 goto label6;

        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>("Idle trigger fired...");

        specialinvoke r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: void triggerIdlenessOnce()>();

        goto label7;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TRIGGER_IDLE received but not changing state; idle=");

        $z7 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mIdle>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" screen=");

        $z8 = r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: boolean mGarageModeOn>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.job.controllers.idle.CarIdlenessTracker: void logIfDebug(java.lang.String)>($r10);

     label7:
        return;
    }

    public void startTracking(android.content.Context, com.android.server.job.controllers.idle.IdlenessListener)
    {
        com.android.server.job.controllers.idle.CarIdlenessTracker r0;
        android.content.Context r1;
        android.content.IntentFilter $r2;
        com.android.server.job.controllers.idle.IdlenessListener r4;

        r0 := @this: com.android.server.job.controllers.idle.CarIdlenessTracker;

        r1 := @parameter0: android.content.Context;

        r4 := @parameter1: com.android.server.job.controllers.idle.IdlenessListener;

        r0.<com.android.server.job.controllers.idle.CarIdlenessTracker: com.android.server.job.controllers.idle.IdlenessListener mIdleListener> = r4;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.server.jobscheduler.GARAGE_MODE_ON");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.server.jobscheduler.GARAGE_MODE_OFF");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.server.jobscheduler.FORCE_IDLE");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.server.jobscheduler.UNFORCE_IDLE");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.server.ACTION_TRIGGER_IDLE");

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r0, $r2);

        return;
    }
}
