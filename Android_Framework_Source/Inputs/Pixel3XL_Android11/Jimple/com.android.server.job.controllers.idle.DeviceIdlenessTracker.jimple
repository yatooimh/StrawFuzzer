public final class com.android.server.job.controllers.idle.DeviceIdlenessTracker extends android.content.BroadcastReceiver implements com.android.server.job.controllers.idle.IdlenessTracker
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private android.app.AlarmManager mAlarm;
    private boolean mDockIdle;
    private boolean mIdle;
    private android.app.AlarmManager$OnAlarmListener mIdleAlarmListener;
    private com.android.server.job.controllers.idle.IdlenessListener mIdleListener;
    private long mIdleWindowSlop;
    private boolean mInCarMode;
    private long mInactivityIdleThreshold;
    private android.os.PowerManager mPowerManager;
    private boolean mScreenOn;

    static void <clinit>()
    {
        boolean $z0, $z1, z2;

        <com.android.server.job.controllers.idle.DeviceIdlenessTracker: java.lang.String TAG> = "JobScheduler.DeviceIdlenessTracker";

        $z0 = <com.android.server.job.JobSchedulerService: boolean DEBUG>;

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("JobScheduler.DeviceIdlenessTracker", 3);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        <com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean DEBUG> = z2;

        return;
    }

    public void <init>()
    {
        com.android.server.job.controllers.idle.DeviceIdlenessTracker r0;
        com.android.server.job.controllers.idle._$$Lambda$DeviceIdlenessTracker$_H1_ZwZAJ_vh10A0PeYXaZLj_R0 $r1;

        r0 := @this: com.android.server.job.controllers.idle.DeviceIdlenessTracker;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        $r1 = new com.android.server.job.controllers.idle._$$Lambda$DeviceIdlenessTracker$_H1_ZwZAJ_vh10A0PeYXaZLj_R0;

        specialinvoke $r1.<com.android.server.job.controllers.idle._$$Lambda$DeviceIdlenessTracker$_H1_ZwZAJ_vh10A0PeYXaZLj_R0: void <init>(com.android.server.job.controllers.idle.DeviceIdlenessTracker)>(r0);

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: android.app.AlarmManager$OnAlarmListener mIdleAlarmListener> = $r1;

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mIdle> = 0;

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mScreenOn> = 1;

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mDockIdle> = 0;

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mInCarMode> = 0;

        return;
    }

    private void cancelIdlenessCheck()
    {
        com.android.server.job.controllers.idle.DeviceIdlenessTracker r0;
        android.app.AlarmManager$OnAlarmListener $r1;
        android.app.AlarmManager $r2;

        r0 := @this: com.android.server.job.controllers.idle.DeviceIdlenessTracker;

        $r2 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: android.app.AlarmManager mAlarm>;

        $r1 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: android.app.AlarmManager$OnAlarmListener mIdleAlarmListener>;

        virtualinvoke $r2.<android.app.AlarmManager: void cancel(android.app.AlarmManager$OnAlarmListener)>($r1);

        return;
    }

    private void handleIdleTrigger()
    {
        com.android.server.job.controllers.idle.DeviceIdlenessTracker r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.StringBuilder $r1, $r10;
        java.lang.String $r8, $r14;
        com.android.server.job.controllers.idle.IdlenessListener $r9;
        java.time.Clock $r12;
        long $l1;

        r0 := @this: com.android.server.job.controllers.idle.DeviceIdlenessTracker;

        $z0 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mIdle>;

        if $z0 != 0 goto label3;

        $z4 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mScreenOn>;

        if $z4 == 0 goto label1;

        $z7 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mDockIdle>;

        if $z7 == 0 goto label3;

     label1:
        $z5 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mInCarMode>;

        if $z5 != 0 goto label3;

        $z6 = <com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean DEBUG>;

        if $z6 == 0 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Idle trigger fired @ ");

        $r12 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        $l1 = virtualinvoke $r12.<java.time.Clock: long millis()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("JobScheduler.DeviceIdlenessTracker", $r14);

     label2:
        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mIdle> = 1;

        $r9 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: com.android.server.job.controllers.idle.IdlenessListener mIdleListener>;

        interfaceinvoke $r9.<com.android.server.job.controllers.idle.IdlenessListener: void reportNewIdleState(boolean)>(1);

        goto label4;

     label3:
        $z8 = <com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean DEBUG>;

        if $z8 == 0 goto label4;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TRIGGER_IDLE received but not changing state; idle=");

        $z1 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mIdle>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" screen=");

        $z2 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mScreenOn>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" car=");

        $z3 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mInCarMode>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("JobScheduler.DeviceIdlenessTracker", $r8);

     label4:
        return;
    }

    private void maybeScheduleIdlenessCheck(java.lang.String)
    {
        com.android.server.job.controllers.idle.DeviceIdlenessTracker r0;
        java.lang.String r1, $r13;
        long l0, l1, $l2, $l3;
        boolean $z0, $z1, $z2, $z3;
        java.time.Clock $r3;
        android.app.AlarmManager$OnAlarmListener $r4;
        android.app.AlarmManager $r5;
        java.lang.StringBuilder $r6;

        r0 := @this: com.android.server.job.controllers.idle.DeviceIdlenessTracker;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mScreenOn>;

        if $z0 == 0 goto label1;

        $z3 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mDockIdle>;

        if $z3 == 0 goto label3;

     label1:
        $z1 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mInCarMode>;

        if $z1 != 0 goto label3;

        $r3 = <com.android.server.job.JobSchedulerService: java.time.Clock sElapsedRealtimeClock>;

        l0 = virtualinvoke $r3.<java.time.Clock: long millis()>();

        $l2 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: long mInactivityIdleThreshold>;

        l1 = $l2 + l0;

        $z2 = <com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean DEBUG>;

        if $z2 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling idle : ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now:");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("JobScheduler.DeviceIdlenessTracker", $r13);

     label2:
        $r5 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: android.app.AlarmManager mAlarm>;

        $l3 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: long mIdleWindowSlop>;

        $r4 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: android.app.AlarmManager$OnAlarmListener mIdleAlarmListener>;

        virtualinvoke $r5.<android.app.AlarmManager: void setWindow(int,long,long,java.lang.String,android.app.AlarmManager$OnAlarmListener,android.os.Handler)>(2, l1, $l3, "JS idleness", $r4, null);

     label3:
        return;
    }

    public void dump(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.job.controllers.idle.DeviceIdlenessTracker r0;
        android.util.proto.ProtoOutputStream r1;
        long l0, l1, l2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.job.controllers.idle.DeviceIdlenessTracker;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l1 := @parameter1: long;

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l1);

        l2 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268033L);

        $z0 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mIdle>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366145L, $z0);

        $z1 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mScreenOn>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366146L, $z1);

        $z2 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mDockIdle>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366147L, $z2);

        $z3 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mInCarMode>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366148L, $z3);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.job.controllers.idle.DeviceIdlenessTracker r0;
        java.io.PrintWriter r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.job.controllers.idle.DeviceIdlenessTracker;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mIdle: ");

        $z0 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mIdle>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mScreenOn: ");

        $z1 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mScreenOn>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mDockIdle: ");

        $z2 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mDockIdle>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mInCarMode: ");

        $z3 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mInCarMode>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z3);

        return;
    }

    public boolean isIdle()
    {
        com.android.server.job.controllers.idle.DeviceIdlenessTracker r0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.idle.DeviceIdlenessTracker;

        $z0 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mIdle>;

        return $z0;
    }

    public void lambda$new$0$DeviceIdlenessTracker()
    {
        com.android.server.job.controllers.idle.DeviceIdlenessTracker r0;

        r0 := @this: com.android.server.job.controllers.idle.DeviceIdlenessTracker;

        specialinvoke r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: void handleIdleTrigger()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.job.controllers.idle.DeviceIdlenessTracker r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        int $i0;
        com.android.server.job.controllers.idle.IdlenessListener $r1, $r2;
        android.os.PowerManager $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7, r10;
        android.content.Context r8;
        android.content.Intent r9;
        byte b3;

        r0 := @this: com.android.server.job.controllers.idle.DeviceIdlenessTracker;

        r8 := @parameter0: android.content.Context;

        r9 := @parameter1: android.content.Intent;

        r10 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z0 = <com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received action: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("JobScheduler.DeviceIdlenessTracker", $r7);

     label01:
        b3 = -1;

        $i0 = virtualinvoke r10.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2128145023: goto label11;
            case -1725418999: goto label10;
            case -1454123155: goto label09;
            case -905264325: goto label08;
            case 244891622: goto label07;
            case 257757490: goto label06;
            case 931842567: goto label05;
            case 1456569541: goto label04;
            case 1689632941: goto label03;
            default: goto label02;
        };

     label02:
        goto label12;

     label03:
        $z1 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.DOCK_ACTIVE");

        if $z1 == 0 goto label02;

        b3 = 0;

        goto label12;

     label04:
        $z9 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("com.android.server.ACTION_TRIGGER_IDLE");

        if $z9 == 0 goto label02;

        b3 = 8;

        goto label12;

     label05:
        $z10 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.ENTER_CAR_MODE_PRIORITIZED");

        if $z10 == 0 goto label02;

        b3 = 6;

        goto label12;

     label06:
        $z11 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.DREAMING_STOPPED");

        if $z11 == 0 goto label02;

        b3 = 1;

        goto label12;

     label07:
        $z12 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.DREAMING_STARTED");

        if $z12 == 0 goto label02;

        b3 = 4;

        goto label12;

     label08:
        $z13 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.DOCK_IDLE");

        if $z13 == 0 goto label02;

        b3 = 5;

        goto label12;

     label09:
        $z14 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.SCREEN_ON");

        if $z14 == 0 goto label02;

        b3 = 2;

        goto label12;

     label10:
        $z15 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("android.app.action.EXIT_CAR_MODE_PRIORITIZED");

        if $z15 == 0 goto label02;

        b3 = 7;

        goto label12;

     label11:
        $z16 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.SCREEN_OFF");

        if $z16 == 0 goto label02;

        b3 = 3;

     label12:
        tableswitch(b3)
        {
            case 0: goto label21;
            case 1: goto label22;
            case 2: goto label23;
            case 3: goto label17;
            case 4: goto label17;
            case 5: goto label17;
            case 6: goto label16;
            case 7: goto label15;
            case 8: goto label14;
            default: goto label13;
        };

     label13:
        goto label25;

     label14:
        specialinvoke r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: void handleIdleTrigger()>();

        goto label25;

     label15:
        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mInCarMode> = 0;

        specialinvoke r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: void maybeScheduleIdlenessCheck(java.lang.String)>(r10);

        goto label25;

     label16:
        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mInCarMode> = 1;

        specialinvoke r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: void cancelIdlenessCheck()>();

        $z2 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mIdle>;

        if $z2 == 0 goto label25;

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mIdle> = 0;

        $r1 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: com.android.server.job.controllers.idle.IdlenessListener mIdleListener>;

        interfaceinvoke $r1.<com.android.server.job.controllers.idle.IdlenessListener: void reportNewIdleState(boolean)>(0);

        goto label25;

     label17:
        $z3 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.DOCK_IDLE");

        if $z3 == 0 goto label19;

        $z4 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mScreenOn>;

        if $z4 != 0 goto label18;

        return;

     label18:
        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mDockIdle> = 1;

        goto label20;

     label19:
        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mScreenOn> = 0;

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mDockIdle> = 0;

     label20:
        specialinvoke r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: void maybeScheduleIdlenessCheck(java.lang.String)>(r10);

        goto label25;

     label21:
        $z8 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mScreenOn>;

        if $z8 != 0 goto label22;

        return;

     label22:
        $r3 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: android.os.PowerManager mPowerManager>;

        $z7 = virtualinvoke $r3.<android.os.PowerManager: boolean isInteractive()>();

        if $z7 != 0 goto label23;

        return;

     label23:
        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mScreenOn> = 1;

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mDockIdle> = 0;

        $z5 = <com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean DEBUG>;

        if $z5 == 0 goto label24;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("JobScheduler.DeviceIdlenessTracker", "exiting idle");

     label24:
        specialinvoke r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: void cancelIdlenessCheck()>();

        $z6 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mIdle>;

        if $z6 == 0 goto label25;

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: boolean mIdle> = 0;

        $r2 = r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: com.android.server.job.controllers.idle.IdlenessListener mIdleListener>;

        interfaceinvoke $r2.<com.android.server.job.controllers.idle.IdlenessListener: void reportNewIdleState(boolean)>(0);

     label25:
        return;
    }

    public void startTracking(android.content.Context, com.android.server.job.controllers.idle.IdlenessListener)
    {
        com.android.server.job.controllers.idle.DeviceIdlenessTracker r0;
        android.content.Context r1;
        android.content.res.Resources $r2, $r3;
        int $i0, $i2;
        long $l1, $l3;
        java.lang.Object $r4, $r6;
        android.app.AlarmManager $r5;
        android.os.PowerManager $r7;
        android.content.IntentFilter $r8;
        com.android.server.job.controllers.idle.IdlenessListener r10;

        r0 := @this: com.android.server.job.controllers.idle.DeviceIdlenessTracker;

        r1 := @parameter0: android.content.Context;

        r10 := @parameter1: com.android.server.job.controllers.idle.IdlenessListener;

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: com.android.server.job.controllers.idle.IdlenessListener mIdleListener> = r10;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(17694818);

        $l1 = (long) $i0;

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: long mInactivityIdleThreshold> = $l1;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke $r3.<android.content.res.Resources: int getInteger(int)>(17694817);

        $l3 = (long) $i2;

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: long mIdleWindowSlop> = $l3;

        $r4 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r5 = (android.app.AlarmManager) $r4;

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: android.app.AlarmManager mAlarm> = $r5;

        $r6 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        $r7 = (android.os.PowerManager) $r6;

        r0.<com.android.server.job.controllers.idle.DeviceIdlenessTracker: android.os.PowerManager mPowerManager> = $r7;

        $r8 = new android.content.IntentFilter;

        specialinvoke $r8.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r8.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke $r8.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        virtualinvoke $r8.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DREAMING_STARTED");

        virtualinvoke $r8.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DREAMING_STOPPED");

        virtualinvoke $r8.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.server.ACTION_TRIGGER_IDLE");

        virtualinvoke $r8.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DOCK_IDLE");

        virtualinvoke $r8.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DOCK_ACTIVE");

        virtualinvoke $r8.<android.content.IntentFilter: void addAction(java.lang.String)>("android.app.action.ENTER_CAR_MODE_PRIORITIZED");

        virtualinvoke $r8.<android.content.IntentFilter: void addAction(java.lang.String)>("android.app.action.EXIT_CAR_MODE_PRIORITIZED");

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r0, $r8);

        return;
    }
}
