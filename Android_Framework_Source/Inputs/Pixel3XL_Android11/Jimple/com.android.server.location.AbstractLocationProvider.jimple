public abstract class com.android.server.location.AbstractLocationProvider extends java.lang.Object
{
    protected final java.util.concurrent.Executor mExecutor;
    private final java.util.concurrent.atomic.AtomicReference mInternalState;

    protected void <init>(java.util.concurrent.Executor, android.content.Context)
    {
        com.android.server.location.AbstractLocationProvider r0;
        java.util.concurrent.Executor r1;
        android.content.Context r2;
        java.lang.String $r3;
        java.util.Set $r4;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.content.Context;

        $r3 = virtualinvoke r2.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3);

        specialinvoke r0.<com.android.server.location.AbstractLocationProvider: void <init>(java.util.concurrent.Executor,java.util.Set)>(r1, $r4);

        return;
    }

    protected void <init>(java.util.concurrent.Executor, java.util.Set)
    {
        com.android.server.location.AbstractLocationProvider r0;
        java.util.concurrent.Executor r1;
        java.util.Set r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        com.android.server.location.AbstractLocationProvider$InternalState $r4;
        com.android.server.location.AbstractLocationProvider$State $r5, $r6;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.AbstractLocationProvider: java.util.concurrent.Executor mExecutor> = r1;

        $r3 = new java.util.concurrent.atomic.AtomicReference;

        $r4 = new com.android.server.location.AbstractLocationProvider$InternalState;

        $r5 = <com.android.server.location.AbstractLocationProvider$State: com.android.server.location.AbstractLocationProvider$State EMPTY_STATE>;

        $r6 = staticinvoke <com.android.server.location.AbstractLocationProvider$State: com.android.server.location.AbstractLocationProvider$State access$000(com.android.server.location.AbstractLocationProvider$State,java.util.Set)>($r5, r2);

        specialinvoke $r4.<com.android.server.location.AbstractLocationProvider$InternalState: void <init>(com.android.server.location.AbstractLocationProvider$Listener,com.android.server.location.AbstractLocationProvider$State,com.android.server.location.AbstractLocationProvider$1)>(null, $r6, null);

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>($r4);

        r0.<com.android.server.location.AbstractLocationProvider: java.util.concurrent.atomic.AtomicReference mInternalState> = $r3;

        return;
    }

    static com.android.server.location.AbstractLocationProvider$State lambda$setAllowed$3(boolean, com.android.server.location.AbstractLocationProvider$State)
    {
        boolean z0;
        com.android.server.location.AbstractLocationProvider$State r0, $r1;

        z0 := @parameter0: boolean;

        r0 := @parameter1: com.android.server.location.AbstractLocationProvider$State;

        $r1 = staticinvoke <com.android.server.location.AbstractLocationProvider$State: com.android.server.location.AbstractLocationProvider$State access$300(com.android.server.location.AbstractLocationProvider$State,boolean)>(r0, z0);

        return $r1;
    }

    static com.android.server.location.AbstractLocationProvider$InternalState lambda$setListener$0(com.android.server.location.AbstractLocationProvider$Listener, com.android.server.location.AbstractLocationProvider$InternalState)
    {
        com.android.server.location.AbstractLocationProvider$Listener r0;
        com.android.server.location.AbstractLocationProvider$InternalState r1, $r2;

        r0 := @parameter0: com.android.server.location.AbstractLocationProvider$Listener;

        r1 := @parameter1: com.android.server.location.AbstractLocationProvider$InternalState;

        $r2 = staticinvoke <com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$InternalState access$600(com.android.server.location.AbstractLocationProvider$InternalState,com.android.server.location.AbstractLocationProvider$Listener)>(r1, r0);

        return $r2;
    }

    static com.android.server.location.AbstractLocationProvider$State lambda$setPackageNames$5(java.util.Set, com.android.server.location.AbstractLocationProvider$State)
    {
        java.util.Set r0;
        com.android.server.location.AbstractLocationProvider$State r1, $r2;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: com.android.server.location.AbstractLocationProvider$State;

        $r2 = staticinvoke <com.android.server.location.AbstractLocationProvider$State: com.android.server.location.AbstractLocationProvider$State access$000(com.android.server.location.AbstractLocationProvider$State,java.util.Set)>(r1, r0);

        return $r2;
    }

    static com.android.server.location.AbstractLocationProvider$State lambda$setProperties$4(com.android.internal.location.ProviderProperties, com.android.server.location.AbstractLocationProvider$State)
    {
        com.android.internal.location.ProviderProperties r0;
        com.android.server.location.AbstractLocationProvider$State r1, $r2;

        r0 := @parameter0: com.android.internal.location.ProviderProperties;

        r1 := @parameter1: com.android.server.location.AbstractLocationProvider$State;

        $r2 = staticinvoke <com.android.server.location.AbstractLocationProvider$State: com.android.server.location.AbstractLocationProvider$State access$200(com.android.server.location.AbstractLocationProvider$State,com.android.internal.location.ProviderProperties)>(r1, r0);

        return $r2;
    }

    static com.android.server.location.AbstractLocationProvider$InternalState lambda$setState$1(com.android.server.location.AbstractLocationProvider$State, com.android.server.location.AbstractLocationProvider$InternalState)
    {
        com.android.server.location.AbstractLocationProvider$State r0;
        com.android.server.location.AbstractLocationProvider$InternalState r1, $r2;

        r0 := @parameter0: com.android.server.location.AbstractLocationProvider$State;

        r1 := @parameter1: com.android.server.location.AbstractLocationProvider$InternalState;

        $r2 = staticinvoke <com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$InternalState access$500(com.android.server.location.AbstractLocationProvider$InternalState,com.android.server.location.AbstractLocationProvider$State)>(r1, r0);

        return $r2;
    }

    static com.android.server.location.AbstractLocationProvider$InternalState lambda$setState$2(java.util.function.UnaryOperator, com.android.server.location.AbstractLocationProvider$InternalState)
    {
        java.util.function.UnaryOperator r0;
        com.android.server.location.AbstractLocationProvider$InternalState r1, $r2;

        r0 := @parameter0: java.util.function.UnaryOperator;

        r1 := @parameter1: com.android.server.location.AbstractLocationProvider$InternalState;

        $r2 = staticinvoke <com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$InternalState access$400(com.android.server.location.AbstractLocationProvider$InternalState,java.util.function.UnaryOperator)>(r1, r0);

        return $r2;
    }

    private void setState(java.util.function.UnaryOperator)
    {
        com.android.server.location.AbstractLocationProvider r0;
        com.android.server.location.AbstractLocationProvider$InternalState r1;
        long l0;
        com.android.server.location._$$Lambda$AbstractLocationProvider$kFGsZg9Hx50h6WYQeAMQABkRKNU $r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4, $r6;
        com.android.server.location.AbstractLocationProvider$State $r5, $r7, $r9, r13;
        boolean $z0;
        com.android.server.location.AbstractLocationProvider$Listener $r8, $r10;
        java.lang.Throwable $r11;
        java.util.function.UnaryOperator r12;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        r12 := @parameter0: java.util.function.UnaryOperator;

        $r3 = r0.<com.android.server.location.AbstractLocationProvider: java.util.concurrent.atomic.AtomicReference mInternalState>;

        $r2 = new com.android.server.location._$$Lambda$AbstractLocationProvider$kFGsZg9Hx50h6WYQeAMQABkRKNU;

        specialinvoke $r2.<com.android.server.location._$$Lambda$AbstractLocationProvider$kFGsZg9Hx50h6WYQeAMQABkRKNU: void <init>(java.util.function.UnaryOperator)>(r12);

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndUpdate(java.util.function.UnaryOperator)>($r2);

        r1 = (com.android.server.location.AbstractLocationProvider$InternalState) $r4;

        $r5 = r1.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$State state>;

        $r6 = interfaceinvoke r12.<java.util.function.UnaryOperator: java.lang.Object apply(java.lang.Object)>($r5);

        r13 = (com.android.server.location.AbstractLocationProvider$State) $r6;

        $r7 = r1.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$State state>;

        $z0 = virtualinvoke r13.<com.android.server.location.AbstractLocationProvider$State: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r8 = r1.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$Listener listener>;

        if $r8 == null goto label5;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r10 = r1.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$Listener listener>;

        $r9 = r1.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$State state>;

        interfaceinvoke $r10.<com.android.server.location.AbstractLocationProvider$Listener: void onStateChanged(com.android.server.location.AbstractLocationProvider$State,com.android.server.location.AbstractLocationProvider$State)>($r9, r13);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label5;

     label4:
        $r11 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r11;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public abstract void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[]);

    protected com.android.internal.location.ProviderProperties getProperties()
    {
        com.android.server.location.AbstractLocationProvider r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.lang.Object $r2;
        com.android.server.location.AbstractLocationProvider$InternalState $r3;
        com.android.server.location.AbstractLocationProvider$State $r4;
        com.android.internal.location.ProviderProperties $r5;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        $r1 = r0.<com.android.server.location.AbstractLocationProvider: java.util.concurrent.atomic.AtomicReference mInternalState>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r3 = (com.android.server.location.AbstractLocationProvider$InternalState) $r2;

        $r4 = $r3.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$State state>;

        $r5 = $r4.<com.android.server.location.AbstractLocationProvider$State: com.android.internal.location.ProviderProperties properties>;

        return $r5;
    }

    protected java.util.Set getProviderPackages()
    {
        com.android.server.location.AbstractLocationProvider r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.lang.Object $r2;
        com.android.server.location.AbstractLocationProvider$InternalState $r3;
        com.android.server.location.AbstractLocationProvider$State $r4;
        java.util.Set $r5;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        $r1 = r0.<com.android.server.location.AbstractLocationProvider: java.util.concurrent.atomic.AtomicReference mInternalState>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r3 = (com.android.server.location.AbstractLocationProvider$InternalState) $r2;

        $r4 = $r3.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$State state>;

        $r5 = $r4.<com.android.server.location.AbstractLocationProvider$State: java.util.Set providerPackageNames>;

        return $r5;
    }

    public com.android.server.location.AbstractLocationProvider$State getState()
    {
        com.android.server.location.AbstractLocationProvider r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.lang.Object $r2;
        com.android.server.location.AbstractLocationProvider$InternalState $r3;
        com.android.server.location.AbstractLocationProvider$State $r4;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        $r1 = r0.<com.android.server.location.AbstractLocationProvider: java.util.concurrent.atomic.AtomicReference mInternalState>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r3 = (com.android.server.location.AbstractLocationProvider$InternalState) $r2;

        $r4 = $r3.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$State state>;

        return $r4;
    }

    protected boolean isAllowed()
    {
        com.android.server.location.AbstractLocationProvider r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.lang.Object $r2;
        com.android.server.location.AbstractLocationProvider$InternalState $r3;
        com.android.server.location.AbstractLocationProvider$State $r4;
        boolean $z0;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        $r1 = r0.<com.android.server.location.AbstractLocationProvider: java.util.concurrent.atomic.AtomicReference mInternalState>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r3 = (com.android.server.location.AbstractLocationProvider$InternalState) $r2;

        $r4 = $r3.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$State state>;

        $z0 = $r4.<com.android.server.location.AbstractLocationProvider$State: boolean allowed>;

        return $z0;
    }

    protected abstract void onExtraCommand(int, int, java.lang.String, android.os.Bundle);

    protected abstract void onSetRequest(com.android.internal.location.ProviderRequest);

    protected void reportLocation(android.location.Location)
    {
        com.android.server.location.AbstractLocationProvider r0;
        com.android.server.location.AbstractLocationProvider$Listener r1;
        long l0;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        com.android.server.location.AbstractLocationProvider$InternalState $r4;
        java.lang.Throwable $r5;
        android.location.Location r6;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        r6 := @parameter0: android.location.Location;

        $r2 = r0.<com.android.server.location.AbstractLocationProvider: java.util.concurrent.atomic.AtomicReference mInternalState>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r4 = (com.android.server.location.AbstractLocationProvider$InternalState) $r3;

        r1 = $r4.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$Listener listener>;

        if r1 == null goto label4;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        interfaceinvoke r1.<com.android.server.location.AbstractLocationProvider$Listener: void onReportLocation(android.location.Location)>(r6);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void reportLocation(java.util.List)
    {
        com.android.server.location.AbstractLocationProvider r0;
        com.android.server.location.AbstractLocationProvider$Listener r1;
        long l0;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        com.android.server.location.AbstractLocationProvider$InternalState $r4;
        java.lang.Throwable $r5;
        java.util.List r6;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        r6 := @parameter0: java.util.List;

        $r2 = r0.<com.android.server.location.AbstractLocationProvider: java.util.concurrent.atomic.AtomicReference mInternalState>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r4 = (com.android.server.location.AbstractLocationProvider$InternalState) $r3;

        r1 = $r4.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$Listener listener>;

        if r1 == null goto label4;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        interfaceinvoke r1.<com.android.server.location.AbstractLocationProvider$Listener: void onReportLocation(java.util.List)>(r6);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final void sendExtraCommand(int, int, java.lang.String, android.os.Bundle)
    {
        com.android.server.location.AbstractLocationProvider r0;
        int i0, i1;
        java.lang.String r1;
        android.os.Bundle r2;
        java.util.concurrent.Executor $r3;
        com.android.server.location.'-$$Lambda$emxC4DBjBtjrPCOadFmmcL-kgiw' $r4;
        java.lang.Integer $r5, $r6;
        com.android.internal.util.function.pooled.PooledRunnable $r7, $r8;
        com.android.internal.util.function.QuintConsumer r9;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.Bundle;

        $r3 = r0.<com.android.server.location.AbstractLocationProvider: java.util.concurrent.Executor mExecutor>;

        $r4 = <com.android.server.location._$$Lambda$emxC4DBjBtjrPCOadFmmcL_kgiw: com.android.server.location.'-$$Lambda$emxC4DBjBtjrPCOadFmmcL-kgiw' INSTANCE>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r9 = (com.android.internal.util.function.QuintConsumer) $r4;

        $r7 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledRunnable obtainRunnable(com.android.internal.util.function.QuintConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r9, r0, $r5, $r6, r1, r2);

        $r8 = interfaceinvoke $r7.<com.android.internal.util.function.pooled.PooledRunnable: com.android.internal.util.function.pooled.PooledRunnable recycleOnUse()>();

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r8);

        return;
    }

    protected void setAllowed(boolean)
    {
        com.android.server.location.AbstractLocationProvider r0;
        boolean z0;
        com.android.server.location._$$Lambda$AbstractLocationProvider$s_g7M1EFAxoisWC6LYYgN_hWTwc $r1;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        z0 := @parameter0: boolean;

        $r1 = new com.android.server.location._$$Lambda$AbstractLocationProvider$s_g7M1EFAxoisWC6LYYgN_hWTwc;

        specialinvoke $r1.<com.android.server.location._$$Lambda$AbstractLocationProvider$s_g7M1EFAxoisWC6LYYgN_hWTwc: void <init>(boolean)>(z0);

        specialinvoke r0.<com.android.server.location.AbstractLocationProvider: void setState(java.util.function.UnaryOperator)>($r1);

        return;
    }

    protected com.android.server.location.AbstractLocationProvider$State setListener(com.android.server.location.AbstractLocationProvider$Listener)
    {
        com.android.server.location.AbstractLocationProvider r0;
        com.android.server.location.AbstractLocationProvider$Listener r1;
        com.android.server.location._$$Lambda$AbstractLocationProvider$diUZq3K1KUpjC4EqB0SQY_fHHGM $r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        com.android.server.location.AbstractLocationProvider$InternalState $r5;
        com.android.server.location.AbstractLocationProvider$State $r6;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        r1 := @parameter0: com.android.server.location.AbstractLocationProvider$Listener;

        $r3 = r0.<com.android.server.location.AbstractLocationProvider: java.util.concurrent.atomic.AtomicReference mInternalState>;

        $r2 = new com.android.server.location._$$Lambda$AbstractLocationProvider$diUZq3K1KUpjC4EqB0SQY_fHHGM;

        specialinvoke $r2.<com.android.server.location._$$Lambda$AbstractLocationProvider$diUZq3K1KUpjC4EqB0SQY_fHHGM: void <init>(com.android.server.location.AbstractLocationProvider$Listener)>(r1);

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object updateAndGet(java.util.function.UnaryOperator)>($r2);

        $r5 = (com.android.server.location.AbstractLocationProvider$InternalState) $r4;

        $r6 = $r5.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$State state>;

        return $r6;
    }

    protected void setPackageNames(java.util.Set)
    {
        com.android.server.location.AbstractLocationProvider r0;
        java.util.Set r1;
        com.android.server.location._$$Lambda$AbstractLocationProvider$Cz0MzfhYL_KpWWW0XmxsZTNwnI0 $r2;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        r1 := @parameter0: java.util.Set;

        $r2 = new com.android.server.location._$$Lambda$AbstractLocationProvider$Cz0MzfhYL_KpWWW0XmxsZTNwnI0;

        specialinvoke $r2.<com.android.server.location._$$Lambda$AbstractLocationProvider$Cz0MzfhYL_KpWWW0XmxsZTNwnI0: void <init>(java.util.Set)>(r1);

        specialinvoke r0.<com.android.server.location.AbstractLocationProvider: void setState(java.util.function.UnaryOperator)>($r2);

        return;
    }

    protected void setProperties(com.android.internal.location.ProviderProperties)
    {
        com.android.server.location.AbstractLocationProvider r0;
        com.android.internal.location.ProviderProperties r1;
        com.android.server.location._$$Lambda$AbstractLocationProvider$wZCGZbIMAspHRG64AcKlNjhWJEk $r2;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        r1 := @parameter0: com.android.internal.location.ProviderProperties;

        $r2 = new com.android.server.location._$$Lambda$AbstractLocationProvider$wZCGZbIMAspHRG64AcKlNjhWJEk;

        specialinvoke $r2.<com.android.server.location._$$Lambda$AbstractLocationProvider$wZCGZbIMAspHRG64AcKlNjhWJEk: void <init>(com.android.internal.location.ProviderProperties)>(r1);

        specialinvoke r0.<com.android.server.location.AbstractLocationProvider: void setState(java.util.function.UnaryOperator)>($r2);

        return;
    }

    public final void setRequest(com.android.internal.location.ProviderRequest)
    {
        com.android.server.location.AbstractLocationProvider r0;
        com.android.internal.location.ProviderRequest r1;
        com.android.server.location.'-$$Lambda$hUPZkLaip7KhcHlSjfSfX2fzk_I' $r2;
        java.util.concurrent.Executor $r3;
        com.android.internal.util.function.pooled.PooledRunnable $r4, $r5;
        java.util.function.BiConsumer r6;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        r1 := @parameter0: com.android.internal.location.ProviderRequest;

        $r3 = r0.<com.android.server.location.AbstractLocationProvider: java.util.concurrent.Executor mExecutor>;

        $r2 = <com.android.server.location._$$Lambda$hUPZkLaip7KhcHlSjfSfX2fzk_I: com.android.server.location.'-$$Lambda$hUPZkLaip7KhcHlSjfSfX2fzk_I' INSTANCE>;

        r6 = (java.util.function.BiConsumer) $r2;

        $r4 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledRunnable obtainRunnable(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r6, r0, r1);

        $r5 = interfaceinvoke $r4.<com.android.internal.util.function.pooled.PooledRunnable: com.android.internal.util.function.pooled.PooledRunnable recycleOnUse()>();

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

        return;
    }

    protected void setState(com.android.server.location.AbstractLocationProvider$State)
    {
        com.android.server.location.AbstractLocationProvider r0;
        com.android.server.location.AbstractLocationProvider$InternalState r1;
        long l0;
        com.android.server.location._$$Lambda$AbstractLocationProvider$I29l5_Y_rKhaHygNa_fvF70mzA0 $r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        com.android.server.location.AbstractLocationProvider$State $r5, $r7, r10;
        boolean $z0;
        com.android.server.location.AbstractLocationProvider$Listener $r6, $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.location.AbstractLocationProvider;

        r10 := @parameter0: com.android.server.location.AbstractLocationProvider$State;

        $r3 = r0.<com.android.server.location.AbstractLocationProvider: java.util.concurrent.atomic.AtomicReference mInternalState>;

        $r2 = new com.android.server.location._$$Lambda$AbstractLocationProvider$I29l5_Y_rKhaHygNa_fvF70mzA0;

        specialinvoke $r2.<com.android.server.location._$$Lambda$AbstractLocationProvider$I29l5_Y_rKhaHygNa_fvF70mzA0: void <init>(com.android.server.location.AbstractLocationProvider$State)>(r10);

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndUpdate(java.util.function.UnaryOperator)>($r2);

        r1 = (com.android.server.location.AbstractLocationProvider$InternalState) $r4;

        $r5 = r1.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$State state>;

        $z0 = virtualinvoke r10.<com.android.server.location.AbstractLocationProvider$State: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r6 = r1.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$Listener listener>;

        if $r6 == null goto label5;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r8 = r1.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$Listener listener>;

        $r7 = r1.<com.android.server.location.AbstractLocationProvider$InternalState: com.android.server.location.AbstractLocationProvider$State state>;

        interfaceinvoke $r8.<com.android.server.location.AbstractLocationProvider$Listener: void onStateChanged(com.android.server.location.AbstractLocationProvider$State,com.android.server.location.AbstractLocationProvider$State)>($r7, r10);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label5;

     label4:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }
}
