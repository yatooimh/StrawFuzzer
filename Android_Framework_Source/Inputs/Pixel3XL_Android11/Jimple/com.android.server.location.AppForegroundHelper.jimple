public class com.android.server.location.AppForegroundHelper extends java.lang.Object
{
    private static final int FOREGROUND_IMPORTANCE_CUTOFF;
    private android.app.ActivityManager mActivityManager;
    private final android.content.Context mContext;
    private final java.util.concurrent.CopyOnWriteArrayList mListeners;

    public void <init>(android.content.Context)
    {
        com.android.server.location.AppForegroundHelper r0;
        android.content.Context r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: com.android.server.location.AppForegroundHelper;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.AppForegroundHelper: android.content.Context mContext> = r1;

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<com.android.server.location.AppForegroundHelper: java.util.concurrent.CopyOnWriteArrayList mListeners> = $r2;

        return;
    }

    private static boolean isForeground(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 > 125 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static void lambda$gltDhiWDJwfMNZ8gJdumXZH8_Hg(com.android.server.location.AppForegroundHelper, int, int)
    {
        com.android.server.location.AppForegroundHelper r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.location.AppForegroundHelper;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.location.AppForegroundHelper: void onAppForegroundChanged(int,int)>(i0, i1);

        return;
    }

    private void onAppForegroundChanged(int, int)
    {
        com.android.server.location.AppForegroundHelper r0;
        int i0, i1;
        boolean z0;
        android.os.Handler $r1;
        com.android.server.location._$$Lambda$AppForegroundHelper$7asxY_maANt1D_AUTchqbCjktH0 $r2;

        r0 := @this: com.android.server.location.AppForegroundHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = staticinvoke <com.android.server.location.AppForegroundHelper: boolean isForeground(int)>(i1);

        $r1 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r2 = new com.android.server.location._$$Lambda$AppForegroundHelper$7asxY_maANt1D_AUTchqbCjktH0;

        specialinvoke $r2.<com.android.server.location._$$Lambda$AppForegroundHelper$7asxY_maANt1D_AUTchqbCjktH0: void <init>(com.android.server.location.AppForegroundHelper,int,boolean)>(r0, i0, z0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void addListener(com.android.server.location.AppForegroundHelper$AppForegroundListener)
    {
        com.android.server.location.AppForegroundHelper r0;
        com.android.server.location.AppForegroundHelper$AppForegroundListener r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: com.android.server.location.AppForegroundHelper;

        r1 := @parameter0: com.android.server.location.AppForegroundHelper$AppForegroundListener;

        $r2 = r0.<com.android.server.location.AppForegroundHelper: java.util.concurrent.CopyOnWriteArrayList mListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public int getImportance(int)
    {
        com.android.server.location.AppForegroundHelper r0;
        long l0;
        android.app.ActivityManager $r1, $r2;
        java.lang.Throwable $r3, $r4;
        int i1, i2;
        boolean z0;

        r0 := @this: com.android.server.location.AppForegroundHelper;

        i1 := @parameter0: int;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.location.AppForegroundHelper: android.app.ActivityManager mActivityManager>;

        if $r1 == null goto label03;

     label02:
        z0 = 1;

        goto label04;

     label03:
        z0 = 0;

     label04:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z0);

        exitmonitor r0;

     label05:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        $r2 = r0.<com.android.server.location.AppForegroundHelper: android.app.ActivityManager mActivityManager>;

        i2 = virtualinvoke $r2.<android.app.ActivityManager: int getUidImportance(int)>(i1);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i2;

     label08:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

     label09:
        $r3 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean isAppForeground(int)
    {
        com.android.server.location.AppForegroundHelper r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.location.AppForegroundHelper;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.server.location.AppForegroundHelper: int getImportance(int)>(i0);

        $z0 = staticinvoke <com.android.server.location.AppForegroundHelper: boolean isForeground(int)>($i1);

        return $z0;
    }

    public void lambda$onAppForegroundChanged$0$AppForegroundHelper(int, boolean)
    {
        com.android.server.location.AppForegroundHelper r0;
        int i0;
        boolean z0, $z1;
        java.util.Iterator r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        java.lang.Object $r3;
        com.android.server.location.AppForegroundHelper$AppForegroundListener $r4;

        r0 := @this: com.android.server.location.AppForegroundHelper;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.location.AppForegroundHelper: java.util.concurrent.CopyOnWriteArrayList mListeners>;

        r1 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.location.AppForegroundHelper$AppForegroundListener) $r3;

        interfaceinvoke $r4.<com.android.server.location.AppForegroundHelper$AppForegroundListener: void onAppForegroundChanged(int,boolean)>(i0, z0);

        goto label1;

     label2:
        return;
    }

    public void onSystemReady()
    {
        com.android.server.location.AppForegroundHelper r0;
        android.app.ActivityManager r1, r6, r7;
        android.content.Context $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r5;
        com.android.server.location._$$Lambda$AppForegroundHelper$gltDhiWDJwfMNZ8gJdumXZH8_Hg r8;

        r0 := @this: com.android.server.location.AppForegroundHelper;

        entermonitor r0;

     label1:
        r6 = r0.<com.android.server.location.AppForegroundHelper: android.app.ActivityManager mActivityManager>;

     label2:
        if r6 == null goto label3;

        exitmonitor r0;

        return;

     label3:
        $r2 = r0.<com.android.server.location.AppForegroundHelper: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/ActivityManager;");

        r7 = (android.app.ActivityManager) $r3;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r7);

        r1 = (android.app.ActivityManager) r7;

        r0.<com.android.server.location.AppForegroundHelper: android.app.ActivityManager mActivityManager> = r1;

        r8 = new com.android.server.location._$$Lambda$AppForegroundHelper$gltDhiWDJwfMNZ8gJdumXZH8_Hg;

        specialinvoke r8.<com.android.server.location._$$Lambda$AppForegroundHelper$gltDhiWDJwfMNZ8gJdumXZH8_Hg: void <init>(com.android.server.location.AppForegroundHelper)>(r0);

        virtualinvoke r1.<android.app.ActivityManager: void addOnUidImportanceListener(android.app.ActivityManager$OnUidImportanceListener,int)>(r8, 125);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void removeListener(com.android.server.location.AppForegroundHelper$AppForegroundListener)
    {
        com.android.server.location.AppForegroundHelper r0;
        com.android.server.location.AppForegroundHelper$AppForegroundListener r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: com.android.server.location.AppForegroundHelper;

        r1 := @parameter0: com.android.server.location.AppForegroundHelper$AppForegroundListener;

        $r2 = r0.<com.android.server.location.AppForegroundHelper: java.util.concurrent.CopyOnWriteArrayList mListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.location.AppForegroundHelper: int FOREGROUND_IMPORTANCE_CUTOFF> = 125;

        return;
    }
}
