public class com.android.server.location.AppOpsHelper extends java.lang.Object
{
    private android.app.AppOpsManager mAppOps;
    private final android.content.Context mContext;
    private final java.util.concurrent.CopyOnWriteArrayList mListeners;

    public void <init>(android.content.Context)
    {
        com.android.server.location.AppOpsHelper r0;
        android.content.Context r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: com.android.server.location.AppOpsHelper;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.AppOpsHelper: android.content.Context mContext> = r1;

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<com.android.server.location.AppOpsHelper: java.util.concurrent.CopyOnWriteArrayList mListeners> = $r2;

        return;
    }

    static void access$000(com.android.server.location.AppOpsHelper, java.lang.String)
    {
        com.android.server.location.AppOpsHelper r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.location.AppOpsHelper;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.location.AppOpsHelper: void onAppOpChanged(java.lang.String)>(r1);

        return;
    }

    private boolean noteOpNoThrow(int, com.android.server.location.CallerIdentity)
    {
        com.android.server.location.AppOpsHelper r0;
        android.app.AppOpsManager r1, $r5;
        long l0;
        java.lang.String $r2, $r3, $r4;
        int $i1, i2, i3;
        java.lang.Throwable $r6, $r7;
        com.android.server.location.CallerIdentity r8;
        boolean z1, z2;

        r0 := @this: com.android.server.location.AppOpsHelper;

        i2 := @parameter0: int;

        r8 := @parameter1: com.android.server.location.CallerIdentity;

        entermonitor r0;

     label01:
        r1 = r0.<com.android.server.location.AppOpsHelper: android.app.AppOpsManager mAppOps>;

     label02:
        if r1 == null goto label03;

        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z1);

        exitmonitor r0;

     label05:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        $r5 = r0.<com.android.server.location.AppOpsHelper: android.app.AppOpsManager mAppOps>;

        $i1 = r8.<com.android.server.location.CallerIdentity: int uid>;

        $r4 = r8.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $r3 = r8.<com.android.server.location.CallerIdentity: java.lang.String featureId>;

        $r2 = r8.<com.android.server.location.CallerIdentity: java.lang.String listenerId>;

        i3 = virtualinvoke $r5.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String,java.lang.String,java.lang.String)>(i2, $i1, $r4, $r3, $r2);

     label07:
        if i3 != 0 goto label08;

        z2 = 1;

        goto label09;

     label08:
        z2 = 0;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z2;

     label10:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

     label11:
        $r6 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private void onAppOpChanged(java.lang.String)
    {
        com.android.server.location.AppOpsHelper r0;
        java.lang.String r1, $r8;
        boolean $z0, $z1;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        java.lang.Object $r3;
        com.android.server.location.AppOpsHelper$LocationAppOpListener $r4;
        java.lang.StringBuilder $r5;
        java.util.Iterator r10;

        r0 := @this: com.android.server.location.AppOpsHelper;

        r1 := @parameter0: java.lang.String;

        $z0 = <com.android.server.location.LocationManagerService: boolean D>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("location appop changed for ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocationManagerService", $r8);

     label1:
        $r2 = r0.<com.android.server.location.AppOpsHelper: java.util.concurrent.CopyOnWriteArrayList mListeners>;

        r10 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.location.AppOpsHelper$LocationAppOpListener) $r3;

        interfaceinvoke $r4.<com.android.server.location.AppOpsHelper$LocationAppOpListener: void onAppOpsChanged(java.lang.String)>(r1);

        goto label2;

     label3:
        return;
    }

    private boolean startLocationMonitoring(int, com.android.server.location.CallerIdentity)
    {
        com.android.server.location.AppOpsHelper r0;
        android.app.AppOpsManager r1, $r5;
        long l0;
        java.lang.String $r2, $r3, $r4;
        int $i1, i2, i3;
        java.lang.Throwable $r6, $r7;
        com.android.server.location.CallerIdentity r8;
        boolean z1, z2;

        r0 := @this: com.android.server.location.AppOpsHelper;

        i2 := @parameter0: int;

        r8 := @parameter1: com.android.server.location.CallerIdentity;

        entermonitor r0;

     label01:
        r1 = r0.<com.android.server.location.AppOpsHelper: android.app.AppOpsManager mAppOps>;

     label02:
        if r1 == null goto label03;

        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z1);

        exitmonitor r0;

     label05:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        $r5 = r0.<com.android.server.location.AppOpsHelper: android.app.AppOpsManager mAppOps>;

        $i1 = r8.<com.android.server.location.CallerIdentity: int uid>;

        $r4 = r8.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $r3 = r8.<com.android.server.location.CallerIdentity: java.lang.String featureId>;

        $r2 = r8.<com.android.server.location.CallerIdentity: java.lang.String listenerId>;

        i3 = virtualinvoke $r5.<android.app.AppOpsManager: int startOpNoThrow(int,int,java.lang.String,boolean,java.lang.String,java.lang.String)>(i2, $i1, $r4, 0, $r3, $r2);

     label07:
        if i3 != 0 goto label08;

        z2 = 1;

        goto label09;

     label08:
        z2 = 0;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z2;

     label10:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r6;

     label11:
        $r7 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private void stopLocationMonitoring(int, com.android.server.location.CallerIdentity)
    {
        com.android.server.location.AppOpsHelper r0;
        int i0, $i2;
        long l1;
        android.app.AppOpsManager $r1, $r4;
        java.lang.String $r2, $r3;
        java.lang.Throwable $r5, $r6;
        com.android.server.location.CallerIdentity r7;
        boolean z0;

        r0 := @this: com.android.server.location.AppOpsHelper;

        i0 := @parameter0: int;

        r7 := @parameter1: com.android.server.location.CallerIdentity;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.location.AppOpsHelper: android.app.AppOpsManager mAppOps>;

        if $r1 == null goto label03;

     label02:
        z0 = 1;

        goto label04;

     label03:
        z0 = 0;

     label04:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z0);

        exitmonitor r0;

     label05:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        $r4 = r0.<com.android.server.location.AppOpsHelper: android.app.AppOpsManager mAppOps>;

        $i2 = r7.<com.android.server.location.CallerIdentity: int uid>;

        $r3 = r7.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $r2 = r7.<com.android.server.location.CallerIdentity: java.lang.String featureId>;

        virtualinvoke $r4.<android.app.AppOpsManager: void finishOp(int,int,java.lang.String,java.lang.String)>(i0, $i2, $r3, $r2);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label08:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void addListener(com.android.server.location.AppOpsHelper$LocationAppOpListener)
    {
        com.android.server.location.AppOpsHelper r0;
        com.android.server.location.AppOpsHelper$LocationAppOpListener r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: com.android.server.location.AppOpsHelper;

        r1 := @parameter0: com.android.server.location.AppOpsHelper$LocationAppOpListener;

        $r2 = r0.<com.android.server.location.AppOpsHelper: java.util.concurrent.CopyOnWriteArrayList mListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public boolean checkLocationAccess(com.android.server.location.CallerIdentity)
    {
        com.android.server.location.AppOpsHelper r0;
        android.app.AppOpsManager r1, $r2;
        long l0;
        int i1, $i2, $i3, $i4;
        java.lang.String $r3;
        java.lang.Throwable $r4, $r5;
        com.android.server.location.CallerIdentity r6;
        boolean z1, z2;

        r0 := @this: com.android.server.location.AppOpsHelper;

        r6 := @parameter0: com.android.server.location.CallerIdentity;

        entermonitor r0;

     label01:
        r1 = r0.<com.android.server.location.AppOpsHelper: android.app.AppOpsManager mAppOps>;

     label02:
        if r1 == null goto label03;

        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z1);

        exitmonitor r0;

     label05:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        $r2 = r0.<com.android.server.location.AppOpsHelper: android.app.AppOpsManager mAppOps>;

        $i2 = r6.<com.android.server.location.CallerIdentity: int permissionLevel>;

        $i3 = staticinvoke <com.android.server.location.CallerIdentity: int asAppOp(int)>($i2);

        $i4 = r6.<com.android.server.location.CallerIdentity: int uid>;

        $r3 = r6.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        i1 = virtualinvoke $r2.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>($i3, $i4, $r3);

     label07:
        if i1 != 0 goto label08;

        z2 = 1;

        goto label09;

     label08:
        z2 = 0;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z2;

     label10:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

     label11:
        $r5 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public boolean noteLocationAccess(com.android.server.location.CallerIdentity)
    {
        com.android.server.location.AppOpsHelper r0;
        com.android.server.location.CallerIdentity r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.location.AppOpsHelper;

        r1 := @parameter0: com.android.server.location.CallerIdentity;

        $i0 = r1.<com.android.server.location.CallerIdentity: int permissionLevel>;

        $i1 = staticinvoke <com.android.server.location.CallerIdentity: int asAppOp(int)>($i0);

        $z0 = specialinvoke r0.<com.android.server.location.AppOpsHelper: boolean noteOpNoThrow(int,com.android.server.location.CallerIdentity)>($i1, r1);

        return $z0;
    }

    public boolean noteMockLocationAccess(com.android.server.location.CallerIdentity)
    {
        com.android.server.location.AppOpsHelper r0;
        android.app.AppOpsManager r1, $r5;
        long l0;
        int i1, $i2;
        java.lang.String $r2, $r3, $r4;
        java.lang.Throwable $r6, $r7;
        com.android.server.location.CallerIdentity r8;
        boolean z1, z2;

        r0 := @this: com.android.server.location.AppOpsHelper;

        r8 := @parameter0: com.android.server.location.CallerIdentity;

        entermonitor r0;

     label01:
        r1 = r0.<com.android.server.location.AppOpsHelper: android.app.AppOpsManager mAppOps>;

     label02:
        if r1 == null goto label03;

        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z1);

        exitmonitor r0;

     label05:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        $r5 = r0.<com.android.server.location.AppOpsHelper: android.app.AppOpsManager mAppOps>;

        $i2 = r8.<com.android.server.location.CallerIdentity: int uid>;

        $r4 = r8.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $r3 = r8.<com.android.server.location.CallerIdentity: java.lang.String featureId>;

        $r2 = r8.<com.android.server.location.CallerIdentity: java.lang.String listenerId>;

        i1 = virtualinvoke $r5.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String,java.lang.String,java.lang.String)>(58, $i2, $r4, $r3, $r2);

     label07:
        if i1 != 0 goto label08;

        z2 = 1;

        goto label09;

     label08:
        z2 = 0;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z2;

     label10:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

     label11:
        $r6 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void onSystemReady()
    {
        com.android.server.location.AppOpsHelper r0;
        com.android.server.location.AppOpsHelper$1 r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r5;
        android.app.AppOpsManager r6, r7, r8;

        r0 := @this: com.android.server.location.AppOpsHelper;

        entermonitor r0;

     label1:
        r6 = r0.<com.android.server.location.AppOpsHelper: android.app.AppOpsManager mAppOps>;

     label2:
        if r6 == null goto label3;

        exitmonitor r0;

        return;

     label3:
        $r2 = r0.<com.android.server.location.AppOpsHelper: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        r7 = (android.app.AppOpsManager) $r3;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r7);

        r8 = (android.app.AppOpsManager) r7;

        r0.<com.android.server.location.AppOpsHelper: android.app.AppOpsManager mAppOps> = r8;

        r1 = new com.android.server.location.AppOpsHelper$1;

        specialinvoke r1.<com.android.server.location.AppOpsHelper$1: void <init>(com.android.server.location.AppOpsHelper)>(r0);

        virtualinvoke r8.<android.app.AppOpsManager: void startWatchingMode(int,java.lang.String,int,android.app.AppOpsManager$OnOpChangedListener)>(0, null, 1, r1);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void removeListener(com.android.server.location.AppOpsHelper$LocationAppOpListener)
    {
        com.android.server.location.AppOpsHelper r0;
        com.android.server.location.AppOpsHelper$LocationAppOpListener r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: com.android.server.location.AppOpsHelper;

        r1 := @parameter0: com.android.server.location.AppOpsHelper$LocationAppOpListener;

        $r2 = r0.<com.android.server.location.AppOpsHelper: java.util.concurrent.CopyOnWriteArrayList mListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public boolean startHighPowerLocationMonitoring(com.android.server.location.CallerIdentity)
    {
        com.android.server.location.AppOpsHelper r0;
        com.android.server.location.CallerIdentity r1;
        boolean $z0;

        r0 := @this: com.android.server.location.AppOpsHelper;

        r1 := @parameter0: com.android.server.location.CallerIdentity;

        $z0 = specialinvoke r0.<com.android.server.location.AppOpsHelper: boolean startLocationMonitoring(int,com.android.server.location.CallerIdentity)>(42, r1);

        return $z0;
    }

    public boolean startLocationMonitoring(com.android.server.location.CallerIdentity)
    {
        com.android.server.location.AppOpsHelper r0;
        com.android.server.location.CallerIdentity r1;
        boolean $z0;

        r0 := @this: com.android.server.location.AppOpsHelper;

        r1 := @parameter0: com.android.server.location.CallerIdentity;

        $z0 = specialinvoke r0.<com.android.server.location.AppOpsHelper: boolean startLocationMonitoring(int,com.android.server.location.CallerIdentity)>(41, r1);

        return $z0;
    }

    public void stopHighPowerLocationMonitoring(com.android.server.location.CallerIdentity)
    {
        com.android.server.location.AppOpsHelper r0;
        com.android.server.location.CallerIdentity r1;

        r0 := @this: com.android.server.location.AppOpsHelper;

        r1 := @parameter0: com.android.server.location.CallerIdentity;

        specialinvoke r0.<com.android.server.location.AppOpsHelper: void stopLocationMonitoring(int,com.android.server.location.CallerIdentity)>(42, r1);

        return;
    }

    public void stopLocationMonitoring(com.android.server.location.CallerIdentity)
    {
        com.android.server.location.AppOpsHelper r0;
        com.android.server.location.CallerIdentity r1;

        r0 := @this: com.android.server.location.AppOpsHelper;

        r1 := @parameter0: com.android.server.location.CallerIdentity;

        specialinvoke r0.<com.android.server.location.AppOpsHelper: void stopLocationMonitoring(int,com.android.server.location.CallerIdentity)>(41, r1);

        return;
    }
}
