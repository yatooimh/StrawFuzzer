public class com.android.server.location.ComprehensiveCountryDetector extends com.android.server.location.CountryDetectorBase
{
    static final boolean DEBUG;
    private static final long LOCATION_REFRESH_INTERVAL;
    private static final int MAX_LENGTH_DEBUG_LOGS;
    private static final java.lang.String TAG;
    private int mCountServiceStateChanges;
    private android.location.Country mCountry;
    private android.location.Country mCountryFromLocation;
    private final java.util.concurrent.ConcurrentLinkedQueue mDebugLogs;
    private android.location.Country mLastCountryAddedToLogs;
    private android.location.CountryListener mLocationBasedCountryDetectionListener;
    protected com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector;
    protected java.util.Timer mLocationRefreshTimer;
    private final java.lang.Object mObject;
    private android.telephony.PhoneStateListener mPhoneStateListener;
    private long mStartTime;
    private long mStopTime;
    private boolean mStopped;
    private final android.telephony.TelephonyManager mTelephonyManager;
    private int mTotalCountServiceStateChanges;
    private long mTotalTime;

    public void <init>(android.content.Context)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.content.Context r1;
        java.util.concurrent.ConcurrentLinkedQueue $r2;
        java.lang.Object $r3, $r5;
        com.android.server.location.ComprehensiveCountryDetector$1 $r4;
        android.telephony.TelephonyManager $r6;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.location.CountryDetectorBase: void <init>(android.content.Context)>(r1);

        r0.<com.android.server.location.ComprehensiveCountryDetector: boolean mStopped> = 0;

        $r2 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.concurrent.ConcurrentLinkedQueue mDebugLogs> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: java.lang.Object mObject> = $r3;

        $r4 = new com.android.server.location.ComprehensiveCountryDetector$1;

        specialinvoke $r4.<com.android.server.location.ComprehensiveCountryDetector$1: void <init>(com.android.server.location.ComprehensiveCountryDetector)>(r0);

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mLocationBasedCountryDetectionListener> = $r4;

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r6 = (android.telephony.TelephonyManager) $r5;

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.TelephonyManager mTelephonyManager> = $r6;

        return;
    }

    static android.location.Country access$002(com.android.server.location.ComprehensiveCountryDetector, android.location.Country)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.Country r1;

        r0 := @parameter0: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter1: android.location.Country;

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mCountryFromLocation> = r1;

        return r1;
    }

    static android.location.Country access$100(com.android.server.location.ComprehensiveCountryDetector, boolean, boolean)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        boolean z0, z1;
        android.location.Country $r1;

        r0 := @parameter0: com.android.server.location.ComprehensiveCountryDetector;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country detectCountry(boolean,boolean)>(z0, z1);

        return $r1;
    }

    static void access$200(com.android.server.location.ComprehensiveCountryDetector)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;

        r0 := @parameter0: com.android.server.location.ComprehensiveCountryDetector;

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void stopLocationBasedDetector()>();

        return;
    }

    static int access$308(com.android.server.location.ComprehensiveCountryDetector)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        int i0, $i1;

        r0 := @parameter0: com.android.server.location.ComprehensiveCountryDetector;

        i0 = r0.<com.android.server.location.ComprehensiveCountryDetector: int mCountServiceStateChanges>;

        $i1 = i0 + 1;

        r0.<com.android.server.location.ComprehensiveCountryDetector: int mCountServiceStateChanges> = $i1;

        return i0;
    }

    static int access$408(com.android.server.location.ComprehensiveCountryDetector)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        int i0, $i1;

        r0 := @parameter0: com.android.server.location.ComprehensiveCountryDetector;

        i0 = r0.<com.android.server.location.ComprehensiveCountryDetector: int mTotalCountServiceStateChanges>;

        $i1 = i0 + 1;

        r0.<com.android.server.location.ComprehensiveCountryDetector: int mTotalCountServiceStateChanges> = $i1;

        return i0;
    }

    static boolean access$500(com.android.server.location.ComprehensiveCountryDetector)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.ComprehensiveCountryDetector;

        $z0 = specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: boolean isNetworkCountryCodeAvailable()>();

        return $z0;
    }

    private void addToLogs(android.location.Country)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        java.lang.Object r1;
        android.location.Country $r2, $r7, r9;
        java.util.concurrent.ConcurrentLinkedQueue $r3, $r4, $r5;
        int $i0;
        boolean $z1;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r9 := @parameter0: android.location.Country;

        if r9 != null goto label1;

        return;

     label1:
        r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.lang.Object mObject>;

        entermonitor r1;

     label2:
        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mLastCountryAddedToLogs>;

        if $r2 == null goto label4;

        $r7 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mLastCountryAddedToLogs>;

        $z1 = virtualinvoke $r7.<android.location.Country: boolean equals(java.lang.Object)>(r9);

        if $z1 == 0 goto label4;

        exitmonitor r1;

     label3:
        return;

     label4:
        r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mLastCountryAddedToLogs> = r9;

        exitmonitor r1;

     label5:
        $r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.concurrent.ConcurrentLinkedQueue mDebugLogs>;

        $i0 = virtualinvoke $r3.<java.util.concurrent.ConcurrentLinkedQueue: int size()>();

        if $i0 < 20 goto label6;

        $r5 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.concurrent.ConcurrentLinkedQueue mDebugLogs>;

        virtualinvoke $r5.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();

     label6:
        $r4 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.concurrent.ConcurrentLinkedQueue mDebugLogs>;

        virtualinvoke $r4.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>(r9);

        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void cancelLocationRefresh()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        java.util.Timer $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.Timer mLocationRefreshTimer>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.Timer mLocationRefreshTimer>;

        virtualinvoke $r3.<java.util.Timer: void cancel()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.Timer mLocationRefreshTimer> = null;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private android.location.Country detectCountry(boolean, boolean)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        boolean z0, z1;
        android.location.Country r1, r2, $r3, $r4, r5;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 = specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getCountry()>();

        r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mCountry>;

        r5 = r2;

        if r2 == null goto label1;

        $r3 = new android.location.Country;

        $r4 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mCountry>;

        specialinvoke $r3.<android.location.Country: void <init>(android.location.Country)>($r4);

        r5 = $r3;

     label1:
        virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void runAfterDetectionAsync(android.location.Country,android.location.Country,boolean,boolean)>(r5, r1, z0, z1);

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mCountry> = r1;

        return r1;
    }

    private android.location.Country getCountry()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.Country r1, r2, r3, r4;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getNetworkBasedCountry()>();

        r2 = r1;

        if r1 != null goto label1;

        r2 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getLastKnownLocationBasedCountry()>();

     label1:
        r3 = r2;

        if r2 != null goto label2;

        r3 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getSimBasedCountry()>();

     label2:
        r4 = r3;

        if r3 != null goto label3;

        r4 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getLocaleCountry()>();

     label3:
        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void addToLogs(android.location.Country)>(r4);

        return r4;
    }

    private boolean isNetworkCountryCodeAvailable()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        int i0;
        android.telephony.TelephonyManager $r1;
        boolean z0;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.TelephonyManager mTelephonyManager>;

        i0 = virtualinvoke $r1.<android.telephony.TelephonyManager: int getPhoneType()>();

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void notifyIfCountryChanged(android.location.Country, android.location.Country)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.Country r1, r2;
        android.location.CountryListener $r3;
        boolean $z0;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter0: android.location.Country;

        r2 := @parameter1: android.location.Country;

        if r2 == null goto label2;

        $r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mListener>;

        if $r3 == null goto label2;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.location.Country: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

     label1:
        virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void notifyListener(android.location.Country)>(r2);

     label2:
        return;
    }

    private void scheduleLocationRefresh()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        java.util.Timer r1, r3;
        java.lang.Throwable $r2;
        com.android.server.location.ComprehensiveCountryDetector$3 r4;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        entermonitor r0;

     label1:
        r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.Timer mLocationRefreshTimer>;

     label2:
        if r3 == null goto label3;

        exitmonitor r0;

        return;

     label3:
        r1 = new java.util.Timer;

        specialinvoke r1.<java.util.Timer: void <init>()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.Timer mLocationRefreshTimer> = r1;

        r4 = new com.android.server.location.ComprehensiveCountryDetector$3;

        specialinvoke r4.<com.android.server.location.ComprehensiveCountryDetector$3: void <init>(com.android.server.location.ComprehensiveCountryDetector)>(r0);

        virtualinvoke r1.<java.util.Timer: void schedule(java.util.TimerTask,long)>(r4, 86400000L);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void startLocationBasedDetector(android.location.CountryListener)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        com.android.server.location.CountryDetectorBase $r1, r5, r6;
        java.lang.Throwable $r3;
        android.location.CountryListener r4;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r4 := @parameter0: android.location.CountryListener;

        entermonitor r0;

     label1:
        r5 = r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector>;

     label2:
        if r5 == null goto label3;

        exitmonitor r0;

        return;

     label3:
        r6 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase createLocationBasedCountryDetector()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector> = r6;

        virtualinvoke r6.<com.android.server.location.CountryDetectorBase: void setCountryListener(android.location.CountryListener)>(r4);

        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector>;

        virtualinvoke $r1.<com.android.server.location.CountryDetectorBase: android.location.Country detectCountry()>();

     label4:
        exitmonitor r0;

        return;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void stopLocationBasedDetector()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        com.android.server.location.CountryDetectorBase $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector>;

        virtualinvoke $r3.<com.android.server.location.CountryDetectorBase: void stop()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector> = null;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void addPhoneStateListener()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.telephony.PhoneStateListener $r1;
        android.telephony.TelephonyManager $r2;
        java.lang.Throwable $r3;
        com.android.server.location.ComprehensiveCountryDetector$4 r4;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.PhoneStateListener mPhoneStateListener>;

        if $r1 != null goto label2;

        r4 = new com.android.server.location.ComprehensiveCountryDetector$4;

        specialinvoke r4.<com.android.server.location.ComprehensiveCountryDetector$4: void <init>(com.android.server.location.ComprehensiveCountryDetector)>(r0);

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.PhoneStateListener mPhoneStateListener> = r4;

        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.TelephonyManager mTelephonyManager>;

        virtualinvoke $r2.<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>(r4, 1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected com.android.server.location.CountryDetectorBase createLocationBasedCountryDetector()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        com.android.server.location.LocationBasedCountryDetector $r1;
        android.content.Context $r2;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r1 = new com.android.server.location.LocationBasedCountryDetector;

        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.content.Context mContext>;

        specialinvoke $r1.<com.android.server.location.LocationBasedCountryDetector: void <init>(android.content.Context)>($r2);

        return $r1;
    }

    public android.location.Country detectCountry()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        boolean $z0, $z1;
        android.location.Country $r1;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $z0 = r0.<com.android.server.location.ComprehensiveCountryDetector: boolean mStopped>;

        $z1 = $z0 ^ 1;

        $r1 = specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country detectCountry(boolean,boolean)>(0, $z1);

        return $r1;
    }

    protected android.location.Country getLastKnownLocationBasedCountry()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.Country $r1;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mCountryFromLocation>;

        return $r1;
    }

    protected android.location.Country getLocaleCountry()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        java.util.Locale r1;
        android.location.Country $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        if r1 == null goto label1;

        $r2 = new android.location.Country;

        $r3 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        specialinvoke $r2.<android.location.Country: void <init>(java.lang.String,int)>($r3, 3);

        return $r2;

     label1:
        return null;
    }

    protected android.location.Country getNetworkBasedCountry()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        java.lang.String r1;
        boolean $z0, $z1;
        android.telephony.TelephonyManager $r2;
        android.location.Country $r3;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $z0 = specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: boolean isNetworkCountryCodeAvailable()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.TelephonyManager mTelephonyManager>;

        r1 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label1;

        $r3 = new android.location.Country;

        specialinvoke $r3.<android.location.Country: void <init>(java.lang.String,int)>(r1, 0);

        return $r3;

     label1:
        return null;
    }

    protected android.location.Country getSimBasedCountry()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        java.lang.String r1;
        android.telephony.TelephonyManager $r2;
        boolean $z0;
        android.location.Country $r3;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.TelephonyManager mTelephonyManager>;

        r1 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r3 = new android.location.Country;

        specialinvoke $r3.<android.location.Country: void <init>(java.lang.String,int)>(r1, 2);

        return $r3;

     label1:
        return null;
    }

    protected boolean isAirplaneModeOff()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.content.ContentResolver r1;
        android.content.Context $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z0 = 0;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "airplane_mode_on", 0);

        if $i0 != 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    protected boolean isGeoCoderImplemented()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        boolean $z0;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $z0 = staticinvoke <android.location.Geocoder: boolean isPresent()>();

        return $z0;
    }

    protected void removePhoneStateListener()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.telephony.PhoneStateListener $r2, $r3;
        android.telephony.TelephonyManager $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.PhoneStateListener mPhoneStateListener>;

        if $r2 == null goto label2;

        $r4 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.TelephonyManager mTelephonyManager>;

        $r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.PhoneStateListener mPhoneStateListener>;

        virtualinvoke $r4.<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>($r3, 0);

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.PhoneStateListener mPhoneStateListener> = null;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void runAfterDetection(android.location.Country, android.location.Country, boolean, boolean)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.Country r1, r2;
        boolean z0, z1, $z2, $z3;
        int $i0, $i1;
        android.location.CountryListener $r3, $r4;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter0: android.location.Country;

        r2 := @parameter1: android.location.Country;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void notifyIfCountryChanged(android.location.Country,android.location.Country)>(r1, r2);

     label1:
        if z1 == 0 goto label3;

        if r2 == null goto label2;

        $i1 = virtualinvoke r2.<android.location.Country: int getSource()>();

        if $i1 <= 1 goto label3;

     label2:
        $z2 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: boolean isAirplaneModeOff()>();

        if $z2 == 0 goto label3;

        $r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mListener>;

        if $r3 == null goto label3;

        $z3 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: boolean isGeoCoderImplemented()>();

        if $z3 == 0 goto label3;

        $r4 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mLocationBasedCountryDetectionListener>;

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void startLocationBasedDetector(android.location.CountryListener)>($r4);

     label3:
        if r2 == null goto label5;

        $i0 = virtualinvoke r2.<android.location.Country: int getSource()>();

        if $i0 < 1 goto label4;

        goto label5;

     label4:
        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void cancelLocationRefresh()>();

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void stopLocationBasedDetector()>();

        goto label6;

     label5:
        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void scheduleLocationRefresh()>();

     label6:
        return;
    }

    protected void runAfterDetectionAsync(android.location.Country, android.location.Country, boolean, boolean)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.Country r1, r2;
        boolean z0, z1;
        com.android.server.location.ComprehensiveCountryDetector$2 $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter0: android.location.Country;

        r2 := @parameter1: android.location.Country;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r4 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.os.Handler mHandler>;

        $r3 = new com.android.server.location.ComprehensiveCountryDetector$2;

        specialinvoke $r3.<com.android.server.location.ComprehensiveCountryDetector$2: void <init>(com.android.server.location.ComprehensiveCountryDetector,android.location.Country,android.location.Country,boolean,boolean)>(r0, r1, r2, z0, z1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void setCountryListener(android.location.CountryListener)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.CountryListener r1, r2, $r3;
        long l0, $l1, $l2, $l3;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter0: android.location.CountryListener;

        r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mListener>;

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mListener> = r1;

        $r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mListener>;

        if $r3 != null goto label1;

        virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void removePhoneStateListener()>();

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void stopLocationBasedDetector()>();

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void cancelLocationRefresh()>();

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: long mStopTime> = l0;

        $l2 = r0.<com.android.server.location.ComprehensiveCountryDetector: long mTotalTime>;

        $l3 = $l2 + l0;

        r0.<com.android.server.location.ComprehensiveCountryDetector: long mTotalTime> = $l3;

        goto label2;

     label1:
        if r2 != null goto label2;

        virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void addPhoneStateListener()>();

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country detectCountry(boolean,boolean)>(0, 1);

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: long mStartTime> = $l1;

        r0.<com.android.server.location.ComprehensiveCountryDetector: long mStopTime> = 0L;

        r0.<com.android.server.location.ComprehensiveCountryDetector: int mCountServiceStateChanges> = 0;

     label2:
        return;
    }

    public void stop()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("CountryDetector", "Stop the detector.");

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void cancelLocationRefresh()>();

        virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void removePhoneStateListener()>();

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void stopLocationBasedDetector()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mListener> = null;

        r0.<com.android.server.location.ComprehensiveCountryDetector: boolean mStopped> = 1;

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        long l0, $l1, $l3, $l4, $l5, $l8, $l9, $l10, l11;
        android.location.Country r2;
        java.lang.StringBuilder $r4, $r6, $r12, $r18, $r24, $r30, $r41, $r47;
        byte $b2;
        java.lang.String $r10, $r16, $r22, $r28, $r34, $r39, $r43, $r45, $r51;
        int $i6, $i7;
        java.util.concurrent.ConcurrentLinkedQueue $r37;
        java.lang.Object $r40;
        java.util.Iterator r59;
        boolean $z0;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l11 = 0L;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ComprehensiveCountryDetector{");

        $l1 = r0.<com.android.server.location.ComprehensiveCountryDetector: long mStopTime>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $l10 = r0.<com.android.server.location.ComprehensiveCountryDetector: long mStartTime>;

        l11 = l0 - $l10;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeRunning=");

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l11);

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r51 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lastRunTimeLength=");

        $l4 = r0.<com.android.server.location.ComprehensiveCountryDetector: long mStopTime>;

        $l3 = r0.<com.android.server.location.ComprehensiveCountryDetector: long mStartTime>;

        $l5 = $l4 - $l3;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label2:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("totalCountServiceStateChanges=");

        $i6 = r0.<com.android.server.location.ComprehensiveCountryDetector: int mTotalCountServiceStateChanges>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("currentCountServiceStateChanges=");

        $i7 = r0.<com.android.server.location.ComprehensiveCountryDetector: int mCountServiceStateChanges>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("totalTime=");

        $l8 = r0.<com.android.server.location.ComprehensiveCountryDetector: long mTotalTime>;

        $l9 = $l8 + l11;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("currentTime=");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("countries=");

        $r37 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.concurrent.ConcurrentLinkedQueue mDebugLogs>;

        r59 = virtualinvoke $r37.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r40 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.location.Country) $r40;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n   ");

        $r43 = virtualinvoke r2.<android.location.Country: java.lang.String toString()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        goto label3;

     label4:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r39 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r39;
    }

    public static void <clinit>()
    {
        <com.android.server.location.ComprehensiveCountryDetector: java.lang.String TAG> = "CountryDetector";

        <com.android.server.location.ComprehensiveCountryDetector: int MAX_LENGTH_DEBUG_LOGS> = 20;

        <com.android.server.location.ComprehensiveCountryDetector: long LOCATION_REFRESH_INTERVAL> = 86400000L;

        <com.android.server.location.ComprehensiveCountryDetector: boolean DEBUG> = 0;

        return;
    }
}
