public class com.android.server.location.ContextHubClientBroker extends android.hardware.location.IContextHubClient$Stub implements android.os.IBinder$DeathRecipient
{
    private static final java.lang.String TAG;
    private final android.hardware.location.ContextHubInfo mAttachedContextHubInfo;
    private android.hardware.location.IContextHubClientCallback mCallbackInterface;
    private final com.android.server.location.ContextHubClientManager mClientManager;
    private final android.content.Context mContext;
    private final android.hardware.contexthub.V1_0.IContexthub mContextHubProxy;
    private final boolean mHasAccessContextHubPermission;
    private final short mHostEndPointId;
    private java.util.concurrent.atomic.AtomicBoolean mIsPendingIntentCancelled;
    private final java.lang.String mPackage;
    private final com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest;
    private boolean mRegistered;

    void <init>(android.content.Context, android.hardware.contexthub.V1_0.IContexthub, com.android.server.location.ContextHubClientManager, android.hardware.location.ContextHubInfo, short, android.app.PendingIntent, long)
    {
        com.android.server.location.ContextHubClientBroker r0;
        android.content.Context r1;
        android.hardware.contexthub.V1_0.IContexthub r2;
        com.android.server.location.ContextHubClientManager r3;
        android.hardware.location.ContextHubInfo r4;
        short s0, $s2;
        android.app.PendingIntent r5;
        long l1;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        com.android.server.location.ContextHubClientBroker$PendingIntentRequest $r7;
        java.lang.String $r8;
        int $i3;
        boolean z0;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.hardware.contexthub.V1_0.IContexthub;

        r3 := @parameter2: com.android.server.location.ContextHubClientManager;

        r4 := @parameter3: android.hardware.location.ContextHubInfo;

        s0 := @parameter4: short;

        r5 := @parameter5: android.app.PendingIntent;

        l1 := @parameter6: long;

        specialinvoke r0.<android.hardware.location.IContextHubClient$Stub: void <init>()>();

        r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.IContextHubClientCallback mCallbackInterface> = null;

        z0 = 1;

        r0.<com.android.server.location.ContextHubClientBroker: boolean mRegistered> = 1;

        $r6 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.server.location.ContextHubClientBroker: java.util.concurrent.atomic.AtomicBoolean mIsPendingIntentCancelled> = $r6;

        r0.<com.android.server.location.ContextHubClientBroker: android.content.Context mContext> = r1;

        r0.<com.android.server.location.ContextHubClientBroker: android.hardware.contexthub.V1_0.IContexthub mContextHubProxy> = r2;

        r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientManager mClientManager> = r3;

        r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.ContextHubInfo mAttachedContextHubInfo> = r4;

        $s2 = (short) s0;

        r0.<com.android.server.location.ContextHubClientBroker: short mHostEndPointId> = $s2;

        $r7 = new com.android.server.location.ContextHubClientBroker$PendingIntentRequest;

        specialinvoke $r7.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: void <init>(com.android.server.location.ContextHubClientBroker,android.app.PendingIntent,long)>(r0, r5, l1);

        r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest> = $r7;

        $r8 = virtualinvoke r5.<android.app.PendingIntent: java.lang.String getCreatorPackage()>();

        r0.<com.android.server.location.ContextHubClientBroker: java.lang.String mPackage> = $r8;

        $i3 = virtualinvoke r1.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.ACCESS_CONTEXT_HUB");

        if $i3 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<com.android.server.location.ContextHubClientBroker: boolean mHasAccessContextHubPermission> = z0;

        return;
    }

    void <init>(android.content.Context, android.hardware.contexthub.V1_0.IContexthub, com.android.server.location.ContextHubClientManager, android.hardware.location.ContextHubInfo, short, android.hardware.location.IContextHubClientCallback)
    {
        com.android.server.location.ContextHubClientBroker r0;
        android.content.Context r1, $r8;
        android.hardware.contexthub.V1_0.IContexthub r2;
        com.android.server.location.ContextHubClientManager r3;
        android.hardware.location.ContextHubInfo r4;
        short s0, $s1;
        android.hardware.location.IContextHubClientCallback r5;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        com.android.server.location.ContextHubClientBroker$PendingIntentRequest $r7;
        android.content.pm.PackageManager $r9;
        int $i2, $i3;
        java.lang.String $r10;
        boolean z0;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.hardware.contexthub.V1_0.IContexthub;

        r3 := @parameter2: com.android.server.location.ContextHubClientManager;

        r4 := @parameter3: android.hardware.location.ContextHubInfo;

        s0 := @parameter4: short;

        r5 := @parameter5: android.hardware.location.IContextHubClientCallback;

        specialinvoke r0.<android.hardware.location.IContextHubClient$Stub: void <init>()>();

        r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.IContextHubClientCallback mCallbackInterface> = null;

        z0 = 1;

        r0.<com.android.server.location.ContextHubClientBroker: boolean mRegistered> = 1;

        $r6 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.server.location.ContextHubClientBroker: java.util.concurrent.atomic.AtomicBoolean mIsPendingIntentCancelled> = $r6;

        r0.<com.android.server.location.ContextHubClientBroker: android.content.Context mContext> = r1;

        r0.<com.android.server.location.ContextHubClientBroker: android.hardware.contexthub.V1_0.IContexthub mContextHubProxy> = r2;

        r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientManager mClientManager> = r3;

        r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.ContextHubInfo mAttachedContextHubInfo> = r4;

        $s1 = (short) s0;

        r0.<com.android.server.location.ContextHubClientBroker: short mHostEndPointId> = $s1;

        r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.IContextHubClientCallback mCallbackInterface> = r5;

        $r7 = new com.android.server.location.ContextHubClientBroker$PendingIntentRequest;

        specialinvoke $r7.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: void <init>(com.android.server.location.ContextHubClientBroker)>(r0);

        r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest> = $r7;

        $r8 = r0.<com.android.server.location.ContextHubClientBroker: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r10 = virtualinvoke $r9.<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>($i2);

        r0.<com.android.server.location.ContextHubClientBroker: java.lang.String mPackage> = $r10;

        $i3 = virtualinvoke r1.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.ACCESS_CONTEXT_HUB");

        if $i3 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<com.android.server.location.ContextHubClientBroker: boolean mHasAccessContextHubPermission> = z0;

        return;
    }

    private android.content.Intent createIntent(int)
    {
        com.android.server.location.ContextHubClientBroker r0;
        int i0;
        android.content.Intent $r2;
        android.hardware.location.ContextHubInfo $r4;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        i0 := @parameter0: int;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.hardware.location.extra.EVENT_TYPE", i0);

        $r4 = r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.ContextHubInfo mAttachedContextHubInfo>;

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.hardware.location.extra.CONTEXT_HUB_INFO", $r4);

        return $r2;
    }

    private android.content.Intent createIntent(int, long)
    {
        com.android.server.location.ContextHubClientBroker r0;
        int i0;
        long l1;
        android.content.Intent r1;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = specialinvoke r0.<com.android.server.location.ContextHubClientBroker: android.content.Intent createIntent(int)>(i0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("android.hardware.location.extra.NANOAPP_ID", l1);

        return r1;
    }

    private void doSendPendingIntent(android.app.PendingIntent, android.content.Intent)
    {
        com.android.server.location.ContextHubClientBroker r0;
        android.content.Intent r1;
        boolean $z0;
        android.content.Context $r2;
        android.app.PendingIntent$CanceledException $r3;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        java.lang.StringBuilder $r5;
        short $s0;
        java.lang.String $r9, r11;
        android.app.PendingIntent r10;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        r10 := @parameter0: android.app.PendingIntent;

        r1 := @parameter1: android.content.Intent;

     label1:
        $z0 = r0.<com.android.server.location.ContextHubClientBroker: boolean mHasAccessContextHubPermission>;

        if $z0 == 0 goto label3;

     label2:
        r11 = "android.permission.ACCESS_CONTEXT_HUB";

        goto label4;

     label3:
        r11 = "android.permission.LOCATION_HARDWARE";

     label4:
        $r2 = r0.<com.android.server.location.ContextHubClientBroker: android.content.Context mContext>;

        virtualinvoke r10.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String,android.os.Bundle)>($r2, 0, r1, null, null, r11, null);

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.location.ContextHubClientBroker: java.util.concurrent.atomic.AtomicBoolean mIsPendingIntentCancelled>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PendingIntent has been canceled, unregistering from client (host endpoint ID ");

        $s0 = r0.<com.android.server.location.ContextHubClientBroker: short mHostEndPointId>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContextHubClientBroker", $r9);

        virtualinvoke r0.<com.android.server.location.ContextHubClientBroker: void close()>();

     label7:
        return;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label6;
        catch android.app.PendingIntent$CanceledException from label4 to label5 with label6;
    }

    private void invokeCallback(com.android.server.location.ContextHubClientBroker$CallbackConsumer)
    {
        com.android.server.location.ContextHubClientBroker r0;
        android.hardware.location.IContextHubClientCallback $r1, r9;
        android.os.RemoteException $r2;
        short $s0;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        com.android.server.location.ContextHubClientBroker$CallbackConsumer r8;
        java.lang.StringBuilder r11;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        r8 := @parameter0: com.android.server.location.ContextHubClientBroker$CallbackConsumer;

        entermonitor r0;

     label1:
        r9 = r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.IContextHubClientCallback mCallbackInterface>;

     label2:
        if r9 == null goto label7;

     label3:
        $r1 = r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.IContextHubClientCallback mCallbackInterface>;

        interfaceinvoke r8.<com.android.server.location.ContextHubClientBroker$CallbackConsumer: void accept(android.hardware.location.IContextHubClientCallback)>($r1);

     label4:
        goto label7;

     label5:
        $r2 := @caughtexception;

     label6:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException while invoking client callback (host endpoint ID = ");

        $s0 = r0.<com.android.server.location.ContextHubClientBroker: short mHostEndPointId>;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s0);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContextHubClientBroker", $r6, $r2);

     label7:
        exitmonitor r0;

        return;

     label8:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    private boolean isRegistered()
    {
        com.android.server.location.ContextHubClientBroker r0;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        entermonitor r0;

     label1:
        z0 = r0.<com.android.server.location.ContextHubClientBroker: boolean mRegistered>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static void lambda$onHubReset$6(android.hardware.location.IContextHubClientCallback) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubClientCallback r0;

        r0 := @parameter0: android.hardware.location.IContextHubClientCallback;

        interfaceinvoke r0.<android.hardware.location.IContextHubClientCallback: void onHubReset()>();

        return;
    }

    static void lambda$onNanoAppAborted$8(long, int, android.hardware.location.IContextHubClientCallback) throws android.os.RemoteException
    {
        long l0;
        int i1;
        android.hardware.location.IContextHubClientCallback r0;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r0 := @parameter2: android.hardware.location.IContextHubClientCallback;

        interfaceinvoke r0.<android.hardware.location.IContextHubClientCallback: void onNanoAppAborted(long,int)>(l0, i1);

        return;
    }

    static void lambda$onNanoAppLoaded$2(long, android.hardware.location.IContextHubClientCallback) throws android.os.RemoteException
    {
        long l0;
        android.hardware.location.IContextHubClientCallback r0;

        l0 := @parameter0: long;

        r0 := @parameter1: android.hardware.location.IContextHubClientCallback;

        interfaceinvoke r0.<android.hardware.location.IContextHubClientCallback: void onNanoAppLoaded(long)>(l0);

        return;
    }

    static void lambda$onNanoAppUnloaded$4(long, android.hardware.location.IContextHubClientCallback) throws android.os.RemoteException
    {
        long l0;
        android.hardware.location.IContextHubClientCallback r0;

        l0 := @parameter0: long;

        r0 := @parameter1: android.hardware.location.IContextHubClientCallback;

        interfaceinvoke r0.<android.hardware.location.IContextHubClientCallback: void onNanoAppUnloaded(long)>(l0);

        return;
    }

    static void lambda$sendMessageToClient$0(android.hardware.location.NanoAppMessage, android.hardware.location.IContextHubClientCallback) throws android.os.RemoteException
    {
        android.hardware.location.NanoAppMessage r0;
        android.hardware.location.IContextHubClientCallback r1;

        r0 := @parameter0: android.hardware.location.NanoAppMessage;

        r1 := @parameter1: android.hardware.location.IContextHubClientCallback;

        interfaceinvoke r1.<android.hardware.location.IContextHubClientCallback: void onMessageFromNanoApp(android.hardware.location.NanoAppMessage)>(r0);

        return;
    }

    private void onClientExit()
    {
        com.android.server.location.ContextHubClientBroker r0;
        android.hardware.location.IContextHubClientCallback $r2, $r5;
        com.android.server.location.ContextHubClientBroker$PendingIntentRequest $r3;
        boolean $z0, $z1;
        short $s0;
        com.android.server.location.ContextHubClientManager $r4;
        android.os.IBinder $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.IContextHubClientCallback mCallbackInterface>;

        if $r2 == null goto label2;

        $r5 = r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.IContextHubClientCallback mCallbackInterface>;

        $r6 = interfaceinvoke $r5.<android.hardware.location.IContextHubClientCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r6.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.IContextHubClientCallback mCallbackInterface> = null;

     label2:
        $r3 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        $z0 = virtualinvoke $r3.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: boolean hasPendingIntent()>();

        if $z0 != 0 goto label3;

        $z1 = r0.<com.android.server.location.ContextHubClientBroker: boolean mRegistered>;

        if $z1 == 0 goto label3;

        $r4 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientManager mClientManager>;

        $s0 = r0.<com.android.server.location.ContextHubClientBroker: short mHostEndPointId>;

        virtualinvoke $r4.<com.android.server.location.ContextHubClientManager: void unregisterClient(short)>($s0);

        r0.<com.android.server.location.ContextHubClientBroker: boolean mRegistered> = 0;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private void sendPendingIntent(java.util.function.Supplier)
    {
        com.android.server.location.ContextHubClientBroker r0;
        com.android.server.location.ContextHubClientBroker$PendingIntentRequest $r1, $r2;
        boolean $z0;
        android.app.PendingIntent $r3;
        java.lang.Object $r4;
        android.content.Intent $r5;
        java.lang.Throwable $r6;
        java.util.function.Supplier r7;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        r7 := @parameter0: java.util.function.Supplier;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        $z0 = virtualinvoke $r1.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: boolean hasPendingIntent()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        $r3 = virtualinvoke $r2.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: android.app.PendingIntent getPendingIntent()>();

        $r4 = interfaceinvoke r7.<java.util.function.Supplier: java.lang.Object get()>();

        $r5 = (android.content.Intent) $r4;

        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void doSendPendingIntent(android.app.PendingIntent,android.content.Intent)>($r3, $r5);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void sendPendingIntent(java.util.function.Supplier, long)
    {
        com.android.server.location.ContextHubClientBroker r0;
        long l0, $l1;
        com.android.server.location.ContextHubClientBroker$PendingIntentRequest $r1, $r2, $r3;
        boolean $z0;
        byte $b2;
        android.app.PendingIntent $r4;
        java.lang.Object $r5;
        android.content.Intent $r6;
        java.lang.Throwable $r7;
        java.util.function.Supplier r8;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        r8 := @parameter0: java.util.function.Supplier;

        l0 := @parameter1: long;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        $z0 = virtualinvoke $r1.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: boolean hasPendingIntent()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        $l1 = virtualinvoke $r2.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: long getNanoAppId()>();

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label2;

        $r3 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        $r4 = virtualinvoke $r3.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: android.app.PendingIntent getPendingIntent()>();

        $r5 = interfaceinvoke r8.<java.util.function.Supplier: java.lang.Object get()>();

        $r6 = (android.content.Intent) $r5;

        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void doSendPendingIntent(android.app.PendingIntent,android.content.Intent)>($r4, $r6);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void attachDeathRecipient() throws android.os.RemoteException
    {
        com.android.server.location.ContextHubClientBroker r0;
        android.hardware.location.IContextHubClientCallback r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        r1 = r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.IContextHubClientCallback mCallbackInterface>;

        if r1 == null goto label1;

        $r2 = interfaceinvoke r1.<android.hardware.location.IContextHubClientCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label1:
        return;
    }

    public void binderDied()
    {
        com.android.server.location.ContextHubClientBroker r0;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void onClientExit()>();

        return;
    }

    public void close()
    {
        com.android.server.location.ContextHubClientBroker r0;
        com.android.server.location.ContextHubClientBroker$PendingIntentRequest $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        virtualinvoke $r2.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: void clear()>();

        exitmonitor r0;

     label2:
        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void onClientExit()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void dump(android.util.proto.ProtoOutputStream)
    {
        com.android.server.location.ContextHubClientBroker r0;
        android.util.proto.ProtoOutputStream r1;
        short $s0;
        int $i1;
        java.lang.String $r2;
        com.android.server.location.ContextHubClientBroker$PendingIntentRequest $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        long $l2;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        $s0 = virtualinvoke r0.<com.android.server.location.ContextHubClientBroker: short getHostEndPointId()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $s0);

        $i1 = virtualinvoke r0.<com.android.server.location.ContextHubClientBroker: int getAttachedContextHubId()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i1);

        $r2 = r0.<com.android.server.location.ContextHubClientBroker: java.lang.String mPackage>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333443L, $r2);

        $r3 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        $z0 = virtualinvoke $r3.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: boolean isValid()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366149L, 1);

        $r5 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        $l2 = virtualinvoke $r5.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: long getNanoAppId()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529668L, $l2);

     label1:
        $r4 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        $z1 = virtualinvoke $r4.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: boolean hasPendingIntent()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366150L, $z1);

        $z2 = virtualinvoke r0.<com.android.server.location.ContextHubClientBroker: boolean isPendingIntentCancelled()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366151L, $z2);

        $z3 = r0.<com.android.server.location.ContextHubClientBroker: boolean mRegistered>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366152L, $z3);

        return;
    }

    int getAttachedContextHubId()
    {
        com.android.server.location.ContextHubClientBroker r0;
        android.hardware.location.ContextHubInfo $r1;
        int $i0;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        $r1 = r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.ContextHubInfo mAttachedContextHubInfo>;

        $i0 = virtualinvoke $r1.<android.hardware.location.ContextHubInfo: int getId()>();

        return $i0;
    }

    short getHostEndPointId()
    {
        com.android.server.location.ContextHubClientBroker r0;
        short $s0;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        $s0 = r0.<com.android.server.location.ContextHubClientBroker: short mHostEndPointId>;

        return $s0;
    }

    boolean hasPendingIntent(android.app.PendingIntent, long)
    {
        com.android.server.location.ContextHubClientBroker r0;
        long l0, l1;
        android.app.PendingIntent r1, r5;
        com.android.server.location.ContextHubClientBroker$PendingIntentRequest $r2, $r3;
        boolean $z0, z1;
        byte $b2;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        r5 := @parameter0: android.app.PendingIntent;

        l0 := @parameter1: long;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        r1 = virtualinvoke $r2.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: android.app.PendingIntent getPendingIntent()>();

        $r3 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        l1 = virtualinvoke $r3.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: long getNanoAppId()>();

        exitmonitor r0;

     label2:
        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<android.app.PendingIntent: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label3;

        $b2 = l1 cmp l0;

        if $b2 != 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    boolean isPendingIntentCancelled()
    {
        com.android.server.location.ContextHubClientBroker r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        $r1 = r0.<com.android.server.location.ContextHubClientBroker: java.util.concurrent.atomic.AtomicBoolean mIsPendingIntentCancelled>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    public android.content.Intent lambda$onHubReset$7$ContextHubClientBroker()
    {
        com.android.server.location.ContextHubClientBroker r0;
        android.content.Intent $r1;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        $r1 = specialinvoke r0.<com.android.server.location.ContextHubClientBroker: android.content.Intent createIntent(int)>(6);

        return $r1;
    }

    public android.content.Intent lambda$onNanoAppAborted$9$ContextHubClientBroker(long, int)
    {
        com.android.server.location.ContextHubClientBroker r0;
        long l0;
        int i1;
        android.content.Intent $r1, $r2;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.location.ContextHubClientBroker: android.content.Intent createIntent(int,long)>(4, l0);

        $r2 = virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.hardware.location.extra.NANOAPP_ABORT_CODE", i1);

        return $r2;
    }

    public android.content.Intent lambda$onNanoAppLoaded$3$ContextHubClientBroker(long)
    {
        com.android.server.location.ContextHubClientBroker r0;
        long l0;
        android.content.Intent $r1;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        l0 := @parameter0: long;

        $r1 = specialinvoke r0.<com.android.server.location.ContextHubClientBroker: android.content.Intent createIntent(int,long)>(0, l0);

        return $r1;
    }

    public android.content.Intent lambda$onNanoAppUnloaded$5$ContextHubClientBroker(long)
    {
        com.android.server.location.ContextHubClientBroker r0;
        long l0;
        android.content.Intent $r1;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        l0 := @parameter0: long;

        $r1 = specialinvoke r0.<com.android.server.location.ContextHubClientBroker: android.content.Intent createIntent(int,long)>(1, l0);

        return $r1;
    }

    public android.content.Intent lambda$sendMessageToClient$1$ContextHubClientBroker(android.hardware.location.NanoAppMessage)
    {
        com.android.server.location.ContextHubClientBroker r0;
        android.hardware.location.NanoAppMessage r1;
        long $l0;
        android.content.Intent $r2, $r3;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        r1 := @parameter0: android.hardware.location.NanoAppMessage;

        $l0 = virtualinvoke r1.<android.hardware.location.NanoAppMessage: long getNanoAppId()>();

        $r2 = specialinvoke r0.<com.android.server.location.ContextHubClientBroker: android.content.Intent createIntent(int,long)>(5, $l0);

        $r3 = virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.hardware.location.extra.MESSAGE", r1);

        return $r3;
    }

    void onHubReset()
    {
        com.android.server.location.ContextHubClientBroker r0;
        com.android.server.location.'-$$Lambda$ContextHubClientBroker$LSvRo4l-aTVqttfWfOHNw7uyb3Q' $r1;
        com.android.server.location._$$Lambda$ContextHubClientBroker$dhEakMhmIulMdmLMree_thpxPXU r3;
        com.android.server.location.ContextHubClientBroker$CallbackConsumer r4;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        $r1 = <com.android.server.location._$$Lambda$ContextHubClientBroker$LSvRo4l_aTVqttfWfOHNw7uyb3Q: com.android.server.location.'-$$Lambda$ContextHubClientBroker$LSvRo4l-aTVqttfWfOHNw7uyb3Q' INSTANCE>;

        r4 = (com.android.server.location.ContextHubClientBroker$CallbackConsumer) $r1;

        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void invokeCallback(com.android.server.location.ContextHubClientBroker$CallbackConsumer)>(r4);

        r3 = new com.android.server.location._$$Lambda$ContextHubClientBroker$dhEakMhmIulMdmLMree_thpxPXU;

        specialinvoke r3.<com.android.server.location._$$Lambda$ContextHubClientBroker$dhEakMhmIulMdmLMree_thpxPXU: void <init>(com.android.server.location.ContextHubClientBroker)>(r0);

        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void sendPendingIntent(java.util.function.Supplier)>(r3);

        return;
    }

    void onNanoAppAborted(long, int)
    {
        com.android.server.location.ContextHubClientBroker r0;
        long l0;
        int i1;
        com.android.server.location._$$Lambda$ContextHubClientBroker$euuUV_nmBEuGSQnmknMVANWcP88 $r1;
        com.android.server.location._$$Lambda$ContextHubClientBroker$B9OxjmBvqPB3gqJ7VRMqEIw1cbY $r2;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = new com.android.server.location._$$Lambda$ContextHubClientBroker$euuUV_nmBEuGSQnmknMVANWcP88;

        specialinvoke $r1.<com.android.server.location._$$Lambda$ContextHubClientBroker$euuUV_nmBEuGSQnmknMVANWcP88: void <init>(long,int)>(l0, i1);

        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void invokeCallback(com.android.server.location.ContextHubClientBroker$CallbackConsumer)>($r1);

        $r2 = new com.android.server.location._$$Lambda$ContextHubClientBroker$B9OxjmBvqPB3gqJ7VRMqEIw1cbY;

        specialinvoke $r2.<com.android.server.location._$$Lambda$ContextHubClientBroker$B9OxjmBvqPB3gqJ7VRMqEIw1cbY: void <init>(com.android.server.location.ContextHubClientBroker,long,int)>(r0, l0, i1);

        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void sendPendingIntent(java.util.function.Supplier,long)>($r2, l0);

        return;
    }

    void onNanoAppLoaded(long)
    {
        com.android.server.location.ContextHubClientBroker r0;
        long l0;
        com.android.server.location._$$Lambda$ContextHubClientBroker$ykmLCadaR6NcV4R42i4K8zw4AWs $r1;
        com.android.server.location._$$Lambda$ContextHubClientBroker$7Uwy0RpQUtRsDYbocrZ_WuXEVJQ $r2;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        l0 := @parameter0: long;

        $r1 = new com.android.server.location._$$Lambda$ContextHubClientBroker$ykmLCadaR6NcV4R42i4K8zw4AWs;

        specialinvoke $r1.<com.android.server.location._$$Lambda$ContextHubClientBroker$ykmLCadaR6NcV4R42i4K8zw4AWs: void <init>(long)>(l0);

        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void invokeCallback(com.android.server.location.ContextHubClientBroker$CallbackConsumer)>($r1);

        $r2 = new com.android.server.location._$$Lambda$ContextHubClientBroker$7Uwy0RpQUtRsDYbocrZ_WuXEVJQ;

        specialinvoke $r2.<com.android.server.location._$$Lambda$ContextHubClientBroker$7Uwy0RpQUtRsDYbocrZ_WuXEVJQ: void <init>(com.android.server.location.ContextHubClientBroker,long)>(r0, l0);

        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void sendPendingIntent(java.util.function.Supplier,long)>($r2, l0);

        return;
    }

    void onNanoAppUnloaded(long)
    {
        com.android.server.location.ContextHubClientBroker r0;
        long l0;
        com.android.server.location._$$Lambda$ContextHubClientBroker$iBGtMeLZ6k5dYJZb_VEUfBBYh9s $r1;
        com.android.server.location._$$Lambda$ContextHubClientBroker$NOnZ9Z0Vw11snzPmdVOE1pPrZ_4 $r2;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        l0 := @parameter0: long;

        $r1 = new com.android.server.location._$$Lambda$ContextHubClientBroker$iBGtMeLZ6k5dYJZb_VEUfBBYh9s;

        specialinvoke $r1.<com.android.server.location._$$Lambda$ContextHubClientBroker$iBGtMeLZ6k5dYJZb_VEUfBBYh9s: void <init>(long)>(l0);

        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void invokeCallback(com.android.server.location.ContextHubClientBroker$CallbackConsumer)>($r1);

        $r2 = new com.android.server.location._$$Lambda$ContextHubClientBroker$NOnZ9Z0Vw11snzPmdVOE1pPrZ_4;

        specialinvoke $r2.<com.android.server.location._$$Lambda$ContextHubClientBroker$NOnZ9Z0Vw11snzPmdVOE1pPrZ_4: void <init>(com.android.server.location.ContextHubClientBroker,long)>(r0, l0);

        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void sendPendingIntent(java.util.function.Supplier,long)>($r2, l0);

        return;
    }

    void sendMessageToClient(android.hardware.location.NanoAppMessage)
    {
        com.android.server.location.ContextHubClientBroker r0;
        android.hardware.location.NanoAppMessage r1;
        com.android.server.location._$$Lambda$ContextHubClientBroker$CFacmt7807NhDDkp6CgbkeGnMvQ $r2;
        com.android.server.location._$$Lambda$ContextHubClientBroker$P9IUEzaG4gP8jALe00of9jdlrGw $r3;
        long $l0;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        r1 := @parameter0: android.hardware.location.NanoAppMessage;

        $r2 = new com.android.server.location._$$Lambda$ContextHubClientBroker$CFacmt7807NhDDkp6CgbkeGnMvQ;

        specialinvoke $r2.<com.android.server.location._$$Lambda$ContextHubClientBroker$CFacmt7807NhDDkp6CgbkeGnMvQ: void <init>(android.hardware.location.NanoAppMessage)>(r1);

        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void invokeCallback(com.android.server.location.ContextHubClientBroker$CallbackConsumer)>($r2);

        $r3 = new com.android.server.location._$$Lambda$ContextHubClientBroker$P9IUEzaG4gP8jALe00of9jdlrGw;

        specialinvoke $r3.<com.android.server.location._$$Lambda$ContextHubClientBroker$P9IUEzaG4gP8jALe00of9jdlrGw: void <init>(com.android.server.location.ContextHubClientBroker,android.hardware.location.NanoAppMessage)>(r0, r1);

        $l0 = virtualinvoke r1.<android.hardware.location.NanoAppMessage: long getNanoAppId()>();

        specialinvoke r0.<com.android.server.location.ContextHubClientBroker: void sendPendingIntent(java.util.function.Supplier,long)>($r3, $l0);

        return;
    }

    public int sendMessageToNanoApp(android.hardware.location.NanoAppMessage)
    {
        com.android.server.location.ContextHubClientBroker r0;
        int i0, $i2, i5;
        android.content.Context $r2;
        boolean $z0;
        short $s3;
        android.hardware.location.ContextHubInfo $r3;
        android.hardware.contexthub.V1_0.IContexthub $r4;
        android.os.RemoteException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;
        android.hardware.location.NanoAppMessage r11;
        android.hardware.contexthub.V1_0.ContextHubMsg r12;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        r11 := @parameter0: android.hardware.location.NanoAppMessage;

        $r2 = r0.<com.android.server.location.ContextHubClientBroker: android.content.Context mContext>;

        staticinvoke <com.android.server.location.ContextHubServiceUtil: void checkPermissions(android.content.Context)>($r2);

        $z0 = specialinvoke r0.<com.android.server.location.ContextHubClientBroker: boolean isRegistered()>();

        if $z0 == 0 goto label5;

        $s3 = r0.<com.android.server.location.ContextHubClientBroker: short mHostEndPointId>;

        r12 = staticinvoke <com.android.server.location.ContextHubServiceUtil: android.hardware.contexthub.V1_0.ContextHubMsg createHidlContextHubMessage(short,android.hardware.location.NanoAppMessage)>($s3, r11);

        $r3 = r0.<com.android.server.location.ContextHubClientBroker: android.hardware.location.ContextHubInfo mAttachedContextHubInfo>;

        i0 = virtualinvoke $r3.<android.hardware.location.ContextHubInfo: int getId()>();

     label1:
        $r4 = r0.<com.android.server.location.ContextHubClientBroker: android.hardware.contexthub.V1_0.IContexthub mContextHubProxy>;

        i5 = interfaceinvoke $r4.<android.hardware.contexthub.V1_0.IContexthub: int sendMessageToHub(int,android.hardware.contexthub.V1_0.ContextHubMsg)>(i0, r12);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException in sendMessageToNanoApp (target hub ID = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContextHubClientBroker", $r10, $r5);

        i5 = 1;

     label4:
        goto label6;

     label5:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubClientBroker", "Failed to send message to nanoapp: client connection is closed");

        i5 = 1;

     label6:
        $i2 = staticinvoke <com.android.server.location.ContextHubServiceUtil: int toTransactionResult(int)>(i5);

        return $i2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        com.android.server.location.ContextHubClientBroker r0;
        java.lang.StringBuilder $r1, $r6, $r12, $r17, $r21, $r27;
        short $s0;
        int $i1;
        com.android.server.location.ContextHubClientBroker$PendingIntentRequest $r11, $r30;
        boolean $z0;
        java.lang.String $r15, $r20, $r24, $r31, r34, r36, r38, r40;
        long $l2;

        r0 := @this: com.android.server.location.ContextHubClientBroker;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ContextHubClient ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("endpointID: ");

        $s0 = virtualinvoke r0.<com.android.server.location.ContextHubClientBroker: short getHostEndPointId()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        r34 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("contextHub: ");

        $i1 = virtualinvoke r0.<com.android.server.location.ContextHubClientBroker: int getAttachedContextHubId()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        r36 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        $z0 = virtualinvoke $r11.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: boolean isValid()>();

        if $z0 == 0 goto label1;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("intentCreatorPackage: ");

        $r24 = r0.<com.android.server.location.ContextHubClientBroker: java.lang.String mPackage>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        r38 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nanoAppId: 0x");

        $r30 = r0.<com.android.server.location.ContextHubClientBroker: com.android.server.location.ContextHubClientBroker$PendingIntentRequest mPendingIntentRequest>;

        $l2 = virtualinvoke $r30.<com.android.server.location.ContextHubClientBroker$PendingIntentRequest: long getNanoAppId()>();

        $r31 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l2);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        r40 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("package: ");

        $r15 = r0.<com.android.server.location.ContextHubClientBroker: java.lang.String mPackage>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        r40 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;
    }

    public static void <clinit>()
    {
        <com.android.server.location.ContextHubClientBroker: java.lang.String TAG> = "ContextHubClientBroker";

        return;
    }
}
