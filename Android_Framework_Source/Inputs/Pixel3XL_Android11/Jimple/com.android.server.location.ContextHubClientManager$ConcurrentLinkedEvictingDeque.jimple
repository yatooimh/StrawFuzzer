class com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque extends java.util.concurrent.ConcurrentLinkedDeque
{
    private int mSize;
    final com.android.server.location.ContextHubClientManager this$0;

    void <init>(com.android.server.location.ContextHubClientManager, int)
    {
        com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque r0;
        com.android.server.location.ContextHubClientManager r1;
        int i0;

        r0 := @this: com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque;

        r1 := @parameter0: com.android.server.location.ContextHubClientManager;

        i0 := @parameter1: int;

        r0.<com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque: com.android.server.location.ContextHubClientManager this$0> = r1;

        specialinvoke r0.<java.util.concurrent.ConcurrentLinkedDeque: void <init>()>();

        r0.<com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque: int mSize> = i0;

        return;
    }

    public boolean add(java.lang.Object)
    {
        com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque r0;
        boolean z0;
        int $i0, $i1;
        java.lang.Throwable $r2;
        java.lang.Object r3;

        r0 := @this: com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque;

        r3 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        $i0 = virtualinvoke r0.<com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque: int size()>();

        $i1 = r0.<com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque: int mSize>;

        if $i0 != $i1 goto label2;

        virtualinvoke r0.<com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque: java.lang.Object poll()>();

     label2:
        z0 = specialinvoke r0.<java.util.concurrent.ConcurrentLinkedDeque: boolean add(java.lang.Object)>(r3);

        exitmonitor r0;

     label3:
        return z0;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
