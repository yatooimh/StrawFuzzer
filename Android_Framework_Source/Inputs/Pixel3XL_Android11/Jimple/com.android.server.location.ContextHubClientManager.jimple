class com.android.server.location.ContextHubClientManager extends java.lang.Object
{
    public static final int ACTION_CANCELLED;
    public static final int ACTION_REGISTERED;
    public static final int ACTION_UNREGISTERED;
    private static final java.text.DateFormat DATE_FORMAT;
    private static final boolean DEBUG_LOG_ENABLED;
    private static final int MAX_CLIENT_ID;
    private static final int NUM_CLIENT_RECORDS;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.hardware.contexthub.V1_0.IContexthub mContextHubProxy;
    private final java.util.concurrent.ConcurrentHashMap mHostEndPointIdToClientMap;
    private int mNextHostEndPointId;
    private final com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque mRegistrationRecordDeque;

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0;

        <com.android.server.location.ContextHubClientManager: java.lang.String TAG> = "ContextHubClientManager";

        <com.android.server.location.ContextHubClientManager: int NUM_CLIENT_RECORDS> = 20;

        <com.android.server.location.ContextHubClientManager: int MAX_CLIENT_ID> = 32767;

        <com.android.server.location.ContextHubClientManager: boolean DEBUG_LOG_ENABLED> = 0;

        <com.android.server.location.ContextHubClientManager: int ACTION_UNREGISTERED> = 1;

        <com.android.server.location.ContextHubClientManager: int ACTION_REGISTERED> = 0;

        <com.android.server.location.ContextHubClientManager: int ACTION_CANCELLED> = 2;

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MM/dd HH:mm:ss.SSS");

        <com.android.server.location.ContextHubClientManager: java.text.DateFormat DATE_FORMAT> = $r0;

        return;
    }

    void <init>(android.content.Context, android.hardware.contexthub.V1_0.IContexthub)
    {
        com.android.server.location.ContextHubClientManager r0;
        android.content.Context r1;
        android.hardware.contexthub.V1_0.IContexthub r2;
        java.util.concurrent.ConcurrentHashMap $r3;
        com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque $r4;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.hardware.contexthub.V1_0.IContexthub;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.android.server.location.ContextHubClientManager: java.util.concurrent.ConcurrentHashMap mHostEndPointIdToClientMap> = $r3;

        r0.<com.android.server.location.ContextHubClientManager: int mNextHostEndPointId> = 0;

        $r4 = new com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque;

        specialinvoke $r4.<com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque: void <init>(com.android.server.location.ContextHubClientManager,int)>(r0, 20);

        r0.<com.android.server.location.ContextHubClientManager: com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque mRegistrationRecordDeque> = $r4;

        r0.<com.android.server.location.ContextHubClientManager: android.content.Context mContext> = r1;

        r0.<com.android.server.location.ContextHubClientManager: android.hardware.contexthub.V1_0.IContexthub mContextHubProxy> = r2;

        return;
    }

    static java.text.DateFormat access$000()
    {
        java.text.DateFormat $r0;

        $r0 = <com.android.server.location.ContextHubClientManager: java.text.DateFormat DATE_FORMAT>;

        return $r0;
    }

    private void broadcastMessage(int, android.hardware.location.NanoAppMessage)
    {
        com.android.server.location.ContextHubClientManager r0;
        int i0;
        android.hardware.location.NanoAppMessage r1;
        com.android.server.location._$$Lambda$ContextHubClientManager$f15OSYbsSONpkXn7GinnrBPeumw $r2;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.location.NanoAppMessage;

        $r2 = new com.android.server.location._$$Lambda$ContextHubClientManager$f15OSYbsSONpkXn7GinnrBPeumw;

        specialinvoke $r2.<com.android.server.location._$$Lambda$ContextHubClientManager$f15OSYbsSONpkXn7GinnrBPeumw: void <init>(android.hardware.location.NanoAppMessage)>(r1);

        specialinvoke r0.<com.android.server.location.ContextHubClientManager: void forEachClientOfHub(int,java.util.function.Consumer)>(i0, $r2);

        return;
    }

    private void forEachClientOfHub(int, java.util.function.Consumer)
    {
        com.android.server.location.ContextHubClientManager r0;
        int i0, $i1;
        java.util.function.Consumer r1;
        java.util.Iterator r2;
        com.android.server.location.ContextHubClientBroker r3;
        java.util.concurrent.ConcurrentHashMap $r4;
        java.util.Collection $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.function.Consumer;

        $r4 = r0.<com.android.server.location.ContextHubClientManager: java.util.concurrent.ConcurrentHashMap mHostEndPointIdToClientMap>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.location.ContextHubClientBroker) $r6;

        $i1 = virtualinvoke r3.<com.android.server.location.ContextHubClientBroker: int getAttachedContextHubId()>();

        if $i1 != i0 goto label2;

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>(r3);

     label2:
        goto label1;

     label3:
        return;
    }

    private com.android.server.location.ContextHubClientBroker getClientBroker(int, android.app.PendingIntent, long)
    {
        com.android.server.location.ContextHubClientManager r0;
        int i0, $i2;
        android.app.PendingIntent r1;
        long l1;
        java.util.Iterator r2;
        com.android.server.location.ContextHubClientBroker r3;
        java.util.concurrent.ConcurrentHashMap $r4;
        java.util.Collection $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.PendingIntent;

        l1 := @parameter2: long;

        $r4 = r0.<com.android.server.location.ContextHubClientManager: java.util.concurrent.ConcurrentHashMap mHostEndPointIdToClientMap>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.location.ContextHubClientBroker) $r6;

        $z1 = virtualinvoke r3.<com.android.server.location.ContextHubClientBroker: boolean hasPendingIntent(android.app.PendingIntent,long)>(r1, l1);

        if $z1 == 0 goto label2;

        $i2 = virtualinvoke r3.<com.android.server.location.ContextHubClientBroker: int getAttachedContextHubId()>();

        if $i2 != i0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    private short getHostEndPointId()
    {
        com.android.server.location.ContextHubClientManager r0;
        boolean z0;
        java.util.concurrent.ConcurrentHashMap $r1, $r3;
        int $i2, i5, i6, i7;
        java.lang.IllegalStateException $r2;
        short $s3, $s4;
        java.lang.Short $r4;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        $r1 = r0.<com.android.server.location.ContextHubClientManager: java.util.concurrent.ConcurrentHashMap mHostEndPointIdToClientMap>;

        $i2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: int size()>();

        if $i2 == 32768 goto label8;

        i5 = r0.<com.android.server.location.ContextHubClientManager: int mNextHostEndPointId>;

        i6 = 0;

     label1:
        if i6 > 32767 goto label7;

        $r3 = r0.<com.android.server.location.ContextHubClientManager: java.util.concurrent.ConcurrentHashMap mHostEndPointIdToClientMap>;

        $s4 = (short) i5;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s4);

        z0 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>($r4);

        if z0 != 0 goto label4;

        if i5 != 32767 goto label2;

        i7 = 0;

        goto label3;

     label2:
        i7 = i5 + 1;

     label3:
        r0.<com.android.server.location.ContextHubClientManager: int mNextHostEndPointId> = i7;

        goto label7;

     label4:
        if i5 != 32767 goto label5;

        i5 = 0;

        goto label6;

     label5:
        i5 = i5 + 1;

     label6:
        i6 = i6 + 1;

        goto label1;

     label7:
        $s3 = (short) i5;

        return $s3;

     label8:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not register client - max limit exceeded");

        throw $r2;
    }

    static void lambda$broadcastMessage$4(android.hardware.location.NanoAppMessage, com.android.server.location.ContextHubClientBroker)
    {
        android.hardware.location.NanoAppMessage r0;
        com.android.server.location.ContextHubClientBroker r1;

        r0 := @parameter0: android.hardware.location.NanoAppMessage;

        r1 := @parameter1: com.android.server.location.ContextHubClientBroker;

        virtualinvoke r1.<com.android.server.location.ContextHubClientBroker: void sendMessageToClient(android.hardware.location.NanoAppMessage)>(r0);

        return;
    }

    static void lambda$onHubReset$2(com.android.server.location.ContextHubClientBroker)
    {
        com.android.server.location.ContextHubClientBroker r0;

        r0 := @parameter0: com.android.server.location.ContextHubClientBroker;

        virtualinvoke r0.<com.android.server.location.ContextHubClientBroker: void onHubReset()>();

        return;
    }

    static void lambda$onNanoAppAborted$3(long, int, com.android.server.location.ContextHubClientBroker)
    {
        long l0;
        int i1;
        com.android.server.location.ContextHubClientBroker r0;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r0 := @parameter2: com.android.server.location.ContextHubClientBroker;

        virtualinvoke r0.<com.android.server.location.ContextHubClientBroker: void onNanoAppAborted(long,int)>(l0, i1);

        return;
    }

    static void lambda$onNanoAppLoaded$0(long, com.android.server.location.ContextHubClientBroker)
    {
        long l0;
        com.android.server.location.ContextHubClientBroker r0;

        l0 := @parameter0: long;

        r0 := @parameter1: com.android.server.location.ContextHubClientBroker;

        virtualinvoke r0.<com.android.server.location.ContextHubClientBroker: void onNanoAppLoaded(long)>(l0);

        return;
    }

    static void lambda$onNanoAppUnloaded$1(long, com.android.server.location.ContextHubClientBroker)
    {
        long l0;
        com.android.server.location.ContextHubClientBroker r0;

        l0 := @parameter0: long;

        r0 := @parameter1: com.android.server.location.ContextHubClientBroker;

        virtualinvoke r0.<com.android.server.location.ContextHubClientBroker: void onNanoAppUnloaded(long)>(l0);

        return;
    }

    void dump(android.util.proto.ProtoOutputStream)
    {
        com.android.server.location.ContextHubClientManager r0;
        android.util.proto.ProtoOutputStream r1;
        com.android.server.location.ContextHubClientBroker r2;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.util.Collection $r4;
        boolean $z0, $z1;
        com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque $r5;
        java.lang.Object $r6, $r8;
        com.android.server.location.ContextHubClientManager$RegistrationRecord $r7;
        java.util.Iterator r9, r10;
        long l0, l1;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        $r3 = r0.<com.android.server.location.ContextHubClientManager: java.util.concurrent.ConcurrentHashMap mHostEndPointIdToClientMap>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        r9 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.location.ContextHubClientBroker) $r8;

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895809L);

        virtualinvoke r2.<com.android.server.location.ContextHubClientBroker: void dump(android.util.proto.ProtoOutputStream)>(r1);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        goto label1;

     label2:
        $r5 = r0.<com.android.server.location.ContextHubClientManager: com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque mRegistrationRecordDeque>;

        r10 = virtualinvoke $r5.<com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque: java.util.Iterator descendingIterator()>();

     label3:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        l1 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895810L);

        $r6 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.android.server.location.ContextHubClientManager$RegistrationRecord) $r6;

        virtualinvoke $r7.<com.android.server.location.ContextHubClientManager$RegistrationRecord: void dump(android.util.proto.ProtoOutputStream)>(r1);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

        goto label3;

     label4:
        return;
    }

    void onHubReset(int)
    {
        com.android.server.location.ContextHubClientManager r0;
        int i0;
        com.android.server.location.'-$$Lambda$ContextHubClientManager$aRAV9Gn84ao-4XOiN6tFizfZjHo' $r1;
        java.util.function.Consumer r2;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        i0 := @parameter0: int;

        $r1 = <com.android.server.location._$$Lambda$ContextHubClientManager$aRAV9Gn84ao_4XOiN6tFizfZjHo: com.android.server.location.'-$$Lambda$ContextHubClientManager$aRAV9Gn84ao-4XOiN6tFizfZjHo' INSTANCE>;

        r2 = (java.util.function.Consumer) $r1;

        specialinvoke r0.<com.android.server.location.ContextHubClientManager: void forEachClientOfHub(int,java.util.function.Consumer)>(i0, r2);

        return;
    }

    void onMessageFromNanoApp(int, android.hardware.contexthub.V1_0.ContextHubMsg)
    {
        com.android.server.location.ContextHubClientManager r0;
        int i0;
        android.hardware.contexthub.V1_0.ContextHubMsg r1;
        com.android.server.location.ContextHubClientBroker r2;
        boolean $z0;
        short $s1, $s2;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.Short $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;
        android.hardware.location.NanoAppMessage r11;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.contexthub.V1_0.ContextHubMsg;

        r11 = staticinvoke <com.android.server.location.ContextHubServiceUtil: android.hardware.location.NanoAppMessage createNanoAppMessage(android.hardware.contexthub.V1_0.ContextHubMsg)>(r1);

        $z0 = virtualinvoke r11.<android.hardware.location.NanoAppMessage: boolean isBroadcastMessage()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.location.ContextHubClientManager: void broadcastMessage(int,android.hardware.location.NanoAppMessage)>(i0, r11);

        goto label3;

     label1:
        $r3 = r0.<com.android.server.location.ContextHubClientManager: java.util.concurrent.ConcurrentHashMap mHostEndPointIdToClientMap>;

        $s1 = r1.<android.hardware.contexthub.V1_0.ContextHubMsg: short hostEndPoint>;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r5 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (com.android.server.location.ContextHubClientBroker) $r5;

        if r2 == null goto label2;

        virtualinvoke r2.<com.android.server.location.ContextHubClientBroker: void sendMessageToClient(android.hardware.location.NanoAppMessage)>(r11);

        goto label3;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot send message to unregistered client (host endpoint ID = ");

        $s2 = r1.<android.hardware.contexthub.V1_0.ContextHubMsg: short hostEndPoint>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubClientManager", $r10);

     label3:
        return;
    }

    void onNanoAppAborted(int, long, int)
    {
        com.android.server.location.ContextHubClientManager r0;
        int i0, i2;
        long l1;
        com.android.server.location._$$Lambda$ContextHubClientManager$WHzSH2f_YJ3FaiF7JXPP_7oX9EE $r1;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = new com.android.server.location._$$Lambda$ContextHubClientManager$WHzSH2f_YJ3FaiF7JXPP_7oX9EE;

        specialinvoke $r1.<com.android.server.location._$$Lambda$ContextHubClientManager$WHzSH2f_YJ3FaiF7JXPP_7oX9EE: void <init>(long,int)>(l1, i2);

        specialinvoke r0.<com.android.server.location.ContextHubClientManager: void forEachClientOfHub(int,java.util.function.Consumer)>(i0, $r1);

        return;
    }

    void onNanoAppLoaded(int, long)
    {
        com.android.server.location.ContextHubClientManager r0;
        int i0;
        long l1;
        com.android.server.location._$$Lambda$ContextHubClientManager$VPD5ebhe8Z67S8QKuTR4KzeshK8 $r1;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = new com.android.server.location._$$Lambda$ContextHubClientManager$VPD5ebhe8Z67S8QKuTR4KzeshK8;

        specialinvoke $r1.<com.android.server.location._$$Lambda$ContextHubClientManager$VPD5ebhe8Z67S8QKuTR4KzeshK8: void <init>(long)>(l1);

        specialinvoke r0.<com.android.server.location.ContextHubClientManager: void forEachClientOfHub(int,java.util.function.Consumer)>(i0, $r1);

        return;
    }

    void onNanoAppUnloaded(int, long)
    {
        com.android.server.location.ContextHubClientManager r0;
        int i0;
        long l1;
        com.android.server.location._$$Lambda$ContextHubClientManager$gN_vRogwyzr9qBjrQpKwwHzrFAo $r1;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = new com.android.server.location._$$Lambda$ContextHubClientManager$gN_vRogwyzr9qBjrQpKwwHzrFAo;

        specialinvoke $r1.<com.android.server.location._$$Lambda$ContextHubClientManager$gN_vRogwyzr9qBjrQpKwwHzrFAo: void <init>(long)>(l1);

        specialinvoke r0.<com.android.server.location.ContextHubClientManager: void forEachClientOfHub(int,java.util.function.Consumer)>(i0, $r1);

        return;
    }

    android.hardware.location.IContextHubClient registerClient(android.hardware.location.ContextHubInfo, android.app.PendingIntent, long)
    {
        com.android.server.location.ContextHubClientManager r0;
        long l0;
        int i1;
        com.android.server.location.ContextHubClientBroker r1, r19;
        short s2, $s3;
        java.lang.StringBuilder $r2;
        java.lang.String $r6, $r13, r18;
        android.hardware.location.IContextHubClient $r7;
        android.hardware.contexthub.V1_0.IContexthub $r8;
        android.content.Context $r9;
        java.util.concurrent.ConcurrentHashMap $r10;
        java.lang.Short $r11;
        java.lang.Throwable $r14, $r15, r23;
        android.hardware.location.ContextHubInfo r16;
        android.app.PendingIntent r17;
        com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque r20;
        com.android.server.location.ContextHubClientManager$RegistrationRecord r21;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        r16 := @parameter0: android.hardware.location.ContextHubInfo;

        r17 := @parameter1: android.app.PendingIntent;

        l0 := @parameter2: long;

        r18 = "Regenerated";

        entermonitor r0;

     label01:
        i1 = virtualinvoke r16.<android.hardware.location.ContextHubInfo: int getId()>();

     label02:
        r1 = specialinvoke r0.<com.android.server.location.ContextHubClientManager: com.android.server.location.ContextHubClientBroker getClientBroker(int,android.app.PendingIntent,long)>(i1, r17, l0);

     label03:
        r19 = r1;

        if r1 != null goto label08;

     label04:
        s2 = specialinvoke r0.<com.android.server.location.ContextHubClientManager: short getHostEndPointId()>();

        r19 = new com.android.server.location.ContextHubClientBroker;

        $r9 = r0.<com.android.server.location.ContextHubClientManager: android.content.Context mContext>;

        $r8 = r0.<com.android.server.location.ContextHubClientManager: android.hardware.contexthub.V1_0.IContexthub mContextHubProxy>;

        specialinvoke r19.<com.android.server.location.ContextHubClientBroker: void <init>(android.content.Context,android.hardware.contexthub.V1_0.IContexthub,com.android.server.location.ContextHubClientManager,android.hardware.location.ContextHubInfo,short,android.app.PendingIntent,long)>($r9, $r8, r0, r16, s2, r17, l0);

     label05:
        $r10 = r0.<com.android.server.location.ContextHubClientManager: java.util.concurrent.ConcurrentHashMap mHostEndPointIdToClientMap>;

        $r11 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s2);

        virtualinvoke $r10.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r19);

     label06:
        r18 = "Registered";

     label07:
        r20 = r0.<com.android.server.location.ContextHubClientManager: com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque mRegistrationRecordDeque>;

        r21 = new com.android.server.location.ContextHubClientManager$RegistrationRecord;

        $r13 = virtualinvoke r19.<com.android.server.location.ContextHubClientBroker: java.lang.String toString()>();

        specialinvoke r21.<com.android.server.location.ContextHubClientManager$RegistrationRecord: void <init>(com.android.server.location.ContextHubClientManager,java.lang.String,int)>(r0, $r13, 0);

        virtualinvoke r20.<com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque: boolean add(java.lang.Object)>(r21);

     label08:
        exitmonitor r0;

     label09:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client with host endpoint ID ");

        $s3 = virtualinvoke r19.<com.android.server.location.ContextHubClientBroker: short getHostEndPointId()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s3);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ContextHubClientManager", $r6);

        $r7 = staticinvoke <android.hardware.location.IContextHubClient$Stub: android.hardware.location.IContextHubClient asInterface(android.os.IBinder)>(r19);

        return $r7;

     label10:
        $r14 := @caughtexception;

        r23 = $r14;

        goto label12;

     label11:
        $r15 := @caughtexception;

        r23 = $r15;

     label12:
        exitmonitor r0;

     label13:
        throw r23;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label12 to label13 with label10;
    }

    android.hardware.location.IContextHubClient registerClient(android.hardware.location.ContextHubInfo, android.hardware.location.IContextHubClientCallback)
    {
        com.android.server.location.ContextHubClientManager r0;
        short s0, $s1;
        com.android.server.location.ContextHubClientBroker r1;
        android.hardware.contexthub.V1_0.IContexthub $r2;
        android.content.Context $r3;
        java.util.concurrent.ConcurrentHashMap $r4;
        java.lang.Short $r5;
        java.lang.String $r7, $r11;
        java.lang.StringBuilder $r8;
        android.hardware.location.IContextHubClient $r12;
        java.lang.Throwable $r13;
        android.os.RemoteException $r14;
        android.hardware.location.ContextHubInfo r15;
        android.hardware.location.IContextHubClientCallback r16;
        com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque r17;
        com.android.server.location.ContextHubClientManager$RegistrationRecord r18;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        r15 := @parameter0: android.hardware.location.ContextHubInfo;

        r16 := @parameter1: android.hardware.location.IContextHubClientCallback;

        entermonitor r0;

     label1:
        s0 = specialinvoke r0.<com.android.server.location.ContextHubClientManager: short getHostEndPointId()>();

        r1 = new com.android.server.location.ContextHubClientBroker;

        $r3 = r0.<com.android.server.location.ContextHubClientManager: android.content.Context mContext>;

        $r2 = r0.<com.android.server.location.ContextHubClientManager: android.hardware.contexthub.V1_0.IContexthub mContextHubProxy>;

        specialinvoke r1.<com.android.server.location.ContextHubClientBroker: void <init>(android.content.Context,android.hardware.contexthub.V1_0.IContexthub,com.android.server.location.ContextHubClientManager,android.hardware.location.ContextHubInfo,short,android.hardware.location.IContextHubClientCallback)>($r3, $r2, r0, r15, s0, r16);

        $r4 = r0.<com.android.server.location.ContextHubClientManager: java.util.concurrent.ConcurrentHashMap mHostEndPointIdToClientMap>;

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        r17 = r0.<com.android.server.location.ContextHubClientManager: com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque mRegistrationRecordDeque>;

        r18 = new com.android.server.location.ContextHubClientManager$RegistrationRecord;

        $r7 = virtualinvoke r1.<com.android.server.location.ContextHubClientBroker: java.lang.String toString()>();

        specialinvoke r18.<com.android.server.location.ContextHubClientManager$RegistrationRecord: void <init>(com.android.server.location.ContextHubClientManager,java.lang.String,int)>(r0, $r7, 0);

        virtualinvoke r17.<com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque: boolean add(java.lang.Object)>(r18);

     label2:
        exitmonitor r0;

     label3:
        virtualinvoke r1.<com.android.server.location.ContextHubClientBroker: void attachDeathRecipient()>();

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registered client with host endpoint ID ");

        $s1 = virtualinvoke r1.<com.android.server.location.ContextHubClientBroker: short getHostEndPointId()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ContextHubClientManager", $r11);

        $r12 = staticinvoke <android.hardware.location.IContextHubClient$Stub: android.hardware.location.IContextHubClient asInterface(android.os.IBinder)>(r1);

        return $r12;

     label5:
        $r14 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubClientManager", "Failed to attach death recipient to client");

        virtualinvoke r1.<com.android.server.location.ContextHubClientBroker: void close()>();

        return null;

     label6:
        $r13 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.lang.String toString()
    {
        com.android.server.location.ContextHubClientManager r0;
        com.android.server.location.ContextHubClientBroker r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.util.Collection $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r8, $r14;
        com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque $r7;
        java.lang.Object $r10, $r13;
        java.lang.String r18, r22;
        java.util.Iterator r19, r23;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        r18 = "";

        $r2 = r0.<com.android.server.location.ContextHubClientManager: java.util.concurrent.ConcurrentHashMap mHostEndPointIdToClientMap>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        r19 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r1 = (com.android.server.location.ContextHubClientBroker) $r13;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nRegistration history:\n");

        r22 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = r0.<com.android.server.location.ContextHubClientManager: com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque mRegistrationRecordDeque>;

        r23 = virtualinvoke $r7.<com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque: java.util.Iterator descendingIterator()>();

     label3:
        $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r10 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r22 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label4:
        return r22;
    }

    void unregisterClient(short)
    {
        com.android.server.location.ContextHubClientManager r0;
        short s0;
        java.util.concurrent.ConcurrentHashMap $r1, $r16;
        java.lang.Short $r2, $r17;
        java.lang.Object $r3, $r18;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r7, $r11, $r14;
        boolean $z0;
        com.android.server.location.ContextHubClientManager$RegistrationRecord $r12;
        com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque $r13;
        com.android.server.location.ContextHubClientBroker r15;
        byte b3;

        r0 := @this: com.android.server.location.ContextHubClientManager;

        s0 := @parameter0: short;

        $r1 = r0.<com.android.server.location.ContextHubClientManager: java.util.concurrent.ConcurrentHashMap mHostEndPointIdToClientMap>;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        $r3 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r2);

        r15 = (com.android.server.location.ContextHubClientBroker) $r3;

        if r15 == null goto label3;

        $z0 = virtualinvoke r15.<com.android.server.location.ContextHubClientBroker: boolean isPendingIntentCancelled()>();

        if $z0 == 0 goto label1;

        b3 = 2;

        goto label2;

     label1:
        b3 = 1;

     label2:
        $r13 = r0.<com.android.server.location.ContextHubClientManager: com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque mRegistrationRecordDeque>;

        $r12 = new com.android.server.location.ContextHubClientManager$RegistrationRecord;

        $r14 = virtualinvoke r15.<com.android.server.location.ContextHubClientBroker: java.lang.String toString()>();

        specialinvoke $r12.<com.android.server.location.ContextHubClientManager$RegistrationRecord: void <init>(com.android.server.location.ContextHubClientManager,java.lang.String,int)>(r0, $r14, b3);

        virtualinvoke $r13.<com.android.server.location.ContextHubClientManager$ConcurrentLinkedEvictingDeque: boolean add(java.lang.Object)>($r12);

     label3:
        $r16 = r0.<com.android.server.location.ContextHubClientManager: java.util.concurrent.ConcurrentHashMap mHostEndPointIdToClientMap>;

        $r17 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        $r18 = virtualinvoke $r16.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r17);

        if $r18 == null goto label4;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unregistered client with host endpoint ID ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ContextHubClientManager", $r11);

        goto label5;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot unregister non-existing client with host endpoint ID ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubClientManager", $r7);

     label5:
        return;
    }
}
