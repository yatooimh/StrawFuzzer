public class com.android.server.location.ContextHubService extends android.hardware.location.IContextHubService$Stub
{
    private static final boolean DEBUG_LOG_ENABLED;
    public static final int MSG_DISABLE_NANO_APP;
    public static final int MSG_ENABLE_NANO_APP;
    public static final int MSG_HUB_RESET;
    public static final int MSG_LOAD_NANO_APP;
    public static final int MSG_QUERY_MEMORY;
    public static final int MSG_QUERY_NANO_APPS;
    public static final int MSG_UNLOAD_NANO_APP;
    private static final int OS_APP_INSTANCE;
    private static final java.lang.String TAG;
    private final android.os.RemoteCallbackList mCallbacksList;
    private final com.android.server.location.ContextHubClientManager mClientManager;
    private final android.content.Context mContext;
    private final java.util.Map mContextHubIdToInfoMap;
    private final java.util.List mContextHubInfoList;
    private final com.android.server.location.IContextHubWrapper mContextHubWrapper;
    private final java.util.Map mDefaultClientMap;
    private final com.android.server.location.NanoAppStateManager mNanoAppStateManager;
    private final com.android.server.location.ContextHubTransactionManager mTransactionManager;

    public void <init>(android.content.Context)
    {
        com.android.server.location.ContextHubService r0;
        java.util.Iterator r1;
        int i0;
        com.android.server.location.IContextHubWrapper $r5, $r9, $r13, $r24, $r39, r51;
        android.content.Context $r6, $r25, r50;
        android.hardware.contexthub.V1_0.IContexthub $r7, $r10, $r14, r56;
        com.android.server.location.NanoAppStateManager $r11, r61;
        com.android.server.location.ContextHubClientManager $r12, $r35, r62;
        java.util.HashMap $r15, r65;
        java.util.Map $r16, $r18, $r21, $r23, $r31, $r40, $r41;
        java.util.Collection $r19;
        java.util.Set $r22;
        boolean $z0, $z1;
        android.content.ContentResolver $r26;
        android.net.Uri $r27;
        java.lang.Object $r29, $r33, r52;
        java.lang.Integer $r30, $r32, $r34;
        android.hardware.location.IContextHubClientCallback $r36;
        android.hardware.location.IContextHubClient $r37;
        java.util.List $r42, r69;
        android.os.RemoteException $r43, $r44;
        java.lang.String $r49;
        android.hardware.location.ContextHubInfo r55;
        android.os.RemoteCallbackList r60;
        com.android.server.location.ContextHubTransactionManager r63;
        java.util.ArrayList r64;
        com.android.server.location.ContextHubService$ContextHubServiceCallback r66;
        java.lang.StringBuilder r67;
        com.android.server.location.ContextHubService$1 r68;

        r0 := @this: com.android.server.location.ContextHubService;

        r50 := @parameter0: android.content.Context;

        specialinvoke r0.<android.hardware.location.IContextHubService$Stub: void <init>()>();

        r60 = new android.os.RemoteCallbackList;

        specialinvoke r60.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.location.ContextHubService: android.os.RemoteCallbackList mCallbacksList> = r60;

        r61 = new com.android.server.location.NanoAppStateManager;

        specialinvoke r61.<com.android.server.location.NanoAppStateManager: void <init>()>();

        r0.<com.android.server.location.ContextHubService: com.android.server.location.NanoAppStateManager mNanoAppStateManager> = r61;

        r0.<com.android.server.location.ContextHubService: android.content.Context mContext> = r50;

        r51 = specialinvoke r0.<com.android.server.location.ContextHubService: com.android.server.location.IContextHubWrapper getContextHubWrapper()>();

        r0.<com.android.server.location.ContextHubService: com.android.server.location.IContextHubWrapper mContextHubWrapper> = r51;

        if r51 != null goto label01;

        r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager> = null;

        r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubClientManager mClientManager> = null;

        $r40 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<com.android.server.location.ContextHubService: java.util.Map mDefaultClientMap> = $r40;

        $r41 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<com.android.server.location.ContextHubService: java.util.Map mContextHubIdToInfoMap> = $r41;

        $r42 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<com.android.server.location.ContextHubService: java.util.List mContextHubInfoList> = $r42;

        return;

     label01:
        r62 = new com.android.server.location.ContextHubClientManager;

        $r6 = r0.<com.android.server.location.ContextHubService: android.content.Context mContext>;

        $r5 = r0.<com.android.server.location.ContextHubService: com.android.server.location.IContextHubWrapper mContextHubWrapper>;

        $r7 = virtualinvoke $r5.<com.android.server.location.IContextHubWrapper: android.hardware.contexthub.V1_0.IContexthub getHub()>();

        specialinvoke r62.<com.android.server.location.ContextHubClientManager: void <init>(android.content.Context,android.hardware.contexthub.V1_0.IContexthub)>($r6, $r7);

        r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubClientManager mClientManager> = r62;

        r63 = new com.android.server.location.ContextHubTransactionManager;

        $r9 = r0.<com.android.server.location.ContextHubService: com.android.server.location.IContextHubWrapper mContextHubWrapper>;

        $r10 = virtualinvoke $r9.<com.android.server.location.IContextHubWrapper: android.hardware.contexthub.V1_0.IContexthub getHub()>();

        $r12 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubClientManager mClientManager>;

        $r11 = r0.<com.android.server.location.ContextHubService: com.android.server.location.NanoAppStateManager mNanoAppStateManager>;

        specialinvoke r63.<com.android.server.location.ContextHubTransactionManager: void <init>(android.hardware.contexthub.V1_0.IContexthub,com.android.server.location.ContextHubClientManager,com.android.server.location.NanoAppStateManager)>($r10, $r12, $r11);

        r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager> = r63;

     label02:
        $r13 = r0.<com.android.server.location.ContextHubService: com.android.server.location.IContextHubWrapper mContextHubWrapper>;

        $r14 = virtualinvoke $r13.<com.android.server.location.IContextHubWrapper: android.hardware.contexthub.V1_0.IContexthub getHub()>();

        r52 = interfaceinvoke $r14.<android.hardware.contexthub.V1_0.IContexthub: java.util.ArrayList getHubs()>();

     label03:
        goto label05;

     label04:
        $r43 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContextHubService", "RemoteException while getting Context Hub info", $r43);

        r52 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label05:
        r69 = (java.util.List) r52;

        $r15 = staticinvoke <com.android.server.location.ContextHubServiceUtil: java.util.HashMap createContextHubInfoMap(java.util.List)>(r69);

        $r16 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r15);

        r0.<com.android.server.location.ContextHubService: java.util.Map mContextHubIdToInfoMap> = $r16;

        r64 = new java.util.ArrayList;

        $r18 = r0.<com.android.server.location.ContextHubService: java.util.Map mContextHubIdToInfoMap>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.util.Collection values()>();

        specialinvoke r64.<java.util.ArrayList: void <init>(java.util.Collection)>($r19);

        r0.<com.android.server.location.ContextHubService: java.util.List mContextHubInfoList> = r64;

        r65 = new java.util.HashMap;

        specialinvoke r65.<java.util.HashMap: void <init>()>();

        $r21 = r0.<com.android.server.location.ContextHubService: java.util.Map mContextHubIdToInfoMap>;

        $r22 = interfaceinvoke $r21.<java.util.Map: java.util.Set keySet()>();

        r1 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r29 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r30 = (java.lang.Integer) $r29;

        i0 = virtualinvoke $r30.<java.lang.Integer: int intValue()>();

        $r31 = r0.<com.android.server.location.ContextHubService: java.util.Map mContextHubIdToInfoMap>;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r33 = interfaceinvoke $r31.<java.util.Map: java.lang.Object get(java.lang.Object)>($r32);

        r55 = (android.hardware.location.ContextHubInfo) $r33;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r35 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubClientManager mClientManager>;

        $r36 = specialinvoke r0.<com.android.server.location.ContextHubService: android.hardware.location.IContextHubClientCallback createDefaultClientCallback(int)>(i0);

        $r37 = virtualinvoke $r35.<com.android.server.location.ContextHubClientManager: android.hardware.location.IContextHubClient registerClient(android.hardware.location.ContextHubInfo,android.hardware.location.IContextHubClientCallback)>(r55, $r36);

        virtualinvoke r65.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r37);

     label07:
        $r39 = r0.<com.android.server.location.ContextHubService: com.android.server.location.IContextHubWrapper mContextHubWrapper>;

        r56 = virtualinvoke $r39.<com.android.server.location.IContextHubWrapper: android.hardware.contexthub.V1_0.IContexthub getHub()>();

        r66 = new com.android.server.location.ContextHubService$ContextHubServiceCallback;

        specialinvoke r66.<com.android.server.location.ContextHubService$ContextHubServiceCallback: void <init>(com.android.server.location.ContextHubService,int)>(r0, i0);

        interfaceinvoke r56.<android.hardware.contexthub.V1_0.IContexthub: int registerCallback(int,android.hardware.contexthub.V1_0.IContexthubCallback)>(i0, r66);

     label08:
        goto label10;

     label09:
        $r44 := @caughtexception;

        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException while registering service callback for hub (ID = ");

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r49 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContextHubService", $r49, $r44);

     label10:
        specialinvoke r0.<com.android.server.location.ContextHubService: int queryNanoAppsInternal(int)>(i0);

        goto label06;

     label11:
        $r23 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r65);

        r0.<com.android.server.location.ContextHubService: java.util.Map mDefaultClientMap> = $r23;

        $r24 = r0.<com.android.server.location.ContextHubService: com.android.server.location.IContextHubWrapper mContextHubWrapper>;

        $z0 = virtualinvoke $r24.<com.android.server.location.IContextHubWrapper: boolean supportsSettingNotifications()>();

        if $z0 == 0 goto label12;

        specialinvoke r0.<com.android.server.location.ContextHubService: void sendLocationSettingUpdate()>();

        $r25 = r0.<com.android.server.location.ContextHubService: android.content.Context mContext>;

        $r26 = virtualinvoke $r25.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r27 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("location_mode");

        r68 = new com.android.server.location.ContextHubService$1;

        specialinvoke r68.<com.android.server.location.ContextHubService$1: void <init>(com.android.server.location.ContextHubService,android.os.Handler)>(r0, null);

        virtualinvoke $r26.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r27, 1, r68, -1);

     label12:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label07 to label08 with label09;
    }

    static void access$000(com.android.server.location.ContextHubService, int, android.hardware.contexthub.V1_0.ContextHubMsg)
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        android.hardware.contexthub.V1_0.ContextHubMsg r1;

        r0 := @parameter0: com.android.server.location.ContextHubService;

        i0 := @parameter1: int;

        r1 := @parameter2: android.hardware.contexthub.V1_0.ContextHubMsg;

        specialinvoke r0.<com.android.server.location.ContextHubService: void handleClientMessageCallback(int,android.hardware.contexthub.V1_0.ContextHubMsg)>(i0, r1);

        return;
    }

    static void access$100(com.android.server.location.ContextHubService, int, int, int)
    {
        com.android.server.location.ContextHubService r0;
        int i0, i1, i2;

        r0 := @parameter0: com.android.server.location.ContextHubService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.server.location.ContextHubService: void handleTransactionResultCallback(int,int,int)>(i0, i1, i2);

        return;
    }

    static void access$200(com.android.server.location.ContextHubService, int, int)
    {
        com.android.server.location.ContextHubService r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.location.ContextHubService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.location.ContextHubService: void handleHubEventCallback(int,int)>(i0, i1);

        return;
    }

    static void access$300(com.android.server.location.ContextHubService, int, long, int)
    {
        com.android.server.location.ContextHubService r0;
        int i0, i2;
        long l1;

        r0 := @parameter0: com.android.server.location.ContextHubService;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.server.location.ContextHubService: void handleAppAbortCallback(int,long,int)>(i0, l1, i2);

        return;
    }

    static void access$400(com.android.server.location.ContextHubService, int, java.util.List)
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        java.util.List r1;

        r0 := @parameter0: com.android.server.location.ContextHubService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        specialinvoke r0.<com.android.server.location.ContextHubService: void handleQueryAppsCallback(int,java.util.List)>(i0, r1);

        return;
    }

    static void access$500(com.android.server.location.ContextHubService)
    {
        com.android.server.location.ContextHubService r0;

        r0 := @parameter0: com.android.server.location.ContextHubService;

        specialinvoke r0.<com.android.server.location.ContextHubService: void sendLocationSettingUpdate()>();

        return;
    }

    static com.android.server.location.NanoAppStateManager access$600(com.android.server.location.ContextHubService)
    {
        com.android.server.location.ContextHubService r0;
        com.android.server.location.NanoAppStateManager $r1;

        r0 := @parameter0: com.android.server.location.ContextHubService;

        $r1 = r0.<com.android.server.location.ContextHubService: com.android.server.location.NanoAppStateManager mNanoAppStateManager>;

        return $r1;
    }

    static int access$700(com.android.server.location.ContextHubService, int, int, int, byte[])
    {
        com.android.server.location.ContextHubService r0;
        int i0, i1, i2, $i3;
        byte[] r1;

        r0 := @parameter0: com.android.server.location.ContextHubService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: byte[];

        $i3 = specialinvoke r0.<com.android.server.location.ContextHubService: int onMessageReceiptOldApi(int,int,int,byte[])>(i0, i1, i2, r1);

        return $i3;
    }

    static void access$800(com.android.server.location.ContextHubService, int, int, android.hardware.location.NanoAppBinary)
    {
        com.android.server.location.ContextHubService r0;
        int i0, i1;
        android.hardware.location.NanoAppBinary r1;

        r0 := @parameter0: com.android.server.location.ContextHubService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.hardware.location.NanoAppBinary;

        specialinvoke r0.<com.android.server.location.ContextHubService: void handleLoadResponseOldApi(int,int,android.hardware.location.NanoAppBinary)>(i0, i1, r1);

        return;
    }

    static void access$900(com.android.server.location.ContextHubService, int, int)
    {
        com.android.server.location.ContextHubService r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.location.ContextHubService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.location.ContextHubService: void handleUnloadResponseOldApi(int,int)>(i0, i1);

        return;
    }

    private boolean checkHalProxyAndContextHubId(int, android.hardware.location.IContextHubTransactionCallback, int)
    {
        com.android.server.location.ContextHubService r0;
        int i0, i1;
        com.android.server.location.IContextHubWrapper $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r9;
        android.os.RemoteException $r10, $r11;
        android.hardware.location.IContextHubTransactionCallback r12;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        r12 := @parameter1: android.hardware.location.IContextHubTransactionCallback;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.location.ContextHubService: com.android.server.location.IContextHubWrapper mContextHubWrapper>;

        if $r2 != null goto label05;

     label01:
        interfaceinvoke r12.<android.hardware.location.IContextHubTransactionCallback: void onTransactionComplete(int)>(8);

     label02:
        goto label04;

     label03:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContextHubService", "RemoteException while calling onTransactionComplete", $r11);

     label04:
        return 0;

     label05:
        $z0 = specialinvoke r0.<com.android.server.location.ContextHubService: boolean isValidContextHubId(int)>(i0);

        if $z0 != 0 goto label10;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot start ");

        $r5 = staticinvoke <android.hardware.location.ContextHubTransaction: java.lang.String typeToString(int,boolean)>(i1, 0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transaction for invalid hub ID ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubService", $r9);

     label06:
        interfaceinvoke r12.<android.hardware.location.IContextHubTransactionCallback: void onTransactionComplete(int)>(2);

     label07:
        goto label09;

     label08:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContextHubService", "RemoteException while calling onTransactionComplete", $r10);

     label09:
        return 0;

     label10:
        return 1;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch android.os.RemoteException from label06 to label07 with label08;
    }

    private void checkPermissions()
    {
        com.android.server.location.ContextHubService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.location.ContextHubService;

        $r1 = r0.<com.android.server.location.ContextHubService: android.content.Context mContext>;

        staticinvoke <com.android.server.location.ContextHubServiceUtil: void checkPermissions(android.content.Context)>($r1);

        return;
    }

    private android.hardware.location.IContextHubClientCallback createDefaultClientCallback(int)
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        com.android.server.location.ContextHubService$2 $r1;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        $r1 = new com.android.server.location.ContextHubService$2;

        specialinvoke $r1.<com.android.server.location.ContextHubService$2: void <init>(com.android.server.location.ContextHubService,int)>(r0, i0);

        return $r1;
    }

    private android.hardware.location.IContextHubTransactionCallback createLoadTransactionCallback(int, android.hardware.location.NanoAppBinary)
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        android.hardware.location.NanoAppBinary r1;
        com.android.server.location.ContextHubService$3 $r2;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.location.NanoAppBinary;

        $r2 = new com.android.server.location.ContextHubService$3;

        specialinvoke $r2.<com.android.server.location.ContextHubService$3: void <init>(com.android.server.location.ContextHubService,int,android.hardware.location.NanoAppBinary)>(r0, i0, r1);

        return $r2;
    }

    private android.hardware.location.IContextHubTransactionCallback createQueryTransactionCallback(int)
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        com.android.server.location.ContextHubService$5 $r1;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        $r1 = new com.android.server.location.ContextHubService$5;

        specialinvoke $r1.<com.android.server.location.ContextHubService$5: void <init>(com.android.server.location.ContextHubService,int)>(r0, i0);

        return $r1;
    }

    private android.hardware.location.IContextHubTransactionCallback createUnloadTransactionCallback(int)
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        com.android.server.location.ContextHubService$4 $r1;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        $r1 = new com.android.server.location.ContextHubService$4;

        specialinvoke $r1.<com.android.server.location.ContextHubService$4: void <init>(com.android.server.location.ContextHubService,int)>(r0, i0);

        return $r1;
    }

    private void dump(android.util.proto.ProtoOutputStream)
    {
        com.android.server.location.ContextHubService r0;
        android.util.proto.ProtoOutputStream r1;
        long l0;
        java.util.Map $r2;
        java.util.Collection $r3;
        com.android.server.location._$$Lambda$ContextHubService$CF_XmCHU9Bf2P5yun6nYrbm6Fpk $r4;
        com.android.server.location.ContextHubClientManager $r5;

        r0 := @this: com.android.server.location.ContextHubService;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        $r2 = r0.<com.android.server.location.ContextHubService: java.util.Map mContextHubIdToInfoMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = new com.android.server.location._$$Lambda$ContextHubService$CF_XmCHU9Bf2P5yun6nYrbm6Fpk;

        specialinvoke $r4.<com.android.server.location._$$Lambda$ContextHubService$CF_XmCHU9Bf2P5yun6nYrbm6Fpk: void <init>(android.util.proto.ProtoOutputStream)>(r1);

        interfaceinvoke $r3.<java.util.Collection: void forEach(java.util.function.Consumer)>($r4);

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268034L);

        $r5 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubClientManager mClientManager>;

        virtualinvoke $r5.<com.android.server.location.ContextHubClientManager: void dump(android.util.proto.ProtoOutputStream)>(r1);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void flush()>();

        return;
    }

    private com.android.server.location.IContextHubWrapper getContextHubWrapper()
    {
        com.android.server.location.ContextHubService r0;
        com.android.server.location.IContextHubWrapper r1, r2;

        r0 := @this: com.android.server.location.ContextHubService;

        r1 = staticinvoke <com.android.server.location.IContextHubWrapper: com.android.server.location.IContextHubWrapper maybeConnectTo1_1()>();

        r2 = r1;

        if r1 != null goto label1;

        r2 = staticinvoke <com.android.server.location.IContextHubWrapper: com.android.server.location.IContextHubWrapper maybeConnectTo1_0()>();

     label1:
        return r2;
    }

    private void handleAppAbortCallback(int, long, int)
    {
        com.android.server.location.ContextHubService r0;
        int i0, i2;
        long l1;
        com.android.server.location.ContextHubClientManager $r1;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubClientManager mClientManager>;

        virtualinvoke $r1.<com.android.server.location.ContextHubClientManager: void onNanoAppAborted(int,long,int)>(i0, l1, i2);

        return;
    }

    private void handleClientMessageCallback(int, android.hardware.contexthub.V1_0.ContextHubMsg)
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        android.hardware.contexthub.V1_0.ContextHubMsg r1;
        com.android.server.location.ContextHubClientManager $r2;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.contexthub.V1_0.ContextHubMsg;

        $r2 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubClientManager mClientManager>;

        virtualinvoke $r2.<com.android.server.location.ContextHubClientManager: void onMessageFromNanoApp(int,android.hardware.contexthub.V1_0.ContextHubMsg)>(i0, r1);

        return;
    }

    private void handleHubEventCallback(int, int)
    {
        com.android.server.location.ContextHubService r0;
        int i0, i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r8;
        com.android.server.location.ContextHubTransactionManager $r9;
        com.android.server.location.ContextHubClientManager $r10;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 1 goto label1;

        specialinvoke r0.<com.android.server.location.ContextHubService: void sendLocationSettingUpdate()>();

        $r9 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        virtualinvoke $r9.<com.android.server.location.ContextHubTransactionManager: void onHubReset()>();

        specialinvoke r0.<com.android.server.location.ContextHubService: int queryNanoAppsInternal(int)>(i0);

        $r10 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubClientManager mClientManager>;

        virtualinvoke $r10.<com.android.server.location.ContextHubClientManager: void onHubReset(int)>(i0);

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received unknown hub event (hub ID = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ContextHubService", $r8);

     label2:
        return;
    }

    private void handleLoadResponseOldApi(int, int, android.hardware.location.NanoAppBinary)
    {
        com.android.server.location.ContextHubService r0;
        int i0, i6, i7;
        android.hardware.location.NanoAppBinary r1;
        byte[] r2;
        byte $b1, $b2;
        com.android.server.location.NanoAppStateManager $r3;
        long $l3;
        java.nio.ByteBuffer $r4, $r6;
        java.nio.ByteOrder $r5;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        i6 := @parameter1: int;

        r1 := @parameter2: android.hardware.location.NanoAppBinary;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubService", "Nanoapp binary field was null for a load transaction");

        return;

     label1:
        r2 = newarray (byte)[5];

        $b1 = (byte) i6;

        $b2 = (byte) $b1;

        r2[0] = $b2;

        $r3 = r0.<com.android.server.location.ContextHubService: com.android.server.location.NanoAppStateManager mNanoAppStateManager>;

        $l3 = virtualinvoke r1.<android.hardware.location.NanoAppBinary: long getNanoAppId()>();

        i7 = virtualinvoke $r3.<com.android.server.location.NanoAppStateManager: int getNanoAppHandle(int,long)>(i0, $l3);

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r2, 1, 4);

        $r5 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r6 = virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r5);

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i7);

        specialinvoke r0.<com.android.server.location.ContextHubService: int onMessageReceiptOldApi(int,int,int,byte[])>(3, i0, -1, r2);

        return;
    }

    private void handleQueryAppsCallback(int, java.util.List)
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        java.util.List r1, r2;
        com.android.server.location.NanoAppStateManager $r3;
        com.android.server.location.ContextHubTransactionManager $r4;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        r2 = staticinvoke <com.android.server.location.ContextHubServiceUtil: java.util.List createNanoAppStateList(java.util.List)>(r1);

        $r3 = r0.<com.android.server.location.ContextHubService: com.android.server.location.NanoAppStateManager mNanoAppStateManager>;

        virtualinvoke $r3.<com.android.server.location.NanoAppStateManager: void updateCache(int,java.util.List)>(i0, r1);

        $r4 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        virtualinvoke $r4.<com.android.server.location.ContextHubTransactionManager: void onQueryResponse(java.util.List)>(r2);

        return;
    }

    private void handleTransactionResultCallback(int, int, int)
    {
        com.android.server.location.ContextHubService r0;
        int i0, i1, i2;
        com.android.server.location.ContextHubTransactionManager $r1;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        virtualinvoke $r1.<com.android.server.location.ContextHubTransactionManager: void onTransactionResponse(int,int)>(i1, i2);

        return;
    }

    private void handleUnloadResponseOldApi(int, int)
    {
        com.android.server.location.ContextHubService r0;
        int i0, i1;
        byte[] $r1;
        byte $b2;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = newarray (byte)[1];

        $b2 = (byte) i1;

        $r1[0] = $b2;

        specialinvoke r0.<com.android.server.location.ContextHubService: int onMessageReceiptOldApi(int,int,int,byte[])>(4, i0, -1, $r1);

        return;
    }

    private boolean isValidContextHubId(int)
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        java.util.Map $r1;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.location.ContextHubService: java.util.Map mContextHubIdToInfoMap>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        return $z0;
    }

    static void lambda$dump$1(java.io.PrintWriter, android.hardware.location.NanoAppInstanceInfo)
    {
        java.io.PrintWriter r0;
        android.hardware.location.NanoAppInstanceInfo r1;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: android.hardware.location.NanoAppInstanceInfo;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.Object)>(r1);

        return;
    }

    static void lambda$dump$2(android.util.proto.ProtoOutputStream, android.hardware.location.ContextHubInfo)
    {
        android.util.proto.ProtoOutputStream r0;
        android.hardware.location.ContextHubInfo r1;
        long l0;

        r0 := @parameter0: android.util.proto.ProtoOutputStream;

        r1 := @parameter1: android.hardware.location.ContextHubInfo;

        l0 = virtualinvoke r0.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895809L);

        virtualinvoke r1.<android.hardware.location.ContextHubInfo: void dump(android.util.proto.ProtoOutputStream)>(r0);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        return;
    }

    static void lambda$findNanoAppOnHub$0(android.hardware.location.NanoAppFilter, java.util.ArrayList, android.hardware.location.NanoAppInstanceInfo)
    {
        android.hardware.location.NanoAppFilter r0;
        java.util.ArrayList r1;
        android.hardware.location.NanoAppInstanceInfo r2;
        boolean $z0;
        int $i0;
        java.lang.Integer $r3;

        r0 := @parameter0: android.hardware.location.NanoAppFilter;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: android.hardware.location.NanoAppInstanceInfo;

        $z0 = virtualinvoke r0.<android.hardware.location.NanoAppFilter: boolean testMatch(android.hardware.location.NanoAppInstanceInfo)>(r2);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r2.<android.hardware.location.NanoAppInstanceInfo: int getHandle()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label1:
        return;
    }

    private int onMessageReceiptOldApi(int, int, int, byte[])
    {
        com.android.server.location.ContextHubService r0;
        int i0, i1, i2, i4, i5;
        android.os.RemoteCallbackList $r4, $r6, $r7;
        android.hardware.location.ContextHubMessage $r5;
        android.os.IInterface $r8;
        android.os.RemoteException $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r16;
        byte[] r17;
        android.hardware.location.IContextHubCallback r18;

        r0 := @this: com.android.server.location.ContextHubService;

        i4 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r17 := @parameter3: byte[];

        if r17 != null goto label1;

        return -1;

     label1:
        $r4 = r0.<com.android.server.location.ContextHubService: android.os.RemoteCallbackList mCallbacksList>;

        i2 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        if i2 >= 1 goto label2;

        return 0;

     label2:
        $r5 = new android.hardware.location.ContextHubMessage;

        specialinvoke $r5.<android.hardware.location.ContextHubMessage: void <init>(int,int,byte[])>(i4, 0, r17);

        i5 = 0;

     label3:
        if i5 >= i2 goto label8;

        $r7 = r0.<com.android.server.location.ContextHubService: android.os.RemoteCallbackList mCallbacksList>;

        $r8 = virtualinvoke $r7.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i5);

        r18 = (android.hardware.location.IContextHubCallback) $r8;

     label4:
        interfaceinvoke r18.<android.hardware.location.IContextHubCallback: void onMessageReceipt(int,int,android.hardware.location.ContextHubMessage)>(i0, i1, $r5);

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception (");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") calling remote callback (");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ContextHubService", $r16);

     label7:
        i5 = i5 + 1;

        goto label3;

     label8:
        $r6 = r0.<com.android.server.location.ContextHubService: android.os.RemoteCallbackList mCallbacksList>;

        virtualinvoke $r6.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return 0;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private int queryNanoAppsInternal(int)
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        com.android.server.location.IContextHubWrapper $r1;
        com.android.server.location.ContextHubTransactionManager $r2, $r3;
        android.hardware.location.IContextHubTransactionCallback r4;
        com.android.server.location.ContextHubServiceTransaction r5;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.location.ContextHubService: com.android.server.location.IContextHubWrapper mContextHubWrapper>;

        if $r1 != null goto label1;

        return 1;

     label1:
        r4 = specialinvoke r0.<com.android.server.location.ContextHubService: android.hardware.location.IContextHubTransactionCallback createQueryTransactionCallback(int)>(i0);

        $r2 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        r5 = virtualinvoke $r2.<com.android.server.location.ContextHubTransactionManager: com.android.server.location.ContextHubServiceTransaction createQueryTransaction(int,android.hardware.location.IContextHubTransactionCallback)>(i0, r4);

        $r3 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        virtualinvoke $r3.<com.android.server.location.ContextHubTransactionManager: void addTransaction(com.android.server.location.ContextHubServiceTransaction)>(r5);

        return 0;
    }

    private void sendLocationSettingUpdate()
    {
        com.android.server.location.ContextHubService r0;
        boolean z0;
        com.android.server.location.IContextHubWrapper r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.os.UserHandle $r4;
        android.location.LocationManager $r5;
        byte b0;

        r0 := @this: com.android.server.location.ContextHubService;

        $r2 = r0.<com.android.server.location.ContextHubService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/location/LocationManager;");

        $r5 = (android.location.LocationManager) $r3;

        $r4 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        z0 = virtualinvoke $r5.<android.location.LocationManager: boolean isLocationEnabledForUser(android.os.UserHandle)>($r4);

        r1 = r0.<com.android.server.location.ContextHubService: com.android.server.location.IContextHubWrapper mContextHubWrapper>;

        b0 = (byte) z0;

        virtualinvoke r1.<com.android.server.location.IContextHubWrapper: void onSettingChanged(byte,byte)>(0, b0);

        return;
    }

    public android.hardware.location.IContextHubClient createClient(int, android.hardware.location.IContextHubClientCallback) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        android.hardware.location.ContextHubInfo r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        java.lang.NullPointerException $r7;
        java.util.Map $r8;
        java.lang.Integer $r9;
        java.lang.Object $r10;
        com.android.server.location.ContextHubClientManager $r11;
        android.hardware.location.IContextHubClient $r12;
        android.hardware.location.IContextHubClientCallback r13;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        r13 := @parameter1: android.hardware.location.IContextHubClientCallback;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $z0 = specialinvoke r0.<com.android.server.location.ContextHubService: boolean isValidContextHubId(int)>(i0);

        if $z0 == 0 goto label2;

        if r13 == null goto label1;

        $r8 = r0.<com.android.server.location.ContextHubService: java.util.Map mContextHubIdToInfoMap>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        r1 = (android.hardware.location.ContextHubInfo) $r10;

        $r11 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubClientManager mClientManager>;

        $r12 = virtualinvoke $r11.<com.android.server.location.ContextHubClientManager: android.hardware.location.IContextHubClient registerClient(android.hardware.location.ContextHubInfo,android.hardware.location.IContextHubClientCallback)>(r1, r13);

        return $r12;

     label1:
        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot register client with null callback");

        throw $r7;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid context hub ID ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public android.hardware.location.IContextHubClient createPendingIntentClient(int, android.app.PendingIntent, long) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        long l1;
        android.hardware.location.ContextHubInfo r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        java.util.Map $r7;
        java.lang.Integer $r8;
        java.lang.Object $r9;
        com.android.server.location.ContextHubClientManager $r10;
        android.hardware.location.IContextHubClient $r11;
        android.app.PendingIntent r12;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        r12 := @parameter1: android.app.PendingIntent;

        l1 := @parameter2: long;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $z0 = specialinvoke r0.<com.android.server.location.ContextHubService: boolean isValidContextHubId(int)>(i0);

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.server.location.ContextHubService: java.util.Map mContextHubIdToInfoMap>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r1 = (android.hardware.location.ContextHubInfo) $r9;

        $r10 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubClientManager mClientManager>;

        $r11 = virtualinvoke $r10.<com.android.server.location.ContextHubClientManager: android.hardware.location.IContextHubClient registerClient(android.hardware.location.ContextHubInfo,android.app.PendingIntent,long)>(r1, r12, l1);

        return $r11;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid context hub ID ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void disableNanoApp(int, android.hardware.location.IContextHubTransactionCallback, long) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        long l1;
        boolean $z0;
        com.android.server.location.ContextHubTransactionManager $r1, $r2;
        android.hardware.location.IContextHubTransactionCallback r3;
        com.android.server.location.ContextHubServiceTransaction r4;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        r3 := @parameter1: android.hardware.location.IContextHubTransactionCallback;

        l1 := @parameter2: long;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $z0 = specialinvoke r0.<com.android.server.location.ContextHubService: boolean checkHalProxyAndContextHubId(int,android.hardware.location.IContextHubTransactionCallback,int)>(i0, r3, 3);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        r4 = virtualinvoke $r1.<com.android.server.location.ContextHubTransactionManager: com.android.server.location.ContextHubServiceTransaction createDisableTransaction(int,long,android.hardware.location.IContextHubTransactionCallback)>(i0, l1, r3);

        $r2 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        virtualinvoke $r2.<com.android.server.location.ContextHubTransactionManager: void addTransaction(com.android.server.location.ContextHubServiceTransaction)>(r4);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.location.ContextHubService r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        int i0, i1;
        android.content.Context $r3;
        boolean $z0, $z1, $z2;
        java.util.Map $r4;
        java.util.Collection $r5;
        com.android.server.location._$$Lambda$ContextHubService$HPGvKluemttyVfAcSog_eXiJyHE $r6;
        com.android.server.location.NanoAppStateManager $r7;
        com.android.server.location.ContextHubClientManager $r8;
        java.lang.Object $r9;
        android.hardware.location.ContextHubInfo $r10;
        java.lang.String $r11, $r12;
        android.util.proto.ProtoOutputStream $r13;
        java.io.FileDescriptor r14;
        java.util.Iterator r15;

        r0 := @this: com.android.server.location.ContextHubService;

        r14 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = r0.<com.android.server.location.ContextHubService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r3, "ContextHubService", r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r12 = "--proto";

        $r11 = r2[i1];

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label3;

        $r13 = new android.util.proto.ProtoOutputStream;

        specialinvoke $r13.<android.util.proto.ProtoOutputStream: void <init>(java.io.FileDescriptor)>(r14);

        specialinvoke r0.<com.android.server.location.ContextHubService: void dump(android.util.proto.ProtoOutputStream)>($r13);

        return;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Dumping ContextHub Service");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("=================== CONTEXT HUBS ====================");

        $r4 = r0.<com.android.server.location.ContextHubService: java.util.Map mContextHubIdToInfoMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        r15 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r9 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.hardware.location.ContextHubInfo) $r9;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r10);

        goto label5;

     label6:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("=================== NANOAPPS ====================");

        $r7 = r0.<com.android.server.location.ContextHubService: com.android.server.location.NanoAppStateManager mNanoAppStateManager>;

        $r6 = new com.android.server.location._$$Lambda$ContextHubService$HPGvKluemttyVfAcSog_eXiJyHE;

        specialinvoke $r6.<com.android.server.location._$$Lambda$ContextHubService$HPGvKluemttyVfAcSog_eXiJyHE: void <init>(java.io.PrintWriter)>(r1);

        virtualinvoke $r7.<com.android.server.location.NanoAppStateManager: void foreachNanoAppInstanceInfo(java.util.function.Consumer)>($r6);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("=================== CLIENTS ====================");

        $r8 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubClientManager mClientManager>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r8);

        return;
    }

    public void enableNanoApp(int, android.hardware.location.IContextHubTransactionCallback, long) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        long l1;
        boolean $z0;
        com.android.server.location.ContextHubTransactionManager $r1, $r2;
        android.hardware.location.IContextHubTransactionCallback r3;
        com.android.server.location.ContextHubServiceTransaction r4;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        r3 := @parameter1: android.hardware.location.IContextHubTransactionCallback;

        l1 := @parameter2: long;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $z0 = specialinvoke r0.<com.android.server.location.ContextHubService: boolean checkHalProxyAndContextHubId(int,android.hardware.location.IContextHubTransactionCallback,int)>(i0, r3, 2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        r4 = virtualinvoke $r1.<com.android.server.location.ContextHubTransactionManager: com.android.server.location.ContextHubServiceTransaction createEnableTransaction(int,long,android.hardware.location.IContextHubTransactionCallback)>(i0, l1, r3);

        $r2 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        virtualinvoke $r2.<com.android.server.location.ContextHubTransactionManager: void addTransaction(com.android.server.location.ContextHubServiceTransaction)>(r4);

        return;
    }

    public int[] findNanoAppOnHub(int, android.hardware.location.NanoAppFilter) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        java.util.ArrayList $r2;
        int $i0, $i1, i2, i3, $i4;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        com.android.server.location._$$Lambda$ContextHubService$yrt4Ybb62ufyqsQQMJoTJ2JMw_4 $r5;
        com.android.server.location.NanoAppStateManager $r6;
        android.hardware.location.NanoAppFilter r7;
        int[] r8;

        r0 := @this: com.android.server.location.ContextHubService;

        i2 := @parameter0: int;

        r7 := @parameter1: android.hardware.location.NanoAppFilter;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        if r7 == null goto label1;

        $r6 = r0.<com.android.server.location.ContextHubService: com.android.server.location.NanoAppStateManager mNanoAppStateManager>;

        $r5 = new com.android.server.location._$$Lambda$ContextHubService$yrt4Ybb62ufyqsQQMJoTJ2JMw_4;

        specialinvoke $r5.<com.android.server.location._$$Lambda$ContextHubService$yrt4Ybb62ufyqsQQMJoTJ2JMw_4: void <init>(android.hardware.location.NanoAppFilter,java.util.ArrayList)>(r7, $r2);

        virtualinvoke $r6.<com.android.server.location.NanoAppStateManager: void foreachNanoAppInstanceInfo(java.util.function.Consumer)>($r5);

     label1:
        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r8 = newarray (int)[$i0];

        i3 = 0;

     label2:
        $i4 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i3 >= $i4 goto label3;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r8[i3] = $i1;

        i3 = i3 + 1;

        goto label2;

     label3:
        return r8;
    }

    public int[] getContextHubHandles() throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        java.util.Map $r1;
        java.util.Set $r2;
        int[] $r3;

        r0 := @this: com.android.server.location.ContextHubService;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $r1 = r0.<com.android.server.location.ContextHubService: java.util.Map mContextHubIdToInfoMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = staticinvoke <com.android.server.location.ContextHubServiceUtil: int[] createPrimitiveIntArray(java.util.Collection)>($r2);

        return $r3;
    }

    public android.hardware.location.ContextHubInfo getContextHubInfo(int) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        java.util.Map $r2, $r4;
        java.lang.Integer $r3, $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.hardware.location.ContextHubInfo $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r12;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $r2 = r0.<com.android.server.location.ContextHubService: java.util.Map mContextHubIdToInfoMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Context Hub handle ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in getContextHubInfo");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubService", $r12);

        return null;

     label1:
        $r4 = r0.<com.android.server.location.ContextHubService: java.util.Map mContextHubIdToInfoMap>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (android.hardware.location.ContextHubInfo) $r6;

        return $r7;
    }

    public java.util.List getContextHubs() throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        java.util.List $r1;

        r0 := @this: com.android.server.location.ContextHubService;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $r1 = r0.<com.android.server.location.ContextHubService: java.util.List mContextHubInfoList>;

        return $r1;
    }

    public android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        com.android.server.location.NanoAppStateManager $r1;
        android.hardware.location.NanoAppInstanceInfo $r2;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $r1 = r0.<com.android.server.location.ContextHubService: com.android.server.location.NanoAppStateManager mNanoAppStateManager>;

        $r2 = virtualinvoke $r1.<com.android.server.location.NanoAppStateManager: android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)>(i0);

        return $r2;
    }

    public int loadNanoApp(int, android.hardware.location.NanoApp) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        android.hardware.location.IContextHubTransactionCallback r1;
        com.android.server.location.IContextHubWrapper $r2;
        boolean $z0;
        android.hardware.location.NanoAppBinary $r3;
        byte[] $r4;
        com.android.server.location.ContextHubTransactionManager $r5, $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r11;
        android.hardware.location.NanoApp r12;
        com.android.server.location.ContextHubServiceTransaction r15;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        r12 := @parameter1: android.hardware.location.NanoApp;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $r2 = r0.<com.android.server.location.ContextHubService: com.android.server.location.IContextHubWrapper mContextHubWrapper>;

        if $r2 != null goto label1;

        return -1;

     label1:
        $z0 = specialinvoke r0.<com.android.server.location.ContextHubService: boolean isValidContextHubId(int)>(i0);

        if $z0 != 0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Context Hub handle ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in loadNanoApp");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubService", $r11);

        return -1;

     label2:
        if r12 != null goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubService", "NanoApp cannot be null in loadNanoApp");

        return -1;

     label3:
        $r3 = new android.hardware.location.NanoAppBinary;

        $r4 = virtualinvoke r12.<android.hardware.location.NanoApp: byte[] getAppBinary()>();

        specialinvoke $r3.<android.hardware.location.NanoAppBinary: void <init>(byte[])>($r4);

        r1 = specialinvoke r0.<com.android.server.location.ContextHubService: android.hardware.location.IContextHubTransactionCallback createLoadTransactionCallback(int,android.hardware.location.NanoAppBinary)>(i0, $r3);

        $r5 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        r15 = virtualinvoke $r5.<com.android.server.location.ContextHubTransactionManager: com.android.server.location.ContextHubServiceTransaction createLoadTransaction(int,android.hardware.location.NanoAppBinary,android.hardware.location.IContextHubTransactionCallback)>(i0, $r3, r1);

        $r6 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        virtualinvoke $r6.<com.android.server.location.ContextHubTransactionManager: void addTransaction(com.android.server.location.ContextHubServiceTransaction)>(r15);

        return 0;
    }

    public void loadNanoAppOnHub(int, android.hardware.location.IContextHubTransactionCallback, android.hardware.location.NanoAppBinary) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        android.hardware.location.NanoAppBinary r1;
        boolean $z0;
        com.android.server.location.ContextHubTransactionManager $r2, $r3;
        android.hardware.location.IContextHubTransactionCallback r4;
        com.android.server.location.ContextHubServiceTransaction r5;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        r4 := @parameter1: android.hardware.location.IContextHubTransactionCallback;

        r1 := @parameter2: android.hardware.location.NanoAppBinary;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $z0 = specialinvoke r0.<com.android.server.location.ContextHubService: boolean checkHalProxyAndContextHubId(int,android.hardware.location.IContextHubTransactionCallback,int)>(i0, r4, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        if r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubService", "NanoAppBinary cannot be null in loadNanoAppOnHub");

        interfaceinvoke r4.<android.hardware.location.IContextHubTransactionCallback: void onTransactionComplete(int)>(2);

        return;

     label2:
        $r2 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        r5 = virtualinvoke $r2.<com.android.server.location.ContextHubTransactionManager: com.android.server.location.ContextHubServiceTransaction createLoadTransaction(int,android.hardware.location.NanoAppBinary,android.hardware.location.IContextHubTransactionCallback)>(i0, r1, r4);

        $r3 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        virtualinvoke $r3.<com.android.server.location.ContextHubTransactionManager: void addTransaction(com.android.server.location.ContextHubServiceTransaction)>(r5);

        return;
    }

    public void queryNanoApps(int, android.hardware.location.IContextHubTransactionCallback) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        boolean $z0;
        com.android.server.location.ContextHubTransactionManager $r1, $r2;
        android.hardware.location.IContextHubTransactionCallback r3;
        com.android.server.location.ContextHubServiceTransaction r4;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        r3 := @parameter1: android.hardware.location.IContextHubTransactionCallback;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $z0 = specialinvoke r0.<com.android.server.location.ContextHubService: boolean checkHalProxyAndContextHubId(int,android.hardware.location.IContextHubTransactionCallback,int)>(i0, r3, 4);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        r4 = virtualinvoke $r1.<com.android.server.location.ContextHubTransactionManager: com.android.server.location.ContextHubServiceTransaction createQueryTransaction(int,android.hardware.location.IContextHubTransactionCallback)>(i0, r3);

        $r2 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        virtualinvoke $r2.<com.android.server.location.ContextHubTransactionManager: void addTransaction(com.android.server.location.ContextHubServiceTransaction)>(r4);

        return;
    }

    public int registerCallback(android.hardware.location.IContextHubCallback) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        android.os.RemoteCallbackList $r1, $r4;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r6;
        android.hardware.location.IContextHubCallback r7;

        r0 := @this: com.android.server.location.ContextHubService;

        r7 := @parameter0: android.hardware.location.IContextHubCallback;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $r1 = r0.<com.android.server.location.ContextHubService: android.os.RemoteCallbackList mCallbacksList>;

        virtualinvoke $r1.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r7);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added callback, total callbacks ");

        $r4 = r0.<com.android.server.location.ContextHubService: android.os.RemoteCallbackList mCallbacksList>;

        $i0 = virtualinvoke $r4.<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ContextHubService", $r6);

        return 0;
    }

    public int sendMessage(int, int, android.hardware.location.ContextHubMessage) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        byte[] $r1, $r7;
        boolean $z3, z4;
        java.lang.StringBuilder $r2, $r12, $r16;
        java.lang.String $r6, $r15, $r20;
        long $l2;
        int $i3, $i4, $i5, $i6, $i8, i12, i13;
        java.util.Map $r8;
        java.lang.Integer $r9;
        java.lang.Object $r10;
        android.hardware.location.IContextHubClient $r11;
        android.hardware.location.ContextHubMessage r21;
        com.android.server.location.IContextHubWrapper r22;
        android.hardware.location.NanoAppInstanceInfo r25;
        android.hardware.location.NanoAppMessage r26;
        byte b14;

        r0 := @this: com.android.server.location.ContextHubService;

        i12 := @parameter0: int;

        i13 := @parameter1: int;

        r21 := @parameter2: android.hardware.location.ContextHubMessage;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        r22 = r0.<com.android.server.location.ContextHubService: com.android.server.location.IContextHubWrapper mContextHubWrapper>;

        if r22 != null goto label01;

        return -1;

     label01:
        if r21 != null goto label02;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubService", "ContextHubMessage cannot be null in sendMessage");

        return -1;

     label02:
        $r1 = virtualinvoke r21.<android.hardware.location.ContextHubMessage: byte[] getData()>();

        if $r1 != null goto label03;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubService", "ContextHubMessage message body cannot be null in sendMessage");

        return -1;

     label03:
        $z3 = specialinvoke r0.<com.android.server.location.ContextHubService: boolean isValidContextHubId(int)>(i12);

        if $z3 != 0 goto label04;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Context Hub handle ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in sendMessage");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubService", $r20);

        return -1;

     label04:
        if i13 != -1 goto label08;

        $i5 = virtualinvoke r21.<android.hardware.location.ContextHubMessage: int getMsgType()>();

        if $i5 != 5 goto label07;

        $i8 = specialinvoke r0.<com.android.server.location.ContextHubService: int queryNanoAppsInternal(int)>(i12);

        if $i8 != 0 goto label05;

        z4 = 1;

        goto label06;

     label05:
        z4 = 0;

     label06:
        goto label12;

     label07:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid OS message params of type ");

        $i6 = virtualinvoke r21.<android.hardware.location.ContextHubMessage: int getMsgType()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubService", $r15);

        z4 = 0;

        goto label12;

     label08:
        r25 = virtualinvoke r0.<com.android.server.location.ContextHubService: android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)>(i13);

        if r25 == null goto label11;

        $l2 = virtualinvoke r25.<android.hardware.location.NanoAppInstanceInfo: long getAppId()>();

        $i3 = virtualinvoke r21.<android.hardware.location.ContextHubMessage: int getMsgType()>();

        $r7 = virtualinvoke r21.<android.hardware.location.ContextHubMessage: byte[] getData()>();

        r26 = staticinvoke <android.hardware.location.NanoAppMessage: android.hardware.location.NanoAppMessage createMessageToNanoApp(long,int,byte[])>($l2, $i3, $r7);

        $r8 = r0.<com.android.server.location.ContextHubService: java.util.Map mDefaultClientMap>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (android.hardware.location.IContextHubClient) $r10;

        $i4 = interfaceinvoke $r11.<android.hardware.location.IContextHubClient: int sendMessageToNanoApp(android.hardware.location.NanoAppMessage)>(r26);

        if $i4 != 0 goto label09;

        z4 = 1;

        goto label10;

     label09:
        z4 = 0;

     label10:
        goto label12;

     label11:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to send nanoapp message - nanoapp with handle ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist.");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubService", $r6);

        z4 = 0;

     label12:
        b14 = -1;

        if z4 == 0 goto label13;

        b14 = 0;

     label13:
        return b14;
    }

    public int unloadNanoApp(int) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        long l0;
        com.android.server.location.IContextHubWrapper $r1;
        com.android.server.location.NanoAppStateManager $r2;
        com.android.server.location.ContextHubTransactionManager $r3, $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r9;
        int i2, i3;
        android.hardware.location.NanoAppInstanceInfo r10;
        android.hardware.location.IContextHubTransactionCallback r12;
        com.android.server.location.ContextHubServiceTransaction r13;

        r0 := @this: com.android.server.location.ContextHubService;

        i2 := @parameter0: int;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $r1 = r0.<com.android.server.location.ContextHubService: com.android.server.location.IContextHubWrapper mContextHubWrapper>;

        if $r1 != null goto label1;

        return -1;

     label1:
        $r2 = r0.<com.android.server.location.ContextHubService: com.android.server.location.NanoAppStateManager mNanoAppStateManager>;

        r10 = virtualinvoke $r2.<com.android.server.location.NanoAppStateManager: android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)>(i2);

        if r10 != null goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid nanoapp handle ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in unloadNanoApp");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContextHubService", $r9);

        return -1;

     label2:
        i3 = virtualinvoke r10.<android.hardware.location.NanoAppInstanceInfo: int getContexthubId()>();

        l0 = virtualinvoke r10.<android.hardware.location.NanoAppInstanceInfo: long getAppId()>();

        r12 = specialinvoke r0.<com.android.server.location.ContextHubService: android.hardware.location.IContextHubTransactionCallback createUnloadTransactionCallback(int)>(i3);

        $r3 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        r13 = virtualinvoke $r3.<com.android.server.location.ContextHubTransactionManager: com.android.server.location.ContextHubServiceTransaction createUnloadTransaction(int,long,android.hardware.location.IContextHubTransactionCallback)>(i3, l0, r12);

        $r4 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        virtualinvoke $r4.<com.android.server.location.ContextHubTransactionManager: void addTransaction(com.android.server.location.ContextHubServiceTransaction)>(r13);

        return 0;
    }

    public void unloadNanoAppFromHub(int, android.hardware.location.IContextHubTransactionCallback, long) throws android.os.RemoteException
    {
        com.android.server.location.ContextHubService r0;
        int i0;
        long l1;
        boolean $z0;
        com.android.server.location.ContextHubTransactionManager $r1, $r2;
        android.hardware.location.IContextHubTransactionCallback r3;
        com.android.server.location.ContextHubServiceTransaction r4;

        r0 := @this: com.android.server.location.ContextHubService;

        i0 := @parameter0: int;

        r3 := @parameter1: android.hardware.location.IContextHubTransactionCallback;

        l1 := @parameter2: long;

        specialinvoke r0.<com.android.server.location.ContextHubService: void checkPermissions()>();

        $z0 = specialinvoke r0.<com.android.server.location.ContextHubService: boolean checkHalProxyAndContextHubId(int,android.hardware.location.IContextHubTransactionCallback,int)>(i0, r3, 1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        r4 = virtualinvoke $r1.<com.android.server.location.ContextHubTransactionManager: com.android.server.location.ContextHubServiceTransaction createUnloadTransaction(int,long,android.hardware.location.IContextHubTransactionCallback)>(i0, l1, r3);

        $r2 = r0.<com.android.server.location.ContextHubService: com.android.server.location.ContextHubTransactionManager mTransactionManager>;

        virtualinvoke $r2.<com.android.server.location.ContextHubTransactionManager: void addTransaction(com.android.server.location.ContextHubServiceTransaction)>(r4);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.location.ContextHubService: java.lang.String TAG> = "ContextHubService";

        <com.android.server.location.ContextHubService: int OS_APP_INSTANCE> = -1;

        <com.android.server.location.ContextHubService: int MSG_UNLOAD_NANO_APP> = 4;

        <com.android.server.location.ContextHubService: int MSG_QUERY_NANO_APPS> = 5;

        <com.android.server.location.ContextHubService: int MSG_QUERY_MEMORY> = 6;

        <com.android.server.location.ContextHubService: int MSG_LOAD_NANO_APP> = 3;

        <com.android.server.location.ContextHubService: int MSG_HUB_RESET> = 7;

        <com.android.server.location.ContextHubService: int MSG_ENABLE_NANO_APP> = 1;

        <com.android.server.location.ContextHubService: int MSG_DISABLE_NANO_APP> = 2;

        <com.android.server.location.ContextHubService: boolean DEBUG_LOG_ENABLED> = 0;

        return;
    }
}
