public class com.android.server.location.GeofenceManager extends java.lang.Object implements android.location.LocationListener, android.app.PendingIntent$OnFinished
{
    private static final boolean D;
    private static final long MAX_AGE_NANOS;
    private static final long MAX_INTERVAL_MS;
    private static final int MAX_SPEED_M_S;
    private static final int MSG_UPDATE_FENCES;
    private static final java.lang.String TAG;
    private final android.app.AppOpsManager mAppOps;
    private final android.content.Context mContext;
    private java.util.List mFences;
    private final com.android.server.location.GeofenceManager$GeofenceHandler mHandler;
    private android.location.Location mLastLocationUpdate;
    private final android.location.LocationManager mLocationManager;
    private long mLocationUpdateInterval;
    private final java.lang.Object mLock;
    private boolean mPendingUpdate;
    private boolean mReceivingLocationUpdates;
    private final com.android.server.location.SettingsHelper mSettingsStore;
    private final android.os.PowerManager$WakeLock mWakeLock;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.location.GeofenceManager: java.lang.String TAG> = "GeofenceManager";

        <com.android.server.location.GeofenceManager: int MSG_UPDATE_FENCES> = 1;

        <com.android.server.location.GeofenceManager: int MAX_SPEED_M_S> = 100;

        <com.android.server.location.GeofenceManager: long MAX_INTERVAL_MS> = 7200000L;

        <com.android.server.location.GeofenceManager: long MAX_AGE_NANOS> = 300000000000L;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GeofenceManager", 3);

        <com.android.server.location.GeofenceManager: boolean D> = $z0;

        return;
    }

    public void <init>(android.content.Context, com.android.server.location.SettingsHelper)
    {
        com.android.server.location.GeofenceManager r0;
        android.content.Context r1, $r8, $r11, $r14;
        com.android.server.location.SettingsHelper r2;
        java.lang.Object $r3, $r9, $r12, $r15;
        java.util.LinkedList $r4;
        com.android.server.location.GeofenceManager$GeofenceHandler $r5;
        android.os.Handler $r6;
        android.os.Looper $r7;
        android.location.LocationManager $r10;
        android.app.AppOpsManager $r13;
        android.os.PowerManager $r16;
        android.os.PowerManager$WakeLock $r17;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.location.SettingsHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.location.GeofenceManager: java.util.List mFences> = $r4;

        r0.<com.android.server.location.GeofenceManager: android.content.Context mContext> = r1;

        $r5 = new com.android.server.location.GeofenceManager$GeofenceHandler;

        $r6 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r5.<com.android.server.location.GeofenceManager$GeofenceHandler: void <init>(com.android.server.location.GeofenceManager,android.os.Looper,com.android.server.location.GeofenceManager$1)>(r0, $r7, null);

        r0.<com.android.server.location.GeofenceManager: com.android.server.location.GeofenceManager$GeofenceHandler mHandler> = $r5;

        $r8 = r0.<com.android.server.location.GeofenceManager: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/location/LocationManager;");

        $r10 = (android.location.LocationManager) $r9;

        r0.<com.android.server.location.GeofenceManager: android.location.LocationManager mLocationManager> = $r10;

        $r11 = r0.<com.android.server.location.GeofenceManager: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r13 = (android.app.AppOpsManager) $r12;

        r0.<com.android.server.location.GeofenceManager: android.app.AppOpsManager mAppOps> = $r13;

        $r14 = r0.<com.android.server.location.GeofenceManager: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        $r16 = (android.os.PowerManager) $r15;

        $r17 = virtualinvoke $r16.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "GeofenceManager");

        r0.<com.android.server.location.GeofenceManager: android.os.PowerManager$WakeLock mWakeLock> = $r17;

        r0.<com.android.server.location.GeofenceManager: com.android.server.location.SettingsHelper mSettingsStore> = r2;

        return;
    }

    static void access$100(com.android.server.location.GeofenceManager)
    {
        com.android.server.location.GeofenceManager r0;

        r0 := @parameter0: com.android.server.location.GeofenceManager;

        specialinvoke r0.<com.android.server.location.GeofenceManager: void updateFences()>();

        return;
    }

    private android.location.Location getFreshLocationLocked()
    {
        com.android.server.location.GeofenceManager r0;
        boolean $z0, $z1;
        long $l0, $l1, $l2;
        byte $b3;
        java.util.List $r1;
        android.location.LocationManager $r2;
        android.location.Location r3, r4;

        r0 := @this: com.android.server.location.GeofenceManager;

        $z0 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        if $z0 == 0 goto label1;

        r3 = r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate>;

        goto label2;

     label1:
        r3 = null;

     label2:
        r4 = r3;

        if r3 != null goto label3;

        r4 = r3;

        $r1 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        $z1 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r2 = r0.<com.android.server.location.GeofenceManager: android.location.LocationManager mLocationManager>;

        r4 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastLocation()>();

     label3:
        if r4 != null goto label4;

        return null;

     label4:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        $l1 = virtualinvoke r4.<android.location.Location: long getElapsedRealtimeNanos()>();

        $l2 = $l0 - $l1;

        $b3 = $l2 cmp 300000000000L;

        if $b3 <= 0 goto label5;

        return null;

     label5:
        return r4;
    }

    static boolean lambda$removeExpiredFencesLocked$1(long, com.android.server.location.GeofenceState)
    {
        long l0, $l1;
        com.android.server.location.GeofenceState r0;
        byte $b2;
        boolean z0;

        l0 := @parameter0: long;

        r0 := @parameter1: com.android.server.location.GeofenceState;

        $l1 = r0.<com.android.server.location.GeofenceState: long mExpireAt>;

        $b2 = $l1 cmp l0;

        if $b2 >= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean lambda$removeFence$0(java.lang.String, com.android.server.location.GeofenceState)
    {
        java.lang.String r0, $r3;
        com.android.server.location.GeofenceState r1;
        com.android.server.location.CallerIdentity $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.server.location.GeofenceState;

        $r2 = r1.<com.android.server.location.GeofenceState: com.android.server.location.CallerIdentity mIdentity>;

        $r3 = $r2.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    private void removeExpiredFencesLocked()
    {
        com.android.server.location.GeofenceManager r0;
        long l0;
        com.android.server.location._$$Lambda$GeofenceManager$An30EDYyFFaKfyzgt2iEJPV1IAg $r1;
        java.util.List $r2;

        r0 := @this: com.android.server.location.GeofenceManager;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r2 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        $r1 = new com.android.server.location._$$Lambda$GeofenceManager$An30EDYyFFaKfyzgt2iEJPV1IAg;

        specialinvoke $r1.<com.android.server.location._$$Lambda$GeofenceManager$An30EDYyFFaKfyzgt2iEJPV1IAg: void <init>(long)>(l0);

        interfaceinvoke $r2.<java.util.List: boolean removeIf(java.util.function.Predicate)>($r1);

        return;
    }

    private void scheduleUpdateFencesLocked()
    {
        com.android.server.location.GeofenceManager r0;
        boolean $z0;
        com.android.server.location.GeofenceManager$GeofenceHandler $r1;

        r0 := @this: com.android.server.location.GeofenceManager;

        $z0 = r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate> = 1;

        $r1 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.GeofenceManager$GeofenceHandler mHandler>;

        virtualinvoke $r1.<com.android.server.location.GeofenceManager$GeofenceHandler: boolean sendEmptyMessage(int)>(1);

     label1:
        return;
    }

    private void sendIntent(android.app.PendingIntent, android.content.Intent)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1;
        android.os.PowerManager$WakeLock $r2, $r6;
        android.content.Context $r3;
        android.os.Bundle $r4;
        android.app.PendingIntent$CanceledException $r5;
        android.content.Intent r7;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.app.PendingIntent;

        r7 := @parameter1: android.content.Intent;

        $r2 = r0.<com.android.server.location.GeofenceManager: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void acquire()>();

     label1:
        $r3 = r0.<com.android.server.location.GeofenceManager: android.content.Context mContext>;

        $r4 = staticinvoke <com.android.server.PendingIntentUtils: android.os.Bundle createDontSendToRestrictedAppsBundle(android.os.Bundle)>(null);

        virtualinvoke r1.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String,android.os.Bundle)>($r3, 0, r7, r0, null, "android.permission.ACCESS_FINE_LOCATION", $r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r0.<com.android.server.location.GeofenceManager: void removeFence(android.location.Geofence,android.app.PendingIntent)>(null, r1);

        $r6 = r0.<com.android.server.location.GeofenceManager: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void release()>();

     label4:
        return;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    private void sendIntentEnter(android.app.PendingIntent)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1;
        boolean $z0;
        android.content.Intent $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.app.PendingIntent;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendIntentEnter: pendingIntent=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r7);

     label1:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("entering", 1);

        specialinvoke r0.<com.android.server.location.GeofenceManager: void sendIntent(android.app.PendingIntent,android.content.Intent)>(r1, $r2);

        return;
    }

    private void sendIntentExit(android.app.PendingIntent)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1;
        boolean $z0;
        android.content.Intent $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.app.PendingIntent;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendIntentExit: pendingIntent=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r7);

     label1:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("entering", 0);

        specialinvoke r0.<com.android.server.location.GeofenceManager: void sendIntent(android.app.PendingIntent,android.content.Intent)>(r1, $r2);

        return;
    }

    private void updateFences()
    {
        com.android.server.location.GeofenceManager r0;
        android.location.Location r2, $r22;
        com.android.server.location.GeofenceState r3;
        com.android.server.location.CallerIdentity r4;
        int i0, $i1, $i6, $i8, $i9, $i10, $i11, $i12, $i14, $i15;
        double d0, $d1, $d2, $d3, $d4, $d5, d6, d7;
        java.util.LinkedList $r5, $r6;
        java.util.List $r7, $r15;
        boolean $z0, $z1, $z2, $z3, z6, $z7, $z8, $z9, $z10;
        java.lang.Object $r8, $r10, $r33, r44;
        android.app.PendingIntent $r9, $r11, $r36, $r37;
        long $l2, $l4, $l7, l16;
        java.lang.String $r24, $r34, $r38, $r39, $r40;
        android.location.LocationManager $r25, $r30;
        com.android.server.location.SettingsHelper $r26, $r32, $r35;
        android.location.LocationRequest $r27, r46;
        com.android.server.location.GeofenceManager$GeofenceHandler $r29;
        android.os.Looper $r31;
        byte $b5, $b13;
        android.app.AppOpsManager $r41;
        java.lang.Throwable $r42;
        java.util.Iterator r45, r48, r49;
        java.lang.StringBuilder r47;

        r0 := @this: com.android.server.location.GeofenceManager;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        r44 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        entermonitor r44;

     label01:
        r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate> = 0;

        specialinvoke r0.<com.android.server.location.GeofenceManager: void removeExpiredFencesLocked()>();

        r2 = specialinvoke r0.<com.android.server.location.GeofenceManager: android.location.Location getFreshLocationLocked()>();

     label02:
        d6 = 1.7976931348623157E308;

        z6 = 0;

     label03:
        $r7 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r45 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z7 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label17;

        $r33 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.location.GeofenceState) $r33;

        r4 = r3.<com.android.server.location.GeofenceState: com.android.server.location.CallerIdentity mIdentity>;

        $r35 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.SettingsHelper mSettingsStore>;

        $i8 = r4.<com.android.server.location.CallerIdentity: int userId>;

        $r34 = r4.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $z3 = virtualinvoke $r35.<com.android.server.location.SettingsHelper: boolean isLocationPackageBlacklisted(int,java.lang.String)>($i8, $r34);

        if $z3 == 0 goto label06;

     label05:
        goto label07;

     label06:
        $i9 = r4.<com.android.server.location.CallerIdentity: int permissionLevel>;

        $i10 = staticinvoke <com.android.server.location.CallerIdentity: int asAppOp(int)>($i9);

        if $i10 < 0 goto label08;

        $r41 = r0.<com.android.server.location.GeofenceManager: android.app.AppOpsManager mAppOps>;

        $i14 = r4.<com.android.server.location.CallerIdentity: int uid>;

        $r40 = r4.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $r39 = r4.<com.android.server.location.CallerIdentity: java.lang.String featureId>;

        $r38 = r4.<com.android.server.location.CallerIdentity: java.lang.String listenerId>;

        $i15 = virtualinvoke $r41.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String,java.lang.String,java.lang.String)>(1, $i14, $r40, $r39, $r38);

        if $i15 == 0 goto label08;

     label07:
        goto label04;

     label08:
        z6 = 1;

        d7 = d6;

        if r2 == null goto label16;

     label09:
        i0 = virtualinvoke r3.<com.android.server.location.GeofenceState: int processLocation(android.location.Location)>(r2);

     label10:
        $i11 = i0 & 1;

        if $i11 == 0 goto label12;

     label11:
        $r37 = r3.<com.android.server.location.GeofenceState: android.app.PendingIntent mIntent>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r37);

     label12:
        $i12 = i0 & 2;

        if $i12 == 0 goto label14;

     label13:
        $r36 = r3.<com.android.server.location.GeofenceState: android.app.PendingIntent mIntent>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r36);

     label14:
        d0 = virtualinvoke r3.<com.android.server.location.GeofenceState: double getDistanceToBoundary()>();

     label15:
        d7 = d6;

        $b13 = d0 cmpg d6;

        if $b13 >= 0 goto label16;

        d7 = d0;

     label16:
        d6 = d7;

        goto label04;

     label17:
        if z6 == 0 goto label24;

        if r2 == null goto label20;

     label18:
        $i6 = staticinvoke <java.lang.Double: int compare(double,double)>(d6, 1.7976931348623157E308);

        if $i6 == 0 goto label20;

        $r32 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.SettingsHelper mSettingsStore>;

        $l7 = virtualinvoke $r32.<com.android.server.location.SettingsHelper: long getBackgroundThrottleProximityAlertIntervalMs()>();

        $d3 = (double) $l7;

        $d1 = 1000.0 * d6;

        $d2 = $d1 / 100.0;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>($d3, $d2);

        $d5 = staticinvoke <java.lang.Math: double min(double,double)>(7200000.0, $d4);

        l16 = (long) $d5;

     label19:
        goto label21;

     label20:
        $r26 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.SettingsHelper mSettingsStore>;

        l16 = virtualinvoke $r26.<com.android.server.location.SettingsHelper: long getBackgroundThrottleProximityAlertIntervalMs()>();

     label21:
        $z8 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        if $z8 == 0 goto label22;

        $l4 = r0.<com.android.server.location.GeofenceManager: long mLocationUpdateInterval>;

        $b5 = $l4 cmp l16;

        if $b5 == 0 goto label23;

     label22:
        r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates> = 1;

        r0.<com.android.server.location.GeofenceManager: long mLocationUpdateInterval> = l16;

        r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate> = r2;

        r46 = new android.location.LocationRequest;

        specialinvoke r46.<android.location.LocationRequest: void <init>()>();

        $r27 = virtualinvoke r46.<android.location.LocationRequest: android.location.LocationRequest setInterval(long)>(l16);

        virtualinvoke $r27.<android.location.LocationRequest: android.location.LocationRequest setFastestInterval(long)>(0L);

        $r30 = r0.<com.android.server.location.GeofenceManager: android.location.LocationManager mLocationManager>;

        $r29 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.GeofenceManager$GeofenceHandler mHandler>;

        $r31 = virtualinvoke $r29.<com.android.server.location.GeofenceManager$GeofenceHandler: android.os.Looper getLooper()>();

        virtualinvoke $r30.<android.location.LocationManager: void requestLocationUpdates(android.location.LocationRequest,android.location.LocationListener,android.os.Looper)>(r46, r0, $r31);

     label23:
        goto label25;

     label24:
        $z0 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        if $z0 == 0 goto label25;

        r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates> = 0;

        r0.<com.android.server.location.GeofenceManager: long mLocationUpdateInterval> = 0L;

        r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate> = null;

        $r25 = r0.<com.android.server.location.GeofenceManager: android.location.LocationManager mLocationManager>;

        virtualinvoke $r25.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>(r0);

     label25:
        $z9 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z9 == 0 goto label26;

        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateFences: location=");

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mFences.size()=");

        $r15 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        $i1 = interfaceinvoke $r15.<java.util.List: int size()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mReceivingLocationUpdates=");

        $z2 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLocationUpdateInterval=");

        $l2 = r0.<com.android.server.location.GeofenceManager: long mLocationUpdateInterval>;

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLastLocationUpdate=");

        $r22 = r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate>;

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r24);

     label26:
        exitmonitor r44;

     label27:
        r48 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label28:
        $z10 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label29;

        $r10 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (android.app.PendingIntent) $r10;

        specialinvoke r0.<com.android.server.location.GeofenceManager: void sendIntentExit(android.app.PendingIntent)>($r11);

        goto label28;

     label29:
        r49 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label30:
        $z1 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label31;

        $r8 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.app.PendingIntent) $r8;

        specialinvoke r0.<com.android.server.location.GeofenceManager: void sendIntentEnter(android.app.PendingIntent)>($r9);

        goto label30;

     label31:
        return;

     label32:
        $r42 := @caughtexception;

     label33:
        exitmonitor r44;

     label34:
        throw $r42;

        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.lang.Throwable from label03 to label04 with label32;
        catch java.lang.Throwable from label04 to label05 with label32;
        catch java.lang.Throwable from label06 to label07 with label32;
        catch java.lang.Throwable from label09 to label10 with label32;
        catch java.lang.Throwable from label11 to label12 with label32;
        catch java.lang.Throwable from label13 to label14 with label32;
        catch java.lang.Throwable from label14 to label15 with label32;
        catch java.lang.Throwable from label18 to label19 with label32;
        catch java.lang.Throwable from label20 to label21 with label32;
        catch java.lang.Throwable from label21 to label22 with label32;
        catch java.lang.Throwable from label22 to label23 with label32;
        catch java.lang.Throwable from label24 to label25 with label32;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch java.lang.Throwable from label26 to label27 with label32;
        catch java.lang.Throwable from label33 to label34 with label32;
    }

    public void addFence(android.location.LocationRequest, android.location.Geofence, android.app.PendingIntent, com.android.server.location.CallerIdentity)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1, $r9;
        com.android.server.location.GeofenceState r2, $r3;
        long $l0, $l1;
        java.util.List $r4, $r5, $r6, $r10;
        int $i2, i3;
        java.lang.Object $r7, r17;
        android.location.Geofence $r8, r14;
        boolean $z1, $z2;
        java.lang.Throwable $r12;
        android.location.LocationRequest r13;
        com.android.server.location.CallerIdentity r15;

        r0 := @this: com.android.server.location.GeofenceManager;

        r13 := @parameter0: android.location.LocationRequest;

        r14 := @parameter1: android.location.Geofence;

        r1 := @parameter2: android.app.PendingIntent;

        r15 := @parameter3: com.android.server.location.CallerIdentity;

        $r3 = new com.android.server.location.GeofenceState;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = virtualinvoke r13.<android.location.LocationRequest: long getExpirationRealtimeMs(long)>($l0);

        specialinvoke $r3.<com.android.server.location.GeofenceState: void <init>(android.location.Geofence,long,com.android.server.location.CallerIdentity,android.app.PendingIntent)>(r14, $l1, r15, r1);

        r17 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        entermonitor r17;

     label01:
        $r4 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        i3 = $i2 - 1;

     label02:
        if i3 < 0 goto label06;

     label03:
        $r6 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i3);

        r2 = (com.android.server.location.GeofenceState) $r7;

        $r8 = r2.<com.android.server.location.GeofenceState: android.location.Geofence mFence>;

        $z1 = virtualinvoke r14.<android.location.Geofence: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label05;

        $r9 = r2.<com.android.server.location.GeofenceState: android.app.PendingIntent mIntent>;

        $z2 = virtualinvoke r1.<android.app.PendingIntent: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label05;

        $r10 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        interfaceinvoke $r10.<java.util.List: java.lang.Object remove(int)>(i3);

     label04:
        goto label06;

     label05:
        i3 = i3 + -1;

        goto label02;

     label06:
        $r5 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r3);

        specialinvoke r0.<com.android.server.location.GeofenceManager: void scheduleUpdateFencesLocked()>();

        exitmonitor r17;

     label07:
        return;

     label08:
        $r12 := @caughtexception;

     label09:
        exitmonitor r17;

     label10:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.location.GeofenceManager r0;
        java.io.PrintWriter r1;
        java.util.Iterator r2;
        com.android.server.location.GeofenceState r3;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7;
        com.android.server.location.CallerIdentity $r8;
        android.location.Geofence $r11;
        java.lang.String $r13;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.io.PrintWriter;

        $r5 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.location.GeofenceState) $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r3.<com.android.server.location.GeofenceState: com.android.server.location.CallerIdentity mIdentity>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = r3.<com.android.server.location.GeofenceState: android.location.Geofence mFence>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        goto label1;

     label2:
        return;
    }

    public void onLocationChanged(android.location.Location)
    {
        com.android.server.location.GeofenceManager r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        com.android.server.location.GeofenceManager$GeofenceHandler $r2;
        java.lang.Throwable $r3;
        android.location.Location r4;

        r0 := @this: com.android.server.location.GeofenceManager;

        r4 := @parameter0: android.location.Location;

        r1 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        if $z0 == 0 goto label2;

        r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate> = r4;

     label2:
        $z1 = r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate>;

        if $z1 == 0 goto label4;

        $r2 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.GeofenceManager$GeofenceHandler mHandler>;

        virtualinvoke $r2.<com.android.server.location.GeofenceManager$GeofenceHandler: void removeMessages(int)>(1);

     label3:
        goto label5;

     label4:
        r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate> = 1;

     label5:
        exitmonitor r1;

     label6:
        specialinvoke r0.<com.android.server.location.GeofenceManager: void updateFences()>();

        return;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void onProviderDisabled(java.lang.String)
    {
        com.android.server.location.GeofenceManager r0;
        java.lang.String r1;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void onProviderEnabled(java.lang.String)
    {
        com.android.server.location.GeofenceManager r0;
        java.lang.String r1;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void onSendFinished(android.app.PendingIntent, android.content.Intent, int, java.lang.String, android.os.Bundle)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1;
        android.content.Intent r2;
        int i0;
        java.lang.String r3;
        android.os.Bundle r4;
        android.os.PowerManager$WakeLock $r5;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.app.PendingIntent;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.Bundle;

        $r5 = r0.<com.android.server.location.GeofenceManager: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r5.<android.os.PowerManager$WakeLock: void release()>();

        return;
    }

    public void onStatusChanged(java.lang.String, int, android.os.Bundle)
    {
        com.android.server.location.GeofenceManager r0;
        java.lang.String r1;
        int i0;
        android.os.Bundle r2;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        return;
    }

    public void removeFence(android.location.Geofence, android.app.PendingIntent)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1, $r6;
        java.util.Iterator r2;
        com.android.server.location.GeofenceState r3;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r4;
        java.lang.Object $r5, r17;
        android.location.Geofence $r7, r15;
        java.lang.StringBuilder $r8;
        java.lang.String $r13;
        java.lang.Throwable $r14;

        r0 := @this: com.android.server.location.GeofenceManager;

        r15 := @parameter0: android.location.Geofence;

        r1 := @parameter1: android.app.PendingIntent;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label01;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeFence: fence=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", intent=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r13);

     label01:
        r17 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        entermonitor r17;

     label02:
        $r4 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.location.GeofenceState) $r5;

        $r6 = r3.<com.android.server.location.GeofenceState: android.app.PendingIntent mIntent>;

        $z1 = virtualinvoke $r6.<android.app.PendingIntent: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label08;

     label04:
        if r15 != null goto label07;

     label05:
        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label06:
        goto label08;

     label07:
        $r7 = r3.<com.android.server.location.GeofenceState: android.location.Geofence mFence>;

        $z2 = virtualinvoke r15.<android.location.Geofence: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label08;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label08:
        goto label03;

     label09:
        specialinvoke r0.<com.android.server.location.GeofenceManager: void scheduleUpdateFencesLocked()>();

        exitmonitor r17;

     label10:
        return;

     label11:
        $r14 := @caughtexception;

     label12:
        exitmonitor r17;

     label13:
        throw $r14;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void removeFence(java.lang.String)
    {
        com.android.server.location.GeofenceManager r0;
        java.util.List r1;
        com.android.server.location._$$Lambda$GeofenceManager$HESdncIljfrrsDWi1gRXDTge7RY r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, r8;
        java.lang.Throwable $r7;
        java.lang.Object r10;

        r0 := @this: com.android.server.location.GeofenceManager;

        r8 := @parameter0: java.lang.String;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeFence: packageName=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r6);

     label1:
        r10 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        entermonitor r10;

     label2:
        r1 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r2 = new com.android.server.location._$$Lambda$GeofenceManager$HESdncIljfrrsDWi1gRXDTge7RY;

        specialinvoke r2.<com.android.server.location._$$Lambda$GeofenceManager$HESdncIljfrrsDWi1gRXDTge7RY: void <init>(java.lang.String)>(r8);

        interfaceinvoke r1.<java.util.List: boolean removeIf(java.util.function.Predicate)>(r2);

        specialinvoke r0.<com.android.server.location.GeofenceManager: void scheduleUpdateFencesLocked()>();

        exitmonitor r10;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r10;

     label6:
        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
