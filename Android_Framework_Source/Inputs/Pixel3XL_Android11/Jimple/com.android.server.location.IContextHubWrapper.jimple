public abstract class com.android.server.location.IContextHubWrapper extends java.lang.Object
{
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.android.server.location.IContextHubWrapper r0;

        r0 := @this: com.android.server.location.IContextHubWrapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.server.location.IContextHubWrapper maybeConnectTo1_0()
    {
        android.hardware.contexthub.V1_0.IContexthub r0, r4;
        com.android.server.location.IContextHubWrapper$ContextHubWrapperV1_0 $r1, r6;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;

        r4 = null;

     label1:
        r0 = staticinvoke <android.hardware.contexthub.V1_0.IContexthub: android.hardware.contexthub.V1_0.IContexthub getService(boolean)>(1);

     label2:
        r4 = r0;

     label3:
        goto label6;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("IContextHubWrapper", "Context Hub HAL service not found");

        r4 = null;

        goto label6;

     label5:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IContextHubWrapper", "RemoteException while attaching to Context Hub HAL proxy", $r3);

        goto label3;

     label6:
        r6 = null;

        if r4 == null goto label7;

        $r1 = new com.android.server.location.IContextHubWrapper$ContextHubWrapperV1_0;

        specialinvoke $r1.<com.android.server.location.IContextHubWrapper$ContextHubWrapperV1_0: void <init>(android.hardware.contexthub.V1_0.IContexthub)>(r4);

        r6 = $r1;

     label7:
        return r6;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch java.util.NoSuchElementException from label1 to label2 with label4;
    }

    public static com.android.server.location.IContextHubWrapper maybeConnectTo1_1()
    {
        android.hardware.contexthub.V1_1.IContexthub r0, r4;
        com.android.server.location.IContextHubWrapper$ContextHubWrapperV1_1 $r1, r6;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;

        r4 = null;

     label1:
        r0 = staticinvoke <android.hardware.contexthub.V1_1.IContexthub: android.hardware.contexthub.V1_1.IContexthub getService(boolean)>(1);

     label2:
        r4 = r0;

     label3:
        goto label6;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("IContextHubWrapper", "Context Hub HAL service not found");

        r4 = null;

        goto label6;

     label5:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IContextHubWrapper", "RemoteException while attaching to Context Hub HAL proxy", $r3);

        goto label3;

     label6:
        r6 = null;

        if r4 == null goto label7;

        $r1 = new com.android.server.location.IContextHubWrapper$ContextHubWrapperV1_1;

        specialinvoke $r1.<com.android.server.location.IContextHubWrapper$ContextHubWrapperV1_1: void <init>(android.hardware.contexthub.V1_1.IContexthub)>(r4);

        r6 = $r1;

     label7:
        return r6;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch java.util.NoSuchElementException from label1 to label2 with label4;
    }

    public abstract android.hardware.contexthub.V1_0.IContexthub getHub();

    public abstract void onSettingChanged(byte, byte);

    public abstract boolean supportsSettingNotifications();

    public static void <clinit>()
    {
        <com.android.server.location.IContextHubWrapper: java.lang.String TAG> = "IContextHubWrapper";

        return;
    }
}
