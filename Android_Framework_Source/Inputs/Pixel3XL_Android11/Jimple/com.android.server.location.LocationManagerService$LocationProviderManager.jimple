class com.android.server.location.LocationManagerService$LocationProviderManager extends java.lang.Object implements com.android.server.location.AbstractLocationProvider$Listener
{
    private final android.util.SparseArray mEnabled;
    private final android.util.SparseArray mLastCoarseLocation;
    private final android.util.SparseArray mLastLocation;
    private final com.android.server.location.LocationFudger mLocationFudger;
    private final java.lang.String mName;
    protected final com.android.server.location.MockableLocationProvider mProvider;
    final com.android.server.location.LocationManagerService this$0;

    private void <init>(com.android.server.location.LocationManagerService, java.lang.String)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        com.android.server.location.LocationManagerService r1;
        java.lang.String r2;
        com.android.server.location.LocationFudger $r3;
        com.android.server.location.SettingsHelper $r4;
        float $f0;
        android.util.SparseArray $r5, $r6, $r7;
        com.android.server.location.MockableLocationProvider $r8;
        java.lang.Object $r9;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        r1 := @parameter0: com.android.server.location.LocationManagerService;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName> = r2;

        $r3 = new com.android.server.location.LocationFudger;

        $r4 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper access$1300(com.android.server.location.LocationManagerService)>(r1);

        $f0 = virtualinvoke $r4.<com.android.server.location.SettingsHelper: float getCoarseLocationAccuracyM()>();

        specialinvoke $r3.<com.android.server.location.LocationFudger: void <init>(float)>($f0);

        r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationFudger mLocationFudger> = $r3;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>(int)>(2);

        r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mEnabled> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>(int)>(2);

        r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastLocation> = $r6;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>(int)>(2);

        r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastCoarseLocation> = $r7;

        $r8 = new com.android.server.location.MockableLocationProvider;

        $r9 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>(r1);

        specialinvoke $r8.<com.android.server.location.MockableLocationProvider: void <init>(java.lang.Object,com.android.server.location.AbstractLocationProvider$Listener)>($r9, r0);

        r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider> = $r8;

        return;
    }

    void <init>(com.android.server.location.LocationManagerService, java.lang.String, com.android.server.location.LocationManagerService$1)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        com.android.server.location.LocationManagerService r1;
        java.lang.String r2;
        com.android.server.location.LocationManagerService$1 r3;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        r1 := @parameter0: com.android.server.location.LocationManagerService;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.server.location.LocationManagerService$1;

        specialinvoke r0.<com.android.server.location.LocationManagerService$LocationProviderManager: void <init>(com.android.server.location.LocationManagerService,java.lang.String)>(r1, r2);

        return;
    }

    private void setLastLocation(android.location.Location, int)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        int i0;
        java.lang.Object r1, $r6;
        android.location.Location r2, $r9, r13;
        com.android.server.location.LocationManagerService $r3;
        android.util.SparseArray $r4, $r5, $r8;
        byte $b1;
        com.android.server.location.LocationFudger $r7;
        java.util.concurrent.TimeUnit $r10, $r11;
        long $l2, $l3, $l4, $l5, l6;
        java.lang.Throwable $r12;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        r13 := @parameter0: android.location.Location;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        r1 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r3);

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastLocation>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r13);

     label02:
        l6 = 9223372036854775807L;

     label03:
        $r5 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastCoarseLocation>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.location.Location) $r6;

     label04:
        if r2 == null goto label06;

     label05:
        $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l2 = virtualinvoke r13.<android.location.Location: long getElapsedRealtimeNanos()>();

        $l3 = virtualinvoke $r10.<java.util.concurrent.TimeUnit: long toMillis(long)>($l2);

        $r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l4 = virtualinvoke r2.<android.location.Location: long getElapsedRealtimeNanos()>();

        $l5 = virtualinvoke $r11.<java.util.concurrent.TimeUnit: long toMillis(long)>($l4);

        l6 = $l3 - $l5;

     label06:
        $b1 = l6 cmp 600000L;

        if $b1 <= 0 goto label08;

     label07:
        $r8 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastCoarseLocation>;

        $r7 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationFudger mLocationFudger>;

        $r9 = virtualinvoke $r7.<com.android.server.location.LocationFudger: android.location.Location createCoarse(android.location.Location)>(r13);

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r9);

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r12 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void dump(java.io.FileDescriptor, com.android.internal.util.IndentingPrintWriter, java.lang.String[])
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.lang.String[] r2;
        java.lang.Object r3, $r22, $r27, $r36, $r41;
        int i0, i1, i2, i3, i4;
        com.android.server.location.LocationManagerService $r4, $r11;
        java.lang.String $r5, $r8, $r18, $r24, $r29, $r32, $r38, $r43, $r46;
        com.android.server.location.MockableLocationProvider $r9, $r13;
        boolean $z0, $z1, $z2;
        com.android.server.location.UserInfoHelper $r12;
        android.util.SparseArray $r21, $r26, $r35, $r40;
        java.lang.Throwable $r47;
        java.io.FileDescriptor r48;
        java.lang.StringBuilder r49, r51, r52, r53, r54, r55, r56, r57;
        int[] r50;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        r48 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        r3 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r4);

        entermonitor r3;

     label01:
        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider");

        $r8 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>($r8);

        $r9 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        $z0 = virtualinvoke $r9.<com.android.server.location.MockableLocationProvider: boolean isMock()>();

        if $z0 == 0 goto label02;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(" [mock]");

     label02:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r11 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        $r12 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper access$1400(com.android.server.location.LocationManagerService)>($r11);

        r50 = virtualinvoke $r12.<com.android.server.location.UserInfoHelper: int[] getCurrentUserIds()>();

        i1 = lengthof r50;

     label03:
        i2 = 0;

        if i1 != 1 goto label06;

        i3 = r50[0];

     label04:
        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("last location=");

        $r35 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastLocation>;

        $r36 = virtualinvoke $r35.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r38 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r38);

        r52 = new java.lang.StringBuilder;

        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("last coarse location=");

        $r40 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastCoarseLocation>;

        $r41 = virtualinvoke $r40.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

        $r43 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r43);

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enabled=");

        $z2 = virtualinvoke r0.<com.android.server.location.LocationManagerService$LocationProviderManager: boolean isEnabled(int)>(i3);

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r46 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r46);

     label05:
        goto label10;

     label06:
        i4 = lengthof r50;

     label07:
        if i2 >= i4 goto label10;

        i0 = r50[i2];

     label08:
        r54 = new java.lang.StringBuilder;

        specialinvoke r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user ");

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r18 = virtualinvoke r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r18);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r55 = new java.lang.StringBuilder;

        specialinvoke r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("last location=");

        $r21 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastLocation>;

        $r22 = virtualinvoke $r21.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r24);

        r56 = new java.lang.StringBuilder;

        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("last coarse location=");

        $r26 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastCoarseLocation>;

        $r27 = virtualinvoke $r26.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r29);

        r57 = new java.lang.StringBuilder;

        specialinvoke r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enabled=");

        $z1 = virtualinvoke r0.<com.android.server.location.LocationManagerService$LocationProviderManager: boolean isEnabled(int)>(i0);

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r32 = virtualinvoke r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r32);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label09:
        i2 = i2 + 1;

        goto label07;

     label10:
        exitmonitor r3;

     label11:
        $r13 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        virtualinvoke $r13.<com.android.server.location.MockableLocationProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r48, r1, r2);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        return;

     label12:
        $r47 := @caughtexception;

     label13:
        exitmonitor r3;

     label14:
        throw $r47;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public android.location.Location getLastLocation(int, int)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        int i0, i1;
        java.lang.Object r1, $r4, $r6;
        com.android.server.location.LocationManagerService $r2;
        android.util.SparseArray $r3, $r5;
        java.lang.Throwable $r7;
        android.location.Location r8, r10;
        java.lang.AssertionError r9;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        r1 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r2);

        entermonitor r1;

        if i1 == 1 goto label4;

        if i1 != 2 goto label3;

     label1:
        $r5 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastLocation>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r8 = (android.location.Location) $r6;

        exitmonitor r1;

     label2:
        return r8;

     label3:
        r9 = new java.lang.AssertionError;

        specialinvoke r9.<java.lang.AssertionError: void <init>()>();

        throw r9;

     label4:
        $r3 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastCoarseLocation>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r10 = (android.location.Location) $r4;

        exitmonitor r1;

     label5:
        return r10;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.util.List getMockProviderRequests()
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        java.lang.Object r1;
        java.lang.IllegalArgumentException r2;
        com.android.server.location.LocationManagerService $r3;
        com.android.server.location.MockableLocationProvider $r4, $r9;
        boolean $z0;
        java.lang.String $r5, $r8;
        com.android.internal.location.ProviderRequest $r10;
        java.lang.Throwable $r11;
        java.util.List r12;
        java.lang.StringBuilder r13;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        $r3 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        r1 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        $z0 = virtualinvoke $r4.<com.android.server.location.MockableLocationProvider: boolean isMock()>();

        if $z0 == 0 goto label3;

        $r9 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        $r10 = virtualinvoke $r9.<com.android.server.location.MockableLocationProvider: com.android.internal.location.ProviderRequest getCurrentRequest()>();

        r12 = $r10.<com.android.internal.location.ProviderRequest: java.util.List locationRequests>;

        exitmonitor r1;

     label2:
        return r12;

     label3:
        r2 = new java.lang.IllegalArgumentException;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider is not a test provider");

        $r8 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw r2;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.lang.String getName()
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        $r1 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        return $r1;
    }

    public java.util.Set getPackages()
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        com.android.server.location.MockableLocationProvider $r1;
        com.android.server.location.AbstractLocationProvider$State $r2;
        java.util.Set $r3;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        $r1 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        $r2 = virtualinvoke $r1.<com.android.server.location.MockableLocationProvider: com.android.server.location.AbstractLocationProvider$State getState()>();

        $r3 = $r2.<com.android.server.location.AbstractLocationProvider$State: java.util.Set providerPackageNames>;

        return $r3;
    }

    public com.android.internal.location.ProviderProperties getProperties()
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        com.android.server.location.MockableLocationProvider $r1;
        com.android.server.location.AbstractLocationProvider$State $r2;
        com.android.internal.location.ProviderProperties $r3;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        $r1 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        $r2 = virtualinvoke $r1.<com.android.server.location.MockableLocationProvider: com.android.server.location.AbstractLocationProvider$State getState()>();

        $r3 = $r2.<com.android.server.location.AbstractLocationProvider$State: com.android.internal.location.ProviderProperties properties>;

        return $r3;
    }

    public boolean hasProvider()
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        com.android.server.location.MockableLocationProvider $r1;
        com.android.server.location.AbstractLocationProvider $r2;
        boolean z0;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        $r1 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        $r2 = virtualinvoke $r1.<com.android.server.location.MockableLocationProvider: com.android.server.location.AbstractLocationProvider getProvider()>();

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void injectLastLocation(android.location.Location, int)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        int i0;
        java.lang.Object r1, $r4;
        com.android.server.location.LocationManagerService $r2;
        android.util.SparseArray $r3;
        java.lang.Throwable $r5;
        android.location.Location r6;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        r6 := @parameter0: android.location.Location;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        r1 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r2);

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastLocation>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r4 != null goto label2;

        specialinvoke r0.<com.android.server.location.LocationManagerService$LocationProviderManager: void setLastLocation(android.location.Location,int)>(r6, i0);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean isEnabled(int)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        int i0;
        java.lang.Object r1, $r5, $r13;
        java.lang.Boolean r2, r16, r18;
        boolean z0;
        com.android.server.location.LocationManagerService $r3;
        android.util.SparseArray $r4, $r12;
        java.lang.String $r6, $r11;
        java.lang.Throwable $r15;
        java.lang.StringBuilder r17;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        i0 := @parameter0: int;

        if i0 != -10000 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        r1 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r3);

        entermonitor r1;

     label2:
        $r4 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mEnabled>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (java.lang.Boolean) $r5;

     label3:
        r16 = r2;

        if r2 != null goto label5;

     label4:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider saw user ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unexpectedly");

        $r11 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LocationManagerService", $r11);

        virtualinvoke r0.<com.android.server.location.LocationManagerService$LocationProviderManager: void onEnabledChangedLocked(int)>(i0);

        $r12 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mEnabled>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r18 = (java.lang.Boolean) $r13;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r18);

        r16 = (java.lang.Boolean) r18;

     label5:
        z0 = virtualinvoke r16.<java.lang.Boolean: boolean booleanValue()>();

        exitmonitor r1;

     label6:
        return z0;

     label7:
        $r15 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r15;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void onEnabledChangedLocked(int)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        int i1, $i3, i4, i5;
        com.android.server.location.MockableLocationProvider $r2, $r18;
        com.android.server.location.AbstractLocationProvider$State $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        android.util.SparseArray $r4, $r20, $r21, $r38;
        java.lang.Boolean $r5, r40;
        java.lang.String $r6, $r7, $r8, $r9, $r11, $r26, $r30, $r43;
        android.content.Intent $r10, $r12, $r13, $r14, r44;
        com.android.server.location.LocationManagerService $r15, $r31, $r33, $r35, $r41, $r45;
        android.content.Context $r16;
        android.os.UserHandle $r17;
        com.android.internal.location.ProviderRequest $r19;
        java.lang.StringBuilder $r22;
        com.android.server.location.UserInfoHelper $r32, $r36;
        com.android.server.location.SettingsHelper $r34, $r42;
        int[] r37;
        java.lang.Object $r39;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        i4 := @parameter0: int;

        if i4 != -10000 goto label1;

        return;

     label1:
        z8 = 0;

        if i4 != -1 goto label4;

        $r35 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        $r36 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper access$1400(com.android.server.location.LocationManagerService)>($r35);

        r37 = virtualinvoke $r36.<com.android.server.location.UserInfoHelper: int[] getCurrentUserIds()>();

        i1 = lengthof r37;

        i5 = 0;

     label2:
        if i5 >= i1 goto label3;

        $i3 = r37[i5];

        virtualinvoke r0.<com.android.server.location.LocationManagerService$LocationProviderManager: void onEnabledChangedLocked(int)>($i3);

        i5 = i5 + 1;

        goto label2;

     label3:
        return;

     label4:
        $r2 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        $r3 = virtualinvoke $r2.<com.android.server.location.MockableLocationProvider: com.android.server.location.AbstractLocationProvider$State getState()>();

        $z0 = $r3.<com.android.server.location.AbstractLocationProvider$State: boolean allowed>;

        if $z0 == 0 goto label5;

        $r31 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        $r32 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper access$1400(com.android.server.location.LocationManagerService)>($r31);

        $z6 = virtualinvoke $r32.<com.android.server.location.UserInfoHelper: boolean isCurrentUserId(int)>(i4);

        if $z6 == 0 goto label5;

        $r33 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        $r34 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper access$1300(com.android.server.location.LocationManagerService)>($r33);

        $z7 = virtualinvoke $r34.<com.android.server.location.SettingsHelper: boolean isLocationEnabled(int)>(i4);

        if $z7 == 0 goto label5;

        z8 = 1;

        goto label5;

     label5:
        $r38 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mEnabled>;

        $r39 = virtualinvoke $r38.<android.util.SparseArray: java.lang.Object get(int)>(i4);

        r40 = (java.lang.Boolean) $r39;

        if r40 == null goto label6;

        $z5 = virtualinvoke r40.<java.lang.Boolean: boolean booleanValue()>();

        if $z5 != z8 goto label6;

        return;

     label6:
        $r4 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mEnabled>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z8);

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i4, $r5);

        $z1 = <com.android.server.location.LocationManagerService: boolean D>;

        if $z1 == 0 goto label7;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[u");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r26 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider enabled = ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z8);

        $r30 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationManagerService", $r30);

     label7:
        if z8 != 0 goto label8;

        $r18 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        $r19 = virtualinvoke $r18.<com.android.server.location.MockableLocationProvider: com.android.internal.location.ProviderRequest getCurrentRequest()>();

        $z4 = $r19.<com.android.internal.location.ProviderRequest: boolean locationSettingsIgnored>;

        if $z4 != 0 goto label8;

        $r20 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastLocation>;

        virtualinvoke $r20.<android.util.SparseArray: void put(int,java.lang.Object)>(i4, null);

        $r21 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastCoarseLocation>;

        virtualinvoke $r21.<android.util.SparseArray: void put(int,java.lang.Object)>(i4, null);

     label8:
        $r41 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        $r42 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper access$1300(com.android.server.location.LocationManagerService)>($r41);

        $r43 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        virtualinvoke $r42.<com.android.server.location.SettingsHelper: void setLocationProviderAllowed(java.lang.String,boolean,int)>($r43, z8, i4);

        if r40 == null goto label9;

        $r7 = "fused";

        $r6 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label9;

        $r9 = "passive";

        $r8 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 != 0 goto label9;

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("android.location.PROVIDERS_CHANGED");

        $r11 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        $r12 = virtualinvoke $r10.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.location.extra.PROVIDER_NAME", $r11);

        $r13 = virtualinvoke $r12.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.location.extra.PROVIDER_ENABLED", z8);

        $r14 = virtualinvoke $r13.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        r44 = virtualinvoke $r14.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r15 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        $r16 = staticinvoke <com.android.server.location.LocationManagerService: android.content.Context access$100(com.android.server.location.LocationManagerService)>($r15);

        $r17 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i4);

        virtualinvoke $r16.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r44, $r17);

     label9:
        $r45 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        staticinvoke <com.android.server.location.LocationManagerService: void access$1700(com.android.server.location.LocationManagerService,com.android.server.location.LocationManagerService$LocationProviderManager,boolean)>($r45, r0, z8);

        return;
    }

    public void onReportLocation(android.location.Location)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        boolean z0, $z1, $z2, $z3;
        int[] r1;
        int i0, i1, i6;
        com.android.server.location.MockableLocationProvider $r2;
        com.android.internal.location.ProviderRequest $r3;
        com.android.server.location.LocationManagerService $r4, $r7;
        com.android.server.location.UserInfoHelper $r5;
        com.android.server.location.LocationFudger $r6;
        android.location.Location $r8, r21;
        java.lang.StringBuilder $r9, $r15;
        java.lang.String $r11, $r14, $r17, $r20;
        double $d0, $d1;
        byte $b3, $b4;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        r21 := @parameter0: android.location.Location;

        $z1 = virtualinvoke r21.<android.location.Location: boolean isFromMockProvider()>();

        if $z1 != 0 goto label1;

        $d0 = virtualinvoke r21.<android.location.Location: double getLatitude()>();

        $b3 = $d0 cmpl 0.0;

        if $b3 != 0 goto label1;

        $d1 = virtualinvoke r21.<android.location.Location: double getLongitude()>();

        $b4 = $d1 cmpl 0.0;

        if $b4 != 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blocking 0,0 location from ");

        $r17 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider");

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LocationManagerService", $r20);

        return;

     label1:
        $z3 = virtualinvoke r21.<android.location.Location: boolean isComplete()>();

        if $z3 != 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blocking incomplete location from ");

        $r11 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider");

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LocationManagerService", $r14);

        return;

     label2:
        $r2 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        $r3 = virtualinvoke $r2.<com.android.server.location.MockableLocationProvider: com.android.internal.location.ProviderRequest getCurrentRequest()>();

        z0 = $r3.<com.android.internal.location.ProviderRequest: boolean locationSettingsIgnored>;

        $r4 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper access$1400(com.android.server.location.LocationManagerService)>($r4);

        r1 = virtualinvoke $r5.<com.android.server.location.UserInfoHelper: int[] getCurrentUserIds()>();

        i0 = lengthof r1;

        i6 = 0;

     label3:
        if i6 >= i0 goto label6;

        i1 = r1[i6];

        if z0 != 0 goto label4;

        $z2 = virtualinvoke r0.<com.android.server.location.LocationManagerService$LocationProviderManager: boolean isEnabled(int)>(i1);

        if $z2 == 0 goto label5;

     label4:
        specialinvoke r0.<com.android.server.location.LocationManagerService$LocationProviderManager: void setLastLocation(android.location.Location,int)>(r21, i1);

     label5:
        i6 = i6 + 1;

        goto label3;

     label6:
        $r7 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        $r6 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationFudger mLocationFudger>;

        $r8 = virtualinvoke $r6.<com.android.server.location.LocationFudger: android.location.Location createCoarse(android.location.Location)>(r21);

        staticinvoke <com.android.server.location.LocationManagerService: void access$1500(com.android.server.location.LocationManagerService,com.android.server.location.LocationManagerService$LocationProviderManager,android.location.Location,android.location.Location)>($r7, r0, r21, $r8);

        return;
    }

    public void onReportLocation(java.util.List)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        java.util.List r1;
        com.android.server.location.LocationManagerService $r2, $r6;
        com.android.server.location.gnss.GnssManagerService $r3, $r7;
        java.lang.String $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        $r3 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService access$1600(com.android.server.location.LocationManagerService)>($r2);

        if $r3 == null goto label2;

        $r5 = "gps";

        $r4 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r6 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        $r7 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService access$1600(com.android.server.location.LocationManagerService)>($r6);

        virtualinvoke $r7.<com.android.server.location.gnss.GnssManagerService: void onReportLocation(java.util.List)>(r1);

        return;

     label2:
        return;
    }

    public void onStateChanged(com.android.server.location.AbstractLocationProvider$State, com.android.server.location.AbstractLocationProvider$State)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        com.android.server.location.AbstractLocationProvider$State r1, r2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        r1 := @parameter0: com.android.server.location.AbstractLocationProvider$State;

        r2 := @parameter1: com.android.server.location.AbstractLocationProvider$State;

        $z1 = r1.<com.android.server.location.AbstractLocationProvider$State: boolean allowed>;

        $z0 = r2.<com.android.server.location.AbstractLocationProvider$State: boolean allowed>;

        if $z1 == $z0 goto label1;

        virtualinvoke r0.<com.android.server.location.LocationManagerService$LocationProviderManager: void onEnabledChangedLocked(int)>(-1);

     label1:
        return;
    }

    public void onUserStarted(int)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        int i0;
        java.lang.Object r1;
        com.android.server.location.LocationManagerService $r3;
        android.util.SparseArray $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        r1 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mEnabled>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, null);

        virtualinvoke r0.<com.android.server.location.LocationManagerService$LocationProviderManager: void onEnabledChangedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onUserStopped(int)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        int i0;
        java.lang.Object r1;
        com.android.server.location.LocationManagerService $r3;
        android.util.SparseArray $r4, $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        r1 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mEnabled>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        $r5 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastLocation>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

        $r6 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastCoarseLocation>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void sendExtraCommand(int, int, java.lang.String, android.os.Bundle)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        int i0, i1;
        java.lang.String r1;
        android.os.Bundle r2;
        com.android.server.location.MockableLocationProvider $r3;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.Bundle;

        $r3 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        virtualinvoke $r3.<com.android.server.location.MockableLocationProvider: void sendExtraCommand(int,int,java.lang.String,android.os.Bundle)>(i0, i1, r1, r2);

        return;
    }

    public void setMockProvider(com.android.server.location.MockProvider)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        java.lang.Object r1, $r8, $r11;
        com.android.server.location.LocationManagerService $r2;
        com.android.server.location.MockableLocationProvider $r3;
        android.util.SparseArray $r4, $r5, $r7, $r9, $r10, $r12;
        int $i0, $i1, i2, i3;
        com.android.server.location.LocationFudger $r6;
        boolean $z0, $z1;
        java.lang.Throwable $r13;
        com.android.server.location.MockProvider r14;
        android.location.Location r15, r16;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        r14 := @parameter0: com.android.server.location.MockProvider;

        $r2 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        r1 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r2);

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        virtualinvoke $r3.<com.android.server.location.MockableLocationProvider: void setMockProvider(com.android.server.location.MockProvider)>(r14);

     label02:
        if r14 != null goto label13;

        i2 = 0;

     label03:
        $r4 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastLocation>;

        $i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i2 >= $i0 goto label07;

        $r10 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastLocation>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r15 = (android.location.Location) $r11;

     label04:
        if r15 == null goto label06;

     label05:
        $z1 = virtualinvoke r15.<android.location.Location: boolean isFromMockProvider()>();

        if $z1 == 0 goto label06;

        $r12 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastLocation>;

        virtualinvoke $r12.<android.util.SparseArray: void setValueAt(int,java.lang.Object)>(i2, null);

     label06:
        i2 = i2 + 1;

        goto label03;

     label07:
        i3 = 0;

     label08:
        $r5 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastCoarseLocation>;

        $i1 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i3 >= $i1 goto label12;

        $r7 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastCoarseLocation>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r16 = (android.location.Location) $r8;

     label09:
        if r16 == null goto label11;

     label10:
        $z0 = virtualinvoke r16.<android.location.Location: boolean isFromMockProvider()>();

        if $z0 == 0 goto label11;

        $r9 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: android.util.SparseArray mLastCoarseLocation>;

        virtualinvoke $r9.<android.util.SparseArray: void setValueAt(int,java.lang.Object)>(i3, null);

     label11:
        i3 = i3 + 1;

        goto label08;

     label12:
        $r6 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationFudger mLocationFudger>;

        virtualinvoke $r6.<com.android.server.location.LocationFudger: void resetOffsets()>();

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r13 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void setMockProviderAllowed(boolean)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        boolean z0, $z1;
        java.lang.Object r1;
        java.lang.IllegalArgumentException r2;
        com.android.server.location.LocationManagerService $r3;
        com.android.server.location.MockableLocationProvider $r4, $r9;
        java.lang.String $r5, $r8;
        java.lang.Throwable $r10;
        java.lang.StringBuilder r11;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        r1 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        $z1 = virtualinvoke $r4.<com.android.server.location.MockableLocationProvider: boolean isMock()>();

        if $z1 == 0 goto label3;

        $r9 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        virtualinvoke $r9.<com.android.server.location.MockableLocationProvider: void setMockProviderAllowed(boolean)>(z0);

        exitmonitor r1;

     label2:
        return;

     label3:
        r2 = new java.lang.IllegalArgumentException;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider is not a test provider");

        $r8 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw r2;

     label4:
        $r10 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setMockProviderLocation(android.location.Location)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        java.lang.Object r1;
        java.lang.String r2, $r5, $r8, $r9, $r10, $r16;
        int i0;
        com.android.server.location.LocationManagerService $r3;
        com.android.server.location.MockableLocationProvider $r4, $r20;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r14;
        java.lang.Integer $r15;
        java.lang.Throwable $r17;
        android.location.Location r18;
        java.lang.StringBuilder r19, r22;
        java.lang.IllegalArgumentException r21;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        r18 := @parameter0: android.location.Location;

        $r3 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.LocationManagerService this$0>;

        r1 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        $z0 = virtualinvoke $r4.<com.android.server.location.MockableLocationProvider: boolean isMock()>();

        if $z0 == 0 goto label4;

        r2 = virtualinvoke r18.<android.location.Location: java.lang.String getProvider()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label2;

        $r9 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label2;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!=");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = newarray (java.lang.Object)[3];

        $r14[0] = "33091107";

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r14[1] = $r15;

        $r16 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14[2] = $r16;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(1397638484, $r14);

     label2:
        $r20 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        virtualinvoke $r20.<com.android.server.location.MockableLocationProvider: void setMockProviderLocation(android.location.Location)>(r18);

        exitmonitor r1;

     label3:
        return;

     label4:
        r21 = new java.lang.IllegalArgumentException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String mName>;

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider is not a test provider");

        $r8 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw r21;

     label5:
        $r17 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void setRealProvider(com.android.server.location.AbstractLocationProvider)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        com.android.server.location.AbstractLocationProvider r1;
        com.android.server.location.MockableLocationProvider $r2;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        r1 := @parameter0: com.android.server.location.AbstractLocationProvider;

        $r2 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        virtualinvoke $r2.<com.android.server.location.MockableLocationProvider: void setRealProvider(com.android.server.location.AbstractLocationProvider)>(r1);

        return;
    }

    public void setRequest(com.android.internal.location.ProviderRequest)
    {
        com.android.server.location.LocationManagerService$LocationProviderManager r0;
        com.android.internal.location.ProviderRequest r1;
        com.android.server.location.MockableLocationProvider $r2;

        r0 := @this: com.android.server.location.LocationManagerService$LocationProviderManager;

        r1 := @parameter0: com.android.internal.location.ProviderRequest;

        $r2 = r0.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.server.location.MockableLocationProvider mProvider>;

        virtualinvoke $r2.<com.android.server.location.MockableLocationProvider: void setRequest(com.android.internal.location.ProviderRequest)>(r1);

        return;
    }
}
