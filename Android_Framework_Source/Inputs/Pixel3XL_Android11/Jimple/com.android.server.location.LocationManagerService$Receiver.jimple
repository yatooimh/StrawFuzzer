final class com.android.server.location.LocationManagerService$Receiver extends com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase implements android.app.PendingIntent$OnFinished
{
    private static final long WAKELOCK_TIMEOUT_MILLIS;
    private final boolean mHideFromAppOps;
    private final java.lang.Object mKey;
    private final android.location.ILocationListener mListener;
    private boolean mOpHighPowerMonitoring;
    private boolean mOpMonitoring;
    private int mPendingBroadcasts;
    final android.app.PendingIntent mPendingIntent;
    final java.util.HashMap mUpdateRecords;
    android.os.PowerManager$WakeLock mWakeLock;
    final android.os.WorkSource mWorkSource;
    final com.android.server.location.LocationManagerService this$0;

    private void <init>(com.android.server.location.LocationManagerService, android.location.ILocationListener, android.app.PendingIntent, com.android.server.location.CallerIdentity, android.os.WorkSource, boolean)
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        android.app.PendingIntent r1;
        com.android.server.location.CallerIdentity r2, $r8, $r9;
        android.os.WorkSource r3, $r7, r14, r17;
        boolean z0, $z1;
        java.util.HashMap $r4;
        android.os.PowerManager$WakeLock $r5, $r6, $r16;
        java.lang.String $r10;
        int $i0;
        android.os.IBinder $r11;
        com.android.server.location.LocationManagerService r12;
        android.location.ILocationListener r13;
        android.os.PowerManager $r15;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        r12 := @parameter0: com.android.server.location.LocationManagerService;

        r13 := @parameter1: android.location.ILocationListener;

        r1 := @parameter2: android.app.PendingIntent;

        r2 := @parameter3: com.android.server.location.CallerIdentity;

        r3 := @parameter4: android.os.WorkSource;

        z0 := @parameter5: boolean;

        r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0> = r12;

        specialinvoke r0.<com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase: void <init>(com.android.server.location.CallerIdentity)>(r2);

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.location.LocationManagerService$Receiver: java.util.HashMap mUpdateRecords> = $r4;

        r0.<com.android.server.location.LocationManagerService$Receiver: android.location.ILocationListener mListener> = r13;

        r0.<com.android.server.location.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent> = r1;

        if r13 == null goto label1;

        $r11 = interfaceinvoke r13.<android.location.ILocationListener: android.os.IBinder asBinder()>();

        r0.<com.android.server.location.LocationManagerService$Receiver: java.lang.Object mKey> = $r11;

        goto label2;

     label1:
        r0.<com.android.server.location.LocationManagerService$Receiver: java.lang.Object mKey> = r1;

     label2:
        r14 = r3;

        if r3 == null goto label3;

        r14 = r3;

        $z1 = virtualinvoke r3.<android.os.WorkSource: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        r14 = null;

     label3:
        r0.<com.android.server.location.LocationManagerService$Receiver: android.os.WorkSource mWorkSource> = r14;

        r0.<com.android.server.location.LocationManagerService$Receiver: boolean mHideFromAppOps> = z0;

        virtualinvoke r0.<com.android.server.location.LocationManagerService$Receiver: void updateMonitoring(boolean)>(1);

        $r15 = staticinvoke <com.android.server.location.LocationManagerService: android.os.PowerManager access$1800(com.android.server.location.LocationManagerService)>(r12);

        $r16 = virtualinvoke $r15.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "*location*");

        r0.<com.android.server.location.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock> = $r16;

        r17 = r14;

        if r14 != null goto label4;

        $r7 = new android.os.WorkSource;

        $r8 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $i0 = $r8.<com.android.server.location.CallerIdentity: int uid>;

        $r9 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r10 = $r9.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        specialinvoke $r7.<android.os.WorkSource: void <init>(int,java.lang.String)>($i0, $r10);

        r17 = $r7;

     label4:
        $r5 = r0.<com.android.server.location.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r5.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(r17);

        $r6 = r0.<com.android.server.location.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        return;
    }

    void <init>(com.android.server.location.LocationManagerService, android.location.ILocationListener, android.app.PendingIntent, com.android.server.location.CallerIdentity, android.os.WorkSource, boolean, com.android.server.location.LocationManagerService$1)
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        com.android.server.location.LocationManagerService r1;
        android.location.ILocationListener r2;
        android.app.PendingIntent r3;
        com.android.server.location.CallerIdentity r4;
        android.os.WorkSource r5;
        boolean z0;
        com.android.server.location.LocationManagerService$1 r6;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        r1 := @parameter0: com.android.server.location.LocationManagerService;

        r2 := @parameter1: android.location.ILocationListener;

        r3 := @parameter2: android.app.PendingIntent;

        r4 := @parameter3: com.android.server.location.CallerIdentity;

        r5 := @parameter4: android.os.WorkSource;

        z0 := @parameter5: boolean;

        r6 := @parameter6: com.android.server.location.LocationManagerService$1;

        specialinvoke r0.<com.android.server.location.LocationManagerService$Receiver: void <init>(com.android.server.location.LocationManagerService,android.location.ILocationListener,android.app.PendingIntent,com.android.server.location.CallerIdentity,android.os.WorkSource,boolean)>(r1, r2, r3, r4, r5, z0);

        return;
    }

    static void access$2400(com.android.server.location.LocationManagerService$Receiver)
    {
        com.android.server.location.LocationManagerService$Receiver r0;

        r0 := @parameter0: com.android.server.location.LocationManagerService$Receiver;

        specialinvoke r0.<com.android.server.location.LocationManagerService$Receiver: void decrementPendingBroadcastsLocked()>();

        return;
    }

    static boolean access$2500(com.android.server.location.LocationManagerService$Receiver, java.lang.String, boolean)
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        java.lang.String r1;
        boolean z0, $z1;

        r0 := @parameter0: com.android.server.location.LocationManagerService$Receiver;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $z1 = specialinvoke r0.<com.android.server.location.LocationManagerService$Receiver: boolean callProviderEnabledLocked(java.lang.String,boolean)>(r1, z0);

        return $z1;
    }

    static java.lang.Object access$3400(com.android.server.location.LocationManagerService$Receiver)
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService$Receiver;

        $r1 = r0.<com.android.server.location.LocationManagerService$Receiver: java.lang.Object mKey>;

        return $r1;
    }

    private boolean callProviderEnabledLocked(java.lang.String, boolean)
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        boolean z0;
        android.location.ILocationListener r1;
        android.content.Intent $r2;
        com.android.server.location.LocationManagerService $r4, $r7;
        android.app.PendingIntent $r5;
        android.content.Context $r6;
        android.os.Handler $r8;
        com.android.server.location.CallerIdentity $r9;
        int $i0;
        java.lang.String $r10, r14;
        android.os.Bundle $r11;
        android.app.PendingIntent$CanceledException $r12;
        android.os.RemoteException $r13;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        r14 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.location.LocationManagerService$Receiver: void updateMonitoring(boolean)>(1);

        r1 = r0.<com.android.server.location.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if r1 == null goto label07;

        if z0 == 0 goto label03;

     label01:
        interfaceinvoke r1.<android.location.ILocationListener: void onProviderEnabled(java.lang.String)>(r14);

     label02:
        goto label04;

     label03:
        interfaceinvoke r1.<android.location.ILocationListener: void onProviderDisabled(java.lang.String)>(r14);

     label04:
        specialinvoke r0.<com.android.server.location.LocationManagerService$Receiver: void incrementPendingBroadcastsLocked()>();

     label05:
        goto label09;

     label06:
        $r13 := @caughtexception;

        return 0;

     label07:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("providerEnabled", z0);

     label08:
        $r5 = r0.<com.android.server.location.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent>;

        $r4 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        $r6 = staticinvoke <com.android.server.location.LocationManagerService: android.content.Context access$100(com.android.server.location.LocationManagerService)>($r4);

        $r7 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        $r8 = staticinvoke <com.android.server.location.LocationManagerService: android.os.Handler access$2200(com.android.server.location.LocationManagerService)>($r7);

        $r9 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $i0 = $r9.<com.android.server.location.CallerIdentity: int permissionLevel>;

        $r10 = staticinvoke <com.android.server.location.CallerIdentity: java.lang.String asPermission(int)>($i0);

        $r11 = staticinvoke <com.android.server.PendingIntentUtils: android.os.Bundle createDontSendToRestrictedAppsBundle(android.os.Bundle)>(null);

        virtualinvoke $r5.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String,android.os.Bundle)>($r6, 0, $r2, r0, $r8, $r10, $r11);

        specialinvoke r0.<com.android.server.location.LocationManagerService$Receiver: void incrementPendingBroadcastsLocked()>();

     label09:
        return 1;

     label10:
        $r12 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label01 to label02 with label06;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch android.app.PendingIntent$CanceledException from label08 to label09 with label10;
    }

    private void decrementPendingBroadcastsLocked()
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        int i0, $i2;
        long l1;
        android.os.PowerManager$WakeLock $r2, $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        $i2 = r0.<com.android.server.location.LocationManagerService$Receiver: int mPendingBroadcasts>;

        i0 = $i2 - 1;

        r0.<com.android.server.location.LocationManagerService$Receiver: int mPendingBroadcasts> = i0;

        if i0 != 0 goto label4;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.location.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock>;

        $z0 = virtualinvoke $r2.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.server.location.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void release()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r4;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void incrementPendingBroadcastsLocked()
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        long l0;
        int $i1, $i2;
        android.os.PowerManager$WakeLock $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        $i1 = r0.<com.android.server.location.LocationManagerService$Receiver: int mPendingBroadcasts>;

        $i2 = $i1 + 1;

        r0.<com.android.server.location.LocationManagerService$Receiver: int mPendingBroadcasts> = $i2;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.location.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void acquire(long)>(60000L);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean updateMonitoring(boolean, boolean, boolean)
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        boolean z0, z1, z2, $z3, $z4, $z5;
        com.android.server.location.LocationManagerService $r1, $r4, $r7, $r10, $r13;
        com.android.server.location.AppOpsHelper $r2, $r5, $r8, $r11, $r14;
        com.android.server.location.CallerIdentity $r3, $r6, $r9, $r12, $r15;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        if z1 != 0 goto label2;

        if z0 == 0 goto label3;

        if z2 != 0 goto label1;

        $r13 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        $r14 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper access$2100(com.android.server.location.LocationManagerService)>($r13);

        $r15 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $z5 = virtualinvoke $r14.<com.android.server.location.AppOpsHelper: boolean startLocationMonitoring(com.android.server.location.CallerIdentity)>($r15);

        return $z5;

     label1:
        $r10 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        $r11 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper access$2100(com.android.server.location.LocationManagerService)>($r10);

        $r12 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $z4 = virtualinvoke $r11.<com.android.server.location.AppOpsHelper: boolean startHighPowerLocationMonitoring(com.android.server.location.CallerIdentity)>($r12);

        return $z4;

     label2:
        if z0 == 0 goto label4;

        $r7 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        $r8 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper access$2100(com.android.server.location.LocationManagerService)>($r7);

        $r9 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $z3 = virtualinvoke $r8.<com.android.server.location.AppOpsHelper: boolean checkLocationAccess(com.android.server.location.CallerIdentity)>($r9);

        if $z3 != 0 goto label3;

        goto label4;

     label3:
        return z1;

     label4:
        if z2 != 0 goto label5;

        $r4 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper access$2100(com.android.server.location.LocationManagerService)>($r4);

        $r6 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        virtualinvoke $r5.<com.android.server.location.AppOpsHelper: void stopLocationMonitoring(com.android.server.location.CallerIdentity)>($r6);

        goto label6;

     label5:
        $r1 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        $r2 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper access$2100(com.android.server.location.LocationManagerService)>($r1);

        $r3 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        virtualinvoke $r2.<com.android.server.location.AppOpsHelper: void stopHighPowerLocationMonitoring(com.android.server.location.CallerIdentity)>($r3);

     label6:
        return 0;
    }

    public void binderDied()
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        java.lang.Object r1;
        com.android.server.location.LocationManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        $r3 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        r1 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        staticinvoke <com.android.server.location.LocationManagerService: void access$2300(com.android.server.location.LocationManagerService,com.android.server.location.LocationManagerService$Receiver)>($r4, r0);

        virtualinvoke r0.<com.android.server.location.LocationManagerService$Receiver: void clearPendingBroadcastsLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean callLocationChangedLocked(android.location.Location)
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        android.location.ILocationListener r1;
        android.content.Intent $r2;
        android.location.Location $r3, r15, r16;
        com.android.server.location.LocationManagerService $r5, $r8;
        android.app.PendingIntent $r6;
        android.content.Context $r7;
        android.os.Handler $r9;
        com.android.server.location.CallerIdentity $r10;
        int $i0;
        java.lang.String $r11;
        android.os.Bundle $r12;
        android.app.PendingIntent$CanceledException $r13;
        android.os.RemoteException $r14;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        r15 := @parameter0: android.location.Location;

        r1 = r0.<com.android.server.location.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if r1 == null goto label4;

     label1:
        r16 = new android.location.Location;

        specialinvoke r16.<android.location.Location: void <init>(android.location.Location)>(r15);

        interfaceinvoke r1.<android.location.ILocationListener: void onLocationChanged(android.location.Location)>(r16);

        specialinvoke r0.<com.android.server.location.LocationManagerService$Receiver: void incrementPendingBroadcastsLocked()>();

     label2:
        goto label6;

     label3:
        $r14 := @caughtexception;

        return 0;

     label4:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        $r3 = new android.location.Location;

        specialinvoke $r3.<android.location.Location: void <init>(android.location.Location)>(r15);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("location", $r3);

     label5:
        $r6 = r0.<com.android.server.location.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent>;

        $r5 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        $r7 = staticinvoke <com.android.server.location.LocationManagerService: android.content.Context access$100(com.android.server.location.LocationManagerService)>($r5);

        $r8 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        $r9 = staticinvoke <com.android.server.location.LocationManagerService: android.os.Handler access$2200(com.android.server.location.LocationManagerService)>($r8);

        $r10 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $i0 = $r10.<com.android.server.location.CallerIdentity: int permissionLevel>;

        $r11 = staticinvoke <com.android.server.location.CallerIdentity: java.lang.String asPermission(int)>($i0);

        $r12 = staticinvoke <com.android.server.PendingIntentUtils: android.os.Bundle createDontSendToRestrictedAppsBundle(android.os.Bundle)>(null);

        virtualinvoke $r6.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String,android.os.Bundle)>($r7, 0, $r2, r0, $r9, $r11, $r12);

        specialinvoke r0.<com.android.server.location.LocationManagerService$Receiver: void incrementPendingBroadcastsLocked()>();

     label6:
        return 1;

     label7:
        $r13 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.app.PendingIntent$CanceledException from label5 to label6 with label7;
    }

    public void callRemovedLocked()
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        android.os.RemoteException $r1;
        android.location.ILocationListener r2;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        r2 = r0.<com.android.server.location.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<android.location.ILocationListener: void onRemoved()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearPendingBroadcastsLocked()
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        long l0;
        int $i1;
        android.os.PowerManager$WakeLock $r2, $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        $i1 = r0.<com.android.server.location.LocationManagerService$Receiver: int mPendingBroadcasts>;

        if $i1 <= 0 goto label4;

        r0.<com.android.server.location.LocationManagerService$Receiver: int mPendingBroadcasts> = 0;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.location.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock>;

        $z0 = virtualinvoke $r2.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.server.location.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void release()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.server.location.LocationManagerService$Receiver r0, $r2;
        java.lang.Object r1, $r3, $r4;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.android.server.location.LocationManagerService$Receiver;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.location.LocationManagerService$Receiver: java.lang.Object mKey>;

        $r2 = (com.android.server.location.LocationManagerService$Receiver) r1;

        $r3 = $r2.<com.android.server.location.LocationManagerService$Receiver: java.lang.Object mKey>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public android.location.ILocationListener getListener()
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        android.location.ILocationListener r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        r1 = r0.<com.android.server.location.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Request for non-existent listener");

        throw $r2;
    }

    public int hashCode()
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        java.lang.Object $r1;
        int $i0;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        $r1 = r0.<com.android.server.location.LocationManagerService$Receiver: java.lang.Object mKey>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean isListener()
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        android.location.ILocationListener $r1;
        boolean z0;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        $r1 = r0.<com.android.server.location.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isPendingIntent()
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        android.app.PendingIntent $r1;
        boolean z0;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        $r1 = r0.<com.android.server.location.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void onSendFinished(android.app.PendingIntent, android.content.Intent, int, java.lang.String, android.os.Bundle)
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        int i0;
        java.lang.String r1;
        android.os.Bundle r2;
        com.android.server.location.LocationManagerService $r3;
        java.lang.Throwable $r4;
        android.app.PendingIntent r5;
        android.content.Intent r6;
        java.lang.Object r7;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        r5 := @parameter0: android.app.PendingIntent;

        r6 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.os.Bundle;

        $r3 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        r7 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r3);

        entermonitor r7;

     label1:
        specialinvoke r0.<com.android.server.location.LocationManagerService$Receiver: void decrementPendingBroadcastsLocked()>();

        exitmonitor r7;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r7;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String toString()
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        java.util.Iterator r2;
        java.lang.String r3, $r6, $r15, $r21;
        java.lang.StringBuilder $r4;
        int $i0;
        android.location.ILocationListener $r8;
        java.util.HashMap $r10, $r18;
        java.util.Set $r11;
        boolean $z0, $z1;
        java.lang.Object $r16, $r19;
        com.android.server.location.LocationManagerService$UpdateRecord $r20;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reciever[");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = r0.<com.android.server.location.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if $r8 == null goto label1;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" listener");

        goto label2;

     label1:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" intent");

     label2:
        $r10 = r0.<com.android.server.location.LocationManagerService$Receiver: java.util.HashMap mUpdateRecords>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r16 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r16;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = r0.<com.android.server.location.LocationManagerService$Receiver: java.util.HashMap mUpdateRecords>;

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        $r20 = (com.android.server.location.LocationManagerService$UpdateRecord) $r19;

        $r21 = virtualinvoke $r20.<com.android.server.location.LocationManagerService$UpdateRecord: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        goto label3;

     label4:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" monitoring location: ");

        $z0 = r0.<com.android.server.location.LocationManagerService$Receiver: boolean mOpMonitoring>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public void updateMonitoring(boolean)
    {
        com.android.server.location.LocationManagerService$Receiver r0;
        com.android.server.location.LocationManagerService$UpdateRecord r1;
        long l0, $l4;
        boolean $z2, $z3, $z4, z5, z6, z7, z8, $z9, $z10, $z11, z12, $z13, z14;
        com.android.server.location.LocationManagerService $r2, $r9, $r12;
        android.content.Context $r3;
        android.os.UserHandle $r4;
        java.util.HashMap $r5;
        java.util.Collection $r6;
        java.lang.Object $r7;
        java.lang.String $r8;
        com.android.server.location.CallerIdentity $r10;
        int $i1, $i2, $i3;
        android.location.LocationRequest $r11;
        byte $b5;
        java.lang.Throwable $r13;
        java.util.Iterator r14;
        com.android.server.location.LocationManagerService$LocationProviderManager r15;
        com.android.internal.location.ProviderProperties r16;
        android.content.Intent r17;

        r0 := @this: com.android.server.location.LocationManagerService$Receiver;

        z5 := @parameter0: boolean;

        $z2 = r0.<com.android.server.location.LocationManagerService$Receiver: boolean mHideFromAppOps>;

        if $z2 == 0 goto label01;

        return;

     label01:
        z6 = 0;

        z7 = 0;

        if z5 == 0 goto label06;

        $r5 = r0.<com.android.server.location.LocationManagerService$Receiver: java.util.HashMap mUpdateRecords>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        r14 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

        z8 = 0;

     label02:
        z6 = z8;

        z7 = 0;

        $z9 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label06;

        $r7 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r1 = (com.android.server.location.LocationManagerService$UpdateRecord) $r7;

        $r9 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        $r8 = r1.<com.android.server.location.LocationManagerService$UpdateRecord: java.lang.String mProvider>;

        r15 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager access$1900(com.android.server.location.LocationManagerService,java.lang.String)>($r9, $r8);

        if r15 != null goto label03;

        goto label02;

     label03:
        $r10 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $i1 = $r10.<com.android.server.location.CallerIdentity: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $z3 = virtualinvoke r15.<com.android.server.location.LocationManagerService$LocationProviderManager: boolean isEnabled(int)>($i2);

        if $z3 != 0 goto label04;

        $r12 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        $z4 = staticinvoke <com.android.server.location.LocationManagerService: boolean access$2000(com.android.server.location.LocationManagerService,com.android.server.location.LocationManagerService$UpdateRecord)>($r12, r1);

        if $z4 != 0 goto label04;

        goto label02;

     label04:
        z6 = 1;

        z8 = 1;

        r16 = virtualinvoke r15.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.internal.location.ProviderProperties getProperties()>();

        if r16 == null goto label05;

        $i3 = r16.<com.android.internal.location.ProviderProperties: int mPowerRequirement>;

        if $i3 != 3 goto label05;

        $r11 = r1.<com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest mRequest>;

        $l4 = virtualinvoke $r11.<android.location.LocationRequest: long getInterval()>();

        $b5 = $l4 cmp 300000L;

        if $b5 >= 0 goto label05;

        z7 = 1;

        goto label06;

     label05:
        goto label02;

     label06:
        $z10 = r0.<com.android.server.location.LocationManagerService$Receiver: boolean mOpMonitoring>;

        $z11 = specialinvoke r0.<com.android.server.location.LocationManagerService$Receiver: boolean updateMonitoring(boolean,boolean,boolean)>(z6, $z10, 0);

        r0.<com.android.server.location.LocationManagerService$Receiver: boolean mOpMonitoring> = $z11;

        z12 = r0.<com.android.server.location.LocationManagerService$Receiver: boolean mOpHighPowerMonitoring>;

        $z13 = r0.<com.android.server.location.LocationManagerService$Receiver: boolean mOpHighPowerMonitoring>;

        z14 = specialinvoke r0.<com.android.server.location.LocationManagerService$Receiver: boolean updateMonitoring(boolean,boolean,boolean)>(z7, $z13, 1);

        r0.<com.android.server.location.LocationManagerService$Receiver: boolean mOpHighPowerMonitoring> = z14;

        if z14 == z12 goto label10;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label07:
        r17 = new android.content.Intent;

        specialinvoke r17.<android.content.Intent: void <init>(java.lang.String)>("android.location.HIGH_POWER_REQUEST_CHANGE");

        $r2 = r0.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.LocationManagerService this$0>;

        $r3 = staticinvoke <com.android.server.location.LocationManagerService: android.content.Context access$100(com.android.server.location.LocationManagerService)>($r2);

        $r4 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r17, $r4);

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label10;

     label09:
        $r13 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r13;

     label10:
        return;

        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public static void <clinit>()
    {
        <com.android.server.location.LocationManagerService$Receiver: long WAKELOCK_TIMEOUT_MILLIS> = 60000L;

        return;
    }
}
