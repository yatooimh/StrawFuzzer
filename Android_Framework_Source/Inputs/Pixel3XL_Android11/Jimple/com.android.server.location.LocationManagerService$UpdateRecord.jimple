class com.android.server.location.LocationManagerService$UpdateRecord extends java.lang.Object
{
    private long mExpirationRealtimeMs;
    private boolean mIsForegroundUid;
    private android.location.Location mLastFixBroadcast;
    final java.lang.String mProvider;
    private final android.location.LocationRequest mRealRequest;
    private final com.android.server.location.LocationManagerService$Receiver mReceiver;
    android.location.LocationRequest mRequest;
    private java.lang.Throwable mStackTrace;
    final com.android.server.location.LocationManagerService this$0;

    private void <init>(com.android.server.location.LocationManagerService, java.lang.String, android.location.LocationRequest, com.android.server.location.LocationManagerService$Receiver)
    {
        com.android.server.location.LocationManagerService$UpdateRecord r0;
        com.android.server.location.LocationManagerService r1;
        java.lang.String r2, $r12, $r13;
        android.location.LocationRequest r3;
        boolean $z0, $z1, $z2, $z3, $z5, $z6;
        long $l0, $l1, $l3;
        com.android.server.location.AppForegroundHelper $r4;
        com.android.server.location.LocationManagerService$Receiver $r5, $r8, $r10, r17;
        com.android.server.location.CallerIdentity $r6, $r9, $r11, $r14;
        int $i2, $i4, $i5;
        com.android.server.location.LocationRequestStatistics $r7;
        java.lang.Object $r16, $r20;
        java.util.HashMap $r18;
        com.android.server.location.'-$$Lambda$LocationManagerService$UpdateRecord$25fPpeMCBEQaIl696puDTixFEtA' $r19;
        java.util.ArrayList r21;
        java.lang.Throwable r22;
        java.util.function.Function r23;

        r0 := @this: com.android.server.location.LocationManagerService$UpdateRecord;

        r1 := @parameter0: com.android.server.location.LocationManagerService;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.location.LocationRequest;

        r17 := @parameter3: com.android.server.location.LocationManagerService$Receiver;

        r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label1;

        $r16 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>(r1);

        $z5 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r16);

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>($z5);

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = virtualinvoke r3.<android.location.LocationRequest: long getExpirationRealtimeMs(long)>($l0);

        r0.<com.android.server.location.LocationManagerService$UpdateRecord: long mExpirationRealtimeMs> = $l1;

        r0.<com.android.server.location.LocationManagerService$UpdateRecord: java.lang.String mProvider> = r2;

        r0.<com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest mRealRequest> = r3;

        r0.<com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest mRequest> = r3;

        r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver> = r17;

        $r4 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.AppForegroundHelper access$2700(com.android.server.location.LocationManagerService)>(r1);

        $r5 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        $r6 = $r5.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $i2 = $r6.<com.android.server.location.CallerIdentity: int uid>;

        $z1 = virtualinvoke $r4.<com.android.server.location.AppForegroundHelper: boolean isAppForeground(int)>($i2);

        r0.<com.android.server.location.LocationManagerService$UpdateRecord: boolean mIsForegroundUid> = $z1;

        $z2 = <com.android.server.location.LocationManagerService: boolean D>;

        if $z2 == 0 goto label2;

        $r14 = r17.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $i4 = $r14.<com.android.server.location.CallerIdentity: int pid>;

        $i5 = staticinvoke <android.os.Process: int myPid()>();

        if $i4 != $i5 goto label2;

        r22 = new java.lang.Throwable;

        specialinvoke r22.<java.lang.Throwable: void <init>()>();

        r0.<com.android.server.location.LocationManagerService$UpdateRecord: java.lang.Throwable mStackTrace> = r22;

     label2:
        $r18 = staticinvoke <com.android.server.location.LocationManagerService: java.util.HashMap access$2800(com.android.server.location.LocationManagerService)>(r1);

        $r19 = <com.android.server.location._$$Lambda$LocationManagerService$UpdateRecord$25fPpeMCBEQaIl696puDTixFEtA: com.android.server.location.'-$$Lambda$LocationManagerService$UpdateRecord$25fPpeMCBEQaIl696puDTixFEtA' INSTANCE>;

        r23 = (java.util.function.Function) $r19;

        $r20 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(r2, r23);

        r21 = (java.util.ArrayList) $r20;

        $z6 = virtualinvoke r21.<java.util.ArrayList: boolean contains(java.lang.Object)>(r0);

        if $z6 != 0 goto label3;

        virtualinvoke r21.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label3:
        $r7 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.LocationRequestStatistics access$2900(com.android.server.location.LocationManagerService)>(r1);

        $r8 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        $r9 = $r8.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r12 = $r9.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $r10 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        $r11 = $r10.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r13 = $r11.<com.android.server.location.CallerIdentity: java.lang.String featureId>;

        $l3 = virtualinvoke r3.<android.location.LocationRequest: long getInterval()>();

        $z3 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: boolean mIsForegroundUid>;

        virtualinvoke $r7.<com.android.server.location.LocationRequestStatistics: void startRequesting(java.lang.String,java.lang.String,java.lang.String,long,boolean)>($r12, $r13, r2, $l3, $z3);

        return;
    }

    void <init>(com.android.server.location.LocationManagerService, java.lang.String, android.location.LocationRequest, com.android.server.location.LocationManagerService$Receiver, com.android.server.location.LocationManagerService$1)
    {
        com.android.server.location.LocationManagerService$UpdateRecord r0;
        com.android.server.location.LocationManagerService r1;
        java.lang.String r2;
        android.location.LocationRequest r3;
        com.android.server.location.LocationManagerService$Receiver r4;
        com.android.server.location.LocationManagerService$1 r5;

        r0 := @this: com.android.server.location.LocationManagerService$UpdateRecord;

        r1 := @parameter0: com.android.server.location.LocationManagerService;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.location.LocationRequest;

        r4 := @parameter3: com.android.server.location.LocationManagerService$Receiver;

        r5 := @parameter4: com.android.server.location.LocationManagerService$1;

        specialinvoke r0.<com.android.server.location.LocationManagerService$UpdateRecord: void <init>(com.android.server.location.LocationManagerService,java.lang.String,android.location.LocationRequest,com.android.server.location.LocationManagerService$Receiver)>(r1, r2, r3, r4);

        return;
    }

    static boolean access$1000(com.android.server.location.LocationManagerService$UpdateRecord)
    {
        com.android.server.location.LocationManagerService$UpdateRecord r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.LocationManagerService$UpdateRecord;

        $z0 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: boolean mIsForegroundUid>;

        return $z0;
    }

    static void access$1100(com.android.server.location.LocationManagerService$UpdateRecord, boolean)
    {
        com.android.server.location.LocationManagerService$UpdateRecord r0;
        boolean z0;

        r0 := @parameter0: com.android.server.location.LocationManagerService$UpdateRecord;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.location.LocationManagerService$UpdateRecord: void updateForeground(boolean)>(z0);

        return;
    }

    static android.location.LocationRequest access$2600(com.android.server.location.LocationManagerService$UpdateRecord)
    {
        com.android.server.location.LocationManagerService$UpdateRecord r0;
        android.location.LocationRequest $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService$UpdateRecord;

        $r1 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest mRealRequest>;

        return $r1;
    }

    static void access$3300(com.android.server.location.LocationManagerService$UpdateRecord, boolean)
    {
        com.android.server.location.LocationManagerService$UpdateRecord r0;
        boolean z0;

        r0 := @parameter0: com.android.server.location.LocationManagerService$UpdateRecord;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.location.LocationManagerService$UpdateRecord: void disposeLocked(boolean)>(z0);

        return;
    }

    static long access$3500(com.android.server.location.LocationManagerService$UpdateRecord)
    {
        com.android.server.location.LocationManagerService$UpdateRecord r0;
        long $l0;

        r0 := @parameter0: com.android.server.location.LocationManagerService$UpdateRecord;

        $l0 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: long mExpirationRealtimeMs>;

        return $l0;
    }

    static android.location.Location access$3600(com.android.server.location.LocationManagerService$UpdateRecord)
    {
        com.android.server.location.LocationManagerService$UpdateRecord r0;
        android.location.Location $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService$UpdateRecord;

        $r1 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: android.location.Location mLastFixBroadcast>;

        return $r1;
    }

    static android.location.Location access$3602(com.android.server.location.LocationManagerService$UpdateRecord, android.location.Location)
    {
        com.android.server.location.LocationManagerService$UpdateRecord r0;
        android.location.Location r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService$UpdateRecord;

        r1 := @parameter1: android.location.Location;

        r0.<com.android.server.location.LocationManagerService$UpdateRecord: android.location.Location mLastFixBroadcast> = r1;

        return r1;
    }

    static com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)
    {
        com.android.server.location.LocationManagerService$UpdateRecord r0;
        com.android.server.location.LocationManagerService$Receiver $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService$UpdateRecord;

        $r1 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        return $r1;
    }

    private void disposeLocked(boolean)
    {
        com.android.server.location.LocationManagerService$UpdateRecord r0;
        boolean z0, $z1, $z2, $z3, $z5;
        com.android.server.location.LocationManagerService$Receiver $r1, $r9, $r12, $r15, $r21, $r24;
        com.android.server.location.LocationManagerService $r2, $r7, $r13, $r17, $r25, $r26;
        com.android.server.location.LocationRequestStatistics $r3;
        java.lang.String $r4, $r5, $r6, $r10, $r19, $r22;
        com.android.server.location.LocationUsageLogger $r8;
        android.location.LocationRequest $r11;
        com.android.server.location.AppForegroundHelper $r14;
        com.android.server.location.CallerIdentity $r16, r28;
        int $i0, $i1, $i2;
        java.util.HashMap $r18, r30;
        java.lang.Object $r20, $r27;
        java.util.ArrayList r29;

        r0 := @this: com.android.server.location.LocationManagerService$UpdateRecord;

        z0 := @parameter0: boolean;

        $z1 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z1 == 0 goto label1;

        $r26 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService this$0>;

        $r27 = staticinvoke <com.android.server.location.LocationManagerService: java.lang.Object access$600(com.android.server.location.LocationManagerService)>($r26);

        $z5 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r27);

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>($z5);

     label1:
        $r1 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        r28 = $r1.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r2 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService this$0>;

        $r3 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.LocationRequestStatistics access$2900(com.android.server.location.LocationManagerService)>($r2);

        $r6 = r28.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $r5 = r28.<com.android.server.location.CallerIdentity: java.lang.String featureId>;

        $r4 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: java.lang.String mProvider>;

        virtualinvoke $r3.<com.android.server.location.LocationRequestStatistics: void stopRequesting(java.lang.String,java.lang.String,java.lang.String)>($r6, $r5, $r4);

        $r7 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService this$0>;

        $r8 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.LocationUsageLogger access$3000(com.android.server.location.LocationManagerService)>($r7);

        $r10 = r28.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $r11 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest mRealRequest>;

        $r9 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        $z2 = virtualinvoke $r9.<com.android.server.location.LocationManagerService$Receiver: boolean isListener()>();

        $r12 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        $z3 = virtualinvoke $r12.<com.android.server.location.LocationManagerService$Receiver: boolean isPendingIntent()>();

        $r13 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService this$0>;

        $r14 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.AppForegroundHelper access$2700(com.android.server.location.LocationManagerService)>($r13);

        $r15 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        $r16 = $r15.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $i0 = $r16.<com.android.server.location.CallerIdentity: int uid>;

        $i1 = virtualinvoke $r14.<com.android.server.location.AppForegroundHelper: int getImportance(int)>($i0);

        virtualinvoke $r8.<com.android.server.location.LocationUsageLogger: void logLocationApiUsage(int,int,java.lang.String,android.location.LocationRequest,boolean,boolean,android.location.Geofence,int)>(1, 1, $r10, $r11, $z2, $z3, null, $i1);

        $r17 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService this$0>;

        $r18 = staticinvoke <com.android.server.location.LocationManagerService: java.util.HashMap access$2800(com.android.server.location.LocationManagerService)>($r17);

        $r19 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: java.lang.String mProvider>;

        $r20 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r19);

        r29 = (java.util.ArrayList) $r20;

        if r29 == null goto label2;

        virtualinvoke r29.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

     label2:
        if z0 != 0 goto label3;

        return;

     label3:
        $r21 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        r30 = $r21.<com.android.server.location.LocationManagerService$Receiver: java.util.HashMap mUpdateRecords>;

        $r22 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: java.lang.String mProvider>;

        virtualinvoke r30.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r22);

        $i2 = virtualinvoke r30.<java.util.HashMap: int size()>();

        if $i2 != 0 goto label4;

        $r25 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService this$0>;

        $r24 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        staticinvoke <com.android.server.location.LocationManagerService: void access$2300(com.android.server.location.LocationManagerService,com.android.server.location.LocationManagerService$Receiver)>($r25, $r24);

     label4:
        return;
    }

    static java.util.ArrayList lambda$new$0(java.lang.String)
    {
        java.lang.String r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;
    }

    private void updateForeground(boolean)
    {
        com.android.server.location.LocationManagerService$UpdateRecord r0;
        boolean z0;
        com.android.server.location.LocationManagerService $r1;
        com.android.server.location.LocationRequestStatistics $r2;
        com.android.server.location.LocationManagerService$Receiver $r3, $r5;
        com.android.server.location.CallerIdentity $r4, $r6;
        java.lang.String $r7, $r8, $r9;

        r0 := @this: com.android.server.location.LocationManagerService$UpdateRecord;

        z0 := @parameter0: boolean;

        r0.<com.android.server.location.LocationManagerService$UpdateRecord: boolean mIsForegroundUid> = z0;

        $r1 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService this$0>;

        $r2 = staticinvoke <com.android.server.location.LocationManagerService: com.android.server.location.LocationRequestStatistics access$2900(com.android.server.location.LocationManagerService)>($r1);

        $r3 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        $r4 = $r3.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r9 = $r4.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $r5 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        $r6 = $r5.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r8 = $r6.<com.android.server.location.CallerIdentity: java.lang.String featureId>;

        $r7 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: java.lang.String mProvider>;

        virtualinvoke $r2.<com.android.server.location.LocationRequestStatistics: void updateForeground(java.lang.String,java.lang.String,java.lang.String,boolean)>($r9, $r8, $r7, z0);

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.location.LocationManagerService$UpdateRecord r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r19, $r24;
        com.android.server.location.LocationManagerService$Receiver $r7, $r14;
        com.android.server.location.CallerIdentity $r8;
        boolean $z0;
        android.location.LocationRequest $r11;
        android.os.WorkSource $r15;
        java.lang.Throwable $r17, $r22;
        java.io.ByteArrayOutputStream $r20;
        java.io.PrintStream $r21;

        r0 := @this: com.android.server.location.LocationManagerService$UpdateRecord;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("UpdateRecord[");

        $r4 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: java.lang.String mProvider>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        $r8 = $r7.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $z0 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: boolean mIsForegroundUid>;

        if $z0 != 0 goto label1;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(background) ");

     label1:
        $r11 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest mRealRequest>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver mReceiver>;

        $r15 = $r14.<com.android.server.location.LocationManagerService$Receiver: android.os.WorkSource mWorkSource>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: java.lang.Throwable mStackTrace>;

        if $r17 == null goto label2;

        $r20 = new java.io.ByteArrayOutputStream;

        specialinvoke $r20.<java.io.ByteArrayOutputStream: void <init>()>();

        $r22 = r0.<com.android.server.location.LocationManagerService$UpdateRecord: java.lang.Throwable mStackTrace>;

        $r21 = new java.io.PrintStream;

        specialinvoke $r21.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r20);

        virtualinvoke $r22.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r21);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        $r24 = virtualinvoke $r20.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r19 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;
    }
}
