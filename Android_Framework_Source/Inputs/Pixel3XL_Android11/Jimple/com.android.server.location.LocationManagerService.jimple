public class com.android.server.location.LocationManagerService extends android.location.ILocationManager$Stub
{
    private static final java.lang.String ATTRIBUTION_TAG;
    public static final boolean D;
    private static final android.location.LocationRequest DEFAULT_LOCATION_REQUEST;
    private static final long FASTEST_COARSE_INTERVAL_MS;
    private static final java.lang.String FUSED_LOCATION_SERVICE_ACTION;
    private static final long HIGH_POWER_INTERVAL_MS;
    private static final long MAX_CURRENT_LOCATION_AGE_MS;
    private static final int MAX_PROVIDER_SCHEDULING_JITTER_MS;
    private static final java.lang.String NETWORK_LOCATION_SERVICE_ACTION;
    public static final java.lang.String TAG;
    private static final java.lang.String WAKELOCK_KEY;
    private final com.android.server.location.AppForegroundHelper mAppForegroundHelper;
    private final com.android.server.location.AppOpsHelper mAppOpsHelper;
    private int mBatterySaverMode;
    private final android.content.Context mContext;
    private java.lang.String mExtraLocationControllerPackage;
    private boolean mExtraLocationControllerPackageEnabled;
    private com.android.server.location.GeocoderProxy mGeocodeProvider;
    private com.android.server.location.GeofenceManager mGeofenceManager;
    private volatile com.android.server.location.gnss.GnssManagerService mGnssManagerService;
    private final android.os.Handler mHandler;
    private final com.android.server.location.LocationManagerService$LocalService mLocalService;
    private final com.android.server.location.LocationUsageLogger mLocationUsageLogger;
    private final java.lang.Object mLock;
    private final com.android.server.location.LocationManagerService$PassiveLocationProviderManager mPassiveManager;
    private android.os.PowerManager mPowerManager;
    private final java.util.concurrent.CopyOnWriteArrayList mProviderManagers;
    private final java.util.HashMap mReceivers;
    private final java.util.HashMap mRecordsByProvider;
    private final com.android.server.location.LocationRequestStatistics mRequestStatistics;
    private final com.android.server.location.SettingsHelper mSettingsHelper;
    private final com.android.server.location.UserInfoHelper mUserInfoHelper;

    static void <clinit>()
    {
        boolean $z0;
        android.location.LocationRequest $r0;

        <com.android.server.location.LocationManagerService: java.lang.String WAKELOCK_KEY> = "*location*";

        <com.android.server.location.LocationManagerService: java.lang.String TAG> = "LocationManagerService";

        <com.android.server.location.LocationManagerService: java.lang.String NETWORK_LOCATION_SERVICE_ACTION> = "com.android.location.service.v3.NetworkLocationProvider";

        <com.android.server.location.LocationManagerService: int MAX_PROVIDER_SCHEDULING_JITTER_MS> = 100;

        <com.android.server.location.LocationManagerService: long MAX_CURRENT_LOCATION_AGE_MS> = 10000L;

        <com.android.server.location.LocationManagerService: long HIGH_POWER_INTERVAL_MS> = 300000L;

        <com.android.server.location.LocationManagerService: java.lang.String FUSED_LOCATION_SERVICE_ACTION> = "com.android.location.service.FusedLocationProvider";

        <com.android.server.location.LocationManagerService: long FASTEST_COARSE_INTERVAL_MS> = 600000L;

        <com.android.server.location.LocationManagerService: java.lang.String ATTRIBUTION_TAG> = "LocationService";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("LocationManagerService", 3);

        <com.android.server.location.LocationManagerService: boolean D> = $z0;

        $r0 = new android.location.LocationRequest;

        specialinvoke $r0.<android.location.LocationRequest: void <init>()>();

        <com.android.server.location.LocationManagerService: android.location.LocationRequest DEFAULT_LOCATION_REQUEST> = $r0;

        return;
    }

    private void <init>(android.content.Context, com.android.server.location.UserInfoHelper)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.UserInfoHelper r1;
        java.lang.Object $r2, $r23;
        java.util.concurrent.CopyOnWriteArrayList $r3, $r19;
        java.util.HashMap $r4, $r5;
        com.android.server.location.LocationRequestStatistics $r6;
        android.content.Context $r7, $r11, $r14, $r16, $r21, r26;
        android.os.Handler $r8, $r13;
        com.android.server.location.LocationManagerService$LocalService $r9;
        com.android.server.location.AppOpsHelper $r10;
        com.android.server.location.SettingsHelper $r12;
        com.android.server.location.AppForegroundHelper $r15;
        com.android.server.location.LocationUsageLogger $r17;
        com.android.server.location.LocationManagerService$PassiveLocationProviderManager $r18, $r22;
        com.android.server.location.PassiveProvider $r20;
        com.android.server.location._$$Lambda$LocationManagerService$nzVFoCdmIONeiXrvXa4GDW2BD7s $r24;
        com.android.server.location._$$Lambda$LocationManagerService$6OCuateQj_yVMsW_SFSfx_8hszQ $r25;
        com.android.server.pm.permission.PermissionManagerServiceInternal r29;

        r0 := @this: com.android.server.location.LocationManagerService;

        r26 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.server.location.UserInfoHelper;

        specialinvoke r0.<android.location.ILocationManager$Stub: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock> = $r2;

        r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService> = null;

        $r3 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.location.LocationManagerService: java.util.HashMap mReceivers> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.location.LocationManagerService: java.util.HashMap mRecordsByProvider> = $r5;

        $r6 = new com.android.server.location.LocationRequestStatistics;

        specialinvoke $r6.<com.android.server.location.LocationRequestStatistics: void <init>()>();

        r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationRequestStatistics mRequestStatistics> = $r6;

        $r7 = virtualinvoke r26.<android.content.Context: android.content.Context createAttributionContext(java.lang.String)>("LocationService");

        r0.<com.android.server.location.LocationManagerService: android.content.Context mContext> = $r7;

        $r8 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        r0.<com.android.server.location.LocationManagerService: android.os.Handler mHandler> = $r8;

        $r9 = new com.android.server.location.LocationManagerService$LocalService;

        specialinvoke $r9.<com.android.server.location.LocationManagerService$LocalService: void <init>(com.android.server.location.LocationManagerService,com.android.server.location.LocationManagerService$1)>(r0, null);

        r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocalService mLocalService> = $r9;

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(class "Landroid/location/LocationManagerInternal;", $r9);

        $r10 = new com.android.server.location.AppOpsHelper;

        $r11 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        specialinvoke $r10.<com.android.server.location.AppOpsHelper: void <init>(android.content.Context)>($r11);

        r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper> = $r10;

        r0.<com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper mUserInfoHelper> = r1;

        $r12 = new com.android.server.location.SettingsHelper;

        $r14 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $r13 = r0.<com.android.server.location.LocationManagerService: android.os.Handler mHandler>;

        specialinvoke $r12.<com.android.server.location.SettingsHelper: void <init>(android.content.Context,android.os.Handler)>($r14, $r13);

        r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper> = $r12;

        $r15 = new com.android.server.location.AppForegroundHelper;

        $r16 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        specialinvoke $r15.<com.android.server.location.AppForegroundHelper: void <init>(android.content.Context)>($r16);

        r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper> = $r15;

        $r17 = new com.android.server.location.LocationUsageLogger;

        specialinvoke $r17.<com.android.server.location.LocationUsageLogger: void <init>()>();

        r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationUsageLogger mLocationUsageLogger> = $r17;

        $r18 = new com.android.server.location.LocationManagerService$PassiveLocationProviderManager;

        specialinvoke $r18.<com.android.server.location.LocationManagerService$PassiveLocationProviderManager: void <init>(com.android.server.location.LocationManagerService,com.android.server.location.LocationManagerService$1)>(r0, null);

        r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$PassiveLocationProviderManager mPassiveManager> = $r18;

        $r19 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        virtualinvoke $r19.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r18);

        $r22 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$PassiveLocationProviderManager mPassiveManager>;

        $r20 = new com.android.server.location.PassiveProvider;

        $r21 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        specialinvoke $r20.<com.android.server.location.PassiveProvider: void <init>(android.content.Context)>($r21);

        virtualinvoke $r22.<com.android.server.location.LocationManagerService$PassiveLocationProviderManager: void setRealProvider(com.android.server.location.AbstractLocationProvider)>($r20);

        $r23 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/pm/permission/PermissionManagerServiceInternal;");

        r29 = (com.android.server.pm.permission.PermissionManagerServiceInternal) $r23;

        $r24 = new com.android.server.location._$$Lambda$LocationManagerService$nzVFoCdmIONeiXrvXa4GDW2BD7s;

        specialinvoke $r24.<com.android.server.location._$$Lambda$LocationManagerService$nzVFoCdmIONeiXrvXa4GDW2BD7s: void <init>(com.android.server.location.LocationManagerService)>(r0);

        virtualinvoke r29.<com.android.server.pm.permission.PermissionManagerServiceInternal: void setLocationPackagesProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider)>($r24);

        $r25 = new com.android.server.location._$$Lambda$LocationManagerService$6OCuateQj_yVMsW_SFSfx_8hszQ;

        specialinvoke $r25.<com.android.server.location._$$Lambda$LocationManagerService$6OCuateQj_yVMsW_SFSfx_8hszQ: void <init>(com.android.server.location.LocationManagerService)>(r0);

        virtualinvoke r29.<com.android.server.pm.permission.PermissionManagerServiceInternal: void setLocationExtraPackagesProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider)>($r25);

        return;
    }

    void <init>(android.content.Context, com.android.server.location.UserInfoHelper, com.android.server.location.LocationManagerService$1)
    {
        com.android.server.location.LocationManagerService r0;
        android.content.Context r1;
        com.android.server.location.UserInfoHelper r2;
        com.android.server.location.LocationManagerService$1 r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.location.UserInfoHelper;

        r3 := @parameter2: com.android.server.location.LocationManagerService$1;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void <init>(android.content.Context,com.android.server.location.UserInfoHelper)>(r1, r2);

        return;
    }

    static android.content.Context access$100(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        return $r1;
    }

    static com.android.server.location.SettingsHelper access$1300(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.SettingsHelper $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        return $r1;
    }

    static com.android.server.location.UserInfoHelper access$1400(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.UserInfoHelper $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper mUserInfoHelper>;

        return $r1;
    }

    static void access$1500(com.android.server.location.LocationManagerService, com.android.server.location.LocationManagerService$LocationProviderManager, android.location.Location, android.location.Location)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.LocationManagerService$LocationProviderManager r1;
        android.location.Location r2, r3;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        r1 := @parameter1: com.android.server.location.LocationManagerService$LocationProviderManager;

        r2 := @parameter2: android.location.Location;

        r3 := @parameter3: android.location.Location;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void handleLocationChangedLocked(com.android.server.location.LocationManagerService$LocationProviderManager,android.location.Location,android.location.Location)>(r1, r2, r3);

        return;
    }

    static com.android.server.location.gnss.GnssManagerService access$1600(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.gnss.GnssManagerService $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        return $r1;
    }

    static void access$1700(com.android.server.location.LocationManagerService, com.android.server.location.LocationManagerService$LocationProviderManager, boolean)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.LocationManagerService$LocationProviderManager r1;
        boolean z0;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        r1 := @parameter1: com.android.server.location.LocationManagerService$LocationProviderManager;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void updateProviderEnabledLocked(com.android.server.location.LocationManagerService$LocationProviderManager,boolean)>(r1, z0);

        return;
    }

    static android.os.PowerManager access$1800(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;
        android.os.PowerManager $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: android.os.PowerManager mPowerManager>;

        return $r1;
    }

    static com.android.server.location.LocationManagerService$LocationProviderManager access$1900(com.android.server.location.LocationManagerService, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1;
        com.android.server.location.LocationManagerService$LocationProviderManager $r2;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>(r1);

        return $r2;
    }

    static void access$200(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void onSystemReady()>();

        return;
    }

    static boolean access$2000(com.android.server.location.LocationManagerService, com.android.server.location.LocationManagerService$UpdateRecord)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.LocationManagerService$UpdateRecord r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        r1 := @parameter1: com.android.server.location.LocationManagerService$UpdateRecord;

        $z0 = specialinvoke r0.<com.android.server.location.LocationManagerService: boolean isSettingsExempt(com.android.server.location.LocationManagerService$UpdateRecord)>(r1);

        return $z0;
    }

    static com.android.server.location.AppOpsHelper access$2100(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.AppOpsHelper $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        return $r1;
    }

    static android.os.Handler access$2200(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$2300(com.android.server.location.LocationManagerService, com.android.server.location.LocationManagerService$Receiver)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.LocationManagerService$Receiver r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        r1 := @parameter1: com.android.server.location.LocationManagerService$Receiver;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void removeUpdatesLocked(com.android.server.location.LocationManagerService$Receiver)>(r1);

        return;
    }

    static com.android.server.location.AppForegroundHelper access$2700(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.AppForegroundHelper $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper>;

        return $r1;
    }

    static java.util.HashMap access$2800(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mRecordsByProvider>;

        return $r1;
    }

    static com.android.server.location.LocationRequestStatistics access$2900(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.LocationRequestStatistics $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationRequestStatistics mRequestStatistics>;

        return $r1;
    }

    static void access$300(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void onSystemThirdPartyAppsCanStart()>();

        return;
    }

    static com.android.server.location.LocationUsageLogger access$3000(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.LocationUsageLogger $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationUsageLogger mLocationUsageLogger>;

        return $r1;
    }

    static java.util.concurrent.CopyOnWriteArrayList access$3700(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        return $r1;
    }

    static java.lang.Object access$600(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static void access$700(com.android.server.location.LocationManagerService, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void onPackageDisappeared(java.lang.String)>(r1);

        return;
    }

    static void access$800(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void onScreenStateChanged()>();

        return;
    }

    private void applyRequirementsLocked(com.android.server.location.LocationManagerService$LocationProviderManager)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.LocationManagerService$LocationProviderManager r1;
        java.util.ArrayList r2, $r12;
        long l0, l1, $l4, $l6, $l7, $l8, $l11, $l15, $l17, l21, l22, l23;
        com.android.server.location.LocationManagerService$UpdateRecord r5, r51;
        java.util.HashMap $r6;
        java.lang.String $r7, $r27;
        java.lang.Object $r8, $r15, $r33;
        com.android.internal.location.ProviderRequest$Builder $r9;
        java.util.concurrent.CopyOnWriteArrayList $r10;
        boolean $z0, $z1, $z2, $z3, $z5, $z7, $z8, $z9, $z10, $z12, $z13, $z14, $z15, z17, z18, $z19, z20, $z21, $z22, $z23;
        com.android.server.location.SettingsHelper $r11;
        int $i2, $i3, $i9, $i10, $i13, $i14, i19, $i20;
        byte $b5, $b12, $b16, $b18;
        com.android.server.location.UserInfoHelper $r16, $r35;
        com.android.server.location.LocationManagerService$Receiver $r17, $r20, $r23, $r25, $r28, $r31, $r34, $r41;
        com.android.server.location.CallerIdentity $r18, $r24, $r26, $r42, r47;
        java.util.List $r19;
        android.os.WorkSource $r21, $r22, $r29, $r30, $r32;
        com.android.server.location.AppOpsHelper $r36;
        android.location.LocationRequest $r43, r48, r49, r52;
        android.os.PowerManager $r45;
        java.util.Iterator r46, r50;
        com.android.internal.location.ProviderRequest $r53;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: com.android.server.location.LocationManagerService$LocationProviderManager;

        $r6 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mRecordsByProvider>;

        $r7 = virtualinvoke r1.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r2 = (java.util.ArrayList) $r8;

        $r9 = new com.android.internal.location.ProviderRequest$Builder;

        specialinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: void <init>()>();

        $r10 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        $z0 = virtualinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label24;

        if r2 == null goto label24;

        $z1 = virtualinvoke r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label24;

        $r11 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        l0 = virtualinvoke $r11.<com.android.server.location.SettingsHelper: long getBackgroundThrottleIntervalMs()>();

        $r12 = new java.util.ArrayList;

        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i2);

        i19 = r0.<com.android.server.location.LocationManagerService: int mBatterySaverMode>;

        if i19 != 3 goto label01;

        z17 = 1;

        goto label02;

     label01:
        z17 = 0;

     label02:
        $i3 = r0.<com.android.server.location.LocationManagerService: int mBatterySaverMode>;

        if $i3 != 4 goto label03;

        $r45 = r0.<com.android.server.location.LocationManagerService: android.os.PowerManager mPowerManager>;

        $z15 = virtualinvoke $r45.<android.os.PowerManager: boolean isInteractive()>();

        if $z15 != 0 goto label03;

        z18 = 1;

        goto label04;

     label03:
        z18 = 0;

     label04:
        virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: com.android.internal.location.ProviderRequest$Builder setLowPowerMode(boolean)>(1);

        r46 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z19 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z19 == 0 goto label19;

        $r33 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.location.LocationManagerService$UpdateRecord) $r33;

        $r34 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r5);

        r47 = $r34.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r35 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper mUserInfoHelper>;

        $i14 = r47.<com.android.server.location.CallerIdentity: int userId>;

        $z7 = virtualinvoke $r35.<com.android.server.location.UserInfoHelper: boolean isCurrentUserId(int)>($i14);

        if $z7 != 0 goto label06;

        goto label05;

     label06:
        $r36 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        $z8 = virtualinvoke $r36.<com.android.server.location.AppOpsHelper: boolean checkLocationAccess(com.android.server.location.CallerIdentity)>(r47);

        if $z8 != 0 goto label07;

        goto label05;

     label07:
        if z18 != 0 goto label09;

        if z17 == 0 goto label08;

        $z14 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: boolean access$1000(com.android.server.location.LocationManagerService$UpdateRecord)>(r5);

        if $z14 != 0 goto label08;

        goto label09;

     label08:
        z20 = 0;

        goto label10;

     label09:
        z20 = 1;

     label10:
        $i20 = r47.<com.android.server.location.CallerIdentity: int userId>;

        $z21 = virtualinvoke r1.<com.android.server.location.LocationManagerService$LocationProviderManager: boolean isEnabled(int)>($i20);

        if $z21 == 0 goto label11;

        if z20 == 0 goto label12;

     label11:
        $z9 = specialinvoke r0.<com.android.server.location.LocationManagerService: boolean isSettingsExempt(com.android.server.location.LocationManagerService$UpdateRecord)>(r5);

        if $z9 == 0 goto label18;

        virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: com.android.internal.location.ProviderRequest$Builder setLocationSettingsIgnored(boolean)>(1);

        virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: com.android.internal.location.ProviderRequest$Builder setLowPowerMode(boolean)>(0);

     label12:
        r48 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest access$2600(com.android.server.location.LocationManagerService$UpdateRecord)>(r5);

        l1 = virtualinvoke r48.<android.location.LocationRequest: long getInterval()>();

        $z10 = virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: boolean isLocationSettingsIgnored()>();

        if $z10 != 0 goto label14;

        l21 = l1;

        r49 = r48;

        $r41 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r5);

        $r42 = $r41.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $z12 = specialinvoke r0.<com.android.server.location.LocationManagerService: boolean isThrottlingExempt(com.android.server.location.CallerIdentity)>($r42);

        if $z12 != 0 goto label15;

        l22 = l1;

        $z13 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: boolean access$1000(com.android.server.location.LocationManagerService$UpdateRecord)>(r5);

        if $z13 != 0 goto label13;

        l22 = staticinvoke <java.lang.Math: long max(long,long)>(l1, l0);

     label13:
        l21 = l22;

        r49 = r48;

        $l17 = virtualinvoke r48.<android.location.LocationRequest: long getInterval()>();

        $b18 = l22 cmp $l17;

        if $b18 == 0 goto label15;

        $r43 = new android.location.LocationRequest;

        specialinvoke $r43.<android.location.LocationRequest: void <init>(android.location.LocationRequest)>(r48);

        r49 = $r43;

        virtualinvoke $r43.<android.location.LocationRequest: android.location.LocationRequest setInterval(long)>(l22);

        l21 = l22;

        goto label15;

     label14:
        r49 = r48;

        l21 = l1;

     label15:
        r5.<com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest mRequest> = r49;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r49);

        $z22 = virtualinvoke r49.<android.location.LocationRequest: boolean isLowPowerMode()>();

        if $z22 != 0 goto label16;

        virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: com.android.internal.location.ProviderRequest$Builder setLowPowerMode(boolean)>(0);

        goto label16;

     label16:
        $l15 = virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: long getInterval()>();

        $b16 = l21 cmp $l15;

        if $b16 >= 0 goto label17;

        virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: com.android.internal.location.ProviderRequest$Builder setInterval(long)>(l21);

     label17:
        goto label05;

     label18:
        goto label05;

     label19:
        virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: com.android.internal.location.ProviderRequest$Builder setLocationRequests(java.util.List)>($r12);

        $l4 = virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: long getInterval()>();

        $b5 = $l4 cmp 9223372036854775807L;

        if $b5 >= 0 goto label24;

        $l6 = virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: long getInterval()>();

        $l7 = $l6 + 1000L;

        $l8 = $l7 * 3L;

        l23 = $l8 / 2L;

        r50 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label20:
        $z23 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z23 == 0 goto label24;

        $r15 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        r51 = (com.android.server.location.LocationManagerService$UpdateRecord) $r15;

        $r16 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper mUserInfoHelper>;

        $r17 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r51);

        $r18 = $r17.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $i9 = $r18.<com.android.server.location.CallerIdentity: int uid>;

        $i10 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i9);

        $z2 = virtualinvoke $r16.<com.android.server.location.UserInfoHelper: boolean isCurrentUserId(int)>($i10);

        if $z2 == 0 goto label23;

        r52 = r51.<com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest mRequest>;

        $r19 = virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: java.util.List getLocationRequests()>();

        $z3 = interfaceinvoke $r19.<java.util.List: boolean contains(java.lang.Object)>(r52);

        if $z3 != 0 goto label21;

        goto label20;

     label21:
        $l11 = virtualinvoke r52.<android.location.LocationRequest: long getInterval()>();

        $b12 = $l11 cmp l23;

        if $b12 > 0 goto label23;

        $r20 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r51);

        $r21 = $r20.<com.android.server.location.LocationManagerService$Receiver: android.os.WorkSource mWorkSource>;

        if $r21 == null goto label22;

        $r28 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r51);

        $r29 = $r28.<com.android.server.location.LocationManagerService$Receiver: android.os.WorkSource mWorkSource>;

        $z5 = staticinvoke <com.android.server.location.LocationManagerService: boolean isValidWorkSource(android.os.WorkSource)>($r29);

        if $z5 == 0 goto label22;

        $r30 = virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: android.os.WorkSource getWorkSource()>();

        $r31 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r51);

        $r32 = $r31.<com.android.server.location.LocationManagerService$Receiver: android.os.WorkSource mWorkSource>;

        virtualinvoke $r30.<android.os.WorkSource: boolean add(android.os.WorkSource)>($r32);

        goto label23;

     label22:
        $r22 = virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: android.os.WorkSource getWorkSource()>();

        $r23 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r51);

        $r24 = $r23.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $i13 = $r24.<com.android.server.location.CallerIdentity: int uid>;

        $r25 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r51);

        $r26 = $r25.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r27 = $r26.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        virtualinvoke $r22.<android.os.WorkSource: boolean add(int,java.lang.String)>($i13, $r27);

     label23:
        goto label20;

     label24:
        $r53 = virtualinvoke $r9.<com.android.internal.location.ProviderRequest$Builder: com.android.internal.location.ProviderRequest build()>();

        virtualinvoke r1.<com.android.server.location.LocationManagerService$LocationProviderManager: void setRequest(com.android.internal.location.ProviderRequest)>($r53);

        return;
    }

    private void applyRequirementsLocked(java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1;
        com.android.server.location.LocationManagerService$LocationProviderManager r2;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>(r1);

        if r2 == null goto label1;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void applyRequirementsLocked(com.android.server.location.LocationManagerService$LocationProviderManager)>(r2);

     label1:
        return;
    }

    private android.location.LocationRequest createSanitizedRequest(android.location.LocationRequest, com.android.server.location.CallerIdentity, boolean)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.LocationRequest r1, $r4;
        com.android.server.location.CallerIdentity r2;
        boolean z0;
        int i0, $i1;
        long $l2, $l3, $l5, $l7, $l8;
        byte $b4, $b6, $b9;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.location.LocationRequest;

        r2 := @parameter1: com.android.server.location.CallerIdentity;

        z0 := @parameter2: boolean;

        $r4 = new android.location.LocationRequest;

        specialinvoke $r4.<android.location.LocationRequest: void <init>(android.location.LocationRequest)>(r1);

        if z0 != 0 goto label1;

        virtualinvoke $r4.<android.location.LocationRequest: android.location.LocationRequest setLowPowerMode(boolean)>(0);

     label1:
        $i1 = r2.<com.android.server.location.CallerIdentity: int permissionLevel>;

        if $i1 >= 2 goto label6;

        i0 = virtualinvoke $r4.<android.location.LocationRequest: int getQuality()>();

        if i0 == 100 goto label3;

        if i0 == 203 goto label2;

        goto label4;

     label2:
        virtualinvoke $r4.<android.location.LocationRequest: android.location.LocationRequest setQuality(int)>(201);

        goto label4;

     label3:
        virtualinvoke $r4.<android.location.LocationRequest: android.location.LocationRequest setQuality(int)>(102);

     label4:
        $l5 = virtualinvoke $r4.<android.location.LocationRequest: long getInterval()>();

        $b6 = $l5 cmp 600000L;

        if $b6 >= 0 goto label5;

        virtualinvoke $r4.<android.location.LocationRequest: android.location.LocationRequest setInterval(long)>(600000L);

     label5:
        $l3 = virtualinvoke $r4.<android.location.LocationRequest: long getFastestInterval()>();

        $b4 = $l3 cmp 600000L;

        if $b4 >= 0 goto label6;

        virtualinvoke $r4.<android.location.LocationRequest: android.location.LocationRequest setFastestInterval(long)>(600000L);

     label6:
        $l7 = virtualinvoke $r4.<android.location.LocationRequest: long getFastestInterval()>();

        $l8 = virtualinvoke $r4.<android.location.LocationRequest: long getInterval()>();

        $b9 = $l7 cmp $l8;

        if $b9 <= 0 goto label7;

        $l2 = virtualinvoke r1.<android.location.LocationRequest: long getInterval()>();

        virtualinvoke $r4.<android.location.LocationRequest: android.location.LocationRequest setFastestInterval(long)>($l2);

     label7:
        return $r4;
    }

    private com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        com.android.server.location.LocationManagerService$LocationProviderManager r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r5;

        $r6 = virtualinvoke r3.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String getName()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    private com.android.server.location.LocationManagerService$Receiver getReceiverLocked(android.app.PendingIntent, com.android.server.location.CallerIdentity, android.os.WorkSource, boolean)
    {
        com.android.server.location.LocationManagerService r0;
        android.app.PendingIntent r1;
        com.android.server.location.CallerIdentity r2;
        android.os.WorkSource r3;
        boolean z0;
        com.android.server.location.LocationManagerService$Receiver r4, $r7, r10;
        java.util.HashMap $r5, $r8;
        java.lang.Object $r6;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.app.PendingIntent;

        r2 := @parameter1: com.android.server.location.CallerIdentity;

        r3 := @parameter2: android.os.WorkSource;

        z0 := @parameter3: boolean;

        $r5 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mReceivers>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.server.location.LocationManagerService$Receiver) $r6;

        r10 = r4;

        if r4 != null goto label1;

        r10 = r4;

        if r2 == null goto label1;

        $r7 = new com.android.server.location.LocationManagerService$Receiver;

        specialinvoke $r7.<com.android.server.location.LocationManagerService$Receiver: void <init>(com.android.server.location.LocationManagerService,android.location.ILocationListener,android.app.PendingIntent,com.android.server.location.CallerIdentity,android.os.WorkSource,boolean,com.android.server.location.LocationManagerService$1)>(r0, null, r1, r2, r3, z0, null);

        r10 = $r7;

        $r8 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mReceivers>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

     label1:
        return r10;
    }

    private com.android.server.location.LocationManagerService$Receiver getReceiverLocked(android.location.ILocationListener, com.android.server.location.CallerIdentity, android.os.WorkSource, boolean)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.ILocationListener r1, $r9;
        com.android.server.location.CallerIdentity r2;
        android.os.WorkSource r3;
        boolean z0, $z1;
        android.os.IBinder r4, $r10;
        com.android.server.location.LocationManagerService$Receiver r5, $r8, r13;
        java.util.HashMap $r6, $r11;
        java.lang.Object $r7;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.location.ILocationListener;

        r2 := @parameter1: com.android.server.location.CallerIdentity;

        r3 := @parameter2: android.os.WorkSource;

        z0 := @parameter3: boolean;

        r4 = interfaceinvoke r1.<android.location.ILocationListener: android.os.IBinder asBinder()>();

        $r6 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mReceivers>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.location.LocationManagerService$Receiver) $r7;

        r13 = r5;

        if r5 != null goto label2;

        r13 = r5;

        if r2 == null goto label2;

        $r8 = new com.android.server.location.LocationManagerService$Receiver;

        specialinvoke $r8.<com.android.server.location.LocationManagerService$Receiver: void <init>(com.android.server.location.LocationManagerService,android.location.ILocationListener,android.app.PendingIntent,com.android.server.location.CallerIdentity,android.os.WorkSource,boolean,com.android.server.location.LocationManagerService$1)>(r0, r1, null, r2, r3, z0, null);

        r13 = $r8;

        $r9 = virtualinvoke $r8.<com.android.server.location.LocationManagerService$Receiver: android.location.ILocationListener getListener()>();

        $r10 = interfaceinvoke $r9.<android.location.ILocationListener: android.os.IBinder asBinder()>();

        $z1 = virtualinvoke $r8.<com.android.server.location.LocationManagerService$Receiver: boolean linkToListenerDeathNotificationLocked(android.os.IBinder)>($r10);

        if $z1 != 0 goto label1;

        return null;

     label1:
        $r11 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mReceivers>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r8);

     label2:
        return r13;
    }

    private void handleLocationChangedLocked(com.android.server.location.LocationManagerService$LocationProviderManager, android.location.Location, android.location.Location)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.LocationManagerService$LocationProviderManager r1;
        android.location.Location r2, $r17, r32, r40;
        long l0, $l6;
        java.util.Iterator r3, r45, r46;
        com.android.server.location.LocationManagerService$Receiver r4, $r12, $r18;
        int i1, $i2, $i3, $i4, $i5, $i9;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z11, $z12, $z13, $z14, $z15, z16;
        java.util.HashMap $r6;
        java.lang.String $r7, $r15, $r26, $r29, $r31;
        java.lang.Object $r8, $r9, $r11, $r13;
        com.android.server.location.LocationManagerService$UpdateRecord $r10, r38;
        com.android.server.location.UserInfoHelper $r14;
        com.android.server.location.SettingsHelper $r16;
        java.util.ArrayList $r19, $r20, r35, r36, r37, r42, r43, r44;
        byte $b7;
        com.android.server.location.CallerIdentity $r22, r39;
        com.android.server.location.AppOpsHelper $r23;
        android.location.LocationRequest $r24, $r41;
        java.lang.AssertionError $r25;
        java.lang.StringBuilder $r27;
        com.android.server.location.LocationManagerService$PassiveLocationProviderManager r34;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: com.android.server.location.LocationManagerService$LocationProviderManager;

        r32 := @parameter1: android.location.Location;

        r2 := @parameter2: android.location.Location;

        $r5 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        $z1 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label01;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("received location from unknown provider: ");

        $r29 = virtualinvoke r1.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String getName()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LocationManagerService", $r31);

        return;

     label01:
        r34 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$PassiveLocationProviderManager mPassiveManager>;

        if r1 == r34 goto label02;

        virtualinvoke r34.<com.android.server.location.LocationManagerService$PassiveLocationProviderManager: void updateLocation(android.location.Location)>(r32);

        goto label02;

     label02:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r6 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mRecordsByProvider>;

        $r7 = virtualinvoke r1.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r35 = (java.util.ArrayList) $r8;

        if r35 == null goto label25;

        $i2 = virtualinvoke r35.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label03;

        goto label25;

     label03:
        r36 = null;

        r37 = null;

        r3 = virtualinvoke r35.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z15 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label19;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r38 = (com.android.server.location.LocationManagerService$UpdateRecord) $r13;

        r4 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r38);

        r39 = r4.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        z16 = 0;

        $i3 = r39.<com.android.server.location.CallerIdentity: int userId>;

        $z4 = virtualinvoke r1.<com.android.server.location.LocationManagerService$LocationProviderManager: boolean isEnabled(int)>($i3);

        if $z4 != 0 goto label05;

        $z14 = specialinvoke r0.<com.android.server.location.LocationManagerService: boolean isSettingsExempt(com.android.server.location.LocationManagerService$UpdateRecord)>(r38);

        if $z14 != 0 goto label05;

        goto label04;

     label05:
        $r14 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper mUserInfoHelper>;

        $i4 = r39.<com.android.server.location.CallerIdentity: int userId>;

        $z5 = virtualinvoke $r14.<com.android.server.location.UserInfoHelper: boolean isCurrentUserId(int)>($i4);

        if $z5 != 0 goto label06;

        $r26 = r39.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $z13 = virtualinvoke r0.<com.android.server.location.LocationManagerService: boolean isProviderPackage(java.lang.String)>($r26);

        if $z13 != 0 goto label06;

        goto label04;

     label06:
        $r16 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        $i5 = r39.<com.android.server.location.CallerIdentity: int userId>;

        $r15 = r39.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $z6 = virtualinvoke $r16.<com.android.server.location.SettingsHelper: boolean isLocationPackageBlacklisted(int,java.lang.String)>($i5, $r15);

        if $z6 == 0 goto label07;

        goto label04;

     label07:
        i1 = r39.<com.android.server.location.CallerIdentity: int permissionLevel>;

        if i1 == 1 goto label09;

        if i1 != 2 goto label08;

        r40 = r32;

        goto label10;

     label08:
        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label09:
        r40 = r2;

     label10:
        $r17 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: android.location.Location access$3600(com.android.server.location.LocationManagerService$UpdateRecord)>(r38);

        $z7 = staticinvoke <com.android.server.location.LocationManagerService: boolean shouldBroadcastSafeLocked(android.location.Location,android.location.Location,com.android.server.location.LocationManagerService$UpdateRecord,long)>(r40, $r17, r38, l0);

        if $z7 == 0 goto label13;

        staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: android.location.Location access$3602(com.android.server.location.LocationManagerService$UpdateRecord,android.location.Location)>(r38, r40);

        $r23 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        $r22 = r4.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $z11 = virtualinvoke $r23.<com.android.server.location.AppOpsHelper: boolean noteLocationAccess(com.android.server.location.CallerIdentity)>($r22);

        if $z11 != 0 goto label11;

        goto label04;

     label11:
        z16 = 0;

        $z12 = virtualinvoke r4.<com.android.server.location.LocationManagerService$Receiver: boolean callLocationChangedLocked(android.location.Location)>(r40);

        if $z12 != 0 goto label12;

        z16 = 1;

     label12:
        $r24 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest access$2600(com.android.server.location.LocationManagerService$UpdateRecord)>(r38);

        virtualinvoke $r24.<android.location.LocationRequest: void decrementNumUpdates()>();

     label13:
        $r41 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest access$2600(com.android.server.location.LocationManagerService$UpdateRecord)>(r38);

        $i9 = virtualinvoke $r41.<android.location.LocationRequest: int getNumUpdates()>();

        if $i9 <= 0 goto label14;

        r42 = r37;

        $l6 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: long access$3500(com.android.server.location.LocationManagerService$UpdateRecord)>(r38);

        $b7 = $l6 cmp l0;

        if $b7 >= 0 goto label16;

     label14:
        $r18 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r38);

        virtualinvoke $r18.<com.android.server.location.LocationManagerService$Receiver: void callRemovedLocked()>();

        r42 = r37;

        if r37 != null goto label15;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r42 = $r20;

     label15:
        virtualinvoke r42.<java.util.ArrayList: boolean add(java.lang.Object)>(r38);

     label16:
        r43 = r36;

        if z16 == 0 goto label18;

        r44 = r36;

        if r36 != null goto label17;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r44 = $r19;

     label17:
        r43 = r44;

        $z9 = virtualinvoke r44.<java.util.ArrayList: boolean contains(java.lang.Object)>(r4);

        if $z9 != 0 goto label18;

        virtualinvoke r44.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        r43 = r44;

     label18:
        r36 = r43;

        r37 = r42;

        goto label04;

     label19:
        if r36 == null goto label21;

        r45 = virtualinvoke r36.<java.util.ArrayList: java.util.Iterator iterator()>();

     label20:
        $z3 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label21;

        $r11 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (com.android.server.location.LocationManagerService$Receiver) $r11;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void removeUpdatesLocked(com.android.server.location.LocationManagerService$Receiver)>($r12);

        goto label20;

     label21:
        if r37 == null goto label24;

        r46 = virtualinvoke r37.<java.util.ArrayList: java.util.Iterator iterator()>();

     label22:
        $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label23;

        $r9 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.android.server.location.LocationManagerService$UpdateRecord) $r9;

        staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: void access$3300(com.android.server.location.LocationManagerService$UpdateRecord,boolean)>($r10, 1);

        goto label22;

     label23:
        specialinvoke r0.<com.android.server.location.LocationManagerService: void applyRequirementsLocked(com.android.server.location.LocationManagerService$LocationProviderManager)>(r1);

     label24:
        return;

     label25:
        return;
    }

    private void initializeGnss()
    {
        com.android.server.location.LocationManagerService r0;
        boolean $z0;
        com.android.server.location.gnss.GnssManagerService $r1, $r7, $r10, $r12;
        com.android.server.location.LocationUsageLogger $r2;
        com.android.server.location.AppForegroundHelper $r3;
        com.android.server.location.SettingsHelper $r4;
        com.android.server.location.AppOpsHelper $r5;
        android.content.Context $r6, $r13;
        com.android.server.location.LocationManagerService$LocationProviderManager $r8;
        java.util.concurrent.CopyOnWriteArrayList $r9;
        com.android.server.location.gnss.GnssLocationProvider $r11;
        com.android.server.location.GeofenceProxy $r14;
        java.lang.Throwable $r15;
        java.lang.Object r17;
        android.location.IGpsGeofenceHardware r18;

        r0 := @this: com.android.server.location.LocationManagerService;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssManagerService: boolean isGnssSupported()>();

        if $z0 == 0 goto label6;

        $r1 = new com.android.server.location.gnss.GnssManagerService;

        $r6 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $r5 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        $r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper>;

        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationUsageLogger mLocationUsageLogger>;

        specialinvoke $r1.<com.android.server.location.gnss.GnssManagerService: void <init>(android.content.Context,com.android.server.location.AppOpsHelper,com.android.server.location.SettingsHelper,com.android.server.location.AppForegroundHelper,com.android.server.location.LocationUsageLogger)>($r6, $r5, $r4, $r3, $r2);

        r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService> = $r1;

        $r7 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        virtualinvoke $r7.<com.android.server.location.gnss.GnssManagerService: void onSystemReady()>();

        $r8 = new com.android.server.location.LocationManagerService$LocationProviderManager;

        specialinvoke $r8.<com.android.server.location.LocationManagerService$LocationProviderManager: void <init>(com.android.server.location.LocationManagerService,java.lang.String,com.android.server.location.LocationManagerService$1)>(r0, "gps", null);

        r17 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r17;

     label1:
        $r9 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        virtualinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r8);

        exitmonitor r17;

     label2:
        $r10 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        $r11 = virtualinvoke $r10.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider getGnssLocationProvider()>();

        virtualinvoke $r8.<com.android.server.location.LocationManagerService$LocationProviderManager: void setRealProvider(com.android.server.location.AbstractLocationProvider)>($r11);

        $r12 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        r18 = virtualinvoke $r12.<com.android.server.location.gnss.GnssManagerService: android.location.IGpsGeofenceHardware getGpsGeofenceProxy()>();

        if r18 == null goto label6;

        $r13 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $r14 = staticinvoke <com.android.server.location.GeofenceProxy: com.android.server.location.GeofenceProxy createAndBind(android.content.Context,android.location.IGpsGeofenceHardware)>($r13, r18);

        if $r14 != null goto label6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LocationManagerService", "unable to bind to GeofenceProxy");

        goto label6;

     label3:
        $r15 := @caughtexception;

     label4:
        exitmonitor r17;

     label5:
        throw $r15;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void initializeProvidersLocked()
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String[] r1, r39;
        int i0, $i3, $i4, i7;
        java.lang.String r2, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        android.content.Context $r4, $r5, $r9, $r10, $r11, $r13;
        android.content.pm.PackageManager $r6;
        android.content.Intent $r7;
        java.util.List $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.android.server.location.HardwareActivityRecognitionProxy $r12;
        android.content.res.Resources $r14;
        com.android.internal.location.ProviderProperties $r17;
        com.android.server.location.MockProvider $r27;
        com.android.server.location.LocationManagerService$LocationProviderManager $r28, $r30, $r32, r40, r41;
        java.util.concurrent.CopyOnWriteArrayList $r29, $r31, $r33;
        com.android.server.location.LocationProviderProxy r34, r36;
        com.android.server.location.GeocoderProxy r38;

        r0 := @this: com.android.server.location.LocationManagerService;

        $r4 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        r34 = staticinvoke <com.android.server.location.LocationProviderProxy: com.android.server.location.LocationProviderProxy createAndRegister(android.content.Context,java.lang.String,int,int)>($r4, "com.android.location.service.v3.NetworkLocationProvider", 17891447, 17039921);

        if r34 == null goto label1;

        $r32 = new com.android.server.location.LocationManagerService$LocationProviderManager;

        specialinvoke $r32.<com.android.server.location.LocationManagerService$LocationProviderManager: void <init>(com.android.server.location.LocationManagerService,java.lang.String,com.android.server.location.LocationManagerService$1)>(r0, "network", null);

        $r33 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        virtualinvoke $r33.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r32);

        virtualinvoke $r32.<com.android.server.location.LocationManagerService$LocationProviderManager: void setRealProvider(com.android.server.location.AbstractLocationProvider)>(r34);

        goto label2;

     label1:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LocationManagerService", "no network location provider found");

     label2:
        $r5 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("com.android.location.service.FusedLocationProvider");

        $r8 = virtualinvoke $r6.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r7, 1572864, 0);

        $z0 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        $z1 = $z0 ^ 1;

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "Unable to find a direct boot aware fused location provider");

        $r9 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        r36 = staticinvoke <com.android.server.location.LocationProviderProxy: com.android.server.location.LocationProviderProxy createAndRegister(android.content.Context,java.lang.String,int,int)>($r9, "com.android.location.service.FusedLocationProvider", 17891440, 17039897);

        if r36 == null goto label3;

        $r30 = new com.android.server.location.LocationManagerService$LocationProviderManager;

        specialinvoke $r30.<com.android.server.location.LocationManagerService$LocationProviderManager: void <init>(com.android.server.location.LocationManagerService,java.lang.String,com.android.server.location.LocationManagerService$1)>(r0, "fused", null);

        $r31 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        virtualinvoke $r31.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r30);

        virtualinvoke $r30.<com.android.server.location.LocationManagerService$LocationProviderManager: void setRealProvider(com.android.server.location.AbstractLocationProvider)>(r36);

        goto label4;

     label3:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LocationManagerService", "no fused location provider found");

     label4:
        $r10 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        r38 = staticinvoke <com.android.server.location.GeocoderProxy: com.android.server.location.GeocoderProxy createAndRegister(android.content.Context)>($r10);

        r0.<com.android.server.location.LocationManagerService: com.android.server.location.GeocoderProxy mGeocodeProvider> = r38;

        if r38 != null goto label5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LocationManagerService", "no geocoder provider found");

     label5:
        $r11 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $r12 = staticinvoke <com.android.server.location.HardwareActivityRecognitionProxy: com.android.server.location.HardwareActivityRecognitionProxy createAndRegister(android.content.Context)>($r11);

        if $r12 != null goto label6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LocationManagerService", "unable to bind ActivityRecognitionProxy");

     label6:
        $r13 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236083);

        i0 = lengthof r1;

        i7 = 0;

     label7:
        if i7 >= i0 goto label9;

        $r15 = r1[i7];

        r39 = virtualinvoke $r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r16 = r39[0];

        r2 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

        $r17 = new com.android.internal.location.ProviderProperties;

        $r18 = r39[1];

        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r18);

        $r19 = r39[2];

        $z3 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r19);

        $r20 = r39[3];

        $z4 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r20);

        $r21 = r39[4];

        $z5 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r21);

        $r22 = r39[5];

        $z6 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r22);

        $r23 = r39[6];

        $z7 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r23);

        $r24 = r39[7];

        $z8 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r24);

        $r25 = r39[8];

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25);

        $r26 = r39[9];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        specialinvoke $r17.<com.android.internal.location.ProviderProperties: void <init>(boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>($z2, $z3, $z4, $z5, $z6, $z7, $z8, $i3, $i4);

        r40 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>(r2);

        r41 = r40;

        if r40 != null goto label8;

        $r28 = new com.android.server.location.LocationManagerService$LocationProviderManager;

        specialinvoke $r28.<com.android.server.location.LocationManagerService$LocationProviderManager: void <init>(com.android.server.location.LocationManagerService,java.lang.String,com.android.server.location.LocationManagerService$1)>(r0, r2, null);

        r41 = $r28;

        $r29 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        virtualinvoke $r29.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r28);

     label8:
        $r27 = new com.android.server.location.MockProvider;

        specialinvoke $r27.<com.android.server.location.MockProvider: void <init>(com.android.internal.location.ProviderProperties)>($r17);

        virtualinvoke r41.<com.android.server.location.LocationManagerService$LocationProviderManager: void setMockProvider(com.android.server.location.MockProvider)>($r27);

        i7 = i7 + 1;

        goto label7;

     label9:
        return;
    }

    private boolean isSettingsExempt(com.android.server.location.LocationManagerService$UpdateRecord)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.LocationManagerService$UpdateRecord r1;
        android.location.LocationRequest $r2;
        boolean $z0, $z1, $z2;
        com.android.server.location.SettingsHelper $r3;
        java.util.Set $r4;
        com.android.server.location.LocationManagerService$Receiver $r5, $r9;
        com.android.server.location.CallerIdentity $r6, $r10;
        java.lang.String $r7, $r11;
        com.android.server.location.LocationManagerService$LocalService $r8;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: com.android.server.location.LocationManagerService$UpdateRecord;

        $r2 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest access$2600(com.android.server.location.LocationManagerService$UpdateRecord)>(r1);

        $z0 = virtualinvoke $r2.<android.location.LocationRequest: boolean isLocationSettingsIgnored()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        $r4 = virtualinvoke $r3.<com.android.server.location.SettingsHelper: java.util.Set getIgnoreSettingsPackageWhitelist()>();

        $r5 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r1);

        $r6 = $r5.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r7 = $r6.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $z1 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r8 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocalService mLocalService>;

        $r9 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r1);

        $r10 = $r9.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r11 = $r10.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $z2 = virtualinvoke $r8.<com.android.server.location.LocationManagerService$LocalService: boolean isProviderPackage(java.lang.String)>($r11);

        return $z2;
    }

    private boolean isThrottlingExempt(com.android.server.location.CallerIdentity)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.CallerIdentity r1;
        int $i0;
        com.android.server.location.SettingsHelper $r2;
        java.util.Set $r3;
        java.lang.String $r4, $r5;
        boolean $z0, $z1;
        com.android.server.location.LocationManagerService$LocalService $r6;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: com.android.server.location.CallerIdentity;

        $i0 = r1.<com.android.server.location.CallerIdentity: int uid>;

        if $i0 != 1000 goto label1;

        return 1;

     label1:
        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        $r3 = virtualinvoke $r2.<com.android.server.location.SettingsHelper: java.util.Set getBackgroundThrottlePackageWhitelist()>();

        $r4 = r1.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r6 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocalService mLocalService>;

        $r5 = r1.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $z1 = virtualinvoke $r6.<com.android.server.location.LocationManagerService$LocalService: boolean isProviderPackage(java.lang.String)>($r5);

        return $z1;
    }

    private static boolean isValidWorkSource(android.os.WorkSource)
    {
        int i0;
        boolean $z1, z2, z3;
        java.lang.Object $r0;
        android.os.WorkSource$WorkChain $r1;
        java.lang.String $r2, $r3;
        android.os.WorkSource r4;
        java.util.List r5;

        r4 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r4.<android.os.WorkSource: int size()>();

        z2 = 1;

        if i0 <= 0 goto label3;

        $r3 = virtualinvoke r4.<android.os.WorkSource: java.lang.String getPackageName(int)>(0);

        if $r3 == null goto label1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;

     label3:
        r5 = virtualinvoke r4.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r5 == null goto label4;

        $z1 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        $r0 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0);

        $r1 = (android.os.WorkSource$WorkChain) $r0;

        $r2 = virtualinvoke $r1.<android.os.WorkSource$WorkChain: java.lang.String getAttributionTag()>();

        if $r2 == null goto label4;

        z3 = 1;

        goto label5;

     label4:
        z3 = 0;

     label5:
        return z3;
    }

    public static void lambda$Cw7xwIE70-6c85ztm6T7WScKZRA(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void onBackgroundThrottleIntervalChanged()>();

        return;
    }

    public static void lambda$Jsn9f_NWM0cs884cOI1fOaFZw8M(com.android.server.location.LocationManagerService, int)
    {
        com.android.server.location.LocationManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void onLocationModeChanged(int)>(i0);

        return;
    }

    public static void lambda$SdJCjgY1BwQ-VOtT2s6dcqDrOkA(com.android.server.location.LocationManagerService, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void onAppOpChanged(java.lang.String)>(r1);

        return;
    }

    public static void lambda$VbEiHJaYRYQKq-KAS1hQcxjIX3w(com.android.server.location.LocationManagerService, int, boolean)
    {
        com.android.server.location.LocationManagerService r0;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void onAppForegroundChanged(int,boolean)>(i0, z0);

        return;
    }

    public static void lambda$ZMNjuBZeNXZ1-aQV1f9Cim6fRag(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void onIgnoreSettingsWhitelistChanged()>();

        return;
    }

    public static void lambda$fqo6KrQPiessbxGobdg5DXwHuPc(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationManagerService r0;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void onBackgroundThrottleWhitelistChanged()>();

        return;
    }

    public static void lambda$r1HQs34pMDdwthhOWsKVe7pybhc(com.android.server.location.LocationManagerService, int, int)
    {
        com.android.server.location.LocationManagerService r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.location.LocationManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void onUserChanged(int,int)>(i0, i1);

        return;
    }

    private void onAppForegroundChanged(int, boolean)
    {
        com.android.server.location.LocationManagerService r0;
        int i0, $i1, $i2;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object r1, $r8, $r10, $r11, $r12, $r14;
        java.util.Iterator r2, r4, r23;
        java.lang.String r3, $r9;
        java.util.HashMap $r5, $r6;
        java.util.Set $r7;
        java.util.ArrayList $r13;
        com.android.server.location.LocationManagerService$Receiver $r15, $r17;
        com.android.server.location.CallerIdentity $r16, $r18;
        java.lang.Throwable $r19;
        java.util.HashSet r20;
        java.util.Map$Entry r21;
        com.android.server.location.LocationManagerService$UpdateRecord r22;

        r0 := @this: com.android.server.location.LocationManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r20 = new java.util.HashSet;

        $r5 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mRecordsByProvider>;

        $i1 = virtualinvoke $r5.<java.util.HashMap: int size()>();

        specialinvoke r20.<java.util.HashSet: void <init>(int)>($i1);

        $r6 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mRecordsByProvider>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        r3 = (java.lang.String) $r11;

        $r12 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.util.ArrayList) $r12;

        r4 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label05;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r22 = (com.android.server.location.LocationManagerService$UpdateRecord) $r14;

        $r15 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r22);

        $r16 = $r15.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $i2 = $r16.<com.android.server.location.CallerIdentity: int uid>;

        if $i2 != i0 goto label04;

        $z4 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: boolean access$1000(com.android.server.location.LocationManagerService$UpdateRecord)>(r22);

        if $z4 == z0 goto label04;

        staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: void access$1100(com.android.server.location.LocationManagerService$UpdateRecord,boolean)>(r22, z0);

        $r17 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r22);

        $r18 = $r17.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $z5 = specialinvoke r0.<com.android.server.location.LocationManagerService: boolean isThrottlingExempt(com.android.server.location.CallerIdentity)>($r18);

        if $z5 != 0 goto label04;

        virtualinvoke r20.<java.util.HashSet: boolean add(java.lang.Object)>(r3);

     label04:
        goto label03;

     label05:
        goto label02;

     label06:
        r23 = virtualinvoke r20.<java.util.HashSet: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r8 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.String) $r8;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void applyRequirementsLocked(java.lang.String)>($r9);

     label08:
        goto label07;

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r19 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private void onAppOpChanged(java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1, $r8, $r10, $r11, $r12, $r14, $r19;
        java.util.Iterator r2, r24, r29, r30;
        java.util.HashMap $r3, $r5, $r6;
        java.util.Collection $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        int $i0;
        java.util.Set $r7;
        java.lang.String $r9, $r18, $r21, r23, r28;
        java.util.ArrayList $r13;
        com.android.server.location.LocationManagerService$UpdateRecord $r15;
        com.android.server.location.LocationManagerService$Receiver $r16, r25;
        com.android.server.location.CallerIdentity $r17, $r20;
        java.lang.Throwable $r22;
        java.util.HashSet r26;
        java.util.Map$Entry r27;

        r0 := @this: com.android.server.location.LocationManagerService;

        r23 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mReceivers>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r24 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r19 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (com.android.server.location.LocationManagerService$Receiver) $r19;

        $r20 = r25.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r21 = $r20.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $z6 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r23);

        if $z6 == 0 goto label03;

        virtualinvoke r25.<com.android.server.location.LocationManagerService$Receiver: void updateMonitoring(boolean)>(1);

     label03:
        goto label02;

     label04:
        r26 = new java.util.HashSet;

        $r5 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mRecordsByProvider>;

        $i0 = virtualinvoke $r5.<java.util.HashMap: int size()>();

        specialinvoke r26.<java.util.HashSet: void <init>(int)>($i0);

        $r6 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mRecordsByProvider>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r27 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>();

        r28 = (java.lang.String) $r11;

        $r12 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.util.ArrayList) $r12;

        r29 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r14 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (com.android.server.location.LocationManagerService$UpdateRecord) $r14;

        $r16 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>($r15);

        $r17 = $r16.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r18 = $r17.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $z4 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r23);

        if $z4 == 0 goto label07;

        virtualinvoke r26.<java.util.HashSet: boolean add(java.lang.Object)>(r28);

     label07:
        goto label06;

     label08:
        goto label05;

     label09:
        r30 = virtualinvoke r26.<java.util.HashSet: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r8 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.String) $r8;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void applyRequirementsLocked(java.lang.String)>($r9);

     label11:
        goto label10;

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r22 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    private void onBackgroundThrottleIntervalChanged()
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1, $r3;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0;
        com.android.server.location.LocationManagerService$LocationProviderManager $r4;
        java.lang.Throwable $r5;
        java.util.Iterator r6;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r6 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r3;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void applyRequirementsLocked(com.android.server.location.LocationManagerService$LocationProviderManager)>($r4);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void onBackgroundThrottleWhitelistChanged()
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1, $r3;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0;
        com.android.server.location.LocationManagerService$LocationProviderManager $r4;
        java.lang.Throwable $r5;
        java.util.Iterator r6;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r6 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r3;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void applyRequirementsLocked(com.android.server.location.LocationManagerService$LocationProviderManager)>($r4);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void onBatterySaverModeChangedLocked(int)
    {
        com.android.server.location.LocationManagerService r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        java.util.concurrent.CopyOnWriteArrayList $r1;
        java.lang.Object $r2;
        com.android.server.location.LocationManagerService$LocationProviderManager $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r9, $r11;
        java.util.Iterator r13;

        r0 := @this: com.android.server.location.LocationManagerService;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.location.LocationManagerService: int mBatterySaverMode>;

        if $i1 != i0 goto label1;

        return;

     label1:
        $z0 = <com.android.server.location.LocationManagerService: boolean D>;

        if $z0 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Battery Saver location mode changed from ");

        $i2 = r0.<com.android.server.location.LocationManagerService: int mBatterySaverMode>;

        $r6 = staticinvoke <android.os.PowerManager: java.lang.String locationPowerSaveModeToString(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r9 = staticinvoke <android.os.PowerManager: java.lang.String locationPowerSaveModeToString(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationManagerService", $r11);

     label2:
        r0.<com.android.server.location.LocationManagerService: int mBatterySaverMode> = i0;

        $r1 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r13 = virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r2 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r2;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void applyRequirementsLocked(com.android.server.location.LocationManagerService$LocationProviderManager)>($r3);

        goto label3;

     label4:
        return;
    }

    private void onIgnoreSettingsWhitelistChanged()
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1, $r3;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0;
        com.android.server.location.LocationManagerService$LocationProviderManager $r4;
        java.lang.Throwable $r5;
        java.util.Iterator r6;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r6 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r3;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void applyRequirementsLocked(com.android.server.location.LocationManagerService$LocationProviderManager)>($r4);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void onLocationModeChanged(int)
    {
        com.android.server.location.LocationManagerService r0;
        int i0;
        boolean z0, $z1, $z2;
        com.android.server.location.SettingsHelper $r1;
        android.content.Intent $r2, $r3, $r4, r18;
        android.content.Context $r5;
        android.os.UserHandle $r6;
        java.util.concurrent.CopyOnWriteArrayList $r7;
        java.lang.Object $r8, r19;
        com.android.server.location.LocationManagerService$LocationProviderManager $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r15;
        java.lang.Throwable $r16;
        java.util.Iterator r20;

        r0 := @this: com.android.server.location.LocationManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        z0 = virtualinvoke $r1.<com.android.server.location.SettingsHelper: boolean isLocationEnabled(int)>(i0);

        staticinvoke <android.location.LocationManager: void invalidateLocalLocationEnabledCaches()>();

        $z1 = <com.android.server.location.LocationManagerService: boolean D>;

        if $z1 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[u");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] location enabled = ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationManagerService", $r15);

     label1:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.location.MODE_CHANGED");

        $r3 = virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.location.extra.LOCATION_ENABLED", z0);

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        r18 = virtualinvoke $r4.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r5 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $r6 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        virtualinvoke $r5.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r18, $r6);

        r19 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r19;

     label2:
        $r7 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r20 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r8 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r8;

        virtualinvoke $r9.<com.android.server.location.LocationManagerService$LocationProviderManager: void onEnabledChangedLocked(int)>(i0);

     label4:
        goto label3;

     label5:
        exitmonitor r19;

     label6:
        return;

     label7:
        $r16 := @caughtexception;

     label8:
        exitmonitor r19;

     label9:
        throw $r16;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void onPackageDisappeared(java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1, $r6, $r8;
        java.util.Iterator r2, r15;
        com.android.server.location.LocationManagerService$Receiver r3, $r7;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        boolean $z0, $z1, $z2;
        com.android.server.location.CallerIdentity $r9;
        java.lang.String $r10, r12;
        java.lang.Throwable $r11;
        java.util.ArrayList r13, r14;

        r0 := @this: com.android.server.location.LocationManagerService;

        r12 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

        r13 = null;

     label01:
        $r4 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mReceivers>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.location.LocationManagerService$Receiver) $r8;

     label03:
        r14 = r13;

     label04:
        $r9 = r3.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r10 = $r9.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z2 == 0 goto label08;

     label05:
        r14 = r13;

        if r13 != null goto label07;

     label06:
        r14 = new java.util.ArrayList;

        specialinvoke r14.<java.util.ArrayList: void <init>()>();

     label07:
        virtualinvoke r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label08:
        r13 = r14;

        goto label02;

     label09:
        if r13 == null goto label13;

     label10:
        r15 = virtualinvoke r13.<java.util.ArrayList: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r6 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.android.server.location.LocationManagerService$Receiver) $r6;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void removeUpdatesLocked(com.android.server.location.LocationManagerService$Receiver)>($r7);

     label12:
        goto label11;

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r11 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    private void onPermissionsChangedLocked()
    {
        com.android.server.location.LocationManagerService r0;
        java.util.Iterator r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.server.location.LocationManagerService$LocationProviderManager $r4;

        r0 := @this: com.android.server.location.LocationManagerService;

        $r2 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r1 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r3;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void applyRequirementsLocked(com.android.server.location.LocationManagerService$LocationProviderManager)>($r4);

        goto label1;

     label2:
        return;
    }

    private void onScreenStateChanged()
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1, $r3;
        int $i0;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0;
        com.android.server.location.LocationManagerService$LocationProviderManager $r4;
        java.lang.Throwable $r5;
        java.util.Iterator r6;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<com.android.server.location.LocationManagerService: int mBatterySaverMode>;

        if $i0 != 4 goto label4;

        $r2 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r6 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r3;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void applyRequirementsLocked(com.android.server.location.LocationManagerService$LocationProviderManager)>($r4);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void onSystemReady()
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1, $r8, $r13;
        android.content.Context r2, $r7, $r11, $r12, $r16;
        int i0, $i1, $i2, i3;
        com.android.server.location.AppOpsHelper $r3, r27;
        com.android.server.location.UserInfoHelper $r4, $r20, r38;
        com.android.server.location.SettingsHelper $r5, $r10, r29, r31, r33, r35;
        com.android.server.location.AppForegroundHelper $r6, r40;
        android.os.PowerManager $r9, $r14;
        android.os.Handler $r15, $r17;
        android.os.UserHandle $r18;
        java.lang.Throwable $r21;
        com.android.server.location.GeofenceManager r22;
        android.content.pm.PackageManager r23;
        com.android.server.location._$$Lambda$LocationManagerService$AZ_sFaR_D5V4QO0E44ITib__Pl0 r24;
        android.os.PowerManagerInternal r25;
        com.android.server.location._$$Lambda$LocationManagerService$_lFMOHyrWj6WiqyBQsMWkc1X03E r26;
        com.android.server.location._$$Lambda$LocationManagerService$SdJCjgY1BwQ_VOtT2s6dcqDrOkA r28;
        com.android.server.location._$$Lambda$LocationManagerService$Jsn9f_NWM0cs884cOI1fOaFZw8M r30;
        com.android.server.location._$$Lambda$LocationManagerService$Cw7xwIE70_6c85ztm6T7WScKZRA r32;
        com.android.server.location._$$Lambda$LocationManagerService$fqo6KrQPiessbxGobdg5DXwHuPc r34;
        com.android.server.location._$$Lambda$LocationManagerService$ZMNjuBZeNXZ1_aQV1f9Cim6fRag r36;
        com.android.server.location.LocationManagerService$1 r37;
        com.android.server.location._$$Lambda$LocationManagerService$r1HQs34pMDdwthhOWsKVe7pybhc r39;
        com.android.server.location._$$Lambda$LocationManagerService$VbEiHJaYRYQKq_KAS1hQcxjIX3w r41;
        android.content.IntentFilter r42;
        com.android.server.location.LocationManagerService$2 r43;
        int[] r44;

        r0 := @this: com.android.server.location.LocationManagerService;

        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        virtualinvoke $r3.<com.android.server.location.AppOpsHelper: void onSystemReady()>();

        $r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper mUserInfoHelper>;

        virtualinvoke $r4.<com.android.server.location.UserInfoHelper: void onSystemReady()>();

        $r5 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        virtualinvoke $r5.<com.android.server.location.SettingsHelper: void onSystemReady()>();

        $r6 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper>;

        virtualinvoke $r6.<com.android.server.location.AppForegroundHelper: void onSystemReady()>();

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r7 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        $r9 = (android.os.PowerManager) $r8;

        r0.<com.android.server.location.LocationManagerService: android.os.PowerManager mPowerManager> = $r9;

        r22 = new com.android.server.location.GeofenceManager;

        $r11 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $r10 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        specialinvoke r22.<com.android.server.location.GeofenceManager: void <init>(android.content.Context,com.android.server.location.SettingsHelper)>($r11, $r10);

        r0.<com.android.server.location.LocationManagerService: com.android.server.location.GeofenceManager mGeofenceManager> = r22;

        $r12 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        r23 = virtualinvoke $r12.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r24 = new com.android.server.location._$$Lambda$LocationManagerService$AZ_sFaR_D5V4QO0E44ITib__Pl0;

        specialinvoke r24.<com.android.server.location._$$Lambda$LocationManagerService$AZ_sFaR_D5V4QO0E44ITib__Pl0: void <init>(com.android.server.location.LocationManagerService)>(r0);

        virtualinvoke r23.<android.content.pm.PackageManager: void addOnPermissionsChangeListener(android.content.pm.PackageManager$OnPermissionsChangedListener)>(r24);

        $r13 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/PowerManagerInternal;");

        r25 = (android.os.PowerManagerInternal) $r13;

        r26 = new com.android.server.location._$$Lambda$LocationManagerService$_lFMOHyrWj6WiqyBQsMWkc1X03E;

        specialinvoke r26.<com.android.server.location._$$Lambda$LocationManagerService$_lFMOHyrWj6WiqyBQsMWkc1X03E: void <init>(com.android.server.location.LocationManagerService)>(r0);

        virtualinvoke r25.<android.os.PowerManagerInternal: void registerLowPowerModeObserver(int,java.util.function.Consumer)>(1, r26);

        $r14 = r0.<com.android.server.location.LocationManagerService: android.os.PowerManager mPowerManager>;

        $i1 = virtualinvoke $r14.<android.os.PowerManager: int getLocationPowerSaveMode()>();

        r0.<com.android.server.location.LocationManagerService: int mBatterySaverMode> = $i1;

        r27 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        r28 = new com.android.server.location._$$Lambda$LocationManagerService$SdJCjgY1BwQ_VOtT2s6dcqDrOkA;

        specialinvoke r28.<com.android.server.location._$$Lambda$LocationManagerService$SdJCjgY1BwQ_VOtT2s6dcqDrOkA: void <init>(com.android.server.location.LocationManagerService)>(r0);

        virtualinvoke r27.<com.android.server.location.AppOpsHelper: void addListener(com.android.server.location.AppOpsHelper$LocationAppOpListener)>(r28);

        r29 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        r30 = new com.android.server.location._$$Lambda$LocationManagerService$Jsn9f_NWM0cs884cOI1fOaFZw8M;

        specialinvoke r30.<com.android.server.location._$$Lambda$LocationManagerService$Jsn9f_NWM0cs884cOI1fOaFZw8M: void <init>(com.android.server.location.LocationManagerService)>(r0);

        virtualinvoke r29.<com.android.server.location.SettingsHelper: void addOnLocationEnabledChangedListener(com.android.server.location.SettingsHelper$UserSettingChangedListener)>(r30);

        r31 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        r32 = new com.android.server.location._$$Lambda$LocationManagerService$Cw7xwIE70_6c85ztm6T7WScKZRA;

        specialinvoke r32.<com.android.server.location._$$Lambda$LocationManagerService$Cw7xwIE70_6c85ztm6T7WScKZRA: void <init>(com.android.server.location.LocationManagerService)>(r0);

        virtualinvoke r31.<com.android.server.location.SettingsHelper: void addOnBackgroundThrottleIntervalChangedListener(com.android.server.location.SettingsHelper$GlobalSettingChangedListener)>(r32);

        r33 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        r34 = new com.android.server.location._$$Lambda$LocationManagerService$fqo6KrQPiessbxGobdg5DXwHuPc;

        specialinvoke r34.<com.android.server.location._$$Lambda$LocationManagerService$fqo6KrQPiessbxGobdg5DXwHuPc: void <init>(com.android.server.location.LocationManagerService)>(r0);

        virtualinvoke r33.<com.android.server.location.SettingsHelper: void addOnBackgroundThrottlePackageWhitelistChangedListener(com.android.server.location.SettingsHelper$GlobalSettingChangedListener)>(r34);

        r35 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        r36 = new com.android.server.location._$$Lambda$LocationManagerService$ZMNjuBZeNXZ1_aQV1f9Cim6fRag;

        specialinvoke r36.<com.android.server.location._$$Lambda$LocationManagerService$ZMNjuBZeNXZ1_aQV1f9Cim6fRag: void <init>(com.android.server.location.LocationManagerService)>(r0);

        virtualinvoke r35.<com.android.server.location.SettingsHelper: void addOnIgnoreSettingsPackageWhitelistChangedListener(com.android.server.location.SettingsHelper$GlobalSettingChangedListener)>(r36);

        r37 = new com.android.server.location.LocationManagerService$1;

        specialinvoke r37.<com.android.server.location.LocationManagerService$1: void <init>(com.android.server.location.LocationManagerService)>(r0);

        $r16 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $r15 = r0.<com.android.server.location.LocationManagerService: android.os.Handler mHandler>;

        virtualinvoke r37.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.UserHandle,boolean,android.os.Handler)>($r16, null, 1, $r15);

        r38 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper mUserInfoHelper>;

        r39 = new com.android.server.location._$$Lambda$LocationManagerService$r1HQs34pMDdwthhOWsKVe7pybhc;

        specialinvoke r39.<com.android.server.location._$$Lambda$LocationManagerService$r1HQs34pMDdwthhOWsKVe7pybhc: void <init>(com.android.server.location.LocationManagerService)>(r0);

        virtualinvoke r38.<com.android.server.location.UserInfoHelper: void addListener(com.android.server.location.UserInfoHelper$UserListener)>(r39);

        r40 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper>;

        r41 = new com.android.server.location._$$Lambda$LocationManagerService$VbEiHJaYRYQKq_KAS1hQcxjIX3w;

        specialinvoke r41.<com.android.server.location._$$Lambda$LocationManagerService$VbEiHJaYRYQKq_KAS1hQcxjIX3w: void <init>(com.android.server.location.LocationManagerService)>(r0);

        virtualinvoke r40.<com.android.server.location.AppForegroundHelper: void addListener(com.android.server.location.AppForegroundHelper$AppForegroundListener)>(r41);

        r42 = new android.content.IntentFilter;

        specialinvoke r42.<android.content.IntentFilter: void <init>()>();

        virtualinvoke r42.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        virtualinvoke r42.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        r2 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        r43 = new com.android.server.location.LocationManagerService$2;

        specialinvoke r43.<com.android.server.location.LocationManagerService$2: void <init>(com.android.server.location.LocationManagerService)>(r0);

        $r18 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r17 = r0.<com.android.server.location.LocationManagerService: android.os.Handler mHandler>;

        virtualinvoke r2.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>(r43, $r18, r42, null, $r17);

        $r20 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper mUserInfoHelper>;

        r44 = virtualinvoke $r20.<com.android.server.location.UserInfoHelper: int[] getCurrentUserIds()>();

        i0 = lengthof r44;

     label02:
        i3 = 0;

     label03:
        if i3 >= i0 goto label06;

     label04:
        $i2 = r44[i3];

        specialinvoke r0.<com.android.server.location.LocationManagerService: void onUserChanged(int,int)>($i2, 2);

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r21 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void onSystemThirdPartyAppsCanStart()
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.location.LocationManagerService: void initializeProvidersLocked()>();

        exitmonitor r1;

     label2:
        specialinvoke r0.<com.android.server.location.LocationManagerService: void initializeGnss()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void onUserChanged(int, int)
    {
        com.android.server.location.LocationManagerService r0;
        int i0, i1;
        java.util.concurrent.CopyOnWriteArrayList $r1, $r4, $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2, $r5, $r8, r13, r16, r19;
        com.android.server.location.LocationManagerService$LocationProviderManager $r3, $r6, $r9;
        java.lang.Throwable $r10, $r11, $r12;
        java.util.Iterator r14, r17, r20;

        r0 := @this: com.android.server.location.LocationManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 == 1 goto label19;

        if i1 == 2 goto label10;

        if i1 == 3 goto label01;

        goto label24;

     label01:
        r13 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r13;

     label02:
        $r7 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r14 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r8 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r8;

        virtualinvoke $r9.<com.android.server.location.LocationManagerService$LocationProviderManager: void onUserStopped(int)>(i0);

     label04:
        goto label03;

     label05:
        exitmonitor r13;

     label06:
        goto label24;

     label07:
        $r12 := @caughtexception;

     label08:
        exitmonitor r13;

     label09:
        throw $r12;

     label10:
        r16 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r16;

     label11:
        $r4 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r17 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r5 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r5;

        virtualinvoke $r6.<com.android.server.location.LocationManagerService$LocationProviderManager: void onUserStarted(int)>(i0);

     label13:
        goto label12;

     label14:
        exitmonitor r16;

     label15:
        goto label24;

     label16:
        $r11 := @caughtexception;

     label17:
        exitmonitor r16;

     label18:
        throw $r11;

     label19:
        r19 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r19;

     label20:
        $r1 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r20 = virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label21:
        $z0 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label23;

        $r2 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r2;

        virtualinvoke $r3.<com.android.server.location.LocationManagerService$LocationProviderManager: void onEnabledChangedLocked(int)>(i0);

     label22:
        goto label21;

     label23:
        exitmonitor r19;

     label24:
        return;

     label25:
        $r10 := @caughtexception;

     label26:
        exitmonitor r19;

     label27:
        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    private void removeUpdatesLocked(com.android.server.location.LocationManagerService$Receiver)
    {
        com.android.server.location.LocationManagerService r0;
        java.util.Iterator r1, r23;
        boolean $z0, $z1, $z3, $z4;
        java.util.HashMap $r2, r22;
        java.lang.Object $r3, $r4, $r5, $r9;
        java.lang.String $r6, $r15, $r17;
        java.util.Collection $r7;
        java.util.Set $r8;
        com.android.server.location.LocationManagerService$UpdateRecord $r10;
        android.location.ILocationListener $r11;
        android.os.IBinder $r12;
        java.lang.StringBuilder $r13;
        int $i0;
        com.android.server.location.LocationManagerService$Receiver r18;
        java.util.HashSet $r20;

        r0 := @this: com.android.server.location.LocationManagerService;

        r18 := @parameter0: com.android.server.location.LocationManagerService$Receiver;

        $z0 = <com.android.server.location.LocationManagerService: boolean D>;

        if $z0 == 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove ");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r18);

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("LocationManagerService", $r17);

     label1:
        $r2 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mReceivers>;

        $r3 = staticinvoke <com.android.server.location.LocationManagerService$Receiver: java.lang.Object access$3400(com.android.server.location.LocationManagerService$Receiver)>(r18);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r3);

        if $r4 == null goto label2;

        $z3 = virtualinvoke r18.<com.android.server.location.LocationManagerService$Receiver: boolean isListener()>();

        if $z3 == 0 goto label2;

        $r11 = virtualinvoke r18.<com.android.server.location.LocationManagerService$Receiver: android.location.ILocationListener getListener()>();

        $r12 = interfaceinvoke $r11.<android.location.ILocationListener: android.os.IBinder asBinder()>();

        virtualinvoke r18.<com.android.server.location.LocationManagerService$Receiver: void unlinkFromListenerDeathNotificationLocked(android.os.IBinder)>($r12);

        virtualinvoke r18.<com.android.server.location.LocationManagerService$Receiver: void clearPendingBroadcastsLocked()>();

     label2:
        virtualinvoke r18.<com.android.server.location.LocationManagerService$Receiver: void updateMonitoring(boolean)>(0);

        $r20 = new java.util.HashSet;

        specialinvoke $r20.<java.util.HashSet: void <init>()>();

        r22 = r18.<com.android.server.location.LocationManagerService$Receiver: java.util.HashMap mUpdateRecords>;

        if r22 == null goto label5;

        $r7 = virtualinvoke r22.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.android.server.location.LocationManagerService$UpdateRecord) $r9;

        staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: void access$3300(com.android.server.location.LocationManagerService$UpdateRecord,boolean)>($r10, 0);

        goto label3;

     label4:
        $r8 = virtualinvoke r22.<java.util.HashMap: java.util.Set keySet()>();

        virtualinvoke $r20.<java.util.HashSet: boolean addAll(java.util.Collection)>($r8);

     label5:
        r23 = virtualinvoke $r20.<java.util.HashSet: java.util.Iterator iterator()>();

     label6:
        $z4 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label7;

        $r5 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void applyRequirementsLocked(java.lang.String)>($r6);

        goto label6;

     label7:
        return;
    }

    private void requestLocationUpdatesLocked(android.location.LocationRequest, com.android.server.location.LocationManagerService$Receiver)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.LocationManagerService$LocationProviderManager r1;
        long l0;
        java.lang.IllegalArgumentException $r3, $r7;
        java.lang.StringBuilder $r4;
        java.lang.String $r8, r17;
        com.android.server.location.LocationManagerService$UpdateRecord $r9, r18;
        java.util.HashMap $r10;
        java.lang.Object $r11;
        com.android.server.location.CallerIdentity $r12;
        int $i1, $i2;
        boolean $z0, $z1;
        java.lang.Throwable $r13;
        android.location.LocationRequest r14, r16;
        com.android.server.location.LocationManagerService$Receiver r15;

        r0 := @this: com.android.server.location.LocationManagerService;

        r14 := @parameter0: android.location.LocationRequest;

        r15 := @parameter1: com.android.server.location.LocationManagerService$Receiver;

        r16 = r14;

        if r14 != null goto label1;

        r16 = <com.android.server.location.LocationManagerService: android.location.LocationRequest DEFAULT_LOCATION_REQUEST>;

     label1:
        r17 = virtualinvoke r16.<android.location.LocationRequest: java.lang.String getProvider()>();

        if r17 == null goto label8;

        r1 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>(r17);

        if r1 == null goto label7;

        $r9 = new com.android.server.location.LocationManagerService$UpdateRecord;

        specialinvoke $r9.<com.android.server.location.LocationManagerService$UpdateRecord: void <init>(com.android.server.location.LocationManagerService,java.lang.String,android.location.LocationRequest,com.android.server.location.LocationManagerService$Receiver,com.android.server.location.LocationManagerService$1)>(r0, r17, r16, r15, null);

        $r10 = r15.<com.android.server.location.LocationManagerService$Receiver: java.util.HashMap mUpdateRecords>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, $r9);

        r18 = (com.android.server.location.LocationManagerService$UpdateRecord) $r11;

        if r18 == null goto label2;

        staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: void access$3300(com.android.server.location.LocationManagerService$UpdateRecord,boolean)>(r18, 0);

     label2:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r12 = r15.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $i1 = $r12.<com.android.server.location.CallerIdentity: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $z0 = virtualinvoke r1.<com.android.server.location.LocationManagerService$LocationProviderManager: boolean isEnabled(int)>($i2);

        if $z0 != 0 goto label4;

        $z1 = specialinvoke r0.<com.android.server.location.LocationManagerService: boolean isSettingsExempt(com.android.server.location.LocationManagerService$UpdateRecord)>($r9);

        if $z1 != 0 goto label4;

        staticinvoke <com.android.server.location.LocationManagerService$Receiver: boolean access$2500(com.android.server.location.LocationManagerService$Receiver,java.lang.String,boolean)>(r15, r17, 0);

     label4:
        specialinvoke r0.<com.android.server.location.LocationManagerService: void applyRequirementsLocked(java.lang.String)>(r17);

        virtualinvoke r15.<com.android.server.location.LocationManagerService$Receiver: void updateMonitoring(boolean)>(1);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label6:
        $r13 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r13;

     label7:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("provider doesn\'t exist: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label8:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("provider name must not be null");

        throw $r3;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private static boolean shouldBroadcastSafeLocked(android.location.Location, android.location.Location, com.android.server.location.LocationManagerService$UpdateRecord, long)
    {
        android.location.Location r0, r1;
        com.android.server.location.LocationManagerService$UpdateRecord r2;
        long l0, l1, $l2, $l3, $l4, $l5, $l6, $l10;
        double d0, $d1;
        android.location.LocationRequest $r3, $r5, $r6;
        java.util.concurrent.TimeUnit $r4;
        byte $b7, $b8, $b11, $b12;
        float $f0, $f1;
        int $i9;
        boolean z0;

        r0 := @parameter0: android.location.Location;

        r1 := @parameter1: android.location.Location;

        r2 := @parameter2: com.android.server.location.LocationManagerService$UpdateRecord;

        l0 := @parameter3: long;

        z0 = 1;

        if r1 != null goto label1;

        return 1;

     label1:
        $r3 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest access$2600(com.android.server.location.LocationManagerService$UpdateRecord)>(r2);

        l1 = virtualinvoke $r3.<android.location.LocationRequest: long getFastestInterval()>();

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l2 = virtualinvoke r0.<android.location.Location: long getElapsedRealtimeNanos()>();

        $l3 = virtualinvoke r1.<android.location.Location: long getElapsedRealtimeNanos()>();

        $l4 = $l2 - $l3;

        $l5 = virtualinvoke $r4.<java.util.concurrent.TimeUnit: long toMillis(long)>($l4);

        $l6 = l1 - 100L;

        $b7 = $l5 cmp $l6;

        if $b7 >= 0 goto label2;

        return 0;

     label2:
        $r5 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest access$2600(com.android.server.location.LocationManagerService$UpdateRecord)>(r2);

        $f0 = virtualinvoke $r5.<android.location.LocationRequest: float getSmallestDisplacement()>();

        d0 = (double) $f0;

        $b8 = d0 cmpl 0.0;

        if $b8 <= 0 goto label3;

        $f1 = virtualinvoke r0.<android.location.Location: float distanceTo(android.location.Location)>(r1);

        $d1 = (double) $f1;

        $b12 = $d1 cmpg d0;

        if $b12 > 0 goto label3;

        return 0;

     label3:
        $r6 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: android.location.LocationRequest access$2600(com.android.server.location.LocationManagerService$UpdateRecord)>(r2);

        $i9 = virtualinvoke $r6.<android.location.LocationRequest: int getNumUpdates()>();

        if $i9 > 0 goto label4;

        return 0;

     label4:
        $l10 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: long access$3500(com.android.server.location.LocationManagerService$UpdateRecord)>(r2);

        $b11 = $l10 cmp l0;

        if $b11 < 0 goto label5;

        goto label6;

     label5:
        z0 = 0;

     label6:
        return z0;
    }

    private void updateProviderEnabledLocked(com.android.server.location.LocationManagerService$LocationProviderManager, boolean)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.LocationManagerService$LocationProviderManager r1;
        boolean z0, $z1, $z2, $z3, $z5;
        com.android.server.location.LocationManagerService$UpdateRecord r2;
        java.util.HashMap $r3;
        java.lang.String $r4, $r13;
        java.lang.Object $r5, $r6, $r8;
        int $i0, $i1, $i2, i3;
        com.android.server.location.LocationManagerService$Receiver $r7, $r10, $r12, $r14;
        com.android.server.location.UserInfoHelper $r9;
        com.android.server.location.CallerIdentity $r11;
        java.util.ArrayList $r15, r16, r17, r18, r20;
        java.util.Iterator r19;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: com.android.server.location.LocationManagerService$LocationProviderManager;

        z0 := @parameter1: boolean;

        r16 = null;

        r17 = null;

        $r3 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mRecordsByProvider>;

        $r4 = virtualinvoke r1.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r18 = (java.util.ArrayList) $r5;

        if r18 == null goto label6;

        r19 = virtualinvoke r18.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        r16 = r17;

        $z5 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label6;

        $r8 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.location.LocationManagerService$UpdateRecord) $r8;

        $r9 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper mUserInfoHelper>;

        $r10 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r2);

        $r11 = $r10.<com.android.server.location.LocationManagerService$Receiver: com.android.server.location.CallerIdentity mCallerIdentity>;

        $i1 = $r11.<com.android.server.location.CallerIdentity: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $z1 = virtualinvoke $r9.<com.android.server.location.UserInfoHelper: boolean isCurrentUserId(int)>($i2);

        if $z1 != 0 goto label2;

        goto label1;

     label2:
        $z2 = specialinvoke r0.<com.android.server.location.LocationManagerService: boolean isSettingsExempt(com.android.server.location.LocationManagerService$UpdateRecord)>(r2);

        if $z2 == 0 goto label3;

        goto label1;

     label3:
        r20 = r17;

        $r12 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r2);

        $r13 = virtualinvoke r1.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String getName()>();

        $z3 = staticinvoke <com.android.server.location.LocationManagerService$Receiver: boolean access$2500(com.android.server.location.LocationManagerService$Receiver,java.lang.String,boolean)>($r12, $r13, z0);

        if $z3 != 0 goto label5;

        r20 = r17;

        if r17 != null goto label4;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r20 = $r15;

     label4:
        $r14 = staticinvoke <com.android.server.location.LocationManagerService$UpdateRecord: com.android.server.location.LocationManagerService$Receiver access$900(com.android.server.location.LocationManagerService$UpdateRecord)>(r2);

        virtualinvoke r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

     label5:
        r17 = r20;

        goto label1;

     label6:
        if r16 == null goto label8;

        $i0 = virtualinvoke r16.<java.util.ArrayList: int size()>();

        i3 = $i0 - 1;

     label7:
        if i3 < 0 goto label8;

        $r6 = virtualinvoke r16.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r7 = (com.android.server.location.LocationManagerService$Receiver) $r6;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void removeUpdatesLocked(com.android.server.location.LocationManagerService$Receiver)>($r7);

        i3 = i3 + -1;

        goto label7;

     label8:
        specialinvoke r0.<com.android.server.location.LocationManagerService: void applyRequirementsLocked(com.android.server.location.LocationManagerService$LocationProviderManager)>(r1);

        return;
    }

    public boolean addGnssAntennaInfoListener(android.location.IGnssAntennaInfoListener, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.IGnssAntennaInfoListener r1;
        java.lang.String r2, r3;
        com.android.server.location.gnss.GnssManagerService $r4, $r5;
        boolean $z0, z1;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.location.IGnssAntennaInfoListener;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r4 == null goto label1;

        $r5 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        $z0 = virtualinvoke $r5.<com.android.server.location.gnss.GnssManagerService: boolean addGnssAntennaInfoListener(android.location.IGnssAntennaInfoListener,java.lang.String,java.lang.String)>(r1, r2, r3);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean addGnssBatchingCallback(android.location.IBatchedLocationCallback, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.IBatchedLocationCallback r1;
        java.lang.String r2, r3;
        com.android.server.location.gnss.GnssManagerService $r4, $r5;
        boolean $z0, z1;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.location.IBatchedLocationCallback;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r4 == null goto label1;

        $r5 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        $z0 = virtualinvoke $r5.<com.android.server.location.gnss.GnssManagerService: boolean addGnssBatchingCallback(android.location.IBatchedLocationCallback,java.lang.String,java.lang.String)>(r1, r2, r3);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean addGnssMeasurementsListener(android.location.GnssRequest, android.location.IGnssMeasurementsListener, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.GnssRequest r1;
        android.location.IGnssMeasurementsListener r2;
        java.lang.String r3, r4;
        com.android.server.location.gnss.GnssManagerService $r5, $r6;
        boolean $z0, z1;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.location.GnssRequest;

        r2 := @parameter1: android.location.IGnssMeasurementsListener;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r5 == null goto label1;

        $r6 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        $z0 = virtualinvoke $r6.<com.android.server.location.gnss.GnssManagerService: boolean addGnssMeasurementsListener(android.location.GnssRequest,android.location.IGnssMeasurementsListener,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean addGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.IGnssNavigationMessageListener r1;
        java.lang.String r2, r3;
        com.android.server.location.gnss.GnssManagerService $r4, $r5;
        boolean $z0, z1;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.location.IGnssNavigationMessageListener;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r4 == null goto label1;

        $r5 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        $z0 = virtualinvoke $r5.<com.android.server.location.gnss.GnssManagerService: boolean addGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener,java.lang.String,java.lang.String)>(r1, r2, r3);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void addTestProvider(java.lang.String, com.android.internal.location.ProviderProperties, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.internal.location.ProviderProperties r1;
        java.lang.Object r2;
        android.content.Context $r3;
        com.android.server.location.AppOpsHelper $r4;
        boolean $z0;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8, r9;
        com.android.server.location.CallerIdentity r10;
        com.android.server.location.LocationManagerService$LocationProviderManager r11, r12;
        com.android.server.location.MockProvider r13;

        r0 := @this: com.android.server.location.LocationManagerService;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.location.ProviderProperties;

        r8 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.String;

        $r3 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        r10 = staticinvoke <com.android.server.location.CallerIdentity: com.android.server.location.CallerIdentity fromBinderUnsafe(android.content.Context,java.lang.String,java.lang.String)>($r3, r8, r9);

        $r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        $z0 = virtualinvoke $r4.<com.android.server.location.AppOpsHelper: boolean noteMockLocationAccess(com.android.server.location.CallerIdentity)>(r10);

        if $z0 != 0 goto label01;

        return;

     label01:
        r2 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label02:
        r11 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>(r7);

     label03:
        r12 = r11;

        if r11 != null goto label06;

     label04:
        r12 = new com.android.server.location.LocationManagerService$LocationProviderManager;

        specialinvoke r12.<com.android.server.location.LocationManagerService$LocationProviderManager: void <init>(com.android.server.location.LocationManagerService,java.lang.String,com.android.server.location.LocationManagerService$1)>(r0, r7, null);

     label05:
        $r5 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r12);

     label06:
        r13 = new com.android.server.location.MockProvider;

        specialinvoke r13.<com.android.server.location.MockProvider: void <init>(com.android.internal.location.ProviderProperties)>(r1);

        virtualinvoke r12.<com.android.server.location.LocationManagerService$LocationProviderManager: void setMockProvider(com.android.server.location.MockProvider)>(r13);

        exitmonitor r2;

     label07:
        return;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        throw $r6;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String[] r1;
        java.lang.Object r3, $r39, $r49, $r50, $r53, $r56, $r57, $r63, $r66, $r68, r102;
        android.content.Context $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.internal.util.IndentingPrintWriter $r5;
        com.android.server.location.gnss.GnssManagerService $r6, $r35, $r37, $r71;
        java.util.HashMap $r21, $r26, $r87;
        java.util.Set $r22, $r27;
        com.android.server.location.LocationRequestStatistics $r25, $r29;
        com.android.server.location.LocationRequestStatistics$RequestSummaryLimitedHistory $r30;
        com.android.server.location.GeofenceManager $r31, $r47;
        java.lang.String $r32, $r42, $r45, $r55, $r58, $r61, $r70, $r77, $r78, $r80, $r81, $r85, $r86, r99;
        com.android.server.location.LocationManagerService$LocationProviderManager $r40;
        java.util.ArrayList $r64;
        com.android.server.location.LocationManagerService$UpdateRecord $r67;
        com.android.server.location.LocationManagerService$Receiver $r69;
        int $i0, $i3;
        java.lang.Throwable $r72, $r73;
        java.io.FileDescriptor r74;
        java.io.PrintWriter r75;
        java.lang.StringBuilder r76, r79, r84, r92, r97, r98;
        long $l1, $l2;
        com.android.server.location.UserInfoHelper $r82;
        com.android.server.location.SettingsHelper $r83;
        java.util.Collection $r88;
        java.util.Iterator r89, r90, r93, r95, r101;
        java.util.Map$Entry r91, r96;
        java.util.TreeMap r94;
        java.util.concurrent.CopyOnWriteArrayList $r100;

        r0 := @this: com.android.server.location.LocationManagerService;

        r74 := @parameter0: java.io.FileDescriptor;

        r75 := @parameter1: java.io.PrintWriter;

        r1 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "LocationManagerService", r75);

        if $z0 != 0 goto label01;

        return;

     label01:
        $r5 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r75, "  ");

        r3 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r3;

     label02:
        $r6 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r6 == null goto label04;

        $i0 = lengthof r1;

        if $i0 <= 0 goto label04;

        $r70 = r1[0];

        $z5 = virtualinvoke $r70.<java.lang.String: boolean equals(java.lang.Object)>("--gnssmetrics");

        if $z5 == 0 goto label04;

        $r71 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        virtualinvoke $r71.<com.android.server.location.gnss.GnssManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r74, r75, r1);

        exitmonitor r3;

     label03:
        return;

     label04:
        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Location Manager State:");

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r76 = new java.lang.StringBuilder;

        specialinvoke r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current System Time: ");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r77 = staticinvoke <android.util.TimeUtils: java.lang.String logTimeOfDay(long)>($l1);

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r78 = virtualinvoke r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>($r78);

        r79 = new java.lang.StringBuilder;

        specialinvoke r79.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Current Elapsed Time: ");

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r80 = staticinvoke <android.util.TimeUtils: java.lang.String formatDuration(long)>($l2);

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r81 = virtualinvoke r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r81);

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("User Info:");

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r82 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper mUserInfoHelper>;

        virtualinvoke $r82.<com.android.server.location.UserInfoHelper: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r74, $r5, r1);

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Location Settings:");

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r83 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        virtualinvoke $r83.<com.android.server.location.SettingsHelper: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r74, $r5, r1);

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        r84 = new java.lang.StringBuilder;

        specialinvoke r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Battery Saver Location Mode: ");

        $i3 = r0.<com.android.server.location.LocationManagerService: int mBatterySaverMode>;

        $r85 = staticinvoke <android.os.PowerManager: java.lang.String locationPowerSaveModeToString(int)>($i3);

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r86 = virtualinvoke r84.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r86);

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Location Listeners:");

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r87 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mReceivers>;

        $r88 = virtualinvoke $r87.<java.util.HashMap: java.util.Collection values()>();

        r89 = interfaceinvoke $r88.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z6 = interfaceinvoke r89.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label07;

        $r68 = interfaceinvoke r89.<java.util.Iterator: java.lang.Object next()>();

        $r69 = (com.android.server.location.LocationManagerService$Receiver) $r68;

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>($r69);

     label06:
        goto label05;

     label07:
        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Active Records by Provider:");

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r21 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mRecordsByProvider>;

        $r22 = virtualinvoke $r21.<java.util.HashMap: java.util.Set entrySet()>();

        r90 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r56 = interfaceinvoke r90.<java.util.Iterator: java.lang.Object next()>();

        r91 = (java.util.Map$Entry) $r56;

        r92 = new java.lang.StringBuilder;

        specialinvoke r92.<java.lang.StringBuilder: void <init>()>();

        $r57 = interfaceinvoke r91.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r58 = (java.lang.String) $r57;

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r61 = virtualinvoke r92.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r61);

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r63 = interfaceinvoke r91.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r64 = (java.util.ArrayList) $r63;

        r93 = virtualinvoke $r64.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke r93.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r66 = interfaceinvoke r93.<java.util.Iterator: java.lang.Object next()>();

        $r67 = (com.android.server.location.LocationManagerService$UpdateRecord) $r66;

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>($r67);

     label10:
        goto label09;

     label11:
        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label12:
        goto label08;

     label13:
        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Historical Records by Provider:");

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r94 = new java.util.TreeMap;

        $r25 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationRequestStatistics mRequestStatistics>;

        $r26 = $r25.<com.android.server.location.LocationRequestStatistics: java.util.HashMap statistics>;

        specialinvoke r94.<java.util.TreeMap: void <init>(java.util.Map)>($r26);

        $r27 = virtualinvoke r94.<java.util.TreeMap: java.util.Set entrySet()>();

        r95 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z2 = interfaceinvoke r95.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label16;

        $r49 = interfaceinvoke r95.<java.util.Iterator: java.lang.Object next()>();

        r96 = (java.util.Map$Entry) $r49;

        r97 = new java.lang.StringBuilder;

        specialinvoke r97.<java.lang.StringBuilder: void <init>()>();

        $r50 = interfaceinvoke r96.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r50);

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r53 = interfaceinvoke r96.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);

        $r55 = virtualinvoke r97.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r55);

     label15:
        goto label14;

     label16:
        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        $r29 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationRequestStatistics mRequestStatistics>;

        $r30 = $r29.<com.android.server.location.LocationRequestStatistics: com.android.server.location.LocationRequestStatistics$RequestSummaryLimitedHistory history>;

        virtualinvoke $r30.<com.android.server.location.LocationRequestStatistics$RequestSummaryLimitedHistory: void dump(com.android.internal.util.IndentingPrintWriter)>($r5);

        $r31 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.GeofenceManager mGeofenceManager>;

        if $r31 == null goto label17;

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Geofences:");

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r47 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.GeofenceManager mGeofenceManager>;

        virtualinvoke $r47.<com.android.server.location.GeofenceManager: void dump(java.io.PrintWriter)>($r5);

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label17:
        $r32 = r0.<com.android.server.location.LocationManagerService: java.lang.String mExtraLocationControllerPackage>;

        if $r32 == null goto label21;

        r98 = new java.lang.StringBuilder;

        specialinvoke r98.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Location Controller Extra Package: ");

        $r42 = r0.<com.android.server.location.LocationManagerService: java.lang.String mExtraLocationControllerPackage>;

        virtualinvoke r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $z3 = r0.<com.android.server.location.LocationManagerService: boolean mExtraLocationControllerPackageEnabled>;

        if $z3 == 0 goto label19;

     label18:
        r99 = " [enabled]";

        goto label20;

     label19:
        r99 = "[disabled]";

     label20:
        virtualinvoke r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r99);

        $r45 = virtualinvoke r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r45);

     label21:
        exitmonitor r3;

     label22:
        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Location Providers:");

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r100 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r101 = virtualinvoke $r100.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label23:
        $z7 = interfaceinvoke r101.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label24;

        $r39 = interfaceinvoke r101.<java.util.Iterator: java.lang.Object next()>();

        $r40 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r39;

        virtualinvoke $r40.<com.android.server.location.LocationManagerService$LocationProviderManager: void dump(java.io.FileDescriptor,com.android.internal.util.IndentingPrintWriter,java.lang.String[])>(r74, $r5, r1);

        goto label23;

     label24:
        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        r102 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r102;

     label25:
        $r35 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r35 == null goto label26;

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("GNSS:");

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r37 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        virtualinvoke $r37.<com.android.server.location.gnss.GnssManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r74, $r5, r1);

        virtualinvoke $r5.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label26:
        exitmonitor r102;

     label27:
        return;

     label28:
        $r72 := @caughtexception;

     label29:
        exitmonitor r102;

     label30:
        throw $r72;

     label31:
        $r73 := @caughtexception;

     label32:
        exitmonitor r3;

     label33:
        throw $r73;

        catch java.lang.Throwable from label02 to label03 with label31;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label05 to label06 with label31;
        catch java.lang.Throwable from label07 to label08 with label31;
        catch java.lang.Throwable from label08 to label09 with label31;
        catch java.lang.Throwable from label09 to label10 with label31;
        catch java.lang.Throwable from label11 to label12 with label31;
        catch java.lang.Throwable from label13 to label14 with label31;
        catch java.lang.Throwable from label14 to label15 with label31;
        catch java.lang.Throwable from label16 to label17 with label31;
        catch java.lang.Throwable from label17 to label18 with label31;
        catch java.lang.Throwable from label20 to label21 with label31;
        catch java.lang.Throwable from label21 to label22 with label31;
        catch java.lang.Throwable from label25 to label26 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    public void flushGnssBatch(java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1;
        com.android.server.location.gnss.GnssManagerService $r2, $r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        virtualinvoke $r3.<com.android.server.location.gnss.GnssManagerService: void flushGnssBatch(java.lang.String)>(r1);

     label1:
        return;
    }

    public boolean geocoderIsPresent()
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.GeocoderProxy $r1;
        boolean z0;

        r0 := @this: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.GeocoderProxy mGeocodeProvider>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.util.List getAllProviders()
    {
        com.android.server.location.LocationManagerService r0;
        java.util.Iterator r2;
        com.android.server.location.LocationManagerService$LocationProviderManager r3;
        java.util.ArrayList $r4;
        java.util.concurrent.CopyOnWriteArrayList $r5, $r6;
        int $i0;
        java.lang.Object $r7;
        java.lang.String $r8, $r9, $r10;
        boolean $z0, $z2;

        r0 := @this: com.android.server.location.LocationManagerService;

        $r4 = new java.util.ArrayList;

        $r5 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        $i0 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        $r6 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r2 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r7;

        $r8 = "fused";

        $r9 = virtualinvoke r3.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String getName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r10 = virtualinvoke r3.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String getName()>();

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        goto label1;

     label3:
        return $r4;
    }

    public java.lang.String[] getBackgroundThrottlingWhitelist()
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.SettingsHelper $r1;
        java.util.Set $r2;
        java.lang.String[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        $r2 = virtualinvoke $r1.<com.android.server.location.SettingsHelper: java.util.Set getBackgroundThrottlePackageWhitelist()>();

        $r3 = newarray (java.lang.String)[0];

        $r4 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        return $r5;
    }

    public java.lang.String getBestProvider(android.location.Criteria, boolean)
    {
        com.android.server.location.LocationManagerService r0;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.Object r1, $r3;
        java.util.List r2, r7;
        java.lang.String $r4;
        java.lang.Throwable $r5;
        android.location.Criteria r6;

        r0 := @this: com.android.server.location.LocationManagerService;

        r6 := @parameter0: android.location.Criteria;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = virtualinvoke r0.<com.android.server.location.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)>(r6, z0);

     label02:
        r7 = r2;

     label03:
        $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label04;

        r7 = virtualinvoke r0.<com.android.server.location.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)>(null, z0);

     label04:
        exitmonitor r1;

     label05:
        $z2 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label08;

        $z3 = interfaceinvoke r7.<java.util.List: boolean contains(java.lang.Object)>("gps");

        if $z3 == 0 goto label06;

        return "gps";

     label06:
        $z4 = interfaceinvoke r7.<java.util.List: boolean contains(java.lang.Object)>("network");

        if $z4 == 0 goto label07;

        return "network";

     label07:
        $r3 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.lang.String) $r3;

        return $r4;

     label08:
        return null;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean getCurrentLocation(android.location.LocationRequest, android.os.ICancellationSignal, android.location.ILocationListener, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        android.os.ICancellationSignal r1;
        android.location.ILocationListener r2;
        java.lang.String r3, r4, r5;
        android.location.Location r6;
        long l0, $l1, $l2, $l3, $l6;
        com.android.server.location._$$Lambda$LocationManagerService$9pdv9aW0E5m2TQuRDMJXW1ZgLBE $r7;
        java.util.concurrent.TimeUnit $r8;
        byte $b4, $b7;
        com.android.server.location.AppForegroundHelper $r9;
        int $i5;
        boolean $z0;
        com.android.server.location.SettingsHelper $r10;
        android.os.RemoteException $r11;
        android.location.LocationRequest r12;
        android.os.CancellationSignal r14;

        r0 := @this: com.android.server.location.LocationManagerService;

        r12 := @parameter0: android.location.LocationRequest;

        r1 := @parameter1: android.os.ICancellationSignal;

        r2 := @parameter2: android.location.ILocationListener;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 = virtualinvoke r0.<com.android.server.location.LocationManagerService: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String,java.lang.String)>(r12, r3, r4);

        if r6 == null goto label5;

        $r8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        $l2 = virtualinvoke r6.<android.location.Location: long getElapsedRealtimeNanos()>();

        $l3 = $l1 - $l2;

        l0 = virtualinvoke $r8.<java.util.concurrent.TimeUnit: long toMillis(long)>($l3);

        $b4 = l0 cmp 10000L;

        if $b4 >= 0 goto label4;

     label1:
        interfaceinvoke r2.<android.location.ILocationListener: void onLocationChanged(android.location.Location)>(r6);

     label2:
        return 1;

     label3:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("LocationManagerService", $r11);

        return 0;

     label4:
        $r9 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper>;

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = virtualinvoke $r9.<com.android.server.location.AppForegroundHelper: boolean isAppForeground(int)>($i5);

        if $z0 != 0 goto label5;

        $r10 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        $l6 = virtualinvoke $r10.<com.android.server.location.SettingsHelper: long getBackgroundThrottleIntervalMs()>();

        $b7 = l0 cmp $l6;

        if $b7 >= 0 goto label5;

        return 0;

     label5:
        virtualinvoke r0.<com.android.server.location.LocationManagerService: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String,java.lang.String,java.lang.String)>(r12, r2, null, r3, r4, r5);

        r14 = staticinvoke <android.os.CancellationSignal: android.os.CancellationSignal fromTransport(android.os.ICancellationSignal)>(r1);

        if r14 == null goto label6;

        $r7 = new com.android.server.location._$$Lambda$LocationManagerService$9pdv9aW0E5m2TQuRDMJXW1ZgLBE;

        specialinvoke $r7.<com.android.server.location._$$Lambda$LocationManagerService$9pdv9aW0E5m2TQuRDMJXW1ZgLBE: void <init>(com.android.server.location.LocationManagerService,android.location.ILocationListener)>(r0, r2);

        virtualinvoke r14.<android.os.CancellationSignal: void setOnCancelListener(android.os.CancellationSignal$OnCancelListener)>($r7);

     label6:
        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getExtraLocationControllerPackage()
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.location.LocationManagerService: java.lang.String mExtraLocationControllerPackage>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String getFromLocation(double, double, int, android.location.GeocoderParams, java.util.List)
    {
        com.android.server.location.LocationManagerService r0;
        double d0, d1;
        int i0;
        android.location.GeocoderParams r1;
        java.util.List r2;
        com.android.server.location.GeocoderProxy r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.location.LocationManagerService;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        r1 := @parameter3: android.location.GeocoderParams;

        r2 := @parameter4: java.util.List;

        r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.GeocoderProxy mGeocodeProvider>;

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.<com.android.server.location.GeocoderProxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>(d0, d1, i0, r1, r2);

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getFromLocationName(java.lang.String, double, double, double, double, int, android.location.GeocoderParams, java.util.List)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1, $r5;
        double d0, d1, d2, d3;
        int i0;
        android.location.GeocoderParams r2;
        java.util.List r3;
        com.android.server.location.GeocoderProxy r4;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        i0 := @parameter5: int;

        r2 := @parameter6: android.location.GeocoderParams;

        r3 := @parameter7: java.util.List;

        r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.GeocoderProxy mGeocodeProvider>;

        if r4 == null goto label1;

        $r5 = virtualinvoke r4.<com.android.server.location.GeocoderProxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>(r1, d0, d1, d2, d3, i0, r2, r3);

        return $r5;

     label1:
        return null;
    }

    public int getGnssBatchSize(java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1;
        com.android.server.location.gnss.GnssManagerService $r2, $r3;
        int i0;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r2 != null goto label1;

        i0 = 0;

        goto label2;

     label1:
        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        i0 = virtualinvoke $r3.<com.android.server.location.gnss.GnssManagerService: int getGnssBatchSize(java.lang.String)>(r1);

     label2:
        return i0;
    }

    public long getGnssCapabilities()
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.gnss.GnssManagerService $r1, $r2;
        long l0;

        r0 := @this: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r1 != null goto label1;

        l0 = -1L;

        goto label2;

     label1:
        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        l0 = virtualinvoke $r2.<com.android.server.location.gnss.GnssManagerService: long getGnssCapabilities()>();

     label2:
        return l0;
    }

    public java.lang.String getGnssHardwareModelName()
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.gnss.GnssManagerService $r1, $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r1 != null goto label1;

        r3 = "";

        goto label2;

     label1:
        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        r3 = virtualinvoke $r2.<com.android.server.location.gnss.GnssManagerService: java.lang.String getGnssHardwareModelName()>();

     label2:
        return r3;
    }

    public android.location.LocationTime getGnssTimeMillis()
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1;
        android.location.Location r2;
        long l0, l1, $l3, $l4, $l5;
        int $i2;
        java.util.concurrent.TimeUnit $r3;
        java.lang.Throwable $r4;
        com.android.server.location.LocationManagerService$LocationProviderManager r5;
        android.location.LocationTime r6;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r5 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>("gps");

     label02:
        if r5 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return null;

     label05:
        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r2 = virtualinvoke r5.<com.android.server.location.LocationManagerService$LocationProviderManager: android.location.Location getLastLocation(int,int)>($i2, 2);

     label06:
        if r2 != null goto label09;

     label07:
        exitmonitor r1;

     label08:
        return null;

     label09:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l3 = virtualinvoke r2.<android.location.Location: long getElapsedRealtimeAgeNanos(long)>(l0);

        l1 = virtualinvoke $r3.<java.util.concurrent.TimeUnit: long toMillis(long)>($l3);

        r6 = new android.location.LocationTime;

        $l4 = virtualinvoke r2.<android.location.Location: long getTime()>();

        $l5 = $l4 + l1;

        specialinvoke r6.<android.location.LocationTime: void <init>(long,long)>($l5, l0);

        exitmonitor r1;

     label10:
        return r6;

     label11:
        $r4 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public int getGnssYearOfHardware()
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.gnss.GnssManagerService $r1, $r2;
        int i0;

        r0 := @this: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r1 != null goto label1;

        i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        i0 = virtualinvoke $r2.<com.android.server.location.gnss.GnssManagerService: int getGnssYearOfHardware()>();

     label2:
        return i0;
    }

    public java.lang.String[] getIgnoreSettingsWhitelist()
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.SettingsHelper $r1;
        java.util.Set $r2;
        java.lang.String[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        $r2 = virtualinvoke $r1.<com.android.server.location.SettingsHelper: java.util.Set getIgnoreSettingsPackageWhitelist()>();

        $r3 = newarray (java.lang.String)[0];

        $r4 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        return $r5;
    }

    public android.location.Location getLastLocation(android.location.LocationRequest, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        boolean z0, $z1, $z2, $z3, $z4;
        com.android.server.location.LocationManagerService$LocationProviderManager r1;
        android.content.Context $r2;
        java.lang.String $r3, $r6, r10, r11;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.server.location.SettingsHelper $r4;
        com.android.server.location.UserInfoHelper $r5;
        com.android.server.location.AppOpsHelper $r7;
        java.lang.Throwable $r8;
        android.location.LocationRequest r9, r12;
        com.android.server.location.CallerIdentity r13;
        android.location.Location r14, r16;
        java.lang.Object r15;

        r0 := @this: com.android.server.location.LocationManagerService;

        r9 := @parameter0: android.location.LocationRequest;

        r10 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        r12 = r9;

        if r9 != null goto label01;

        r12 = <com.android.server.location.LocationManagerService: android.location.LocationRequest DEFAULT_LOCATION_REQUEST>;

     label01:
        $r2 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        r13 = staticinvoke <com.android.server.location.CallerIdentity: com.android.server.location.CallerIdentity fromBinderUnsafe(android.content.Context,java.lang.String,java.lang.String)>($r2, r10, r11);

        virtualinvoke r13.<com.android.server.location.CallerIdentity: void enforceLocationPermission()>();

        $r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        $i0 = r13.<com.android.server.location.CallerIdentity: int userId>;

        $r3 = r13.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        z0 = virtualinvoke $r4.<com.android.server.location.SettingsHelper: boolean isLocationPackageBlacklisted(int,java.lang.String)>($i0, $r3);

        r14 = null;

        if z0 == 0 goto label02;

        return null;

     label02:
        $r5 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.UserInfoHelper mUserInfoHelper>;

        $i1 = r13.<com.android.server.location.CallerIdentity: int userId>;

        $z1 = virtualinvoke $r5.<com.android.server.location.UserInfoHelper: boolean isCurrentUserId(int)>($i1);

        if $z1 != 0 goto label03;

        return null;

     label03:
        r15 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r15;

     label04:
        $r6 = virtualinvoke r12.<android.location.LocationRequest: java.lang.String getProvider()>();

        r1 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>($r6);

     label05:
        if r1 != null goto label08;

     label06:
        exitmonitor r15;

     label07:
        return null;

     label08:
        $i2 = r13.<com.android.server.location.CallerIdentity: int userId>;

        $z2 = virtualinvoke r1.<com.android.server.location.LocationManagerService$LocationProviderManager: boolean isEnabled(int)>($i2);

        if $z2 != 0 goto label10;

        $z4 = virtualinvoke r12.<android.location.LocationRequest: boolean isLocationSettingsIgnored()>();

        if $z4 != 0 goto label10;

        exitmonitor r15;

     label09:
        return null;

     label10:
        $r7 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        $z3 = virtualinvoke $r7.<com.android.server.location.AppOpsHelper: boolean noteLocationAccess(com.android.server.location.CallerIdentity)>(r13);

        if $z3 != 0 goto label12;

        exitmonitor r15;

     label11:
        return null;

     label12:
        $i4 = r13.<com.android.server.location.CallerIdentity: int userId>;

        $i3 = r13.<com.android.server.location.CallerIdentity: int permissionLevel>;

        r16 = virtualinvoke r1.<com.android.server.location.LocationManagerService$LocationProviderManager: android.location.Location getLastLocation(int,int)>($i4, $i3);

     label13:
        if r16 == null goto label15;

     label14:
        r14 = new android.location.Location;

        specialinvoke r14.<android.location.Location: void <init>(android.location.Location)>(r16);

     label15:
        exitmonitor r15;

     label16:
        return r14;

     label17:
        $r8 := @caughtexception;

     label18:
        exitmonitor r15;

     label19:
        throw $r8;

        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public java.util.List getProviderPackages(java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        android.content.Context $r1;
        java.util.Set $r3;
        java.lang.String r4;
        com.android.server.location.LocationManagerService$LocationProviderManager r5;
        java.lang.Object r6;
        java.util.ArrayList r7;
        java.util.List r8;

        r0 := @this: com.android.server.location.LocationManagerService;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_DEVICE_CONFIG", null);

        r5 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>(r4);

        if r5 != null goto label1;

        r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label2;

     label1:
        r7 = new java.util.ArrayList;

        $r3 = virtualinvoke r5.<com.android.server.location.LocationManagerService$LocationProviderManager: java.util.Set getPackages()>();

        specialinvoke r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        r6 = r7;

     label2:
        r8 = (java.util.List) r6;

        return r8;
    }

    public com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        com.android.internal.location.ProviderProperties $r1;
        java.lang.String r2;
        com.android.server.location.LocationManagerService$LocationProviderManager r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        r2 := @parameter0: java.lang.String;

        r3 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>(r2);

        if r3 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r3.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.internal.location.ProviderProperties getProperties()>();

        return $r1;
    }

    public java.util.List getProviders(android.location.Criteria, boolean)
    {
        com.android.server.location.LocationManagerService r0;
        boolean z0, $z1, $z2, $z4, $z5, $z6;
        java.lang.Object r1, $r9;
        java.util.ArrayList r2;
        java.util.Iterator r3;
        com.android.server.location.LocationManagerService$LocationProviderManager r4;
        java.lang.String r5, $r10;
        android.content.Context $r6;
        java.util.concurrent.CopyOnWriteArrayList $r7, $r8;
        int $i0, $i1;
        com.android.internal.location.ProviderProperties $r11;
        java.util.List $r12;
        java.lang.Throwable $r13;
        android.location.Criteria r14;

        r0 := @this: com.android.server.location.LocationManagerService;

        r14 := @parameter0: android.location.Criteria;

        z0 := @parameter1: boolean;

        $r6 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $z1 = staticinvoke <com.android.server.location.CallerIdentity: boolean checkCallingOrSelfLocationPermission(android.content.Context)>($r6);

        if $z1 != 0 goto label01;

        $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r12;

     label01:
        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        r2 = new java.util.ArrayList;

        $r7 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        $i0 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: int size()>();

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>($i0);

        $r8 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        r3 = virtualinvoke $r8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label03:
        $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label13;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.location.LocationManagerService$LocationProviderManager) $r9;

        r5 = virtualinvoke r4.<com.android.server.location.LocationManagerService$LocationProviderManager: java.lang.String getName()>();

        $r10 = "fused";

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z2 == 0 goto label05;

     label04:
        goto label03;

     label05:
        if z0 == 0 goto label08;

     label06:
        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $z5 = virtualinvoke r4.<com.android.server.location.LocationManagerService$LocationProviderManager: boolean isEnabled(int)>($i1);

        if $z5 != 0 goto label08;

     label07:
        goto label03;

     label08:
        if r14 == null goto label11;

     label09:
        $r11 = virtualinvoke r4.<com.android.server.location.LocationManagerService$LocationProviderManager: com.android.internal.location.ProviderProperties getProperties()>();

        $z4 = staticinvoke <android.location.LocationProvider: boolean propertiesMeetCriteria(java.lang.String,com.android.internal.location.ProviderProperties,android.location.Criteria)>(r5, $r11, r14);

        if $z4 != 0 goto label11;

     label10:
        goto label03;

     label11:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label12:
        goto label03;

     label13:
        exitmonitor r1;

     label14:
        return r2;

     label15:
        $r13 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r13;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public java.util.List getTestProviderCurrentRequests(java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.util.List $r7;
        com.android.server.location.LocationManagerService$LocationProviderManager r8;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: java.lang.String;

        r8 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>(r1);

        if r8 == null goto label1;

        $r7 = virtualinvoke r8.<com.android.server.location.LocationManagerService$LocationProviderManager: java.util.List getMockProviderRequests()>();

        return $r7;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("provider doesn\'t exist: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public int handleShellCommand(android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, java.lang.String[])
    {
        com.android.server.location.LocationManagerService r0;
        android.os.ParcelFileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        com.android.server.location.LocationShellCommand $r5;
        java.io.FileDescriptor $r6, $r7, $r8;
        int $i0;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        r4 := @parameter3: java.lang.String[];

        $r5 = new com.android.server.location.LocationShellCommand;

        specialinvoke $r5.<com.android.server.location.LocationShellCommand: void <init>(com.android.server.location.LocationManagerService)>(r0);

        $r6 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r7 = virtualinvoke r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r8 = virtualinvoke r3.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $i0 = virtualinvoke $r5.<com.android.server.location.LocationShellCommand: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[])>(r0, $r6, $r7, $r8, r4);

        return $i0;
    }

    public void injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.GnssMeasurementCorrections r1;
        java.lang.String r2;
        com.android.server.location.gnss.GnssManagerService $r3, $r4;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.location.GnssMeasurementCorrections;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        virtualinvoke $r4.<com.android.server.location.gnss.GnssManagerService: void injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections,java.lang.String)>(r1, r2);

     label1:
        return;
    }

    public void injectLocation(android.location.Location)
    {
        com.android.server.location.LocationManagerService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.location.LocationManagerService$LocationProviderManager r2;
        android.content.Context $r3, $r4;
        boolean $z0, $z1;
        java.lang.String $r5;
        android.location.Location $r7, r9;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.location.LocationManagerService;

        r9 := @parameter0: android.location.Location;

        $r3 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", null);

        $r4 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_FINE_LOCATION", null);

        $z0 = virtualinvoke r9.<android.location.Location: boolean isComplete()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>($z0);

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r5 = virtualinvoke r9.<android.location.Location: java.lang.String getProvider()>();

        r2 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>($r5);

     label2:
        if r2 == null goto label4;

     label3:
        $z1 = virtualinvoke r2.<com.android.server.location.LocationManagerService$LocationProviderManager: boolean isEnabled(int)>(i0);

        if $z1 == 0 goto label4;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r9);

        $r7 = (android.location.Location) r9;

        virtualinvoke r2.<com.android.server.location.LocationManagerService$LocationProviderManager: void injectLastLocation(android.location.Location,int)>($r7, i0);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isExtraLocationControllerPackageEnabled()
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1;
        boolean $z0, z1;
        java.lang.String $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.server.location.LocationManagerService: boolean mExtraLocationControllerPackageEnabled>;

        if $z0 == 0 goto label3;

        $r3 = r0.<com.android.server.location.LocationManagerService: java.lang.String mExtraLocationControllerPackage>;

        if $r3 == null goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z1;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isLocationEnabledForUser(int)
    {
        com.android.server.location.LocationManagerService r0;
        int $i0, $i1, i2, i3;
        com.android.server.location.SettingsHelper $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.LocationManagerService;

        i2 := @parameter0: int;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i3 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i0, $i1, i2, 0, 0, "isLocationEnabledForUser", null);

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        $z0 = virtualinvoke $r1.<com.android.server.location.SettingsHelper: boolean isLocationEnabled(int)>(i3);

        return $z0;
    }

    public boolean isProviderEnabledForUser(java.lang.String, int)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1, $r2;
        int $i0, $i1, i2, i3;
        boolean $z0, $z1;
        com.android.server.location.LocationManagerService$LocalService $r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i3 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i0, $i1, i2, 0, 0, "isProviderEnabledForUser", null);

        $r2 = "fused";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocalService mLocalService>;

        $z1 = virtualinvoke $r3.<com.android.server.location.LocationManagerService$LocalService: boolean isProviderEnabledForUser(java.lang.String,int)>(r1, i3);

        return $z1;
    }

    public boolean isProviderPackage(java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1;
        android.content.Context $r2;
        com.android.server.location.LocationManagerService$LocalService $r3;
        boolean $z0;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_DEVICE_CONFIG", null);

        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocalService mLocalService>;

        $z0 = virtualinvoke $r3.<com.android.server.location.LocationManagerService$LocalService: boolean isProviderPackage(java.lang.String)>(r1);

        return $z0;
    }

    public void lambda$getCurrentLocation$6$LocationManagerService(android.location.ILocationListener)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.ILocationListener r1;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.location.ILocationListener;

        virtualinvoke r0.<com.android.server.location.LocationManagerService: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent)>(r1, null);

        return;
    }

    public java.lang.String[] lambda$new$0$LocationManagerService(int)
    {
        com.android.server.location.LocationManagerService r0;
        int i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.String[] $r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236048);

        return $r3;
    }

    public java.lang.String[] lambda$new$1$LocationManagerService(int)
    {
        com.android.server.location.LocationManagerService r0;
        int i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.String[] $r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236047);

        return $r3;
    }

    public void lambda$onSystemReady$2$LocationManagerService()
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.location.LocationManagerService: void onPermissionsChangedLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$onSystemReady$3$LocationManagerService(int)
    {
        com.android.server.location.LocationManagerService r0;
        int i0;
        com.android.server.location._$$Lambda$LocationManagerService$HF50oc8JIzIfijGBFKSCGnMQ53g $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.location.LocationManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.location.LocationManagerService: android.os.Handler mHandler>;

        $r1 = new com.android.server.location._$$Lambda$LocationManagerService$HF50oc8JIzIfijGBFKSCGnMQ53g;

        specialinvoke $r1.<com.android.server.location._$$Lambda$LocationManagerService$HF50oc8JIzIfijGBFKSCGnMQ53g: void <init>(com.android.server.location.LocationManagerService)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void lambda$onSystemReady$4$LocationManagerService(android.os.PowerSaveState)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1;
        int $i0;
        java.lang.Throwable $r2;
        android.os.PowerSaveState r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        r3 := @parameter0: android.os.PowerSaveState;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = r3.<android.os.PowerSaveState: int locationMode>;

        specialinvoke r0.<com.android.server.location.LocationManagerService: void onBatterySaverModeChangedLocked(int)>($i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$onSystemReady$5$LocationManagerService(android.os.PowerSaveState)
    {
        com.android.server.location.LocationManagerService r0;
        android.os.PowerSaveState r1;
        com.android.server.location._$$Lambda$LocationManagerService$6S6V_wdmdYj0ww0_eUe_fkY_Tp4 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.os.PowerSaveState;

        $r3 = r0.<com.android.server.location.LocationManagerService: android.os.Handler mHandler>;

        $r2 = new com.android.server.location._$$Lambda$LocationManagerService$6S6V_wdmdYj0ww0_eUe_fkY_Tp4;

        specialinvoke $r2.<com.android.server.location._$$Lambda$LocationManagerService$6S6V_wdmdYj0ww0_eUe_fkY_Tp4: void <init>(com.android.server.location.LocationManagerService,android.os.PowerSaveState)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void locationCallbackFinished(android.location.ILocationListener)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1, $r4;
        java.util.HashMap $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r5;
        android.location.ILocationListener r6;
        com.android.server.location.LocationManagerService$Receiver r7;

        r0 := @this: com.android.server.location.LocationManagerService;

        r6 := @parameter0: android.location.ILocationListener;

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.location.LocationManagerService: java.util.HashMap mReceivers>;

        $r3 = interfaceinvoke r6.<android.location.ILocationListener: android.os.IBinder asBinder()>();

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r7 = (com.android.server.location.LocationManagerService$Receiver) $r4;

     label2:
        if r7 == null goto label4;

     label3:
        staticinvoke <com.android.server.location.LocationManagerService$Receiver: void access$2400(com.android.server.location.LocationManagerService$Receiver)>(r7);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean registerGnssStatusCallback(android.location.IGnssStatusListener, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.IGnssStatusListener r1;
        java.lang.String r2, r3;
        com.android.server.location.gnss.GnssManagerService $r4, $r5;
        boolean $z0, z1;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.location.IGnssStatusListener;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r4 == null goto label1;

        $r5 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        $z0 = virtualinvoke $r5.<com.android.server.location.gnss.GnssManagerService: boolean registerGnssStatusCallback(android.location.IGnssStatusListener,java.lang.String,java.lang.String)>(r1, r2, r3);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void removeGeofence(android.location.Geofence, android.app.PendingIntent, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        android.app.PendingIntent r1;
        java.lang.String r2, $r8, $r17;
        long l0;
        java.lang.StringBuilder $r4, $r12;
        java.lang.IllegalArgumentException $r7;
        boolean $z0;
        com.android.server.location.LocationUsageLogger $r9;
        com.android.server.location.AppForegroundHelper $r10;
        int $i1, $i2;
        com.android.server.location.GeofenceManager $r11;
        java.lang.Throwable $r18;
        android.location.Geofence r19;

        r0 := @this: com.android.server.location.LocationManagerService;

        r19 := @parameter0: android.location.Geofence;

        r1 := @parameter1: android.app.PendingIntent;

        r2 := @parameter2: java.lang.String;

        if r1 == null goto label5;

        $z0 = <com.android.server.location.LocationManagerService: boolean D>;

        if $z0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeGeofence: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationManagerService", $r17);

     label1:
        $r9 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationUsageLogger mLocationUsageLogger>;

        $r10 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = virtualinvoke $r10.<com.android.server.location.AppForegroundHelper: int getImportance(int)>($i1);

        virtualinvoke $r9.<com.android.server.location.LocationUsageLogger: void logLocationApiUsage(int,int,java.lang.String,android.location.LocationRequest,boolean,boolean,android.location.Geofence,int)>(1, 4, r2, null, 0, 1, r19, $i2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r11 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.GeofenceManager mGeofenceManager>;

        virtualinvoke $r11.<com.android.server.location.GeofenceManager: void removeFence(android.location.Geofence,android.app.PendingIntent)>(r19, r1);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r18 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r18;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid pending intent: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(null);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void removeGnssAntennaInfoListener(android.location.IGnssAntennaInfoListener)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.IGnssAntennaInfoListener r1;
        com.android.server.location.gnss.GnssManagerService $r2, $r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.location.IGnssAntennaInfoListener;

        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        virtualinvoke $r3.<com.android.server.location.gnss.GnssManagerService: void removeGnssAntennaInfoListener(android.location.IGnssAntennaInfoListener)>(r1);

     label1:
        return;
    }

    public void removeGnssBatchingCallback()
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.gnss.GnssManagerService $r1, $r2;

        r0 := @this: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        virtualinvoke $r2.<com.android.server.location.gnss.GnssManagerService: void removeGnssBatchingCallback()>();

     label1:
        return;
    }

    public void removeGnssMeasurementsListener(android.location.IGnssMeasurementsListener)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.IGnssMeasurementsListener r1;
        com.android.server.location.gnss.GnssManagerService $r2, $r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.location.IGnssMeasurementsListener;

        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        virtualinvoke $r3.<com.android.server.location.gnss.GnssManagerService: void removeGnssMeasurementsListener(android.location.IGnssMeasurementsListener)>(r1);

     label1:
        return;
    }

    public void removeGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.IGnssNavigationMessageListener r1;
        com.android.server.location.gnss.GnssManagerService $r2, $r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.location.IGnssNavigationMessageListener;

        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        virtualinvoke $r3.<com.android.server.location.gnss.GnssManagerService: void removeGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener)>(r1);

     label1:
        return;
    }

    public void removeTestProvider(java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1, r6, r7;
        android.content.Context $r2;
        com.android.server.location.AppOpsHelper $r3;
        boolean $z0, $z1;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        java.lang.Throwable $r5;
        com.android.server.location.CallerIdentity r8;
        java.lang.Object r9;
        com.android.server.location.LocationManagerService$LocationProviderManager r10;

        r0 := @this: com.android.server.location.LocationManagerService;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $r2 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        r8 = staticinvoke <com.android.server.location.CallerIdentity: com.android.server.location.CallerIdentity fromBinderUnsafe(android.content.Context,java.lang.String,java.lang.String)>($r2, r7, r1);

        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        $z0 = virtualinvoke $r3.<com.android.server.location.AppOpsHelper: boolean noteMockLocationAccess(com.android.server.location.CallerIdentity)>(r8);

        if $z0 != 0 goto label01;

        return;

     label01:
        r9 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r9;

     label02:
        r10 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>(r6);

     label03:
        if r10 != null goto label06;

     label04:
        exitmonitor r9;

     label05:
        return;

     label06:
        virtualinvoke r10.<com.android.server.location.LocationManagerService$LocationProviderManager: void setMockProvider(com.android.server.location.MockProvider)>(null);

        $z1 = virtualinvoke r10.<com.android.server.location.LocationManagerService$LocationProviderManager: boolean hasProvider()>();

        if $z1 != 0 goto label07;

        $r4 = r0.<com.android.server.location.LocationManagerService: java.util.concurrent.CopyOnWriteArrayList mProviderManagers>;

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r10);

     label07:
        exitmonitor r9;

     label08:
        return;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r9;

     label11:
        throw $r5;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void removeUpdates(android.location.ILocationListener, android.app.PendingIntent)
    {
        com.android.server.location.LocationManagerService r0;
        android.app.PendingIntent r1;
        java.lang.Object r2;
        java.lang.IllegalArgumentException $r3, $r4;
        java.lang.Throwable $r5;
        android.location.ILocationListener r6;
        com.android.server.location.LocationManagerService$Receiver r7;

        r0 := @this: com.android.server.location.LocationManagerService;

        r6 := @parameter0: android.location.ILocationListener;

        r1 := @parameter1: android.app.PendingIntent;

        if r1 != null goto label02;

        if r6 == null goto label01;

        goto label02;

     label01:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("need either listener or intent");

        throw $r4;

     label02:
        if r1 == null goto label04;

        if r6 != null goto label03;

        goto label04;

     label03:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cannot register both listener and intent");

        throw $r3;

     label04:
        r2 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r2;

        if r1 == null goto label07;

     label05:
        r7 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$Receiver getReceiverLocked(android.app.PendingIntent,com.android.server.location.CallerIdentity,android.os.WorkSource,boolean)>(r1, null, null, 0);

     label06:
        goto label08;

     label07:
        r7 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$Receiver getReceiverLocked(android.location.ILocationListener,com.android.server.location.CallerIdentity,android.os.WorkSource,boolean)>(r6, null, null, 0);

     label08:
        if r7 == null goto label10;

     label09:
        specialinvoke r0.<com.android.server.location.LocationManagerService: void removeUpdatesLocked(com.android.server.location.LocationManagerService$Receiver)>(r7);

     label10:
        exitmonitor r2;

     label11:
        return;

     label12:
        $r5 := @caughtexception;

     label13:
        exitmonitor r2;

     label14:
        throw $r5;

        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void requestGeofence(android.location.LocationRequest, android.location.Geofence, android.app.PendingIntent, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.Geofence r1;
        android.app.PendingIntent r2;
        java.lang.String r3, $r7, $r20, r22;
        com.android.server.location.CallerIdentity r4;
        android.location.LocationRequest r5, r21;
        android.content.Context $r6, $r9;
        int $i0, $i1, $i2, $i3;
        boolean $z0, z1;
        com.android.server.location.AppForegroundHelper $r10;
        com.android.server.location.LocationUsageLogger $r11;
        com.android.server.location.GeofenceManager $r12;
        java.lang.StringBuilder $r13;

        r0 := @this: com.android.server.location.LocationManagerService;

        r21 := @parameter0: android.location.LocationRequest;

        r1 := @parameter1: android.location.Geofence;

        r2 := @parameter2: android.app.PendingIntent;

        r3 := @parameter3: java.lang.String;

        r22 := @parameter4: java.lang.String;

        if r21 != null goto label1;

        r21 = <com.android.server.location.LocationManagerService: android.location.LocationRequest DEFAULT_LOCATION_REQUEST>;

        goto label1;

     label1:
        $r6 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $r7 = staticinvoke <android.app.AppOpsManager: java.lang.String toReceiverId(android.app.PendingIntent)>(r2);

        r4 = staticinvoke <com.android.server.location.CallerIdentity: com.android.server.location.CallerIdentity fromBinder(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>($r6, r3, r22, $r7);

        virtualinvoke r4.<com.android.server.location.CallerIdentity: void enforceLocationPermission()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r9 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $i0 = virtualinvoke $r9.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.LOCATION_HARDWARE");

        if $i0 != 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        r5 = specialinvoke r0.<com.android.server.location.LocationManagerService: android.location.LocationRequest createSanitizedRequest(android.location.LocationRequest,com.android.server.location.CallerIdentity,boolean)>(r21, r4, z1);

        $z0 = <com.android.server.location.LocationManagerService: boolean D>;

        if $z0 == 0 goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestGeofence: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r20 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationManagerService", $r20);

     label4:
        $i1 = r4.<com.android.server.location.CallerIdentity: int userId>;

        if $i1 == 0 goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LocationManagerService", "proximity alerts are currently available only to the primary user");

        return;

     label5:
        $r11 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationUsageLogger mLocationUsageLogger>;

        $r10 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper>;

        $i2 = r4.<com.android.server.location.CallerIdentity: int uid>;

        $i3 = virtualinvoke $r10.<com.android.server.location.AppForegroundHelper: int getImportance(int)>($i2);

        virtualinvoke $r11.<com.android.server.location.LocationUsageLogger: void logLocationApiUsage(int,int,java.lang.String,android.location.LocationRequest,boolean,boolean,android.location.Geofence,int)>(0, 4, r3, r21, 0, 1, r1, $i3);

        $r12 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.GeofenceManager mGeofenceManager>;

        virtualinvoke $r12.<com.android.server.location.GeofenceManager: void addFence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,com.android.server.location.CallerIdentity)>(r5, r1, r2, r4);

        return;
    }

    public void requestLocationUpdates(android.location.LocationRequest, android.location.ILocationListener, android.app.PendingIntent, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.ILocationListener r1;
        android.app.PendingIntent r2;
        com.android.server.location.CallerIdentity r3;
        boolean z0, $z1, $z2, z3, z4, z5;
        com.android.server.location.LocationUsageLogger r4;
        android.content.Context $r5, $r9, $r10, $r11, $r19;
        int $i0, $i1, $i2;
        com.android.server.location.AppForegroundHelper $r6;
        java.lang.IllegalArgumentException $r7, $r8;
        java.lang.Throwable $r12, $r13, $r14, r24;
        android.location.LocationRequest r15, r21;
        java.lang.String r16, r17, r18;
        android.os.WorkSource r20;
        java.lang.Object r22;
        com.android.server.location.LocationManagerService$Receiver r23;

        r0 := @this: com.android.server.location.LocationManagerService;

        r15 := @parameter0: android.location.LocationRequest;

        r1 := @parameter1: android.location.ILocationListener;

        r2 := @parameter2: android.app.PendingIntent;

        r16 := @parameter3: java.lang.String;

        r17 := @parameter4: java.lang.String;

        r18 := @parameter5: java.lang.String;

        if r15 != null goto label01;

        r15 = <com.android.server.location.LocationManagerService: android.location.LocationRequest DEFAULT_LOCATION_REQUEST>;

        goto label01;

     label01:
        if r18 != null goto label02;

        if r2 == null goto label02;

        r18 = staticinvoke <android.app.AppOpsManager: java.lang.String toReceiverId(android.app.PendingIntent)>(r2);

        goto label02;

     label02:
        $r19 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        r3 = staticinvoke <com.android.server.location.CallerIdentity: com.android.server.location.CallerIdentity fromBinder(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>($r19, r16, r17, r18);

        virtualinvoke r3.<com.android.server.location.CallerIdentity: void enforceLocationPermission()>();

        r20 = virtualinvoke r15.<android.location.LocationRequest: android.os.WorkSource getWorkSource()>();

        if r20 == null goto label03;

        $z2 = virtualinvoke r20.<android.os.WorkSource: boolean isEmpty()>();

        if $z2 != 0 goto label03;

        $r11 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        virtualinvoke $r11.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.UPDATE_DEVICE_STATS", null);

     label03:
        z0 = virtualinvoke r15.<android.location.LocationRequest: boolean getHideFromAppOps()>();

        if z0 == 0 goto label04;

        $r10 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        virtualinvoke $r10.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.UPDATE_APP_OPS_STATS", null);

     label04:
        $z1 = virtualinvoke r15.<android.location.LocationRequest: boolean isLocationSettingsIgnored()>();

        if $z1 == 0 goto label05;

        $r9 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        virtualinvoke $r9.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SECURE_SETTINGS", null);

     label05:
        $r5 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        $i0 = virtualinvoke $r5.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.LOCATION_HARDWARE");

        if $i0 != 0 goto label06;

        z3 = 1;

        goto label07;

     label06:
        z3 = 0;

     label07:
        r21 = specialinvoke r0.<com.android.server.location.LocationManagerService: android.location.LocationRequest createSanitizedRequest(android.location.LocationRequest,com.android.server.location.CallerIdentity,boolean)>(r15, r3, z3);

        if r2 != null goto label09;

        if r1 == null goto label08;

        goto label09;

     label08:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("need either listener or intent");

        throw $r8;

     label09:
        if r2 == null goto label11;

        if r1 != null goto label10;

        goto label11;

     label10:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cannot register both listener and intent");

        throw $r7;

     label11:
        r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationUsageLogger mLocationUsageLogger>;

        if r1 == null goto label12;

        z4 = 1;

        goto label13;

     label12:
        z4 = 0;

     label13:
        if r2 == null goto label14;

        z5 = 1;

        goto label15;

     label14:
        z5 = 0;

     label15:
        $r6 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper>;

        $i1 = r3.<com.android.server.location.CallerIdentity: int uid>;

        $i2 = virtualinvoke $r6.<com.android.server.location.AppForegroundHelper: int getImportance(int)>($i1);

        virtualinvoke r4.<com.android.server.location.LocationUsageLogger: void logLocationApiUsage(int,int,java.lang.String,android.location.LocationRequest,boolean,boolean,android.location.Geofence,int)>(0, 1, r16, r15, z4, z5, null, $i2);

        r22 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r22;

        if r2 == null goto label19;

     label16:
        r23 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$Receiver getReceiverLocked(android.app.PendingIntent,com.android.server.location.CallerIdentity,android.os.WorkSource,boolean)>(r2, r3, r20, z0);

     label17:
        goto label20;

     label18:
        $r14 := @caughtexception;

        r24 = $r14;

        goto label26;

     label19:
        r23 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$Receiver getReceiverLocked(android.location.ILocationListener,com.android.server.location.CallerIdentity,android.os.WorkSource,boolean)>(r1, r3, r20, z0);

     label20:
        if r23 == null goto label23;

     label21:
        specialinvoke r0.<com.android.server.location.LocationManagerService: void requestLocationUpdatesLocked(android.location.LocationRequest,com.android.server.location.LocationManagerService$Receiver)>(r21, r23);

     label22:
        goto label23;

     label23:
        exitmonitor r22;

     label24:
        return;

     label25:
        $r13 := @caughtexception;

        r24 = $r13;

     label26:
        exitmonitor r22;

     label27:
        throw r24;

     label28:
        $r12 := @caughtexception;

        r24 = $r12;

        goto label26;

        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
    }

    public boolean sendExtraCommand(java.lang.String, java.lang.String, android.os.Bundle)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1, r2, $r8, $r12;
        android.os.Bundle r3;
        com.android.server.location.LocationManagerService$LocationProviderManager r4;
        int i0, i1;
        android.content.Context $r5, $r6;
        com.android.server.location.LocationUsageLogger $r9, $r10;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        $r5 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        staticinvoke <com.android.server.location.CallerIdentity: void enforceCallingOrSelfLocationPermission(android.content.Context)>($r5);

        $r6 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", null);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r8 = (java.lang.String) r1;

        r4 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>($r8);

        if r4 == null goto label1;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r12 = (java.lang.String) r2;

        virtualinvoke r4.<com.android.server.location.LocationManagerService$LocationProviderManager: void sendExtraCommand(int,int,java.lang.String,android.os.Bundle)>(i0, i1, $r12, r3);

     label1:
        $r9 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationUsageLogger mLocationUsageLogger>;

        virtualinvoke $r9.<com.android.server.location.LocationUsageLogger: void logLocationApiUsage(int,int,java.lang.String)>(0, 5, r1);

        $r10 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationUsageLogger mLocationUsageLogger>;

        virtualinvoke $r10.<com.android.server.location.LocationUsageLogger: void logLocationApiUsage(int,int,java.lang.String)>(1, 5, r1);

        return 1;
    }

    public void setExtraLocationControllerPackage(java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.Object r1;
        android.content.Context $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.location.LocationManagerService;

        r4 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", "android.permission.LOCATION_HARDWARE permission required");

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.location.LocationManagerService: java.lang.String mExtraLocationControllerPackage> = r4;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setExtraLocationControllerPackageEnabled(boolean)
    {
        com.android.server.location.LocationManagerService r0;
        boolean z0;
        java.lang.Object r1;
        android.content.Context $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.location.LocationManagerService;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", "android.permission.LOCATION_HARDWARE permission required");

        r1 = r0.<com.android.server.location.LocationManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.location.LocationManagerService: boolean mExtraLocationControllerPackageEnabled> = z0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setLocationEnabledForUser(boolean, int)
    {
        com.android.server.location.LocationManagerService r0;
        boolean z0;
        int $i0, $i1, i2, i3;
        android.content.Context $r1;
        com.android.server.location.SettingsHelper $r2;

        r0 := @this: com.android.server.location.LocationManagerService;

        z0 := @parameter0: boolean;

        i2 := @parameter1: int;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i3 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i0, $i1, i2, 0, 0, "setLocationEnabledForUser", null);

        $r1 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SECURE_SETTINGS", null);

        staticinvoke <android.location.LocationManager: void invalidateLocalLocationEnabledCaches()>();

        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        virtualinvoke $r2.<com.android.server.location.SettingsHelper: void setLocationEnabled(boolean,int)>(z0, i3);

        return;
    }

    public void setTestProviderEnabled(java.lang.String, boolean, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1, r2, $r9, r10;
        boolean z0, $z1;
        android.content.Context $r3;
        com.android.server.location.AppOpsHelper $r4;
        java.lang.StringBuilder $r5;
        java.lang.IllegalArgumentException $r8;
        com.android.server.location.CallerIdentity r11;
        com.android.server.location.LocationManagerService$LocationProviderManager r12;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r10 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $r3 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        r11 = staticinvoke <com.android.server.location.CallerIdentity: com.android.server.location.CallerIdentity fromBinderUnsafe(android.content.Context,java.lang.String,java.lang.String)>($r3, r10, r2);

        $r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        $z1 = virtualinvoke $r4.<com.android.server.location.AppOpsHelper: boolean noteMockLocationAccess(com.android.server.location.CallerIdentity)>(r11);

        if $z1 != 0 goto label1;

        return;

     label1:
        r12 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>(r1);

        if r12 == null goto label2;

        virtualinvoke r12.<com.android.server.location.LocationManagerService$LocationProviderManager: void setMockProviderAllowed(boolean)>(z0);

        return;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("provider doesn\'t exist: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public void setTestProviderLocation(java.lang.String, android.location.Location, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        java.lang.String r1, r2, $r9, r11;
        android.content.Context $r3;
        com.android.server.location.AppOpsHelper $r4;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5;
        java.lang.IllegalArgumentException $r8;
        android.location.Location r10;
        com.android.server.location.CallerIdentity r12;
        com.android.server.location.LocationManagerService$LocationProviderManager r13;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: java.lang.String;

        r10 := @parameter1: android.location.Location;

        r11 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $r3 = r0.<com.android.server.location.LocationManagerService: android.content.Context mContext>;

        r12 = staticinvoke <com.android.server.location.CallerIdentity: com.android.server.location.CallerIdentity fromBinderUnsafe(android.content.Context,java.lang.String,java.lang.String)>($r3, r11, r2);

        $r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        $z0 = virtualinvoke $r4.<com.android.server.location.AppOpsHelper: boolean noteMockLocationAccess(com.android.server.location.CallerIdentity)>(r12);

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r10.<android.location.Location: boolean isComplete()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "incomplete location object, missing timestamp or accuracy?");

        r13 = specialinvoke r0.<com.android.server.location.LocationManagerService: com.android.server.location.LocationManagerService$LocationProviderManager getLocationProviderManager(java.lang.String)>(r1);

        if r13 == null goto label2;

        virtualinvoke r13.<com.android.server.location.LocationManagerService$LocationProviderManager: void setMockProviderLocation(android.location.Location)>(r10);

        return;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("provider doesn\'t exist: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public boolean startGnssBatch(long, boolean, java.lang.String, java.lang.String)
    {
        com.android.server.location.LocationManagerService r0;
        long l0;
        java.lang.String r1, r2;
        com.android.server.location.gnss.GnssManagerService $r3, $r4;
        boolean $z0, z1, z2;

        r0 := @this: com.android.server.location.LocationManagerService;

        l0 := @parameter0: long;

        z1 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        $z0 = virtualinvoke $r4.<com.android.server.location.gnss.GnssManagerService: boolean startGnssBatch(long,boolean,java.lang.String,java.lang.String)>(l0, z1, r1, r2);

        if $z0 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean stopGnssBatch()
    {
        com.android.server.location.LocationManagerService r0;
        com.android.server.location.gnss.GnssManagerService $r1, $r2;
        boolean $z0, z1;

        r0 := @this: com.android.server.location.LocationManagerService;

        $r1 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        $z0 = virtualinvoke $r2.<com.android.server.location.gnss.GnssManagerService: boolean stopGnssBatch()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void unregisterGnssStatusCallback(android.location.IGnssStatusListener)
    {
        com.android.server.location.LocationManagerService r0;
        android.location.IGnssStatusListener r1;
        com.android.server.location.gnss.GnssManagerService $r2, $r3;

        r0 := @this: com.android.server.location.LocationManagerService;

        r1 := @parameter0: android.location.IGnssStatusListener;

        $r2 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.location.LocationManagerService: com.android.server.location.gnss.GnssManagerService mGnssManagerService>;

        virtualinvoke $r3.<com.android.server.location.gnss.GnssManagerService: void unregisterGnssStatusCallback(android.location.IGnssStatusListener)>(r1);

     label1:
        return;
    }
}
