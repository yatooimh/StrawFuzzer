public abstract class com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    protected final com.android.server.location.CallerIdentity mCallerIdentity;

    void <init>(com.android.server.location.CallerIdentity)
    {
        com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase r0;
        com.android.server.location.CallerIdentity r1;

        r0 := @this: com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase;

        r1 := @parameter0: com.android.server.location.CallerIdentity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase: com.android.server.location.CallerIdentity mCallerIdentity> = r1;

        return;
    }

    public com.android.server.location.CallerIdentity getCallerIdentity()
    {
        com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase r0;
        com.android.server.location.CallerIdentity $r1;

        r0 := @this: com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase;

        $r1 = r0.<com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase: com.android.server.location.CallerIdentity mCallerIdentity>;

        return $r1;
    }

    public boolean linkToListenerDeathNotificationLocked(android.os.IBinder)
    {
        com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase r0;
        android.os.RemoteException $r1;
        android.os.IBinder r2;

        r0 := @this: com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase;

        r2 := @parameter0: android.os.IBinder;

     label1:
        interfaceinvoke r2.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase r0;
        com.android.server.location.CallerIdentity $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase;

        $r1 = r0.<com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase: com.android.server.location.CallerIdentity mCallerIdentity>;

        $r2 = virtualinvoke $r1.<com.android.server.location.CallerIdentity: java.lang.String toString()>();

        return $r2;
    }

    public void unlinkFromListenerDeathNotificationLocked(android.os.IBinder)
    {
        com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase r0;
        java.lang.Throwable $r1;
        android.os.IBinder r2;

        r0 := @this: com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase;

        r2 := @parameter0: android.os.IBinder;

     label1:
        interfaceinvoke r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }
}
