public class com.android.server.location.LocationProviderProxy extends com.android.server.location.AbstractLocationProvider
{
    private static final int MAX_ADDITIONAL_PACKAGES;
    private static final java.lang.String TAG;
    private boolean mBound;
    private final android.content.Context mContext;
    private final java.lang.Object mLock;
    private final com.android.internal.location.ILocationProviderManager$Stub mManager;
    private volatile com.android.internal.location.ProviderRequest mRequest;
    private final com.android.server.ServiceWatcher mServiceWatcher;

    private void <init>(android.content.Context, java.lang.String, int, int)
    {
        com.android.server.location.LocationProviderProxy r0;
        android.content.Context r1;
        java.lang.String r2;
        int i0, i1;
        java.util.concurrent.Executor $r3;
        java.util.Set $r4;
        com.android.server.location.LocationProviderProxy$1 $r5;
        java.lang.Object $r6;
        com.android.server.ServiceWatcher $r7;
        android.os.Handler $r8;
        com.android.server.location._$$Lambda$LocationProviderProxy$3wGALcuMWaMkkBRL1d0LQ_QqoCk $r9;
        com.android.server.location._$$Lambda$LocationProviderProxy$26d2FFhpYis1Ws92o2khDXr7LzU $r10;
        com.android.internal.location.ProviderRequest $r11;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = <com.android.internal.util.ConcurrentUtils: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        $r4 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        specialinvoke r0.<com.android.server.location.AbstractLocationProvider: void <init>(java.util.concurrent.Executor,java.util.Set)>($r3, $r4);

        $r5 = new com.android.server.location.LocationProviderProxy$1;

        specialinvoke $r5.<com.android.server.location.LocationProviderProxy$1: void <init>(com.android.server.location.LocationProviderProxy)>(r0);

        r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ILocationProviderManager$Stub mManager> = $r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.LocationProviderProxy: java.lang.Object mLock> = $r6;

        r0.<com.android.server.location.LocationProviderProxy: android.content.Context mContext> = r1;

        $r7 = new com.android.server.ServiceWatcher;

        $r8 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r9 = new com.android.server.location._$$Lambda$LocationProviderProxy$3wGALcuMWaMkkBRL1d0LQ_QqoCk;

        specialinvoke $r9.<com.android.server.location._$$Lambda$LocationProviderProxy$3wGALcuMWaMkkBRL1d0LQ_QqoCk: void <init>(com.android.server.location.LocationProviderProxy)>(r0);

        $r10 = new com.android.server.location._$$Lambda$LocationProviderProxy$26d2FFhpYis1Ws92o2khDXr7LzU;

        specialinvoke $r10.<com.android.server.location._$$Lambda$LocationProviderProxy$26d2FFhpYis1Ws92o2khDXr7LzU: void <init>(com.android.server.location.LocationProviderProxy)>(r0);

        specialinvoke $r7.<com.android.server.ServiceWatcher: void <init>(android.content.Context,android.os.Handler,java.lang.String,com.android.server.ServiceWatcher$BinderRunner,java.lang.Runnable,int,int)>(r1, $r8, r2, $r9, $r10, i0, i1);

        r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher> = $r7;

        r0.<com.android.server.location.LocationProviderProxy: boolean mBound> = 0;

        $r11 = <com.android.internal.location.ProviderRequest: com.android.internal.location.ProviderRequest EMPTY_REQUEST>;

        r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderRequest mRequest> = $r11;

        return;
    }

    static android.content.Context access$000(com.android.server.location.LocationProviderProxy)
    {
        com.android.server.location.LocationProviderProxy r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.location.LocationProviderProxy;

        $r1 = r0.<com.android.server.location.LocationProviderProxy: android.content.Context mContext>;

        return $r1;
    }

    static com.android.server.ServiceWatcher access$100(com.android.server.location.LocationProviderProxy)
    {
        com.android.server.location.LocationProviderProxy r0;
        com.android.server.ServiceWatcher $r1;

        r0 := @parameter0: com.android.server.location.LocationProviderProxy;

        $r1 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        return $r1;
    }

    static java.lang.Object access$200(com.android.server.location.LocationProviderProxy)
    {
        com.android.server.location.LocationProviderProxy r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.location.LocationProviderProxy;

        $r1 = r0.<com.android.server.location.LocationProviderProxy: java.lang.Object mLock>;

        return $r1;
    }

    static boolean access$300(com.android.server.location.LocationProviderProxy)
    {
        com.android.server.location.LocationProviderProxy r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.LocationProviderProxy;

        $z0 = r0.<com.android.server.location.LocationProviderProxy: boolean mBound>;

        return $z0;
    }

    public static com.android.server.location.LocationProviderProxy createAndRegister(android.content.Context, java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1;
        com.android.server.location.LocationProviderProxy $r1;
        boolean $z0;
        android.content.Context r2;

        r2 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = new com.android.server.location.LocationProviderProxy;

        specialinvoke $r1.<com.android.server.location.LocationProviderProxy: void <init>(android.content.Context,java.lang.String,int,int)>(r2, r0, i0, i1);

        $z0 = specialinvoke $r1.<com.android.server.location.LocationProviderProxy: boolean register()>();

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        return null;
    }

    public static void lambda$26d2FFhpYis1Ws92o2khDXr7LzU(com.android.server.location.LocationProviderProxy)
    {
        com.android.server.location.LocationProviderProxy r0;

        r0 := @parameter0: com.android.server.location.LocationProviderProxy;

        specialinvoke r0.<com.android.server.location.LocationProviderProxy: void onUnbind()>();

        return;
    }

    public static void lambda$3wGALcuMWaMkkBRL1d0LQ_QqoCk(com.android.server.location.LocationProviderProxy, android.os.IBinder)
    {
        com.android.server.location.LocationProviderProxy r0;
        android.os.IBinder r1;

        r0 := @parameter0: com.android.server.location.LocationProviderProxy;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<com.android.server.location.LocationProviderProxy: void onBind(android.os.IBinder)>(r1);

        return;
    }

    static void lambda$onExtraCommand$1(java.lang.String, android.os.Bundle, android.os.IBinder) throws android.os.RemoteException
    {
        java.lang.String r0;
        android.os.Bundle r1;
        android.os.IBinder r2;
        com.android.internal.location.ILocationProvider $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.os.IBinder;

        $r3 = staticinvoke <com.android.internal.location.ILocationProvider$Stub: com.android.internal.location.ILocationProvider asInterface(android.os.IBinder)>(r2);

        interfaceinvoke $r3.<com.android.internal.location.ILocationProvider: void sendExtraCommand(java.lang.String,android.os.Bundle)>(r0, r1);

        return;
    }

    static void lambda$onSetRequest$0(com.android.internal.location.ProviderRequest, android.os.IBinder) throws android.os.RemoteException
    {
        com.android.internal.location.ProviderRequest r0;
        android.os.IBinder r1;
        com.android.internal.location.ILocationProvider $r2;
        android.os.WorkSource $r3;

        r0 := @parameter0: com.android.internal.location.ProviderRequest;

        r1 := @parameter1: android.os.IBinder;

        $r2 = staticinvoke <com.android.internal.location.ILocationProvider$Stub: com.android.internal.location.ILocationProvider asInterface(android.os.IBinder)>(r1);

        $r3 = r0.<com.android.internal.location.ProviderRequest: android.os.WorkSource workSource>;

        interfaceinvoke $r2.<com.android.internal.location.ILocationProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>(r0, $r3);

        return;
    }

    private void onBind(android.os.IBinder) throws android.os.RemoteException
    {
        com.android.server.location.LocationProviderProxy r0;
        com.android.internal.location.ProviderRequest r1, $r3;
        com.android.internal.location.ILocationProviderManager$Stub $r2;
        boolean $z0;
        com.android.server.ServiceWatcher $r4;
        com.android.server.ServiceWatcher$ServiceInfo $r5;
        java.lang.String $r6;
        java.util.Set $r7;
        android.os.WorkSource $r8;
        java.lang.Throwable $r9;
        android.os.IBinder r10;
        com.android.internal.location.ILocationProvider r11;
        java.lang.Object r12;
        android.content.ComponentName r13;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r10 := @parameter0: android.os.IBinder;

        r11 = staticinvoke <com.android.internal.location.ILocationProvider$Stub: com.android.internal.location.ILocationProvider asInterface(android.os.IBinder)>(r10);

        r12 = r0.<com.android.server.location.LocationProviderProxy: java.lang.Object mLock>;

        entermonitor r12;

     label1:
        r0.<com.android.server.location.LocationProviderProxy: boolean mBound> = 1;

        $r2 = r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ILocationProviderManager$Stub mManager>;

        interfaceinvoke r11.<com.android.internal.location.ILocationProvider: void setLocationProviderManager(com.android.internal.location.ILocationProviderManager)>($r2);

        r1 = r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderRequest mRequest>;

        $r3 = <com.android.internal.location.ProviderRequest: com.android.internal.location.ProviderRequest EMPTY_REQUEST>;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $r8 = r1.<com.android.internal.location.ProviderRequest: android.os.WorkSource workSource>;

        interfaceinvoke r11.<com.android.internal.location.ILocationProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>(r1, $r8);

     label2:
        $r4 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r5 = virtualinvoke $r4.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo getBoundService()>();

        r13 = $r5.<com.android.server.ServiceWatcher$ServiceInfo: android.content.ComponentName component>;

     label3:
        if r13 == null goto label5;

     label4:
        $r6 = virtualinvoke r13.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r7 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r6);

        virtualinvoke r0.<com.android.server.location.LocationProviderProxy: void setPackageNames(java.util.Set)>($r7);

     label5:
        exitmonitor r12;

     label6:
        return;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r12;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void onUnbind()
    {
        com.android.server.location.LocationProviderProxy r0;
        java.lang.Object r1;
        com.android.server.location.AbstractLocationProvider$State $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 = r0.<com.android.server.location.LocationProviderProxy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.location.LocationProviderProxy: boolean mBound> = 0;

        $r3 = <com.android.server.location.AbstractLocationProvider$State: com.android.server.location.AbstractLocationProvider$State EMPTY_STATE>;

        virtualinvoke r0.<com.android.server.location.LocationProviderProxy: void setState(com.android.server.location.AbstractLocationProvider$State)>($r3);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private boolean register()
    {
        com.android.server.location.LocationProviderProxy r0;
        com.android.server.ServiceWatcher $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        $r1 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $z0 = virtualinvoke $r1.<com.android.server.ServiceWatcher: boolean register()>();

        return $z0;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.location.LocationProviderProxy r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        com.android.server.ServiceWatcher $r4;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        virtualinvoke $r4.<com.android.server.ServiceWatcher: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        return;
    }

    public void onExtraCommand(int, int, java.lang.String, android.os.Bundle)
    {
        com.android.server.location.LocationProviderProxy r0;
        int i0, i1;
        java.lang.String r1;
        android.os.Bundle r2;
        com.android.server.location._$$Lambda$LocationProviderProxy$yxlgGzrAmph8SqKppGMl5iNhd_0 $r3;
        com.android.server.ServiceWatcher $r4;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.Bundle;

        $r4 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r3 = new com.android.server.location._$$Lambda$LocationProviderProxy$yxlgGzrAmph8SqKppGMl5iNhd_0;

        specialinvoke $r3.<com.android.server.location._$$Lambda$LocationProviderProxy$yxlgGzrAmph8SqKppGMl5iNhd_0: void <init>(java.lang.String,android.os.Bundle)>(r1, r2);

        virtualinvoke $r4.<com.android.server.ServiceWatcher: void runOnBinder(com.android.server.ServiceWatcher$BinderRunner)>($r3);

        return;
    }

    public void onSetRequest(com.android.internal.location.ProviderRequest)
    {
        com.android.server.location.LocationProviderProxy r0;
        com.android.internal.location.ProviderRequest r1;
        com.android.server.location._$$Lambda$LocationProviderProxy$Uez3oEpu2OhUykPUhHZnDv6UWJI $r2;
        com.android.server.ServiceWatcher $r3;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 := @parameter0: com.android.internal.location.ProviderRequest;

        r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderRequest mRequest> = r1;

        $r3 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r2 = new com.android.server.location._$$Lambda$LocationProviderProxy$Uez3oEpu2OhUykPUhHZnDv6UWJI;

        specialinvoke $r2.<com.android.server.location._$$Lambda$LocationProviderProxy$Uez3oEpu2OhUykPUhHZnDv6UWJI: void <init>(com.android.internal.location.ProviderRequest)>(r1);

        virtualinvoke $r3.<com.android.server.ServiceWatcher: void runOnBinder(com.android.server.ServiceWatcher$BinderRunner)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.location.LocationProviderProxy: java.lang.String TAG> = "LocationProviderProxy";

        <com.android.server.location.LocationProviderProxy: int MAX_ADDITIONAL_PACKAGES> = 2;

        return;
    }
}
