class com.android.server.location.LocationShellCommand extends android.os.BasicShellCommandHandler
{
    private final com.android.server.location.LocationManagerService mService;

    void <init>(com.android.server.location.LocationManagerService)
    {
        com.android.server.location.LocationShellCommand r0;
        com.android.server.location.LocationManagerService r1, $r3;

        r0 := @this: com.android.server.location.LocationShellCommand;

        r1 := @parameter0: com.android.server.location.LocationManagerService;

        specialinvoke r0.<android.os.BasicShellCommandHandler: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (com.android.server.location.LocationManagerService) r1;

        r0.<com.android.server.location.LocationShellCommand: com.android.server.location.LocationManagerService mService> = $r3;

        return;
    }

    private int parseUserId()
    {
        com.android.server.location.LocationShellCommand r0;
        java.lang.String r1, $r8, $r9;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r7;
        int $i0;

        r0 := @this: com.android.server.location.LocationShellCommand;

        r1 = virtualinvoke r0.<com.android.server.location.LocationShellCommand: java.lang.String getNextOption()>();

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r0.<com.android.server.location.LocationShellCommand: java.lang.String getNextArgRequired()>();

        $i0 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r9);

        return $i0;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected \"--user\" option, but got \"");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" instead");

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label2:
        return -3;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.location.LocationShellCommand r0;
        int i0, $i1, $i2, i4;
        java.lang.String r1, $r2, r5, r6;
        boolean z0, $z1, $z3;
        com.android.server.location.LocationManagerService $r3, $r4;
        byte b3;

        r0 := @this: com.android.server.location.LocationShellCommand;

        r5 := @parameter0: java.lang.String;

        if r5 != null goto label1;

        $i2 = virtualinvoke r0.<com.android.server.location.LocationShellCommand: int handleDefaultCommands(java.lang.String)>(null);

        return $i2;

     label1:
        b3 = -1;

        i0 = virtualinvoke r5.<java.lang.String: int hashCode()>();

        if i0 == 1546249012 goto label4;

        if i0 == 2036447497 goto label3;

     label2:
        goto label5;

     label3:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("send-extra-command");

        if $z3 == 0 goto label2;

        b3 = 1;

        goto label5;

     label4:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("set-location-enabled");

        if $z1 == 0 goto label2;

        b3 = 0;

     label5:
        if b3 == 0 goto label7;

        if b3 == 1 goto label6;

        $i1 = virtualinvoke r0.<com.android.server.location.LocationShellCommand: int handleDefaultCommands(java.lang.String)>(r5);

        return $i1;

     label6:
        r1 = virtualinvoke r0.<com.android.server.location.LocationShellCommand: java.lang.String getNextArgRequired()>();

        r6 = virtualinvoke r0.<com.android.server.location.LocationShellCommand: java.lang.String getNextArgRequired()>();

        $r4 = r0.<com.android.server.location.LocationShellCommand: com.android.server.location.LocationManagerService mService>;

        virtualinvoke $r4.<com.android.server.location.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>(r1, r6, null);

        return 0;

     label7:
        i4 = specialinvoke r0.<com.android.server.location.LocationShellCommand: int parseUserId()>();

        $r2 = virtualinvoke r0.<com.android.server.location.LocationShellCommand: java.lang.String getNextArgRequired()>();

        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2);

        $r3 = r0.<com.android.server.location.LocationShellCommand: com.android.server.location.LocationManagerService mService>;

        virtualinvoke $r3.<com.android.server.location.LocationManagerService: void setLocationEnabledForUser(boolean,int)>(z0, i4);

        return 0;
    }

    public void onHelp()
    {
        com.android.server.location.LocationShellCommand r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.location.LocationShellCommand;

        r1 = virtualinvoke r0.<com.android.server.location.LocationShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Location service commands:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  help or -h");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-location-enabled [--user <USER_ID>] true|false");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Sets the master location switch enabled state.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  send-extra-command <PROVIDER> <COMMAND>");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Sends the given extra command to the given provider.");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Common commands that may be supported by the gps provider, depending on");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    hardware and software configurations:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      delete_aiding_data - requests deletion of any predictive aiding data");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      force_time_injection - requests NTP time injection to chipset");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      force_psds_injection - requests predictive aiding data injection to chipset");

        return;
    }
}
