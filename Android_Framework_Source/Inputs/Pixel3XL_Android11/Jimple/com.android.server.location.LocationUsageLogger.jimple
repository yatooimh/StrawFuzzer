public class com.android.server.location.LocationUsageLogger extends java.lang.Object
{
    private static final int API_USAGE_LOG_HOURLY_CAP;
    private static final int ONE_HOUR_IN_MILLIS;
    private static final int ONE_MINUTE_IN_MILLIS;
    private static final int ONE_SEC_IN_MILLIS;
    private int mApiUsageLogHourlyCount;
    private long mLastApiUsageLogHour;

    public void <init>()
    {
        com.android.server.location.LocationUsageLogger r0;

        r0 := @this: com.android.server.location.LocationUsageLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.LocationUsageLogger: long mLastApiUsageLogHour> = 0L;

        r0.<com.android.server.location.LocationUsageLogger: int mApiUsageLogHourlyCount> = 0;

        return;
    }

    private static int bucketizeDistance(float)
    {
        float f0;
        byte $b0, $b1, $b2;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 > 0 goto label1;

        return 1;

     label1:
        $b1 = f0 cmpl 0.0F;

        if $b1 <= 0 goto label2;

        $b2 = f0 cmpg 100.0F;

        if $b2 > 0 goto label2;

        return 2;

     label2:
        return 3;
    }

    private static int bucketizeExpireIn(long)
    {
        long l0;
        byte $b1, $b2, $b3, $b4, $b5;

        l0 := @parameter0: long;

        $b1 = l0 cmp 9223372036854775807L;

        if $b1 != 0 goto label1;

        return 6;

     label1:
        $b2 = l0 cmp 20000L;

        if $b2 >= 0 goto label2;

        return 1;

     label2:
        $b3 = l0 cmp 60000L;

        if $b3 >= 0 goto label3;

        return 2;

     label3:
        $b4 = l0 cmp 600000L;

        if $b4 >= 0 goto label4;

        return 3;

     label4:
        $b5 = l0 cmp 3600000L;

        if $b5 >= 0 goto label5;

        return 4;

     label5:
        return 5;
    }

    private static int bucketizeInterval(long)
    {
        long l0;
        byte $b1, $b2, $b3, $b4, $b5;

        l0 := @parameter0: long;

        $b1 = l0 cmp 1000L;

        if $b1 >= 0 goto label1;

        return 1;

     label1:
        $b2 = l0 cmp 5000L;

        if $b2 >= 0 goto label2;

        return 2;

     label2:
        $b3 = l0 cmp 60000L;

        if $b3 >= 0 goto label3;

        return 3;

     label3:
        $b4 = l0 cmp 600000L;

        if $b4 >= 0 goto label4;

        return 4;

     label4:
        $b5 = l0 cmp 3600000L;

        if $b5 >= 0 goto label5;

        return 5;

     label5:
        return 6;
    }

    private static int bucketizeProvider(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        $r1 = "network";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = "gps";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return 2;

     label2:
        $r3 = "passive";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        return 3;

     label3:
        $r4 = "fused";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label4;

        return 4;

     label4:
        return 0;
    }

    private static int bucketizeRadius(float)
    {
        float f0;
        byte $b0, $b1, $b2, $b3, $b4, $b5;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        return 7;

     label1:
        $b1 = f0 cmpg 100.0F;

        if $b1 >= 0 goto label2;

        return 1;

     label2:
        $b2 = f0 cmpg 200.0F;

        if $b2 >= 0 goto label3;

        return 2;

     label3:
        $b3 = f0 cmpg 300.0F;

        if $b3 >= 0 goto label4;

        return 3;

     label4:
        $b4 = f0 cmpg 1000.0F;

        if $b4 >= 0 goto label5;

        return 4;

     label5:
        $b5 = f0 cmpg 10000.0F;

        if $b5 >= 0 goto label6;

        return 5;

     label6:
        return 6;
    }

    private static int categorizeActivityImportance(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 != 100 goto label1;

        return 1;

     label1:
        if i0 != 125 goto label2;

        return 2;

     label2:
        return 3;
    }

    private static int getCallbackType(int, boolean, boolean)
    {
        int i0;
        boolean z0, z1;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if i0 != 5 goto label1;

        return 1;

     label1:
        if z1 == 0 goto label2;

        return 3;

     label2:
        if z0 == 0 goto label3;

        return 2;

     label3:
        return 0;
    }

    private boolean hitApiUsageLogCap()
    {
        com.android.server.location.LocationUsageLogger r0;
        long l0, l1, $l3;
        int i2, $i5, $i6;
        java.time.Instant $r2;
        byte $b4;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.server.location.LocationUsageLogger;

        entermonitor r0;

     label1:
        $r2 = staticinvoke <java.time.Instant: java.time.Instant now()>();

        $l3 = virtualinvoke $r2.<java.time.Instant: long toEpochMilli()>();

        l0 = $l3 / 3600000L;

        l1 = r0.<com.android.server.location.LocationUsageLogger: long mLastApiUsageLogHour>;

     label2:
        z0 = 0;

        $b4 = l0 cmp l1;

        if $b4 <= 0 goto label5;

     label3:
        r0.<com.android.server.location.LocationUsageLogger: long mLastApiUsageLogHour> = l0;

        r0.<com.android.server.location.LocationUsageLogger: int mApiUsageLogHourlyCount> = 0;

     label4:
        exitmonitor r0;

        return 0;

     label5:
        $i5 = r0.<com.android.server.location.LocationUsageLogger: int mApiUsageLogHourlyCount>;

        $i6 = $i5 + 1;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i6, 60);

        r0.<com.android.server.location.LocationUsageLogger: int mApiUsageLogHourlyCount> = i2;

     label6:
        if i2 < 60 goto label7;

        z0 = 1;

     label7:
        exitmonitor r0;

        return z0;

     label8:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void logLocationApiUsage(int, int, java.lang.String)
    {
        com.android.server.location.LocationUsageLogger r0;
        int i0, i1, i2, $i3;
        boolean $z0;
        java.lang.Exception $r1, $r2, r4;
        java.lang.String r3;

        r0 := @this: com.android.server.location.LocationUsageLogger;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

     label1:
        $z0 = specialinvoke r0.<com.android.server.location.LocationUsageLogger: boolean hitApiUsageLogCap()>();

        if $z0 == 0 goto label3;

     label2:
        return;

     label3:
        i2 = staticinvoke <com.android.server.location.LocationUsageLogger: int bucketizeProvider(java.lang.String)>(r3);

     label4:
        $i3 = staticinvoke <com.android.server.location.LocationUsageLogger: int getCallbackType(int,boolean,boolean)>(i1, 1, 1);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int,java.lang.String,int,int,int,int,long,int,int,int,int)>(210, i0, i1, null, i2, 0, 0, 0, 0L, 0, $i3, 0, 0);

     label5:
        goto label9;

     label6:
        $r1 := @caughtexception;

        r4 = $r1;

        goto label8;

     label7:
        $r2 := @caughtexception;

        r4 = $r2;

     label8:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManagerService", "Failed to log API usage to statsd.", r4);

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public void logLocationApiUsage(int, int, java.lang.String, android.location.LocationRequest, boolean, boolean, android.location.Geofence, int)
    {
        com.android.server.location.LocationUsageLogger r0;
        int i0, i1, i2, i3, $i5, $i6, i9, i10, i11, i12, i14, i15;
        android.location.LocationRequest r1;
        boolean z0, z1, $z2, z3, z4;
        android.location.Geofence r2;
        java.lang.String $r3, r5;
        long $l4, $l7, l13;
        float $f0, $f1;
        java.lang.Exception $r4;

        r0 := @this: com.android.server.location.LocationUsageLogger;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r5 := @parameter2: java.lang.String;

        r1 := @parameter3: android.location.LocationRequest;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        r2 := @parameter6: android.location.Geofence;

        i2 := @parameter7: int;

     label01:
        $z2 = specialinvoke r0.<com.android.server.location.LocationUsageLogger: boolean hitApiUsageLogCap()>();

        if $z2 == 0 goto label03;

     label02:
        return;

     label03:
        if r1 != null goto label04;

        z3 = 1;

        goto label05;

     label04:
        z3 = 0;

     label05:
        if r2 != null goto label06;

        z4 = 1;

        goto label07;

     label06:
        z4 = 0;

     label07:
        if z3 == 0 goto label08;

        i9 = 0;

        goto label09;

     label08:
        $r3 = virtualinvoke r1.<android.location.LocationRequest: java.lang.String getProvider()>();

        i9 = staticinvoke <com.android.server.location.LocationUsageLogger: int bucketizeProvider(java.lang.String)>($r3);

     label09:
        if z3 == 0 goto label10;

        i10 = 0;

        goto label11;

     label10:
        i10 = virtualinvoke r1.<android.location.LocationRequest: int getQuality()>();

     label11:
        if z3 == 0 goto label12;

        i11 = 0;

        goto label13;

     label12:
        $l4 = virtualinvoke r1.<android.location.LocationRequest: long getInterval()>();

        i11 = staticinvoke <com.android.server.location.LocationUsageLogger: int bucketizeInterval(long)>($l4);

     label13:
        if z3 == 0 goto label14;

        i12 = 0;

        goto label15;

     label14:
        $f0 = virtualinvoke r1.<android.location.LocationRequest: float getSmallestDisplacement()>();

        i12 = staticinvoke <com.android.server.location.LocationUsageLogger: int bucketizeDistance(float)>($f0);

     label15:
        if z3 == 0 goto label17;

        l13 = 0L;

     label16:
        goto label19;

     label17:
        $i5 = virtualinvoke r1.<android.location.LocationRequest: int getNumUpdates()>();

        l13 = (long) $i5;

     label18:
        goto label16;

     label19:
        if z3 != 0 goto label22;

        if i0 != 1 goto label20;

        goto label22;

     label20:
        $l7 = virtualinvoke r1.<android.location.LocationRequest: long getExpireIn()>();

        i14 = staticinvoke <com.android.server.location.LocationUsageLogger: int bucketizeExpireIn(long)>($l7);

     label21:
        goto label23;

     label22:
        i14 = 0;

     label23:
        i3 = staticinvoke <com.android.server.location.LocationUsageLogger: int getCallbackType(int,boolean,boolean)>(i1, z0, z1);

     label24:
        if z4 == 0 goto label25;

        i15 = 0;

        goto label26;

     label25:
        $f1 = virtualinvoke r2.<android.location.Geofence: float getRadius()>();

        i15 = staticinvoke <com.android.server.location.LocationUsageLogger: int bucketizeRadius(float)>($f1);

     label26:
        $i6 = staticinvoke <com.android.server.location.LocationUsageLogger: int categorizeActivityImportance(int)>(i2);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int,java.lang.String,int,int,int,int,long,int,int,int,int)>(210, i0, i1, r5, i9, i10, i11, i12, l13, i14, i3, i15, $i6);

     label27:
        goto label29;

     label28:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManagerService", "Failed to log API usage to statsd.", $r4);

     label29:
        return;

        catch java.lang.Exception from label01 to label02 with label28;
        catch java.lang.Exception from label08 to label09 with label28;
        catch java.lang.Exception from label10 to label11 with label28;
        catch java.lang.Exception from label12 to label13 with label28;
        catch java.lang.Exception from label14 to label15 with label28;
        catch java.lang.Exception from label17 to label18 with label28;
        catch java.lang.Exception from label20 to label21 with label28;
        catch java.lang.Exception from label23 to label24 with label28;
        catch java.lang.Exception from label25 to label26 with label28;
        catch java.lang.Exception from label26 to label27 with label28;
    }

    public static void <clinit>()
    {
        <com.android.server.location.LocationUsageLogger: int ONE_SEC_IN_MILLIS> = 1000;

        <com.android.server.location.LocationUsageLogger: int ONE_MINUTE_IN_MILLIS> = 60000;

        <com.android.server.location.LocationUsageLogger: int ONE_HOUR_IN_MILLIS> = 3600000;

        <com.android.server.location.LocationUsageLogger: int API_USAGE_LOG_HOURLY_CAP> = 60;

        return;
    }
}
