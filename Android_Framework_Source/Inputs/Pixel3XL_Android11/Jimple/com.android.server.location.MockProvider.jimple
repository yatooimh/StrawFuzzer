public class com.android.server.location.MockProvider extends com.android.server.location.AbstractLocationProvider
{
    private android.location.Location mLocation;

    public void <init>(com.android.internal.location.ProviderProperties)
    {
        com.android.server.location.MockProvider r0;
        com.android.internal.location.ProviderProperties r1;
        java.util.concurrent.Executor $r2;
        java.util.Set $r3;

        r0 := @this: com.android.server.location.MockProvider;

        r1 := @parameter0: com.android.internal.location.ProviderProperties;

        $r2 = <com.android.internal.util.ConcurrentUtils: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        $r3 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        specialinvoke r0.<com.android.server.location.AbstractLocationProvider: void <init>(java.util.concurrent.Executor,java.util.Set)>($r2, $r3);

        virtualinvoke r0.<com.android.server.location.MockProvider: void setProperties(com.android.internal.location.ProviderProperties)>(r1);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.location.MockProvider r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.lang.StringBuilder $r3;
        android.location.Location $r5;
        java.lang.String $r7;
        java.io.FileDescriptor r8;

        r0 := @this: com.android.server.location.MockProvider;

        r8 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("last mock location=");

        $r5 = r0.<com.android.server.location.MockProvider: android.location.Location mLocation>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return;
    }

    protected void onExtraCommand(int, int, java.lang.String, android.os.Bundle)
    {
        com.android.server.location.MockProvider r0;
        int i0, i1;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: com.android.server.location.MockProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.Bundle;

        return;
    }

    public void onSetRequest(com.android.internal.location.ProviderRequest)
    {
        com.android.server.location.MockProvider r0;
        com.android.internal.location.ProviderRequest r1;

        r0 := @this: com.android.server.location.MockProvider;

        r1 := @parameter0: com.android.internal.location.ProviderRequest;

        return;
    }

    public void setProviderAllowed(boolean)
    {
        com.android.server.location.MockProvider r0;
        boolean z0;

        r0 := @this: com.android.server.location.MockProvider;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.location.MockProvider: void setAllowed(boolean)>(z0);

        return;
    }

    public void setProviderLocation(android.location.Location)
    {
        com.android.server.location.MockProvider r0;
        android.location.Location $r1, r2;

        r0 := @this: com.android.server.location.MockProvider;

        r2 := @parameter0: android.location.Location;

        $r1 = new android.location.Location;

        specialinvoke $r1.<android.location.Location: void <init>(android.location.Location)>(r2);

        virtualinvoke $r1.<android.location.Location: void setIsFromMockProvider(boolean)>(1);

        r0.<com.android.server.location.MockProvider: android.location.Location mLocation> = $r1;

        virtualinvoke r0.<com.android.server.location.MockProvider: void reportLocation(android.location.Location)>($r1);

        return;
    }
}
