class com.android.server.location.NanoAppStateManager extends java.lang.Object
{
    private static final boolean ENABLE_LOG_DEBUG;
    private static final java.lang.String TAG;
    private final java.util.HashMap mNanoAppHash;
    private int mNextHandle;

    void <init>()
    {
        com.android.server.location.NanoAppStateManager r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.server.location.NanoAppStateManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.location.NanoAppStateManager: java.util.HashMap mNanoAppHash> = $r1;

        r0.<com.android.server.location.NanoAppStateManager: int mNextHandle> = 0;

        return;
    }

    private void handleQueryAppEntry(int, long, int)
    {
        com.android.server.location.NanoAppStateManager r0;
        int i0, i2, i3, $i4;
        long l1;
        java.util.HashMap $r2, $r6;
        java.lang.Integer $r3, $r7;
        java.lang.Object $r4;
        android.hardware.location.NanoAppInstanceInfo $r5, $r8;
        java.lang.StringBuilder $r10;
        java.lang.String $r16, $r19, $r21;

        r0 := @this: com.android.server.location.NanoAppStateManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 = virtualinvoke r0.<com.android.server.location.NanoAppStateManager: int getNanoAppHandle(int,long)>(i0, l1);

        if i3 != -1 goto label1;

        virtualinvoke r0.<com.android.server.location.NanoAppStateManager: void addNanoAppInstance(int,long,int)>(i0, l1, i2);

        goto label2;

     label1:
        $r2 = r0.<com.android.server.location.NanoAppStateManager: java.util.HashMap mNanoAppHash>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (android.hardware.location.NanoAppInstanceInfo) $r4;

        $i4 = virtualinvoke $r5.<android.hardware.location.NanoAppInstanceInfo: int getAppVersion()>();

        if $i4 == i2 goto label2;

        $r6 = r0.<com.android.server.location.NanoAppStateManager: java.util.HashMap mNanoAppHash>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r8 = new android.hardware.location.NanoAppInstanceInfo;

        specialinvoke $r8.<android.hardware.location.NanoAppInstanceInfo: void <init>(int,long,int,int)>(i3, l1, i2, i0);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updated app instance with handle ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at hub ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ID=0x");

        $r16 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", version=0x");

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("NanoAppStateManager", $r21);

     label2:
        return;
    }

    void addNanoAppInstance(int, long, int)
    {
        com.android.server.location.NanoAppStateManager r0;
        int i0, i2, $i5, i8, i9, i10;
        long l1;
        boolean z0;
        android.hardware.location.NanoAppInstanceInfo r1;
        java.util.HashMap $r2, $r14, r19;
        java.lang.String $r8, $r11, $r13;
        java.lang.Integer $r15, $r16;
        java.lang.Throwable $r18;
        java.lang.StringBuilder r20;

        r0 := @this: com.android.server.location.NanoAppStateManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        entermonitor r0;

     label01:
        virtualinvoke r0.<com.android.server.location.NanoAppStateManager: void removeNanoAppInstance(int,long)>(i0, l1);

        $r2 = r0.<com.android.server.location.NanoAppStateManager: java.util.HashMap mNanoAppHash>;

        $i5 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        if $i5 != 2147483647 goto label03;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NanoAppStateManager", "Error adding nanoapp instance: max limit exceeded");

     label02:
        exitmonitor r0;

        return;

     label03:
        i8 = r0.<com.android.server.location.NanoAppStateManager: int mNextHandle>;

     label04:
        i9 = 0;

     label05:
        if i9 > 2147483647 goto label16;

     label06:
        $r14 = r0.<com.android.server.location.NanoAppStateManager: java.util.HashMap mNanoAppHash>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        z0 = virtualinvoke $r14.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r15);

     label07:
        if z0 != 0 goto label13;

     label08:
        r19 = r0.<com.android.server.location.NanoAppStateManager: java.util.HashMap mNanoAppHash>;

        r1 = new android.hardware.location.NanoAppInstanceInfo;

        specialinvoke r1.<android.hardware.location.NanoAppInstanceInfo: void <init>(int,long,int,int)>(i8, l1, i2, i0);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        virtualinvoke r19.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r1);

     label09:
        if i8 != 2147483647 goto label10;

        i10 = 0;

        goto label11;

     label10:
        i10 = i8 + 1;

     label11:
        r0.<com.android.server.location.NanoAppStateManager: int mNextHandle> = i10;

     label12:
        goto label16;

     label13:
        if i8 != 2147483647 goto label14;

        i8 = 0;

        goto label15;

     label14:
        i8 = i8 + 1;

     label15:
        i9 = i9 + 1;

        goto label05;

     label16:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added app instance with handle ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to hub ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ID=0x");

        $r8 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l1);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", version=0x");

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("NanoAppStateManager", $r13);

     label17:
        exitmonitor r0;

        return;

     label18:
        $r18 := @caughtexception;

        exitmonitor r0;

        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    void foreachNanoAppInstanceInfo(java.util.function.Consumer)
    {
        com.android.server.location.NanoAppStateManager r0;
        java.util.Iterator r1;
        java.util.HashMap $r2;
        java.util.Collection $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.hardware.location.NanoAppInstanceInfo $r5;
        java.lang.Throwable $r6;
        java.util.function.Consumer r7;

        r0 := @this: com.android.server.location.NanoAppStateManager;

        r7 := @parameter0: java.util.function.Consumer;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.location.NanoAppStateManager: java.util.HashMap mNanoAppHash>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.hardware.location.NanoAppInstanceInfo) $r4;

        interfaceinvoke r7.<java.util.function.Consumer: void accept(java.lang.Object)>($r5);

     label3:
        goto label2;

     label4:
        exitmonitor r0;

        return;

     label5:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
    }

    int getNanoAppHandle(int, long)
    {
        com.android.server.location.NanoAppStateManager r0;
        long l0, $l2;
        java.util.Iterator r1;
        java.util.HashMap $r2;
        java.util.Collection $r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i1, i4, i5;
        byte $b3;
        java.lang.Throwable $r5;
        android.hardware.location.NanoAppInstanceInfo r6;

        r0 := @this: com.android.server.location.NanoAppStateManager;

        i4 := @parameter0: int;

        l0 := @parameter1: long;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.location.NanoAppStateManager: java.util.HashMap mNanoAppHash>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.hardware.location.NanoAppInstanceInfo) $r4;

        $i1 = virtualinvoke r6.<android.hardware.location.NanoAppInstanceInfo: int getContexthubId()>();

        if $i1 != i4 goto label4;

        $l2 = virtualinvoke r6.<android.hardware.location.NanoAppInstanceInfo: long getAppId()>();

        $b3 = $l2 cmp l0;

        if $b3 != 0 goto label4;

        i5 = virtualinvoke r6.<android.hardware.location.NanoAppInstanceInfo: int getHandle()>();

     label3:
        exitmonitor r0;

        return i5;

     label4:
        goto label2;

     label5:
        exitmonitor r0;

        return -1;

     label6:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
    }

    android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)
    {
        com.android.server.location.NanoAppStateManager r0;
        int i0;
        java.util.HashMap $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        android.hardware.location.NanoAppInstanceInfo r5;

        r0 := @this: com.android.server.location.NanoAppStateManager;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.location.NanoAppStateManager: java.util.HashMap mNanoAppHash>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (android.hardware.location.NanoAppInstanceInfo) $r3;

     label2:
        exitmonitor r0;

        return r5;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void removeNanoAppInstance(int, long)
    {
        com.android.server.location.NanoAppStateManager r0;
        long l0;
        java.util.HashMap $r2;
        java.lang.Integer $r3;
        java.lang.Throwable $r5;
        int i1, i2;

        r0 := @this: com.android.server.location.NanoAppStateManager;

        i1 := @parameter0: int;

        l0 := @parameter1: long;

        entermonitor r0;

     label1:
        i2 = virtualinvoke r0.<com.android.server.location.NanoAppStateManager: int getNanoAppHandle(int,long)>(i1, l0);

        $r2 = r0.<com.android.server.location.NanoAppStateManager: java.util.HashMap mNanoAppHash>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r3);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void updateCache(int, java.util.List)
    {
        com.android.server.location.NanoAppStateManager r0;
        int i0, $i1, $i3;
        java.util.HashSet r1;
        boolean $z0, $z1, $z2;
        java.util.HashMap $r2;
        java.util.Collection $r3;
        java.lang.Object $r4, $r6;
        long $l2, $l4, $l5;
        java.lang.Long $r5, $r7;
        java.lang.Throwable $r8;
        java.util.List r9;
        java.util.Iterator r10, r12;
        android.hardware.contexthub.V1_0.HubAppInfo r11;
        android.hardware.location.NanoAppInstanceInfo r13;

        r0 := @this: com.android.server.location.NanoAppStateManager;

        i0 := @parameter0: int;

        r9 := @parameter1: java.util.List;

        entermonitor r0;

     label1:
        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (android.hardware.contexthub.V1_0.HubAppInfo) $r6;

        $l4 = r11.<android.hardware.contexthub.V1_0.HubAppInfo: long appId>;

        $i3 = r11.<android.hardware.contexthub.V1_0.HubAppInfo: int version>;

        specialinvoke r0.<com.android.server.location.NanoAppStateManager: void handleQueryAppEntry(int,long,int)>(i0, $l4, $i3);

        $l5 = r11.<android.hardware.contexthub.V1_0.HubAppInfo: long appId>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>($r7);

     label3:
        goto label2;

     label4:
        $r2 = r0.<com.android.server.location.NanoAppStateManager: java.util.HashMap mNanoAppHash>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        r12 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r4 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (android.hardware.location.NanoAppInstanceInfo) $r4;

        $i1 = virtualinvoke r13.<android.hardware.location.NanoAppInstanceInfo: int getContexthubId()>();

        if $i1 != i0 goto label6;

        $l2 = virtualinvoke r13.<android.hardware.location.NanoAppInstanceInfo: long getAppId()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $z2 = virtualinvoke r1.<java.util.HashSet: boolean contains(java.lang.Object)>($r5);

        if $z2 != 0 goto label6;

        interfaceinvoke r12.<java.util.Iterator: void remove()>();

     label6:
        goto label5;

     label7:
        exitmonitor r0;

        return;

     label8:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public static void <clinit>()
    {
        <com.android.server.location.NanoAppStateManager: java.lang.String TAG> = "NanoAppStateManager";

        <com.android.server.location.NanoAppStateManager: boolean ENABLE_LOG_DEBUG> = 1;

        return;
    }
}
