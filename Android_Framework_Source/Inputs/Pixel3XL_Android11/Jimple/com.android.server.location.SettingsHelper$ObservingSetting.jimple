abstract class com.android.server.location.SettingsHelper$ObservingSetting extends android.database.ContentObserver
{
    private final java.util.concurrent.CopyOnWriteArrayList mListeners;
    private boolean mRegistered;

    private void <init>(android.os.Handler)
    {
        com.android.server.location.SettingsHelper$ObservingSetting r0;
        android.os.Handler r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: com.android.server.location.SettingsHelper$ObservingSetting;

        r1 := @parameter0: android.os.Handler;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r1);

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<com.android.server.location.SettingsHelper$ObservingSetting: java.util.concurrent.CopyOnWriteArrayList mListeners> = $r2;

        return;
    }

    void <init>(android.os.Handler, com.android.server.location.SettingsHelper$1)
    {
        com.android.server.location.SettingsHelper$ObservingSetting r0;
        android.os.Handler r1;
        com.android.server.location.SettingsHelper$1 r2;

        r0 := @this: com.android.server.location.SettingsHelper$ObservingSetting;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: com.android.server.location.SettingsHelper$1;

        specialinvoke r0.<com.android.server.location.SettingsHelper$ObservingSetting: void <init>(android.os.Handler)>(r1);

        return;
    }

    public void addListener(com.android.server.location.SettingsHelper$UserSettingChangedListener)
    {
        com.android.server.location.SettingsHelper$ObservingSetting r0;
        com.android.server.location.SettingsHelper$UserSettingChangedListener r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: com.android.server.location.SettingsHelper$ObservingSetting;

        r1 := @parameter0: com.android.server.location.SettingsHelper$UserSettingChangedListener;

        $r2 = r0.<com.android.server.location.SettingsHelper$ObservingSetting: java.util.concurrent.CopyOnWriteArrayList mListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    protected boolean isRegistered()
    {
        com.android.server.location.SettingsHelper$ObservingSetting r0;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.location.SettingsHelper$ObservingSetting;

        entermonitor r0;

     label1:
        z0 = r0.<com.android.server.location.SettingsHelper$ObservingSetting: boolean mRegistered>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onChange(boolean, android.net.Uri, int)
    {
        com.android.server.location.SettingsHelper$ObservingSetting r0;
        boolean z0, $z1, $z2;
        int i0;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        java.lang.Object $r3;
        com.android.server.location.SettingsHelper$UserSettingChangedListener $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r10;
        android.net.Uri r11;
        java.util.Iterator r12;

        r0 := @this: com.android.server.location.SettingsHelper$ObservingSetting;

        z0 := @parameter0: boolean;

        r11 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        $z1 = <com.android.server.location.LocationManagerService: boolean D>;

        if $z1 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("location setting changed [u");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationManagerService", $r10);

     label1:
        $r2 = r0.<com.android.server.location.SettingsHelper$ObservingSetting: java.util.concurrent.CopyOnWriteArrayList mListeners>;

        r12 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r3 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.location.SettingsHelper$UserSettingChangedListener) $r3;

        interfaceinvoke $r4.<com.android.server.location.SettingsHelper$UserSettingChangedListener: void onSettingChanged(int)>(i0);

        goto label2;

     label3:
        return;
    }

    protected void register(android.content.Context, android.net.Uri)
    {
        com.android.server.location.SettingsHelper$ObservingSetting r0;
        android.net.Uri r1;
        boolean z0;
        android.content.ContentResolver $r2;
        java.lang.Throwable $r3;
        android.content.Context r4;

        r0 := @this: com.android.server.location.SettingsHelper$ObservingSetting;

        r4 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        entermonitor r0;

     label1:
        z0 = r0.<com.android.server.location.SettingsHelper$ObservingSetting: boolean mRegistered>;

     label2:
        if z0 == 0 goto label3;

        exitmonitor r0;

        return;

     label3:
        $r2 = virtualinvoke r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r2.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>(r1, 0, r0, -1);

        r0.<com.android.server.location.SettingsHelper$ObservingSetting: boolean mRegistered> = 1;

     label4:
        exitmonitor r0;

        return;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void removeListener(com.android.server.location.SettingsHelper$UserSettingChangedListener)
    {
        com.android.server.location.SettingsHelper$ObservingSetting r0;
        com.android.server.location.SettingsHelper$UserSettingChangedListener r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: com.android.server.location.SettingsHelper$ObservingSetting;

        r1 := @parameter0: com.android.server.location.SettingsHelper$UserSettingChangedListener;

        $r2 = r0.<com.android.server.location.SettingsHelper$ObservingSetting: java.util.concurrent.CopyOnWriteArrayList mListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }
}
