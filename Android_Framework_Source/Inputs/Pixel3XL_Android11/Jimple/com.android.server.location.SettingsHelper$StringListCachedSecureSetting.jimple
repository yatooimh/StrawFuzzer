class com.android.server.location.SettingsHelper$StringListCachedSecureSetting extends com.android.server.location.SettingsHelper$ObservingSetting
{
    private int mCachedUserId;
    private java.util.List mCachedValue;
    private final android.content.Context mContext;
    private final java.lang.String mSettingName;

    private void <init>(android.content.Context, java.lang.String, android.os.Handler)
    {
        com.android.server.location.SettingsHelper$StringListCachedSecureSetting r0;
        android.content.Context r1;
        java.lang.String r2;
        android.os.Handler r3;

        r0 := @this: com.android.server.location.SettingsHelper$StringListCachedSecureSetting;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Handler;

        specialinvoke r0.<com.android.server.location.SettingsHelper$ObservingSetting: void <init>(android.os.Handler,com.android.server.location.SettingsHelper$1)>(r3, null);

        r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: android.content.Context mContext> = r1;

        r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: java.lang.String mSettingName> = r2;

        r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: int mCachedUserId> = -10000;

        return;
    }

    void <init>(android.content.Context, java.lang.String, android.os.Handler, com.android.server.location.SettingsHelper$1)
    {
        com.android.server.location.SettingsHelper$StringListCachedSecureSetting r0;
        android.content.Context r1;
        java.lang.String r2;
        android.os.Handler r3;
        com.android.server.location.SettingsHelper$1 r4;

        r0 := @this: com.android.server.location.SettingsHelper$StringListCachedSecureSetting;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Handler;

        r4 := @parameter3: com.android.server.location.SettingsHelper$1;

        specialinvoke r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: void <init>(android.content.Context,java.lang.String,android.os.Handler)>(r1, r2, r3);

        return;
    }

    public java.util.List getValueForUser(int)
    {
        com.android.server.location.SettingsHelper$StringListCachedSecureSetting r0;
        int i0, $i2;
        long l1;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        java.lang.String $r3, r9;
        java.lang.String[] $r4;
        boolean $z0, z1, z2;
        java.lang.Throwable $r5, $r6, $r7, r11;
        java.util.List r8, r10;

        r0 := @this: com.android.server.location.SettingsHelper$StringListCachedSecureSetting;

        i0 := @parameter0: int;

        entermonitor r0;

        if i0 == -10000 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z1);

        r8 = r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: java.util.List mCachedValue>;

     label03:
        $i2 = r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: int mCachedUserId>;

        if i0 == $i2 goto label16;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r1 = r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: java.lang.String mSettingName>;

        r9 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r2, $r3, i0);

        z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

     label05:
        if z2 == 0 goto label09;

     label06:
        r10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label07:
        goto label10;

     label08:
        $r5 := @caughtexception;

        r11 = $r5;

        goto label15;

     label09:
        $r4 = virtualinvoke r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label11:
        r8 = r10;

     label12:
        $z0 = virtualinvoke r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: boolean isRegistered()>();

        if $z0 == 0 goto label16;

        r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: int mCachedUserId> = i0;

        r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: java.util.List mCachedValue> = r10;

     label13:
        r8 = r10;

        goto label16;

     label14:
        $r7 := @caughtexception;

        r11 = $r7;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r11;

     label16:
        exitmonitor r0;

        return r8;

     label17:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    public void invalidateForUser(int)
    {
        com.android.server.location.SettingsHelper$StringListCachedSecureSetting r0;
        int i0, $i1;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.location.SettingsHelper$StringListCachedSecureSetting;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $i1 = r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: int mCachedUserId>;

        if $i1 != i0 goto label2;

        r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: int mCachedUserId> = -10000;

        r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: java.util.List mCachedValue> = null;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onChange(boolean, android.net.Uri, int)
    {
        com.android.server.location.SettingsHelper$StringListCachedSecureSetting r0;
        boolean z0;
        android.net.Uri r1;
        int i0;

        r0 := @this: com.android.server.location.SettingsHelper$StringListCachedSecureSetting;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: void invalidateForUser(int)>(i0);

        specialinvoke r0.<com.android.server.location.SettingsHelper$ObservingSetting: void onChange(boolean,android.net.Uri,int)>(z0, r1, i0);

        return;
    }

    public void register()
    {
        com.android.server.location.SettingsHelper$StringListCachedSecureSetting r0;
        java.lang.String $r1;
        android.content.Context $r2;
        android.net.Uri $r3;

        r0 := @this: com.android.server.location.SettingsHelper$StringListCachedSecureSetting;

        $r2 = r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: android.content.Context mContext>;

        $r1 = r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: java.lang.String mSettingName>;

        $r3 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>($r1);

        virtualinvoke r0.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: void register(android.content.Context,android.net.Uri)>($r2, $r3);

        return;
    }
}
