public class com.android.server.location.SettingsHelper extends java.lang.Object
{
    private static final long DEFAULT_BACKGROUND_THROTTLE_INTERVAL_MS;
    private static final long DEFAULT_BACKGROUND_THROTTLE_PROXIMITY_ALERT_INTERVAL_MS;
    private static final float DEFAULT_COARSE_LOCATION_ACCURACY_M;
    private static final java.lang.String LOCATION_PACKAGE_BLACKLIST;
    private static final java.lang.String LOCATION_PACKAGE_WHITELIST;
    private final com.android.server.location.SettingsHelper$LongGlobalSetting mBackgroundThrottleIntervalMs;
    private final com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mBackgroundThrottlePackageWhitelist;
    private final android.content.Context mContext;
    private final com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mIgnoreSettingsPackageWhitelist;
    private final com.android.server.location.SettingsHelper$IntegerSecureSetting mLocationMode;
    private final com.android.server.location.SettingsHelper$StringListCachedSecureSetting mLocationPackageBlacklist;
    private final com.android.server.location.SettingsHelper$StringListCachedSecureSetting mLocationPackageWhitelist;

    public void <init>(android.content.Context, android.os.Handler)
    {
        com.android.server.location.SettingsHelper r0;
        android.content.Context r1;
        android.os.Handler r2;
        com.android.server.location.'-$$Lambda$SettingsHelper$DVmNGa9ypltgL35WVwJuSTIxRS8' $r8;
        com.android.server.location.'-$$Lambda$SettingsHelper$Ez8giHaZAPYwS7zICeUtrlXPpBo' $r10;
        com.android.server.location.SettingsHelper$IntegerSecureSetting r11;
        com.android.server.location.SettingsHelper$LongGlobalSetting r12;
        com.android.server.location.SettingsHelper$StringListCachedSecureSetting r13, r14;
        com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting r15, r16;
        java.util.function.Supplier r17, r18;

        r0 := @this: com.android.server.location.SettingsHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.SettingsHelper: android.content.Context mContext> = r1;

        r11 = new com.android.server.location.SettingsHelper$IntegerSecureSetting;

        specialinvoke r11.<com.android.server.location.SettingsHelper$IntegerSecureSetting: void <init>(android.content.Context,java.lang.String,android.os.Handler,com.android.server.location.SettingsHelper$1)>(r1, "location_mode", r2, null);

        r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$IntegerSecureSetting mLocationMode> = r11;

        r12 = new com.android.server.location.SettingsHelper$LongGlobalSetting;

        specialinvoke r12.<com.android.server.location.SettingsHelper$LongGlobalSetting: void <init>(android.content.Context,java.lang.String,android.os.Handler,com.android.server.location.SettingsHelper$1)>(r1, "location_background_throttle_interval_ms", r2, null);

        r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$LongGlobalSetting mBackgroundThrottleIntervalMs> = r12;

        r13 = new com.android.server.location.SettingsHelper$StringListCachedSecureSetting;

        specialinvoke r13.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: void <init>(android.content.Context,java.lang.String,android.os.Handler,com.android.server.location.SettingsHelper$1)>(r1, "locationPackagePrefixBlacklist", r2, null);

        r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringListCachedSecureSetting mLocationPackageBlacklist> = r13;

        r14 = new com.android.server.location.SettingsHelper$StringListCachedSecureSetting;

        specialinvoke r14.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: void <init>(android.content.Context,java.lang.String,android.os.Handler,com.android.server.location.SettingsHelper$1)>(r1, "locationPackagePrefixWhitelist", r2, null);

        r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringListCachedSecureSetting mLocationPackageWhitelist> = r14;

        r15 = new com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting;

        $r8 = <com.android.server.location._$$Lambda$SettingsHelper$DVmNGa9ypltgL35WVwJuSTIxRS8: com.android.server.location.'-$$Lambda$SettingsHelper$DVmNGa9ypltgL35WVwJuSTIxRS8' INSTANCE>;

        r17 = (java.util.function.Supplier) $r8;

        specialinvoke r15.<com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting: void <init>(android.content.Context,java.lang.String,java.util.function.Supplier,android.os.Handler,com.android.server.location.SettingsHelper$1)>(r1, "location_background_throttle_package_whitelist", r17, r2, null);

        r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mBackgroundThrottlePackageWhitelist> = r15;

        r16 = new com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting;

        $r10 = <com.android.server.location._$$Lambda$SettingsHelper$Ez8giHaZAPYwS7zICeUtrlXPpBo: com.android.server.location.'-$$Lambda$SettingsHelper$Ez8giHaZAPYwS7zICeUtrlXPpBo' INSTANCE>;

        r18 = (java.util.function.Supplier) $r10;

        specialinvoke r16.<com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting: void <init>(android.content.Context,java.lang.String,java.util.function.Supplier,android.os.Handler,com.android.server.location.SettingsHelper$1)>(r1, "location_ignore_settings_package_whitelist", r18, r2, null);

        r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mIgnoreSettingsPackageWhitelist> = r16;

        return;
    }

    static android.util.ArraySet lambda$new$0()
    {
        com.android.server.SystemConfig $r0;
        android.util.ArraySet $r1;

        $r0 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        $r1 = virtualinvoke $r0.<com.android.server.SystemConfig: android.util.ArraySet getAllowUnthrottledLocation()>();

        return $r1;
    }

    static android.util.ArraySet lambda$new$1()
    {
        com.android.server.SystemConfig $r0;
        android.util.ArraySet $r1;

        $r0 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        $r1 = virtualinvoke $r0.<com.android.server.SystemConfig: android.util.ArraySet getAllowIgnoreLocationSettings()>();

        return $r1;
    }

    public void addOnBackgroundThrottleIntervalChangedListener(com.android.server.location.SettingsHelper$GlobalSettingChangedListener)
    {
        com.android.server.location.SettingsHelper r0;
        com.android.server.location.SettingsHelper$GlobalSettingChangedListener r1;
        com.android.server.location.SettingsHelper$LongGlobalSetting $r2;

        r0 := @this: com.android.server.location.SettingsHelper;

        r1 := @parameter0: com.android.server.location.SettingsHelper$GlobalSettingChangedListener;

        $r2 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$LongGlobalSetting mBackgroundThrottleIntervalMs>;

        virtualinvoke $r2.<com.android.server.location.SettingsHelper$LongGlobalSetting: void addListener(com.android.server.location.SettingsHelper$UserSettingChangedListener)>(r1);

        return;
    }

    public void addOnBackgroundThrottlePackageWhitelistChangedListener(com.android.server.location.SettingsHelper$GlobalSettingChangedListener)
    {
        com.android.server.location.SettingsHelper r0;
        com.android.server.location.SettingsHelper$GlobalSettingChangedListener r1;
        com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting $r2;

        r0 := @this: com.android.server.location.SettingsHelper;

        r1 := @parameter0: com.android.server.location.SettingsHelper$GlobalSettingChangedListener;

        $r2 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mBackgroundThrottlePackageWhitelist>;

        virtualinvoke $r2.<com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting: void addListener(com.android.server.location.SettingsHelper$UserSettingChangedListener)>(r1);

        return;
    }

    public void addOnIgnoreSettingsPackageWhitelistChangedListener(com.android.server.location.SettingsHelper$GlobalSettingChangedListener)
    {
        com.android.server.location.SettingsHelper r0;
        com.android.server.location.SettingsHelper$GlobalSettingChangedListener r1;
        com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting $r2;

        r0 := @this: com.android.server.location.SettingsHelper;

        r1 := @parameter0: com.android.server.location.SettingsHelper$GlobalSettingChangedListener;

        $r2 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mIgnoreSettingsPackageWhitelist>;

        virtualinvoke $r2.<com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting: void addListener(com.android.server.location.SettingsHelper$UserSettingChangedListener)>(r1);

        return;
    }

    public void addOnLocationEnabledChangedListener(com.android.server.location.SettingsHelper$UserSettingChangedListener)
    {
        com.android.server.location.SettingsHelper r0;
        com.android.server.location.SettingsHelper$UserSettingChangedListener r1;
        com.android.server.location.SettingsHelper$IntegerSecureSetting $r2;

        r0 := @this: com.android.server.location.SettingsHelper;

        r1 := @parameter0: com.android.server.location.SettingsHelper$UserSettingChangedListener;

        $r2 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$IntegerSecureSetting mLocationMode>;

        virtualinvoke $r2.<com.android.server.location.SettingsHelper$IntegerSecureSetting: void addListener(com.android.server.location.SettingsHelper$UserSettingChangedListener)>(r1);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.location.SettingsHelper r0;
        java.lang.String[] r1;
        int i0;
        com.android.internal.util.IndentingPrintWriter $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.android.server.location.SettingsHelper$StringListCachedSecureSetting $r3, $r15;
        com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting $r4, $r29;
        java.lang.Object $r7, $r11, $r18, $r20;
        java.lang.String $r8, $r12, $r19, $r21;
        java.io.FileDescriptor r22;
        java.io.PrintWriter r23;
        java.util.List r25, r27;
        java.util.Iterator r26, r28, r31, r33;
        java.util.Set r30, r32;

        r0 := @this: com.android.server.location.SettingsHelper;

        r22 := @parameter0: java.io.FileDescriptor;

        r23 := @parameter1: java.io.PrintWriter;

        r1 := @parameter2: java.lang.String[];

        $r2 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r23, "  ");

        i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("Location Enabled: ");

        $z0 = virtualinvoke r0.<com.android.server.location.SettingsHelper: boolean isLocationEnabled(int)>(i0);

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(boolean)>($z0);

        $r3 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringListCachedSecureSetting mLocationPackageBlacklist>;

        r25 = virtualinvoke $r3.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: java.util.List getValueForUser(int)>(i0);

        $z1 = interfaceinvoke r25.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label05;

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Location Blacklisted Packages:");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r26 = interfaceinvoke r25.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z5 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label02;

        $r20 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (java.lang.String) $r20;

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r21);

        goto label01;

     label02:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        $r15 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringListCachedSecureSetting mLocationPackageWhitelist>;

        r27 = virtualinvoke $r15.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: java.util.List getValueForUser(int)>(i0);

        $z6 = interfaceinvoke r27.<java.util.List: boolean isEmpty()>();

        if $z6 != 0 goto label05;

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Location Whitelisted Packages:");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r28 = interfaceinvoke r27.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z7 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label04;

        $r18 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (java.lang.String) $r18;

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r19);

        goto label03;

     label04:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label05:
        $r29 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mBackgroundThrottlePackageWhitelist>;

        r30 = virtualinvoke $r29.<com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting: java.util.Set getValue()>();

        $z8 = interfaceinvoke r30.<java.util.Set: boolean isEmpty()>();

        if $z8 != 0 goto label08;

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Throttling Whitelisted Packages:");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r31 = interfaceinvoke r30.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z4 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label07;

        $r11 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.lang.String) $r11;

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r12);

        goto label06;

     label07:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label08:
        $r4 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mIgnoreSettingsPackageWhitelist>;

        r32 = virtualinvoke $r4.<com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting: java.util.Set getValue()>();

        $z2 = interfaceinvoke r32.<java.util.Set: boolean isEmpty()>();

        if $z2 != 0 goto label11;

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Bypass Whitelisted Packages:");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r33 = interfaceinvoke r32.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r7 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.String) $r7;

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r8);

        goto label09;

     label10:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label11:
        return;
    }

    public long getBackgroundThrottleIntervalMs()
    {
        com.android.server.location.SettingsHelper r0;
        com.android.server.location.SettingsHelper$LongGlobalSetting $r1;
        long $l0;

        r0 := @this: com.android.server.location.SettingsHelper;

        $r1 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$LongGlobalSetting mBackgroundThrottleIntervalMs>;

        $l0 = virtualinvoke $r1.<com.android.server.location.SettingsHelper$LongGlobalSetting: long getValue(long)>(1800000L);

        return $l0;
    }

    public java.util.Set getBackgroundThrottlePackageWhitelist()
    {
        com.android.server.location.SettingsHelper r0;
        com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting $r1;
        java.util.Set $r2;

        r0 := @this: com.android.server.location.SettingsHelper;

        $r1 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mBackgroundThrottlePackageWhitelist>;

        $r2 = virtualinvoke $r1.<com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting: java.util.Set getValue()>();

        return $r2;
    }

    public long getBackgroundThrottleProximityAlertIntervalMs()
    {
        com.android.server.location.SettingsHelper r0;
        long l0, l1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.location.SettingsHelper;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.location.SettingsHelper: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        l1 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>($r3, "location_background_throttle_proximity_alert_interval_ms", 1800000L);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return l1;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public float getCoarseLocationAccuracyM()
    {
        com.android.server.location.SettingsHelper r0;
        long l0;
        float f0;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.location.SettingsHelper;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.location.SettingsHelper: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        f0 = staticinvoke <android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)>($r3, "locationCoarseAccuracy", 2000.0F);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return f0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.Set getIgnoreSettingsPackageWhitelist()
    {
        com.android.server.location.SettingsHelper r0;
        com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting $r1;
        java.util.Set $r2;

        r0 := @this: com.android.server.location.SettingsHelper;

        $r1 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mIgnoreSettingsPackageWhitelist>;

        $r2 = virtualinvoke $r1.<com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting: java.util.Set getValue()>();

        return $r2;
    }

    public boolean isLocationEnabled(int)
    {
        com.android.server.location.SettingsHelper r0;
        int i0, $i1;
        com.android.server.location.SettingsHelper$IntegerSecureSetting r1;
        boolean z0;

        r0 := @this: com.android.server.location.SettingsHelper;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$IntegerSecureSetting mLocationMode>;

        z0 = 0;

        $i1 = virtualinvoke r1.<com.android.server.location.SettingsHelper$IntegerSecureSetting: int getValueForUser(int,int)>(0, i0);

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    public boolean isLocationPackageBlacklisted(int, java.lang.String)
    {
        com.android.server.location.SettingsHelper r0;
        int i0;
        java.lang.String r1, $r7, $r9;
        java.util.List r2, $r5;
        com.android.server.location.SettingsHelper$StringListCachedSecureSetting $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r6, $r8;
        java.util.Iterator r10, r11;

        r0 := @this: com.android.server.location.SettingsHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringListCachedSecureSetting mLocationPackageBlacklist>;

        r2 = virtualinvoke $r3.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: java.util.List getValueForUser(int)>(i0);

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringListCachedSecureSetting mLocationPackageWhitelist>;

        $r5 = virtualinvoke $r4.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: java.util.List getValueForUser(int)>(i0);

        r10 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.String) $r8;

        $z4 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r9);

        if $z4 == 0 goto label3;

        return 0;

     label3:
        goto label2;

     label4:
        r11 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        $z3 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r7);

        if $z3 == 0 goto label6;

        return 1;

     label6:
        goto label5;

     label7:
        return 0;
    }

    public void onSystemReady()
    {
        com.android.server.location.SettingsHelper r0;
        com.android.server.location.SettingsHelper$IntegerSecureSetting $r1;
        com.android.server.location.SettingsHelper$LongGlobalSetting $r2;
        com.android.server.location.SettingsHelper$StringListCachedSecureSetting $r3, $r4;
        com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting $r5, $r6;

        r0 := @this: com.android.server.location.SettingsHelper;

        $r1 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$IntegerSecureSetting mLocationMode>;

        staticinvoke <com.android.server.location.SettingsHelper$IntegerSecureSetting: void access$400(com.android.server.location.SettingsHelper$IntegerSecureSetting)>($r1);

        $r2 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$LongGlobalSetting mBackgroundThrottleIntervalMs>;

        virtualinvoke $r2.<com.android.server.location.SettingsHelper$LongGlobalSetting: void register()>();

        $r3 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringListCachedSecureSetting mLocationPackageBlacklist>;

        virtualinvoke $r3.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: void register()>();

        $r4 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringListCachedSecureSetting mLocationPackageWhitelist>;

        virtualinvoke $r4.<com.android.server.location.SettingsHelper$StringListCachedSecureSetting: void register()>();

        $r5 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mBackgroundThrottlePackageWhitelist>;

        virtualinvoke $r5.<com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting: void register()>();

        $r6 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mIgnoreSettingsPackageWhitelist>;

        virtualinvoke $r6.<com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting: void register()>();

        return;
    }

    public void removeOnBackgroundThrottleIntervalChangedListener(com.android.server.location.SettingsHelper$GlobalSettingChangedListener)
    {
        com.android.server.location.SettingsHelper r0;
        com.android.server.location.SettingsHelper$GlobalSettingChangedListener r1;
        com.android.server.location.SettingsHelper$LongGlobalSetting $r2;

        r0 := @this: com.android.server.location.SettingsHelper;

        r1 := @parameter0: com.android.server.location.SettingsHelper$GlobalSettingChangedListener;

        $r2 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$LongGlobalSetting mBackgroundThrottleIntervalMs>;

        virtualinvoke $r2.<com.android.server.location.SettingsHelper$LongGlobalSetting: void removeListener(com.android.server.location.SettingsHelper$UserSettingChangedListener)>(r1);

        return;
    }

    public void removeOnBackgroundThrottlePackageWhitelistChangedListener(com.android.server.location.SettingsHelper$GlobalSettingChangedListener)
    {
        com.android.server.location.SettingsHelper r0;
        com.android.server.location.SettingsHelper$GlobalSettingChangedListener r1;
        com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting $r2;

        r0 := @this: com.android.server.location.SettingsHelper;

        r1 := @parameter0: com.android.server.location.SettingsHelper$GlobalSettingChangedListener;

        $r2 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mBackgroundThrottlePackageWhitelist>;

        virtualinvoke $r2.<com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting: void removeListener(com.android.server.location.SettingsHelper$UserSettingChangedListener)>(r1);

        return;
    }

    public void removeOnIgnoreSettingsPackageWhitelistChangedListener(com.android.server.location.SettingsHelper$GlobalSettingChangedListener)
    {
        com.android.server.location.SettingsHelper r0;
        com.android.server.location.SettingsHelper$GlobalSettingChangedListener r1;
        com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting $r2;

        r0 := @this: com.android.server.location.SettingsHelper;

        r1 := @parameter0: com.android.server.location.SettingsHelper$GlobalSettingChangedListener;

        $r2 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting mIgnoreSettingsPackageWhitelist>;

        virtualinvoke $r2.<com.android.server.location.SettingsHelper$StringSetCachedGlobalSetting: void removeListener(com.android.server.location.SettingsHelper$UserSettingChangedListener)>(r1);

        return;
    }

    public void removeOnLocationEnabledChangedListener(com.android.server.location.SettingsHelper$UserSettingChangedListener)
    {
        com.android.server.location.SettingsHelper r0;
        com.android.server.location.SettingsHelper$UserSettingChangedListener r1;
        com.android.server.location.SettingsHelper$IntegerSecureSetting $r2;

        r0 := @this: com.android.server.location.SettingsHelper;

        r1 := @parameter0: com.android.server.location.SettingsHelper$UserSettingChangedListener;

        $r2 = r0.<com.android.server.location.SettingsHelper: com.android.server.location.SettingsHelper$IntegerSecureSetting mLocationMode>;

        virtualinvoke $r2.<com.android.server.location.SettingsHelper$IntegerSecureSetting: void removeListener(com.android.server.location.SettingsHelper$UserSettingChangedListener)>(r1);

        return;
    }

    public void setLocationEnabled(boolean, int)
    {
        com.android.server.location.SettingsHelper r0;
        boolean z0;
        int i0;
        long l1;
        android.content.Context $r1;
        java.lang.Throwable $r2;
        android.content.ContentResolver r3;
        byte b2;

        r0 := @this: com.android.server.location.SettingsHelper;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.location.SettingsHelper: android.content.Context mContext>;

        r3 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label2:
        if z0 == 0 goto label3;

        b2 = 3;

        goto label4;

     label3:
        b2 = 0;

     label4:
        staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r3, "location_mode", b2, i0);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label6:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void setLocationProviderAllowed(java.lang.String, boolean, int)
    {
        com.android.server.location.SettingsHelper r0;
        boolean z0, $z1, $z2;
        int i0;
        long l1;
        android.content.ContentResolver r1;
        java.lang.StringBuilder r2;
        java.lang.String $r3, $r4, $r8, r10, r11;
        android.content.Context $r5;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.location.SettingsHelper;

        r10 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r3 = "fused";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 != 0 goto label8;

        $r4 = "passive";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z2 == 0 goto label1;

        goto label8;

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r5 = r0.<com.android.server.location.SettingsHelper: android.content.Context mContext>;

        r1 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

     label3:
        if z0 == 0 goto label4;

        r11 = "+";

        goto label5;

     label4:
        r11 = "-";

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r1, "location_providers_allowed", $r8, i0);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label7:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r9;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static void <clinit>()
    {
        <com.android.server.location.SettingsHelper: java.lang.String LOCATION_PACKAGE_WHITELIST> = "locationPackagePrefixWhitelist";

        <com.android.server.location.SettingsHelper: java.lang.String LOCATION_PACKAGE_BLACKLIST> = "locationPackagePrefixBlacklist";

        <com.android.server.location.SettingsHelper: float DEFAULT_COARSE_LOCATION_ACCURACY_M> = 2000.0F;

        <com.android.server.location.SettingsHelper: long DEFAULT_BACKGROUND_THROTTLE_PROXIMITY_ALERT_INTERVAL_MS> = 1800000L;

        <com.android.server.location.SettingsHelper: long DEFAULT_BACKGROUND_THROTTLE_INTERVAL_MS> = 1800000L;

        return;
    }
}
