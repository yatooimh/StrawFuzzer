public abstract class com.android.server.location.gnss.GnssAntennaInfoProvider extends com.android.server.location.RemoteListenerHelper
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private boolean mIsListeningStarted;
    private final com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative mNative;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.location.gnss.GnssAntennaInfoProvider: java.lang.String TAG> = "GnssAntennaInfoProvider";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GnssAntennaInfoProvider", 3);

        <com.android.server.location.gnss.GnssAntennaInfoProvider: boolean DEBUG> = $z0;

        return;
    }

    protected void <init>(android.content.Context, android.os.Handler)
    {
        com.android.server.location.gnss.GnssAntennaInfoProvider r0;
        android.content.Context r1;
        android.os.Handler r2;
        com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative $r3;

        r0 := @this: com.android.server.location.gnss.GnssAntennaInfoProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        $r3 = new com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative;

        specialinvoke $r3.<com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative: void <init>()>();

        specialinvoke r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: void <init>(android.content.Context,android.os.Handler,com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative)>(r1, r2, $r3);

        return;
    }

    public void <init>(android.content.Context, android.os.Handler, com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative)
    {
        com.android.server.location.gnss.GnssAntennaInfoProvider r0;
        android.content.Context r1;
        android.os.Handler r2;
        com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative r3;

        r0 := @this: com.android.server.location.gnss.GnssAntennaInfoProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative;

        specialinvoke r0.<com.android.server.location.RemoteListenerHelper: void <init>(android.content.Context,android.os.Handler,java.lang.String)>(r1, r2, "GnssAntennaInfoProvider");

        r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative mNative> = r3;

        return;
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssAntennaInfoProvider: boolean native_is_antenna_info_supported()>();

        return $z0;
    }

    static boolean access$100()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssAntennaInfoProvider: boolean native_start_antenna_info_listening()>();

        return $z0;
    }

    static boolean access$200()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssAntennaInfoProvider: boolean native_stop_antenna_info_listening()>();

        return $z0;
    }

    static void lambda$getHandlerOperation$0(android.location.IGnssAntennaInfoListener, com.android.server.location.CallerIdentity) throws android.os.RemoteException
    {
        android.location.IGnssAntennaInfoListener r0;
        com.android.server.location.CallerIdentity r1;

        r0 := @parameter0: android.location.IGnssAntennaInfoListener;

        r1 := @parameter1: com.android.server.location.CallerIdentity;

        return;
    }

    private static native boolean native_is_antenna_info_supported();

    private static native boolean native_start_antenna_info_listening();

    private static native boolean native_stop_antenna_info_listening();

    protected com.android.server.location.RemoteListenerHelper$ListenerOperation getHandlerOperation(int)
    {
        com.android.server.location.gnss.GnssAntennaInfoProvider r0;
        int i0;
        com.android.server.location.gnss.'-$$Lambda$GnssAntennaInfoProvider$6tStkOUFQdyPwrIlenWNx1CLtUg' $r1;
        com.android.server.location.RemoteListenerHelper$ListenerOperation r2;

        r0 := @this: com.android.server.location.gnss.GnssAntennaInfoProvider;

        i0 := @parameter0: int;

        $r1 = <com.android.server.location.gnss._$$Lambda$GnssAntennaInfoProvider$6tStkOUFQdyPwrIlenWNx1CLtUg: com.android.server.location.gnss.'-$$Lambda$GnssAntennaInfoProvider$6tStkOUFQdyPwrIlenWNx1CLtUg' INSTANCE>;

        r2 = (com.android.server.location.RemoteListenerHelper$ListenerOperation) $r1;

        return r2;
    }

    public boolean isAvailableInPlatform()
    {
        com.android.server.location.gnss.GnssAntennaInfoProvider r0;
        com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.gnss.GnssAntennaInfoProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative mNative>;

        $z0 = virtualinvoke $r1.<com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative: boolean isAntennaInfoSupported()>();

        return $z0;
    }

    public void lambda$onGnssAntennaInfoAvailable$1$GnssAntennaInfoProvider(java.util.List, android.location.IGnssAntennaInfoListener, com.android.server.location.CallerIdentity) throws android.os.RemoteException
    {
        com.android.server.location.gnss.GnssAntennaInfoProvider r0;
        java.util.List r1;
        android.location.IGnssAntennaInfoListener r2;
        com.android.server.location.CallerIdentity r3;
        android.content.Context $r4;
        boolean $z0;
        java.lang.String $r5;

        r0 := @this: com.android.server.location.gnss.GnssAntennaInfoProvider;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.location.IGnssAntennaInfoListener;

        r3 := @parameter2: com.android.server.location.CallerIdentity;

        $r4 = r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: android.content.Context mContext>;

        $z0 = virtualinvoke r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: boolean hasPermission(android.content.Context,com.android.server.location.CallerIdentity)>($r4, r3);

        if $z0 != 0 goto label1;

        $r5 = r3.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        virtualinvoke r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: void logPermissionDisabledEventNotReported(java.lang.String,java.lang.String,java.lang.String)>("GnssAntennaInfoProvider", $r5, "GNSS antenna info");

        return;

     label1:
        interfaceinvoke r2.<android.location.IGnssAntennaInfoListener: void onGnssAntennaInfoReceived(java.util.List)>(r1);

        return;
    }

    public void onCapabilitiesUpdated(boolean)
    {
        com.android.server.location.gnss.GnssAntennaInfoProvider r0;
        boolean z0;

        r0 := @this: com.android.server.location.gnss.GnssAntennaInfoProvider;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: void setSupported(boolean)>(z0);

        virtualinvoke r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: void updateResult()>();

        return;
    }

    public void onGnssAntennaInfoAvailable(java.util.List)
    {
        com.android.server.location.gnss.GnssAntennaInfoProvider r0;
        java.util.List r1;
        com.android.server.location.gnss._$$Lambda$GnssAntennaInfoProvider$jWS_iJ6LE00DEMXMePHMZafshRk $r2;

        r0 := @this: com.android.server.location.gnss.GnssAntennaInfoProvider;

        r1 := @parameter0: java.util.List;

        $r2 = new com.android.server.location.gnss._$$Lambda$GnssAntennaInfoProvider$jWS_iJ6LE00DEMXMePHMZafshRk;

        specialinvoke $r2.<com.android.server.location.gnss._$$Lambda$GnssAntennaInfoProvider$jWS_iJ6LE00DEMXMePHMZafshRk: void <init>(com.android.server.location.gnss.GnssAntennaInfoProvider,java.util.List)>(r0, r1);

        virtualinvoke r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: void foreach(com.android.server.location.RemoteListenerHelper$ListenerOperation)>($r2);

        return;
    }

    public void onGpsEnabledChanged()
    {
        com.android.server.location.gnss.GnssAntennaInfoProvider r0;

        r0 := @this: com.android.server.location.gnss.GnssAntennaInfoProvider;

        virtualinvoke r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: void tryUpdateRegistrationWithService()>();

        virtualinvoke r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: void updateResult()>();

        return;
    }

    protected int registerWithService()
    {
        com.android.server.location.gnss.GnssAntennaInfoProvider r0;
        com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.gnss.GnssAntennaInfoProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative mNative>;

        $z0 = virtualinvoke $r1.<com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative: boolean startAntennaInfoListening()>();

        if $z0 == 0 goto label1;

        r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: boolean mIsListeningStarted> = 1;

        return 0;

     label1:
        return 4;
    }

    void resumeIfStarted()
    {
        com.android.server.location.gnss.GnssAntennaInfoProvider r0;
        boolean $z0, $z1;
        com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative $r1;

        r0 := @this: com.android.server.location.gnss.GnssAntennaInfoProvider;

        $z0 = <com.android.server.location.gnss.GnssAntennaInfoProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssAntennaInfoProvider", "resumeIfStarted");

     label1:
        $z1 = r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: boolean mIsListeningStarted>;

        if $z1 == 0 goto label2;

        $r1 = r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative mNative>;

        virtualinvoke $r1.<com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative: boolean startAntennaInfoListening()>();

     label2:
        return;
    }

    protected void unregisterFromService()
    {
        com.android.server.location.gnss.GnssAntennaInfoProvider r0;
        com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.gnss.GnssAntennaInfoProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative mNative>;

        $z0 = virtualinvoke $r1.<com.android.server.location.gnss.GnssAntennaInfoProvider$GnssAntennaInfoProviderNative: boolean stopAntennaInfoListening()>();

        if $z0 == 0 goto label1;

        r0.<com.android.server.location.gnss.GnssAntennaInfoProvider: boolean mIsListeningStarted> = 0;

     label1:
        return;
    }
}
