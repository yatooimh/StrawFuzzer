class com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative extends java.lang.Object
{

    void <init>()
    {
        com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative r0;

        r0 := @this: com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void cleanupBatching()
    {
        com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative r0;

        r0 := @this: com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative;

        staticinvoke <com.android.server.location.gnss.GnssBatchingProvider: void access$500()>();

        return;
    }

    public void flushBatch()
    {
        com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative r0;

        r0 := @this: com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative;

        staticinvoke <com.android.server.location.gnss.GnssBatchingProvider: void access$200()>();

        return;
    }

    public int getBatchSize()
    {
        com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative r0;
        int $i0;

        r0 := @this: com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative;

        $i0 = staticinvoke <com.android.server.location.gnss.GnssBatchingProvider: int access$000()>();

        return $i0;
    }

    public boolean initBatching()
    {
        com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative r0;
        boolean $z0;

        r0 := @this: com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssBatchingProvider: boolean access$400()>();

        return $z0;
    }

    public boolean startBatch(long, boolean)
    {
        com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative r0;
        long l0;
        boolean z0, $z1;

        r0 := @this: com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $z1 = staticinvoke <com.android.server.location.gnss.GnssBatchingProvider: boolean access$100(long,boolean)>(l0, z0);

        return $z1;
    }

    public boolean stopBatch()
    {
        com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative r0;
        boolean $z0;

        r0 := @this: com.android.server.location.gnss.GnssBatchingProvider$GnssBatchingProviderNative;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssBatchingProvider: boolean access$300()>();

        return $z0;
    }
}
