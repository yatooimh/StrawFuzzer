class com.android.server.location.gnss.GnssGeofenceProvider extends android.location.IGpsGeofenceHardware$Stub
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final android.util.SparseArray mGeofenceEntries;
    private final java.lang.Object mLock;
    private final com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative mNative;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.location.gnss.GnssGeofenceProvider: java.lang.String TAG> = "GnssGeofenceProvider";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GnssGeofenceProvider", 3);

        <com.android.server.location.gnss.GnssGeofenceProvider: boolean DEBUG> = $z0;

        return;
    }

    void <init>()
    {
        com.android.server.location.gnss.GnssGeofenceProvider r0;
        com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative $r1;

        r0 := @this: com.android.server.location.gnss.GnssGeofenceProvider;

        $r1 = new com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative;

        specialinvoke $r1.<com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative: void <init>()>();

        specialinvoke r0.<com.android.server.location.gnss.GnssGeofenceProvider: void <init>(com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative)>($r1);

        return;
    }

    void <init>(com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative)
    {
        com.android.server.location.gnss.GnssGeofenceProvider r0;
        com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative r1;
        java.lang.Object $r2;
        android.util.SparseArray $r3;

        r0 := @this: com.android.server.location.gnss.GnssGeofenceProvider;

        r1 := @parameter0: com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative;

        specialinvoke r0.<android.location.IGpsGeofenceHardware$Stub: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.gnss.GnssGeofenceProvider: java.lang.Object mLock> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.location.gnss.GnssGeofenceProvider: android.util.SparseArray mGeofenceEntries> = $r3;

        r0.<com.android.server.location.gnss.GnssGeofenceProvider: com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative mNative> = r1;

        return;
    }

    static boolean access$100()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssGeofenceProvider: boolean native_is_geofence_supported()>();

        return $z0;
    }

    static boolean access$200(int, double, double, double, int, int, int, int)
    {
        int i0, i1, i2, i3, i4;
        double d0, d1, d2;
        boolean $z0;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssGeofenceProvider: boolean native_add_geofence(int,double,double,double,int,int,int,int)>(i0, d0, d1, d2, i1, i2, i3, i4);

        return $z0;
    }

    static boolean access$300(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssGeofenceProvider: boolean native_remove_geofence(int)>(i0);

        return $z0;
    }

    static boolean access$400(int, int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssGeofenceProvider: boolean native_resume_geofence(int,int)>(i0, i1);

        return $z0;
    }

    static boolean access$500(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssGeofenceProvider: boolean native_pause_geofence(int)>(i0);

        return $z0;
    }

    private static native boolean native_add_geofence(int, double, double, double, int, int, int, int);

    private static native boolean native_is_geofence_supported();

    private static native boolean native_pause_geofence(int);

    private static native boolean native_remove_geofence(int);

    private static native boolean native_resume_geofence(int, int);

    public boolean addCircularHardwareGeofence(int, double, double, double, int, int, int, int)
    {
        com.android.server.location.gnss.GnssGeofenceProvider r0;
        int i0, i1, i2, i3, i4;
        double d0, d1, d2;
        java.lang.Object r1;
        boolean z0;
        com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative $r2;
        android.util.SparseArray $r3;
        java.lang.Throwable $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, r13;
        com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry r12;

        r0 := @this: com.android.server.location.gnss.GnssGeofenceProvider;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        r1 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative mNative>;

        z0 = virtualinvoke $r2.<com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative: boolean addGeofence(int,double,double,double,int,int,int,int)>(i0, d0, d1, d2, i1, i2, i3, i4);

     label02:
        if z0 == 0 goto label18;

     label03:
        r12 = new com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry;

        specialinvoke r12.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: void <init>(com.android.server.location.gnss.GnssGeofenceProvider$1)>(null);

        r12.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: int geofenceId> = i0;

     label04:
        r12.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: double latitude> = d0;

     label05:
        r12.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: double longitude> = d1;

     label06:
        r12.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: double radius> = d2;

     label07:
        r12.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: int lastTransition> = i1;

     label08:
        r12.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: int monitorTransitions> = i2;

     label09:
        r12.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: int notificationResponsiveness> = i3;

     label10:
        r12.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: int unknownTimer> = i4;

        $r3 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: android.util.SparseArray mGeofenceEntries>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r12);

     label11:
        goto label18;

     label12:
        $r8 := @caughtexception;

        r13 = $r8;

        goto label21;

     label13:
        $r11 := @caughtexception;

        r13 = $r11;

        goto label21;

     label14:
        $r7 := @caughtexception;

        r13 = $r7;

        goto label21;

     label15:
        $r10 := @caughtexception;

        r13 = $r10;

        goto label21;

     label16:
        $r9 := @caughtexception;

        r13 = $r9;

        goto label21;

     label17:
        $r5 := @caughtexception;

        r13 = $r5;

        goto label21;

     label18:
        exitmonitor r1;

     label19:
        return z0;

     label20:
        $r6 := @caughtexception;

        r13 = $r6;

     label21:
        exitmonitor r1;

     label22:
        throw r13;

     label23:
        $r4 := @caughtexception;

        r13 = $r4;

        goto label21;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
    }

    public boolean isHardwareGeofenceSupported()
    {
        com.android.server.location.gnss.GnssGeofenceProvider r0;
        java.lang.Object r1;
        boolean z0;
        com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.location.gnss.GnssGeofenceProvider;

        r1 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative mNative>;

        z0 = virtualinvoke $r3.<com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative: boolean isGeofenceSupported()>();

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean pauseHardwareGeofence(int)
    {
        com.android.server.location.gnss.GnssGeofenceProvider r0;
        int i0;
        java.lang.Object r1, $r4;
        boolean z0;
        com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative $r2;
        android.util.SparseArray $r3;
        java.lang.Throwable $r5;
        com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry r6;

        r0 := @this: com.android.server.location.gnss.GnssGeofenceProvider;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative mNative>;

        z0 = virtualinvoke $r2.<com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative: boolean pauseGeofence(int)>(i0);

     label02:
        if z0 == 0 goto label06;

     label03:
        $r3 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: android.util.SparseArray mGeofenceEntries>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry) $r4;

     label04:
        if r6 == null goto label06;

     label05:
        r6.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: boolean paused> = 1;

     label06:
        exitmonitor r1;

     label07:
        return z0;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean removeHardwareGeofence(int)
    {
        com.android.server.location.gnss.GnssGeofenceProvider r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative $r3;
        android.util.SparseArray $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.location.gnss.GnssGeofenceProvider;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative mNative>;

        z0 = virtualinvoke $r3.<com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative: boolean removeGeofence(int)>(i0);

     label2:
        if z0 == 0 goto label4;

     label3:
        $r4 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: android.util.SparseArray mGeofenceEntries>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean resumeHardwareGeofence(int, int)
    {
        com.android.server.location.gnss.GnssGeofenceProvider r0;
        int i0, i1;
        java.lang.Object r1, $r4;
        boolean z0;
        com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative $r2;
        android.util.SparseArray $r3;
        java.lang.Throwable $r5;
        com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry r6;

        r0 := @this: com.android.server.location.gnss.GnssGeofenceProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative mNative>;

        z0 = virtualinvoke $r2.<com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative: boolean resumeGeofence(int,int)>(i0, i1);

     label02:
        if z0 == 0 goto label06;

     label03:
        $r3 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: android.util.SparseArray mGeofenceEntries>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry) $r4;

     label04:
        if r6 == null goto label06;

     label05:
        r6.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: boolean paused> = 0;

        r6.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: int monitorTransitions> = i1;

     label06:
        exitmonitor r1;

     label07:
        return z0;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void resumeIfStarted()
    {
        com.android.server.location.gnss.GnssGeofenceProvider r0;
        java.lang.Object r1, $r3;
        boolean $z0, $z1, $z2;
        android.util.SparseArray $r2, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7, $i8;
        double $d0, $d1, $d2;
        com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative $r4, $r5;
        java.lang.Throwable $r6;
        com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry r8;

        r0 := @this: com.android.server.location.gnss.GnssGeofenceProvider;

        $z0 = <com.android.server.location.gnss.GnssGeofenceProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssGeofenceProvider", "resumeIfStarted");

     label1:
        r1 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: java.lang.Object mLock>;

        entermonitor r1;

        i7 = 0;

     label2:
        $r7 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: android.util.SparseArray mGeofenceEntries>;

        $i8 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if i7 >= $i8 goto label4;

        $r2 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: android.util.SparseArray mGeofenceEntries>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        r8 = (com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry) $r3;

        $r4 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative mNative>;

        $i4 = r8.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: int geofenceId>;

        $d2 = r8.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: double latitude>;

        $d1 = r8.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: double longitude>;

        $d0 = r8.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: double radius>;

        $i3 = r8.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: int lastTransition>;

        $i2 = r8.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: int monitorTransitions>;

        $i1 = r8.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: int notificationResponsiveness>;

        $i0 = r8.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: int unknownTimer>;

        $z1 = virtualinvoke $r4.<com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative: boolean addGeofence(int,double,double,double,int,int,int,int)>($i4, $d2, $d1, $d0, $i3, $i2, $i1, $i0);

        if $z1 == 0 goto label3;

        $z2 = r8.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: boolean paused>;

        if $z2 == 0 goto label3;

        $r5 = r0.<com.android.server.location.gnss.GnssGeofenceProvider: com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative mNative>;

        $i5 = r8.<com.android.server.location.gnss.GnssGeofenceProvider$GeofenceEntry: int geofenceId>;

        virtualinvoke $r5.<com.android.server.location.gnss.GnssGeofenceProvider$GnssGeofenceProviderNative: boolean pauseGeofence(int)>($i5);

     label3:
        i7 = i7 + 1;

        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
