public class com.android.server.location.gnss.GnssLocationProvider extends com.android.server.location.AbstractLocationProvider implements com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback, com.android.server.location.gnss.GnssSatelliteBlacklistHelper$GnssSatelliteBlacklistCallback
{
    private static final int AGPS_REF_LOCATION_TYPE_GSM_CELLID;
    private static final int AGPS_REF_LOCATION_TYPE_UMTS_CELLID;
    private static final int AGPS_RIL_REQUEST_SETID_IMSI;
    private static final int AGPS_RIL_REQUEST_SETID_MSISDN;
    private static final int AGPS_SETID_TYPE_IMSI;
    private static final int AGPS_SETID_TYPE_MSISDN;
    private static final int AGPS_SETID_TYPE_NONE;
    private static final int AGPS_SUPL_MODE_MSA;
    private static final int AGPS_SUPL_MODE_MSB;
    private static final java.lang.String ALARM_TIMEOUT;
    private static final java.lang.String ALARM_WAKEUP;
    private static final boolean DEBUG;
    private static final java.lang.String DOWNLOAD_EXTRA_WAKELOCK_KEY;
    private static final int DOWNLOAD_PSDS_DATA;
    private static final int DOWNLOAD_PSDS_DATA_FINISHED;
    private static final long DOWNLOAD_PSDS_DATA_TIMEOUT_MS;
    private static final int ELAPSED_REALTIME_HAS_TIMESTAMP_NS;
    private static final int ELAPSED_REALTIME_HAS_TIME_UNCERTAINTY_NS;
    private static final int EMERGENCY_LOCATION_UPDATE_DURATION_MULTIPLIER;
    public static final int GPS_CAPABILITY_ANTENNA_INFO;
    public static final int GPS_CAPABILITY_GEOFENCING;
    public static final int GPS_CAPABILITY_LOW_POWER_MODE;
    public static final int GPS_CAPABILITY_MEASUREMENTS;
    public static final int GPS_CAPABILITY_MEASUREMENT_CORRECTIONS;
    private static final int GPS_CAPABILITY_MSA;
    private static final int GPS_CAPABILITY_MSB;
    public static final int GPS_CAPABILITY_NAV_MESSAGES;
    private static final int GPS_CAPABILITY_ON_DEMAND_TIME;
    public static final int GPS_CAPABILITY_SATELLITE_BLACKLIST;
    private static final int GPS_CAPABILITY_SCHEDULING;
    private static final int GPS_CAPABILITY_SINGLE_SHOT;
    private static final int GPS_DELETE_ALL;
    private static final int GPS_DELETE_ALMANAC;
    private static final int GPS_DELETE_CELLDB_INFO;
    private static final int GPS_DELETE_EPHEMERIS;
    private static final int GPS_DELETE_HEALTH;
    private static final int GPS_DELETE_IONO;
    private static final int GPS_DELETE_POSITION;
    private static final int GPS_DELETE_RTI;
    private static final int GPS_DELETE_SADATA;
    private static final int GPS_DELETE_SVDIR;
    private static final int GPS_DELETE_SVSTEER;
    private static final int GPS_DELETE_TIME;
    private static final int GPS_DELETE_UTC;
    private static final int GPS_GEOFENCE_AVAILABLE;
    private static final int GPS_GEOFENCE_ERROR_GENERIC;
    private static final int GPS_GEOFENCE_ERROR_ID_EXISTS;
    private static final int GPS_GEOFENCE_ERROR_ID_UNKNOWN;
    private static final int GPS_GEOFENCE_ERROR_INVALID_TRANSITION;
    private static final int GPS_GEOFENCE_ERROR_TOO_MANY_GEOFENCES;
    private static final int GPS_GEOFENCE_OPERATION_SUCCESS;
    private static final int GPS_GEOFENCE_UNAVAILABLE;
    private static final int GPS_POLLING_THRESHOLD_INTERVAL;
    private static final int GPS_POSITION_MODE_MS_ASSISTED;
    private static final int GPS_POSITION_MODE_MS_BASED;
    private static final int GPS_POSITION_MODE_STANDALONE;
    private static final int GPS_POSITION_RECURRENCE_PERIODIC;
    private static final int GPS_POSITION_RECURRENCE_SINGLE;
    private static final int GPS_STATUS_ENGINE_OFF;
    private static final int GPS_STATUS_ENGINE_ON;
    private static final int GPS_STATUS_NONE;
    private static final int GPS_STATUS_SESSION_BEGIN;
    private static final int GPS_STATUS_SESSION_END;
    private static final int INITIALIZE_HANDLER;
    private static final int INJECT_NTP_TIME;
    private static final float ITAR_SPEED_LIMIT_METERS_PER_SECOND;
    private static final int LOCATION_HAS_ALTITUDE;
    private static final int LOCATION_HAS_BEARING;
    private static final int LOCATION_HAS_BEARING_ACCURACY;
    private static final int LOCATION_HAS_HORIZONTAL_ACCURACY;
    private static final int LOCATION_HAS_LAT_LONG;
    private static final int LOCATION_HAS_SPEED;
    private static final int LOCATION_HAS_SPEED_ACCURACY;
    private static final int LOCATION_HAS_VERTICAL_ACCURACY;
    private static final int LOCATION_INVALID;
    private static final long LOCATION_OFF_DELAY_THRESHOLD_ERROR_MILLIS;
    private static final long LOCATION_OFF_DELAY_THRESHOLD_WARN_MILLIS;
    private static final long LOCATION_UPDATE_DURATION_MILLIS;
    private static final long LOCATION_UPDATE_MIN_TIME_INTERVAL_MILLIS;
    private static final long MAX_RETRY_INTERVAL;
    private static final int NO_FIX_TIMEOUT;
    private static final com.android.internal.location.ProviderProperties PROPERTIES;
    private static final int REPORT_LOCATION;
    private static final int REPORT_SV_STATUS;
    private static final int REQUEST_LOCATION;
    private static final long RETRY_INTERVAL;
    private static final int SET_REQUEST;
    private static final int STATE_DOWNLOADING;
    private static final int STATE_IDLE;
    private static final int STATE_PENDING_NETWORK;
    private static final java.lang.String TAG;
    private static final int TCP_MAX_PORT;
    private static final int TCP_MIN_PORT;
    private static final int UPDATE_LOW_POWER_MODE;
    private static final boolean VERBOSE;
    private static final java.lang.String WAKELOCK_KEY;
    private static final long WAKELOCK_TIMEOUT_MILLIS;
    private static boolean sIsInitialized;
    private static boolean sStaticTestOverride;
    private final android.app.AlarmManager mAlarmManager;
    private final android.app.AppOpsManager mAppOps;
    private final com.android.internal.app.IBatteryStats mBatteryStats;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private java.lang.String mC2KServerHost;
    private int mC2KServerPort;
    private android.os.WorkSource mClientSource;
    private final android.content.Context mContext;
    private final com.android.server.DeviceIdleInternal$StationaryListener mDeviceIdleStationaryListener;
    private boolean mDisableGpsForPowerManager;
    private int mDownloadPsdsDataPending;
    private final android.os.PowerManager$WakeLock mDownloadPsdsWakeLock;
    private int mFixInterval;
    private long mFixRequestTime;
    private final com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener mFusedLocationListener;
    private android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl;
    private final com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider;
    private final com.android.server.location.gnss.GnssBatchingProvider mGnssBatchingProvider;
    private final com.android.server.location.gnss.GnssCapabilitiesProvider mGnssCapabilitiesProvider;
    private com.android.server.location.gnss.GnssConfiguration mGnssConfiguration;
    private final com.android.server.location.gnss.GnssGeofenceProvider mGnssGeofenceProvider;
    private final com.android.server.location.gnss.GnssMeasurementCorrectionsProvider mGnssMeasurementCorrectionsProvider;
    private final com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider;
    private com.android.internal.location.gnssmetrics.GnssMetrics mGnssMetrics;
    private final com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider;
    private final com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusListenerHelper;
    private com.android.server.location.gnss.GnssVisibilityControl mGnssVisibilityControl;
    private boolean mGpsEnabled;
    private android.os.Handler mHandler;
    private volatile java.lang.String mHardwareModelName;
    private volatile int mHardwareYear;
    private volatile boolean mIsDeviceStationary;
    private volatile boolean mItarSpeedLimitExceeded;
    private long mLastFixTime;
    private com.android.server.location.gnss.GnssPositionMode mLastPositionMode;
    private final com.android.server.location.gnss.GnssLocationProvider$LocationExtras mLocationExtras;
    private final java.lang.Object mLock;
    private final android.os.Looper mLooper;
    private boolean mLowPowerMode;
    private final com.android.internal.location.GpsNetInitiatedHandler mNIHandler;
    private boolean mNavigating;
    private final android.location.INetInitiatedListener mNetInitiatedListener;
    private final com.android.server.location.gnss.GnssNetworkConnectivityHandler mNetworkConnectivityHandler;
    private final com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener mNetworkLocationListener;
    private byte[] mNmeaBuffer;
    private final com.android.server.location.gnss.NtpTimeHelper mNtpTimeHelper;
    private int mPositionMode;
    private final android.os.PowerManager mPowerManager;
    private com.android.internal.location.ProviderRequest mProviderRequest;
    private final com.android.server.location.gnss.ExponentialBackOff mPsdsBackOff;
    private boolean mShutdown;
    private boolean mStarted;
    private long mStartedChangedElapsedRealtime;
    private boolean mSuplEsEnabled;
    private java.lang.String mSuplServerHost;
    private int mSuplServerPort;
    private boolean mSupportsPsds;
    private int mTimeToFirstFix;
    private final android.app.PendingIntent mTimeoutIntent;
    private volatile int mTopHalCapabilities;
    private final android.os.PowerManager$WakeLock mWakeLock;
    private final android.app.PendingIntent mWakeupIntent;
    private android.os.WorkSource mWorkSource;

    static void <clinit>()
    {
        boolean $z0, $z1;
        com.android.internal.location.ProviderProperties $r0;

        <com.android.server.location.gnss.GnssLocationProvider: long WAKELOCK_TIMEOUT_MILLIS> = 30000L;

        <com.android.server.location.gnss.GnssLocationProvider: java.lang.String WAKELOCK_KEY> = "GnssLocationProvider";

        <com.android.server.location.gnss.GnssLocationProvider: int UPDATE_LOW_POWER_MODE> = 1;

        <com.android.server.location.gnss.GnssLocationProvider: int TCP_MIN_PORT> = 0;

        <com.android.server.location.gnss.GnssLocationProvider: int TCP_MAX_PORT> = 65535;

        <com.android.server.location.gnss.GnssLocationProvider: java.lang.String TAG> = "GnssLocationProvider";

        <com.android.server.location.gnss.GnssLocationProvider: int STATE_PENDING_NETWORK> = 0;

        <com.android.server.location.gnss.GnssLocationProvider: int STATE_IDLE> = 2;

        <com.android.server.location.gnss.GnssLocationProvider: int STATE_DOWNLOADING> = 1;

        <com.android.server.location.gnss.GnssLocationProvider: int SET_REQUEST> = 3;

        <com.android.server.location.gnss.GnssLocationProvider: long RETRY_INTERVAL> = 300000L;

        <com.android.server.location.gnss.GnssLocationProvider: int REQUEST_LOCATION> = 16;

        <com.android.server.location.gnss.GnssLocationProvider: int REPORT_SV_STATUS> = 18;

        <com.android.server.location.gnss.GnssLocationProvider: int REPORT_LOCATION> = 17;

        <com.android.server.location.gnss.GnssLocationProvider: int NO_FIX_TIMEOUT> = 60000;

        <com.android.server.location.gnss.GnssLocationProvider: long MAX_RETRY_INTERVAL> = 14400000L;

        <com.android.server.location.gnss.GnssLocationProvider: long LOCATION_UPDATE_MIN_TIME_INTERVAL_MILLIS> = 1000L;

        <com.android.server.location.gnss.GnssLocationProvider: long LOCATION_UPDATE_DURATION_MILLIS> = 10000L;

        <com.android.server.location.gnss.GnssLocationProvider: long LOCATION_OFF_DELAY_THRESHOLD_WARN_MILLIS> = 2000L;

        <com.android.server.location.gnss.GnssLocationProvider: long LOCATION_OFF_DELAY_THRESHOLD_ERROR_MILLIS> = 15000L;

        <com.android.server.location.gnss.GnssLocationProvider: int LOCATION_INVALID> = 0;

        <com.android.server.location.gnss.GnssLocationProvider: int LOCATION_HAS_VERTICAL_ACCURACY> = 32;

        <com.android.server.location.gnss.GnssLocationProvider: int LOCATION_HAS_SPEED_ACCURACY> = 64;

        <com.android.server.location.gnss.GnssLocationProvider: int LOCATION_HAS_SPEED> = 4;

        <com.android.server.location.gnss.GnssLocationProvider: int LOCATION_HAS_LAT_LONG> = 1;

        <com.android.server.location.gnss.GnssLocationProvider: int LOCATION_HAS_HORIZONTAL_ACCURACY> = 16;

        <com.android.server.location.gnss.GnssLocationProvider: int LOCATION_HAS_BEARING_ACCURACY> = 128;

        <com.android.server.location.gnss.GnssLocationProvider: int LOCATION_HAS_BEARING> = 8;

        <com.android.server.location.gnss.GnssLocationProvider: int LOCATION_HAS_ALTITUDE> = 2;

        <com.android.server.location.gnss.GnssLocationProvider: float ITAR_SPEED_LIMIT_METERS_PER_SECOND> = 400.0F;

        <com.android.server.location.gnss.GnssLocationProvider: int INJECT_NTP_TIME> = 5;

        <com.android.server.location.gnss.GnssLocationProvider: int INITIALIZE_HANDLER> = 13;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_STATUS_SESSION_END> = 2;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_STATUS_SESSION_BEGIN> = 1;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_STATUS_NONE> = 0;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_STATUS_ENGINE_ON> = 3;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_STATUS_ENGINE_OFF> = 4;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_POSITION_RECURRENCE_SINGLE> = 1;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_POSITION_RECURRENCE_PERIODIC> = 0;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_POSITION_MODE_STANDALONE> = 0;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_POSITION_MODE_MS_BASED> = 1;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_POSITION_MODE_MS_ASSISTED> = 2;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_POLLING_THRESHOLD_INTERVAL> = 10000;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_GEOFENCE_UNAVAILABLE> = 1;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_GEOFENCE_OPERATION_SUCCESS> = 0;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_GEOFENCE_ERROR_TOO_MANY_GEOFENCES> = 100;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_GEOFENCE_ERROR_INVALID_TRANSITION> = -103;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_GEOFENCE_ERROR_ID_UNKNOWN> = -102;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_GEOFENCE_ERROR_ID_EXISTS> = -101;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_GEOFENCE_ERROR_GENERIC> = -149;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_GEOFENCE_AVAILABLE> = 2;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_DELETE_UTC> = 32;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_DELETE_TIME> = 8;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_DELETE_SVSTEER> = 256;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_DELETE_SVDIR> = 128;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_DELETE_SADATA> = 512;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_DELETE_RTI> = 1024;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_DELETE_POSITION> = 4;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_DELETE_IONO> = 16;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_DELETE_HEALTH> = 64;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_DELETE_EPHEMERIS> = 1;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_DELETE_CELLDB_INFO> = 32768;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_DELETE_ALMANAC> = 2;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_DELETE_ALL> = 65535;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_CAPABILITY_SINGLE_SHOT> = 8;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_CAPABILITY_SCHEDULING> = 1;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_CAPABILITY_SATELLITE_BLACKLIST> = 512;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_CAPABILITY_ON_DEMAND_TIME> = 16;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_CAPABILITY_NAV_MESSAGES> = 128;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_CAPABILITY_MSB> = 2;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_CAPABILITY_MSA> = 4;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_CAPABILITY_MEASUREMENT_CORRECTIONS> = 1024;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_CAPABILITY_MEASUREMENTS> = 64;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_CAPABILITY_LOW_POWER_MODE> = 256;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_CAPABILITY_GEOFENCING> = 32;

        <com.android.server.location.gnss.GnssLocationProvider: int GPS_CAPABILITY_ANTENNA_INFO> = 2048;

        <com.android.server.location.gnss.GnssLocationProvider: int EMERGENCY_LOCATION_UPDATE_DURATION_MULTIPLIER> = 3;

        <com.android.server.location.gnss.GnssLocationProvider: int ELAPSED_REALTIME_HAS_TIME_UNCERTAINTY_NS> = 2;

        <com.android.server.location.gnss.GnssLocationProvider: int ELAPSED_REALTIME_HAS_TIMESTAMP_NS> = 1;

        <com.android.server.location.gnss.GnssLocationProvider: long DOWNLOAD_PSDS_DATA_TIMEOUT_MS> = 60000L;

        <com.android.server.location.gnss.GnssLocationProvider: int DOWNLOAD_PSDS_DATA_FINISHED> = 11;

        <com.android.server.location.gnss.GnssLocationProvider: int DOWNLOAD_PSDS_DATA> = 6;

        <com.android.server.location.gnss.GnssLocationProvider: java.lang.String DOWNLOAD_EXTRA_WAKELOCK_KEY> = "GnssLocationProviderPsdsDownload";

        <com.android.server.location.gnss.GnssLocationProvider: java.lang.String ALARM_WAKEUP> = "com.android.internal.location.ALARM_WAKEUP";

        <com.android.server.location.gnss.GnssLocationProvider: java.lang.String ALARM_TIMEOUT> = "com.android.internal.location.ALARM_TIMEOUT";

        <com.android.server.location.gnss.GnssLocationProvider: int AGPS_SUPL_MODE_MSB> = 1;

        <com.android.server.location.gnss.GnssLocationProvider: int AGPS_SUPL_MODE_MSA> = 2;

        <com.android.server.location.gnss.GnssLocationProvider: int AGPS_SETID_TYPE_NONE> = 0;

        <com.android.server.location.gnss.GnssLocationProvider: int AGPS_SETID_TYPE_MSISDN> = 2;

        <com.android.server.location.gnss.GnssLocationProvider: int AGPS_SETID_TYPE_IMSI> = 1;

        <com.android.server.location.gnss.GnssLocationProvider: int AGPS_RIL_REQUEST_SETID_MSISDN> = 2;

        <com.android.server.location.gnss.GnssLocationProvider: int AGPS_RIL_REQUEST_SETID_IMSI> = 1;

        <com.android.server.location.gnss.GnssLocationProvider: int AGPS_REF_LOCATION_TYPE_UMTS_CELLID> = 2;

        <com.android.server.location.gnss.GnssLocationProvider: int AGPS_REF_LOCATION_TYPE_GSM_CELLID> = 1;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GnssLocationProvider", 3);

        <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG> = $z0;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GnssLocationProvider", 2);

        <com.android.server.location.gnss.GnssLocationProvider: boolean VERBOSE> = $z1;

        $r0 = new com.android.internal.location.ProviderProperties;

        specialinvoke $r0.<com.android.internal.location.ProviderProperties: void <init>(boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>(0, 1, 0, 0, 1, 1, 1, 3, 1);

        <com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.ProviderProperties PROPERTIES> = $r0;

        <com.android.server.location.gnss.GnssLocationProvider: boolean sIsInitialized> = 0;

        <com.android.server.location.gnss.GnssLocationProvider: boolean sStaticTestOverride> = 0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        java.util.concurrent.Executor $r1;
        java.lang.Object $r2, $r15, $r18, $r27;
        com.android.server.location.gnss.ExponentialBackOff $r3;
        com.android.server.location.gnss.GnssLocationProvider$LocationExtras $r4;
        com.android.server.location.gnss.GnssLocationProvider$NetworkLocationListener $r5;
        com.android.server.location.gnss.GnssLocationProvider$FusedLocationListener $r6;
        android.os.WorkSource $r7;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$1hXQgNJS0Q8F8bUdWsxa94PM98g $r8;
        com.android.server.location.gnss.GnssLocationProvider$1 $r9;
        com.android.server.location.gnss.GnssLocationProvider$9 $r10;
        byte[] $r11;
        android.os.Handler $r12, $r43, $r46, $r49, $r51, $r54, $r71, $r77, r86;
        android.os.Looper $r13, $r32, $r41, $r60, $r63;
        android.content.Context $r14, $r17, $r21, $r24, $r26, $r34, $r44, $r47, $r52, $r55, $r58, $r61, $r64, $r68, $r73, r81;
        android.os.PowerManager $r16, r82;
        android.app.AlarmManager $r19;
        android.content.Intent $r20, $r23;
        android.app.PendingIntent $r22, $r25;
        android.app.AppOpsManager $r28;
        android.os.IBinder $r29;
        com.android.internal.app.IBatteryStats $r30, $r57;
        com.android.server.location.gnss.GnssLocationProvider$ProviderHandler $r31;
        com.android.server.location.gnss.GnssConfiguration $r33;
        com.android.server.location.gnss.GnssCapabilitiesProvider $r35;
        com.android.internal.location.GpsNetInitiatedHandler $r36, $r40;
        boolean $z0;
        android.location.INetInitiatedListener $r37;
        com.android.server.location.gnss.GnssNetworkConnectivityHandler $r38;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$48m7ukf99eMCKhVUjqljxXFFvWw $r39;
        com.android.server.location.gnss.GnssLocationProvider$2 $r42;
        com.android.server.location.gnss.GnssLocationProvider$3 $r45;
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider $r48;
        com.android.server.location.gnss.GnssLocationProvider$4 $r50;
        com.android.server.location.gnss.GnssLocationProvider$5 $r53;
        com.android.internal.location.gnssmetrics.GnssMetrics $r56;
        com.android.server.location.gnss.NtpTimeHelper $r59;
        com.android.server.location.gnss.GnssSatelliteBlacklistHelper $r62;
        com.android.server.location.gnss.GnssBatchingProvider $r65;
        com.android.server.location.gnss.GnssGeofenceProvider $r66;
        com.android.server.location.gnss.GnssLocationProvider$6 $r67;
        android.content.IntentFilter $r69;
        android.os.UserHandle $r70;
        android.content.ContentResolver $r74;
        android.net.Uri $r75;
        com.android.server.location.gnss.GnssLocationProvider$7 $r76;
        com.android.internal.location.ProviderProperties $r78;
        com.android.server.location.gnss._$$Lambda$J1FYzW5KOl5qaNdaO2TLZ9hbi9Y $r80;
        android.os.PowerManager$WakeLock r83, r84;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r81 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.server.FgThread: java.util.concurrent.Executor getExecutor()>();

        specialinvoke r0.<com.android.server.location.AbstractLocationProvider: void <init>(java.util.concurrent.Executor,android.content.Context)>($r1, r81);

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.Object mLock> = $r2;

        $r3 = new com.android.server.location.gnss.ExponentialBackOff;

        specialinvoke $r3.<com.android.server.location.gnss.ExponentialBackOff: void <init>(long,long)>(300000L, 14400000L);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.ExponentialBackOff mPsdsBackOff> = $r3;

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mDownloadPsdsDataPending> = 0;

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mFixInterval> = 1000;

        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mLowPowerMode> = 0;

        r0.<com.android.server.location.gnss.GnssLocationProvider: long mFixRequestTime> = 0L;

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mTimeToFirstFix> = 0;

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.WorkSource mWorkSource> = null;

        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mDisableGpsForPowerManager> = 0;

        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mIsDeviceStationary> = 0;

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mSuplServerPort> = 0;

        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mSuplEsEnabled> = 0;

        $r4 = new com.android.server.location.gnss.GnssLocationProvider$LocationExtras;

        specialinvoke $r4.<com.android.server.location.gnss.GnssLocationProvider$LocationExtras: void <init>()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssLocationProvider$LocationExtras mLocationExtras> = $r4;

        $r5 = new com.android.server.location.gnss.GnssLocationProvider$NetworkLocationListener;

        specialinvoke $r5.<com.android.server.location.gnss.GnssLocationProvider$NetworkLocationListener: void <init>(com.android.server.location.gnss.GnssLocationProvider,com.android.server.location.gnss.GnssLocationProvider$1)>(r0, null);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener mNetworkLocationListener> = $r5;

        $r6 = new com.android.server.location.gnss.GnssLocationProvider$FusedLocationListener;

        specialinvoke $r6.<com.android.server.location.gnss.GnssLocationProvider$FusedLocationListener: void <init>(com.android.server.location.gnss.GnssLocationProvider,com.android.server.location.gnss.GnssLocationProvider$1)>(r0, null);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener mFusedLocationListener> = $r6;

        $r7 = new android.os.WorkSource;

        specialinvoke $r7.<android.os.WorkSource: void <init>()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.WorkSource mClientSource> = $r7;

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mHardwareYear> = 0;

        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mItarSpeedLimitExceeded> = 0;

        $r8 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$1hXQgNJS0Q8F8bUdWsxa94PM98g;

        specialinvoke $r8.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$1hXQgNJS0Q8F8bUdWsxa94PM98g: void <init>(com.android.server.location.gnss.GnssLocationProvider)>(r0);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.DeviceIdleInternal$StationaryListener mDeviceIdleStationaryListener> = $r8;

        $r9 = new com.android.server.location.gnss.GnssLocationProvider$1;

        specialinvoke $r9.<com.android.server.location.gnss.GnssLocationProvider$1: void <init>(com.android.server.location.gnss.GnssLocationProvider)>(r0);

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.BroadcastReceiver mBroadcastReceiver> = $r9;

        $r10 = new com.android.server.location.gnss.GnssLocationProvider$9;

        specialinvoke $r10.<com.android.server.location.gnss.GnssLocationProvider$9: void <init>(com.android.server.location.gnss.GnssLocationProvider)>(r0);

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.location.INetInitiatedListener mNetInitiatedListener> = $r10;

        $r11 = newarray (byte)[120];

        r0.<com.android.server.location.gnss.GnssLocationProvider: byte[] mNmeaBuffer> = $r11;

        staticinvoke <com.android.server.location.gnss.GnssLocationProvider: void ensureInitialized()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext> = r81;

        $r12 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r13 = virtualinvoke $r12.<android.os.Handler: android.os.Looper getLooper()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Looper mLooper> = $r13;

        $r14 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r82 = (android.os.PowerManager) $r15;

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.PowerManager mPowerManager> = r82;

        r83 = virtualinvoke r82.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "GnssLocationProvider");

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.PowerManager$WakeLock mWakeLock> = r83;

        virtualinvoke r83.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(1);

        $r16 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.PowerManager mPowerManager>;

        r84 = virtualinvoke $r16.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "GnssLocationProviderPsdsDownload");

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.PowerManager$WakeLock mDownloadPsdsWakeLock> = r84;

        virtualinvoke r84.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(1);

        $r17 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r18 = virtualinvoke $r17.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r19 = (android.app.AlarmManager) $r18;

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AlarmManager mAlarmManager> = $r19;

        $r21 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r20 = new android.content.Intent;

        specialinvoke $r20.<android.content.Intent: void <init>(java.lang.String)>("com.android.internal.location.ALARM_WAKEUP");

        $r22 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r21, 0, $r20, 0);

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.PendingIntent mWakeupIntent> = $r22;

        $r24 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r23 = new android.content.Intent;

        specialinvoke $r23.<android.content.Intent: void <init>(java.lang.String)>("com.android.internal.location.ALARM_TIMEOUT");

        $r25 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r24, 0, $r23, 0);

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.PendingIntent mTimeoutIntent> = $r25;

        $r26 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r27 = virtualinvoke $r26.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r28 = (android.app.AppOpsManager) $r27;

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AppOpsManager mAppOps> = $r28;

        $r29 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("batterystats");

        $r30 = staticinvoke <com.android.internal.app.IBatteryStats$Stub: com.android.internal.app.IBatteryStats asInterface(android.os.IBinder)>($r29);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.app.IBatteryStats mBatteryStats> = $r30;

        $r31 = new com.android.server.location.gnss.GnssLocationProvider$ProviderHandler;

        $r32 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Looper mLooper>;

        specialinvoke $r31.<com.android.server.location.gnss.GnssLocationProvider$ProviderHandler: void <init>(com.android.server.location.gnss.GnssLocationProvider,android.os.Looper)>(r0, $r32);

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler> = $r31;

        $r33 = new com.android.server.location.gnss.GnssConfiguration;

        $r34 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        specialinvoke $r33.<com.android.server.location.gnss.GnssConfiguration: void <init>(android.content.Context)>($r34);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration> = $r33;

        $r35 = new com.android.server.location.gnss.GnssCapabilitiesProvider;

        specialinvoke $r35.<com.android.server.location.gnss.GnssCapabilitiesProvider: void <init>()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssCapabilitiesProvider mGnssCapabilitiesProvider> = $r35;

        $r36 = new com.android.internal.location.GpsNetInitiatedHandler;

        $r37 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.location.INetInitiatedListener mNetInitiatedListener>;

        $z0 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mSuplEsEnabled>;

        specialinvoke $r36.<com.android.internal.location.GpsNetInitiatedHandler: void <init>(android.content.Context,android.location.INetInitiatedListener,boolean)>(r81, $r37, $z0);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.GpsNetInitiatedHandler mNIHandler> = $r36;

        $r38 = new com.android.server.location.gnss.GnssNetworkConnectivityHandler;

        $r39 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$48m7ukf99eMCKhVUjqljxXFFvWw;

        specialinvoke $r39.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$48m7ukf99eMCKhVUjqljxXFFvWw: void <init>(com.android.server.location.gnss.GnssLocationProvider)>(r0);

        $r41 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Looper mLooper>;

        $r40 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.GpsNetInitiatedHandler mNIHandler>;

        specialinvoke $r38.<com.android.server.location.gnss.GnssNetworkConnectivityHandler: void <init>(android.content.Context,com.android.server.location.gnss.GnssNetworkConnectivityHandler$GnssNetworkListener,android.os.Looper,com.android.internal.location.GpsNetInitiatedHandler)>(r81, $r39, $r41, $r40);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssNetworkConnectivityHandler mNetworkConnectivityHandler> = $r38;

        $r42 = new com.android.server.location.gnss.GnssLocationProvider$2;

        $r44 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r43 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        specialinvoke $r42.<com.android.server.location.gnss.GnssLocationProvider$2: void <init>(com.android.server.location.gnss.GnssLocationProvider,android.content.Context,android.os.Handler)>(r0, $r44, $r43);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusListenerHelper> = $r42;

        $r45 = new com.android.server.location.gnss.GnssLocationProvider$3;

        $r47 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r46 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        specialinvoke $r45.<com.android.server.location.gnss.GnssLocationProvider$3: void <init>(com.android.server.location.gnss.GnssLocationProvider,android.content.Context,android.os.Handler)>(r0, $r47, $r46);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider> = $r45;

        $r48 = new com.android.server.location.gnss.GnssMeasurementCorrectionsProvider;

        $r49 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        specialinvoke $r48.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: void <init>(android.os.Handler)>($r49);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider mGnssMeasurementCorrectionsProvider> = $r48;

        $r50 = new com.android.server.location.gnss.GnssLocationProvider$4;

        $r52 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r51 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        specialinvoke $r50.<com.android.server.location.gnss.GnssLocationProvider$4: void <init>(com.android.server.location.gnss.GnssLocationProvider,android.content.Context,android.os.Handler)>(r0, $r52, $r51);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider> = $r50;

        $r53 = new com.android.server.location.gnss.GnssLocationProvider$5;

        $r55 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r54 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        specialinvoke $r53.<com.android.server.location.gnss.GnssLocationProvider$5: void <init>(com.android.server.location.gnss.GnssLocationProvider,android.content.Context,android.os.Handler)>(r0, $r55, $r54);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider> = $r53;

        $r56 = new com.android.internal.location.gnssmetrics.GnssMetrics;

        $r58 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r57 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.app.IBatteryStats mBatteryStats>;

        specialinvoke $r56.<com.android.internal.location.gnssmetrics.GnssMetrics: void <init>(android.content.Context,com.android.internal.app.IBatteryStats)>($r58, $r57);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.gnssmetrics.GnssMetrics mGnssMetrics> = $r56;

        $r59 = new com.android.server.location.gnss.NtpTimeHelper;

        $r61 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r60 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Looper mLooper>;

        specialinvoke $r59.<com.android.server.location.gnss.NtpTimeHelper: void <init>(android.content.Context,android.os.Looper,com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback)>($r61, $r60, r0);

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.NtpTimeHelper mNtpTimeHelper> = $r59;

        $r62 = new com.android.server.location.gnss.GnssSatelliteBlacklistHelper;

        $r64 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r63 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Looper mLooper>;

        specialinvoke $r62.<com.android.server.location.gnss.GnssSatelliteBlacklistHelper: void <init>(android.content.Context,android.os.Looper,com.android.server.location.gnss.GnssSatelliteBlacklistHelper$GnssSatelliteBlacklistCallback)>($r64, $r63, r0);

        $r65 = new com.android.server.location.gnss.GnssBatchingProvider;

        specialinvoke $r65.<com.android.server.location.gnss.GnssBatchingProvider: void <init>()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssBatchingProvider mGnssBatchingProvider> = $r65;

        $r66 = new com.android.server.location.gnss.GnssGeofenceProvider;

        specialinvoke $r66.<com.android.server.location.gnss.GnssGeofenceProvider: void <init>()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssGeofenceProvider mGnssGeofenceProvider> = $r66;

        $r68 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r67 = new com.android.server.location.gnss.GnssLocationProvider$6;

        specialinvoke $r67.<com.android.server.location.gnss.GnssLocationProvider$6: void <init>(com.android.server.location.gnss.GnssLocationProvider)>(r0);

        $r70 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r69 = new android.content.IntentFilter;

        specialinvoke $r69.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.ACTION_SHUTDOWN");

        $r71 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        virtualinvoke $r68.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r67, $r70, $r69, null, $r71);

        $r73 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r74 = virtualinvoke $r73.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r75 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("location_mode");

        $r76 = new com.android.server.location.gnss.GnssLocationProvider$7;

        $r77 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        specialinvoke $r76.<com.android.server.location.gnss.GnssLocationProvider$7: void <init>(com.android.server.location.gnss.GnssLocationProvider,android.os.Handler)>(r0, $r77);

        virtualinvoke $r74.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r75, 1, $r76, -1);

        $r78 = <com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.ProviderProperties PROPERTIES>;

        virtualinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setProperties(com.android.internal.location.ProviderProperties)>($r78);

        virtualinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setAllowed(boolean)>(1);

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void sendMessage(int,int,java.lang.Object)>(13, 0, null);

        r86 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r62);

        $r80 = new com.android.server.location.gnss._$$Lambda$J1FYzW5KOl5qaNdaO2TLZ9hbi9Y;

        specialinvoke $r80.<com.android.server.location.gnss._$$Lambda$J1FYzW5KOl5qaNdaO2TLZ9hbi9Y: void <init>(com.android.server.location.gnss.GnssSatelliteBlacklistHelper)>($r62);

        virtualinvoke r86.<android.os.Handler: boolean post(java.lang.Runnable)>($r80);

        return;
    }

    static boolean access$1002(com.android.server.location.gnss.GnssLocationProvider, boolean)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        z0 := @parameter1: boolean;

        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mShutdown> = z0;

        return z0;
    }

    static void access$1100(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void updateEnabled()>();

        return;
    }

    static boolean access$200()
    {
        boolean $z0;

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        return $z0;
    }

    static int access$2100(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int $i0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $i0 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mHardwareYear>;

        return $i0;
    }

    static java.lang.String access$2200(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.String mHardwareModelName>;

        return $r1;
    }

    static void access$2300(com.android.server.location.gnss.GnssLocationProvider, int, int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void native_send_ni_response(int,int)>(i0, i1);

        return;
    }

    static boolean access$2400(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $z0 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mSuplEsEnabled>;

        return $z0;
    }

    static void access$2500(com.android.server.location.gnss.GnssLocationProvider, com.android.internal.location.ProviderRequest, android.os.WorkSource)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.internal.location.ProviderRequest r1;
        android.os.WorkSource r2;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter1: com.android.internal.location.ProviderRequest;

        r2 := @parameter2: android.os.WorkSource;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void handleSetRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>(r1, r2);

        return;
    }

    static com.android.server.location.gnss.NtpTimeHelper access$2600(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.NtpTimeHelper $r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.NtpTimeHelper mNtpTimeHelper>;

        return $r1;
    }

    static void access$2700(com.android.server.location.gnss.GnssLocationProvider, boolean, boolean)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0, z1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void handleRequestLocation(boolean,boolean)>(z0, z1);

        return;
    }

    static void access$2800(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void handleDownloadPsdsData()>();

        return;
    }

    static int access$2902(com.android.server.location.gnss.GnssLocationProvider, int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter1: int;

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mDownloadPsdsDataPending> = i0;

        return i0;
    }

    static void access$300(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void startNavigating()>();

        return;
    }

    static void access$3000(com.android.server.location.gnss.GnssLocationProvider, boolean, android.location.Location)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0;
        android.location.Location r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.location.Location;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void handleReportLocation(boolean,android.location.Location)>(z0, r1);

        return;
    }

    static void access$3100(com.android.server.location.gnss.GnssLocationProvider, com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter1: com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void handleReportSvStatus(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r1);

        return;
    }

    static void access$3200(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void updateLowPowerMode()>();

        return;
    }

    static android.os.PowerManager$WakeLock access$3300(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.PowerManager$WakeLock mWakeLock>;

        return $r1;
    }

    static java.lang.String access$3400(com.android.server.location.gnss.GnssLocationProvider, int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.String messageIdAsString(int)>(i0);

        return $r1;
    }

    static void access$3500(com.android.server.location.gnss.GnssLocationProvider, boolean)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setupNativeGnssService(boolean)>(z0);

        return;
    }

    static boolean access$3600()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider: boolean native_is_gnss_visibility_control_supported()>();

        return $z0;
    }

    static com.android.server.location.gnss.GnssVisibilityControl access$3702(com.android.server.location.gnss.GnssLocationProvider, com.android.server.location.gnss.GnssVisibilityControl)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssVisibilityControl r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter1: com.android.server.location.gnss.GnssVisibilityControl;

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssVisibilityControl mGnssVisibilityControl> = r1;

        return r1;
    }

    static android.content.Context access$3800(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        return $r1;
    }

    static android.os.Looper access$3900(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.os.Looper $r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Looper mLooper>;

        return $r1;
    }

    static void access$400(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void hibernate()>();

        return;
    }

    static com.android.internal.location.GpsNetInitiatedHandler access$4000(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.internal.location.GpsNetInitiatedHandler $r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.GpsNetInitiatedHandler mNIHandler>;

        return $r1;
    }

    static void access$4100(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void reloadGpsProperties()>();

        return;
    }

    static android.content.BroadcastReceiver access$4200(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.content.BroadcastReceiver $r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.BroadcastReceiver mBroadcastReceiver>;

        return $r1;
    }

    static com.android.server.location.gnss.GnssNetworkConnectivityHandler access$4300(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssNetworkConnectivityHandler $r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssNetworkConnectivityHandler mNetworkConnectivityHandler>;

        return $r1;
    }

    static void access$4500(com.android.server.location.gnss.GnssLocationProvider, android.location.Location)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.location.Location r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter1: android.location.Location;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void injectLocation(android.location.Location)>(r1);

        return;
    }

    static void access$4600(com.android.server.location.gnss.GnssLocationProvider, android.location.Location)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.location.Location r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter1: android.location.Location;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void injectBestLocation(android.location.Location)>(r1);

        return;
    }

    static android.os.PowerManager access$500(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.os.PowerManager $r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.PowerManager mPowerManager>;

        return $r1;
    }

    static com.android.server.DeviceIdleInternal$StationaryListener access$600(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.DeviceIdleInternal$StationaryListener $r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.DeviceIdleInternal$StationaryListener mDeviceIdleStationaryListener>;

        return $r1;
    }

    static android.os.Handler access$700(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$800(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void subscriptionOrCarrierConfigChanged()>();

        return;
    }

    static boolean access$900(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        $z0 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean isGpsEnabled()>();

        return $z0;
    }

    private static native void class_init_native();

    private void deleteAidingData(android.os.Bundle)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.os.Bundle r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        char c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label01;

        c0 = 65535;

        goto label14;

     label01:
        c1 = 0;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("ephemeris");

        if $z0 == 0 goto label02;

        c1 = 0 | 1;

     label02:
        c2 = c1;

        $z1 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("almanac");

        if $z1 == 0 goto label03;

        c2 = c1 | 2;

     label03:
        c3 = c2;

        $z2 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("position");

        if $z2 == 0 goto label04;

        c3 = c2 | 4;

     label04:
        c4 = c3;

        $z3 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("time");

        if $z3 == 0 goto label05;

        c4 = c3 | 8;

     label05:
        c5 = c4;

        $z4 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("iono");

        if $z4 == 0 goto label06;

        c5 = c4 | 16;

     label06:
        c6 = c5;

        $z5 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("utc");

        if $z5 == 0 goto label07;

        c6 = c5 | 32;

     label07:
        c7 = c6;

        $z6 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("health");

        if $z6 == 0 goto label08;

        c7 = c6 | 64;

     label08:
        c8 = c7;

        $z7 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("svdir");

        if $z7 == 0 goto label09;

        c8 = c7 | 128;

     label09:
        c9 = c8;

        $z8 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("svsteer");

        if $z8 == 0 goto label10;

        c9 = c8 | 256;

     label10:
        c10 = c9;

        $z9 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("sadata");

        if $z9 == 0 goto label11;

        c10 = c9 | 512;

     label11:
        c11 = c10;

        $z10 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("rti");

        if $z10 == 0 goto label12;

        c11 = c10 | 1024;

     label12:
        c12 = c11;

        $z11 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("celldb-info");

        if $z11 == 0 goto label13;

        c12 = c11 | 32768;

     label13:
        c0 = c12;

        $z12 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("all");

        if $z12 == 0 goto label14;

        c0 = c12 | 65535;

     label14:
        if c0 == 0 goto label15;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void native_delete_aiding_data(int)>(c0);

     label15:
        return;
    }

    private static void ensureInitialized()
    {
        boolean $z0;
        java.lang.Throwable $r1;

        entermonitor class "Lcom/android/server/location/gnss/GnssLocationProvider;";

     label1:
        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean sIsInitialized>;

        if $z0 != 0 goto label2;

        staticinvoke <com.android.server.location.gnss.GnssLocationProvider: void class_init_native()>();

     label2:
        <com.android.server.location.gnss.GnssLocationProvider: boolean sIsInitialized> = 1;

     label3:
        exitmonitor class "Lcom/android/server/location/gnss/GnssLocationProvider;";

        return;

     label4:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/android/server/location/gnss/GnssLocationProvider;";

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private static int getGeofenceStatus(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == -149 goto label7;

        if i0 == 0 goto label6;

        if i0 == 100 goto label5;

        tableswitch(i0)
        {
            case -103: goto label4;
            case -102: goto label3;
            case -101: goto label2;
            default: goto label1;
        };

     label1:
        return -1;

     label2:
        return 2;

     label3:
        return 3;

     label4:
        return 4;

     label5:
        return 1;

     label6:
        return 0;

     label7:
        return 5;
    }

    private int getSuplMode(boolean)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0, $z1;
        int i0, $i1;
        com.android.server.location.gnss.GnssConfiguration $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        i0 = virtualinvoke $r1.<com.android.server.location.gnss.GnssConfiguration: int getSuplMode(int)>(0);

        if i0 != 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(2);

        if $z1 == 0 goto label2;

        $i1 = i0 & 1;

        if $i1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private void handleDisable()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssVisibilityControl r1;
        boolean $z0;
        android.os.WorkSource $r2;
        android.app.PendingIntent $r3, $r5;
        android.app.AlarmManager $r4, $r6;
        com.android.server.location.gnss.GnssBatchingProvider $r7;
        com.android.server.location.gnss.GnssAntennaInfoProvider $r8;
        com.android.server.location.gnss.GnssMeasurementsProvider $r9;
        com.android.server.location.gnss.GnssNavigationMessageProvider $r10;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "handleDisable");

     label1:
        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setGpsEnabled(boolean)>(0);

        $r2 = new android.os.WorkSource;

        specialinvoke $r2.<android.os.WorkSource: void <init>()>();

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void updateClientUids(android.os.WorkSource)>($r2);

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void stopNavigating()>();

        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.PendingIntent mWakeupIntent>;

        virtualinvoke $r4.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r3);

        $r6 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r5 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.PendingIntent mTimeoutIntent>;

        virtualinvoke $r6.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r5);

        r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssVisibilityControl mGnssVisibilityControl>;

        if r1 == null goto label2;

        virtualinvoke r1.<com.android.server.location.gnss.GnssVisibilityControl: void onGpsEnabledChanged(boolean)>(0);

     label2:
        $r7 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssBatchingProvider mGnssBatchingProvider>;

        virtualinvoke $r7.<com.android.server.location.gnss.GnssBatchingProvider: void disable()>();

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void native_cleanup()>();

        $r8 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider>;

        virtualinvoke $r8.<com.android.server.location.gnss.GnssAntennaInfoProvider: void onGpsEnabledChanged()>();

        $r9 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        virtualinvoke $r9.<com.android.server.location.gnss.GnssMeasurementsProvider: void onGpsEnabledChanged()>();

        $r10 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider>;

        virtualinvoke $r10.<com.android.server.location.gnss.GnssNavigationMessageProvider: void onGpsEnabledChanged()>();

        return;
    }

    private void handleDownloadPsdsData()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0;
        com.android.server.location.gnss.GnssNetworkConnectivityHandler $r3;
        android.os.PowerManager$WakeLock $r4;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$iQJ1BU_U60yAaoxpxAujpx_GZq4 $r5;
        java.util.concurrent.Executor $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $z0 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mSupportsPsds>;

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "handleDownloadPsdsData() called when PSDS not supported");

        return;

     label1:
        $i0 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mDownloadPsdsDataPending>;

        if $i0 != 1 goto label2;

        return;

     label2:
        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssNetworkConnectivityHandler mNetworkConnectivityHandler>;

        $z1 = virtualinvoke $r3.<com.android.server.location.gnss.GnssNetworkConnectivityHandler: boolean isDataNetworkConnected()>();

        if $z1 != 0 goto label3;

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mDownloadPsdsDataPending> = 0;

        return;

     label3:
        r0.<com.android.server.location.gnss.GnssLocationProvider: int mDownloadPsdsDataPending> = 1;

        r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.Object mLock>;

        entermonitor r1;

     label4:
        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.PowerManager$WakeLock mDownloadPsdsWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void acquire(long)>(60000L);

        exitmonitor r1;

     label5:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GnssLocationProvider", "WakeLock acquired by handleDownloadPsdsData()");

        $r6 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r5 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$iQJ1BU_U60yAaoxpxAujpx_GZq4;

        specialinvoke $r5.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$iQJ1BU_U60yAaoxpxAujpx_GZq4: void <init>(com.android.server.location.gnss.GnssLocationProvider)>(r0);

        interfaceinvoke $r6.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

        return;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r7;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void handleEnable()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean $z0, $z1, $z2;
        com.android.server.location.gnss.GnssMeasurementsProvider $r1;
        com.android.server.location.gnss.GnssNavigationMessageProvider $r2;
        com.android.server.location.gnss.GnssAntennaInfoProvider $r3;
        com.android.server.location.gnss.GnssBatchingProvider $r4;
        int $i1, $i2;
        java.lang.String r5, r6;
        com.android.server.location.gnss.GnssVisibilityControl r7;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "handleEnable");

     label1:
        $z1 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean native_init()>();

        if $z1 == 0 goto label4;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setGpsEnabled(boolean)>(1);

        $z2 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean native_supports_psds()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mSupportsPsds> = $z2;

        r5 = r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.String mSuplServerHost>;

        if r5 == null goto label2;

        $i2 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mSuplServerPort>;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void native_set_agps_server(int,java.lang.String,int)>(1, r5, $i2);

     label2:
        r6 = r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.String mC2KServerHost>;

        if r6 == null goto label3;

        $i1 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mC2KServerPort>;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void native_set_agps_server(int,java.lang.String,int)>(2, r6, $i1);

     label3:
        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        virtualinvoke $r1.<com.android.server.location.gnss.GnssMeasurementsProvider: void onGpsEnabledChanged()>();

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider>;

        virtualinvoke $r2.<com.android.server.location.gnss.GnssNavigationMessageProvider: void onGpsEnabledChanged()>();

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider>;

        virtualinvoke $r3.<com.android.server.location.gnss.GnssAntennaInfoProvider: void onGpsEnabledChanged()>();

        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssBatchingProvider mGnssBatchingProvider>;

        virtualinvoke $r4.<com.android.server.location.gnss.GnssBatchingProvider: void enable()>();

        r7 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssVisibilityControl mGnssVisibilityControl>;

        if r7 == null goto label5;

        virtualinvoke r7.<com.android.server.location.gnss.GnssVisibilityControl: void onGpsEnabledChanged(boolean)>(1);

        goto label5;

     label4:
        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setGpsEnabled(boolean)>(0);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GnssLocationProvider", "Failed to enable location provider");

     label5:
        return;
    }

    private void handleReportLocation(boolean, android.location.Location)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12, $z13, $z14;
        int i0, $i4, $i6, $i9, $i10, $i11, $i12, $i17, $i21, $i27;
        com.android.server.location.gnss.GnssLocationProvider$LocationExtras $r2;
        android.os.Bundle $r3;
        long $l1, $l2, $l7, $l8, $l18, $l19, $l20, l25, l26;
        byte $b3, $b14, $b24;
        android.app.PendingIntent $r4;
        android.app.AlarmManager $r5;
        com.android.server.location.gnss.GnssStatusListenerHelper $r6;
        com.android.internal.location.gnssmetrics.GnssMetrics $r7, $r17, $r18, $r19, $r25;
        java.lang.StringBuilder $r8, $r12, $r20;
        java.lang.String $r11, $r14, $r22, $r24, r28;
        float $f0, $f1;
        android.location.Location r26;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        z0 := @parameter0: boolean;

        r26 := @parameter1: android.location.Location;

        $z1 = virtualinvoke r26.<android.location.Location: boolean hasSpeed()>();

        if $z1 == 0 goto label03;

        $f1 = virtualinvoke r26.<android.location.Location: float getSpeed()>();

        $b24 = $f1 cmpl 400.0F;

        if $b24 <= 0 goto label01;

        z11 = 1;

        goto label02;

     label01:
        z11 = 0;

     label02:
        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mItarSpeedLimitExceeded> = z11;

     label03:
        $z12 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mItarSpeedLimitExceeded>;

        if $z12 == 0 goto label05;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GnssLocationProvider", "Hal reported a speed in excess of ITAR limit.  GPS/GNSS Navigation output blocked.");

        $z10 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mStarted>;

        if $z10 == 0 goto label04;

        $r25 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.gnssmetrics.GnssMetrics mGnssMetrics>;

        virtualinvoke $r25.<com.android.internal.location.gnssmetrics.GnssMetrics: void logReceivedLocationStatus(boolean)>(0);

     label04:
        return;

     label05:
        $z2 = <com.android.server.location.gnss.GnssLocationProvider: boolean VERBOSE>;

        if $z2 == 0 goto label06;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reportLocation ");

        $r22 = virtualinvoke r26.<android.location.Location: java.lang.String toString()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GnssLocationProvider", $r24);

     label06:
        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssLocationProvider$LocationExtras mLocationExtras>;

        $r3 = virtualinvoke $r2.<com.android.server.location.gnss.GnssLocationProvider$LocationExtras: android.os.Bundle getBundle()>();

        virtualinvoke r26.<android.location.Location: void setExtras(android.os.Bundle)>($r3);

        virtualinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void reportLocation(android.location.Location)>(r26);

        $z3 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mStarted>;

        if $z3 == 0 goto label08;

        $r17 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.gnssmetrics.GnssMetrics mGnssMetrics>;

        virtualinvoke $r17.<com.android.internal.location.gnssmetrics.GnssMetrics: void logReceivedLocationStatus(boolean)>(z0);

        if z0 == 0 goto label10;

        $z9 = virtualinvoke r26.<android.location.Location: boolean hasAccuracy()>();

        if $z9 == 0 goto label07;

        $r19 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.gnssmetrics.GnssMetrics mGnssMetrics>;

        $f0 = virtualinvoke r26.<android.location.Location: float getAccuracy()>();

        virtualinvoke $r19.<com.android.internal.location.gnssmetrics.GnssMetrics: void logPositionAccuracyMeters(float)>($f0);

     label07:
        $i17 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mTimeToFirstFix>;

        if $i17 <= 0 goto label10;

        $l18 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l19 = r0.<com.android.server.location.gnss.GnssLocationProvider: long mLastFixTime>;

        $l20 = $l18 - $l19;

        i0 = (int) $l20;

        $r18 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.gnssmetrics.GnssMetrics mGnssMetrics>;

        $i21 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mFixInterval>;

        virtualinvoke $r18.<com.android.internal.location.gnssmetrics.GnssMetrics: void logMissedReports(int,int)>($i21, i0);

        goto label10;

     label08:
        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<com.android.server.location.gnss.GnssLocationProvider: long mStartedChangedElapsedRealtime>;

        l25 = $l1 - $l2;

        $b3 = l25 cmp 2000L;

        if $b3 <= 0 goto label10;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected GNSS Location report ");

        $r14 = staticinvoke <android.util.TimeUtils: java.lang.String formatDuration(long)>(l25);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after location turned off");

        r28 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $b14 = l25 cmp 15000L;

        if $b14 <= 0 goto label09;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssLocationProvider", r28);

        goto label10;

     label09:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GnssLocationProvider", r28);

     label10:
        l26 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: long mLastFixTime> = l26;

        $i27 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mTimeToFirstFix>;

        if $i27 != 0 goto label13;

        if z0 == 0 goto label13;

        $l7 = r0.<com.android.server.location.gnss.GnssLocationProvider: long mFixRequestTime>;

        $l8 = l26 - $l7;

        $i9 = (int) $l8;

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mTimeToFirstFix> = $i9;

        $z7 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z7 == 0 goto label11;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TTFF: ");

        $i12 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mTimeToFirstFix>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", $r11);

     label11:
        $z8 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mStarted>;

        if $z8 == 0 goto label12;

        $r7 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.gnssmetrics.GnssMetrics mGnssMetrics>;

        $i11 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mTimeToFirstFix>;

        virtualinvoke $r7.<com.android.internal.location.gnssmetrics.GnssMetrics: void logTimeToFirstFixMilliSecs(int)>($i11);

     label12:
        $r6 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusListenerHelper>;

        $i10 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mTimeToFirstFix>;

        virtualinvoke $r6.<com.android.server.location.gnss.GnssStatusListenerHelper: void onFirstFix(int)>($i10);

     label13:
        $z13 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mStarted>;

        if $z13 == 0 goto label14;

        $z6 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(1);

        if $z6 != 0 goto label14;

        $i6 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mFixInterval>;

        if $i6 >= 60000 goto label14;

        $r5 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.PendingIntent mTimeoutIntent>;

        virtualinvoke $r5.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r4);

     label14:
        $z14 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(1);

        if $z14 != 0 goto label16;

        $z4 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mStarted>;

        if $z4 == 0 goto label16;

        $i4 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mFixInterval>;

        if $i4 <= 10000 goto label16;

        $z5 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z5 == 0 goto label15;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "got fix, hibernating");

     label15:
        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void hibernate()>();

     label16:
        return;
    }

    private void handleReportSvStatus(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.location.GnssStatus r1;
        com.android.server.location.gnss.GnssStatusListenerHelper $r3;
        int $i0, $i1, $i2, $i3, $i6, $i7, i9, i10, i11, i12, $i13, i14, i15, i16, i17, i18;
        int[] $r4, $r13;
        float[] $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r16, $r17, $r18;
        com.android.internal.location.gnssmetrics.GnssMetrics $r10, $r20, $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7;
        com.android.server.location.gnss.GnssLocationProvider$LocationExtras $r19;
        java.lang.StringBuilder $r21, $r41;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        java.lang.String $r39, $r44, r48, r49, r51, r52, r53;
        byte $b5;
        com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo r45;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r45 := @parameter0: com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusListenerHelper>;

        $i0 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: int access$1400(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $r4 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: int[] access$1500(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $r5 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1600(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $r6 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1700(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $r7 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1800(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $r8 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1900(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $r9 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$2000(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        virtualinvoke $r3.<com.android.server.location.gnss.GnssStatusListenerHelper: void onSvStatusChanged(int,int[],float[],float[],float[],float[],float[])>($i0, $r4, $r5, $r6, $r7, $r8, $r9);

        $r10 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.gnssmetrics.GnssMetrics mGnssMetrics>;

        $r11 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1600(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $i1 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: int access$1400(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $r12 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1900(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        virtualinvoke $r10.<com.android.internal.location.gnssmetrics.GnssMetrics: void logCn0(float[],int,float[])>($r11, $i1, $r12);

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean VERBOSE>;

        if $z0 == 0 goto label01;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SV count: ");

        $i7 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: int access$1400(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GnssLocationProvider", $r44);

     label01:
        $i2 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: int access$1400(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $r13 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: int[] access$1500(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $r14 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1600(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $r15 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1700(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $r16 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1800(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $r17 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1900(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        $r18 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$2000(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo)>(r45);

        r1 = staticinvoke <android.location.GnssStatus: android.location.GnssStatus wrap(int,int[],float[],float[],float[],float[],float[])>($i2, $r13, $r14, $r15, $r16, $r17, $r18);

        i9 = 0;

        i10 = 0;

        i11 = 0;

        i12 = 0;

     label02:
        $i13 = virtualinvoke r1.<android.location.GnssStatus: int getSatelliteCount()>();

        if i12 >= $i13 goto label14;

        i14 = i9;

        i15 = i10;

        i16 = i11;

        $z1 = virtualinvoke r1.<android.location.GnssStatus: boolean usedInFix(int)>(i12);

        if $z1 == 0 goto label04;

        i14 = i9 + 1;

        i17 = i10;

        $f5 = virtualinvoke r1.<android.location.GnssStatus: float getCn0DbHz(int)>(i12);

        $f6 = (float) i10;

        $b5 = $f5 cmpl $f6;

        if $b5 <= 0 goto label03;

        $f10 = virtualinvoke r1.<android.location.GnssStatus: float getCn0DbHz(int)>(i12);

        i17 = (int) $f10;

     label03:
        $f7 = (float) i11;

        $f8 = virtualinvoke r1.<android.location.GnssStatus: float getCn0DbHz(int)>(i12);

        $f9 = $f7 + $f8;

        i16 = (int) $f9;

        $r40 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.gnssmetrics.GnssMetrics mGnssMetrics>;

        $i6 = virtualinvoke r1.<android.location.GnssStatus: int getConstellationType(int)>(i12);

        virtualinvoke $r40.<com.android.internal.location.gnssmetrics.GnssMetrics: void logConstellationType(int)>($i6);

        i15 = i17;

     label04:
        $z5 = <com.android.server.location.gnss.GnssLocationProvider: boolean VERBOSE>;

        if $z5 == 0 goto label13;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("svid: ");

        $i3 = virtualinvoke r1.<android.location.GnssStatus: int getSvid(int)>(i12);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cn0: ");

        $f0 = virtualinvoke r1.<android.location.GnssStatus: float getCn0DbHz(int)>(i12);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" basebandCn0: ");

        $f1 = virtualinvoke r1.<android.location.GnssStatus: float getBasebandCn0DbHz(int)>(i12);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elev: ");

        $f2 = virtualinvoke r1.<android.location.GnssStatus: float getElevationDegrees(int)>(i12);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" azimuth: ");

        $f3 = virtualinvoke r1.<android.location.GnssStatus: float getAzimuthDegrees(int)>(i12);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" carrier frequency: ");

        $f4 = virtualinvoke r1.<android.location.GnssStatus: float getCn0DbHz(int)>(i12);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        z6 = virtualinvoke r1.<android.location.GnssStatus: boolean hasEphemerisData(int)>(i12);

        if z6 == 0 goto label05;

        r48 = " E";

        goto label06;

     label05:
        r48 = "  ";

     label06:
        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        r49 = "  ";

        $z2 = virtualinvoke r1.<android.location.GnssStatus: boolean hasAlmanacData(int)>(i12);

        if $z2 == 0 goto label07;

        r49 = " A";

     label07:
        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r49);

        z7 = virtualinvoke r1.<android.location.GnssStatus: boolean usedInFix(int)>(i12);

        if z7 == 0 goto label08;

        r51 = "U";

        goto label09;

     label08:
        r51 = "";

     label09:
        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $z3 = virtualinvoke r1.<android.location.GnssStatus: boolean hasCarrierFrequencyHz(int)>(i12);

        if $z3 == 0 goto label10;

        r52 = "F";

        goto label11;

     label10:
        r52 = "";

     label11:
        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        r53 = "";

        $z4 = virtualinvoke r1.<android.location.GnssStatus: boolean hasBasebandCn0DbHz(int)>(i12);

        if $z4 == 0 goto label12;

        r53 = "B";

     label12:
        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        $r39 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GnssLocationProvider", $r39);

     label13:
        i12 = i12 + 1;

        i9 = i14;

        i10 = i15;

        i11 = i16;

        goto label02;

     label14:
        i18 = i11;

        if i9 <= 0 goto label15;

        i18 = i11 / i9;

     label15:
        $r19 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssLocationProvider$LocationExtras mLocationExtras>;

        virtualinvoke $r19.<com.android.server.location.gnss.GnssLocationProvider$LocationExtras: void set(int,int,int)>(i9, i18, i10);

        $r20 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.gnssmetrics.GnssMetrics mGnssMetrics>;

        virtualinvoke $r20.<com.android.internal.location.gnssmetrics.GnssMetrics: void logSvStatus(android.location.GnssStatus)>(r1);

        return;
    }

    private void handleRequestLocation(boolean, boolean)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0, z1, $z2, $z3, $z5;
        long l0, l8;
        android.location.LocationManager r1;
        android.content.Context $r2, $r4;
        android.content.ContentResolver $r3;
        byte $b1;
        java.lang.Object $r5;
        android.location.LocationRequest $r6, $r7, r15;
        com.android.internal.location.GpsNetInitiatedHandler $r10;
        com.android.server.location.gnss.GnssConfiguration $r11;
        int $i4;
        java.lang.Throwable $r14;
        java.lang.String r16, $r21;
        com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener r17;
        com.android.server.location.gnss.GnssConfiguration$HalInterfaceVersion r18;
        java.lang.Object[] $r19;
        java.lang.Long $r20;
        android.os.Handler $r22, r24;
        android.os.Looper $r23;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$JndfaKf2MNdn0UzX_g2bR_w7fzA r25;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean isRequestLocationRateLimited()>();

        if $z2 == 0 goto label02;

        $z5 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z5 == 0 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "RequestLocation is denied due to too frequent requests.");

     label01:
        return;

     label02:
        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        l0 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>($r3, "gnss_hal_location_request_duration_millis", 10000L);

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label03;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GnssLocationProvider", "GNSS HAL location request is disabled by Settings.");

        return;

     label03:
        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location");

        r1 = (android.location.LocationManager) $r5;

        $r6 = new android.location.LocationRequest;

        specialinvoke $r6.<android.location.LocationRequest: void <init>()>();

        $r7 = virtualinvoke $r6.<android.location.LocationRequest: android.location.LocationRequest setInterval(long)>(1000L);

        r15 = virtualinvoke $r7.<android.location.LocationRequest: android.location.LocationRequest setFastestInterval(long)>(1000L);

        if z0 == 0 goto label04;

        r16 = "network";

        r17 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener mNetworkLocationListener>;

        virtualinvoke r15.<android.location.LocationRequest: android.location.LocationRequest setQuality(int)>(201);

        goto label05;

     label04:
        r16 = "fused";

        r17 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener mFusedLocationListener>;

        virtualinvoke r15.<android.location.LocationRequest: android.location.LocationRequest setQuality(int)>(100);

     label05:
        virtualinvoke r15.<android.location.LocationRequest: android.location.LocationRequest setProvider(java.lang.String)>(r16);

        l8 = l0;

        $r10 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.GpsNetInitiatedHandler mNIHandler>;

        $z3 = virtualinvoke $r10.<com.android.internal.location.GpsNetInitiatedHandler: boolean getInEmergency()>();

        if $z3 == 0 goto label07;

        $r11 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        r18 = virtualinvoke $r11.<com.android.server.location.gnss.GnssConfiguration: com.android.server.location.gnss.GnssConfiguration$HalInterfaceVersion getHalInterfaceVersion()>();

        if z1 != 0 goto label06;

        l8 = l0;

        $i4 = r18.<com.android.server.location.gnss.GnssConfiguration$HalInterfaceVersion: int mMajor>;

        if $i4 >= 2 goto label07;

     label06:
        virtualinvoke r15.<android.location.LocationRequest: android.location.LocationRequest setLocationSettingsIgnored(boolean)>(1);

        l8 = l0 * 3L;

     label07:
        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = r16;

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l8);

        $r19[1] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("GNSS HAL Requesting location updates from %s provider for %d millis.", $r19);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GnssLocationProvider", $r21);

     label08:
        $r22 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r23 = virtualinvoke $r22.<android.os.Handler: android.os.Looper getLooper()>();

        virtualinvoke r1.<android.location.LocationManager: void requestLocationUpdates(android.location.LocationRequest,android.location.LocationListener,android.os.Looper)>(r15, r17, $r23);

        staticinvoke <com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener: int access$1208(com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener)>(r17);

        r24 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        r25 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$JndfaKf2MNdn0UzX_g2bR_w7fzA;

        specialinvoke r25.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$JndfaKf2MNdn0UzX_g2bR_w7fzA: void <init>(com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener,java.lang.String,android.location.LocationManager)>(r17, r16, r1);

        virtualinvoke r24.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r25, l8);

     label09:
        goto label11;

     label10:
        $r14 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("GnssLocationProvider", "Unable to request location.", $r14);

     label11:
        return;

        catch java.lang.IllegalArgumentException from label08 to label09 with label10;
    }

    private void handleSetRequest(com.android.internal.location.ProviderRequest, android.os.WorkSource)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.internal.location.ProviderRequest r1;
        android.os.WorkSource r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: com.android.internal.location.ProviderRequest;

        r2 := @parameter1: android.os.WorkSource;

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest> = r1;

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.WorkSource mWorkSource> = r2;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void updateEnabled()>();

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void updateRequirements()>();

        return;
    }

    private boolean hasCapability(int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mTopHalCapabilities>;

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void hibernate()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        long l0, $l2, $l3;
        android.app.PendingIntent $r1, $r3, $r5;
        android.app.AlarmManager $r2, $r4, $r6;
        int $i1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void stopNavigating()>();

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.PendingIntent mTimeoutIntent>;

        virtualinvoke $r2.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r1);

        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.PendingIntent mWakeupIntent>;

        virtualinvoke $r4.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r3);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r6 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AlarmManager mAlarmManager>;

        $i1 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mFixInterval>;

        $l2 = (long) $i1;

        $l3 = $l2 + l0;

        $r5 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.PendingIntent mWakeupIntent>;

        virtualinvoke $r6.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(2, $l3, $r5);

        return;
    }

    private void injectBestLocation(android.location.Location)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.location.Location r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        double d0, d1, d2, $d3;
        float f0, f1, f2, f3, f4, f5;
        long l0, $l9;
        short $s1, $s2, $s3, $s4, $s5, $s6, $s7, s12, s13, s14, s15, s16, s17, s18;
        byte $b8, b11;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: android.location.Location;

        $z1 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z1 == 0 goto label01;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("injectBestLocation: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", $r6);

        goto label01;

     label01:
        z0 = virtualinvoke r1.<android.location.Location: boolean hasAltitude()>();

        b11 = 2;

        if z0 == 0 goto label02;

        s12 = 2;

        goto label03;

     label02:
        s12 = 0;

     label03:
        $z2 = virtualinvoke r1.<android.location.Location: boolean hasSpeed()>();

        if $z2 == 0 goto label04;

        s13 = 4;

        goto label05;

     label04:
        s13 = 0;

     label05:
        $z3 = virtualinvoke r1.<android.location.Location: boolean hasBearing()>();

        if $z3 == 0 goto label06;

        s14 = 8;

        goto label07;

     label06:
        s14 = 0;

     label07:
        $z4 = virtualinvoke r1.<android.location.Location: boolean hasAccuracy()>();

        if $z4 == 0 goto label08;

        s15 = 16;

        goto label09;

     label08:
        s15 = 0;

     label09:
        $z5 = virtualinvoke r1.<android.location.Location: boolean hasVerticalAccuracy()>();

        if $z5 == 0 goto label10;

        s16 = 32;

        goto label11;

     label10:
        s16 = 0;

     label11:
        $z6 = virtualinvoke r1.<android.location.Location: boolean hasSpeedAccuracy()>();

        if $z6 == 0 goto label12;

        s17 = 64;

        goto label13;

     label12:
        s17 = 0;

     label13:
        $z7 = virtualinvoke r1.<android.location.Location: boolean hasBearingAccuracy()>();

        if $z7 == 0 goto label14;

        s18 = 128;

        goto label15;

     label14:
        s18 = 0;

     label15:
        d0 = virtualinvoke r1.<android.location.Location: double getLatitude()>();

        d1 = virtualinvoke r1.<android.location.Location: double getLongitude()>();

        d2 = virtualinvoke r1.<android.location.Location: double getAltitude()>();

        f0 = virtualinvoke r1.<android.location.Location: float getSpeed()>();

        f1 = virtualinvoke r1.<android.location.Location: float getBearing()>();

        f2 = virtualinvoke r1.<android.location.Location: float getAccuracy()>();

        f3 = virtualinvoke r1.<android.location.Location: float getVerticalAccuracyMeters()>();

        f4 = virtualinvoke r1.<android.location.Location: float getSpeedAccuracyMetersPerSecond()>();

        f5 = virtualinvoke r1.<android.location.Location: float getBearingAccuracyDegrees()>();

        l0 = virtualinvoke r1.<android.location.Location: long getTime()>();

        $z8 = virtualinvoke r1.<android.location.Location: boolean hasElapsedRealtimeUncertaintyNanos()>();

        if $z8 == 0 goto label16;

        goto label17;

     label16:
        b11 = 0;

     label17:
        $s1 = s12 | 1;

        $s2 = $s1 | s13;

        $s3 = $s2 | s14;

        $s4 = $s3 | s15;

        $s5 = $s4 | s16;

        $s6 = $s5 | s17;

        $s7 = $s6 | s18;

        $b8 = b11 | 1;

        $l9 = virtualinvoke r1.<android.location.Location: long getElapsedRealtimeNanos()>();

        $d3 = virtualinvoke r1.<android.location.Location: double getElapsedRealtimeUncertaintyNanos()>();

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void native_inject_best_location(int,double,double,double,float,float,float,float,float,float,long,int,long,double)>($s7, d0, d1, d2, f0, f1, f2, f3, f4, f5, l0, $b8, $l9, $d3);

        return;
    }

    private void injectLocation(android.location.Location)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.location.Location r1;
        boolean $z0, $z1;
        double $d0, $d1;
        float $f0;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: android.location.Location;

        $z0 = virtualinvoke r1.<android.location.Location: boolean hasAccuracy()>();

        if $z0 == 0 goto label2;

        $z1 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("injectLocation: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", $r6);

     label1:
        $d0 = virtualinvoke r1.<android.location.Location: double getLatitude()>();

        $d1 = virtualinvoke r1.<android.location.Location: double getLongitude()>();

        $f0 = virtualinvoke r1.<android.location.Location: float getAccuracy()>();

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void native_inject_location(double,double,float)>($d0, $d1, $f0);

     label2:
        return;
    }

    private boolean isGpsEnabled()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mGpsEnabled>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private boolean isRequestLocationRateLimited()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        return 0;
    }

    public static boolean isSupported()
    {
        boolean $z0, $z1;

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean sStaticTestOverride>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        staticinvoke <com.android.server.location.gnss.GnssLocationProvider: void ensureInitialized()>();

        $z1 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider: boolean native_is_supported()>();

        return $z1;
    }

    public static void lambda$48m7ukf99eMCKhVUjqljxXFFvWw(com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void onNetworkAvailable()>();

        return;
    }

    static void lambda$handleRequestLocation$2(com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener, java.lang.String, android.location.LocationManager)
    {
        com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener r0;
        java.lang.String r1, $r4;
        android.location.LocationManager r2;
        int $i0;
        java.lang.Object[] $r3;

        r0 := @parameter0: com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.location.LocationManager;

        $i0 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener: int access$1206(com.android.server.location.gnss.GnssLocationProvider$LocationChangeListener)>(r0);

        if $i0 != 0 goto label1;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Removing location updates from %s provider.", $r3);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GnssLocationProvider", $r4);

        virtualinvoke r2.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>(r0);

     label1:
        return;
    }

    private java.lang.String messageIdAsString(int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        if i0 == 3 goto label9;

        if i0 == 11 goto label8;

        if i0 == 13 goto label7;

        if i0 == 5 goto label6;

        if i0 == 6 goto label5;

        tableswitch(i0)
        {
            case 16: goto label4;
            case 17: goto label3;
            case 18: goto label2;
            default: goto label1;
        };

     label1:
        return "<Unknown>";

     label2:
        return "REPORT_SV_STATUS";

     label3:
        return "REPORT_LOCATION";

     label4:
        return "REQUEST_LOCATION";

     label5:
        return "DOWNLOAD_PSDS_DATA";

     label6:
        return "INJECT_NTP_TIME";

     label7:
        return "INITIALIZE_HANDLER";

     label8:
        return "DOWNLOAD_PSDS_DATA_FINISHED";

     label9:
        return "SET_REQUEST";
    }

    private native void native_agps_ni_message(byte[], int);

    private native void native_agps_set_id(int, java.lang.String);

    private native void native_agps_set_ref_location_cellid(int, int, int, int, int);

    private native void native_cleanup();

    private native void native_delete_aiding_data(int);

    private native java.lang.String native_get_internal_state();

    private native boolean native_init();

    private static native void native_init_once(boolean);

    private native void native_inject_best_location(int, double, double, double, float, float, float, float, float, float, long, int, long, double);

    private native void native_inject_location(double, double, float);

    private native void native_inject_psds_data(byte[], int);

    private native void native_inject_time(long, long, int);

    private static native boolean native_is_gnss_visibility_control_supported();

    private static native boolean native_is_supported();

    private native int native_read_nmea(byte[], int);

    private native void native_send_ni_response(int, int);

    private native void native_set_agps_server(int, java.lang.String, int);

    private native boolean native_set_position_mode(int, int, int, int, int, boolean);

    private native boolean native_start();

    private native boolean native_stop();

    private native boolean native_supports_psds();

    private void onNetworkAvailable()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.NtpTimeHelper $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.NtpTimeHelper mNtpTimeHelper>;

        virtualinvoke $r1.<com.android.server.location.gnss.NtpTimeHelper: void onNetworkAvailable()>();

        $i0 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mDownloadPsdsDataPending>;

        if $i0 != 0 goto label1;

        $z0 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mSupportsPsds>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void psdsDownloadRequest()>();

     label1:
        return;
    }

    private void psdsDownloadRequest()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean $z0;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "psdsDownloadRequest");

     label1:
        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void sendMessage(int,int,java.lang.Object)>(6, 0, null);

        return;
    }

    private void reloadGpsProperties()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssConfiguration $r1, $r2, $r4, $r6, $r8, r9;
        java.lang.String $r3;
        int $i0, $i1, $i2;
        com.android.internal.location.GpsNetInitiatedHandler $r5, $r7;
        boolean z0;
        com.android.server.location.gnss.GnssVisibilityControl r10;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        virtualinvoke $r1.<com.android.server.location.gnss.GnssConfiguration: void reloadGpsProperties()>();

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setSuplHostPort()>();

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        $r3 = virtualinvoke $r2.<com.android.server.location.gnss.GnssConfiguration: java.lang.String getC2KHost()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.String mC2KServerHost> = $r3;

        r9 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        z0 = 0;

        $i0 = virtualinvoke r9.<com.android.server.location.gnss.GnssConfiguration: int getC2KPort(int)>(0);

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mC2KServerPort> = $i0;

        $r5 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.GpsNetInitiatedHandler mNIHandler>;

        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        $i1 = virtualinvoke $r4.<com.android.server.location.gnss.GnssConfiguration: int getEsExtensionSec()>();

        virtualinvoke $r5.<com.android.internal.location.GpsNetInitiatedHandler: void setEmergencyExtensionSeconds(int)>($i1);

        $r6 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        $i2 = virtualinvoke $r6.<com.android.server.location.gnss.GnssConfiguration: int getSuplEs(int)>(0);

        if $i2 != 1 goto label1;

        z0 = 1;

     label1:
        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mSuplEsEnabled> = z0;

        $r7 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.GpsNetInitiatedHandler mNIHandler>;

        virtualinvoke $r7.<com.android.internal.location.GpsNetInitiatedHandler: void setSuplEsEnabled(boolean)>(z0);

        r10 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssVisibilityControl mGnssVisibilityControl>;

        if r10 == null goto label2;

        $r8 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        virtualinvoke r10.<com.android.server.location.gnss.GnssVisibilityControl: void onConfigurationUpdated(com.android.server.location.gnss.GnssConfiguration)>($r8);

     label2:
        return;
    }

    private void reportAGpsStatus(int, int, byte[])
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1;
        byte[] r1;
        com.android.server.location.gnss.GnssNetworkConnectivityHandler $r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssNetworkConnectivityHandler mNetworkConnectivityHandler>;

        virtualinvoke $r2.<com.android.server.location.gnss.GnssNetworkConnectivityHandler: void onReportAGpsStatus(int,int,byte[])>(i0, i1, r1);

        return;
    }

    private void reportAntennaInfo(java.util.List)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        java.util.List r1;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$Zz5jVrpy8EhDlqdMUEeszS7227Q $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r2 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$Zz5jVrpy8EhDlqdMUEeszS7227Q;

        specialinvoke $r2.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$Zz5jVrpy8EhDlqdMUEeszS7227Q: void <init>(com.android.server.location.gnss.GnssLocationProvider,java.util.List)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private void reportGeofenceAddStatus(int, int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$vUevSagVGcJiG8NrsQ14SLZKO50 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r1 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$vUevSagVGcJiG8NrsQ14SLZKO50;

        specialinvoke $r1.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$vUevSagVGcJiG8NrsQ14SLZKO50: void <init>(com.android.server.location.gnss.GnssLocationProvider,int,int)>(r0, i0, i1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void reportGeofencePauseStatus(int, int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$8UU_TCemTTDKpCEUtWtOYCOByNI $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r1 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$8UU_TCemTTDKpCEUtWtOYCOByNI;

        specialinvoke $r1.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$8UU_TCemTTDKpCEUtWtOYCOByNI: void <init>(com.android.server.location.gnss.GnssLocationProvider,int,int)>(r0, i0, i1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void reportGeofenceRemoveStatus(int, int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$2DJj3Ea6MJfR7jGWxrOqu_RmUcw $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r1 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$2DJj3Ea6MJfR7jGWxrOqu_RmUcw;

        specialinvoke $r1.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$2DJj3Ea6MJfR7jGWxrOqu_RmUcw: void <init>(com.android.server.location.gnss.GnssLocationProvider,int,int)>(r0, i0, i1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void reportGeofenceResumeStatus(int, int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$cCbSI3WH_hk01YLpadxIdeJ2l_s $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r1 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$cCbSI3WH_hk01YLpadxIdeJ2l_s;

        specialinvoke $r1.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$cCbSI3WH_hk01YLpadxIdeJ2l_s: void <init>(com.android.server.location.gnss.GnssLocationProvider,int,int)>(r0, i0, i1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void reportGeofenceStatus(int, android.location.Location)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0;
        android.location.Location r1;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$PnjxzvZoft2260U6u0c4ExEgvdk $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: android.location.Location;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r2 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$PnjxzvZoft2260U6u0c4ExEgvdk;

        specialinvoke $r2.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$PnjxzvZoft2260U6u0c4ExEgvdk: void <init>(com.android.server.location.gnss.GnssLocationProvider,int,android.location.Location)>(r0, i0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private void reportGeofenceTransition(int, android.location.Location, int, long)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1;
        android.location.Location r1;
        long l2;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$9z2BzqtI1mIF3OUSD_3kdlaP8Ls $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: android.location.Location;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r2 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$9z2BzqtI1mIF3OUSD_3kdlaP8Ls;

        specialinvoke $r2.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$9z2BzqtI1mIF3OUSD_3kdlaP8Ls: void <init>(com.android.server.location.gnss.GnssLocationProvider,int,android.location.Location,int,long)>(r0, i0, r1, i1, l2);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private void reportGnssServiceDied()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean $z0;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$_LVWlhOAi4e7kGM8i4gvAEODq6Y $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "reportGnssServiceDied");

     label1:
        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r1 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$_LVWlhOAi4e7kGM8i4gvAEODq6Y;

        specialinvoke $r1.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$_LVWlhOAi4e7kGM8i4gvAEODq6Y: void <init>(com.android.server.location.gnss.GnssLocationProvider)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void reportLocation(boolean, android.location.Location)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0;
        android.location.Location r1;
        int i0;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.location.Location;

        i0 = (int) z0;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void sendMessage(int,int,java.lang.Object)>(17, i0, r1);

        return;
    }

    private void reportLocationBatch(android.location.Location[])
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.location.Location[] r1;
        java.util.ArrayList $r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        int $i0;
        java.lang.String $r10;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: android.location.Location[];

        $r4 = new java.util.ArrayList;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Location batch of size ");

        $i0 = lengthof r1;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reported");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", $r10);

     label1:
        virtualinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void reportLocation(java.util.List)>($r4);

        return;
    }

    private void reportMeasurementData(android.location.GnssMeasurementsEvent)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.location.GnssMeasurementsEvent r1;
        boolean $z0;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$YuOqG3Bhqp1DBq9X5jGhJw_oqXY $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: android.location.GnssMeasurementsEvent;

        $z0 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mItarSpeedLimitExceeded>;

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r2 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$YuOqG3Bhqp1DBq9X5jGhJw_oqXY;

        specialinvoke $r2.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$YuOqG3Bhqp1DBq9X5jGhJw_oqXY: void <init>(com.android.server.location.gnss.GnssLocationProvider,android.location.GnssMeasurementsEvent)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    private void reportNavigationMessage(android.location.GnssNavigationMessage)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.location.GnssNavigationMessage r1;
        boolean $z0;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$AWbsxwPlXUZ5pm0cAYhVesC6VAA $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: android.location.GnssNavigationMessage;

        $z0 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mItarSpeedLimitExceeded>;

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r2 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$AWbsxwPlXUZ5pm0cAYhVesC6VAA;

        specialinvoke $r2.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$AWbsxwPlXUZ5pm0cAYhVesC6VAA: void <init>(com.android.server.location.gnss.GnssLocationProvider,android.location.GnssNavigationMessage)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    private void reportNfwNotification(java.lang.String, byte, java.lang.String, byte, java.lang.String, byte, boolean, boolean)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        java.lang.String r1, r2, r3;
        byte b0, b1, b2;
        boolean z0, z1;
        com.android.server.location.gnss.GnssVisibilityControl r4;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        r2 := @parameter2: java.lang.String;

        b1 := @parameter3: byte;

        r3 := @parameter4: java.lang.String;

        b2 := @parameter5: byte;

        z0 := @parameter6: boolean;

        z1 := @parameter7: boolean;

        r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssVisibilityControl mGnssVisibilityControl>;

        if r4 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssLocationProvider", "reportNfwNotification: mGnssVisibilityControl is not initialized.");

        return;

     label1:
        virtualinvoke r4.<com.android.server.location.gnss.GnssVisibilityControl: void reportNfwNotification(java.lang.String,byte,java.lang.String,byte,java.lang.String,byte,boolean,boolean)>(r1, b0, r2, b1, r3, b2, z0, z1);

        return;
    }

    private void reportNmea(long)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        long l0;
        int i1, $i2;
        boolean $z0;
        java.lang.String $r1;
        byte[] $r2, r4;
        com.android.server.location.gnss.GnssStatusListenerHelper $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        l0 := @parameter0: long;

        $z0 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mItarSpeedLimitExceeded>;

        if $z0 != 0 goto label1;

        r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: byte[] mNmeaBuffer>;

        $i2 = lengthof r4;

        i1 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: int native_read_nmea(byte[],int)>(r4, $i2);

        $r1 = new java.lang.String;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: byte[] mNmeaBuffer>;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int)>($r2, 0, i1);

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusListenerHelper>;

        virtualinvoke $r3.<com.android.server.location.gnss.GnssStatusListenerHelper: void onNmeaReceived(long,java.lang.String)>(l0, $r1);

     label1:
        return;
    }

    private void reportStatus(int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0;
        boolean z0, z1, $z2;
        com.android.server.location.gnss.GnssStatusListenerHelper $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        $z2 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z2 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reportStatus status: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GnssLocationProvider", $r6);

     label1:
        z0 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mNavigating>;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 4 goto label2;

        goto label5;

     label2:
        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mNavigating> = 0;

        goto label5;

     label3:
        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mNavigating> = 0;

        goto label5;

     label4:
        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mNavigating> = 1;

     label5:
        z1 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mNavigating>;

        if z0 == z1 goto label6;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusListenerHelper>;

        virtualinvoke $r2.<com.android.server.location.gnss.GnssStatusListenerHelper: void onStatusChanged(boolean)>(z1);

     label6:
        return;
    }

    private void reportSvStatus(int, int[], float[], float[], float[], float[], float[])
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0;
        int[] r1;
        float[] r2, r3, r4, r5, r6;
        com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo $r8;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        r2 := @parameter2: float[];

        r3 := @parameter3: float[];

        r4 := @parameter4: float[];

        r5 := @parameter5: float[];

        r6 := @parameter6: float[];

        $r8 = new com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo;

        specialinvoke $r8.<com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: void <init>(com.android.server.location.gnss.GnssLocationProvider$1)>(null);

        staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: int access$1402(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo,int)>($r8, i0);

        staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: int[] access$1502(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo,int[])>($r8, r1);

        staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1602(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo,float[])>($r8, r2);

        staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1702(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo,float[])>($r8, r3);

        staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1802(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo,float[])>($r8, r4);

        staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$1902(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo,float[])>($r8, r5);

        staticinvoke <com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo: float[] access$2002(com.android.server.location.gnss.GnssLocationProvider$SvStatusInfo,float[])>($r8, r6);

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void sendMessage(int,int,java.lang.Object)>(18, 0, $r8);

        return;
    }

    private void requestLocation(boolean, boolean)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0, z1, $z2;
        java.lang.Boolean $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r8;
        int i1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z2 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestLocation. independentFromGnss: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isUserEmergency: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", $r8);

     label1:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        i1 = (int) z0;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void sendMessage(int,int,java.lang.Object)>(16, i1, $r2);

        return;
    }

    private void requestRefLocation()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.telephony.TelephonyManager r1;
        android.telephony.gsm.GsmCellLocation r2;
        int i0, i1, $i4, i5, i6, $i8, $i9;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.telephony.CellLocation $r5;
        java.lang.String $r6, $r7, $r8, $r9, $r10, $r11;
        byte b7;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r1 = (android.telephony.TelephonyManager) $r4;

        i5 = virtualinvoke r1.<android.telephony.TelephonyManager: int getPhoneType()>();

        if i5 != 1 goto label5;

        $r5 = virtualinvoke r1.<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>();

        r2 = (android.telephony.gsm.GsmCellLocation) $r5;

        if r2 == null goto label4;

        $r6 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>();

        if $r6 == null goto label4;

        $r7 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>();

        $i4 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i4 <= 3 goto label4;

        $r8 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r10 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(3);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        i6 = virtualinvoke r1.<android.telephony.TelephonyManager: int getNetworkType()>();

        if i6 == 3 goto label2;

        if i6 == 8 goto label2;

        if i6 == 9 goto label2;

        if i6 == 10 goto label2;

        if i6 != 15 goto label1;

        goto label2;

     label1:
        b7 = 1;

        goto label3;

     label2:
        b7 = 2;

     label3:
        $i8 = virtualinvoke r2.<android.telephony.gsm.GsmCellLocation: int getLac()>();

        $i9 = virtualinvoke r2.<android.telephony.gsm.GsmCellLocation: int getCid()>();

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void native_agps_set_ref_location_cellid(int,int,int,int,int)>(b7, i0, i1, $i8, $i9);

        goto label6;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssLocationProvider", "Error getting cell location info.");

        goto label6;

     label5:
        if i5 != 2 goto label6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssLocationProvider", "CDMA not supported.");

        goto label6;

     label6:
        return;
    }

    private void requestSetID(int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, $i2, $i3, i4;
        android.telephony.TelephonyManager r1, r5;
        android.content.Context $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.String r4, r6, r7;
        byte b5;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r1 = (android.telephony.TelephonyManager) $r3;

        r4 = null;

        i4 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultDataSubscriptionId()>();

        r5 = r1;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i4);

        if $z0 == 0 goto label1;

        r5 = virtualinvoke r1.<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForSubscriptionId(int)>(i4);

     label1:
        $i2 = i0 & 1;

        if $i2 != 1 goto label2;

        r6 = virtualinvoke r5.<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>();

        b5 = 0;

        r4 = r6;

        if r6 == null goto label3;

        b5 = 1;

        r4 = r6;

        goto label3;

     label2:
        b5 = 0;

        $i3 = i0 & 2;

        if $i3 != 2 goto label3;

        r7 = virtualinvoke r5.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>();

        b5 = 0;

        r4 = r7;

        if r7 == null goto label3;

        b5 = 2;

        r4 = r7;

     label3:
        if r4 != null goto label4;

        r4 = "";

        goto label4;

     label4:
        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void native_agps_set_id(int,java.lang.String)>(b5, r4);

        return;
    }

    private void requestUtcTime()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean $z0;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "utcTimeRequest");

     label1:
        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void sendMessage(int,int,java.lang.Object)>(5, 0, null);

        return;
    }

    private void restartLocationRequest()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean $z0;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "restartLocationRequest");

     label1:
        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setStarted(boolean)>(0);

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void updateRequirements()>();

        return;
    }

    private void restartRequests()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssAntennaInfoProvider $r1;
        com.android.server.location.gnss.GnssMeasurementsProvider $r2;
        com.android.server.location.gnss.GnssNavigationMessageProvider $r3;
        com.android.server.location.gnss.GnssBatchingProvider $r4;
        com.android.server.location.gnss.GnssGeofenceProvider $r5;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GnssLocationProvider", "restartRequests");

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void restartLocationRequest()>();

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider>;

        virtualinvoke $r1.<com.android.server.location.gnss.GnssAntennaInfoProvider: void resumeIfStarted()>();

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        virtualinvoke $r2.<com.android.server.location.gnss.GnssMeasurementsProvider: void resumeIfStarted()>();

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider>;

        virtualinvoke $r3.<com.android.server.location.gnss.GnssNavigationMessageProvider: void resumeIfStarted()>();

        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssBatchingProvider mGnssBatchingProvider>;

        virtualinvoke $r4.<com.android.server.location.gnss.GnssBatchingProvider: void resumeIfStarted()>();

        $r5 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssGeofenceProvider mGnssGeofenceProvider>;

        virtualinvoke $r5.<com.android.server.location.gnss.GnssGeofenceProvider: void resumeIfStarted()>();

        return;
    }

    private void sendMessage(int, int, java.lang.Object)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1;
        java.lang.Object r1;
        android.os.PowerManager$WakeLock $r3;
        boolean $z0;
        android.os.Handler $r4;
        android.os.Message $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r8, $r15;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void acquire(long)>(30000L);

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WakeLock acquired by sendMessage(");

        $r8 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.String messageIdAsString(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", $r15);

     label1:
        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, 1, r1);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void setGnssHardwareModelName(java.lang.String)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        java.lang.String r1, $r6;
        boolean $z0;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: java.lang.String;

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setGnssModelName called with ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", $r6);

     label1:
        r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.String mHardwareModelName> = r1;

        return;
    }

    private void setGnssYearOfHardware(int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setGnssYearOfHardware called with ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", $r5);

     label1:
        r0.<com.android.server.location.gnss.GnssLocationProvider: int mHardwareYear> = i0;

        return;
    }

    private void setGpsEnabled(boolean)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mGpsEnabled> = z0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void setIsSupportedForTest(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.android.server.location.gnss.GnssLocationProvider: boolean sStaticTestOverride> = z0;

        return;
    }

    private boolean setPositionMode(int, int, int, int, int, boolean)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1, i2, i3, i4;
        com.android.server.location.gnss.GnssPositionMode r2, $r3;
        boolean $z0, z1, z2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        z1 := @parameter5: boolean;

        $r3 = new com.android.server.location.gnss.GnssPositionMode;

        specialinvoke $r3.<com.android.server.location.gnss.GnssPositionMode: void <init>(int,int,int,int,int,boolean)>(i0, i1, i2, i3, i4, z1);

        r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssPositionMode mLastPositionMode>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<com.android.server.location.gnss.GnssPositionMode: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        z2 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean native_set_position_mode(int,int,int,int,int,boolean)>(i0, i1, i2, i3, i4, z1);

        if z2 == 0 goto label2;

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssPositionMode mLastPositionMode> = $r3;

        goto label3;

     label2:
        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssPositionMode mLastPositionMode> = null;

     label3:
        return z2;
    }

    private void setStarted(boolean)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0, $z1;
        long $l0;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mStarted>;

        if $z1 == z0 goto label1;

        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mStarted> = z0;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: long mStartedChangedElapsedRealtime> = $l0;

     label1:
        return;
    }

    private void setSubHalMeasurementCorrectionsCapabilities(int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$QQ_0fckG9_krtI0AH_nmm1_vmLQ $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r1 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$QQ_0fckG9_krtI0AH_nmm1_vmLQ;

        specialinvoke $r1.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$QQ_0fckG9_krtI0AH_nmm1_vmLQ: void <init>(com.android.server.location.gnss.GnssLocationProvider,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void setSuplHostPort()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0;
        java.lang.String r1, $r3;
        com.android.server.location.gnss.GnssConfiguration $r2, $r4;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        $r3 = virtualinvoke $r2.<com.android.server.location.gnss.GnssConfiguration: java.lang.String getSuplHost()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.String mSuplServerHost> = $r3;

        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        i0 = virtualinvoke $r4.<com.android.server.location.gnss.GnssConfiguration: int getSuplPort(int)>(0);

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mSuplServerPort> = i0;

        r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.String mSuplServerHost>;

        if r1 == null goto label1;

        if i0 <= 0 goto label1;

        if i0 > 65535 goto label1;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void native_set_agps_server(int,java.lang.String,int)>(1, r1, i0);

     label1:
        return;
    }

    private void setTopHalCapabilities(int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$fZsexTbhhXxbzu9E9XIT682MN4A $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r1 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$fZsexTbhhXxbzu9E9XIT682MN4A;

        specialinvoke $r1.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$fZsexTbhhXxbzu9E9XIT682MN4A: void <init>(com.android.server.location.gnss.GnssLocationProvider,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void setupNativeGnssService(boolean)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        z0 := @parameter0: boolean;

        staticinvoke <com.android.server.location.gnss.GnssLocationProvider: void native_init_once(boolean)>(z0);

        $z1 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean native_init()>();

        if $z1 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GnssLocationProvider", "Native initialization failed.");

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void native_cleanup()>();

     label2:
        return;
    }

    private void startNavigating()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, z9;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        int $i0, $i1, $i3, i11, i12;
        com.android.internal.location.ProviderRequest $r4;
        com.android.server.location.gnss.GnssLocationProvider$LocationExtras $r5;
        long $l2, $l4, $l5;
        android.app.AlarmManager $r6;
        android.app.PendingIntent $r7;
        java.lang.String r10, $r12;
        java.lang.StringBuilder $r11;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $z0 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mStarted>;

        if $z0 != 0 goto label14;

        $z1 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z1 == 0 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "startNavigating");

     label01:
        r0.<com.android.server.location.gnss.GnssLocationProvider: int mTimeToFirstFix> = 0;

        r0.<com.android.server.location.gnss.GnssLocationProvider: long mLastFixTime> = 0L;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setStarted(boolean)>(1);

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mPositionMode> = 0;

        $z2 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mItarSpeedLimitExceeded>;

        if $z2 == 0 goto label02;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GnssLocationProvider", "startNavigating with ITAR limit in place. Output limited  until slow enough speed reported.");

     label02:
        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "assisted_gps_enabled", 1);

        if $i0 == 0 goto label03;

        z7 = 1;

        goto label04;

     label03:
        z7 = 0;

     label04:
        i11 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: int getSuplMode(boolean)>(z7);

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mPositionMode> = i11;

        $z3 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z3 == 0 goto label09;

        if i11 == 0 goto label07;

        if i11 == 1 goto label06;

        if i11 == 2 goto label05;

        r10 = "unknown";

        goto label08;

     label05:
        r10 = "MS_ASSISTED";

        goto label08;

     label06:
        r10 = "MS_BASED";

        goto label08;

     label07:
        r10 = "standalone";

     label08:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting position_mode to ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", $r12);

     label09:
        $z8 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(1);

        if $z8 == 0 goto label10;

        i12 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mFixInterval>;

        goto label11;

     label10:
        i12 = 1000;

     label11:
        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        z9 = $r4.<com.android.internal.location.ProviderRequest: boolean lowPowerMode>;

        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mLowPowerMode> = z9;

        $i1 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mPositionMode>;

        $z4 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean setPositionMode(int,int,int,int,int,boolean)>($i1, 0, i12, 0, 0, z9);

        if $z4 != 0 goto label12;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setStarted(boolean)>(0);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssLocationProvider", "set_position_mode failed in startNavigating()");

        return;

     label12:
        $z5 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean native_start()>();

        if $z5 != 0 goto label13;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setStarted(boolean)>(0);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssLocationProvider", "native_start failed in startNavigating()");

        return;

     label13:
        $r5 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssLocationProvider$LocationExtras mLocationExtras>;

        virtualinvoke $r5.<com.android.server.location.gnss.GnssLocationProvider$LocationExtras: void reset()>();

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: long mFixRequestTime> = $l2;

        $z6 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(1);

        if $z6 != 0 goto label14;

        $i3 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mFixInterval>;

        if $i3 < 60000 goto label14;

        $r6 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AlarmManager mAlarmManager>;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l5 = $l4 + 60000L;

        $r7 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.PendingIntent mTimeoutIntent>;

        virtualinvoke $r6.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(2, $l5, $r7);

     label14:
        return;
    }

    private void stopNavigating()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean $z0, $z1;
        com.android.server.location.gnss.GnssLocationProvider$LocationExtras $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "stopNavigating");

     label1:
        $z1 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mStarted>;

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setStarted(boolean)>(0);

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean native_stop()>();

        r0.<com.android.server.location.gnss.GnssLocationProvider: long mLastFixTime> = 0L;

        r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssPositionMode mLastPositionMode> = null;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssLocationProvider$LocationExtras mLocationExtras>;

        virtualinvoke $r1.<com.android.server.location.gnss.GnssLocationProvider$LocationExtras: void reset()>();

     label2:
        return;
    }

    private void subscriptionOrCarrierConfigChanged()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.telephony.CarrierConfigManager r1;
        int i0;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, z7;
        android.content.Context $r2, $r4;
        java.lang.Object $r3, $r5;
        com.android.server.location.gnss.GnssConfiguration $r6, $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r11, r14, r17;
        android.telephony.TelephonyManager r12, r13;
        android.os.PersistableBundle r16;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $z1 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z1 == 0 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "received SIM related action: ");

     label01:
        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r12 = (android.telephony.TelephonyManager) $r3;

        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        r1 = (android.telephony.CarrierConfigManager) $r5;

        i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultDataSubscriptionId()>();

        r13 = r12;

        $z2 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z2 == 0 goto label02;

        r13 = virtualinvoke r12.<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForSubscriptionId(int)>(i0);

     label02:
        r14 = virtualinvoke r13.<android.telephony.TelephonyManager: java.lang.String getSimOperator()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r14);

        if $z3 != 0 goto label10;

        $z5 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z5 == 0 goto label03;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SIM MCC/MNC is available: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", $r11);

     label03:
        z7 = 0;

        if r1 == null goto label06;

        $z6 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z6 == 0 goto label04;

        r16 = virtualinvoke r1.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>(i0);

        goto label05;

     label04:
        r16 = null;

     label05:
        z7 = 0;

        if r16 == null goto label06;

        z7 = virtualinvoke r16.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("gps.persist_lpp_mode_bool");

     label06:
        if z7 == 0 goto label08;

        $r6 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        virtualinvoke $r6.<com.android.server.location.gnss.GnssConfiguration: void loadPropertiesFromCarrierConfig()>();

        $r7 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        r17 = virtualinvoke $r7.<com.android.server.location.gnss.GnssConfiguration: java.lang.String getLppProfile()>();

        if r17 == null goto label07;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.gps.lpp", r17);

     label07:
        goto label09;

     label08:
        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.gps.lpp", "");

     label09:
        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void reloadGpsProperties()>();

        goto label11;

     label10:
        $z4 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z4 == 0 goto label11;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "SIM MCC/MNC is still not available");

     label11:
        return;
    }

    private void updateClientUids(android.os.WorkSource)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.os.WorkSource$WorkChain r1, r25;
        android.os.WorkSource $r2, $r3, $r5, $r10, r18, $r26, r28, r29;
        boolean $z0, $z1, $z2;
        com.android.internal.app.IBatteryStats $r4;
        int $i0, $i1, $i2, $i3, $i5, $i6, i9, i10;
        android.app.AppOpsManager $r6, $r8, $r12, $r15;
        java.lang.String $r7, $r9, $r13, $r16;
        java.lang.Object $r11, $r14;
        android.os.RemoteException $r17;
        java.util.ArrayList[] r20;
        java.util.ArrayList r21, r22;
        java.util.Iterator r23, r24;
        android.os.WorkSource[] r27;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r18 := @parameter0: android.os.WorkSource;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.WorkSource mClientSource>;

        $z0 = virtualinvoke r18.<android.os.WorkSource: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label01;

        return;

     label01:
        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.app.IBatteryStats mBatteryStats>;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.WorkSource mClientSource>;

        interfaceinvoke $r4.<com.android.internal.app.IBatteryStats: void noteGpsChanged(android.os.WorkSource,android.os.WorkSource)>($r3, r18);

     label02:
        goto label04;

     label03:
        $r17 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("GnssLocationProvider", "RemoteException", $r17);

     label04:
        $r5 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.WorkSource mClientSource>;

        r20 = staticinvoke <android.os.WorkSource: java.util.ArrayList[] diffChains(android.os.WorkSource,android.os.WorkSource)>($r5, r18);

        if r20 == null goto label09;

        r21 = r20[0];

        r22 = r20[1];

        if r21 == null goto label06;

        r23 = interfaceinvoke r21.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        $r14 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.os.WorkSource$WorkChain) $r14;

        $r15 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AppOpsManager mAppOps>;

        $i6 = virtualinvoke r1.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        $r16 = virtualinvoke r1.<android.os.WorkSource$WorkChain: java.lang.String getAttributionTag()>();

        virtualinvoke $r15.<android.app.AppOpsManager: int startOpNoThrow(int,int,java.lang.String)>(2, $i6, $r16);

        goto label05;

     label06:
        if r22 == null goto label08;

        r24 = interfaceinvoke r22.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r11 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (android.os.WorkSource$WorkChain) $r11;

        $r12 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AppOpsManager mAppOps>;

        $i5 = virtualinvoke r25.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        $r13 = virtualinvoke r25.<android.os.WorkSource$WorkChain: java.lang.String getAttributionTag()>();

        virtualinvoke $r12.<android.app.AppOpsManager: void finishOp(int,int,java.lang.String)>(2, $i5, $r13);

        goto label07;

     label08:
        $r10 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.WorkSource mClientSource>;

        virtualinvoke $r10.<android.os.WorkSource: void transferWorkChains(android.os.WorkSource)>(r18);

     label09:
        $r26 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.WorkSource mClientSource>;

        r27 = virtualinvoke $r26.<android.os.WorkSource: android.os.WorkSource[] setReturningDiffs(android.os.WorkSource)>(r18);

        if r27 == null goto label13;

        r28 = r27[0];

        r29 = r27[1];

        if r28 == null goto label11;

        i9 = 0;

     label10:
        $i2 = virtualinvoke r28.<android.os.WorkSource: int size()>();

        if i9 >= $i2 goto label11;

        $r8 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AppOpsManager mAppOps>;

        $i3 = virtualinvoke r28.<android.os.WorkSource: int getUid(int)>(i9);

        $r9 = virtualinvoke r28.<android.os.WorkSource: java.lang.String getPackageName(int)>(i9);

        virtualinvoke $r8.<android.app.AppOpsManager: int startOpNoThrow(int,int,java.lang.String)>(2, $i3, $r9);

        i9 = i9 + 1;

        goto label10;

     label11:
        if r29 == null goto label13;

        i10 = 0;

     label12:
        $i0 = virtualinvoke r29.<android.os.WorkSource: int size()>();

        if i10 >= $i0 goto label13;

        $r6 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AppOpsManager mAppOps>;

        $i1 = virtualinvoke r29.<android.os.WorkSource: int getUid(int)>(i10);

        $r7 = virtualinvoke r29.<android.os.WorkSource: java.lang.String getPackageName(int)>(i10);

        virtualinvoke $r6.<android.app.AppOpsManager: void finishOp(int,int,java.lang.String)>(2, $i1, $r7);

        i10 = i10 + 1;

        goto label12;

     label13:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
    }

    private void updateEnabled()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0, $z1, $z2, z3, z4, $z5, $z6, $z7, $z8, $z9, z10, $z11;
        com.android.internal.location.ProviderRequest r1, $r6;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.os.UserHandle $r4;
        android.location.LocationManager $r5;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/location/LocationManager;");

        $r5 = (android.location.LocationManager) $r3;

        $r4 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        z0 = virtualinvoke $r5.<android.location.LocationManager: boolean isLocationEnabledForUser(android.os.UserHandle)>($r4);

        z3 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mDisableGpsForPowerManager>;

        r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        if r1 == null goto label1;

        $z1 = r1.<com.android.internal.location.ProviderRequest: boolean reportLocation>;

        if $z1 == 0 goto label1;

        $r6 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $z2 = $r6.<com.android.internal.location.ProviderRequest: boolean locationSettingsIgnored>;

        if $z2 == 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        $z5 = z3 ^ 1;

        $z6 = z0 & $z5;

        $z7 = $z6 | z4;

        $z8 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mShutdown>;

        $z9 = $z8 ^ 1;

        z10 = $z7 & $z9;

        $z11 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean isGpsEnabled()>();

        if z10 != $z11 goto label3;

        return;

     label3:
        if z10 == 0 goto label4;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void handleEnable()>();

        goto label5;

     label4:
        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void handleDisable()>();

     label5:
        return;
    }

    private void updateLowPowerMode()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.os.PowerSaveState r1;
        int i0;
        android.os.PowerManager $r2, $r3, $r4;
        boolean $z0, $z1, $z2, z3, z4, z5, $z6;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.PowerManager mPowerManager>;

        z3 = virtualinvoke $r2.<android.os.PowerManager: boolean isDeviceIdleMode()>();

        z4 = 0;

        if z3 == 0 goto label1;

        $z2 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mIsDeviceStationary>;

        if $z2 == 0 goto label1;

        z5 = 1;

        goto label2;

     label1:
        z5 = 0;

     label2:
        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.PowerManager mPowerManager>;

        r1 = virtualinvoke $r4.<android.os.PowerManager: android.os.PowerSaveState getPowerSaveState(int)>(1);

        i0 = r1.<android.os.PowerSaveState: int locationMode>;

        if i0 == 1 goto label3;

        if i0 == 2 goto label3;

        goto label5;

     label3:
        $z0 = r1.<android.os.PowerSaveState: boolean batterySaverEnabled>;

        if $z0 == 0 goto label4;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.PowerManager mPowerManager>;

        $z1 = virtualinvoke $r3.<android.os.PowerManager: boolean isInteractive()>();

        if $z1 != 0 goto label4;

        z4 = 1;

        goto label4;

     label4:
        z5 = z5 | z4;

     label5:
        $z6 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mDisableGpsForPowerManager>;

        if z5 == $z6 goto label6;

        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mDisableGpsForPowerManager> = z5;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void updateEnabled()>();

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void updateRequirements()>();

     label6:
        return;
    }

    private void updateRequirements()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.internal.location.ProviderRequest $r1, $r3, $r10, $r11, $r12, $r19, $r24;
        android.os.WorkSource $r2, $r4, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.app.PendingIntent $r5, $r7, $r13, $r16;
        android.app.AlarmManager $r6, $r8, $r14, $r15;
        long $l0, $l3, $l4, $l7, $l8, $l12;
        int $i1, $i2, $i6, $i9, $i10;
        byte $b5;
        java.lang.StringBuilder $r17, $r22;
        java.lang.String $r21, $r26;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        if $r1 == null goto label8;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.WorkSource mWorkSource>;

        if $r2 != null goto label1;

        goto label8;

     label1:
        $z0 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setRequest ");

        $r24 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", $r26);

     label2:
        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $z1 = $r3.<com.android.internal.location.ProviderRequest: boolean reportLocation>;

        if $z1 == 0 goto label6;

        $z2 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean isGpsEnabled()>();

        if $z2 == 0 goto label6;

        $r9 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.WorkSource mWorkSource>;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void updateClientUids(android.os.WorkSource)>($r9);

        $r10 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $l0 = $r10.<com.android.internal.location.ProviderRequest: long interval>;

        $i1 = (int) $l0;

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mFixInterval> = $i1;

        $r11 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $z3 = $r11.<com.android.internal.location.ProviderRequest: boolean lowPowerMode>;

        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mLowPowerMode> = $z3;

        $i2 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mFixInterval>;

        $l4 = (long) $i2;

        $r12 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $l3 = $r12.<com.android.internal.location.ProviderRequest: long interval>;

        $b5 = $l4 cmp $l3;

        if $b5 == 0 goto label3;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("interval overflow: ");

        $r19 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $l12 = $r19.<com.android.internal.location.ProviderRequest: long interval>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GnssLocationProvider", $r21);

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mFixInterval> = 2147483647;

     label3:
        $z4 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mStarted>;

        if $z4 == 0 goto label4;

        $z6 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(1);

        if $z6 == 0 goto label4;

        $i10 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mPositionMode>;

        $i9 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mFixInterval>;

        $z7 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mLowPowerMode>;

        $z8 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean setPositionMode(int,int,int,int,int,boolean)>($i10, 0, $i9, 0, 0, $z7);

        if $z8 != 0 goto label7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssLocationProvider", "set_position_mode failed in updateRequirements");

        goto label7;

     label4:
        $z5 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mStarted>;

        if $z5 != 0 goto label5;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void startNavigating()>();

        goto label7;

     label5:
        $r14 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r13 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.PendingIntent mTimeoutIntent>;

        virtualinvoke $r14.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r13);

        $i6 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mFixInterval>;

        if $i6 < 60000 goto label7;

        $r15 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AlarmManager mAlarmManager>;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l8 = $l7 + 60000L;

        $r16 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.PendingIntent mTimeoutIntent>;

        virtualinvoke $r15.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(2, $l8, $r16);

        goto label7;

     label6:
        $r4 = new android.os.WorkSource;

        specialinvoke $r4.<android.os.WorkSource: void <init>()>();

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void updateClientUids(android.os.WorkSource)>($r4);

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void stopNavigating()>();

        $r6 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r5 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.PendingIntent mWakeupIntent>;

        virtualinvoke $r6.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r5);

        $r8 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r7 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.app.PendingIntent mTimeoutIntent>;

        virtualinvoke $r8.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r7);

     label7:
        return;

     label8:
        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.lang.StringBuilder $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        long $l0, $l1, $l2;
        int $i3, $i4;
        com.android.server.location.gnss.GnssAntennaInfoProvider $r16;
        com.android.server.location.gnss.GnssMeasurementsProvider $r20;
        com.android.server.location.gnss.GnssNavigationMessageProvider $r24;
        java.lang.String $r31, $r36, $r40, $r46;
        com.android.internal.location.gnssmetrics.GnssMetrics $r35;
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider $r45;
        java.io.FileDescriptor r61;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r61 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mStarted=");

        $z0 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mStarted>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   (changed ");

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = r0.<com.android.server.location.gnss.GnssLocationProvider: long mStartedChangedElapsedRealtime>;

        $l2 = $l0 - $l1;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l2, $r3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ago)");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mFixInterval=");

        $i3 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mFixInterval>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLowPowerMode=");

        $z1 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mLowPowerMode>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mGnssAntennaInfoProvider.isRegistered()=");

        $r16 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider>;

        $z2 = virtualinvoke $r16.<com.android.server.location.gnss.GnssAntennaInfoProvider: boolean isRegistered()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mGnssMeasurementsProvider.isRegistered()=");

        $r20 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        $z3 = virtualinvoke $r20.<com.android.server.location.gnss.GnssMeasurementsProvider: boolean isRegistered()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mGnssNavigationMessageProvider.isRegistered()=");

        $r24 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider>;

        $z4 = virtualinvoke $r24.<com.android.server.location.gnss.GnssNavigationMessageProvider: boolean isRegistered()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDisableGpsForPowerManager=");

        $z5 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mDisableGpsForPowerManager>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mTopHalCapabilities=0x");

        $i4 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mTopHalCapabilities>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ( ");

        $z6 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(1);

        if $z6 == 0 goto label01;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SCHEDULING ");

     label01:
        $z7 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(2);

        if $z7 == 0 goto label02;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MSB ");

     label02:
        $z8 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(4);

        if $z8 == 0 goto label03;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MSA ");

     label03:
        $z9 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(8);

        if $z9 == 0 goto label04;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SINGLE_SHOT ");

     label04:
        $z10 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(16);

        if $z10 == 0 goto label05;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ON_DEMAND_TIME ");

     label05:
        $z11 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(32);

        if $z11 == 0 goto label06;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GEOFENCING ");

     label06:
        $z12 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(64);

        if $z12 == 0 goto label07;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MEASUREMENTS ");

     label07:
        $z13 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(128);

        if $z13 == 0 goto label08;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NAV_MESSAGES ");

     label08:
        $z14 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(256);

        if $z14 == 0 goto label09;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LOW_POWER_MODE ");

     label09:
        $z15 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(512);

        if $z15 == 0 goto label10;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SATELLITE_BLACKLIST ");

     label10:
        $z16 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(1024);

        if $z16 == 0 goto label11;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MEASUREMENT_CORRECTIONS ");

     label11:
        $z17 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(2048);

        if $z17 == 0 goto label12;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANTENNA_INFO ");

     label12:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $z18 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(1024);

        if $z18 == 0 goto label13;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SubHal=MEASUREMENT_CORRECTIONS[");

        $r45 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider mGnssMeasurementCorrectionsProvider>;

        $r46 = virtualinvoke $r45.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: java.lang.String toStringCapabilities()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");

     label13:
        $r35 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.gnssmetrics.GnssMetrics mGnssMetrics>;

        $r36 = virtualinvoke $r35.<com.android.internal.location.gnssmetrics.GnssMetrics: java.lang.String dumpGnssMetricsAsText()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("native internal state: \n");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r40 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.String native_get_internal_state()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r3);

        return;
    }

    public com.android.server.location.gnss.GnssAntennaInfoProvider getGnssAntennaInfoProvider()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssAntennaInfoProvider $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider>;

        return $r1;
    }

    public com.android.server.location.gnss.GnssBatchingProvider getGnssBatchingProvider()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssBatchingProvider $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssBatchingProvider mGnssBatchingProvider>;

        return $r1;
    }

    public com.android.server.location.gnss.GnssCapabilitiesProvider getGnssCapabilitiesProvider()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssCapabilitiesProvider $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssCapabilitiesProvider mGnssCapabilitiesProvider>;

        return $r1;
    }

    public com.android.server.location.gnss.GnssMeasurementCorrectionsProvider getGnssMeasurementCorrectionsProvider()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider mGnssMeasurementCorrectionsProvider>;

        return $r1;
    }

    public com.android.server.location.gnss.GnssMeasurementsProvider getGnssMeasurementsProvider()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssMeasurementsProvider $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        return $r1;
    }

    public com.android.server.location.gnss.GnssLocationProvider$GnssMetricsProvider getGnssMetricsProvider()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$rqhQl_FjuYDwRh9wlhB1OdAWgzI $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$rqhQl_FjuYDwRh9wlhB1OdAWgzI;

        specialinvoke $r1.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$rqhQl_FjuYDwRh9wlhB1OdAWgzI: void <init>(com.android.server.location.gnss.GnssLocationProvider)>(r0);

        return $r1;
    }

    public com.android.server.location.gnss.GnssNavigationMessageProvider getGnssNavigationMessageProvider()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssNavigationMessageProvider $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider>;

        return $r1;
    }

    public com.android.server.location.gnss.GnssStatusListenerHelper getGnssStatusProvider()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssStatusListenerHelper $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusListenerHelper>;

        return $r1;
    }

    public com.android.server.location.gnss.GnssLocationProvider$GnssSystemInfoProvider getGnssSystemInfoProvider()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssLocationProvider$8 $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = new com.android.server.location.gnss.GnssLocationProvider$8;

        specialinvoke $r1.<com.android.server.location.gnss.GnssLocationProvider$8: void <init>(com.android.server.location.gnss.GnssLocationProvider)>(r0);

        return $r1;
    }

    public android.location.IGpsGeofenceHardware getGpsGeofenceProxy()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.server.location.gnss.GnssGeofenceProvider $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssGeofenceProvider mGnssGeofenceProvider>;

        return $r1;
    }

    public android.location.INetInitiatedListener getNetInitiatedListener()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.location.INetInitiatedListener $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.location.INetInitiatedListener mNetInitiatedListener>;

        return $r1;
    }

    public void injectTime(long, long, int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        long l0, l1;
        int i2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void native_inject_time(long,long,int)>(l0, l1, i2);

        return;
    }

    boolean isInEmergencySession()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.internal.location.GpsNetInitiatedHandler $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.GpsNetInitiatedHandler mNIHandler>;

        $z0 = virtualinvoke $r1.<com.android.internal.location.GpsNetInitiatedHandler: boolean getInEmergency()>();

        return $z0;
    }

    public java.lang.String lambda$getGnssMetricsProvider$10$GnssLocationProvider()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.internal.location.gnssmetrics.GnssMetrics $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.gnssmetrics.GnssMetrics mGnssMetrics>;

        $r2 = virtualinvoke $r1.<com.android.internal.location.gnssmetrics.GnssMetrics: java.lang.String dumpGnssMetricsAsProtoString()>();

        return $r2;
    }

    public void lambda$handleDownloadPsdsData$3$GnssLocationProvider()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        java.lang.Object r1;
        com.android.server.location.gnss.GpsPsdsDownloader $r2;
        com.android.server.location.gnss.GnssConfiguration $r3;
        java.util.Properties $r4;
        android.os.PowerManager$WakeLock $r5, $r6;
        boolean $z0, $z1, $z3;
        com.android.server.location.gnss.ExponentialBackOff $r7, $r9;
        android.os.Handler $r8;
        long $l2;
        int $i3;
        java.lang.Throwable $r10;
        byte[] r11;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        $r2 = new com.android.server.location.gnss.GpsPsdsDownloader;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        $r4 = virtualinvoke $r3.<com.android.server.location.gnss.GnssConfiguration: java.util.Properties getProperties()>();

        specialinvoke $r2.<com.android.server.location.gnss.GpsPsdsDownloader: void <init>(java.util.Properties)>($r4);

        r11 = virtualinvoke $r2.<com.android.server.location.gnss.GpsPsdsDownloader: byte[] downloadPsdsData()>();

        if r11 == null goto label02;

        $z3 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z3 == 0 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "calling native_inject_psds_data");

     label01:
        $i3 = lengthof r11;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void native_inject_psds_data(byte[],int)>(r11, $i3);

        $r9 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.ExponentialBackOff mPsdsBackOff>;

        virtualinvoke $r9.<com.android.server.location.gnss.ExponentialBackOff: void reset()>();

     label02:
        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void sendMessage(int,int,java.lang.Object)>(11, 0, null);

        if r11 != null goto label03;

        $r8 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r7 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.ExponentialBackOff mPsdsBackOff>;

        $l2 = virtualinvoke $r7.<com.android.server.location.gnss.ExponentialBackOff: long nextBackoffMillis()>();

        virtualinvoke $r8.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(6, $l2);

     label03:
        r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: java.lang.Object mLock>;

        entermonitor r1;

     label04:
        $r5 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.PowerManager$WakeLock mDownloadPsdsWakeLock>;

        $z0 = virtualinvoke $r5.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label06;

        $r6 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.PowerManager$WakeLock mDownloadPsdsWakeLock>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void release()>();

        $z1 = <com.android.server.location.gnss.GnssLocationProvider: boolean DEBUG>;

        if $z1 == 0 goto label07;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GnssLocationProvider", "WakeLock released by handleDownloadPsdsData()");

     label05:
        goto label07;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssLocationProvider", "WakeLock expired before release in handleDownloadPsdsData()");

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r10;

        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void lambda$new$0$GnssLocationProvider(boolean)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean z0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        z0 := @parameter0: boolean;

        r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mIsDeviceStationary> = z0;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

        return;
    }

    public void lambda$onUpdateSatelliteBlacklist$1$GnssLocationProvider(int[], int[])
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int[] r1, r2;
        com.android.server.location.gnss.GnssConfiguration $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssConfiguration mGnssConfiguration>;

        virtualinvoke $r3.<com.android.server.location.gnss.GnssConfiguration: void setSatelliteBlacklist(int[],int[])>(r1, r2);

        return;
    }

    public void lambda$reportAntennaInfo$5$GnssLocationProvider(java.util.List)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        java.util.List r1;
        com.android.server.location.gnss.GnssAntennaInfoProvider $r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider>;

        virtualinvoke $r2.<com.android.server.location.gnss.GnssAntennaInfoProvider: void onGnssAntennaInfoAvailable(java.util.List)>(r1);

        return;
    }

    public void lambda$reportGeofenceAddStatus$13$GnssLocationProvider(int, int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1, $i2;
        android.hardware.location.GeofenceHardwareImpl $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r4 = staticinvoke <android.hardware.location.GeofenceHardwareImpl: android.hardware.location.GeofenceHardwareImpl getInstance(android.content.Context)>($r3);

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl> = $r4;

     label1:
        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        $i2 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider: int getGeofenceStatus(int)>(i1);

        virtualinvoke $r2.<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceAddStatus(int,int)>(i0, $i2);

        return;
    }

    public void lambda$reportGeofencePauseStatus$15$GnssLocationProvider(int, int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1, $i2;
        android.hardware.location.GeofenceHardwareImpl $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r4 = staticinvoke <android.hardware.location.GeofenceHardwareImpl: android.hardware.location.GeofenceHardwareImpl getInstance(android.content.Context)>($r3);

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl> = $r4;

     label1:
        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        $i2 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider: int getGeofenceStatus(int)>(i1);

        virtualinvoke $r2.<android.hardware.location.GeofenceHardwareImpl: void reportGeofencePauseStatus(int,int)>(i0, $i2);

        return;
    }

    public void lambda$reportGeofenceRemoveStatus$14$GnssLocationProvider(int, int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1, $i2;
        android.hardware.location.GeofenceHardwareImpl $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r4 = staticinvoke <android.hardware.location.GeofenceHardwareImpl: android.hardware.location.GeofenceHardwareImpl getInstance(android.content.Context)>($r3);

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl> = $r4;

     label1:
        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        $i2 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider: int getGeofenceStatus(int)>(i1);

        virtualinvoke $r2.<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceRemoveStatus(int,int)>(i0, $i2);

        return;
    }

    public void lambda$reportGeofenceResumeStatus$16$GnssLocationProvider(int, int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1, $i2;
        android.hardware.location.GeofenceHardwareImpl $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r4 = staticinvoke <android.hardware.location.GeofenceHardwareImpl: android.hardware.location.GeofenceHardwareImpl getInstance(android.content.Context)>($r3);

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl> = $r4;

     label1:
        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        $i2 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider: int getGeofenceStatus(int)>(i1);

        virtualinvoke $r2.<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceResumeStatus(int,int)>(i0, $i2);

        return;
    }

    public void lambda$reportGeofenceStatus$12$GnssLocationProvider(int, android.location.Location)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, $i1;
        android.location.Location r1;
        android.hardware.location.GeofenceHardwareImpl $r2, $r3, $r5;
        android.content.Context $r4;
        byte b2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: android.location.Location;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        if $r2 != null goto label1;

        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r5 = staticinvoke <android.hardware.location.GeofenceHardwareImpl: android.hardware.location.GeofenceHardwareImpl getInstance(android.content.Context)>($r4);

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl> = $r5;

     label1:
        b2 = 1;

        if i0 != 2 goto label2;

        b2 = 0;

     label2:
        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        $i1 = <android.location.FusedBatchOptions$SourceTechnologies: int GNSS>;

        virtualinvoke $r3.<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceMonitorStatus(int,int,android.location.Location,int)>(0, b2, r1, $i1);

        return;
    }

    public void lambda$reportGeofenceTransition$11$GnssLocationProvider(int, android.location.Location, int, long)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1, $i3;
        android.location.Location r1;
        long l2;
        android.hardware.location.GeofenceHardwareImpl $r2, $r3, $r5;
        android.content.Context $r4;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: android.location.Location;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        if $r2 != null goto label1;

        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.content.Context mContext>;

        $r5 = staticinvoke <android.hardware.location.GeofenceHardwareImpl: android.hardware.location.GeofenceHardwareImpl getInstance(android.content.Context)>($r4);

        r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl> = $r5;

     label1:
        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        $i3 = <android.location.FusedBatchOptions$SourceTechnologies: int GNSS>;

        virtualinvoke $r3.<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceTransition(int,android.location.Location,int,long,int,int)>(i0, r1, i1, l2, 0, $i3);

        return;
    }

    public void lambda$reportGnssServiceDied$9$GnssLocationProvider()
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        boolean $z0;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setupNativeGnssService(boolean)>(1);

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void reloadGpsProperties()>();

        $z0 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean isGpsEnabled()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void setGpsEnabled(boolean)>(0);

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void updateEnabled()>();

     label1:
        return;
    }

    public void lambda$reportMeasurementData$4$GnssLocationProvider(android.location.GnssMeasurementsEvent)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.location.GnssMeasurementsEvent r1;
        com.android.server.location.gnss.GnssMeasurementsProvider $r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: android.location.GnssMeasurementsEvent;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        virtualinvoke $r2.<com.android.server.location.gnss.GnssMeasurementsProvider: void onMeasurementsAvailable(android.location.GnssMeasurementsEvent)>(r1);

        return;
    }

    public void lambda$reportNavigationMessage$6$GnssLocationProvider(android.location.GnssNavigationMessage)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        android.location.GnssNavigationMessage r1;
        com.android.server.location.gnss.GnssNavigationMessageProvider $r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: android.location.GnssNavigationMessage;

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider>;

        virtualinvoke $r2.<com.android.server.location.gnss.GnssNavigationMessageProvider: void onNavigationMessageAvailable(android.location.GnssNavigationMessage)>(r1);

        return;
    }

    public void lambda$setSubHalMeasurementCorrectionsCapabilities$8$GnssLocationProvider(int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0;
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider $r1;
        boolean $z0;
        com.android.server.location.gnss.GnssCapabilitiesProvider $r2;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider mGnssMeasurementCorrectionsProvider>;

        $z0 = virtualinvoke $r1.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: boolean onCapabilitiesUpdated(int)>(i0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssCapabilitiesProvider mGnssCapabilitiesProvider>;

        virtualinvoke $r2.<com.android.server.location.gnss.GnssCapabilitiesProvider: void setSubHalMeasurementCorrectionsCapabilities(int)>(i0);

        return;
    }

    public void lambda$setTopHalCapabilities$7$GnssLocationProvider(int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.location.gnss.GnssMeasurementsProvider $r1;
        com.android.server.location.gnss.GnssNavigationMessageProvider $r2;
        com.android.server.location.gnss.GnssAntennaInfoProvider $r3;
        com.android.server.location.gnss.GnssCapabilitiesProvider $r4;
        com.android.server.location.gnss.NtpTimeHelper $r5;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        r0.<com.android.server.location.gnss.GnssLocationProvider: int mTopHalCapabilities> = i0;

        $z0 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(16);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.NtpTimeHelper mNtpTimeHelper>;

        virtualinvoke $r5.<com.android.server.location.gnss.NtpTimeHelper: void enablePeriodicTimeInjection()>();

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void requestUtcTime()>();

     label1:
        $r1 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        $z1 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(64);

        virtualinvoke $r1.<com.android.server.location.gnss.GnssMeasurementsProvider: void onCapabilitiesUpdated(boolean)>($z1);

        $r2 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider>;

        $z2 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(128);

        virtualinvoke $r2.<com.android.server.location.gnss.GnssNavigationMessageProvider: void onCapabilitiesUpdated(boolean)>($z2);

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void restartRequests()>();

        $r3 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider>;

        $z3 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean hasCapability(int)>(2048);

        virtualinvoke $r3.<com.android.server.location.gnss.GnssAntennaInfoProvider: void onCapabilitiesUpdated(boolean)>($z3);

        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssCapabilitiesProvider mGnssCapabilitiesProvider>;

        $i1 = r0.<com.android.server.location.gnss.GnssLocationProvider: int mTopHalCapabilities>;

        virtualinvoke $r4.<com.android.server.location.gnss.GnssCapabilitiesProvider: void setTopHalCapabilities(int)>($i1);

        return;
    }

    public void onExtraCommand(int, int, java.lang.String, android.os.Bundle)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1;
        long l2;
        java.lang.String $r1, $r2, $r3, $r6, r8;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Throwable $r7;
        android.os.Bundle r9;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r8 := @parameter2: java.lang.String;

        r9 := @parameter3: android.os.Bundle;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = "delete_aiding_data";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void deleteAidingData(android.os.Bundle)>(r9);

     label2:
        goto label8;

     label3:
        $r2 = "force_time_injection";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label5;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void requestUtcTime()>();

     label4:
        goto label8;

     label5:
        $r3 = "force_psds_injection";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z2 == 0 goto label7;

        $z3 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mSupportsPsds>;

        if $z3 == 0 goto label8;

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void psdsDownloadRequest()>();

     label6:
        goto label8;

     label7:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendExtraCommand: unknown command ");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r6 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GnssLocationProvider", $r6);

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label9:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public void onSetRequest(com.android.internal.location.ProviderRequest)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        com.android.internal.location.ProviderRequest r1;
        com.android.server.location.gnss.GnssLocationProvider$GpsRequest $r2;
        android.os.WorkSource $r3;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: com.android.internal.location.ProviderRequest;

        $r2 = new com.android.server.location.gnss.GnssLocationProvider$GpsRequest;

        $r3 = r1.<com.android.internal.location.ProviderRequest: android.os.WorkSource workSource>;

        specialinvoke $r2.<com.android.server.location.gnss.GnssLocationProvider$GpsRequest: void <init>(com.android.internal.location.ProviderRequest,android.os.WorkSource)>(r1, $r3);

        specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: void sendMessage(int,int,java.lang.Object)>(3, 0, $r2);

        return;
    }

    public void onUpdateSatelliteBlacklist(int[], int[])
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int[] r1, r2;
        com.android.server.location.gnss._$$Lambda$GnssLocationProvider$8xqmGrm3vUbuBYyxecHypUKBN8M $r3;
        android.os.Handler $r4;
        com.android.internal.location.gnssmetrics.GnssMetrics $r5;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        $r4 = r0.<com.android.server.location.gnss.GnssLocationProvider: android.os.Handler mHandler>;

        $r3 = new com.android.server.location.gnss._$$Lambda$GnssLocationProvider$8xqmGrm3vUbuBYyxecHypUKBN8M;

        specialinvoke $r3.<com.android.server.location.gnss._$$Lambda$GnssLocationProvider$8xqmGrm3vUbuBYyxecHypUKBN8M: void <init>(com.android.server.location.gnss.GnssLocationProvider,int[],int[])>(r0, r1, r2);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        $r5 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.gnssmetrics.GnssMetrics mGnssMetrics>;

        virtualinvoke $r5.<com.android.internal.location.gnssmetrics.GnssMetrics: void resetConstellationTypes()>();

        return;
    }

    public void reportNiNotification(int, int, int, int, int, java.lang.String, java.lang.String, int, int)
    {
        com.android.server.location.gnss.GnssLocationProvider r0;
        int i0, i1, i2, i3, i4, i5, i6, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.String r1, r2, $r14, $r24, $r27, $r28;
        java.lang.StringBuilder $r3, $r15;
        com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification $r25;
        com.android.internal.location.GpsNetInitiatedHandler $r26;
        boolean $z1, $z2, $z3, $z4, $z5, z6, z7, z8;

        r0 := @this: com.android.server.location.gnss.GnssLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

        i5 := @parameter7: int;

        i6 := @parameter8: int;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GnssLocationProvider", "reportNiNotification: entered");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notificationId: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", niType: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", notifyFlags: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", timeout: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultResponse: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r14 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GnssLocationProvider", $r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestorId: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", text: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", requestorIdEncoding: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", textEncoding: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r24 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GnssLocationProvider", $r24);

        $r25 = new com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification;

        specialinvoke $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: void <init>()>();

        $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int notificationId> = i0;

        $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int niType> = i1;

        $i10 = i2 & 1;

        if $i10 == 0 goto label1;

        z6 = 1;

        goto label2;

     label1:
        z6 = 0;

     label2:
        $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: boolean needNotify> = z6;

        $i11 = i2 & 2;

        if $i11 == 0 goto label3;

        z7 = 1;

        goto label4;

     label3:
        z7 = 0;

     label4:
        $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: boolean needVerify> = z7;

        z8 = 0;

        $i12 = i2 & 4;

        if $i12 == 0 goto label5;

        z8 = 1;

     label5:
        $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: boolean privacyOverride> = z8;

        $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int timeout> = i3;

        $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int defaultResponse> = i4;

        $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: java.lang.String requestorId> = r1;

        $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: java.lang.String text> = r2;

        $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int requestorIdEncoding> = i5;

        $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int textEncoding> = i6;

        $r26 = r0.<com.android.server.location.gnss.GnssLocationProvider: com.android.internal.location.GpsNetInitiatedHandler mNIHandler>;

        virtualinvoke $r26.<com.android.internal.location.GpsNetInitiatedHandler: void handleNiNotification(com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification)>($r25);

        $i13 = $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int notificationId>;

        $i14 = $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int niType>;

        $z1 = $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: boolean needNotify>;

        $z2 = $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: boolean needVerify>;

        $z3 = $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: boolean privacyOverride>;

        $i15 = $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int timeout>;

        $i16 = $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int defaultResponse>;

        $r27 = $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: java.lang.String requestorId>;

        $r28 = $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: java.lang.String text>;

        $i17 = $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int requestorIdEncoding>;

        $i18 = $r25.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int textEncoding>;

        $z4 = r0.<com.android.server.location.gnss.GnssLocationProvider: boolean mSuplEsEnabled>;

        $z5 = specialinvoke r0.<com.android.server.location.gnss.GnssLocationProvider: boolean isGpsEnabled()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int,int,boolean,boolean,boolean,int,int,java.lang.String,java.lang.String,int,int,boolean,boolean,int)>(124, 1, $i13, $i14, $z1, $z2, $z3, $i15, $i16, $r27, $r28, $i17, $i18, $z4, $z5, 0);

        return;
    }
}
