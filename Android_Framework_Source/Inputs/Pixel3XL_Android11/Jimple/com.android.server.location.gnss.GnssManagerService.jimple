public class com.android.server.location.gnss.GnssManagerService extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final com.android.server.location.AppForegroundHelper mAppForegroundHelper;
    private final com.android.server.location.AppOpsHelper mAppOpsHelper;
    private final android.content.Context mContext;
    private final android.util.ArrayMap mGnssAntennaInfoListeners;
    private final com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider;
    private android.location.IBatchedLocationCallback mGnssBatchingCallback;
    private com.android.server.location.LocationManagerServiceUtils$LinkedListener mGnssBatchingDeathCallback;
    private boolean mGnssBatchingInProgress;
    private final java.lang.Object mGnssBatchingLock;
    private final com.android.server.location.gnss.GnssBatchingProvider mGnssBatchingProvider;
    private final com.android.server.location.gnss.GnssCapabilitiesProvider mGnssCapabilitiesProvider;
    private final com.android.server.location.gnss.GnssLocationProvider mGnssLocationProvider;
    private final com.android.server.location.gnss.GnssMeasurementCorrectionsProvider mGnssMeasurementCorrectionsProvider;
    private final android.util.ArrayMap mGnssMeasurementsListeners;
    private final com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider;
    private final com.android.server.location.gnss.GnssLocationProvider$GnssMetricsProvider mGnssMetricsProvider;
    private final android.util.ArrayMap mGnssNavigationMessageListeners;
    private final com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider;
    private final android.util.ArrayMap mGnssStatusListeners;
    private final com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusProvider;
    private final com.android.server.location.gnss.GnssLocationProvider$GnssSystemInfoProvider mGnssSystemInfoProvider;
    private final android.location.IGpsGeofenceHardware mGpsGeofenceProxy;
    private android.location.LocationManagerInternal mLocationManagerInternal;
    private final com.android.server.location.LocationUsageLogger mLocationUsageLogger;
    private final android.location.INetInitiatedListener mNetInitiatedListener;
    private final com.android.server.location.SettingsHelper mSettingsHelper;

    public void <init>(android.content.Context, com.android.server.location.AppOpsHelper, com.android.server.location.SettingsHelper, com.android.server.location.AppForegroundHelper, com.android.server.location.LocationUsageLogger)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        android.content.Context r1;
        com.android.server.location.AppOpsHelper r2;
        com.android.server.location.SettingsHelper r3;
        com.android.server.location.AppForegroundHelper r4;
        com.android.server.location.LocationUsageLogger r5;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.location.AppOpsHelper;

        r3 := @parameter2: com.android.server.location.SettingsHelper;

        r4 := @parameter3: com.android.server.location.AppForegroundHelper;

        r5 := @parameter4: com.android.server.location.LocationUsageLogger;

        specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: void <init>(android.content.Context,com.android.server.location.AppOpsHelper,com.android.server.location.SettingsHelper,com.android.server.location.AppForegroundHelper,com.android.server.location.LocationUsageLogger,com.android.server.location.gnss.GnssLocationProvider)>(r1, r2, r3, r4, r5, null);

        return;
    }

    void <init>(android.content.Context, com.android.server.location.AppOpsHelper, com.android.server.location.SettingsHelper, com.android.server.location.AppForegroundHelper, com.android.server.location.LocationUsageLogger, com.android.server.location.gnss.GnssLocationProvider)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        com.android.server.location.AppOpsHelper r1;
        com.android.server.location.SettingsHelper r2;
        com.android.server.location.AppForegroundHelper r3;
        com.android.server.location.LocationUsageLogger r4;
        com.android.server.location.gnss.GnssLocationProvider r5, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, r35;
        android.util.ArrayMap $r6, $r7, $r8, $r9;
        java.lang.Object $r10;
        boolean $z0;
        com.android.server.location.gnss.GnssStatusListenerHelper $r11;
        com.android.server.location.gnss.GnssMeasurementsProvider $r13;
        com.android.server.location.gnss.GnssAntennaInfoProvider $r15;
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider $r17;
        com.android.server.location.gnss.GnssNavigationMessageProvider $r19;
        com.android.server.location.gnss.GnssLocationProvider$GnssSystemInfoProvider $r21;
        com.android.server.location.gnss.GnssLocationProvider$GnssMetricsProvider $r23;
        com.android.server.location.gnss.GnssCapabilitiesProvider $r25;
        com.android.server.location.gnss.GnssBatchingProvider $r27;
        android.location.INetInitiatedListener $r29;
        android.location.IGpsGeofenceHardware $r31;
        android.content.Context $r33, r34;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r34 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.server.location.AppOpsHelper;

        r2 := @parameter2: com.android.server.location.SettingsHelper;

        r3 := @parameter3: com.android.server.location.AppForegroundHelper;

        r4 := @parameter4: com.android.server.location.LocationUsageLogger;

        r5 := @parameter5: com.android.server.location.gnss.GnssLocationProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssMeasurementsListeners> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssAntennaInfoListeners> = $r7;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssNavigationMessageListeners> = $r8;

        $r9 = new android.util.ArrayMap;

        specialinvoke $r9.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssStatusListeners> = $r9;

        $r10 = new java.lang.Object;

        specialinvoke $r10.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.gnss.GnssManagerService: java.lang.Object mGnssBatchingLock> = $r10;

        r0.<com.android.server.location.gnss.GnssManagerService: boolean mGnssBatchingInProgress> = 0;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssManagerService: boolean isGnssSupported()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>($z0);

        r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext> = r34;

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper> = r1;

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.SettingsHelper mSettingsHelper> = r2;

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper> = r3;

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.LocationUsageLogger mLocationUsageLogger> = r4;

        r35 = r5;

        if r5 != null goto label1;

        $r32 = new com.android.server.location.gnss.GnssLocationProvider;

        $r33 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        specialinvoke $r32.<com.android.server.location.gnss.GnssLocationProvider: void <init>(android.content.Context)>($r33);

        r35 = $r32;

     label1:
        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider mGnssLocationProvider> = r35;

        $r11 = virtualinvoke r35.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssStatusListenerHelper getGnssStatusProvider()>();

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusProvider> = $r11;

        $r12 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider mGnssLocationProvider>;

        $r13 = virtualinvoke $r12.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementsProvider getGnssMeasurementsProvider()>();

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider> = $r13;

        $r14 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider mGnssLocationProvider>;

        $r15 = virtualinvoke $r14.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssAntennaInfoProvider getGnssAntennaInfoProvider()>();

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider> = $r15;

        $r16 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider mGnssLocationProvider>;

        $r17 = virtualinvoke $r16.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider getGnssMeasurementCorrectionsProvider()>();

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider mGnssMeasurementCorrectionsProvider> = $r17;

        $r18 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider mGnssLocationProvider>;

        $r19 = virtualinvoke $r18.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssNavigationMessageProvider getGnssNavigationMessageProvider()>();

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider> = $r19;

        $r20 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider mGnssLocationProvider>;

        $r21 = virtualinvoke $r20.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssLocationProvider$GnssSystemInfoProvider getGnssSystemInfoProvider()>();

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider$GnssSystemInfoProvider mGnssSystemInfoProvider> = $r21;

        $r22 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider mGnssLocationProvider>;

        $r23 = virtualinvoke $r22.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssLocationProvider$GnssMetricsProvider getGnssMetricsProvider()>();

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider$GnssMetricsProvider mGnssMetricsProvider> = $r23;

        $r24 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider mGnssLocationProvider>;

        $r25 = virtualinvoke $r24.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssCapabilitiesProvider getGnssCapabilitiesProvider()>();

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssCapabilitiesProvider mGnssCapabilitiesProvider> = $r25;

        $r26 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider mGnssLocationProvider>;

        $r27 = virtualinvoke $r26.<com.android.server.location.gnss.GnssLocationProvider: com.android.server.location.gnss.GnssBatchingProvider getGnssBatchingProvider()>();

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssBatchingProvider mGnssBatchingProvider> = $r27;

        $r28 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider mGnssLocationProvider>;

        $r29 = virtualinvoke $r28.<com.android.server.location.gnss.GnssLocationProvider: android.location.INetInitiatedListener getNetInitiatedListener()>();

        r0.<com.android.server.location.gnss.GnssManagerService: android.location.INetInitiatedListener mNetInitiatedListener> = $r29;

        $r30 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider mGnssLocationProvider>;

        $r31 = virtualinvoke $r30.<com.android.server.location.gnss.GnssLocationProvider: android.location.IGpsGeofenceHardware getGpsGeofenceProxy()>();

        r0.<com.android.server.location.gnss.GnssManagerService: android.location.IGpsGeofenceHardware mGpsGeofenceProxy> = $r31;

        return;
    }

    private boolean addGnssDataListenerLocked(java.lang.Object, android.os.IInterface, java.lang.String, java.lang.String, com.android.server.location.RemoteListenerHelper, android.util.ArrayMap, java.util.function.Consumer)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        java.lang.Object r1;
        android.os.IInterface r2;
        java.lang.String r3, r15;
        com.android.server.location.RemoteListenerHelper r4;
        android.content.Context $r6, $r7;
        com.android.server.location.AppOpsHelper $r8;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.location.LocationManagerServiceUtils$LinkedListener $r9;
        com.android.server.location.gnss.GnssMeasurementsProvider $r11, $r12;
        int $i0, $i1, $i3;
        com.android.server.location.AppForegroundHelper $r13, $r21;
        com.android.server.location.gnss.GnssStatusListenerHelper $r14;
        android.util.ArrayMap r16;
        java.util.function.Consumer r17;
        com.android.server.location.CallerIdentity r18;
        android.os.IBinder r19;
        com.android.server.location.LocationUsageLogger r20;
        byte b2;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.os.IInterface;

        r3 := @parameter2: java.lang.String;

        r15 := @parameter3: java.lang.String;

        r4 := @parameter4: com.android.server.location.RemoteListenerHelper;

        r16 := @parameter5: android.util.ArrayMap;

        r17 := @parameter6: java.util.function.Consumer;

        $r6 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_FINE_LOCATION", null);

        $r7 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        r18 = staticinvoke <com.android.server.location.CallerIdentity: com.android.server.location.CallerIdentity fromBinder(android.content.Context,java.lang.String,java.lang.String)>($r7, r3, r15);

        $r8 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        $z0 = virtualinvoke $r8.<com.android.server.location.AppOpsHelper: boolean checkLocationAccess(com.android.server.location.CallerIdentity)>(r18);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r9 = new com.android.server.location.LocationManagerServiceUtils$LinkedListener;

        specialinvoke $r9.<com.android.server.location.LocationManagerServiceUtils$LinkedListener: void <init>(java.lang.Object,java.lang.Object,com.android.server.location.CallerIdentity,java.util.function.Consumer)>(r1, r2, r18, r17);

        r19 = interfaceinvoke r2.<android.os.IInterface: android.os.IBinder asBinder()>();

        $z1 = virtualinvoke $r9.<com.android.server.location.LocationManagerServiceUtils$LinkedListener: boolean linkToListenerDeathNotificationLocked(android.os.IBinder)>(r19);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        virtualinvoke r16.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r19, $r9);

        $r11 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        if r4 == $r11 goto label4;

        $r14 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusProvider>;

        if r4 != $r14 goto label3;

        goto label4;

     label3:
        goto label7;

     label4:
        r20 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.LocationUsageLogger mLocationUsageLogger>;

        $r12 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        if r4 != $r12 goto label5;

        b2 = 2;

        goto label6;

     label5:
        b2 = 3;

     label6:
        $r13 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper>;

        $i0 = r18.<com.android.server.location.CallerIdentity: int uid>;

        $i1 = virtualinvoke $r13.<com.android.server.location.AppForegroundHelper: int getImportance(int)>($i0);

        virtualinvoke r20.<com.android.server.location.LocationUsageLogger: void logLocationApiUsage(int,int,java.lang.String,android.location.LocationRequest,boolean,boolean,android.location.Geofence,int)>(0, b2, r3, null, 1, 0, null, $i1);

     label7:
        $r21 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper>;

        $i3 = r18.<com.android.server.location.CallerIdentity: int uid>;

        $z3 = virtualinvoke $r21.<com.android.server.location.AppForegroundHelper: boolean isAppForeground(int)>($i3);

        if $z3 != 0 goto label8;

        $z2 = specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: boolean isThrottlingExempt(com.android.server.location.CallerIdentity)>(r18);

        if $z2 == 0 goto label9;

     label8:
        virtualinvoke r4.<com.android.server.location.RemoteListenerHelper: void addListener(java.lang.Object,android.os.IInterface,com.android.server.location.CallerIdentity)>(r1, r2, r18);

     label9:
        return 1;
    }

    public static boolean isGnssSupported()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssLocationProvider: boolean isSupported()>();

        return $z0;
    }

    private boolean isThrottlingExempt(com.android.server.location.CallerIdentity)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        int i0;
        com.android.server.location.SettingsHelper $r1;
        java.util.Set $r2;
        java.lang.String $r3, $r5;
        boolean $z0, $z1, z2;
        android.location.LocationManagerInternal $r4, $r6;
        java.lang.Throwable $r7;
        com.android.server.location.CallerIdentity r8;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r8 := @parameter0: com.android.server.location.CallerIdentity;

        i0 = r8.<com.android.server.location.CallerIdentity: int uid>;

        z2 = 1;

        if i0 != 1000 goto label01;

        return 1;

     label01:
        $r1 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        $r2 = virtualinvoke $r1.<com.android.server.location.SettingsHelper: java.util.Set getBackgroundThrottlePackageWhitelist()>();

        $r3 = r8.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label02;

        return 1;

     label02:
        entermonitor r0;

     label03:
        $r4 = r0.<com.android.server.location.gnss.GnssManagerService: android.location.LocationManagerInternal mLocationManagerInternal>;

        if $r4 == null goto label05;

     label04:
        goto label06;

     label05:
        z2 = 0;

     label06:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z2);

        exitmonitor r0;

     label07:
        $r6 = r0.<com.android.server.location.gnss.GnssManagerService: android.location.LocationManagerInternal mLocationManagerInternal>;

        $r5 = r8.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $z1 = virtualinvoke $r6.<android.location.LocationManagerInternal: boolean isProviderPackage(java.lang.String)>($r5);

        return $z1;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r7;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public static void lambda$de6v4jWKxQDC9J4FdGGrfKg2phA(com.android.server.location.gnss.GnssManagerService, int, boolean)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.server.location.gnss.GnssManagerService;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: void onAppForegroundChanged(int,boolean)>(i0, z0);

        return;
    }

    private void onAppForegroundChanged(int, boolean)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        int i0;
        boolean z0;
        com.android.server.location.gnss.'-$$Lambda$qoNbXUvSu3yuTPVXPUfZW_HDrTQ' $r1;
        com.android.server.location.gnss.GnssMeasurementsProvider $r2;
        android.util.ArrayMap $r3, $r6, $r9, $r12, r17, r18, r19, r20;
        com.android.server.location.gnss.'-$$Lambda$HALkbmbB2IPr_wdFkPjiIWCzJsY' $r4;
        com.android.server.location.gnss.GnssNavigationMessageProvider $r5;
        com.android.server.location.gnss.'-$$Lambda$hu439-4T6QBT8QyZnspMtXqICWs' $r7;
        com.android.server.location.gnss.GnssStatusListenerHelper $r8;
        com.android.server.location.gnss.'-$$Lambda$D_8O7MDYM_zvDJaJvJVfzXhIfZY' $r10;
        com.android.server.location.gnss.GnssAntennaInfoProvider $r11;
        java.lang.Throwable $r13, $r14, $r15, $r16;
        java.util.function.Function r25, r26, r27, r28;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r17 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssMeasurementsListeners>;

        entermonitor r17;

     label01:
        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssMeasurementsListeners>;

        $r2 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        $r1 = <com.android.server.location.gnss._$$Lambda$qoNbXUvSu3yuTPVXPUfZW_HDrTQ: com.android.server.location.gnss.'-$$Lambda$qoNbXUvSu3yuTPVXPUfZW_HDrTQ' INSTANCE>;

        r25 = (java.util.function.Function) $r1;

        specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: void updateListenersOnForegroundChangedLocked(java.util.Map,com.android.server.location.RemoteListenerHelper,java.util.function.Function,int,boolean)>($r3, $r2, r25, i0, z0);

        exitmonitor r17;

     label02:
        r18 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssNavigationMessageListeners>;

        entermonitor r18;

     label03:
        $r6 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssNavigationMessageListeners>;

        $r5 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider>;

        $r4 = <com.android.server.location.gnss._$$Lambda$HALkbmbB2IPr_wdFkPjiIWCzJsY: com.android.server.location.gnss.'-$$Lambda$HALkbmbB2IPr_wdFkPjiIWCzJsY' INSTANCE>;

        r26 = (java.util.function.Function) $r4;

        specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: void updateListenersOnForegroundChangedLocked(java.util.Map,com.android.server.location.RemoteListenerHelper,java.util.function.Function,int,boolean)>($r6, $r5, r26, i0, z0);

        exitmonitor r18;

     label04:
        r19 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssStatusListeners>;

        entermonitor r19;

     label05:
        $r9 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssStatusListeners>;

        $r8 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusProvider>;

        $r7 = <com.android.server.location.gnss._$$Lambda$hu439_4T6QBT8QyZnspMtXqICWs: com.android.server.location.gnss.'-$$Lambda$hu439-4T6QBT8QyZnspMtXqICWs' INSTANCE>;

        r27 = (java.util.function.Function) $r7;

        specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: void updateListenersOnForegroundChangedLocked(java.util.Map,com.android.server.location.RemoteListenerHelper,java.util.function.Function,int,boolean)>($r9, $r8, r27, i0, z0);

        exitmonitor r19;

     label06:
        r20 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssAntennaInfoListeners>;

        entermonitor r20;

     label07:
        $r12 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssAntennaInfoListeners>;

        $r11 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider>;

        $r10 = <com.android.server.location.gnss._$$Lambda$D_8O7MDYM_zvDJaJvJVfzXhIfZY: com.android.server.location.gnss.'-$$Lambda$D_8O7MDYM_zvDJaJvJVfzXhIfZY' INSTANCE>;

        r28 = (java.util.function.Function) $r10;

        specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: void updateListenersOnForegroundChangedLocked(java.util.Map,com.android.server.location.RemoteListenerHelper,java.util.function.Function,int,boolean)>($r12, $r11, r28, i0, z0);

        exitmonitor r20;

     label08:
        return;

     label09:
        $r16 := @caughtexception;

     label10:
        exitmonitor r20;

     label11:
        throw $r16;

     label12:
        $r14 := @caughtexception;

     label13:
        exitmonitor r19;

     label14:
        throw $r14;

     label15:
        $r15 := @caughtexception;

     label16:
        exitmonitor r18;

     label17:
        throw $r15;

     label18:
        $r13 := @caughtexception;

     label19:
        exitmonitor r17;

     label20:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    private void removeGnssDataListenerLocked(android.os.IInterface, com.android.server.location.RemoteListenerHelper, android.util.ArrayMap)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        android.os.IInterface r1;
        com.android.server.location.RemoteListenerHelper r2;
        android.os.IBinder r3;
        com.android.server.location.LocationManagerServiceUtils$LinkedListener r4;
        java.lang.Object $r5;
        com.android.server.location.gnss.GnssMeasurementsProvider $r6, $r7;
        com.android.server.location.CallerIdentity $r8;
        java.lang.String $r9;
        com.android.server.location.AppForegroundHelper $r10;
        int $i0, $i1;
        com.android.server.location.gnss.GnssStatusListenerHelper $r11;
        android.util.ArrayMap r12;
        com.android.server.location.LocationUsageLogger r13;
        byte b3;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r1 := @parameter0: android.os.IInterface;

        r2 := @parameter1: com.android.server.location.RemoteListenerHelper;

        r12 := @parameter2: android.util.ArrayMap;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssManagerService", "Can not remove GNSS data listener. GNSS data provider not available.");

        return;

     label1:
        r3 = interfaceinvoke r1.<android.os.IInterface: android.os.IBinder asBinder()>();

        $r5 = virtualinvoke r12.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r3);

        r4 = (com.android.server.location.LocationManagerServiceUtils$LinkedListener) $r5;

        if r4 != null goto label2;

        return;

     label2:
        $r6 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        if r2 == $r6 goto label3;

        $r11 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusProvider>;

        if r2 != $r11 goto label6;

     label3:
        r13 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.LocationUsageLogger mLocationUsageLogger>;

        $r7 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        if r2 != $r7 goto label4;

        b3 = 2;

        goto label5;

     label4:
        b3 = 3;

     label5:
        $r8 = virtualinvoke r4.<com.android.server.location.LocationManagerServiceUtils$LinkedListener: com.android.server.location.CallerIdentity getCallerIdentity()>();

        $r9 = $r8.<com.android.server.location.CallerIdentity: java.lang.String packageName>;

        $r10 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = virtualinvoke $r10.<com.android.server.location.AppForegroundHelper: int getImportance(int)>($i0);

        virtualinvoke r13.<com.android.server.location.LocationUsageLogger: void logLocationApiUsage(int,int,java.lang.String,android.location.LocationRequest,boolean,boolean,android.location.Geofence,int)>(1, b3, $r9, null, 1, 0, null, $i1);

     label6:
        virtualinvoke r4.<com.android.server.location.LocationManagerServiceUtils$LinkedListener: void unlinkFromListenerDeathNotificationLocked(android.os.IBinder)>(r3);

        virtualinvoke r2.<com.android.server.location.RemoteListenerHelper: void removeListener(android.os.IInterface)>(r1);

        return;
    }

    private void updateListenersOnForegroundChangedLocked(java.util.Map, com.android.server.location.RemoteListenerHelper, java.util.function.Function, int, boolean)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        com.android.server.location.RemoteListenerHelper r1;
        java.util.function.Function r2;
        int i0, $i1;
        boolean z0, $z1, $z2;
        java.util.Iterator r3;
        java.util.Set $r4;
        java.lang.Object $r5, $r6, $r7, $r9, r14;
        android.os.IBinder $r8;
        java.util.Map r10;
        java.util.Map$Entry r11;
        com.android.server.location.LocationManagerServiceUtils$LinkedListener r12;
        com.android.server.location.CallerIdentity r13;
        android.os.IInterface r15;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r10 := @parameter0: java.util.Map;

        r1 := @parameter1: com.android.server.location.RemoteListenerHelper;

        r2 := @parameter2: java.util.function.Function;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r4 = interfaceinvoke r10.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        r12 = (com.android.server.location.LocationManagerServiceUtils$LinkedListener) $r6;

        r13 = virtualinvoke r12.<com.android.server.location.LocationManagerServiceUtils$LinkedListener: com.android.server.location.CallerIdentity getCallerIdentity()>();

        r14 = virtualinvoke r12.<com.android.server.location.LocationManagerServiceUtils$LinkedListener: java.lang.Object getRequest()>();

        $i1 = r13.<com.android.server.location.CallerIdentity: int uid>;

        if $i1 == i0 goto label2;

        goto label1;

     label2:
        $r7 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (android.os.IBinder) $r7;

        $r9 = interfaceinvoke r2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r8);

        r15 = (android.os.IInterface) $r9;

        if z0 != 0 goto label4;

        $z1 = specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: boolean isThrottlingExempt(com.android.server.location.CallerIdentity)>(r13);

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        virtualinvoke r1.<com.android.server.location.RemoteListenerHelper: void removeListener(android.os.IInterface)>(r15);

        goto label5;

     label4:
        virtualinvoke r1.<com.android.server.location.RemoteListenerHelper: void addListener(java.lang.Object,android.os.IInterface,com.android.server.location.CallerIdentity)>(r14, r15, r13);

     label5:
        goto label1;

     label6:
        return;
    }

    public boolean addGnssAntennaInfoListener(android.location.IGnssAntennaInfoListener, java.lang.String, java.lang.String)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        java.lang.String r1, r2;
        android.util.ArrayMap r3, r5;
        com.android.server.location.gnss.GnssAntennaInfoProvider r4;
        com.android.server.location.gnss._$$Lambda$r0e_CQBWppHmS1rnJk0BvqOj_UE r6;
        boolean z0;
        java.lang.Throwable $r7;
        android.location.IGnssAntennaInfoListener r8;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r8 := @parameter0: android.location.IGnssAntennaInfoListener;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssAntennaInfoListeners>;

        entermonitor r3;

     label1:
        r4 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider>;

        r5 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssAntennaInfoListeners>;

        r6 = new com.android.server.location.gnss._$$Lambda$r0e_CQBWppHmS1rnJk0BvqOj_UE;

        specialinvoke r6.<com.android.server.location.gnss._$$Lambda$r0e_CQBWppHmS1rnJk0BvqOj_UE: void <init>(com.android.server.location.gnss.GnssManagerService)>(r0);

        z0 = specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: boolean addGnssDataListenerLocked(java.lang.Object,android.os.IInterface,java.lang.String,java.lang.String,com.android.server.location.RemoteListenerHelper,android.util.ArrayMap,java.util.function.Consumer)>(null, r8, r1, r2, r4, r5, r6);

        exitmonitor r3;

     label2:
        return z0;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean addGnssBatchingCallback(android.location.IBatchedLocationCallback, java.lang.String, java.lang.String)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        com.android.server.location.LocationManagerServiceUtils$LinkedListener r1;
        com.android.server.location.gnss._$$Lambda$GnssManagerService$ADNn_wSsxu1352rEzpl8bNWHHIs r2;
        boolean z0;
        android.content.Context $r3, $r4, $r5;
        android.os.IBinder $r6;
        java.lang.Throwable $r7;
        android.location.IBatchedLocationCallback r8;
        java.lang.String r9, r10;
        com.android.server.location.CallerIdentity r11;
        java.lang.Object r12;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r8 := @parameter0: android.location.IBatchedLocationCallback;

        r9 := @parameter1: java.lang.String;

        r10 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", null);

        $r4 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_FINE_LOCATION", null);

        $r5 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        r11 = staticinvoke <com.android.server.location.CallerIdentity: com.android.server.location.CallerIdentity fromBinder(android.content.Context,java.lang.String,java.lang.String)>($r5, r9, r10);

        r12 = r0.<com.android.server.location.gnss.GnssManagerService: java.lang.Object mGnssBatchingLock>;

        entermonitor r12;

     label1:
        r0.<com.android.server.location.gnss.GnssManagerService: android.location.IBatchedLocationCallback mGnssBatchingCallback> = r8;

        r1 = new com.android.server.location.LocationManagerServiceUtils$LinkedListener;

        r2 = new com.android.server.location.gnss._$$Lambda$GnssManagerService$ADNn_wSsxu1352rEzpl8bNWHHIs;

        specialinvoke r2.<com.android.server.location.gnss._$$Lambda$GnssManagerService$ADNn_wSsxu1352rEzpl8bNWHHIs: void <init>(com.android.server.location.gnss.GnssManagerService)>(r0);

        specialinvoke r1.<com.android.server.location.LocationManagerServiceUtils$LinkedListener: void <init>(java.lang.Object,java.lang.Object,com.android.server.location.CallerIdentity,java.util.function.Consumer)>(null, r8, r11, r2);

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.LocationManagerServiceUtils$LinkedListener mGnssBatchingDeathCallback> = r1;

     label2:
        $r6 = interfaceinvoke r8.<android.location.IBatchedLocationCallback: android.os.IBinder asBinder()>();

        z0 = virtualinvoke r1.<com.android.server.location.LocationManagerServiceUtils$LinkedListener: boolean linkToListenerDeathNotificationLocked(android.os.IBinder)>($r6);

        exitmonitor r12;

     label3:
        return z0;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r12;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean addGnssMeasurementsListener(android.location.GnssRequest, android.location.IGnssMeasurementsListener, java.lang.String, java.lang.String)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        android.location.IGnssMeasurementsListener r1;
        java.lang.String r2, r3;
        android.util.ArrayMap r4, r6;
        com.android.server.location.gnss.GnssMeasurementsProvider r5;
        com.android.server.location.gnss._$$Lambda$FxAranobP2o6eVcPEOp8tzZYyLY r7;
        boolean z0, $z1;
        android.content.Context $r8;
        java.lang.Throwable $r9;
        android.location.GnssRequest r10;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r10 := @parameter0: android.location.GnssRequest;

        r1 := @parameter1: android.location.IGnssMeasurementsListener;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        if r10 == null goto label1;

        $z1 = virtualinvoke r10.<android.location.GnssRequest: boolean isFullTracking()>();

        if $z1 == 0 goto label1;

        $r8 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r8.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", null);

     label1:
        r4 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssMeasurementsListeners>;

        entermonitor r4;

     label2:
        r5 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        r6 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssMeasurementsListeners>;

        r7 = new com.android.server.location.gnss._$$Lambda$FxAranobP2o6eVcPEOp8tzZYyLY;

        specialinvoke r7.<com.android.server.location.gnss._$$Lambda$FxAranobP2o6eVcPEOp8tzZYyLY: void <init>(com.android.server.location.gnss.GnssManagerService)>(r0);

        z0 = specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: boolean addGnssDataListenerLocked(java.lang.Object,android.os.IInterface,java.lang.String,java.lang.String,com.android.server.location.RemoteListenerHelper,android.util.ArrayMap,java.util.function.Consumer)>(r10, r1, r2, r3, r5, r6, r7);

        exitmonitor r4;

     label3:
        return z0;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r4;

     label6:
        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean addGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener, java.lang.String, java.lang.String)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        java.lang.String r1, r2;
        android.util.ArrayMap r3, r5;
        com.android.server.location.gnss.GnssNavigationMessageProvider r4;
        com.android.server.location.gnss._$$Lambda$139_CBKLG1EL_wg1T1KP8tgmIKg r6;
        boolean z0;
        java.lang.Throwable $r7;
        android.location.IGnssNavigationMessageListener r8;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r8 := @parameter0: android.location.IGnssNavigationMessageListener;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssNavigationMessageListeners>;

        entermonitor r3;

     label1:
        r4 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider>;

        r5 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssNavigationMessageListeners>;

        r6 = new com.android.server.location.gnss._$$Lambda$139_CBKLG1EL_wg1T1KP8tgmIKg;

        specialinvoke r6.<com.android.server.location.gnss._$$Lambda$139_CBKLG1EL_wg1T1KP8tgmIKg: void <init>(com.android.server.location.gnss.GnssManagerService)>(r0);

        z0 = specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: boolean addGnssDataListenerLocked(java.lang.Object,android.os.IInterface,java.lang.String,java.lang.String,com.android.server.location.RemoteListenerHelper,android.util.ArrayMap,java.util.function.Consumer)>(null, r8, r1, r2, r4, r5, r6);

        exitmonitor r3;

     label2:
        return z0;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.location.gnss.GnssManagerService r0;
        com.android.internal.util.IndentingPrintWriter $r1;
        int $i0;
        android.util.ArrayMap $r3, $r7, $r11, r32, r34, r36;
        java.util.Collection $r4, $r8, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r14, $r16, $r18, r38;
        com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase $r15, $r17, $r19;
        java.lang.String $r20, $r21;
        java.lang.Throwable $r23, $r24, $r25, $r26;
        java.io.FileDescriptor r27;
        java.io.PrintWriter r28;
        java.lang.String[] r29;
        com.android.server.location.gnss.GnssLocationProvider$GnssMetricsProvider r31;
        java.util.Iterator r33, r35, r37;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r27 := @parameter0: java.io.FileDescriptor;

        r28 := @parameter1: java.io.PrintWriter;

        r29 := @parameter2: java.lang.String[];

        $r1 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r28, "  ");

        $i0 = lengthof r29;

        if $i0 <= 0 goto label02;

        $r20 = r29[0];

        $z3 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("--gnssmetrics");

        if $z3 == 0 goto label02;

        r31 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider$GnssMetricsProvider mGnssMetricsProvider>;

        if r31 == null goto label01;

        $r21 = interfaceinvoke r31.<com.android.server.location.gnss.GnssLocationProvider$GnssMetricsProvider: java.lang.String getGnssMetricsAsProtoString()>();

        virtualinvoke r28.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r21);

     label01:
        return;

     label02:
        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("GnssMeasurement Listeners:");

        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r32 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssMeasurementsListeners>;

        entermonitor r32;

     label03:
        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssMeasurementsListeners>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.util.Collection values()>();

        r33 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r18 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase) $r18;

        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>($r19);

     label05:
        goto label04;

     label06:
        exitmonitor r32;

     label07:
        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("GnssNavigationMessage Listeners:");

        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r34 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssNavigationMessageListeners>;

        entermonitor r34;

     label08:
        $r7 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssNavigationMessageListeners>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.util.Collection values()>();

        r35 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r16 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase) $r16;

        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>($r17);

     label10:
        goto label09;

     label11:
        exitmonitor r34;

     label12:
        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("GnssStatus Listeners:");

        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r36 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssStatusListeners>;

        entermonitor r36;

     label13:
        $r11 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssStatusListeners>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.util.Collection values()>();

        r37 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label14:
        $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r14 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (com.android.server.location.LocationManagerServiceUtils$LinkedListenerBase) $r14;

        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>($r15);

     label15:
        goto label14;

     label16:
        exitmonitor r36;

     label17:
        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        r38 = r0.<com.android.server.location.gnss.GnssManagerService: java.lang.Object mGnssBatchingLock>;

        entermonitor r38;

     label18:
        $z2 = r0.<com.android.server.location.gnss.GnssManagerService: boolean mGnssBatchingInProgress>;

        if $z2 == 0 goto label19;

        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("GNSS batching in progress");

     label19:
        exitmonitor r38;

     label20:
        return;

     label21:
        $r25 := @caughtexception;

     label22:
        exitmonitor r38;

     label23:
        throw $r25;

     label24:
        $r24 := @caughtexception;

     label25:
        exitmonitor r36;

     label26:
        throw $r24;

     label27:
        $r23 := @caughtexception;

     label28:
        exitmonitor r34;

     label29:
        throw $r23;

     label30:
        $r26 := @caughtexception;

     label31:
        exitmonitor r32;

     label32:
        throw $r26;

        catch java.lang.Throwable from label03 to label04 with label30;
        catch java.lang.Throwable from label04 to label05 with label30;
        catch java.lang.Throwable from label06 to label07 with label30;
        catch java.lang.Throwable from label08 to label09 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label28 to label29 with label27;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    public void flushGnssBatch(java.lang.String)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        java.lang.Object r1;
        android.content.Context $r2, $r3;
        com.android.server.location.gnss.GnssBatchingProvider $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r6 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", null);

        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_FINE_LOCATION", null);

        r1 = r0.<com.android.server.location.gnss.GnssManagerService: java.lang.Object mGnssBatchingLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssBatchingProvider mGnssBatchingProvider>;

        virtualinvoke $r4.<com.android.server.location.gnss.GnssBatchingProvider: void flush()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getGnssBatchSize(java.lang.String)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        int i0;
        android.content.Context $r2, $r3;
        com.android.server.location.gnss.GnssBatchingProvider $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        java.lang.Object r7;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r6 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", null);

        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_FINE_LOCATION", null);

        r7 = r0.<com.android.server.location.gnss.GnssManagerService: java.lang.Object mGnssBatchingLock>;

        entermonitor r7;

     label1:
        $r4 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssBatchingProvider mGnssBatchingProvider>;

        i0 = virtualinvoke $r4.<com.android.server.location.gnss.GnssBatchingProvider: int getBatchSize()>();

        exitmonitor r7;

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r7;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public long getGnssCapabilities()
    {
        com.android.server.location.gnss.GnssManagerService r0;
        com.android.server.location.gnss.GnssCapabilitiesProvider $r1;
        long $l0;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        $r1 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssCapabilitiesProvider mGnssCapabilitiesProvider>;

        $l0 = virtualinvoke $r1.<com.android.server.location.gnss.GnssCapabilitiesProvider: long getGnssCapabilities()>();

        return $l0;
    }

    public java.lang.String getGnssHardwareModelName()
    {
        com.android.server.location.gnss.GnssManagerService r0;
        com.android.server.location.gnss.GnssLocationProvider$GnssSystemInfoProvider $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        $r1 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider$GnssSystemInfoProvider mGnssSystemInfoProvider>;

        $r2 = interfaceinvoke $r1.<com.android.server.location.gnss.GnssLocationProvider$GnssSystemInfoProvider: java.lang.String getGnssHardwareModelName()>();

        return $r2;
    }

    public com.android.server.location.gnss.GnssLocationProvider getGnssLocationProvider()
    {
        com.android.server.location.gnss.GnssManagerService r0;
        com.android.server.location.gnss.GnssLocationProvider $r1;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        $r1 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider mGnssLocationProvider>;

        return $r1;
    }

    public int getGnssYearOfHardware()
    {
        com.android.server.location.gnss.GnssManagerService r0;
        com.android.server.location.gnss.GnssLocationProvider$GnssSystemInfoProvider $r1;
        int $i0;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        $r1 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssLocationProvider$GnssSystemInfoProvider mGnssSystemInfoProvider>;

        $i0 = interfaceinvoke $r1.<com.android.server.location.gnss.GnssLocationProvider$GnssSystemInfoProvider: int getGnssYearOfHardware()>();

        return $i0;
    }

    public android.location.IGpsGeofenceHardware getGpsGeofenceProxy()
    {
        com.android.server.location.gnss.GnssManagerService r0;
        android.location.IGpsGeofenceHardware $r1;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        $r1 = r0.<com.android.server.location.gnss.GnssManagerService: android.location.IGpsGeofenceHardware mGpsGeofenceProxy>;

        return $r1;
    }

    public void injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections, java.lang.String)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        android.location.GnssMeasurementCorrections r1;
        java.lang.String r2;
        android.content.Context $r3, $r4;
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider $r5;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r1 := @parameter0: android.location.GnssMeasurementCorrections;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", null);

        $r4 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_FINE_LOCATION", null);

        $r5 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider mGnssMeasurementCorrectionsProvider>;

        virtualinvoke $r5.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: void injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections)>(r1);

        return;
    }

    public void lambda$addGnssBatchingCallback$0$GnssManagerService(android.location.IBatchedLocationCallback)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        android.location.IBatchedLocationCallback r1;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r1 := @parameter0: android.location.IBatchedLocationCallback;

        virtualinvoke r0.<com.android.server.location.gnss.GnssManagerService: boolean stopGnssBatch()>();

        virtualinvoke r0.<com.android.server.location.gnss.GnssManagerService: void removeGnssBatchingCallback()>();

        return;
    }

    public void onReportLocation(java.util.List)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        java.lang.Object r1;
        android.location.IBatchedLocationCallback r2;
        com.android.server.location.LocationManagerServiceUtils$LinkedListener r3;
        int i0;
        com.android.server.location.CallerIdentity $r4;
        android.location.LocationManagerInternal $r5;
        boolean $z0;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;
        java.util.List r8;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r8 := @parameter0: java.util.List;

        r1 = r0.<com.android.server.location.gnss.GnssManagerService: java.lang.Object mGnssBatchingLock>;

        entermonitor r1;

     label01:
        r2 = r0.<com.android.server.location.gnss.GnssManagerService: android.location.IBatchedLocationCallback mGnssBatchingCallback>;

        r3 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.LocationManagerServiceUtils$LinkedListener mGnssBatchingDeathCallback>;

        exitmonitor r1;

     label02:
        if r2 == null goto label08;

        if r3 != null goto label03;

        goto label08;

     label03:
        $r4 = virtualinvoke r3.<com.android.server.location.LocationManagerServiceUtils$LinkedListener: com.android.server.location.CallerIdentity getCallerIdentity()>();

        i0 = $r4.<com.android.server.location.CallerIdentity: int userId>;

        $r5 = r0.<com.android.server.location.gnss.GnssManagerService: android.location.LocationManagerInternal mLocationManagerInternal>;

        $z0 = virtualinvoke $r5.<android.location.LocationManagerInternal: boolean isProviderEnabledForUser(java.lang.String,int)>("gps", i0);

        if $z0 != 0 goto label04;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GnssManagerService", "reportLocationBatch() called without user permission");

        return;

     label04:
        interfaceinvoke r2.<android.location.IBatchedLocationCallback: void onLocationBatch(java.util.List)>(r8);

     label05:
        goto label07;

     label06:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GnssManagerService", "reportLocationBatch() failed", $r7);

     label07:
        return;

     label08:
        return;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void onSystemReady()
    {
        com.android.server.location.gnss.GnssManagerService r0;
        com.android.server.location.AppForegroundHelper r1, $r4;
        com.android.server.location.AppOpsHelper $r2;
        com.android.server.location.SettingsHelper $r3;
        java.lang.Object $r5;
        android.location.LocationManagerInternal $r6, r8;
        java.lang.Throwable $r7;
        com.android.server.location.gnss._$$Lambda$GnssManagerService$de6v4jWKxQDC9J4FdGGrfKg2phA r9;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        entermonitor r0;

     label1:
        r8 = r0.<com.android.server.location.gnss.GnssManagerService: android.location.LocationManagerInternal mLocationManagerInternal>;

     label2:
        if r8 == null goto label3;

        exitmonitor r0;

        return;

     label3:
        $r2 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        virtualinvoke $r2.<com.android.server.location.AppOpsHelper: void onSystemReady()>();

        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.SettingsHelper mSettingsHelper>;

        virtualinvoke $r3.<com.android.server.location.SettingsHelper: void onSystemReady()>();

        $r4 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper>;

        virtualinvoke $r4.<com.android.server.location.AppForegroundHelper: void onSystemReady()>();

        $r5 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/location/LocationManagerInternal;");

        $r6 = (android.location.LocationManagerInternal) $r5;

        r0.<com.android.server.location.gnss.GnssManagerService: android.location.LocationManagerInternal mLocationManagerInternal> = $r6;

        r1 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.AppForegroundHelper mAppForegroundHelper>;

        r9 = new com.android.server.location.gnss._$$Lambda$GnssManagerService$de6v4jWKxQDC9J4FdGGrfKg2phA;

        specialinvoke r9.<com.android.server.location.gnss._$$Lambda$GnssManagerService$de6v4jWKxQDC9J4FdGGrfKg2phA: void <init>(com.android.server.location.gnss.GnssManagerService)>(r0);

        virtualinvoke r1.<com.android.server.location.AppForegroundHelper: void addListener(com.android.server.location.AppForegroundHelper$AppForegroundListener)>(r9);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean registerGnssStatusCallback(android.location.IGnssStatusListener, java.lang.String, java.lang.String)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        java.lang.String r1, r2;
        android.util.ArrayMap r3, r5;
        com.android.server.location.gnss.GnssStatusListenerHelper r4;
        com.android.server.location.gnss._$$Lambda$WsssLeTVg_jaQ16K_SvqbRc0TV8 r6;
        boolean z0;
        java.lang.Throwable $r7;
        android.location.IGnssStatusListener r8;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r8 := @parameter0: android.location.IGnssStatusListener;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssStatusListeners>;

        entermonitor r3;

     label1:
        r4 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusProvider>;

        r5 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssStatusListeners>;

        r6 = new com.android.server.location.gnss._$$Lambda$WsssLeTVg_jaQ16K_SvqbRc0TV8;

        specialinvoke r6.<com.android.server.location.gnss._$$Lambda$WsssLeTVg_jaQ16K_SvqbRc0TV8: void <init>(com.android.server.location.gnss.GnssManagerService)>(r0);

        z0 = specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: boolean addGnssDataListenerLocked(java.lang.Object,android.os.IInterface,java.lang.String,java.lang.String,com.android.server.location.RemoteListenerHelper,android.util.ArrayMap,java.util.function.Consumer)>(null, r8, r1, r2, r4, r5, r6);

        exitmonitor r3;

     label2:
        return z0;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeGnssAntennaInfoListener(android.location.IGnssAntennaInfoListener)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        android.util.ArrayMap r1, $r2;
        com.android.server.location.gnss.GnssAntennaInfoProvider $r3;
        java.lang.Throwable $r4;
        android.location.IGnssAntennaInfoListener r5;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r5 := @parameter0: android.location.IGnssAntennaInfoListener;

        r1 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssAntennaInfoListeners>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssAntennaInfoProvider mGnssAntennaInfoProvider>;

        $r2 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssAntennaInfoListeners>;

        specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: void removeGnssDataListenerLocked(android.os.IInterface,com.android.server.location.RemoteListenerHelper,android.util.ArrayMap)>(r5, $r3, $r2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeGnssBatchingCallback()
    {
        com.android.server.location.gnss.GnssManagerService r0;
        java.lang.Object r1;
        android.content.Context $r3;
        android.location.IBatchedLocationCallback $r4;
        com.android.server.location.LocationManagerServiceUtils$LinkedListener $r5;
        android.os.IBinder $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", null);

        r1 = r0.<com.android.server.location.gnss.GnssManagerService: java.lang.Object mGnssBatchingLock>;

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.LocationManagerServiceUtils$LinkedListener mGnssBatchingDeathCallback>;

        $r4 = r0.<com.android.server.location.gnss.GnssManagerService: android.location.IBatchedLocationCallback mGnssBatchingCallback>;

        $r6 = interfaceinvoke $r4.<android.location.IBatchedLocationCallback: android.os.IBinder asBinder()>();

        virtualinvoke $r5.<com.android.server.location.LocationManagerServiceUtils$LinkedListener: void unlinkFromListenerDeathNotificationLocked(android.os.IBinder)>($r6);

        r0.<com.android.server.location.gnss.GnssManagerService: android.location.IBatchedLocationCallback mGnssBatchingCallback> = null;

        r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.LocationManagerServiceUtils$LinkedListener mGnssBatchingDeathCallback> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeGnssMeasurementsListener(android.location.IGnssMeasurementsListener)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        android.util.ArrayMap r1, $r2;
        com.android.server.location.gnss.GnssMeasurementsProvider $r3;
        java.lang.Throwable $r4;
        android.location.IGnssMeasurementsListener r5;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r5 := @parameter0: android.location.IGnssMeasurementsListener;

        r1 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssMeasurementsListeners>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssMeasurementsProvider mGnssMeasurementsProvider>;

        $r2 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssMeasurementsListeners>;

        specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: void removeGnssDataListenerLocked(android.os.IInterface,com.android.server.location.RemoteListenerHelper,android.util.ArrayMap)>(r5, $r3, $r2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        android.util.ArrayMap r1, $r2;
        com.android.server.location.gnss.GnssNavigationMessageProvider $r3;
        java.lang.Throwable $r4;
        android.location.IGnssNavigationMessageListener r5;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r5 := @parameter0: android.location.IGnssNavigationMessageListener;

        r1 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssNavigationMessageListeners>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssNavigationMessageProvider mGnssNavigationMessageProvider>;

        $r2 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssNavigationMessageListeners>;

        specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: void removeGnssDataListenerLocked(android.os.IInterface,com.android.server.location.RemoteListenerHelper,android.util.ArrayMap)>(r5, $r3, $r2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void sendNiResponse(int, int)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        int i0, i1;
        android.location.INetInitiatedListener $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<com.android.server.location.gnss.GnssManagerService: android.location.INetInitiatedListener mNetInitiatedListener>;

        interfaceinvoke $r2.<android.location.INetInitiatedListener: boolean sendNiResponse(int,int)>(i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssManagerService", "RemoteException in LocationManagerService.sendNiResponse");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean startGnssBatch(long, boolean, java.lang.String, java.lang.String)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        long l0;
        android.content.Context $r1, $r2, $r3;
        com.android.server.location.AppOpsHelper $r4;
        boolean $z0, $z1, z3, z4;
        com.android.server.location.gnss.GnssBatchingProvider $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;
        com.android.server.location.CallerIdentity r9;
        java.lang.Object r10;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        l0 := @parameter0: long;

        z3 := @parameter1: boolean;

        r7 := @parameter2: java.lang.String;

        r8 := @parameter3: java.lang.String;

        $r1 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", null);

        $r2 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_FINE_LOCATION", null);

        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        r9 = staticinvoke <com.android.server.location.CallerIdentity: com.android.server.location.CallerIdentity fromBinder(android.content.Context,java.lang.String,java.lang.String)>($r3, r7, r8);

        $r4 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.AppOpsHelper mAppOpsHelper>;

        $z0 = virtualinvoke $r4.<com.android.server.location.AppOpsHelper: boolean checkLocationAccess(com.android.server.location.CallerIdentity)>(r9);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r10 = r0.<com.android.server.location.gnss.GnssManagerService: java.lang.Object mGnssBatchingLock>;

        entermonitor r10;

     label2:
        $z1 = r0.<com.android.server.location.gnss.GnssManagerService: boolean mGnssBatchingInProgress>;

        if $z1 == 0 goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssManagerService", "startGnssBatch unexpectedly called w/o stopping prior batch");

        virtualinvoke r0.<com.android.server.location.gnss.GnssManagerService: boolean stopGnssBatch()>();

     label3:
        r0.<com.android.server.location.gnss.GnssManagerService: boolean mGnssBatchingInProgress> = 1;

        $r5 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssBatchingProvider mGnssBatchingProvider>;

        z4 = virtualinvoke $r5.<com.android.server.location.gnss.GnssBatchingProvider: boolean start(long,boolean)>(l0, z3);

        exitmonitor r10;

     label4:
        return z4;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r10;

     label7:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean stopGnssBatch()
    {
        com.android.server.location.gnss.GnssManagerService r0;
        java.lang.Object r1;
        boolean z0;
        android.content.Context $r3;
        com.android.server.location.gnss.GnssBatchingProvider $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", null);

        r1 = r0.<com.android.server.location.gnss.GnssManagerService: java.lang.Object mGnssBatchingLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.location.gnss.GnssManagerService: boolean mGnssBatchingInProgress> = 0;

        $r4 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssBatchingProvider mGnssBatchingProvider>;

        z0 = virtualinvoke $r4.<com.android.server.location.gnss.GnssBatchingProvider: boolean stop()>();

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterGnssStatusCallback(android.location.IGnssStatusListener)
    {
        com.android.server.location.gnss.GnssManagerService r0;
        android.util.ArrayMap r1, $r2;
        com.android.server.location.gnss.GnssStatusListenerHelper $r3;
        java.lang.Throwable $r4;
        android.location.IGnssStatusListener r5;

        r0 := @this: com.android.server.location.gnss.GnssManagerService;

        r5 := @parameter0: android.location.IGnssStatusListener;

        r1 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssStatusListeners>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.location.gnss.GnssManagerService: com.android.server.location.gnss.GnssStatusListenerHelper mGnssStatusProvider>;

        $r2 = r0.<com.android.server.location.gnss.GnssManagerService: android.util.ArrayMap mGnssStatusListeners>;

        specialinvoke r0.<com.android.server.location.gnss.GnssManagerService: void removeGnssDataListenerLocked(android.os.IInterface,com.android.server.location.RemoteListenerHelper,android.util.ArrayMap)>(r5, $r3, $r2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.location.gnss.GnssManagerService: java.lang.String TAG> = "GnssManagerService";

        return;
    }
}
