public class com.android.server.location.gnss.GnssMeasurementCorrectionsProvider extends java.lang.Object
{
    static final int CAPABILITY_EXCESS_PATH_LENGTH;
    static final int CAPABILITY_LOS_SATS;
    static final int CAPABILITY_REFLECTING_PLANE;
    private static final int INVALID_CAPABILITIES;
    private static final java.lang.String TAG;
    private volatile int mCapabilities;
    private final android.os.Handler mHandler;
    private final com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative mNative;

    void <init>(android.os.Handler)
    {
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider r0;
        android.os.Handler r1;
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative $r2;

        r0 := @this: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider;

        r1 := @parameter0: android.os.Handler;

        $r2 = new com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative;

        specialinvoke $r2.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative: void <init>()>();

        specialinvoke r0.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: void <init>(android.os.Handler,com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative)>(r1, $r2);

        return;
    }

    void <init>(android.os.Handler, com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative)
    {
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider r0;
        android.os.Handler r1;
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative r2;

        r0 := @this: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: int mCapabilities> = -2147483648;

        r0.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: android.os.Handler mHandler> = r1;

        r0.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative mNative> = r2;

        return;
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: boolean native_is_measurement_corrections_supported()>();

        return $z0;
    }

    static boolean access$100(android.location.GnssMeasurementCorrections)
    {
        android.location.GnssMeasurementCorrections r0;
        boolean $z0;

        r0 := @parameter0: android.location.GnssMeasurementCorrections;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: boolean native_inject_gnss_measurement_corrections(android.location.GnssMeasurementCorrections)>(r0);

        return $z0;
    }

    private static boolean hasCapability(int, int)
    {
        int i0, i1, $i2;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 & i1;

        if $i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isCapabilitiesReceived()
    {
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider;

        $i0 = r0.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: int mCapabilities>;

        if $i0 == -2147483648 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static native boolean native_inject_gnss_measurement_corrections(android.location.GnssMeasurementCorrections);

    private static native boolean native_is_measurement_corrections_supported();

    int getCapabilities()
    {
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider r0;
        int $i0;

        r0 := @this: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider;

        $i0 = r0.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: int mCapabilities>;

        return $i0;
    }

    public void injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections)
    {
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider r0;
        android.location.GnssMeasurementCorrections r1;
        boolean $z0;
        com.android.server.location.gnss._$$Lambda$GnssMeasurementCorrectionsProvider$d4q_3xaRMcxrHCXpK2KTUwTmahY $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider;

        r1 := @parameter0: android.location.GnssMeasurementCorrections;

        $z0 = specialinvoke r0.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: boolean isCapabilitiesReceived()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GnssMeasurementCorrectionsProvider", "Failed to inject GNSS measurement corrections. Capabilities not received yet.");

        return;

     label1:
        $r3 = r0.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: android.os.Handler mHandler>;

        $r2 = new com.android.server.location.gnss._$$Lambda$GnssMeasurementCorrectionsProvider$d4q_3xaRMcxrHCXpK2KTUwTmahY;

        specialinvoke $r2.<com.android.server.location.gnss._$$Lambda$GnssMeasurementCorrectionsProvider$d4q_3xaRMcxrHCXpK2KTUwTmahY: void <init>(com.android.server.location.gnss.GnssMeasurementCorrectionsProvider,android.location.GnssMeasurementCorrections)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public boolean isAvailableInPlatform()
    {
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider r0;
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider;

        $r1 = r0.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative mNative>;

        $z0 = virtualinvoke $r1.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative: boolean isMeasurementCorrectionsSupported()>();

        return $z0;
    }

    public void lambda$injectGnssMeasurementCorrections$0$GnssMeasurementCorrectionsProvider(android.location.GnssMeasurementCorrections)
    {
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider r0;
        android.location.GnssMeasurementCorrections r1;
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative $r2;
        boolean $z0;

        r0 := @this: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider;

        r1 := @parameter0: android.location.GnssMeasurementCorrections;

        $r2 = r0.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative mNative>;

        $z0 = virtualinvoke $r2.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider$GnssMeasurementCorrectionsProviderNative: boolean injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections)>(r1);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssMeasurementCorrectionsProvider", "Failure in injecting GNSS corrections.");

     label1:
        return;
    }

    boolean onCapabilitiesUpdated(int)
    {
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider r0;
        int i0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7;

        r0 := @this: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: boolean hasCapability(int,int)>(i0, 1);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: boolean hasCapability(int,int)>(i0, 2);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set capabilities. Received capabilities 0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not contain the mandatory LOS_SATS or the EXCESS_PATH_LENGTH capability.");

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssMeasurementCorrectionsProvider", $r7);

        return 0;

     label2:
        r0.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: int mCapabilities> = i0;

        return 1;
    }

    java.lang.String toStringCapabilities()
    {
        com.android.server.location.gnss.GnssMeasurementCorrectionsProvider r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.location.gnss.GnssMeasurementCorrectionsProvider;

        i0 = virtualinvoke r0.<com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: int getCapabilities()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCapabilities=0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ( ");

        $z0 = staticinvoke <com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: boolean hasCapability(int,int)>(i0, 1);

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LOS_SATS ");

     label1:
        $z1 = staticinvoke <com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: boolean hasCapability(int,int)>(i0, 2);

        if $z1 == 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EXCESS_PATH_LENGTH ");

     label2:
        $z2 = staticinvoke <com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: boolean hasCapability(int,int)>(i0, 4);

        if $z2 == 0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("REFLECTING_PLANE ");

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static void <clinit>()
    {
        <com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: java.lang.String TAG> = "GnssMeasurementCorrectionsProvider";

        <com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: int INVALID_CAPABILITIES> = -2147483648;

        <com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: int CAPABILITY_REFLECTING_PLANE> = 4;

        <com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: int CAPABILITY_LOS_SATS> = 1;

        <com.android.server.location.gnss.GnssMeasurementCorrectionsProvider: int CAPABILITY_EXCESS_PATH_LENGTH> = 2;

        return;
    }
}
