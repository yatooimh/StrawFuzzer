class com.android.server.location.gnss.GnssSatelliteBlacklistHelper extends java.lang.Object
{
    private static final java.lang.String BLACKLIST_DELIMITER;
    private static final java.lang.String TAG;
    private final com.android.server.location.gnss.GnssSatelliteBlacklistHelper$GnssSatelliteBlacklistCallback mCallback;
    private final android.content.Context mContext;

    void <init>(android.content.Context, android.os.Looper, com.android.server.location.gnss.GnssSatelliteBlacklistHelper$GnssSatelliteBlacklistCallback)
    {
        com.android.server.location.gnss.GnssSatelliteBlacklistHelper r0;
        android.os.Looper r1;
        com.android.server.location.gnss.GnssSatelliteBlacklistHelper$GnssSatelliteBlacklistCallback r2;
        com.android.server.location.gnss.GnssSatelliteBlacklistHelper$1 $r3;
        android.os.Handler $r4;
        android.content.Context $r5, r8;
        android.content.ContentResolver $r6;
        android.net.Uri $r7;

        r0 := @this: com.android.server.location.gnss.GnssSatelliteBlacklistHelper;

        r8 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Looper;

        r2 := @parameter2: com.android.server.location.gnss.GnssSatelliteBlacklistHelper$GnssSatelliteBlacklistCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.gnss.GnssSatelliteBlacklistHelper: android.content.Context mContext> = r8;

        r0.<com.android.server.location.gnss.GnssSatelliteBlacklistHelper: com.android.server.location.gnss.GnssSatelliteBlacklistHelper$GnssSatelliteBlacklistCallback mCallback> = r2;

        $r3 = new com.android.server.location.gnss.GnssSatelliteBlacklistHelper$1;

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        specialinvoke $r3.<com.android.server.location.gnss.GnssSatelliteBlacklistHelper$1: void <init>(com.android.server.location.gnss.GnssSatelliteBlacklistHelper,android.os.Handler)>(r0, $r4);

        $r5 = r0.<com.android.server.location.gnss.GnssSatelliteBlacklistHelper: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("gnss_satellite_blacklist");

        virtualinvoke $r6.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r7, 1, $r3, -1);

        return;
    }

    static java.util.List parseSatelliteBlacklist(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.String[] r0;
        int i0, i1, $i2, i3;
        java.lang.String r1, $r3, $r4, r7;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.NumberFormatException $r5;
        java.lang.Integer $r6;

        r7 := @parameter0: java.lang.String;

        r0 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r2 = new java.util.ArrayList;

        $i2 = lengthof r0;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i2);

        i0 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        $r3 = r0[i3];

        r1 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        if i1 < 0 goto label2;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label3;

     label2:
        $r5 = new java.lang.NumberFormatException;

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>(java.lang.String)>("Negative value is invalid.");

        throw $r5;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return $r2;
    }

    void updateSatelliteBlacklist()
    {
        com.android.server.location.gnss.GnssSatelliteBlacklistHelper r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i12;
        int[] r1, r15;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.lang.Object[] $r4;
        java.lang.String $r5, r12, r13;
        com.android.server.location.gnss.GnssSatelliteBlacklistHelper$GnssSatelliteBlacklistCallback $r6;
        java.lang.Object $r7, $r9;
        java.lang.Integer $r8, $r10;
        java.lang.Throwable $r11;
        java.util.List r14;

        r0 := @this: com.android.server.location.gnss.GnssSatelliteBlacklistHelper;

        $r2 = r0.<com.android.server.location.gnss.GnssSatelliteBlacklistHelper: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r12 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "gnss_satellite_blacklist");

        r13 = r12;

        if r12 != null goto label1;

        r13 = "";

     label1:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r13;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Update GNSS satellite blacklist: %s", $r4);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GnssBlacklistHelper", $r5);

     label2:
        r14 = staticinvoke <com.android.server.location.gnss.GnssSatelliteBlacklistHelper: java.util.List parseSatelliteBlacklist(java.lang.String)>(r13);

     label3:
        $i2 = interfaceinvoke r14.<java.util.List: int size()>();

        $i3 = $i2 % 2;

        if $i3 == 0 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GnssBlacklistHelper", "blacklist string has odd number of values.Aborting updateSatelliteBlacklist");

        return;

     label4:
        $i4 = interfaceinvoke r14.<java.util.List: int size()>();

        i0 = $i4 / 2;

        r15 = newarray (int)[i0];

        r1 = newarray (int)[i0];

        i12 = 0;

     label5:
        if i12 >= i0 goto label6;

        $i5 = i12 * 2;

        $r7 = interfaceinvoke r14.<java.util.List: java.lang.Object get(int)>($i5);

        $r8 = (java.lang.Integer) $r7;

        $i6 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        r15[i12] = $i6;

        $i7 = i12 * 2;

        $i8 = $i7 + 1;

        $r9 = interfaceinvoke r14.<java.util.List: java.lang.Object get(int)>($i8);

        $r10 = (java.lang.Integer) $r9;

        $i9 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        r1[i12] = $i9;

        i12 = i12 + 1;

        goto label5;

     label6:
        $r6 = r0.<com.android.server.location.gnss.GnssSatelliteBlacklistHelper: com.android.server.location.gnss.GnssSatelliteBlacklistHelper$GnssSatelliteBlacklistCallback mCallback>;

        interfaceinvoke $r6.<com.android.server.location.gnss.GnssSatelliteBlacklistHelper$GnssSatelliteBlacklistCallback: void onUpdateSatelliteBlacklist(int[],int[])>(r15, r1);

        return;

     label7:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GnssBlacklistHelper", "Exception thrown when parsing blacklist string.", $r11);

        return;

        catch java.lang.NumberFormatException from label2 to label3 with label7;
    }

    public static void <clinit>()
    {
        <com.android.server.location.gnss.GnssSatelliteBlacklistHelper: java.lang.String TAG> = "GnssBlacklistHelper";

        <com.android.server.location.gnss.GnssSatelliteBlacklistHelper: java.lang.String BLACKLIST_DELIMITER> = ",";

        return;
    }
}
