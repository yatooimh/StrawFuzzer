class com.android.server.location.gnss.NtpTimeHelper extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final long MAX_RETRY_INTERVAL;
    static final long NTP_INTERVAL;
    static final long RETRY_INTERVAL;
    private static final int STATE_IDLE;
    private static final int STATE_PENDING_NETWORK;
    private static final int STATE_RETRIEVING_AND_INJECTING;
    private static final java.lang.String TAG;
    private static final java.lang.String WAKELOCK_KEY;
    private static final long WAKELOCK_TIMEOUT_MILLIS;
    private final com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback mCallback;
    private final android.net.ConnectivityManager mConnMgr;
    private final android.os.Handler mHandler;
    private int mInjectNtpTimeState;
    private final com.android.server.location.gnss.ExponentialBackOff mNtpBackOff;
    private final android.util.NtpTrustedTime mNtpTime;
    private boolean mOnDemandTimeInjection;
    private final android.os.PowerManager$WakeLock mWakeLock;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.location.gnss.NtpTimeHelper: long WAKELOCK_TIMEOUT_MILLIS> = 60000L;

        <com.android.server.location.gnss.NtpTimeHelper: java.lang.String WAKELOCK_KEY> = "NtpTimeHelper";

        <com.android.server.location.gnss.NtpTimeHelper: java.lang.String TAG> = "NtpTimeHelper";

        <com.android.server.location.gnss.NtpTimeHelper: int STATE_RETRIEVING_AND_INJECTING> = 1;

        <com.android.server.location.gnss.NtpTimeHelper: int STATE_PENDING_NETWORK> = 0;

        <com.android.server.location.gnss.NtpTimeHelper: int STATE_IDLE> = 2;

        <com.android.server.location.gnss.NtpTimeHelper: long RETRY_INTERVAL> = 300000L;

        <com.android.server.location.gnss.NtpTimeHelper: long NTP_INTERVAL> = 86400000L;

        <com.android.server.location.gnss.NtpTimeHelper: long MAX_RETRY_INTERVAL> = 14400000L;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NtpTimeHelper", 3);

        <com.android.server.location.gnss.NtpTimeHelper: boolean DEBUG> = $z0;

        return;
    }

    void <init>(android.content.Context, android.os.Looper, com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback)
    {
        com.android.server.location.gnss.NtpTimeHelper r0;
        android.content.Context r1;
        android.os.Looper r2;
        com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback r3;
        android.util.NtpTrustedTime $r4;

        r0 := @this: com.android.server.location.gnss.NtpTimeHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback;

        $r4 = staticinvoke <android.util.NtpTrustedTime: android.util.NtpTrustedTime getInstance(android.content.Context)>(r1);

        specialinvoke r0.<com.android.server.location.gnss.NtpTimeHelper: void <init>(android.content.Context,android.os.Looper,com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback,android.util.NtpTrustedTime)>(r1, r2, r3, $r4);

        return;
    }

    void <init>(android.content.Context, android.os.Looper, com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback, android.util.NtpTrustedTime)
    {
        com.android.server.location.gnss.NtpTimeHelper r0;
        android.content.Context r1;
        android.os.Looper r2;
        com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback r3;
        android.util.NtpTrustedTime r4;
        com.android.server.location.gnss.ExponentialBackOff $r5;
        java.lang.Object $r6, $r9;
        android.net.ConnectivityManager $r7;
        android.os.Handler $r8;
        android.os.PowerManager $r10;
        android.os.PowerManager$WakeLock $r11;

        r0 := @this: com.android.server.location.gnss.NtpTimeHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback;

        r4 := @parameter3: android.util.NtpTrustedTime;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new com.android.server.location.gnss.ExponentialBackOff;

        specialinvoke $r5.<com.android.server.location.gnss.ExponentialBackOff: void <init>(long,long)>(300000L, 14400000L);

        r0.<com.android.server.location.gnss.NtpTimeHelper: com.android.server.location.gnss.ExponentialBackOff mNtpBackOff> = $r5;

        r0.<com.android.server.location.gnss.NtpTimeHelper: int mInjectNtpTimeState> = 0;

        $r6 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r7 = (android.net.ConnectivityManager) $r6;

        r0.<com.android.server.location.gnss.NtpTimeHelper: android.net.ConnectivityManager mConnMgr> = $r7;

        r0.<com.android.server.location.gnss.NtpTimeHelper: com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback mCallback> = r3;

        r0.<com.android.server.location.gnss.NtpTimeHelper: android.util.NtpTrustedTime mNtpTime> = r4;

        $r8 = new android.os.Handler;

        specialinvoke $r8.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        r0.<com.android.server.location.gnss.NtpTimeHelper: android.os.Handler mHandler> = $r8;

        $r9 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r10 = (android.os.PowerManager) $r9;

        $r11 = virtualinvoke $r10.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "NtpTimeHelper");

        r0.<com.android.server.location.gnss.NtpTimeHelper: android.os.PowerManager$WakeLock mWakeLock> = $r11;

        return;
    }

    private void blockingGetNtpTimeAndInject()
    {
        com.android.server.location.gnss.NtpTimeHelper r0;
        long l0, l1, l2, $l5, $l7, $l9, l11, l12;
        java.lang.StringBuilder r1;
        android.util.NtpTrustedTime $r2, $r3, $r22;
        com.android.server.location.gnss.ExponentialBackOff $r4, $r10;
        boolean $z0, $z2, $z3, z5, $z6;
        java.lang.Object[] $r5;
        java.lang.Boolean $r6, $r7;
        java.lang.Long $r8;
        java.lang.String $r9, $r19;
        byte $b6, $b10;
        java.lang.Throwable $r20;
        android.util.NtpTrustedTime$TimeResult r21, r23;
        java.util.Date r24;
        android.os.Handler r25, r27;
        com.android.server.location.gnss._$$Lambda$NtpTimeHelper$4YVWiahGRCeX2AoEdhSeek4fqhQ r26;
        com.android.server.location.gnss._$$Lambda$UoXKjYaYgPPHqNIgiLAobtz5XAU r28;
        android.os.PowerManager$WakeLock $r29;

        r0 := @this: com.android.server.location.gnss.NtpTimeHelper;

        z5 = 1;

        $r2 = r0.<com.android.server.location.gnss.NtpTimeHelper: android.util.NtpTrustedTime mNtpTime>;

        r21 = virtualinvoke $r2.<android.util.NtpTrustedTime: android.util.NtpTrustedTime$TimeResult getCachedTimeResult()>();

        if r21 == null goto label01;

        $l9 = virtualinvoke r21.<android.util.NtpTrustedTime$TimeResult: long getAgeMillis()>();

        $b10 = $l9 cmp 86400000L;

        if $b10 < 0 goto label02;

     label01:
        $r3 = r0.<com.android.server.location.gnss.NtpTimeHelper: android.util.NtpTrustedTime mNtpTime>;

        z5 = virtualinvoke $r3.<android.util.NtpTrustedTime: boolean forceRefresh()>();

     label02:
        entermonitor r0;

     label03:
        r0.<com.android.server.location.gnss.NtpTimeHelper: int mInjectNtpTimeState> = 2;

        $r22 = r0.<com.android.server.location.gnss.NtpTimeHelper: android.util.NtpTrustedTime mNtpTime>;

        r23 = virtualinvoke $r22.<android.util.NtpTrustedTime: android.util.NtpTrustedTime$TimeResult getCachedTimeResult()>();

     label04:
        if r23 == null goto label10;

     label05:
        $l5 = virtualinvoke r23.<android.util.NtpTrustedTime$TimeResult: long getAgeMillis()>();

        $b6 = $l5 cmp 86400000L;

        if $b6 >= 0 goto label10;

        l0 = virtualinvoke r23.<android.util.NtpTrustedTime$TimeResult: long getTimeMillis()>();

        l1 = virtualinvoke r23.<android.util.NtpTrustedTime$TimeResult: long getElapsedRealtimeMillis()>();

        l2 = virtualinvoke r23.<android.util.NtpTrustedTime$TimeResult: long getCertaintyMillis()>();

        $z3 = <com.android.server.location.gnss.NtpTimeHelper: boolean DEBUG>;

        if $z3 == 0 goto label06;

        l11 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NTP server returned: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        r24 = new java.util.Date;

        specialinvoke r24.<java.util.Date: void <init>(long)>(l0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ntpResult: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" system time offset: ");

        $l7 = l0 - l11;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r19 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NtpTimeHelper", $r19);

     label06:
        r25 = r0.<com.android.server.location.gnss.NtpTimeHelper: android.os.Handler mHandler>;

        r26 = new com.android.server.location.gnss._$$Lambda$NtpTimeHelper$4YVWiahGRCeX2AoEdhSeek4fqhQ;

        specialinvoke r26.<com.android.server.location.gnss._$$Lambda$NtpTimeHelper$4YVWiahGRCeX2AoEdhSeek4fqhQ: void <init>(com.android.server.location.gnss.NtpTimeHelper,long,long,long)>(r0, l0, l1, l2);

        virtualinvoke r25.<android.os.Handler: boolean post(java.lang.Runnable)>(r26);

     label07:
        l12 = 86400000L;

     label08:
        $r10 = r0.<com.android.server.location.gnss.NtpTimeHelper: com.android.server.location.gnss.ExponentialBackOff mNtpBackOff>;

        virtualinvoke $r10.<com.android.server.location.gnss.ExponentialBackOff: void reset()>();

     label09:
        goto label11;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NtpTimeHelper", "requestTime failed");

        $r4 = r0.<com.android.server.location.gnss.NtpTimeHelper: com.android.server.location.gnss.ExponentialBackOff mNtpBackOff>;

        l12 = virtualinvoke $r4.<com.android.server.location.gnss.ExponentialBackOff: long nextBackoffMillis()>();

     label11:
        $z6 = <com.android.server.location.gnss.NtpTimeHelper: boolean DEBUG>;

        if $z6 == 0 goto label12;

        $r5 = newarray (java.lang.Object)[3];

        $z2 = r0.<com.android.server.location.gnss.NtpTimeHelper: boolean mOnDemandTimeInjection>;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z5);

        $r5[1] = $r7;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l12);

        $r5[2] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("onDemandTimeInjection=%s, refreshSuccess=%s, delay=%s", $r5);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NtpTimeHelper", $r9);

     label12:
        $z0 = r0.<com.android.server.location.gnss.NtpTimeHelper: boolean mOnDemandTimeInjection>;

        if $z0 != 0 goto label14;

     label13:
        if z5 != 0 goto label15;

     label14:
        r27 = r0.<com.android.server.location.gnss.NtpTimeHelper: android.os.Handler mHandler>;

        r28 = new com.android.server.location.gnss._$$Lambda$UoXKjYaYgPPHqNIgiLAobtz5XAU;

        specialinvoke r28.<com.android.server.location.gnss._$$Lambda$UoXKjYaYgPPHqNIgiLAobtz5XAU: void <init>(com.android.server.location.gnss.NtpTimeHelper)>(r0);

        virtualinvoke r27.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r28, l12);

     label15:
        exitmonitor r0;

     label16:
        $r29 = r0.<com.android.server.location.gnss.NtpTimeHelper: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r29.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label17:
        $r20 := @caughtexception;

     label18:
        exitmonitor r0;

     label19:
        throw $r20;

        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    private boolean isNetworkConnected()
    {
        com.android.server.location.gnss.NtpTimeHelper r0;
        android.net.NetworkInfo r1;
        android.net.ConnectivityManager $r2;
        boolean $z0, z1;

        r0 := @this: com.android.server.location.gnss.NtpTimeHelper;

        $r2 = r0.<com.android.server.location.gnss.NtpTimeHelper: android.net.ConnectivityManager mConnMgr>;

        r1 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static void lambda$0f3JRUuSYH-K-brPBZMOA96D-q4(com.android.server.location.gnss.NtpTimeHelper)
    {
        com.android.server.location.gnss.NtpTimeHelper r0;

        r0 := @parameter0: com.android.server.location.gnss.NtpTimeHelper;

        specialinvoke r0.<com.android.server.location.gnss.NtpTimeHelper: void blockingGetNtpTimeAndInject()>();

        return;
    }

    void enablePeriodicTimeInjection()
    {
        com.android.server.location.gnss.NtpTimeHelper r0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.location.gnss.NtpTimeHelper;

        entermonitor r0;

     label1:
        r0.<com.android.server.location.gnss.NtpTimeHelper: boolean mOnDemandTimeInjection> = 1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void lambda$blockingGetNtpTimeAndInject$0$NtpTimeHelper(long, long, long)
    {
        com.android.server.location.gnss.NtpTimeHelper r0;
        long l0, l1, l2;
        int $i3;
        com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback $r1;

        r0 := @this: com.android.server.location.gnss.NtpTimeHelper;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r1 = r0.<com.android.server.location.gnss.NtpTimeHelper: com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback mCallback>;

        $i3 = (int) l2;

        interfaceinvoke $r1.<com.android.server.location.gnss.NtpTimeHelper$InjectNtpTimeCallback: void injectTime(long,long,int)>(l0, l1, $i3);

        return;
    }

    void onNetworkAvailable()
    {
        com.android.server.location.gnss.NtpTimeHelper r0;
        int $i0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.location.gnss.NtpTimeHelper;

        entermonitor r0;

     label1:
        $i0 = r0.<com.android.server.location.gnss.NtpTimeHelper: int mInjectNtpTimeState>;

        if $i0 != 0 goto label2;

        virtualinvoke r0.<com.android.server.location.gnss.NtpTimeHelper: void retrieveAndInjectNtpTime()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void retrieveAndInjectNtpTime()
    {
        com.android.server.location.gnss.NtpTimeHelper r0;
        int i0;
        java.lang.Thread r1;
        boolean $z0;
        android.os.PowerManager$WakeLock $r2;
        java.lang.Throwable $r3;
        com.android.server.location.gnss._$$Lambda$NtpTimeHelper$0f3JRUuSYH_K_brPBZMOA96D_q4 r4;

        r0 := @this: com.android.server.location.gnss.NtpTimeHelper;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.server.location.gnss.NtpTimeHelper: int mInjectNtpTimeState>;

     label2:
        if i0 != 1 goto label3;

        exitmonitor r0;

        return;

     label3:
        $z0 = specialinvoke r0.<com.android.server.location.gnss.NtpTimeHelper: boolean isNetworkConnected()>();

        if $z0 != 0 goto label5;

        r0.<com.android.server.location.gnss.NtpTimeHelper: int mInjectNtpTimeState> = 0;

     label4:
        exitmonitor r0;

        return;

     label5:
        r0.<com.android.server.location.gnss.NtpTimeHelper: int mInjectNtpTimeState> = 1;

        $r2 = r0.<com.android.server.location.gnss.NtpTimeHelper: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void acquire(long)>(60000L);

        r1 = new java.lang.Thread;

        r4 = new com.android.server.location.gnss._$$Lambda$NtpTimeHelper$0f3JRUuSYH_K_brPBZMOA96D_q4;

        specialinvoke r4.<com.android.server.location.gnss._$$Lambda$NtpTimeHelper$0f3JRUuSYH_K_brPBZMOA96D_q4: void <init>(com.android.server.location.gnss.NtpTimeHelper)>(r0);

        specialinvoke r1.<java.lang.Thread: void <init>(java.lang.Runnable)>(r4);

        virtualinvoke r1.<java.lang.Thread: void start()>();

     label6:
        exitmonitor r0;

        return;

     label7:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
}
