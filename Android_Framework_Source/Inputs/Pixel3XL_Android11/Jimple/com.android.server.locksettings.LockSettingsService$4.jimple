class com.android.server.locksettings.LockSettingsService$4 extends android.hardware.fingerprint.FingerprintManager$RemovalCallback
{
    final com.android.server.locksettings.LockSettingsService this$0;
    final java.util.concurrent.CountDownLatch val$latch;

    void <init>(com.android.server.locksettings.LockSettingsService, java.util.concurrent.CountDownLatch)
    {
        com.android.server.locksettings.LockSettingsService$4 r0;
        com.android.server.locksettings.LockSettingsService r1;
        java.util.concurrent.CountDownLatch r2;

        r0 := @this: com.android.server.locksettings.LockSettingsService$4;

        r1 := @parameter0: com.android.server.locksettings.LockSettingsService;

        r2 := @parameter1: java.util.concurrent.CountDownLatch;

        r0.<com.android.server.locksettings.LockSettingsService$4: com.android.server.locksettings.LockSettingsService this$0> = r1;

        r0.<com.android.server.locksettings.LockSettingsService$4: java.util.concurrent.CountDownLatch val$latch> = r2;

        specialinvoke r0.<android.hardware.fingerprint.FingerprintManager$RemovalCallback: void <init>()>();

        return;
    }

    public void onRemovalError(android.hardware.fingerprint.Fingerprint, int, java.lang.CharSequence)
    {
        com.android.server.locksettings.LockSettingsService$4 r0;
        android.hardware.fingerprint.Fingerprint r1;
        int i0, $i1, $i2;
        java.lang.CharSequence r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4, $r5;
        java.lang.String $r6;
        java.util.concurrent.CountDownLatch $r7;

        r0 := @this: com.android.server.locksettings.LockSettingsService$4;

        r1 := @parameter0: android.hardware.fingerprint.Fingerprint;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.CharSequence;

        $r3 = newarray (java.lang.Object)[3];

        $i1 = virtualinvoke r1.<android.hardware.fingerprint.Fingerprint: int getBiometricId()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[0] = $r4;

        $i2 = virtualinvoke r1.<android.hardware.fingerprint.Fingerprint: int getGroupId()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3[1] = $r5;

        $r3[2] = r2;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can\'t remove fingerprint %d in group %d. Reason: %s", $r3);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("LockSettingsService", $r6);

        $r7 = r0.<com.android.server.locksettings.LockSettingsService$4: java.util.concurrent.CountDownLatch val$latch>;

        virtualinvoke $r7.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;
    }

    public void onRemovalSucceeded(android.hardware.fingerprint.Fingerprint, int)
    {
        com.android.server.locksettings.LockSettingsService$4 r0;
        android.hardware.fingerprint.Fingerprint r1;
        int i0;
        java.util.concurrent.CountDownLatch $r2;

        r0 := @this: com.android.server.locksettings.LockSettingsService$4;

        r1 := @parameter0: android.hardware.fingerprint.Fingerprint;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r2 = r0.<com.android.server.locksettings.LockSettingsService$4: java.util.concurrent.CountDownLatch val$latch>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

     label1:
        return;
    }
}
