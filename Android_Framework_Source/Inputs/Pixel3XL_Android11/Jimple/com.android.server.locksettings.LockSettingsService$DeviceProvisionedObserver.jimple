class com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver extends android.database.ContentObserver
{
    private final android.net.Uri mDeviceProvisionedUri;
    private boolean mRegistered;
    final com.android.server.locksettings.LockSettingsService this$0;

    public void <init>(com.android.server.locksettings.LockSettingsService)
    {
        com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver r0;
        com.android.server.locksettings.LockSettingsService r1;
        android.net.Uri $r2;

        r0 := @this: com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver;

        r1 := @parameter0: com.android.server.locksettings.LockSettingsService;

        r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: com.android.server.locksettings.LockSettingsService this$0> = r1;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(null);

        $r2 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("device_provisioned");

        r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: android.net.Uri mDeviceProvisionedUri> = $r2;

        return;
    }

    private void clearFrpCredentialIfOwnerNotSecure()
    {
        com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver r0;
        java.util.Iterator r1;
        android.content.pm.UserInfo r2;
        com.android.server.locksettings.LockSettingsService $r3, $r7, $r9, $r10;
        android.os.UserManager $r4;
        java.util.List $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6;
        android.content.Context $r8;
        int $i0, $i1;
        com.android.server.locksettings.LockSettingsStorage $r11;

        r0 := @this: com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver;

        $r3 = r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: com.android.server.locksettings.LockSettingsService this$0>;

        $r4 = staticinvoke <com.android.server.locksettings.LockSettingsService: android.os.UserManager access$600(com.android.server.locksettings.LockSettingsService)>($r3);

        $r5 = virtualinvoke $r4.<android.os.UserManager: java.util.List getUsers()>();

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.pm.UserInfo) $r6;

        $r7 = r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: com.android.server.locksettings.LockSettingsService this$0>;

        $r8 = staticinvoke <com.android.server.locksettings.LockSettingsService: android.content.Context access$1100(com.android.server.locksettings.LockSettingsService)>($r7);

        $z1 = staticinvoke <com.android.internal.widget.LockPatternUtils: boolean userOwnsFrpCredential(android.content.Context,android.content.pm.UserInfo)>($r8, r2);

        if $z1 == 0 goto label3;

        $r9 = r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: com.android.server.locksettings.LockSettingsService this$0>;

        $i0 = r2.<android.content.pm.UserInfo: int id>;

        $z2 = staticinvoke <com.android.server.locksettings.LockSettingsService: boolean access$700(com.android.server.locksettings.LockSettingsService,int)>($r9, $i0);

        if $z2 != 0 goto label2;

        $r10 = r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: com.android.server.locksettings.LockSettingsService this$0>;

        $r11 = $r10.<com.android.server.locksettings.LockSettingsService: com.android.server.locksettings.LockSettingsStorage mStorage>;

        $i1 = r2.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r11.<com.android.server.locksettings.LockSettingsStorage: void writePersistentDataBlock(int,int,int,byte[])>(0, $i1, 0, null);

     label2:
        return;

     label3:
        goto label1;

     label4:
        return;
    }

    private boolean isProvisioned()
    {
        com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver r0;
        android.content.ContentResolver r1;
        com.android.server.locksettings.LockSettingsService $r2;
        android.content.Context $r3;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver;

        $r2 = r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: com.android.server.locksettings.LockSettingsService this$0>;

        $r3 = staticinvoke <com.android.server.locksettings.LockSettingsService: android.content.Context access$1100(com.android.server.locksettings.LockSettingsService)>($r2);

        r1 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z0 = 0;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "device_provisioned", 0);

        if $i0 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    private void reportDeviceSetupComplete()
    {
        com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver r0;
        com.android.server.locksettings.LockSettingsService $r2;
        android.service.gatekeeper.IGateKeeperService $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver;

     label1:
        $r2 = r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: com.android.server.locksettings.LockSettingsService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.locksettings.LockSettingsService: android.service.gatekeeper.IGateKeeperService getGateKeeperService()>();

        interfaceinvoke $r3.<android.service.gatekeeper.IGateKeeperService: void reportDeviceSetupComplete()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LockSettingsService", "Failure reporting to IGateKeeperService", $r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void updateRegistration()
    {
        com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver r0;
        boolean z0, $z1, $z2;
        com.android.server.locksettings.LockSettingsService $r1, $r4;
        android.content.Context $r2, $r5;
        android.content.ContentResolver $r3, $r6;
        android.net.Uri $r7;

        r0 := @this: com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver;

        $z1 = specialinvoke r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: boolean isProvisioned()>();

        z0 = $z1 ^ 1;

        $z2 = r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: boolean mRegistered>;

        if z0 != $z2 goto label1;

        return;

     label1:
        if z0 == 0 goto label2;

        $r4 = r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: com.android.server.locksettings.LockSettingsService this$0>;

        $r5 = staticinvoke <com.android.server.locksettings.LockSettingsService: android.content.Context access$1100(com.android.server.locksettings.LockSettingsService)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: android.net.Uri mDeviceProvisionedUri>;

        virtualinvoke $r6.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r7, 0, r0);

        goto label3;

     label2:
        $r1 = r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: com.android.server.locksettings.LockSettingsService this$0>;

        $r2 = staticinvoke <com.android.server.locksettings.LockSettingsService: android.content.Context access$1100(com.android.server.locksettings.LockSettingsService)>($r1);

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r3.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>(r0);

     label3:
        r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: boolean mRegistered> = z0;

        return;
    }

    public void onChange(boolean, android.net.Uri, int)
    {
        com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver r0;
        boolean z0, $z1, $z2;
        android.net.Uri r1, $r2;
        int i0;

        r0 := @this: com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        $r2 = r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: android.net.Uri mDeviceProvisionedUri>;

        $z1 = virtualinvoke $r2.<android.net.Uri: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: void updateRegistration()>();

        $z2 = specialinvoke r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: boolean isProvisioned()>();

        if $z2 == 0 goto label1;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("LockSettingsService", "Reporting device setup complete to IGateKeeperService");

        specialinvoke r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: void reportDeviceSetupComplete()>();

        specialinvoke r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: void clearFrpCredentialIfOwnerNotSecure()>();

     label1:
        return;
    }

    public void onSystemReady()
    {
        com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver r0;
        com.android.server.locksettings.LockSettingsService $r1;
        android.content.Context $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver;

        $r1 = r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: com.android.server.locksettings.LockSettingsService this$0>;

        $r2 = staticinvoke <com.android.server.locksettings.LockSettingsService: android.content.Context access$1100(com.android.server.locksettings.LockSettingsService)>($r1);

        $z0 = staticinvoke <com.android.internal.widget.LockPatternUtils: boolean frpCredentialEnabled(android.content.Context)>($r2);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: void updateRegistration()>();

        goto label2;

     label1:
        $z1 = specialinvoke r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: boolean isProvisioned()>();

        if $z1 != 0 goto label2;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("LockSettingsService", "FRP credential disabled, reporting device setup complete to Gatekeeper immediately");

        specialinvoke r0.<com.android.server.locksettings.LockSettingsService$DeviceProvisionedObserver: void reportDeviceSetupComplete()>();

     label2:
        return;
    }
}
