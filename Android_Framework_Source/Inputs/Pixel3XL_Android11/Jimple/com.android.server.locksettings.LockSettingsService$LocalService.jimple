final class com.android.server.locksettings.LockSettingsService$LocalService extends com.android.internal.widget.LockSettingsInternal
{
    final com.android.server.locksettings.LockSettingsService this$0;

    private void <init>(com.android.server.locksettings.LockSettingsService)
    {
        com.android.server.locksettings.LockSettingsService$LocalService r0;
        com.android.server.locksettings.LockSettingsService r1;

        r0 := @this: com.android.server.locksettings.LockSettingsService$LocalService;

        r1 := @parameter0: com.android.server.locksettings.LockSettingsService;

        r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0> = r1;

        specialinvoke r0.<com.android.internal.widget.LockSettingsInternal: void <init>()>();

        return;
    }

    void <init>(com.android.server.locksettings.LockSettingsService, com.android.server.locksettings.LockSettingsService$1)
    {
        com.android.server.locksettings.LockSettingsService$LocalService r0;
        com.android.server.locksettings.LockSettingsService r1;
        com.android.server.locksettings.LockSettingsService$1 r2;

        r0 := @this: com.android.server.locksettings.LockSettingsService$LocalService;

        r1 := @parameter0: com.android.server.locksettings.LockSettingsService;

        r2 := @parameter1: com.android.server.locksettings.LockSettingsService$1;

        specialinvoke r0.<com.android.server.locksettings.LockSettingsService$LocalService: void <init>(com.android.server.locksettings.LockSettingsService)>(r1);

        return;
    }

    public long addEscrowToken(byte[], int, com.android.internal.widget.LockPatternUtils$EscrowTokenStateChangeCallback)
    {
        com.android.server.locksettings.LockSettingsService$LocalService r0;
        byte[] r1;
        int i0;
        com.android.internal.widget.LockPatternUtils$EscrowTokenStateChangeCallback r2;
        com.android.server.locksettings.LockSettingsService $r3;
        long $l1;

        r0 := @this: com.android.server.locksettings.LockSettingsService$LocalService;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.widget.LockPatternUtils$EscrowTokenStateChangeCallback;

        $r3 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $l1 = staticinvoke <com.android.server.locksettings.LockSettingsService: long access$1200(com.android.server.locksettings.LockSettingsService,byte[],int,com.android.internal.widget.LockPatternUtils$EscrowTokenStateChangeCallback)>($r3, r1, i0, r2);

        return $l1;
    }

    public boolean armRebootEscrow()
    {
        com.android.server.locksettings.LockSettingsService$LocalService r0;
        com.android.server.locksettings.LockSettingsService $r1;
        com.android.server.locksettings.RebootEscrowManager $r2;
        boolean $z0;

        r0 := @this: com.android.server.locksettings.LockSettingsService$LocalService;

        $r1 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $r2 = staticinvoke <com.android.server.locksettings.LockSettingsService: com.android.server.locksettings.RebootEscrowManager access$1800(com.android.server.locksettings.LockSettingsService)>($r1);

        $z0 = virtualinvoke $r2.<com.android.server.locksettings.RebootEscrowManager: boolean armRebootEscrowIfNeeded()>();

        return $z0;
    }

    public void clearRebootEscrow()
    {
        com.android.server.locksettings.LockSettingsService$LocalService r0;
        com.android.server.locksettings.LockSettingsService $r1, $r3;
        com.android.server.locksettings.RebootEscrowManager $r2;
        boolean $z0;
        com.android.server.locksettings.LockSettingsStrongAuth $r4;

        r0 := @this: com.android.server.locksettings.LockSettingsService$LocalService;

        $r1 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $r2 = staticinvoke <com.android.server.locksettings.LockSettingsService: com.android.server.locksettings.RebootEscrowManager access$1800(com.android.server.locksettings.LockSettingsService)>($r1);

        $z0 = virtualinvoke $r2.<com.android.server.locksettings.RebootEscrowManager: boolean clearRebootEscrow()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $r4 = staticinvoke <com.android.server.locksettings.LockSettingsService: com.android.server.locksettings.LockSettingsStrongAuth access$1900(com.android.server.locksettings.LockSettingsService)>($r3);

        virtualinvoke $r4.<com.android.server.locksettings.LockSettingsStrongAuth: void noLongerRequireStrongAuth(int,int)>(64, -1);

        return;
    }

    public android.app.admin.PasswordMetrics getUserPasswordMetrics(int)
    {
        com.android.server.locksettings.LockSettingsService$LocalService r0;
        int i0;
        long l1;
        com.android.server.locksettings.LockSettingsService $r1, $r2;
        boolean $z0;
        android.app.admin.PasswordMetrics $r3;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        java.lang.StringBuilder r8;

        r0 := @this: com.android.server.locksettings.LockSettingsService$LocalService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $z0 = staticinvoke <com.android.server.locksettings.LockSettingsService: boolean access$1700(com.android.server.locksettings.LockSettingsService,int)>($r1, i0);

        if $z0 == 0 goto label2;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Querying password metrics for unified challenge profile: ");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("LockSettingsService", $r6);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        $r2 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.locksettings.LockSettingsService: android.app.admin.PasswordMetrics getUserPasswordMetrics(int)>(i0);

        return $r3;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isEscrowTokenActive(long, int)
    {
        com.android.server.locksettings.LockSettingsService$LocalService r0;
        long l0;
        int i1;
        com.android.server.locksettings.LockSettingsService $r1;
        boolean $z0;

        r0 := @this: com.android.server.locksettings.LockSettingsService$LocalService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $z0 = staticinvoke <com.android.server.locksettings.LockSettingsService: boolean access$1400(com.android.server.locksettings.LockSettingsService,long,int)>($r1, l0, i1);

        return $z0;
    }

    public void prepareRebootEscrow()
    {
        com.android.server.locksettings.LockSettingsService$LocalService r0;
        com.android.server.locksettings.LockSettingsService $r1, $r3;
        com.android.server.locksettings.RebootEscrowManager $r2;
        boolean $z0;
        com.android.server.locksettings.LockSettingsStrongAuth $r4;

        r0 := @this: com.android.server.locksettings.LockSettingsService$LocalService;

        $r1 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $r2 = staticinvoke <com.android.server.locksettings.LockSettingsService: com.android.server.locksettings.RebootEscrowManager access$1800(com.android.server.locksettings.LockSettingsService)>($r1);

        $z0 = virtualinvoke $r2.<com.android.server.locksettings.RebootEscrowManager: boolean prepareRebootEscrow()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $r4 = staticinvoke <com.android.server.locksettings.LockSettingsService: com.android.server.locksettings.LockSettingsStrongAuth access$1900(com.android.server.locksettings.LockSettingsService)>($r3);

        virtualinvoke $r4.<com.android.server.locksettings.LockSettingsStrongAuth: void requireStrongAuth(int,int)>(64, -1);

        return;
    }

    public void refreshStrongAuthTimeout(int)
    {
        com.android.server.locksettings.LockSettingsService$LocalService r0;
        int i0;
        com.android.server.locksettings.LockSettingsService $r1;
        com.android.server.locksettings.LockSettingsStrongAuth $r2;

        r0 := @this: com.android.server.locksettings.LockSettingsService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $r2 = staticinvoke <com.android.server.locksettings.LockSettingsService: com.android.server.locksettings.LockSettingsStrongAuth access$1900(com.android.server.locksettings.LockSettingsService)>($r1);

        virtualinvoke $r2.<com.android.server.locksettings.LockSettingsStrongAuth: void refreshStrongAuthTimeout(int)>(i0);

        return;
    }

    public boolean removeEscrowToken(long, int)
    {
        com.android.server.locksettings.LockSettingsService$LocalService r0;
        long l0;
        int i1;
        com.android.server.locksettings.LockSettingsService $r1;
        boolean $z0;

        r0 := @this: com.android.server.locksettings.LockSettingsService$LocalService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $z0 = staticinvoke <com.android.server.locksettings.LockSettingsService: boolean access$1300(com.android.server.locksettings.LockSettingsService,long,int)>($r1, l0, i1);

        return $z0;
    }

    public boolean setLockCredentialWithToken(com.android.internal.widget.LockscreenCredential, long, byte[], int)
    {
        com.android.server.locksettings.LockSettingsService$LocalService r0;
        com.android.internal.widget.LockscreenCredential r1;
        long l0;
        byte[] r2;
        int i1;
        com.android.server.locksettings.LockSettingsService $r3, $r5;
        boolean $z0, $z1;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: com.android.server.locksettings.LockSettingsService$LocalService;

        r1 := @parameter0: com.android.internal.widget.LockscreenCredential;

        l0 := @parameter1: long;

        r2 := @parameter2: byte[];

        i1 := @parameter3: int;

        $r3 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $z0 = $r3.<com.android.server.locksettings.LockSettingsService: boolean mHasSecureLockScreen>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $z1 = staticinvoke <com.android.server.locksettings.LockSettingsService: boolean access$1500(com.android.server.locksettings.LockSettingsService,com.android.internal.widget.LockscreenCredential,long,byte[],int)>($r5, r1, l0, r2, i1);

        return $z1;

     label1:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This operation requires secure lock screen feature.");

        throw $r4;
    }

    public void setRebootEscrowListener(com.android.internal.widget.RebootEscrowListener)
    {
        com.android.server.locksettings.LockSettingsService$LocalService r0;
        com.android.internal.widget.RebootEscrowListener r1;
        com.android.server.locksettings.LockSettingsService $r2;
        com.android.server.locksettings.RebootEscrowManager $r3;

        r0 := @this: com.android.server.locksettings.LockSettingsService$LocalService;

        r1 := @parameter0: com.android.internal.widget.RebootEscrowListener;

        $r2 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $r3 = staticinvoke <com.android.server.locksettings.LockSettingsService: com.android.server.locksettings.RebootEscrowManager access$1800(com.android.server.locksettings.LockSettingsService)>($r2);

        virtualinvoke $r3.<com.android.server.locksettings.RebootEscrowManager: void setRebootEscrowListener(com.android.internal.widget.RebootEscrowListener)>(r1);

        return;
    }

    public boolean unlockUserWithToken(long, byte[], int)
    {
        com.android.server.locksettings.LockSettingsService$LocalService r0;
        long l0;
        byte[] r1;
        int i1;
        com.android.server.locksettings.LockSettingsService $r2;
        boolean $z0;

        r0 := @this: com.android.server.locksettings.LockSettingsService$LocalService;

        l0 := @parameter0: long;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.locksettings.LockSettingsService$LocalService: com.android.server.locksettings.LockSettingsService this$0>;

        $z0 = staticinvoke <com.android.server.locksettings.LockSettingsService: boolean access$1600(com.android.server.locksettings.LockSettingsService,long,byte[],int)>($r2, l0, r1, i1);

        return $z0;
    }
}
