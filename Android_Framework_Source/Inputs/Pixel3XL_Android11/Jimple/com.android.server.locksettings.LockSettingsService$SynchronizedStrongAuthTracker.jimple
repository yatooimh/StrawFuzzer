public class com.android.server.locksettings.LockSettingsService$SynchronizedStrongAuthTracker extends com.android.internal.widget.LockPatternUtils$StrongAuthTracker
{

    public void <init>(android.content.Context)
    {
        com.android.server.locksettings.LockSettingsService$SynchronizedStrongAuthTracker r0;
        android.content.Context r1;

        r0 := @this: com.android.server.locksettings.LockSettingsService$SynchronizedStrongAuthTracker;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.widget.LockPatternUtils$StrongAuthTracker: void <init>(android.content.Context)>(r1);

        return;
    }

    public int getStrongAuthForUser(int)
    {
        com.android.server.locksettings.LockSettingsService$SynchronizedStrongAuthTracker r0;
        java.lang.Throwable $r2;
        int i0, i1;

        r0 := @this: com.android.server.locksettings.LockSettingsService$SynchronizedStrongAuthTracker;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        i1 = specialinvoke r0.<com.android.internal.widget.LockPatternUtils$StrongAuthTracker: int getStrongAuthForUser(int)>(i0);

        exitmonitor r0;

     label2:
        return i1;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void handleStrongAuthRequiredChanged(int, int)
    {
        com.android.server.locksettings.LockSettingsService$SynchronizedStrongAuthTracker r0;
        int i0, i1;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.locksettings.LockSettingsService$SynchronizedStrongAuthTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.internal.widget.LockPatternUtils$StrongAuthTracker: void handleStrongAuthRequiredChanged(int,int)>(i0, i1);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void register(com.android.server.locksettings.LockSettingsStrongAuth)
    {
        com.android.server.locksettings.LockSettingsService$SynchronizedStrongAuthTracker r0;
        com.android.server.locksettings.LockSettingsStrongAuth r1;
        android.app.trust.IStrongAuthTracker$Stub $r2;

        r0 := @this: com.android.server.locksettings.LockSettingsService$SynchronizedStrongAuthTracker;

        r1 := @parameter0: com.android.server.locksettings.LockSettingsStrongAuth;

        $r2 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsService$SynchronizedStrongAuthTracker: android.app.trust.IStrongAuthTracker$Stub getStub()>();

        virtualinvoke r1.<com.android.server.locksettings.LockSettingsStrongAuth: void registerStrongAuthTracker(android.app.trust.IStrongAuthTracker)>($r2);

        return;
    }
}
