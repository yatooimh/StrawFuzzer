class com.android.server.locksettings.LockSettingsShellCommand extends android.os.ShellCommand
{
    private static final java.lang.String COMMAND_CLEAR;
    private static final java.lang.String COMMAND_GET_DISABLED;
    private static final java.lang.String COMMAND_HELP;
    private static final java.lang.String COMMAND_REMOVE_CACHE;
    private static final java.lang.String COMMAND_SET_DISABLED;
    private static final java.lang.String COMMAND_SET_PASSWORD;
    private static final java.lang.String COMMAND_SET_PATTERN;
    private static final java.lang.String COMMAND_SET_PIN;
    private static final java.lang.String COMMAND_SP;
    private static final java.lang.String COMMAND_VERIFY;
    private int mCurrentUserId;
    private final com.android.internal.widget.LockPatternUtils mLockPatternUtils;
    private java.lang.String mNew;
    private java.lang.String mOld;

    void <init>(com.android.internal.widget.LockPatternUtils)
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        com.android.internal.widget.LockPatternUtils r1;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        r1 := @parameter0: com.android.internal.widget.LockPatternUtils;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mOld> = "";

        r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mNew> = "";

        r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils> = r1;

        return;
    }

    private boolean checkCredential()
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        boolean z0, $z1, $z2, $z3, $z4;
        java.io.PrintWriter r1, $r4, $r16, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.android.internal.widget.LockPatternUtils $r2, $r5, $r6, $r8, $r9, $r15;
        java.lang.String $r3, $r11, $r14;
        com.android.internal.widget.LockscreenCredential $r7;
        com.android.internal.widget.LockPatternUtils$RequestThrottledException $r17;
        java.lang.StringBuilder r19;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        $r2 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $i0 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        $z1 = virtualinvoke $r2.<com.android.internal.widget.LockPatternUtils: boolean isSecure(int)>($i0);

        if $z1 == 0 goto label09;

        $r5 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $i1 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        $z3 = virtualinvoke $r5.<com.android.internal.widget.LockPatternUtils: boolean isManagedProfileWithUnifiedChallenge(int)>($i1);

        if $z3 == 0 goto label01;

        $r16 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("Profile uses unified challenge");

        return 0;

     label01:
        $r6 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $r7 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockscreenCredential getOldCredential()>();

        $i2 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        z0 = virtualinvoke $r6.<com.android.internal.widget.LockPatternUtils: boolean checkCredential(com.android.internal.widget.LockscreenCredential,int,com.android.internal.widget.LockPatternUtils$CheckCredentialProgressCallback)>($r7, $i2, null);

     label02:
        if z0 != 0 goto label06;

     label03:
        $r9 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $i4 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        $z4 = virtualinvoke $r9.<com.android.internal.widget.LockPatternUtils: boolean isManagedProfileWithUnifiedChallenge(int)>($i4);

        if $z4 != 0 goto label04;

        $r15 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $i5 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        virtualinvoke $r15.<com.android.internal.widget.LockPatternUtils: void reportFailedPasswordAttempt(int)>($i5);

     label04:
        r1 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Old password \'");

        $r11 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mOld>;

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' didn\'t match");

        $r14 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

     label05:
        goto label07;

     label06:
        $r8 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $i3 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        virtualinvoke $r8.<com.android.internal.widget.LockPatternUtils: void reportSuccessfulPasswordAttempt(int)>($i3);

     label07:
        return z0;

     label08:
        $r17 := @caughtexception;

        $r18 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r18.<java.io.PrintWriter: void println(java.lang.String)>("Request throttled");

        return 0;

     label09:
        $r3 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mOld>;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label10;

        $r4 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("Old password provided but user has no password");

        return 0;

     label10:
        return 1;

        catch com.android.internal.widget.LockPatternUtils$RequestThrottledException from label01 to label02 with label08;
        catch com.android.internal.widget.LockPatternUtils$RequestThrottledException from label03 to label04 with label08;
        catch com.android.internal.widget.LockPatternUtils$RequestThrottledException from label04 to label05 with label08;
        catch com.android.internal.widget.LockPatternUtils$RequestThrottledException from label06 to label07 with label08;
    }

    private com.android.internal.widget.LockscreenCredential getOldCredential()
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        java.lang.String $r1, $r4, $r6, $r11, $r13;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3;
        com.android.internal.widget.LockPatternUtils $r2, $r3, $r10;
        com.android.internal.widget.LockscreenCredential $r5, $r9, $r12, $r14, $r15;
        byte[] $r7;
        java.util.List $r8;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        $r1 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mOld>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r15 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createNone()>();

        return $r15;

     label1:
        $r2 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $i0 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        $z1 = virtualinvoke $r2.<com.android.internal.widget.LockPatternUtils: boolean isLockPasswordEnabled(int)>($i0);

        if $z1 == 0 goto label3;

        $r10 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $i2 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        $i3 = virtualinvoke $r10.<com.android.internal.widget.LockPatternUtils: int getKeyguardStoredPasswordQuality(int)>($i2);

        $z3 = staticinvoke <com.android.internal.widget.LockPatternUtils: boolean isQualityAlphabeticPassword(int)>($i3);

        if $z3 == 0 goto label2;

        $r13 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mOld>;

        $r14 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createPassword(java.lang.CharSequence)>($r13);

        return $r14;

     label2:
        $r11 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mOld>;

        $r12 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createPin(java.lang.CharSequence)>($r11);

        return $r12;

     label3:
        $r3 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $i1 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        $z2 = virtualinvoke $r3.<com.android.internal.widget.LockPatternUtils: boolean isLockPatternEnabled(int)>($i1);

        if $z2 == 0 goto label4;

        $r6 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mOld>;

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        $r8 = staticinvoke <com.android.internal.widget.LockPatternUtils: java.util.List byteArrayToPattern(byte[])>($r7);

        $r9 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createPattern(java.util.List)>($r8);

        return $r9;

     label4:
        $r4 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mOld>;

        $r5 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createPassword(java.lang.CharSequence)>($r4);

        return $r5;
    }

    private boolean isNewCredentialSufficient(com.android.internal.widget.LockscreenCredential)
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        int $i0;
        com.android.internal.widget.LockPatternUtils $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte[] $r3;
        java.lang.StringBuilder $r4;
        java.lang.Object $r6;
        java.lang.String $r8;
        android.app.admin.PasswordMetrics $r9, r11;
        com.android.internal.widget.LockscreenCredential r10;
        byte b1;
        java.util.List r12;
        java.io.PrintWriter r13;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        r10 := @parameter0: com.android.internal.widget.LockscreenCredential;

        $r2 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $i0 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        r11 = virtualinvoke $r2.<com.android.internal.widget.LockPatternUtils: android.app.admin.PasswordMetrics getRequestedPasswordMetrics(int)>($i0);

        $z0 = virtualinvoke r10.<com.android.internal.widget.LockscreenCredential: boolean isPassword()>();

        if $z0 != 0 goto label4;

        $z2 = virtualinvoke r10.<com.android.internal.widget.LockscreenCredential: boolean isPin()>();

        if $z2 == 0 goto label1;

        goto label4;

     label1:
        $z3 = virtualinvoke r10.<com.android.internal.widget.LockscreenCredential: boolean isPattern()>();

        if $z3 == 0 goto label2;

        b1 = 1;

        goto label3;

     label2:
        b1 = -1;

     label3:
        $r9 = new android.app.admin.PasswordMetrics;

        specialinvoke $r9.<android.app.admin.PasswordMetrics: void <init>(int)>(b1);

        r12 = staticinvoke <android.app.admin.PasswordMetrics: java.util.List validatePasswordMetrics(android.app.admin.PasswordMetrics,int,boolean,android.app.admin.PasswordMetrics)>(r11, 0, 0, $r9);

        goto label5;

     label4:
        $z1 = virtualinvoke r10.<com.android.internal.widget.LockscreenCredential: boolean isPin()>();

        $r3 = virtualinvoke r10.<com.android.internal.widget.LockscreenCredential: byte[] getCredential()>();

        r12 = staticinvoke <android.app.admin.PasswordMetrics: java.util.List validatePassword(android.app.admin.PasswordMetrics,int,boolean,byte[])>(r11, 0, $z1, $r3);

     label5:
        $z4 = interfaceinvoke r12.<java.util.List: boolean isEmpty()>();

        if $z4 != 0 goto label6;

        r13 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New credential doesn\'t satisfy admin policies: ");

        $r6 = interfaceinvoke r12.<java.util.List: java.lang.Object get(int)>(0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r13.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return 0;

     label6:
        return 1;
    }

    private void parseArgs()
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        java.lang.String r1, $r4, $r5, $r6, $r10, $r12, $r13;
        java.io.PrintWriter r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7;
        java.lang.IllegalArgumentException $r11;
        int $i0;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

     label1:
        r1 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String getNextOption()>();

        if r1 == null goto label4;

        $r5 = "--old";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r13 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String getNextArgRequired()>();

        r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mOld> = $r13;

        goto label1;

     label2:
        $r6 = "--user";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $r12 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String getNextArgRequired()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId> = $i0;

        goto label1;

     label3:
        r2 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r11;

     label4:
        $r4 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String getNextArg()>();

        r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mNew> = $r4;

        return;
    }

    private void runChangeSp()
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        java.lang.String r1, $r2, $r3, $r4, $r13;
        boolean $z0, $z1, $z2;
        com.android.internal.widget.LockPatternUtils $r5, $r7, $r11;
        java.io.PrintWriter $r6, $r8, $r9;
        java.lang.Object[] $r10;
        java.lang.Boolean $r12;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        r1 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mNew>;

        if r1 == null goto label2;

        $r2 = "1";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        virtualinvoke $r7.<com.android.internal.widget.LockPatternUtils: void enableSyntheticPassword()>();

        $r8 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r8.<java.io.PrintWriter: void println(java.lang.String)>("Synthetic password enabled");

        goto label2;

     label1:
        $r4 = "0";

        $r3 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mNew>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r5 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        virtualinvoke $r5.<com.android.internal.widget.LockPatternUtils: void disableSyntheticPassword()>();

        $r6 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r6.<java.io.PrintWriter: void println(java.lang.String)>("Synthetic password disabled");

     label2:
        $r9 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r10 = newarray (java.lang.Object)[1];

        $r11 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $z2 = virtualinvoke $r11.<com.android.internal.widget.LockPatternUtils: boolean isSyntheticPasswordEnabled()>();

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r10[0] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SP Enabled = %b", $r10);

        virtualinvoke $r9.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        return;
    }

    private boolean runClear()
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        com.android.internal.widget.LockscreenCredential r1, $r3;
        boolean $z0;
        com.android.internal.widget.LockPatternUtils $r2;
        int $i0;
        java.io.PrintWriter $r4;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        r1 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createNone()>();

        $z0 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: boolean isNewCredentialSufficient(com.android.internal.widget.LockscreenCredential)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $r3 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockscreenCredential getOldCredential()>();

        $i0 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        virtualinvoke $r2.<com.android.internal.widget.LockPatternUtils: boolean setLockCredential(com.android.internal.widget.LockscreenCredential,com.android.internal.widget.LockscreenCredential,int)>(r1, $r3, $i0);

        $r4 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("Lock credential cleared");

        return 1;
    }

    private void runGetDisabled()
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        boolean z0;
        int $i0;
        com.android.internal.widget.LockPatternUtils $r1;
        java.io.PrintWriter $r2;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        $r1 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $i0 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        z0 = virtualinvoke $r1.<com.android.internal.widget.LockPatternUtils: boolean isLockScreenDisabled(int)>($i0);

        $r2 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(boolean)>(z0);

        return;
    }

    private void runRemoveCache()
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        java.io.PrintWriter r1;
        int $i0, $i1;
        com.android.internal.widget.LockPatternUtils $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        $r3 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $i0 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        virtualinvoke $r3.<com.android.internal.widget.LockPatternUtils: void removeCachedUnifiedChallenge(int)>($i0);

        r1 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Password cached removed for user ");

        $i1 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return;
    }

    private void runSetDisabled()
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        boolean z0;
        java.io.PrintWriter r1;
        java.lang.String $r3, $r8;
        int $i0;
        com.android.internal.widget.LockPatternUtils $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        $r3 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mNew>;

        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r3);

        $r4 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $i0 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        virtualinvoke $r4.<com.android.internal.widget.LockPatternUtils: void setLockScreenDisabled(boolean,int)>(z0, $i0);

        r1 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lock screen disabled set to ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return;
    }

    private boolean runSetPassword()
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        java.lang.String $r2, $r7, $r10;
        boolean $z0;
        com.android.internal.widget.LockPatternUtils $r3;
        com.android.internal.widget.LockscreenCredential $r4, r11;
        int $i0;
        java.lang.StringBuilder $r5;
        java.io.PrintWriter r12;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        $r2 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mNew>;

        r11 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createPassword(java.lang.CharSequence)>($r2);

        $z0 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: boolean isNewCredentialSufficient(com.android.internal.widget.LockscreenCredential)>(r11);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $r4 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockscreenCredential getOldCredential()>();

        $i0 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        virtualinvoke $r3.<com.android.internal.widget.LockPatternUtils: boolean setLockCredential(com.android.internal.widget.LockscreenCredential,com.android.internal.widget.LockscreenCredential,int)>(r11, $r4, $i0);

        r12 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Password set to \'");

        $r7 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mNew>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        return 1;
    }

    private boolean runSetPattern()
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        java.lang.String $r2, $r9, $r12;
        byte[] $r3;
        java.util.List $r4;
        boolean $z0;
        com.android.internal.widget.LockPatternUtils $r5;
        com.android.internal.widget.LockscreenCredential $r6, r13;
        int $i0;
        java.lang.StringBuilder $r7;
        java.io.PrintWriter r14;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        $r2 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mNew>;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $r4 = staticinvoke <com.android.internal.widget.LockPatternUtils: java.util.List byteArrayToPattern(byte[])>($r3);

        r13 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createPattern(java.util.List)>($r4);

        $z0 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: boolean isNewCredentialSufficient(com.android.internal.widget.LockscreenCredential)>(r13);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r5 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $r6 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockscreenCredential getOldCredential()>();

        $i0 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        virtualinvoke $r5.<com.android.internal.widget.LockPatternUtils: boolean setLockCredential(com.android.internal.widget.LockscreenCredential,com.android.internal.widget.LockscreenCredential,int)>(r13, $r6, $i0);

        r14 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pattern set to \'");

        $r9 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mNew>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return 1;
    }

    private boolean runSetPin()
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String $r2, $r7, $r10;
        boolean $z0;
        com.android.internal.widget.LockPatternUtils $r3;
        com.android.internal.widget.LockscreenCredential $r4, r11;
        int $i0;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        $r2 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mNew>;

        r11 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createPin(java.lang.CharSequence)>($r2);

        $z0 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: boolean isNewCredentialSufficient(com.android.internal.widget.LockscreenCredential)>(r11);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $r4 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockscreenCredential getOldCredential()>();

        $i0 = r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId>;

        virtualinvoke $r3.<com.android.internal.widget.LockPatternUtils: boolean setLockCredential(com.android.internal.widget.LockscreenCredential,com.android.internal.widget.LockscreenCredential,int)>(r11, $r4, $i0);

        r1 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pin set to \'");

        $r7 = r0.<com.android.server.locksettings.LockSettingsShellCommand: java.lang.String mNew>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        return 1;
    }

    private void runVerify()
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        java.io.PrintWriter $r1;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        $r1 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Lock credential verified successfully");

        return;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        java.lang.String r1, $r8, $r14;
        android.app.IActivityManager $r3;
        android.content.pm.UserInfo $r4;
        int $i2, $i3, $i4, i5, i7;
        com.android.internal.widget.LockPatternUtils $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, z15;
        java.io.PrintWriter $r9, $r15, r16, r18;
        java.lang.Exception $r10;
        java.lang.StringBuilder $r11, r17;
        byte b6, b8, b9, b10;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label01;

        $i4 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: int handleDefaultCommands(java.lang.String)>(r1);

        return $i4;

     label01:
        $r3 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r4 = interfaceinvoke $r3.<android.app.IActivityManager: android.content.pm.UserInfo getCurrentUser()>();

        $i2 = $r4.<android.content.pm.UserInfo: int id>;

        r0.<com.android.server.locksettings.LockSettingsShellCommand: int mCurrentUserId> = $i2;

        specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: void parseArgs()>();

        $r5 = r0.<com.android.server.locksettings.LockSettingsShellCommand: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        z14 = virtualinvoke $r5.<com.android.internal.widget.LockPatternUtils: boolean hasSecureLockScreen()>();

     label02:
        if z14 != 0 goto label16;

     label03:
        i5 = virtualinvoke r1.<java.lang.String: int hashCode()>();

     label04:
        if i5 == -1473704173 goto label10;

        if i5 == 3198785 goto label08;

        if i5 == 75288455 goto label06;

     label05:
        goto label12;

     label06:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("set-disabled");

        if $z13 == 0 goto label05;

     label07:
        b6 = 2;

        goto label13;

     label08:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("help");

        if $z12 == 0 goto label05;

     label09:
        b6 = 0;

        goto label13;

     label10:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("get-disabled");

        if $z11 == 0 goto label05;

     label11:
        b6 = 1;

        goto label13;

     label12:
        b6 = -1;

     label13:
        if b6 == 0 goto label16;

        if b6 == 1 goto label16;

        if b6 == 2 goto label16;

     label14:
        $r9 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r9.<java.io.PrintWriter: void println(java.lang.String)>("The device does not support lock screen - ignoring the command.");

     label15:
        return -1;

     label16:
        i7 = virtualinvoke r1.<java.lang.String: int hashCode()>();

     label17:
        if i7 == -1957541639 goto label21;

        if i7 == 3198785 goto label19;

     label18:
        goto label23;

     label19:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("help");

        if $z10 == 0 goto label18;

     label20:
        b8 = 1;

        goto label24;

     label21:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("remove-cache");

        if $z0 == 0 goto label18;

     label22:
        b8 = 0;

        goto label24;

     label23:
        b8 = -1;

     label24:
        if b8 == 0 goto label71;

        if b8 == 1 goto label69;

     label25:
        $z1 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: boolean checkCredential()>();

        if $z1 != 0 goto label27;

     label26:
        return -1;

     label27:
        z15 = 1;

     label28:
        $i3 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i3)
        {
            case -2044327643: goto label44;
            case -1473704173: goto label42;
            case -819951495: goto label40;
            case 3677: goto label38;
            case 75288455: goto label36;
            case 94746189: goto label34;
            case 1021333414: goto label32;
            case 1983832490: goto label30;
            default: goto label29;
        };

     label29:
        goto label46;

     label30:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("set-pin");

        if $z2 == 0 goto label29;

     label31:
        b9 = 2;

        goto label47;

     label32:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("set-password");

        if $z3 == 0 goto label29;

     label33:
        b9 = 1;

        goto label47;

     label34:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("clear");

        if $z4 == 0 goto label29;

     label35:
        b9 = 3;

        goto label47;

     label36:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("set-disabled");

        if $z5 == 0 goto label29;

     label37:
        b9 = 5;

        goto label47;

     label38:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("sp");

        if $z6 == 0 goto label29;

     label39:
        b9 = 4;

        goto label47;

     label40:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("verify");

        if $z7 == 0 goto label29;

     label41:
        b9 = 6;

        goto label47;

     label42:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("get-disabled");

        if $z8 == 0 goto label29;

     label43:
        b9 = 7;

        goto label47;

     label44:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("set-pattern");

        if $z9 == 0 goto label29;

     label45:
        b9 = 0;

        goto label47;

     label46:
        b9 = -1;

     label47:
        tableswitch(b9)
        {
            case 0: goto label64;
            case 1: goto label62;
            case 2: goto label60;
            case 3: goto label58;
            case 4: goto label56;
            case 5: goto label54;
            case 6: goto label52;
            case 7: goto label50;
            default: goto label48;
        };

     label48:
        r16 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getErrPrintWriter()>();

     label49:
        goto label66;

     label50:
        specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: void runGetDisabled()>();

     label51:
        goto label67;

     label52:
        specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: void runVerify()>();

     label53:
        goto label67;

     label54:
        specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: void runSetDisabled()>();

     label55:
        goto label67;

     label56:
        specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: void runChangeSp()>();

     label57:
        goto label67;

     label58:
        z15 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: boolean runClear()>();

     label59:
        goto label67;

     label60:
        z15 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: boolean runSetPin()>();

     label61:
        goto label67;

     label62:
        z15 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: boolean runSetPassword()>();

     label63:
        goto label67;

     label64:
        z15 = specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: boolean runSetPattern()>();

     label65:
        goto label67;

     label66:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown command: ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.io.PrintWriter: void println(java.lang.String)>($r8);

     label67:
        b10 = -1;

        if z15 == 0 goto label68;

        b10 = 0;

     label68:
        return b10;

     label69:
        virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: void onHelp()>();

     label70:
        return 0;

     label71:
        specialinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: void runRemoveCache()>();

     label72:
        return 0;

     label73:
        $r10 := @caughtexception;

        r18 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while executing command: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r18.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r15 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r10.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>($r15);

        return -1;

        catch java.lang.Exception from label01 to label02 with label73;
        catch java.lang.Exception from label03 to label04 with label73;
        catch java.lang.Exception from label06 to label07 with label73;
        catch java.lang.Exception from label08 to label09 with label73;
        catch java.lang.Exception from label10 to label11 with label73;
        catch java.lang.Exception from label14 to label15 with label73;
        catch java.lang.Exception from label16 to label17 with label73;
        catch java.lang.Exception from label19 to label20 with label73;
        catch java.lang.Exception from label21 to label22 with label73;
        catch java.lang.Exception from label25 to label26 with label73;
        catch java.lang.Exception from label28 to label29 with label73;
        catch java.lang.Exception from label30 to label31 with label73;
        catch java.lang.Exception from label32 to label33 with label73;
        catch java.lang.Exception from label34 to label35 with label73;
        catch java.lang.Exception from label36 to label37 with label73;
        catch java.lang.Exception from label38 to label39 with label73;
        catch java.lang.Exception from label40 to label41 with label73;
        catch java.lang.Exception from label42 to label43 with label73;
        catch java.lang.Exception from label44 to label45 with label73;
        catch java.lang.Exception from label48 to label49 with label73;
        catch java.lang.Exception from label50 to label51 with label73;
        catch java.lang.Exception from label52 to label53 with label73;
        catch java.lang.Exception from label54 to label55 with label73;
        catch java.lang.Exception from label56 to label57 with label73;
        catch java.lang.Exception from label58 to label59 with label73;
        catch java.lang.Exception from label60 to label61 with label73;
        catch java.lang.Exception from label62 to label63 with label73;
        catch java.lang.Exception from label64 to label65 with label73;
        catch java.lang.Exception from label66 to label67 with label73;
        catch java.lang.Exception from label69 to label70 with label73;
        catch java.lang.Exception from label71 to label72 with label73;
    }

    public void onHelp()
    {
        com.android.server.locksettings.LockSettingsShellCommand r0;
        java.lang.Throwable $r2, $r3;
        java.io.PrintWriter r4;

        r0 := @this: com.android.server.locksettings.LockSettingsShellCommand;

        r4 = virtualinvoke r0.<com.android.server.locksettings.LockSettingsShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label1:
        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("lockSettings service commands:");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("NOTE: when lock screen is set, all commands require the --old <CREDENTIAL> argument.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Prints this help text.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  get-disabled [--old <CREDENTIAL>] [--user USER_ID]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Checks whether lock screen is disabled.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set-disabled [--old <CREDENTIAL>] [--user USER_ID] <true|false>");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    When true, disables lock screen.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set-pattern [--old <CREDENTIAL>] [--user USER_ID] <PATTERN>");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Sets the lock screen as pattern, using the given PATTERN to unlock.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set-pin [--old <CREDENTIAL>] [--user USER_ID] <PIN>");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Sets the lock screen as PIN, using the given PIN to unlock.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set-pin [--old <CREDENTIAL>] [--user USER_ID] <PASSWORD>");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Sets the lock screen as password, using the given PASSOWRD to unlock.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  sp [--old <CREDENTIAL>] [--user USER_ID]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Gets whether synthetic password is enabled.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  sp [--old <CREDENTIAL>] [--user USER_ID] <1|0>");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Enables / disables synthetic password.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  clear [--old <CREDENTIAL>] [--user USER_ID]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Clears the lock credentials.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  verify [--old <CREDENTIAL>] [--user USER_ID]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Verifies the lock credentials.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  remove-cache [--user USER_ID]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Removes cached unified challenge for the managed profile.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<java.io.PrintWriter: void close()>();

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        if r4 == null goto label8;

     label5:
        virtualinvoke r4.<java.io.PrintWriter: void close()>();

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

        virtualinvoke $r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r3);

     label8:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static void <clinit>()
    {
        <com.android.server.locksettings.LockSettingsShellCommand: java.lang.String COMMAND_VERIFY> = "verify";

        <com.android.server.locksettings.LockSettingsShellCommand: java.lang.String COMMAND_SP> = "sp";

        <com.android.server.locksettings.LockSettingsShellCommand: java.lang.String COMMAND_SET_PIN> = "set-pin";

        <com.android.server.locksettings.LockSettingsShellCommand: java.lang.String COMMAND_SET_PATTERN> = "set-pattern";

        <com.android.server.locksettings.LockSettingsShellCommand: java.lang.String COMMAND_SET_PASSWORD> = "set-password";

        <com.android.server.locksettings.LockSettingsShellCommand: java.lang.String COMMAND_SET_DISABLED> = "set-disabled";

        <com.android.server.locksettings.LockSettingsShellCommand: java.lang.String COMMAND_REMOVE_CACHE> = "remove-cache";

        <com.android.server.locksettings.LockSettingsShellCommand: java.lang.String COMMAND_HELP> = "help";

        <com.android.server.locksettings.LockSettingsShellCommand: java.lang.String COMMAND_GET_DISABLED> = "get-disabled";

        <com.android.server.locksettings.LockSettingsShellCommand: java.lang.String COMMAND_CLEAR> = "clear";

        return;
    }
}
