final class com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey extends java.lang.Object
{
    static final int TYPE_FETCHED;
    static final int TYPE_FILE;
    static final int TYPE_KEY_VALUE;
    java.lang.String key;
    int type;
    int userId;

    private void <init>()
    {
        com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey r0;

        r0 := @this: com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.locksettings.LockSettingsStorage$1)
    {
        com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey r0;
        com.android.server.locksettings.LockSettingsStorage$1 r1;

        r0 := @this: com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey;

        r1 := @parameter0: com.android.server.locksettings.LockSettingsStorage$1;

        specialinvoke r0.<com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey r0, r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r2;
        boolean $z1, z2, z3;
        java.lang.Object r3;

        r0 := @this: com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey;

        r3 := @parameter0: java.lang.Object;

        z2 = r3 instanceof com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey;

        if z2 != 0 goto label1;

        return 0;

     label1:
        r4 = (com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey) r3;

        z3 = 0;

        $i1 = r0.<com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: int userId>;

        $i0 = r4.<com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: int userId>;

        if $i1 != $i0 goto label2;

        z3 = 0;

        $i3 = r0.<com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: int type>;

        $i2 = r4.<com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: int type>;

        if $i3 != $i2 goto label2;

        z3 = 0;

        $r2 = r0.<com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: java.lang.String key>;

        $r1 = r4.<com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: java.lang.String key>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        z3 = 1;

     label2:
        return z3;
    }

    public int hashCode()
    {
        com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey;

        $r1 = r0.<com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: java.lang.String key>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = r0.<com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: int userId>;

        $i3 = $i0 ^ $i1;

        $i2 = r0.<com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: int type>;

        $i4 = $i3 ^ $i2;

        return $i4;
    }

    public com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey set(int, java.lang.String, int)
    {
        com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r0.<com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: int type> = i0;

        r0.<com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: java.lang.String key> = r1;

        r0.<com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: int userId> = i1;

        return r0;
    }

    public static void <clinit>()
    {
        <com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: int TYPE_KEY_VALUE> = 0;

        <com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: int TYPE_FILE> = 1;

        <com.android.server.locksettings.LockSettingsStorage$Cache$CacheKey: int TYPE_FETCHED> = 2;

        return;
    }
}
