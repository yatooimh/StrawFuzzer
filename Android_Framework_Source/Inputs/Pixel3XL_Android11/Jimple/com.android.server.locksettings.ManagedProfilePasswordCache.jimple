public class com.android.server.locksettings.ManagedProfilePasswordCache extends java.lang.Object
{
    private static final int CACHE_TIMEOUT_SECONDS;
    private static final int KEY_LENGTH;
    private static final java.lang.String TAG;
    private final android.util.SparseArray mEncryptedPasswords;
    private final java.security.KeyStore mKeyStore;
    private final android.os.UserManager mUserManager;

    static void <clinit>()
    {
        java.util.concurrent.TimeUnit $r0;
        long $l0;
        int $i1;

        <com.android.server.locksettings.ManagedProfilePasswordCache: java.lang.String TAG> = "ManagedProfilePasswordCache";

        <com.android.server.locksettings.ManagedProfilePasswordCache: int KEY_LENGTH> = 256;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toSeconds(long)>(7L);

        $i1 = (int) $l0;

        <com.android.server.locksettings.ManagedProfilePasswordCache: int CACHE_TIMEOUT_SECONDS> = $i1;

        return;
    }

    public void <init>(java.security.KeyStore, android.os.UserManager)
    {
        com.android.server.locksettings.ManagedProfilePasswordCache r0;
        java.security.KeyStore r1;
        android.os.UserManager r2;
        android.util.SparseArray $r3;

        r0 := @this: com.android.server.locksettings.ManagedProfilePasswordCache;

        r1 := @parameter0: java.security.KeyStore;

        r2 := @parameter1: android.os.UserManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.locksettings.ManagedProfilePasswordCache: android.util.SparseArray mEncryptedPasswords> = $r3;

        r0.<com.android.server.locksettings.ManagedProfilePasswordCache: java.security.KeyStore mKeyStore> = r1;

        r0.<com.android.server.locksettings.ManagedProfilePasswordCache: android.os.UserManager mUserManager> = r2;

        return;
    }

    private static java.lang.String getEncryptionKeyName(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("com.android.server.locksettings.unified_profile_cache_v2_");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private static java.lang.String getLegacyEncryptionKeyName(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("com.android.server.locksettings.unified_profile_cache_");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public void removePassword(int)
    {
        com.android.server.locksettings.ManagedProfilePasswordCache r0;
        int i0;
        android.util.SparseArray r1, $r5, $r6, $r9;
        java.lang.String r2, r14;
        java.security.KeyStore $r3, $r4, $r10, $r11;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7;
        byte[] $r8;
        java.lang.Throwable $r12, $r13;

        r0 := @this: com.android.server.locksettings.ManagedProfilePasswordCache;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: android.util.SparseArray mEncryptedPasswords>;

        entermonitor r1;

     label01:
        r14 = staticinvoke <com.android.server.locksettings.ManagedProfilePasswordCache: java.lang.String getEncryptionKeyName(int)>(i0);

        r2 = staticinvoke <com.android.server.locksettings.ManagedProfilePasswordCache: java.lang.String getLegacyEncryptionKeyName(int)>(i0);

     label02:
        $r3 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: java.security.KeyStore mKeyStore>;

        $z0 = virtualinvoke $r3.<java.security.KeyStore: boolean containsAlias(java.lang.String)>(r14);

        if $z0 == 0 goto label03;

        $r11 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: java.security.KeyStore mKeyStore>;

        virtualinvoke $r11.<java.security.KeyStore: void deleteEntry(java.lang.String)>(r14);

     label03:
        $r4 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: java.security.KeyStore mKeyStore>;

        $z1 = virtualinvoke $r4.<java.security.KeyStore: boolean containsAlias(java.lang.String)>(r2);

        if $z1 == 0 goto label04;

        $r10 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: java.security.KeyStore mKeyStore>;

        virtualinvoke $r10.<java.security.KeyStore: void deleteEntry(java.lang.String)>(r2);

     label04:
        goto label07;

     label05:
        $r12 := @caughtexception;

     label06:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ManagedProfilePasswordCache", "Cannot delete key", $r12);

     label07:
        $r5 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: android.util.SparseArray mEncryptedPasswords>;

        $z2 = virtualinvoke $r5.<android.util.SparseArray: boolean contains(int)>(i0);

        if $z2 == 0 goto label08;

        $r6 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: android.util.SparseArray mEncryptedPasswords>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r8 = (byte[]) $r7;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r8, 0);

        $r9 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: android.util.SparseArray mEncryptedPasswords>;

        virtualinvoke $r9.<android.util.SparseArray: void remove(int)>(i0);

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r13 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.security.KeyStoreException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.security.KeyStoreException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public com.android.internal.widget.LockscreenCredential retrievePassword(int)
    {
        com.android.server.locksettings.ManagedProfilePasswordCache r0;
        int i0, $i1;
        android.util.SparseArray r1, $r4;
        javax.crypto.Cipher r2;
        javax.crypto.spec.GCMParameterSpec r3;
        java.lang.Object $r5;
        java.security.KeyStore $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8, $r10, $r11;
        android.security.keystore.UserNotAuthenticatedException $r9;
        byte[] r12, r14, r15, r16;
        java.security.Key r13;
        com.android.internal.widget.LockscreenCredential r17;

        r0 := @this: com.android.server.locksettings.ManagedProfilePasswordCache;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: android.util.SparseArray mEncryptedPasswords>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: android.util.SparseArray mEncryptedPasswords>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r12 = (byte[]) $r5;

     label02:
        if r12 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return null;

     label05:
        $r6 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: java.security.KeyStore mKeyStore>;

        $r7 = staticinvoke <com.android.server.locksettings.ManagedProfilePasswordCache: java.lang.String getEncryptionKeyName(int)>(i0);

        r13 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r7, null);

     label06:
        if r13 != null goto label09;

     label07:
        exitmonitor r1;

     label08:
        return null;

     label09:
        r14 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r12, 12);

        $i1 = lengthof r12;

        r15 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r12, 12, $i1);

     label10:
        r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/GCM/NoPadding");

        r3 = new javax.crypto.spec.GCMParameterSpec;

        specialinvoke r3.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(128, r14);

        virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, r13, r3);

        r16 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r15);

     label11:
        r17 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createManagedPassword(byte[])>(r16);

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r16, 0);

        exitmonitor r1;

     label12:
        return r17;

     label13:
        $r11 := @caughtexception;

     label14:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ManagedProfilePasswordCache", "Cannot decrypt", $r11);

        exitmonitor r1;

     label15:
        return null;

     label16:
        $r9 := @caughtexception;

     label17:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ManagedProfilePasswordCache", "Device not unlocked for more than 7 days");

        exitmonitor r1;

     label18:
        return null;

     label19:
        $r10 := @caughtexception;

     label20:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ManagedProfilePasswordCache", "Cannot get key", $r10);

        exitmonitor r1;

     label21:
        return null;

     label22:
        $r8 := @caughtexception;

     label23:
        exitmonitor r1;

     label24:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.security.UnrecoverableKeyException from label05 to label06 with label19;
        catch java.security.KeyStoreException from label05 to label06 with label19;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label19;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch android.security.keystore.UserNotAuthenticatedException from label10 to label11 with label16;
        catch java.security.GeneralSecurityException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    public void storePassword(int, com.android.internal.widget.LockscreenCredential)
    {
        com.android.server.locksettings.ManagedProfilePasswordCache r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.util.SparseArray r1, $r3, $r14;
        java.lang.String r2;
        boolean $z0;
        android.os.UserManager $r4;
        android.security.keystore.KeyGenParameterSpec$Builder $r5, $r7, $r9, $r10, $r11, r21;
        java.lang.String[] $r6, $r8;
        android.security.keystore.KeyGenParameterSpec $r12;
        byte[] $r13, r24, r25, r26;
        java.lang.Throwable $r15, $r16, $r17;
        com.android.internal.widget.LockscreenCredential r18;
        android.content.pm.UserInfo r19;
        javax.crypto.KeyGenerator r20;
        javax.crypto.SecretKey r22;
        javax.crypto.Cipher r23;

        r0 := @this: com.android.server.locksettings.ManagedProfilePasswordCache;

        i0 := @parameter0: int;

        r18 := @parameter1: com.android.internal.widget.LockscreenCredential;

        r1 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: android.util.SparseArray mEncryptedPasswords>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: android.util.SparseArray mEncryptedPasswords>;

        $z0 = virtualinvoke $r3.<android.util.SparseArray: boolean contains(int)>(i0);

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r4 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: android.os.UserManager mUserManager>;

        r19 = virtualinvoke $r4.<android.os.UserManager: android.content.pm.UserInfo getProfileParent(int)>(i0);

     label04:
        if r19 == null goto label18;

     label05:
        $i1 = r19.<android.content.pm.UserInfo: int id>;

        if $i1 == 0 goto label07;

     label06:
        goto label18;

     label07:
        r2 = staticinvoke <com.android.server.locksettings.ManagedProfilePasswordCache: java.lang.String getEncryptionKeyName(int)>(i0);

     label08:
        r20 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>("AES", "AndroidKeyStore");

        r21 = new android.security.keystore.KeyGenParameterSpec$Builder;

        specialinvoke r21.<android.security.keystore.KeyGenParameterSpec$Builder: void <init>(java.lang.String,int)>(r2, 3);

        $r5 = virtualinvoke r21.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setKeySize(int)>(256);

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "GCM";

        $r7 = virtualinvoke $r5.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setBlockModes(java.lang.String[])>($r6);

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = "NoPadding";

        $r9 = virtualinvoke $r7.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setEncryptionPaddings(java.lang.String[])>($r8);

        $r10 = virtualinvoke $r9.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setUserAuthenticationRequired(boolean)>(1);

        $i2 = <com.android.server.locksettings.ManagedProfilePasswordCache: int CACHE_TIMEOUT_SECONDS>;

        $r11 = virtualinvoke $r10.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setUserAuthenticationValidityDurationSeconds(int)>($i2);

        $r12 = virtualinvoke $r11.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec build()>();

        virtualinvoke r20.<javax.crypto.KeyGenerator: void init(java.security.spec.AlgorithmParameterSpec)>($r12);

        r22 = virtualinvoke r20.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

     label09:
        r23 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/GCM/NoPadding");

        virtualinvoke r23.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, r22);

        $r13 = virtualinvoke r18.<com.android.internal.widget.LockscreenCredential: byte[] getCredential()>();

        r24 = virtualinvoke r23.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r13);

        r25 = virtualinvoke r23.<javax.crypto.Cipher: byte[] getIV()>();

        $i4 = lengthof r24;

        $i3 = lengthof r25;

        $i5 = $i4 + $i3;

        r26 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r25, $i5);

        $i7 = lengthof r25;

        $i6 = lengthof r24;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r24, 0, r26, $i7, $i6);

        $r14 = r0.<com.android.server.locksettings.ManagedProfilePasswordCache: android.util.SparseArray mEncryptedPasswords>;

        virtualinvoke $r14.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r26);

     label10:
        goto label13;

     label11:
        $r15 := @caughtexception;

     label12:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ManagedProfilePasswordCache", "Cannot encrypt", $r15);

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r16 := @caughtexception;

     label16:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ManagedProfilePasswordCache", "Cannot generate key", $r16);

        exitmonitor r1;

     label17:
        return;

     label18:
        exitmonitor r1;

     label19:
        return;

     label20:
        $r17 := @caughtexception;

     label21:
        exitmonitor r1;

     label22:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.security.GeneralSecurityException from label08 to label09 with label15;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.security.GeneralSecurityException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }
}
