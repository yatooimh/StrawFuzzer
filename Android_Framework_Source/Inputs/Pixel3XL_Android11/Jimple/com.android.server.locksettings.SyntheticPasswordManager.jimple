public class com.android.server.locksettings.SyntheticPasswordManager extends java.lang.Object
{
    public static final long DEFAULT_HANDLE;
    private static final byte[] DEFAULT_PASSWORD;
    protected static final byte[] HEX_ARRAY;
    private static final int INVALID_WEAVER_SLOT;
    private static final java.lang.String PASSWORD_DATA_NAME;
    private static final java.lang.String PASSWORD_METRICS_NAME;
    private static final int PASSWORD_SALT_LENGTH;
    private static final int PASSWORD_SCRYPT_N;
    private static final int PASSWORD_SCRYPT_P;
    private static final int PASSWORD_SCRYPT_R;
    private static final int PASSWORD_TOKEN_LENGTH;
    private static final byte[] PERSONALISATION_CONTEXT;
    private static final byte[] PERSONALISATION_SECDISCARDABLE;
    private static final byte[] PERSONALISATION_WEAVER_KEY;
    private static final byte[] PERSONALISATION_WEAVER_PASSWORD;
    private static final byte[] PERSONALISATION_WEAVER_TOKEN;
    private static final byte[] PERSONALIZATION_AUTHSECRET_KEY;
    private static final byte[] PERSONALIZATION_E0;
    private static final byte[] PERSONALIZATION_FBE_KEY;
    private static final byte[] PERSONALIZATION_KEY_STORE_PASSWORD;
    private static final byte[] PERSONALIZATION_PASSWORD_HASH;
    private static final byte[] PERSONALIZATION_PASSWORD_METRICS;
    private static final byte[] PERSONALIZATION_SP_GK_AUTH;
    private static final byte[] PERSONALIZATION_SP_SPLIT;
    private static final byte[] PERSONALIZATION_USER_GK_AUTH;
    private static final int SECDISCARDABLE_LENGTH;
    private static final java.lang.String SECDISCARDABLE_NAME;
    private static final java.lang.String SP_BLOB_NAME;
    private static final java.lang.String SP_E0_NAME;
    private static final java.lang.String SP_HANDLE_NAME;
    private static final java.lang.String SP_P1_NAME;
    private static final byte SYNTHETIC_PASSWORD_LENGTH;
    private static final byte SYNTHETIC_PASSWORD_PASSWORD_BASED;
    private static final byte SYNTHETIC_PASSWORD_TOKEN_BASED;
    private static final byte SYNTHETIC_PASSWORD_VERSION_V1;
    private static final byte SYNTHETIC_PASSWORD_VERSION_V2;
    private static final byte SYNTHETIC_PASSWORD_VERSION_V3;
    private static final java.lang.String TAG;
    private static final java.lang.String WEAVER_SLOT_NAME;
    private static final byte WEAVER_VERSION;
    private final android.content.Context mContext;
    private com.android.server.locksettings.PasswordSlotManager mPasswordSlotManager;
    private com.android.server.locksettings.LockSettingsStorage mStorage;
    private final android.os.UserManager mUserManager;
    private android.hardware.weaver.V1_0.IWeaver mWeaver;
    private android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig;
    private android.util.ArrayMap tokenMap;

    static void <clinit>()
    {
        java.lang.String $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30;
        byte[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31;

        <com.android.server.locksettings.SyntheticPasswordManager: byte WEAVER_VERSION> = 1;

        <com.android.server.locksettings.SyntheticPasswordManager: java.lang.String WEAVER_SLOT_NAME> = "weaver";

        <com.android.server.locksettings.SyntheticPasswordManager: java.lang.String TAG> = "SyntheticPasswordManager";

        <com.android.server.locksettings.SyntheticPasswordManager: byte SYNTHETIC_PASSWORD_VERSION_V3> = 3;

        <com.android.server.locksettings.SyntheticPasswordManager: byte SYNTHETIC_PASSWORD_VERSION_V2> = 2;

        <com.android.server.locksettings.SyntheticPasswordManager: byte SYNTHETIC_PASSWORD_VERSION_V1> = 1;

        <com.android.server.locksettings.SyntheticPasswordManager: byte SYNTHETIC_PASSWORD_TOKEN_BASED> = 1;

        <com.android.server.locksettings.SyntheticPasswordManager: byte SYNTHETIC_PASSWORD_PASSWORD_BASED> = 0;

        <com.android.server.locksettings.SyntheticPasswordManager: byte SYNTHETIC_PASSWORD_LENGTH> = 32;

        <com.android.server.locksettings.SyntheticPasswordManager: java.lang.String SP_P1_NAME> = "p1";

        <com.android.server.locksettings.SyntheticPasswordManager: java.lang.String SP_HANDLE_NAME> = "handle";

        <com.android.server.locksettings.SyntheticPasswordManager: java.lang.String SP_E0_NAME> = "e0";

        <com.android.server.locksettings.SyntheticPasswordManager: java.lang.String SP_BLOB_NAME> = "spblob";

        <com.android.server.locksettings.SyntheticPasswordManager: java.lang.String SECDISCARDABLE_NAME> = "secdis";

        <com.android.server.locksettings.SyntheticPasswordManager: int SECDISCARDABLE_LENGTH> = 16384;

        <com.android.server.locksettings.SyntheticPasswordManager: int PASSWORD_TOKEN_LENGTH> = 32;

        <com.android.server.locksettings.SyntheticPasswordManager: int PASSWORD_SCRYPT_R> = 3;

        <com.android.server.locksettings.SyntheticPasswordManager: int PASSWORD_SCRYPT_P> = 1;

        <com.android.server.locksettings.SyntheticPasswordManager: int PASSWORD_SCRYPT_N> = 11;

        <com.android.server.locksettings.SyntheticPasswordManager: int PASSWORD_SALT_LENGTH> = 16;

        <com.android.server.locksettings.SyntheticPasswordManager: java.lang.String PASSWORD_METRICS_NAME> = "metrics";

        <com.android.server.locksettings.SyntheticPasswordManager: java.lang.String PASSWORD_DATA_NAME> = "pwd";

        <com.android.server.locksettings.SyntheticPasswordManager: int INVALID_WEAVER_SLOT> = -1;

        <com.android.server.locksettings.SyntheticPasswordManager: long DEFAULT_HANDLE> = 0L;

        $r0 = "default-password";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] DEFAULT_PASSWORD> = $r1;

        $r2 = "secdiscardable-transform";

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALISATION_SECDISCARDABLE> = $r3;

        $r4 = "keystore-password";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_KEY_STORE_PASSWORD> = $r5;

        $r6 = "user-gk-authentication";

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_USER_GK_AUTH> = $r7;

        $r8 = "sp-gk-authentication";

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_SP_GK_AUTH> = $r9;

        $r10 = "fbe-key";

        $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_FBE_KEY> = $r11;

        $r12 = "authsecret-hal";

        $r13 = virtualinvoke $r12.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_AUTHSECRET_KEY> = $r13;

        $r14 = "sp-split";

        $r15 = virtualinvoke $r14.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_SP_SPLIT> = $r15;

        $r16 = "pw-hash";

        $r17 = virtualinvoke $r16.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_PASSWORD_HASH> = $r17;

        $r18 = "e0-encryption";

        $r19 = virtualinvoke $r18.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_E0> = $r19;

        $r20 = "weaver-pwd";

        $r21 = virtualinvoke $r20.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALISATION_WEAVER_PASSWORD> = $r21;

        $r22 = "weaver-key";

        $r23 = virtualinvoke $r22.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALISATION_WEAVER_KEY> = $r23;

        $r24 = "weaver-token";

        $r25 = virtualinvoke $r24.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALISATION_WEAVER_TOKEN> = $r25;

        $r26 = "password-metrics";

        $r27 = virtualinvoke $r26.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_PASSWORD_METRICS> = $r27;

        $r28 = "android-synthetic-password-personalization-context";

        $r29 = virtualinvoke $r28.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALISATION_CONTEXT> = $r29;

        $r30 = "0123456789ABCDEF";

        $r31 = virtualinvoke $r30.<java.lang.String: byte[] getBytes()>();

        <com.android.server.locksettings.SyntheticPasswordManager: byte[] HEX_ARRAY> = $r31;

        return;
    }

    public void <init>(android.content.Context, com.android.server.locksettings.LockSettingsStorage, android.os.UserManager, com.android.server.locksettings.PasswordSlotManager)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        android.content.Context r1;
        com.android.server.locksettings.LockSettingsStorage r2;
        android.os.UserManager r3;
        com.android.server.locksettings.PasswordSlotManager r4;
        android.util.ArrayMap $r5;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.locksettings.LockSettingsStorage;

        r3 := @parameter2: android.os.UserManager;

        r4 := @parameter3: com.android.server.locksettings.PasswordSlotManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.locksettings.SyntheticPasswordManager: android.util.ArrayMap tokenMap> = $r5;

        r0.<com.android.server.locksettings.SyntheticPasswordManager: android.content.Context mContext> = r1;

        r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage> = r2;

        r0.<com.android.server.locksettings.SyntheticPasswordManager: android.os.UserManager mUserManager> = r3;

        r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.PasswordSlotManager mPasswordSlotManager> = r4;

        return;
    }

    static byte[] access$000()
    {
        byte[] $r0;

        $r0 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALISATION_CONTEXT>;

        return $r0;
    }

    static byte[] access$100()
    {
        byte[] $r0;

        $r0 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_KEY_STORE_PASSWORD>;

        return $r0;
    }

    static byte[] access$200(byte[])
    {
        byte[] r0, $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager: byte[] bytesToHex(byte[])>(r0);

        return $r1;
    }

    static byte[] access$300()
    {
        byte[] $r0;

        $r0 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_SP_GK_AUTH>;

        return $r0;
    }

    static byte[] access$400()
    {
        byte[] $r0;

        $r0 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_FBE_KEY>;

        return $r0;
    }

    static byte[] access$500()
    {
        byte[] $r0;

        $r0 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_AUTHSECRET_KEY>;

        return $r0;
    }

    static byte[] access$600()
    {
        byte[] $r0;

        $r0 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_PASSWORD_HASH>;

        return $r0;
    }

    static byte[] access$700()
    {
        byte[] $r0;

        $r0 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_PASSWORD_METRICS>;

        return $r0;
    }

    static byte[] access$800()
    {
        byte[] $r0;

        $r0 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_E0>;

        return $r0;
    }

    static byte[] access$900()
    {
        byte[] $r0;

        $r0 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_SP_SPLIT>;

        return $r0;
    }

    private static byte[] bytesToHex(byte[])
    {
        byte[] r0, r1, r2, $r4;
        short s0, $s5, $s10;
        int $i1, $i2, $i3, $i8, $i9, $i13, i14;
        byte $b4, $b6, $b7, $b11, $b12;
        java.lang.String $r3;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        $r3 = "null";

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        return $r4;

     label1:
        $i1 = lengthof r0;

        $i2 = $i1 * 2;

        r1 = newarray (byte)[$i2];

        i14 = 0;

     label2:
        $i3 = lengthof r0;

        if i14 >= $i3 goto label3;

        $b4 = r0[i14];

        s0 = $b4 & 255;

        r2 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] HEX_ARRAY>;

        $i8 = i14 * 2;

        $s5 = s0 >>> 4;

        $b6 = r2[$s5];

        $b7 = (byte) $b6;

        r1[$i8] = $b7;

        $i9 = i14 * 2;

        $i13 = $i9 + 1;

        $s10 = s0 & 15;

        $b11 = r2[$s10];

        $b12 = (byte) $b11;

        r1[$i13] = $b12;

        i14 = i14 + 1;

        goto label2;

     label3:
        return r1;
    }

    private byte[] computePasswordToken(com.android.internal.widget.LockscreenCredential, com.android.server.locksettings.SyntheticPasswordManager$PasswordData)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        com.android.server.locksettings.SyntheticPasswordManager$PasswordData r1;
        boolean $z0;
        byte $b0, $b1, $b2;
        int $i3, $i4, $i5;
        byte[] $r2, $r3, r5;
        com.android.internal.widget.LockscreenCredential r4;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r4 := @parameter0: com.android.internal.widget.LockscreenCredential;

        r1 := @parameter1: com.android.server.locksettings.SyntheticPasswordManager$PasswordData;

        $z0 = virtualinvoke r4.<com.android.internal.widget.LockscreenCredential: boolean isNone()>();

        if $z0 == 0 goto label1;

        r5 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] DEFAULT_PASSWORD>;

        goto label2;

     label1:
        r5 = virtualinvoke r4.<com.android.internal.widget.LockscreenCredential: byte[] getCredential()>();

     label2:
        $r2 = r1.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte[] salt>;

        $b0 = r1.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte scryptN>;

        $i5 = 1 << $b0;

        $b1 = r1.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte scryptR>;

        $i4 = 1 << $b1;

        $b2 = r1.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte scryptP>;

        $i3 = 1 << $b2;

        $r3 = virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] scrypt(byte[],byte[],int,int,int,int)>(r5, $r2, $i5, $i4, $i3, 32);

        return $r3;
    }

    private byte[] createSecdiscardable(long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1;
        byte[] r1;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager: byte[] secureRandom(int)>(16384);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveSecdiscardable(long,byte[],int)>(l0, r1, i1);

        return r1;
    }

    private void createSyntheticPasswordBlob(long, byte, com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken, byte[], long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0, l2;
        byte b1, $b7, $b8, $b9, $b11;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken r1;
        int i3, $i4, $i5, $i6, $i10;
        java.lang.String $r2;
        byte[] r3, r4, r5, r6;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        b1 := @parameter1: byte;

        r1 := @parameter2: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken;

        r3 := @parameter3: byte[];

        l2 := @parameter4: long;

        i3 := @parameter5: int;

        if b1 != 1 goto label1;

        r4 = virtualinvoke r1.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: byte[] getEscrowSecret()>();

        goto label2;

     label1:
        r4 = virtualinvoke r1.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: byte[] getSyntheticPassword()>();

     label2:
        $r2 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: java.lang.String getHandleName(long)>(l0);

        r5 = virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] createSPBlob(java.lang.String,byte[],byte[],long)>($r2, r4, r3, l2);

        $i4 = lengthof r5;

        $i5 = $i4 + 1;

        $i6 = $i5 + 1;

        r6 = newarray (byte)[$i6];

        $b7 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: byte access$1200(com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken)>(r1);

        if $b7 != 3 goto label3;

        $b11 = (byte) 3;

        r6[0] = $b11;

        goto label4;

     label3:
        $b8 = (byte) 2;

        r6[0] = $b8;

     label4:
        $b9 = (byte) b1;

        r6[1] = $b9;

        $i10 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r6, 2, $i10);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveState(java.lang.String,byte[],long,int)>("spblob", r6, l0, i3);

        return;
    }

    private void destroyState(java.lang.String, long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        java.lang.String r1;
        long l0;
        int i1;
        com.android.server.locksettings.LockSettingsStorage $r2;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage>;

        virtualinvoke $r2.<com.android.server.locksettings.LockSettingsStorage: void deleteSyntheticPasswordState(int,long,java.lang.String)>(i1, l0, r1);

        return;
    }

    private void destroySyntheticPassword(long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroyState(java.lang.String,long,int)>("spblob", l0, i1);

        $r1 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: java.lang.String getHandleName(long)>(l0);

        virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroySPBlobKey(java.lang.String)>($r1);

        $z0 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean hasState(java.lang.String,long,int)>("weaver", l0, i1);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroyWeaverSlot(long,int)>(l0, i1);

     label1:
        return;
    }

    private void destroyWeaverSlot(long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1, i2;
        java.util.Set $r1;
        java.lang.Integer $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r9;
        java.lang.String $r8, $r14;
        com.android.server.locksettings.PasswordSlotManager $r16;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: int loadWeaverSlot(long,int)>(l0, i1);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroyState(java.lang.String,long,int)>("weaver", l0, i1);

        if i2 == -1 goto label2;

        $r1 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: java.util.Set getUsedWeaverSlots()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destroy weaver slot ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r14);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] weaverEnroll(int,byte[],byte[])>(i2, null, null);

        $r16 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.PasswordSlotManager mPasswordSlotManager>;

        virtualinvoke $r16.<com.android.server.locksettings.PasswordSlotManager: void markSlotDeleted(int)>(i2);

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip destroying reused weaver slot ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r8);

     label2:
        return;
    }

    private int fakeUid(int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0, $i1;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        i0 := @parameter0: int;

        $i1 = 100000 + i0;

        return $i1;
    }

    protected static byte[] fromByteArrayList(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        byte[] r1;
        int $i0, $i1, i3;
        java.lang.Object $r2;
        java.lang.Byte $r3;
        byte $b2;

        r0 := @parameter0: java.util.ArrayList;

        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        r1 = newarray (byte)[$i0];

        i3 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label2;

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r3 = (java.lang.Byte) $r2;

        $b2 = virtualinvoke $r3.<java.lang.Byte: byte byteValue()>();

        r1[i3] = $b2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static long generateHandle()
    {
        long l0;
        java.security.SecureRandom $r1;
        byte $b1;

        $r1 = new java.security.SecureRandom;

        specialinvoke $r1.<java.security.SecureRandom: void <init>()>();

     label1:
        l0 = virtualinvoke $r1.<java.security.SecureRandom: long nextLong()>();

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label2;

        return l0;

     label2:
        goto label1;
    }

    static int getFrpCredentialType(byte[])
    {
        byte[] r0;
        com.android.server.locksettings.SyntheticPasswordManager$PasswordData $r1;
        int $i0;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return -1;

     label1:
        $r1 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager$PasswordData: com.android.server.locksettings.SyntheticPasswordManager$PasswordData fromBytes(byte[])>(r0);

        $i0 = $r1.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: int credentialType>;

        return $i0;
    }

    private java.lang.String getHandleName(long)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        java.lang.Object[] $r1;
        java.lang.Long $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = "synthetic_password_";

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r1[1] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%x", $r1);

        return $r3;
    }

    private int getNextAvailableWeaverSlot()
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        java.util.Set r1, $r3;
        com.android.server.locksettings.PasswordSlotManager $r2;
        android.hardware.weaver.V1_0.WeaverConfig $r4;
        int $i0, i1;
        java.lang.IllegalStateException $r5;
        java.lang.Integer $r6;
        boolean $z1;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: java.util.Set getUsedWeaverSlots()>();

        $r2 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.PasswordSlotManager mPasswordSlotManager>;

        $r3 = virtualinvoke $r2.<com.android.server.locksettings.PasswordSlotManager: java.util.Set getUsedSlots()>();

        interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r3);

        i1 = 0;

     label1:
        $r4 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig>;

        $i0 = $r4.<android.hardware.weaver.V1_0.WeaverConfig: int slots>;

        if i1 >= $i0 goto label3;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z1 != 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Run out of weaver slots.");

        throw $r5;
    }

    private java.util.Set getUsedWeaverSlots()
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        java.util.Iterator r2, r16;
        java.util.Map$Entry r3;
        com.android.server.locksettings.LockSettingsStorage $r4;
        java.util.HashSet $r5;
        java.util.Set $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8, $r10, $r12;
        java.util.List $r9;
        java.lang.Long $r11;
        long $l0;
        java.lang.Integer $r13, $r14;
        int $i1, $i2;
        java.util.Map r15;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        $r4 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage>;

        r15 = virtualinvoke $r4.<com.android.server.locksettings.LockSettingsStorage: java.util.Map listSyntheticPasswordHandlesForAllUsers(java.lang.String)>("weaver");

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $r6 = interfaceinvoke r15.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.util.List) $r8;

        r16 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.Long) $r10;

        $l0 = virtualinvoke $r11.<java.lang.Long: long longValue()>();

        $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.Integer) $r12;

        $i1 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i2 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: int loadWeaverSlot(long,int)>($l0, $i1);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>($r14);

        goto label2;

     label3:
        goto label1;

     label4:
        return $r5;
    }

    private boolean hasPasswordMetrics(long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1;
        boolean $z0;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean hasState(java.lang.String,long,int)>("metrics", l0, i1);

        return $z0;
    }

    private boolean hasState(java.lang.String, long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        java.lang.String r1;
        long l0;
        int i1;
        byte[] $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $r2 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadState(java.lang.String,long,int)>(r1, l0, i1);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(byte[])>($r2);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    private boolean isWeaverAvailable()
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0;
        android.hardware.weaver.V1_0.IWeaver $r2, $r3;
        android.hardware.weaver.V1_0.WeaverConfig $r4;
        java.lang.Throwable $r5;
        boolean z0;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.IWeaver mWeaver>;

        if $r2 != null goto label2;

        virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void initWeaverService()>();

     label2:
        $r3 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.IWeaver mWeaver>;

        if $r3 == null goto label4;

        $r4 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig>;

        i0 = $r4.<android.hardware.weaver.V1_0.WeaverConfig: int slots>;

     label3:
        if i0 <= 0 goto label4;

        z0 = 1;

        goto label5;

     label4:
        z0 = 0;

     label5:
        exitmonitor r0;

        return z0;

     label6:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
    }

    static void lambda$weaverVerify$1(com.android.internal.widget.VerifyCredentialResponse[], int, int, android.hardware.weaver.V1_0.WeaverReadResponse)
    {
        int i0, i1, $i3, $i4, $i7;
        android.hardware.weaver.V1_0.WeaverReadResponse r0;
        com.android.internal.widget.VerifyCredentialResponse $r1, $r4, $r9, $r14, $r19, $r24;
        java.util.ArrayList $r2;
        byte[] $r3;
        java.lang.StringBuilder $r5, $r10, $r15, $r20, $r25;
        java.lang.String $r8, $r13, $r18, $r23, $r30;
        com.android.internal.widget.VerifyCredentialResponse[] r31;

        r31 := @parameter0: com.android.internal.widget.VerifyCredentialResponse[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: android.hardware.weaver.V1_0.WeaverReadResponse;

        if i1 == 0 goto label5;

        if i1 == 1 goto label4;

        if i1 == 2 goto label2;

        if i1 == 3 goto label1;

        $r24 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        r31[0] = $r24;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("weaver read unknown status ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", slot: ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r30);

        goto label6;

     label1:
        $r19 = new com.android.internal.widget.VerifyCredentialResponse;

        $i7 = r0.<android.hardware.weaver.V1_0.WeaverReadResponse: int timeout>;

        specialinvoke $r19.<com.android.internal.widget.VerifyCredentialResponse: void <init>(int)>($i7);

        r31[0] = $r19;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("weaver read failed (THROTTLE), slot: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r23);

        goto label6;

     label2:
        $i3 = r0.<android.hardware.weaver.V1_0.WeaverReadResponse: int timeout>;

        if $i3 != 0 goto label3;

        $r14 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        r31[0] = $r14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("weaver read failed (INCORRECT_KEY), slot: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r18);

        goto label6;

     label3:
        $r9 = new com.android.internal.widget.VerifyCredentialResponse;

        $i4 = r0.<android.hardware.weaver.V1_0.WeaverReadResponse: int timeout>;

        specialinvoke $r9.<com.android.internal.widget.VerifyCredentialResponse: void <init>(int)>($i4);

        r31[0] = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("weaver read failed (INCORRECT_KEY/THROTTLE), slot: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r13);

        goto label6;

     label4:
        $r4 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        r31[0] = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("weaver read failed (FAILED), slot: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r8);

        goto label6;

     label5:
        $r1 = new com.android.internal.widget.VerifyCredentialResponse;

        $r2 = r0.<android.hardware.weaver.V1_0.WeaverReadResponse: java.util.ArrayList value>;

        $r3 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager: byte[] fromByteArrayList(java.util.ArrayList)>($r2);

        specialinvoke $r1.<com.android.internal.widget.VerifyCredentialResponse: void <init>(byte[])>($r3);

        r31[0] = $r1;

     label6:
        return;
    }

    private boolean loadEscrowData(com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken r1;
        int i0;
        byte[] r2, r3;
        boolean z0;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken;

        i0 := @parameter1: int;

        r2 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadState(java.lang.String,long,int)>("e0", 0L, i0);

        r3 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadState(java.lang.String,long,int)>("p1", 0L, i0);

        virtualinvoke r1.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: void setEscrowData(byte[],byte[])>(r2, r3);

        if r2 == null goto label1;

        if r3 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private byte[] loadSecdiscardable(long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1;
        byte[] $r1;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadState(java.lang.String,long,int)>("secdis", l0, i1);

        return $r1;
    }

    private byte[] loadState(java.lang.String, long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        java.lang.String r1;
        long l0;
        int i1;
        com.android.server.locksettings.LockSettingsStorage $r2;
        byte[] $r3;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage>;

        $r3 = virtualinvoke $r2.<com.android.server.locksettings.LockSettingsStorage: byte[] readSyntheticPasswordState(int,long,java.lang.String)>(i1, l0, r1);

        return $r3;
    }

    private byte[] loadSyntheticPasswordHandle(int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0;
        byte[] $r1;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadState(java.lang.String,long,int)>("handle", 0L, i0);

        return $r1;
    }

    private int loadWeaverSlot(long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1, $i2, $i3, $i5;
        java.nio.ByteBuffer r1;
        byte $b4;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        byte[] r8;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r8 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadState(java.lang.String,long,int)>("weaver", l0, i1);

        if r8 == null goto label3;

        $i2 = lengthof r8;

        if $i2 == 5 goto label1;

        goto label3;

     label1:
        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(5);

        $i3 = lengthof r8;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r8, 0, $i3);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $b4 = virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();

        if $b4 == 1 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid weaver slot version of handle ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r7);

        return -1;

     label2:
        $i5 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        return $i5;

     label3:
        return -1;
    }

    private byte[] passwordTokenToGkInput(byte[])
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        byte[] r1, $r3, $r4;
        byte[][] $r2;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: byte[];

        $r3 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALIZATION_USER_GK_AUTH>;

        $r2 = newarray (byte[])[1];

        $r2[0] = r1;

        $r4 = staticinvoke <com.android.server.locksettings.SyntheticPasswordCrypto: byte[] personalisedHash(byte[],byte[][])>($r3, $r2);

        return $r4;
    }

    private byte[] passwordTokenToWeaverKey(byte[])
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        byte[][] $r1;
        byte[] $r2, $r6, r7, r8;
        android.hardware.weaver.V1_0.WeaverConfig $r3, $r5;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r7 := @parameter0: byte[];

        $r2 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALISATION_WEAVER_KEY>;

        $r1 = newarray (byte[])[1];

        $r1[0] = r7;

        r8 = staticinvoke <com.android.server.locksettings.SyntheticPasswordCrypto: byte[] personalisedHash(byte[],byte[][])>($r2, $r1);

        $i1 = lengthof r8;

        $r3 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig>;

        $i0 = $r3.<android.hardware.weaver.V1_0.WeaverConfig: int keySize>;

        if $i1 < $i0 goto label1;

        $r5 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig>;

        $i2 = $r5.<android.hardware.weaver.V1_0.WeaverConfig: int keySize>;

        $r6 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r8, $i2);

        return $r6;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("weaver key length too small");

        throw $r4;
    }

    private void saveEscrowData(com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken r1;
        int i0;
        byte[] $r2, $r3;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken;

        i0 := @parameter1: int;

        $r2 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: byte[] access$1000(com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken)>(r1);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveState(java.lang.String,byte[],long,int)>("e0", $r2, 0L, i0);

        $r3 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: byte[] access$1100(com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken)>(r1);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveState(java.lang.String,byte[],long,int)>("p1", $r3, 0L, i0);

        return;
    }

    private void savePasswordMetrics(com.android.internal.widget.LockscreenCredential, com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken, long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1;
        com.android.server.locksettings.VersionedPasswordMetrics $r1;
        byte[] $r2, $r3, r6, r7;
        com.android.internal.widget.LockscreenCredential r4;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken r5;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r4 := @parameter0: com.android.internal.widget.LockscreenCredential;

        r5 := @parameter1: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        r6 = virtualinvoke r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: byte[] deriveMetricsKey()>();

        $r1 = new com.android.server.locksettings.VersionedPasswordMetrics;

        specialinvoke $r1.<com.android.server.locksettings.VersionedPasswordMetrics: void <init>(com.android.internal.widget.LockscreenCredential)>(r4);

        r7 = virtualinvoke $r1.<com.android.server.locksettings.VersionedPasswordMetrics: byte[] serialize()>();

        $r2 = newarray (byte)[0];

        $r3 = staticinvoke <com.android.server.locksettings.SyntheticPasswordCrypto: byte[] encrypt(byte[],byte[],byte[])>(r6, $r2, r7);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveState(java.lang.String,byte[],long,int)>("metrics", $r3, l0, i1);

        return;
    }

    private void saveSecdiscardable(long, byte[], int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        byte[] r1;
        int i1;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveState(java.lang.String,byte[],long,int)>("secdis", r1, l0, i1);

        return;
    }

    private void saveState(java.lang.String, byte[], long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        java.lang.String r1;
        byte[] r2;
        long l0;
        int i1;
        com.android.server.locksettings.LockSettingsStorage $r3;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        $r3 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage>;

        virtualinvoke $r3.<com.android.server.locksettings.LockSettingsStorage: void writeSyntheticPasswordState(int,long,java.lang.String,byte[])>(i1, l0, r1, r2);

        return;
    }

    private void saveSyntheticPasswordHandle(byte[], int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        byte[] r1;
        int i0;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveState(java.lang.String,byte[],long,int)>("handle", r1, 0L, i0);

        return;
    }

    private void saveWeaverSlot(int, long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0, i2;
        long l1;
        java.nio.ByteBuffer r1;
        byte[] $r4;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(5);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i0);

        $r4 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveState(java.lang.String,byte[],long,int)>("weaver", $r4, l1, i2);

        return;
    }

    protected static byte[] secureRandom(int)
    {
        int i0;
        java.security.SecureRandom $r0;
        java.lang.Throwable $r1;
        byte[] r2;
        java.security.NoSuchAlgorithmException r4;

        i0 := @parameter0: int;

     label1:
        $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>("SHA1PRNG");

        r2 = virtualinvoke $r0.<java.security.SecureRandom: byte[] generateSeed(int)>(i0);

     label2:
        return r2;

     label3:
        $r1 := @caughtexception;

        r4 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private void synchronizeFrpPassword(com.android.server.locksettings.SyntheticPasswordManager$PasswordData, int, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        com.android.server.locksettings.SyntheticPasswordManager$PasswordData r1;
        int i0, i1, $i2;
        com.android.server.locksettings.LockSettingsStorage $r2, $r7, $r8;
        com.android.server.PersistentDataBlockManagerInternal $r3;
        android.os.UserManager $r4;
        android.content.Context $r5;
        android.content.pm.UserInfo $r6;
        boolean $z0;
        byte[] $r9;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: com.android.server.locksettings.SyntheticPasswordManager$PasswordData;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage>;

        $r3 = virtualinvoke $r2.<com.android.server.locksettings.LockSettingsStorage: com.android.server.PersistentDataBlockManagerInternal getPersistentDataBlockManager()>();

        if $r3 == null goto label2;

        $r5 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.content.Context mContext>;

        $r4 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.os.UserManager mUserManager>;

        $r6 = virtualinvoke $r4.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i1);

        $z0 = staticinvoke <com.android.internal.widget.LockPatternUtils: boolean userOwnsFrpCredential(android.content.Context,android.content.pm.UserInfo)>($r5, $r6);

        if $z0 == 0 goto label2;

        $i2 = r1.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: int credentialType>;

        if $i2 == -1 goto label1;

        $r8 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage>;

        $r9 = virtualinvoke r1.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte[] toBytes()>();

        virtualinvoke $r8.<com.android.server.locksettings.LockSettingsStorage: void writePersistentDataBlock(int,int,int,byte[])>(1, i1, i0, $r9);

        goto label2;

     label1:
        $r7 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage>;

        virtualinvoke $r7.<com.android.server.locksettings.LockSettingsStorage: void writePersistentDataBlock(int,int,int,byte[])>(0, i1, 0, null);

     label2:
        return;
    }

    private void synchronizeWeaverFrpPassword(com.android.server.locksettings.SyntheticPasswordManager$PasswordData, int, int, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        com.android.server.locksettings.SyntheticPasswordManager$PasswordData r1;
        int i0, i1, i2, $i3;
        com.android.server.locksettings.LockSettingsStorage $r2, $r7, $r8;
        com.android.server.PersistentDataBlockManagerInternal $r3;
        android.os.UserManager $r4;
        android.content.Context $r5;
        android.content.pm.UserInfo $r6;
        boolean $z0;
        byte[] $r9;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: com.android.server.locksettings.SyntheticPasswordManager$PasswordData;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage>;

        $r3 = virtualinvoke $r2.<com.android.server.locksettings.LockSettingsStorage: com.android.server.PersistentDataBlockManagerInternal getPersistentDataBlockManager()>();

        if $r3 == null goto label2;

        $r5 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.content.Context mContext>;

        $r4 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.os.UserManager mUserManager>;

        $r6 = virtualinvoke $r4.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i1);

        $z0 = staticinvoke <com.android.internal.widget.LockPatternUtils: boolean userOwnsFrpCredential(android.content.Context,android.content.pm.UserInfo)>($r5, $r6);

        if $z0 == 0 goto label2;

        $i3 = r1.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: int credentialType>;

        if $i3 == -1 goto label1;

        $r8 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage>;

        $r9 = virtualinvoke r1.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte[] toBytes()>();

        virtualinvoke $r8.<com.android.server.locksettings.LockSettingsStorage: void writePersistentDataBlock(int,int,int,byte[])>(2, i2, i0, $r9);

        goto label2;

     label1:
        $r7 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage>;

        virtualinvoke $r7.<com.android.server.locksettings.LockSettingsStorage: void writePersistentDataBlock(int,int,int,byte[])>(0, 0, 0, null);

     label2:
        return;
    }

    protected static java.util.ArrayList toByteArrayList(byte[])
    {
        byte[] r0;
        java.util.ArrayList $r2;
        int $i0, $i1, i3;
        byte $b2;
        java.lang.Byte $r3;

        r0 := @parameter0: byte[];

        $r2 = new java.util.ArrayList;

        $i0 = lengthof r0;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        i3 = 0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label2;

        $b2 = r0[i3];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i3 = i3 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private byte[] transformUnderSecdiscardable(byte[], byte[])
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        byte[] r1, r2, $r4, r5, r6;
        byte[][] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: byte[];

        r5 := @parameter1: byte[];

        $r4 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALISATION_SECDISCARDABLE>;

        $r3 = newarray (byte[])[1];

        $r3[0] = r5;

        r2 = staticinvoke <com.android.server.locksettings.SyntheticPasswordCrypto: byte[] personalisedHash(byte[],byte[][])>($r4, $r3);

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        $i2 = $i1 + $i0;

        r6 = newarray (byte)[$i2];

        $i3 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r6, 0, $i3);

        $i5 = lengthof r1;

        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r6, $i5, $i4);

        return r6;
    }

    private byte[] transformUnderWeaverSecret(byte[], byte[])
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        byte[] r1, r2, $r4, r5, r6;
        byte[][] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: byte[];

        r5 := @parameter1: byte[];

        $r4 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALISATION_WEAVER_PASSWORD>;

        $r3 = newarray (byte[])[1];

        $r3[0] = r5;

        r2 = staticinvoke <com.android.server.locksettings.SyntheticPasswordCrypto: byte[] personalisedHash(byte[],byte[][])>($r4, $r3);

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        $i2 = $i1 + $i0;

        r6 = newarray (byte)[$i2];

        $i3 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r6, 0, $i3);

        $i5 = lengthof r1;

        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r6, $i5, $i4);

        return r6;
    }

    private com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken unwrapSyntheticPasswordBlob(long, byte, byte[], long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0, l2;
        byte b1, b4, $b10;
        int i3, $i5, $i9;
        java.lang.IllegalArgumentException $r2, $r22;
        java.lang.String $r3, $r11, $r15, $r19, $r20;
        byte[] $r4, $r21, r23, r24, r25;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken $r5;
        java.lang.StringBuilder $r6, $r12, $r16;
        boolean $z0;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        b1 := @parameter1: byte;

        r23 := @parameter2: byte[];

        l2 := @parameter3: long;

        i3 := @parameter4: int;

        r24 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadState(java.lang.String,long,int)>("spblob", l0, i3);

        if r24 != null goto label01;

        return null;

     label01:
        b4 = r24[0];

        if b4 == 3 goto label03;

        if b4 == 2 goto label03;

        if b4 != 1 goto label02;

        goto label03;

     label02:
        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown blob version");

        throw $r22;

     label03:
        $b10 = r24[1];

        if $b10 != b1 goto label11;

        if b4 != 1 goto label04;

        $r20 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: java.lang.String getHandleName(long)>(l0);

        $i9 = lengthof r24;

        $r21 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r24, 2, $i9);

        r25 = staticinvoke <com.android.server.locksettings.SyntheticPasswordCrypto: byte[] decryptBlobV1(java.lang.String,byte[],byte[])>($r20, $r21, r23);

        goto label05;

     label04:
        $r3 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: java.lang.String getHandleName(long)>(l0);

        $i5 = lengthof r24;

        $r4 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r24, 2, $i5);

        r25 = virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] decryptSPBlob(java.lang.String,byte[],byte[])>($r3, $r4, r23);

     label05:
        if r25 != null goto label06;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fail to decrypt SP for user ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r19);

        return null;

     label06:
        $r5 = new com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken;

        specialinvoke $r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: void <init>(byte)>(b4);

        if b1 != 1 goto label08;

        $z0 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean loadEscrowData(com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken,int)>($r5, i3);

        if $z0 != 0 goto label07;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User is not escrowable: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r15);

        return null;

     label07:
        virtualinvoke $r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: void recreateFromEscrow(byte[])>(r25);

        goto label09;

     label08:
        virtualinvoke $r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: void recreateDirectly(byte[])>(r25);

     label09:
        if b4 != 1 goto label10;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrade v1 SP blob for user ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r11);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void createSyntheticPasswordBlob(long,byte,com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken,byte[],long,int)>(l0, b1, $r5, r23, l2, i3);

        goto label10;

     label10:
        return $r5;

     label11:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid blob type");

        throw $r2;
    }

    private byte[] weaverEnroll(int, byte[], byte[])
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0, i1, $i2, $i3, $i4, $i6, $i7;
        byte[] r1, r17, r18;
        java.lang.IllegalArgumentException $r2, $r5;
        android.hardware.weaver.V1_0.WeaverConfig $r3, $r4, $r14, $r15;
        android.hardware.weaver.V1_0.IWeaver $r6;
        java.util.ArrayList $r7, $r8;
        java.lang.String $r13;
        android.os.RemoteException $r16;
        java.lang.StringBuilder r19;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        i0 := @parameter0: int;

        r17 := @parameter1: byte[];

        r1 := @parameter2: byte[];

        if i0 == -1 goto label10;

        $r3 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig>;

        $i2 = $r3.<android.hardware.weaver.V1_0.WeaverConfig: int slots>;

        if i0 >= $i2 goto label10;

        if r17 != null goto label01;

        $r15 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig>;

        $i7 = $r15.<android.hardware.weaver.V1_0.WeaverConfig: int keySize>;

        r17 = newarray (byte)[$i7];

        goto label02;

     label01:
        $i4 = lengthof r17;

        $r4 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig>;

        $i3 = $r4.<android.hardware.weaver.V1_0.WeaverConfig: int keySize>;

        if $i4 != $i3 goto label09;

     label02:
        r18 = r1;

        if r1 != null goto label03;

        $r14 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig>;

        $i6 = $r14.<android.hardware.weaver.V1_0.WeaverConfig: int valueSize>;

        r18 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager: byte[] secureRandom(int)>($i6);

     label03:
        $r6 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.IWeaver mWeaver>;

        $r7 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager: java.util.ArrayList toByteArrayList(byte[])>(r17);

        $r8 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager: java.util.ArrayList toByteArrayList(byte[])>(r18);

        i1 = interfaceinvoke $r6.<android.hardware.weaver.V1_0.IWeaver: int write(int,java.util.ArrayList,java.util.ArrayList)>(i0, $r7, $r8);

     label04:
        if i1 == 0 goto label07;

     label05:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("weaver write failed, slot: ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status: ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r13);

     label06:
        return null;

     label07:
        return r18;

     label08:
        $r16 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SyntheticPasswordManager", "weaver write failed", $r16);

        return null;

     label09:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid key size for weaver");

        throw $r5;

     label10:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid slot for weaver");

        throw $r2;

        catch android.os.RemoteException from label03 to label04 with label08;
        catch android.os.RemoteException from label05 to label06 with label08;
    }

    private com.android.internal.widget.VerifyCredentialResponse weaverVerify(int, byte[])
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0, $i1, $i2, $i3, $i4;
        com.android.internal.widget.VerifyCredentialResponse[] r1;
        java.util.ArrayList r2;
        java.lang.IllegalArgumentException $r3, $r6;
        android.hardware.weaver.V1_0.WeaverConfig $r4, $r5, $r8;
        com.android.internal.widget.VerifyCredentialResponse $r7, $r10;
        android.os.RemoteException $r9;
        java.lang.StringBuilder $r11;
        java.lang.String $r14;
        byte[] r15;
        android.hardware.weaver.V1_0.IWeaver r16;
        com.android.server.locksettings._$$Lambda$SyntheticPasswordManager$aWnbfYziDTrRrLqWFePMTj6_dy0 r17;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        i0 := @parameter0: int;

        r15 := @parameter1: byte[];

        if i0 == -1 goto label8;

        $r4 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig>;

        $i1 = $r4.<android.hardware.weaver.V1_0.WeaverConfig: int slots>;

        if i0 >= $i1 goto label8;

        if r15 != null goto label1;

        $r8 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig>;

        $i4 = $r8.<android.hardware.weaver.V1_0.WeaverConfig: int keySize>;

        r15 = newarray (byte)[$i4];

        goto label2;

     label1:
        $i3 = lengthof r15;

        $r5 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig>;

        $i2 = $r5.<android.hardware.weaver.V1_0.WeaverConfig: int keySize>;

        if $i3 != $i2 goto label7;

     label2:
        r1 = newarray (com.android.internal.widget.VerifyCredentialResponse)[1];

     label3:
        r16 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.IWeaver mWeaver>;

        r2 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager: java.util.ArrayList toByteArrayList(byte[])>(r15);

        r17 = new com.android.server.locksettings._$$Lambda$SyntheticPasswordManager$aWnbfYziDTrRrLqWFePMTj6_dy0;

        specialinvoke r17.<com.android.server.locksettings._$$Lambda$SyntheticPasswordManager$aWnbfYziDTrRrLqWFePMTj6_dy0: void <init>(com.android.internal.widget.VerifyCredentialResponse[],int)>(r1, i0);

        interfaceinvoke r16.<android.hardware.weaver.V1_0.IWeaver: void read(int,java.util.ArrayList,android.hardware.weaver.V1_0.IWeaver$readCallback)>(i0, r2, r17);

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

        $r10 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        r1[0] = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("weaver read failed, slot: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SyntheticPasswordManager", $r14, $r9);

     label6:
        $r7 = r1[0];

        return $r7;

     label7:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid key size for weaver");

        throw $r6;

     label8:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid slot for weaver");

        throw $r3;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public boolean activateTokenBasedSyntheticPassword(long, com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken r1;
        int i1, i2;
        com.android.server.locksettings.SyntheticPasswordManager$TokenData r2;
        android.util.ArrayMap $r4, $r6, $r9, $r14, $r17;
        java.lang.Integer $r5, $r7, $r15;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8, $r11, $r16;
        java.lang.Long $r10, $r18;
        byte[] $r12, $r13, $r28, $r29;
        com.android.internal.widget.LockPatternUtils$EscrowTokenStateChangeCallback $r20, $r21;
        java.lang.StringBuilder $r22;
        java.lang.String $r27;
        com.android.server.locksettings.PasswordSlotManager $r30;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken;

        i1 := @parameter2: int;

        $r4 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.util.ArrayMap tokenMap>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r6 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.util.ArrayMap tokenMap>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r8 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r7);

        $r9 = (android.util.ArrayMap) $r8;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r11 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r10);

        r2 = (com.android.server.locksettings.SyntheticPasswordManager$TokenData) $r11;

        if r2 != null goto label2;

        return 0;

     label2:
        $z1 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean loadEscrowData(com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken,int)>(r1, i1);

        if $z1 != 0 goto label3;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SyntheticPasswordManager", "User is not escrowable");

        return 0;

     label3:
        $z2 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean isWeaverAvailable()>();

        if $z2 == 0 goto label5;

        i2 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: int getNextAvailableWeaverSlot()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Weaver enroll token to slot ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r27);

        $r28 = r2.<com.android.server.locksettings.SyntheticPasswordManager$TokenData: byte[] weaverSecret>;

        $r29 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] weaverEnroll(int,byte[],byte[])>(i2, null, $r28);

        if $r29 != null goto label4;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", "Failed to enroll weaver secret when activating token");

        return 0;

     label4:
        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveWeaverSlot(int,long,int)>(i2, l0, i1);

        $r30 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.PasswordSlotManager mPasswordSlotManager>;

        virtualinvoke $r30.<com.android.server.locksettings.PasswordSlotManager: void markSlotInUse(int)>(i2);

     label5:
        $r12 = r2.<com.android.server.locksettings.SyntheticPasswordManager$TokenData: byte[] secdiscardableOnDisk>;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveSecdiscardable(long,byte[],int)>(l0, $r12, i1);

        $r13 = r2.<com.android.server.locksettings.SyntheticPasswordManager$TokenData: byte[] aggregatedSecret>;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void createSyntheticPasswordBlob(long,byte,com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken,byte[],long,int)>(l0, 1, r1, $r13, 0L, i1);

        $r14 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.util.ArrayMap tokenMap>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r16 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r15);

        $r17 = (android.util.ArrayMap) $r16;

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r18);

        $r20 = r2.<com.android.server.locksettings.SyntheticPasswordManager$TokenData: com.android.internal.widget.LockPatternUtils$EscrowTokenStateChangeCallback mCallback>;

        if $r20 == null goto label6;

        $r21 = r2.<com.android.server.locksettings.SyntheticPasswordManager$TokenData: com.android.internal.widget.LockPatternUtils$EscrowTokenStateChangeCallback mCallback>;

        interfaceinvoke $r21.<com.android.internal.widget.LockPatternUtils$EscrowTokenStateChangeCallback: void onEscrowTokenActivated(long,int)>(l0, i1);

     label6:
        return 1;
    }

    public void clearSidForUser(int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroyState(java.lang.String,long,int)>("handle", 0L, i0);

        return;
    }

    public long createPasswordBasedSyntheticPassword(android.service.gatekeeper.IGateKeeperService, com.android.internal.widget.LockscreenCredential, com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        com.android.internal.widget.LockscreenCredential r1;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken r2;
        int i0, i2, $i3, $i4, $i5, $i6;
        long l1, l9;
        com.android.server.locksettings.SyntheticPasswordManager$PasswordData r3;
        byte[] r4, $r6, $r12, $r13, $r14, $r15, $r22, r34, r35;
        boolean $z0;
        java.lang.StringBuilder $r7, $r16, $r23;
        java.lang.IllegalStateException $r10, $r26, $r30;
        java.lang.String $r11, $r21, $r27;
        com.android.server.locksettings.PasswordSlotManager $r28;
        android.os.RemoteException $r29, $r31;
        android.service.gatekeeper.IGateKeeperService r32;
        android.service.gatekeeper.GateKeeperResponse r37;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r32 := @parameter0: android.service.gatekeeper.IGateKeeperService;

        r1 := @parameter1: com.android.internal.widget.LockscreenCredential;

        r2 := @parameter2: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken;

        i0 := @parameter3: int;

        l1 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager: long generateHandle()>();

        $i3 = virtualinvoke r1.<com.android.internal.widget.LockscreenCredential: int getType()>();

        r3 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager$PasswordData: com.android.server.locksettings.SyntheticPasswordManager$PasswordData create(int)>($i3);

        r4 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] computePasswordToken(com.android.internal.widget.LockscreenCredential,com.android.server.locksettings.SyntheticPasswordManager$PasswordData)>(r1, r3);

        $z0 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean isWeaverAvailable()>();

        if $z0 == 0 goto label2;

        i2 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: int getNextAvailableWeaverSlot()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Weaver enroll password to slot ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r21);

        $r22 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] passwordTokenToWeaverKey(byte[])>(r4);

        r34 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] weaverEnroll(int,byte[],byte[])>(i2, $r22, null);

        if r34 == null goto label1;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveWeaverSlot(int,long,int)>(i2, l1, i0);

        $r28 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.PasswordSlotManager mPasswordSlotManager>;

        virtualinvoke $r28.<com.android.server.locksettings.PasswordSlotManager: void markSlotInUse(int)>(i2);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void synchronizeWeaverFrpPassword(com.android.server.locksettings.SyntheticPasswordManager$PasswordData,int,int,int)>(r3, 0, i0, i2);

        r3.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte[] passwordHandle> = null;

        r35 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] transformUnderWeaverSecret(byte[],byte[])>(r4, r34);

        l9 = 0L;

        goto label7;

     label1:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fail to enroll user password under weaver ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r26 = new java.lang.IllegalStateException;

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label2:
        $i4 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: int fakeUid(int)>(i0);

        interfaceinvoke r32.<android.service.gatekeeper.IGateKeeperService: void clearSecureUserId(int)>($i4);

     label3:
        goto label5;

     label4:
        $r31 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SyntheticPasswordManager", "Failed to clear SID from gatekeeper");

     label5:
        $i5 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: int fakeUid(int)>(i0);

        $r6 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] passwordTokenToGkInput(byte[])>(r4);

        r37 = interfaceinvoke r32.<android.service.gatekeeper.IGateKeeperService: android.service.gatekeeper.GateKeeperResponse enroll(int,byte[],byte[],byte[])>($i5, null, null, $r6);

     label6:
        $i6 = virtualinvoke r37.<android.service.gatekeeper.GateKeeperResponse: int getResponseCode()>();

        if $i6 != 0 goto label8;

        $r12 = virtualinvoke r37.<android.service.gatekeeper.GateKeeperResponse: byte[] getPayload()>();

        r3.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte[] passwordHandle> = $r12;

        $r13 = r3.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte[] passwordHandle>;

        l9 = virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: long sidFromPasswordHandle(byte[])>($r13);

        $r14 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] createSecdiscardable(long,int)>(l1, i0);

        r35 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] transformUnderSecdiscardable(byte[],byte[])>(r4, $r14);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void synchronizeFrpPassword(com.android.server.locksettings.SyntheticPasswordManager$PasswordData,int,int)>(r3, 0, i0);

     label7:
        $r15 = virtualinvoke r3.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte[] toBytes()>();

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveState(java.lang.String,byte[],long,int)>("pwd", $r15, l1, i0);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void savePasswordMetrics(com.android.internal.widget.LockscreenCredential,com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken,long,int)>(r1, r2, l1, i0);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void createSyntheticPasswordBlob(long,byte,com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken,byte[],long,int)>(l1, 0, r2, r35, l9, i0);

        return l1;

     label8:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fail to enroll user password when creating SP for user ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label9:
        $r29 := @caughtexception;

        $r30 = new java.lang.IllegalStateException;

        specialinvoke $r30.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to enroll password for new SP blob", $r29);

        throw $r30;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch android.os.RemoteException from label5 to label6 with label9;
    }

    protected byte[] createSPBlob(java.lang.String, byte[], byte[], long)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        java.lang.String r1;
        byte[] r2, r3, $r4;
        long l0;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        l0 := @parameter3: long;

        $r4 = staticinvoke <com.android.server.locksettings.SyntheticPasswordCrypto: byte[] createBlob(java.lang.String,byte[],byte[],long)>(r1, r2, r3, l0);

        return $r4;
    }

    public long createTokenBasedSyntheticPassword(byte[], int, com.android.internal.widget.LockPatternUtils$EscrowTokenStateChangeCallback)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        byte[] r1, r4, $r8, $r16, $r17, $r18, $r19;
        int i0, $i2;
        com.android.internal.widget.LockPatternUtils$EscrowTokenStateChangeCallback r2;
        long l1;
        android.util.ArrayMap $r5, $r9, $r12, $r20, $r22;
        java.lang.Integer $r6, $r10, $r21;
        boolean $z0, $z1;
        com.android.server.locksettings.SyntheticPasswordManager$TokenData $r7;
        java.lang.Object $r11;
        java.lang.Long $r13;
        android.hardware.weaver.V1_0.WeaverConfig $r15;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.widget.LockPatternUtils$EscrowTokenStateChangeCallback;

        l1 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager: long generateHandle()>();

        $r5 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.util.ArrayMap tokenMap>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r20 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.util.ArrayMap tokenMap>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r22 = new android.util.ArrayMap;

        specialinvoke $r22.<android.util.ArrayMap: void <init>()>();

        virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22);

     label1:
        $r7 = new com.android.server.locksettings.SyntheticPasswordManager$TokenData;

        specialinvoke $r7.<com.android.server.locksettings.SyntheticPasswordManager$TokenData: void <init>()>();

        r4 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager: byte[] secureRandom(int)>(16384);

        $z1 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean isWeaverAvailable()>();

        if $z1 == 0 goto label2;

        $r15 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig>;

        $i2 = $r15.<android.hardware.weaver.V1_0.WeaverConfig: int valueSize>;

        $r16 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager: byte[] secureRandom(int)>($i2);

        $r7.<com.android.server.locksettings.SyntheticPasswordManager$TokenData: byte[] weaverSecret> = $r16;

        $r18 = $r7.<com.android.server.locksettings.SyntheticPasswordManager$TokenData: byte[] weaverSecret>;

        $r17 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALISATION_WEAVER_TOKEN>;

        $r19 = staticinvoke <com.android.server.locksettings.SyntheticPasswordCrypto: byte[] encrypt(byte[],byte[],byte[])>($r18, $r17, r4);

        $r7.<com.android.server.locksettings.SyntheticPasswordManager$TokenData: byte[] secdiscardableOnDisk> = $r19;

        goto label3;

     label2:
        $r7.<com.android.server.locksettings.SyntheticPasswordManager$TokenData: byte[] secdiscardableOnDisk> = r4;

        $r7.<com.android.server.locksettings.SyntheticPasswordManager$TokenData: byte[] weaverSecret> = null;

     label3:
        $r8 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] transformUnderSecdiscardable(byte[],byte[])>(r1, r4);

        $r7.<com.android.server.locksettings.SyntheticPasswordManager$TokenData: byte[] aggregatedSecret> = $r8;

        $r7.<com.android.server.locksettings.SyntheticPasswordManager$TokenData: com.android.internal.widget.LockPatternUtils$EscrowTokenStateChangeCallback mCallback> = r2;

        $r9 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.util.ArrayMap tokenMap>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r10);

        $r12 = (android.util.ArrayMap) $r11;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r7);

        return l1;
    }

    protected byte[] decryptSPBlob(java.lang.String, byte[], byte[])
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        java.lang.String r1;
        byte[] r2, r3, $r4;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        $r4 = staticinvoke <com.android.server.locksettings.SyntheticPasswordCrypto: byte[] decryptBlob(java.lang.String,byte[],byte[])>(r1, r2, r3);

        return $r4;
    }

    public void destroyEscrowData(int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroyState(java.lang.String,long,int)>("e0", 0L, i0);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroyState(java.lang.String,long,int)>("p1", 0L, i0);

        return;
    }

    public void destroyPasswordBasedSyntheticPassword(long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroySyntheticPassword(long,int)>(l0, i1);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroyState(java.lang.String,long,int)>("secdis", l0, i1);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroyState(java.lang.String,long,int)>("pwd", l0, i1);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroyState(java.lang.String,long,int)>("metrics", l0, i1);

        return;
    }

    protected void destroySPBlobKey(java.lang.String)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        java.lang.String r1;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.android.server.locksettings.SyntheticPasswordCrypto: void destroyBlobKey(java.lang.String)>(r1);

        return;
    }

    public void destroyTokenBasedSyntheticPassword(long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroySyntheticPassword(long,int)>(l0, i1);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroyState(java.lang.String,long,int)>("secdis", l0, i1);

        return;
    }

    public boolean existsHandle(long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1;
        boolean $z0;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean hasState(java.lang.String,long,int)>("spblob", l0, i1);

        return $z0;
    }

    int getCredentialType(long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1, $i2;
        com.android.server.locksettings.SyntheticPasswordManager$PasswordData $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        byte[] r6;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r6 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadState(java.lang.String,long,int)>("pwd", l0, i1);

        if r6 != null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getCredentialType: encountered empty password data for user ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r5);

        return -1;

     label1:
        $r1 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager$PasswordData: com.android.server.locksettings.SyntheticPasswordManager$PasswordData fromBytes(byte[])>(r6);

        $i2 = $r1.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: int credentialType>;

        return $i2;
    }

    public android.app.admin.PasswordMetrics getPasswordMetrics(com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken, long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1;
        byte[] r1, $r2, $r3, r7;
        com.android.server.locksettings.VersionedPasswordMetrics $r4;
        android.app.admin.PasswordMetrics $r5;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken r6;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r6 := @parameter0: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadState(java.lang.String,long,int)>("metrics", l0, i1);

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r6.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: byte[] deriveMetricsKey()>();

        $r3 = newarray (byte)[0];

        r7 = staticinvoke <com.android.server.locksettings.SyntheticPasswordCrypto: byte[] decrypt(byte[],byte[],byte[])>($r2, $r3, r1);

        if r7 != null goto label2;

        return null;

     label2:
        $r4 = staticinvoke <com.android.server.locksettings.VersionedPasswordMetrics: com.android.server.locksettings.VersionedPasswordMetrics deserialize(byte[])>(r7);

        $r5 = virtualinvoke $r4.<com.android.server.locksettings.VersionedPasswordMetrics: android.app.admin.PasswordMetrics getMetrics()>();

        return $r5;
    }

    public java.util.Set getPendingTokensForUser(int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0;
        android.util.ArrayMap $r1, $r3, $r6;
        java.lang.Integer $r2, $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.Set $r7, $r8;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.util.ArrayMap tokenMap>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r1.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r8 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r8;

     label1:
        $r3 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.util.ArrayMap tokenMap>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (android.util.ArrayMap) $r5;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.util.Set keySet()>();

        return $r7;
    }

    protected android.hardware.weaver.V1_0.IWeaver getWeaverService() throws android.os.RemoteException
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        java.lang.Throwable $r1;
        android.hardware.weaver.V1_0.IWeaver r2;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

     label1:
        r2 = staticinvoke <android.hardware.weaver.V1_0.IWeaver: android.hardware.weaver.V1_0.IWeaver getService(boolean)>(1);

     label2:
        return r2;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SyntheticPasswordManager", "Device does not support weaver");

        return null;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public boolean hasEscrowData(int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean hasState(java.lang.String,long,int)>("e0", 0L, i0);

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean hasState(java.lang.String,long,int)>("p1", 0L, i0);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean hasSidForUser(int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean hasState(java.lang.String,long,int)>("handle", 0L, i0);

        return $z0;
    }

    public void initWeaverService()
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        com.android.server.locksettings._$$Lambda$SyntheticPasswordManager$WjMV_qfQ1YUbeAiLzyAhyepqPFI r1;
        com.android.server.locksettings.PasswordSlotManager $r2;
        java.util.Set $r3;
        java.lang.Throwable $r4;
        android.os.RemoteException $r5;
        android.hardware.weaver.V1_0.IWeaver r6, r7;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        entermonitor r0;

     label01:
        r6 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.IWeaver mWeaver>;

     label02:
        if r6 == null goto label03;

        exitmonitor r0;

        return;

     label03:
        r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig> = null;

        r7 = virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.IWeaver getWeaverService()>();

        r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.IWeaver mWeaver> = r7;

     label04:
        if r7 == null goto label06;

     label05:
        r1 = new com.android.server.locksettings._$$Lambda$SyntheticPasswordManager$WjMV_qfQ1YUbeAiLzyAhyepqPFI;

        specialinvoke r1.<com.android.server.locksettings._$$Lambda$SyntheticPasswordManager$WjMV_qfQ1YUbeAiLzyAhyepqPFI: void <init>(com.android.server.locksettings.SyntheticPasswordManager)>(r0);

        interfaceinvoke r7.<android.hardware.weaver.V1_0.IWeaver: void getConfig(android.hardware.weaver.V1_0.IWeaver$getConfigCallback)>(r1);

        $r2 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.PasswordSlotManager mPasswordSlotManager>;

        $r3 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: java.util.Set getUsedWeaverSlots()>();

        virtualinvoke $r2.<com.android.server.locksettings.PasswordSlotManager: void refreshActiveSlots(java.util.Set)>($r3);

     label06:
        goto label09;

     label07:
        $r5 := @caughtexception;

     label08:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SyntheticPasswordManager", "Failed to get weaver service", $r5);

     label09:
        exitmonitor r0;

        return;

     label10:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void lambda$initWeaverService$0$SyntheticPasswordManager(int, android.hardware.weaver.V1_0.WeaverConfig)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0, $i1, $i3;
        android.hardware.weaver.V1_0.WeaverConfig r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r8;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.weaver.V1_0.WeaverConfig;

        if i0 != 0 goto label1;

        $i3 = r1.<android.hardware.weaver.V1_0.WeaverConfig: int slots>;

        if $i3 <= 0 goto label1;

        r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.WeaverConfig mWeaverConfig> = r1;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get weaver config, status ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" slots: ");

        $i1 = r1.<android.hardware.weaver.V1_0.WeaverConfig: int slots>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r8);

        r0.<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.IWeaver mWeaver> = null;

     label2:
        return;
    }

    public void migrateFrpPasswordLocked(long, android.content.pm.UserInfo, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        android.content.pm.UserInfo r1;
        int i1, i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.locksettings.SyntheticPasswordManager$PasswordData r2;
        com.android.server.locksettings.LockSettingsStorage $r3;
        com.android.server.PersistentDataBlockManagerInternal $r4;
        android.content.Context $r5;
        boolean $z0;
        byte[] $r6;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.pm.UserInfo;

        i1 := @parameter2: int;

        $r3 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage>;

        $r4 = virtualinvoke $r3.<com.android.server.locksettings.LockSettingsStorage: com.android.server.PersistentDataBlockManagerInternal getPersistentDataBlockManager()>();

        if $r4 == null goto label2;

        $r5 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.widget.LockPatternUtils: boolean userOwnsFrpCredential(android.content.Context,android.content.pm.UserInfo)>($r5, r1);

        if $z0 == 0 goto label2;

        $i3 = r1.<android.content.pm.UserInfo: int id>;

        $r6 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadState(java.lang.String,long,int)>("pwd", l0, $i3);

        r2 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager$PasswordData: com.android.server.locksettings.SyntheticPasswordManager$PasswordData fromBytes(byte[])>($r6);

        $i4 = r2.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: int credentialType>;

        if $i4 == -1 goto label2;

        $i5 = r1.<android.content.pm.UserInfo: int id>;

        i2 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: int loadWeaverSlot(long,int)>(l0, $i5);

        if i2 == -1 goto label1;

        $i7 = r1.<android.content.pm.UserInfo: int id>;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void synchronizeWeaverFrpPassword(com.android.server.locksettings.SyntheticPasswordManager$PasswordData,int,int,int)>(r2, i1, $i7, i2);

        goto label2;

     label1:
        $i6 = r1.<android.content.pm.UserInfo: int id>;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void synchronizeFrpPassword(com.android.server.locksettings.SyntheticPasswordManager$PasswordData,int,int)>(r2, i1, $i6);

     label2:
        return;
    }

    native long nativeSidFromPasswordHandle(byte[]);

    public void newSidForUser(android.service.gatekeeper.IGateKeeperService, com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0, $i1, $i2;
        byte[] $r1, $r9;
        java.lang.StringBuilder $r2;
        java.lang.IllegalStateException $r7, $r11;
        java.lang.String $r8;
        android.os.RemoteException $r10;
        android.service.gatekeeper.IGateKeeperService r12;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken r13;
        android.service.gatekeeper.GateKeeperResponse r14;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r12 := @parameter0: android.service.gatekeeper.IGateKeeperService;

        r13 := @parameter1: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken;

        i0 := @parameter2: int;

     label1:
        $r1 = virtualinvoke r13.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: byte[] deriveGkPassword()>();

        r14 = interfaceinvoke r12.<android.service.gatekeeper.IGateKeeperService: android.service.gatekeeper.GateKeeperResponse enroll(int,byte[],byte[],byte[])>(i0, null, null, $r1);

     label2:
        $i1 = virtualinvoke r14.<android.service.gatekeeper.GateKeeperResponse: int getResponseCode()>();

        if $i1 != 0 goto label3;

        $r9 = virtualinvoke r14.<android.service.gatekeeper.GateKeeperResponse: byte[] getPayload()>();

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveSyntheticPasswordHandle(byte[],int)>($r9, i0);

        return;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fail to create new SID for user ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" response: ");

        $i2 = virtualinvoke r14.<android.service.gatekeeper.GateKeeperResponse: int getResponseCode()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        $r10 := @caughtexception;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to create new SID for user", $r10);

        throw $r11;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken newSyntheticPasswordAndSid(android.service.gatekeeper.IGateKeeperService, byte[], com.android.internal.widget.LockscreenCredential, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        byte[] r1, $r4, $r5, $r6;
        com.android.internal.widget.LockscreenCredential r2;
        int i0, $i1;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken r3;
        java.lang.StringBuilder $r7;
        java.lang.String $r10;
        android.os.RemoteException $r11;
        java.lang.IllegalStateException $r12;
        android.service.gatekeeper.IGateKeeperService r13;
        android.service.gatekeeper.GateKeeperResponse r14;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r13 := @parameter0: android.service.gatekeeper.IGateKeeperService;

        r1 := @parameter1: byte[];

        r2 := @parameter2: com.android.internal.widget.LockscreenCredential;

        i0 := @parameter3: int;

        r3 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken create()>();

        if r1 == null goto label5;

     label1:
        $r4 = virtualinvoke r2.<com.android.internal.widget.LockscreenCredential: byte[] getCredential()>();

        $r5 = virtualinvoke r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: byte[] deriveGkPassword()>();

        r14 = interfaceinvoke r13.<android.service.gatekeeper.IGateKeeperService: android.service.gatekeeper.GateKeeperResponse enroll(int,byte[],byte[],byte[])>(i0, r1, $r4, $r5);

     label2:
        $i1 = virtualinvoke r14.<android.service.gatekeeper.GateKeeperResponse: int getResponseCode()>();

        if $i1 == 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fail to migrate SID, assuming no SID, user ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r10);

        virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void clearSidForUser(int)>(i0);

        goto label6;

     label3:
        $r6 = virtualinvoke r14.<android.service.gatekeeper.GateKeeperResponse: byte[] getPayload()>();

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveSyntheticPasswordHandle(byte[],int)>($r6, i0);

        goto label6;

     label4:
        $r11 := @caughtexception;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to enroll credential duing SP init", $r11);

        throw $r12;

     label5:
        virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void clearSidForUser(int)>(i0);

     label6:
        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveEscrowData(com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken,int)>(r3, i0);

        return r3;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean removePendingToken(long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1;
        boolean z0, z1;
        android.util.ArrayMap $r1, $r3, $r6;
        java.lang.Integer $r2, $r4;
        java.lang.Object $r5, $r8;
        java.lang.Long $r7;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.util.ArrayMap tokenMap>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        z0 = virtualinvoke $r1.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r2);

        z1 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.locksettings.SyntheticPasswordManager: android.util.ArrayMap tokenMap>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (android.util.ArrayMap) $r5;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r8 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r7);

        if $r8 == null goto label2;

        z1 = 1;

     label2:
        return z1;
    }

    public void removeUser(int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        int i0;
        java.util.Iterator r1;
        long l1;
        com.android.server.locksettings.LockSettingsStorage $r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Long $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage>;

        $r3 = virtualinvoke $r2.<com.android.server.locksettings.LockSettingsStorage: java.util.List listSyntheticPasswordHandlesForUser(java.lang.String,int)>("spblob", i0);

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Long) $r4;

        l1 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroyWeaverSlot(long,int)>(l1, i0);

        $r6 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: java.lang.String getHandleName(long)>(l1);

        virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void destroySPBlobKey(java.lang.String)>($r6);

        goto label1;

     label2:
        return;
    }

    protected byte[] scrypt(byte[], byte[], int, int, int, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        byte[] r1, r2, $r4;
        int i0, i1, i2, i3;
        android.security.Scrypt $r3;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r3 = new android.security.Scrypt;

        specialinvoke $r3.<android.security.Scrypt: void <init>()>();

        $r4 = virtualinvoke $r3.<android.security.Scrypt: byte[] scrypt(byte[],byte[],int,int,int,int)>(r1, r2, i0, i1, i2, i3);

        return $r4;
    }

    protected long sidFromPasswordHandle(byte[])
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        byte[] r1;
        long $l0;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: byte[];

        $l0 = virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: long nativeSidFromPasswordHandle(byte[])>(r1);

        return $l0;
    }

    public com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult unwrapPasswordBasedSyntheticPassword(android.service.gatekeeper.IGateKeeperService, long, com.android.internal.widget.LockscreenCredential, int, com.android.internal.widget.ICheckCredentialProgressCallback)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0, l16;
        com.android.internal.widget.LockscreenCredential r1;
        int i1, $i2, $i3, $i4, $i6, $i7, $i9, $i10, i15, i17, i18, $i19;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult $r3;
        byte[] $r4, $r5, $r9, $r15, $r16, $r17, $r21, r36, r38, r40, r41, r43, r47;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.widget.VerifyCredentialResponse $r6, $r7, $r8, $r18, $r19, $r20, $r22, $r27, $r31, $r51;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken $r10, $r49, $r50, $r52;
        java.lang.StringBuilder $r11;
        java.lang.String $r14, $r26;
        java.lang.Object[] $r23;
        java.lang.Integer $r24, $r25;
        android.os.RemoteException $r28, $r29, $r30, $r32, r45;
        android.service.gatekeeper.IGateKeeperService r33;
        com.android.internal.widget.ICheckCredentialProgressCallback r34;
        com.android.server.locksettings.SyntheticPasswordManager$PasswordData r35;
        android.service.gatekeeper.GateKeeperResponse r42, r44;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r33 := @parameter0: android.service.gatekeeper.IGateKeeperService;

        l0 := @parameter1: long;

        r1 := @parameter2: com.android.internal.widget.LockscreenCredential;

        i1 := @parameter3: int;

        r34 := @parameter4: com.android.internal.widget.ICheckCredentialProgressCallback;

        $r3 = new com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult;

        specialinvoke $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: void <init>()>();

        $r4 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadState(java.lang.String,long,int)>("pwd", l0, i1);

        r35 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager$PasswordData: com.android.server.locksettings.SyntheticPasswordManager$PasswordData fromBytes(byte[])>($r4);

        $i2 = r35.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: int credentialType>;

        $z0 = virtualinvoke r1.<com.android.internal.widget.LockscreenCredential: boolean checkAgainstStoredType(int)>($i2);

        if $z0 != 0 goto label01;

        $r23 = newarray (java.lang.Object)[2];

        $i9 = r35.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: int credentialType>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r23[0] = $r24;

        $i10 = virtualinvoke r1.<com.android.internal.widget.LockscreenCredential: int getType()>();

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r23[1] = $r25;

        $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Credential type mismatch: expected %d actual %d", $r23);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r26);

        $r27 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse> = $r27;

        return $r3;

     label01:
        r36 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] computePasswordToken(com.android.internal.widget.LockscreenCredential,com.android.server.locksettings.SyntheticPasswordManager$PasswordData)>(r1, r35);

        i15 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: int loadWeaverSlot(long,int)>(l0, i1);

        if i15 == -1 goto label04;

        $z3 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean isWeaverAvailable()>();

        if $z3 != 0 goto label02;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", "No weaver service to unwrap password based SP");

        $r22 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse> = $r22;

        return $r3;

     label02:
        $r17 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] passwordTokenToWeaverKey(byte[])>(r36);

        $r18 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.internal.widget.VerifyCredentialResponse weaverVerify(int,byte[])>(i15, $r17);

        $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse> = $r18;

        $r19 = $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse>;

        $i7 = virtualinvoke $r19.<com.android.internal.widget.VerifyCredentialResponse: int getResponseCode()>();

        if $i7 == 0 goto label03;

        return $r3;

     label03:
        $r20 = $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse>;

        $r21 = virtualinvoke $r20.<com.android.internal.widget.VerifyCredentialResponse: byte[] getPayload()>();

        r38 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] transformUnderWeaverSecret(byte[],byte[])>(r36, $r21);

        l16 = 0L;

        r40 = r38;

        goto label17;

     label04:
        r41 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] passwordTokenToGkInput(byte[])>(r36);

     label05:
        $i3 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: int fakeUid(int)>(i1);

        $r5 = r35.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte[] passwordHandle>;

        r42 = interfaceinvoke r33.<android.service.gatekeeper.IGateKeeperService: android.service.gatekeeper.GateKeeperResponse verifyChallenge(int,long,byte[],byte[])>($i3, 0L, $r5, r41);

     label06:
        i17 = virtualinvoke r42.<android.service.gatekeeper.GateKeeperResponse: int getResponseCode()>();

        if i17 != 0 goto label23;

        $r8 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse OK>;

        $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse> = $r8;

        $z1 = virtualinvoke r42.<android.service.gatekeeper.GateKeeperResponse: boolean getShouldReEnroll()>();

        if $z1 == 0 goto label16;

     label07:
        i18 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: int fakeUid(int)>(i1);

        r43 = r35.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte[] passwordHandle>;

     label08:
        r44 = interfaceinvoke r33.<android.service.gatekeeper.IGateKeeperService: android.service.gatekeeper.GateKeeperResponse enroll(int,byte[],byte[],byte[])>(i18, r43, r41, r41);

     label09:
        goto label13;

     label10:
        $r29 := @caughtexception;

        r45 = $r29;

        goto label12;

     label11:
        $r32 := @caughtexception;

        r45 = $r32;

     label12:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SyntheticPasswordManager", "Fail to invoke gatekeeper.enroll", r45);

        r44 = <android.service.gatekeeper.GateKeeperResponse: android.service.gatekeeper.GateKeeperResponse ERROR>;

     label13:
        $i19 = virtualinvoke r44.<android.service.gatekeeper.GateKeeperResponse: int getResponseCode()>();

        if $i19 != 0 goto label14;

        $r15 = virtualinvoke r44.<android.service.gatekeeper.GateKeeperResponse: byte[] getPayload()>();

        r35.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte[] passwordHandle> = $r15;

        $i6 = virtualinvoke r1.<com.android.internal.widget.LockscreenCredential: int getType()>();

        r35.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: int credentialType> = $i6;

        $r16 = virtualinvoke r35.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte[] toBytes()>();

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveState(java.lang.String,byte[],long,int)>("pwd", $r16, l0, i1);

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void synchronizeFrpPassword(com.android.server.locksettings.SyntheticPasswordManager$PasswordData,int,int)>(r35, 0, i1);

        goto label15;

     label14:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fail to re-enroll user password for user ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r14);

     label15:
        goto label16;

     label16:
        $r9 = r35.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte[] passwordHandle>;

        l16 = virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: long sidFromPasswordHandle(byte[])>($r9);

        r47 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadSecdiscardable(long,int)>(l0, i1);

        r40 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] transformUnderSecdiscardable(byte[],byte[])>(r36, r47);

     label17:
        if r34 == null goto label21;

     label18:
        interfaceinvoke r34.<com.android.internal.widget.ICheckCredentialProgressCallback: void onCredentialVerified()>();

     label19:
        goto label21;

     label20:
        $r28 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SyntheticPasswordManager", "progressCallback throws exception", $r28);

     label21:
        $r49 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken unwrapSyntheticPasswordBlob(long,byte,byte[],long,int)>(l0, 0, r40, l16, i1);

        $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken authToken> = $r49;

        $r50 = $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken authToken>;

        $r51 = virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.internal.widget.VerifyCredentialResponse verifyChallenge(android.service.gatekeeper.IGateKeeperService,com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken,long,int)>(r33, $r50, 0L, i1);

        $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse> = $r51;

        $r52 = $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken authToken>;

        if $r52 == null goto label22;

        $z2 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean hasPasswordMetrics(long,int)>(l0, i1);

        if $z2 != 0 goto label22;

        $r10 = $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken authToken>;

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void savePasswordMetrics(com.android.internal.widget.LockscreenCredential,com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken,long,int)>(r1, $r10, l0, i1);

     label22:
        return $r3;

     label23:
        if i17 != 1 goto label24;

        $r7 = new com.android.internal.widget.VerifyCredentialResponse;

        $i4 = virtualinvoke r42.<android.service.gatekeeper.GateKeeperResponse: int getTimeout()>();

        specialinvoke $r7.<com.android.internal.widget.VerifyCredentialResponse: void <init>(int)>($i4);

        $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse> = $r7;

        return $r3;

     label24:
        $r6 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse> = $r6;

        return $r3;

     label25:
        $r30 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SyntheticPasswordManager", "gatekeeper verify failed", $r30);

        $r31 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        $r3.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse> = $r31;

        return $r3;

        catch android.os.RemoteException from label05 to label06 with label25;
        catch android.os.RemoteException from label07 to label08 with label11;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch android.os.RemoteException from label18 to label19 with label20;
    }

    public com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult unwrapTokenBasedSyntheticPassword(android.service.gatekeeper.IGateKeeperService, long, byte[], int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        android.service.gatekeeper.IGateKeeperService r1;
        long l0;
        byte[] r2, $r6, $r15, $r16, $r17, r19;
        int i1, i2, $i3;
        com.android.internal.widget.VerifyCredentialResponse r4, $r9, $r11, $r12, $r13, $r14, $r18;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult $r5;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken $r7, $r8, $r10;
        boolean $z0;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r1 := @parameter0: android.service.gatekeeper.IGateKeeperService;

        l0 := @parameter1: long;

        r2 := @parameter2: byte[];

        i1 := @parameter3: int;

        $r5 = new com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult;

        specialinvoke $r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: void <init>()>();

        r19 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadSecdiscardable(long,int)>(l0, i1);

        i2 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: int loadWeaverSlot(long,int)>(l0, i1);

        if i2 == -1 goto label4;

        $z0 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean isWeaverAvailable()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", "No weaver service to unwrap token based SP");

        $r18 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        $r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse> = $r18;

        return $r5;

     label1:
        r4 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.internal.widget.VerifyCredentialResponse weaverVerify(int,byte[])>(i2, null);

        $i3 = virtualinvoke r4.<com.android.internal.widget.VerifyCredentialResponse: int getResponseCode()>();

        if $i3 != 0 goto label3;

        $r15 = virtualinvoke r4.<com.android.internal.widget.VerifyCredentialResponse: byte[] getPayload()>();

        if $r15 != null goto label2;

        goto label3;

     label2:
        $r16 = virtualinvoke r4.<com.android.internal.widget.VerifyCredentialResponse: byte[] getPayload()>();

        $r17 = <com.android.server.locksettings.SyntheticPasswordManager: byte[] PERSONALISATION_WEAVER_TOKEN>;

        r19 = staticinvoke <com.android.server.locksettings.SyntheticPasswordCrypto: byte[] decrypt(byte[],byte[],byte[])>($r16, $r17, r19);

        goto label4;

     label3:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", "Failed to retrieve weaver secret when unwrapping token");

        $r14 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        $r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse> = $r14;

        return $r5;

     label4:
        $r6 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] transformUnderSecdiscardable(byte[],byte[])>(r2, r19);

        $r7 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken unwrapSyntheticPasswordBlob(long,byte,byte[],long,int)>(l0, 1, $r6, 0L, i1);

        $r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken authToken> = $r7;

        $r8 = $r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken authToken>;

        if $r8 == null goto label5;

        $r10 = $r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken authToken>;

        $r11 = virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.internal.widget.VerifyCredentialResponse verifyChallenge(android.service.gatekeeper.IGateKeeperService,com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken,long,int)>(r1, $r10, 0L, i1);

        $r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse> = $r11;

        $r12 = $r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse>;

        if $r12 != null goto label6;

        $r13 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse OK>;

        $r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse> = $r13;

        goto label6;

     label5:
        $r9 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        $r5.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationResult: com.android.internal.widget.VerifyCredentialResponse gkResponse> = $r9;

     label6:
        return $r5;
    }

    public com.android.internal.widget.VerifyCredentialResponse verifyChallenge(android.service.gatekeeper.IGateKeeperService, com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken, long, int)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        long l0;
        int i1, i2, $i3, $i4;
        byte[] r1, $r3, $r7, $r8, $r13;
        com.android.internal.widget.VerifyCredentialResponse $r4, $r5, $r6, $r14, $r21;
        boolean $z0;
        java.lang.StringBuilder $r9, $r17;
        java.lang.String $r12, $r20;
        android.os.RemoteException $r15, $r16;
        android.service.gatekeeper.IGateKeeperService r22;
        com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken r23;
        android.service.gatekeeper.GateKeeperResponse r24, r25;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r22 := @parameter0: android.service.gatekeeper.IGateKeeperService;

        r23 := @parameter1: com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        r1 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] loadSyntheticPasswordHandle(int)>(i1);

        if r1 != null goto label01;

        return null;

     label01:
        $r3 = virtualinvoke r23.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: byte[] deriveGkPassword()>();

        r24 = interfaceinvoke r22.<android.service.gatekeeper.IGateKeeperService: android.service.gatekeeper.GateKeeperResponse verifyChallenge(int,long,byte[],byte[])>(i1, l0, r1, $r3);

     label02:
        i2 = virtualinvoke r24.<android.service.gatekeeper.GateKeeperResponse: int getResponseCode()>();

        if i2 != 0 goto label09;

        $r6 = new com.android.internal.widget.VerifyCredentialResponse;

        $r7 = virtualinvoke r24.<android.service.gatekeeper.GateKeeperResponse: byte[] getPayload()>();

        specialinvoke $r6.<com.android.internal.widget.VerifyCredentialResponse: void <init>(byte[])>($r7);

        $z0 = virtualinvoke r24.<android.service.gatekeeper.GateKeeperResponse: boolean getShouldReEnroll()>();

        if $z0 == 0 goto label08;

     label03:
        $r8 = virtualinvoke r23.<com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken: byte[] deriveGkPassword()>();

        r25 = interfaceinvoke r22.<android.service.gatekeeper.IGateKeeperService: android.service.gatekeeper.GateKeeperResponse enroll(int,byte[],byte[],byte[])>(i1, r1, r1, $r8);

     label04:
        goto label06;

     label05:
        $r15 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SyntheticPasswordManager", "Failed to invoke gatekeeper.enroll", $r15);

        r25 = <android.service.gatekeeper.GateKeeperResponse: android.service.gatekeeper.GateKeeperResponse ERROR>;

     label06:
        $i4 = virtualinvoke r25.<android.service.gatekeeper.GateKeeperResponse: int getResponseCode()>();

        if $i4 != 0 goto label07;

        $r13 = virtualinvoke r25.<android.service.gatekeeper.GateKeeperResponse: byte[] getPayload()>();

        specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: void saveSyntheticPasswordHandle(byte[],int)>($r13, i1);

        $r14 = virtualinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.internal.widget.VerifyCredentialResponse verifyChallenge(android.service.gatekeeper.IGateKeeperService,com.android.server.locksettings.SyntheticPasswordManager$AuthenticationToken,long,int)>(r22, r23, l0, i1);

        return $r14;

     label07:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fail to re-enroll SP handle for user ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r12);

     label08:
        return $r6;

     label09:
        if i2 != 1 goto label10;

        $r5 = new com.android.internal.widget.VerifyCredentialResponse;

        $i3 = virtualinvoke r24.<android.service.gatekeeper.GateKeeperResponse: int getTimeout()>();

        specialinvoke $r5.<com.android.internal.widget.VerifyCredentialResponse: void <init>(int)>($i3);

        return $r5;

     label10:
        $r4 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        return $r4;

     label11:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fail to verify with gatekeeper ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SyntheticPasswordManager", $r20, $r16);

        $r21 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        return $r21;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch android.os.RemoteException from label03 to label04 with label05;
    }

    public com.android.internal.widget.VerifyCredentialResponse verifyFrpCredential(android.service.gatekeeper.IGateKeeperService, com.android.internal.widget.LockscreenCredential, com.android.internal.widget.ICheckCredentialProgressCallback)
    {
        com.android.server.locksettings.SyntheticPasswordManager r0;
        com.android.server.locksettings.SyntheticPasswordManager$PasswordData r1, $r9;
        com.android.server.locksettings.LockSettingsStorage $r2;
        int $i0, $i1, $i2, $i4, $i6, $i7;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        com.android.internal.widget.VerifyCredentialResponse $r7, $r11, $r12, $r13, $r17, $r19;
        boolean $z0;
        byte[] $r8, $r10, $r14, $r15, $r16, r24, r27;
        android.os.RemoteException $r18;
        android.service.gatekeeper.IGateKeeperService r20;
        com.android.internal.widget.LockscreenCredential r21;
        com.android.internal.widget.ICheckCredentialProgressCallback r22;
        com.android.server.locksettings.LockSettingsStorage$PersistentData r23;
        android.service.gatekeeper.GateKeeperResponse r25;

        r0 := @this: com.android.server.locksettings.SyntheticPasswordManager;

        r20 := @parameter0: android.service.gatekeeper.IGateKeeperService;

        r21 := @parameter1: com.android.internal.widget.LockscreenCredential;

        r22 := @parameter2: com.android.internal.widget.ICheckCredentialProgressCallback;

        $r2 = r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.LockSettingsStorage mStorage>;

        r23 = virtualinvoke $r2.<com.android.server.locksettings.LockSettingsStorage: com.android.server.locksettings.LockSettingsStorage$PersistentData readPersistentDataBlock()>();

        $i0 = r23.<com.android.server.locksettings.LockSettingsStorage$PersistentData: int type>;

        if $i0 != 1 goto label4;

        $r14 = r23.<com.android.server.locksettings.LockSettingsStorage$PersistentData: byte[] payload>;

        r1 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager$PasswordData: com.android.server.locksettings.SyntheticPasswordManager$PasswordData fromBytes(byte[])>($r14);

        r24 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] computePasswordToken(com.android.internal.widget.LockscreenCredential,com.android.server.locksettings.SyntheticPasswordManager$PasswordData)>(r21, r1);

     label1:
        $i6 = r23.<com.android.server.locksettings.LockSettingsStorage$PersistentData: int userId>;

        $i7 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: int fakeUid(int)>($i6);

        $r15 = r1.<com.android.server.locksettings.SyntheticPasswordManager$PasswordData: byte[] passwordHandle>;

        $r16 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] passwordTokenToGkInput(byte[])>(r24);

        r25 = interfaceinvoke r20.<android.service.gatekeeper.IGateKeeperService: android.service.gatekeeper.GateKeeperResponse verifyChallenge(int,long,byte[],byte[])>($i7, 0L, $r15, $r16);

     label2:
        $r17 = staticinvoke <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse fromGateKeeperResponse(android.service.gatekeeper.GateKeeperResponse)>(r25);

        return $r17;

     label3:
        $r18 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SyntheticPasswordManager", "FRP verifyChallenge failed", $r18);

        $r19 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        return $r19;

     label4:
        $i1 = r23.<com.android.server.locksettings.LockSettingsStorage$PersistentData: int type>;

        if $i1 != 2 goto label6;

        $z0 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: boolean isWeaverAvailable()>();

        if $z0 != 0 goto label5;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", "No weaver service to verify SP-based FRP credential");

        $r13 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        return $r13;

     label5:
        $r8 = r23.<com.android.server.locksettings.LockSettingsStorage$PersistentData: byte[] payload>;

        $r9 = staticinvoke <com.android.server.locksettings.SyntheticPasswordManager$PasswordData: com.android.server.locksettings.SyntheticPasswordManager$PasswordData fromBytes(byte[])>($r8);

        r27 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] computePasswordToken(com.android.internal.widget.LockscreenCredential,com.android.server.locksettings.SyntheticPasswordManager$PasswordData)>(r21, $r9);

        $i4 = r23.<com.android.server.locksettings.LockSettingsStorage$PersistentData: int userId>;

        $r10 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: byte[] passwordTokenToWeaverKey(byte[])>(r27);

        $r11 = specialinvoke r0.<com.android.server.locksettings.SyntheticPasswordManager: com.android.internal.widget.VerifyCredentialResponse weaverVerify(int,byte[])>($i4, $r10);

        $r12 = virtualinvoke $r11.<com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse stripPayload()>();

        return $r12;

     label6:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("persistentData.type must be TYPE_SP or TYPE_SP_WEAVER, but is ");

        $i2 = r23.<com.android.server.locksettings.LockSettingsStorage$PersistentData: int type>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SyntheticPasswordManager", $r6);

        $r7 = <com.android.internal.widget.VerifyCredentialResponse: com.android.internal.widget.VerifyCredentialResponse ERROR>;

        return $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
