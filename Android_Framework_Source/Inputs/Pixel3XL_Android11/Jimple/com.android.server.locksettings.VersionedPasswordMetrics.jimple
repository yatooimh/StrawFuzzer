public class com.android.server.locksettings.VersionedPasswordMetrics extends java.lang.Object
{
    private static final int VERSION_1;
    private final android.app.admin.PasswordMetrics mMetrics;
    private final int mVersion;

    private void <init>(int, android.app.admin.PasswordMetrics)
    {
        com.android.server.locksettings.VersionedPasswordMetrics r0;
        int i0;
        android.app.admin.PasswordMetrics r1;

        r0 := @this: com.android.server.locksettings.VersionedPasswordMetrics;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.admin.PasswordMetrics;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.locksettings.VersionedPasswordMetrics: android.app.admin.PasswordMetrics mMetrics> = r1;

        r0.<com.android.server.locksettings.VersionedPasswordMetrics: int mVersion> = i0;

        return;
    }

    public void <init>(com.android.internal.widget.LockscreenCredential)
    {
        com.android.server.locksettings.VersionedPasswordMetrics r0;
        com.android.internal.widget.LockscreenCredential r1;
        android.app.admin.PasswordMetrics $r2;

        r0 := @this: com.android.server.locksettings.VersionedPasswordMetrics;

        r1 := @parameter0: com.android.internal.widget.LockscreenCredential;

        $r2 = staticinvoke <android.app.admin.PasswordMetrics: android.app.admin.PasswordMetrics computeForCredential(com.android.internal.widget.LockscreenCredential)>(r1);

        specialinvoke r0.<com.android.server.locksettings.VersionedPasswordMetrics: void <init>(int,android.app.admin.PasswordMetrics)>(1, $r2);

        return;
    }

    public static com.android.server.locksettings.VersionedPasswordMetrics deserialize(byte[])
    {
        byte[] r0;
        java.nio.ByteBuffer r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.android.server.locksettings.VersionedPasswordMetrics $r4;
        android.app.admin.PasswordMetrics $r5;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);

        $i1 = lengthof r0;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r0, 0, $i1);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r4 = new com.android.server.locksettings.VersionedPasswordMetrics;

        $i2 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $r5 = new android.app.admin.PasswordMetrics;

        $i3 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $i4 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $i5 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $i6 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $i7 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $i8 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $i9 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $i10 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $i11 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $i12 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        specialinvoke $r5.<android.app.admin.PasswordMetrics: void <init>(int,int,int,int,int,int,int,int,int,int)>($i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12);

        specialinvoke $r4.<com.android.server.locksettings.VersionedPasswordMetrics: void <init>(int,android.app.admin.PasswordMetrics)>($i2, $r5);

        return $r4;
    }

    public android.app.admin.PasswordMetrics getMetrics()
    {
        com.android.server.locksettings.VersionedPasswordMetrics r0;
        android.app.admin.PasswordMetrics $r1;

        r0 := @this: com.android.server.locksettings.VersionedPasswordMetrics;

        $r1 = r0.<com.android.server.locksettings.VersionedPasswordMetrics: android.app.admin.PasswordMetrics mMetrics>;

        return $r1;
    }

    public int getVersion()
    {
        com.android.server.locksettings.VersionedPasswordMetrics r0;
        int $i0;

        r0 := @this: com.android.server.locksettings.VersionedPasswordMetrics;

        $i0 = r0.<com.android.server.locksettings.VersionedPasswordMetrics: int mVersion>;

        return $i0;
    }

    public byte[] serialize()
    {
        com.android.server.locksettings.VersionedPasswordMetrics r0;
        java.nio.ByteBuffer r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.app.admin.PasswordMetrics $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21;
        byte[] $r23;

        r0 := @this: com.android.server.locksettings.VersionedPasswordMetrics;

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(44);

        $i0 = r0.<com.android.server.locksettings.VersionedPasswordMetrics: int mVersion>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        $r3 = r0.<com.android.server.locksettings.VersionedPasswordMetrics: android.app.admin.PasswordMetrics mMetrics>;

        $i1 = $r3.<android.app.admin.PasswordMetrics: int credType>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i1);

        $r5 = r0.<com.android.server.locksettings.VersionedPasswordMetrics: android.app.admin.PasswordMetrics mMetrics>;

        $i2 = $r5.<android.app.admin.PasswordMetrics: int length>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i2);

        $r7 = r0.<com.android.server.locksettings.VersionedPasswordMetrics: android.app.admin.PasswordMetrics mMetrics>;

        $i3 = $r7.<android.app.admin.PasswordMetrics: int letters>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i3);

        $r9 = r0.<com.android.server.locksettings.VersionedPasswordMetrics: android.app.admin.PasswordMetrics mMetrics>;

        $i4 = $r9.<android.app.admin.PasswordMetrics: int upperCase>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i4);

        $r11 = r0.<com.android.server.locksettings.VersionedPasswordMetrics: android.app.admin.PasswordMetrics mMetrics>;

        $i5 = $r11.<android.app.admin.PasswordMetrics: int lowerCase>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i5);

        $r13 = r0.<com.android.server.locksettings.VersionedPasswordMetrics: android.app.admin.PasswordMetrics mMetrics>;

        $i6 = $r13.<android.app.admin.PasswordMetrics: int numeric>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i6);

        $r15 = r0.<com.android.server.locksettings.VersionedPasswordMetrics: android.app.admin.PasswordMetrics mMetrics>;

        $i7 = $r15.<android.app.admin.PasswordMetrics: int symbols>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i7);

        $r17 = r0.<com.android.server.locksettings.VersionedPasswordMetrics: android.app.admin.PasswordMetrics mMetrics>;

        $i8 = $r17.<android.app.admin.PasswordMetrics: int nonLetter>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i8);

        $r19 = r0.<com.android.server.locksettings.VersionedPasswordMetrics: android.app.admin.PasswordMetrics mMetrics>;

        $i9 = $r19.<android.app.admin.PasswordMetrics: int nonNumeric>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i9);

        $r21 = r0.<com.android.server.locksettings.VersionedPasswordMetrics: android.app.admin.PasswordMetrics mMetrics>;

        $i10 = $r21.<android.app.admin.PasswordMetrics: int seqLength>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i10);

        $r23 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        return $r23;
    }

    public static void <clinit>()
    {
        <com.android.server.locksettings.VersionedPasswordMetrics: int VERSION_1> = 1;

        return;
    }
}
