public class com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl extends java.lang.Object implements com.android.server.locksettings.recoverablekeystore.KeyStoreProxy
{
    private static final java.lang.String ANDROID_KEY_STORE_PROVIDER;
    private final java.security.KeyStore mKeyStore;

    public void <init>(java.security.KeyStore)
    {
        com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl r0;
        java.security.KeyStore r1;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl;

        r1 := @parameter0: java.security.KeyStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: java.security.KeyStore mKeyStore> = r1;

        return;
    }

    public static java.security.KeyStore getAndLoadAndroidKeyStore() throws java.security.KeyStoreException
    {
        java.lang.Throwable $r0;
        java.security.KeyStoreException $r1;
        java.security.KeyStore r2;

        r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>("AndroidKeyStore");

     label1:
        virtualinvoke r2.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(null);

     label2:
        return r2;

     label3:
        $r0 := @caughtexception;

        $r1 = new java.security.KeyStoreException;

        specialinvoke $r1.<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to load keystore.", $r0);

        throw $r1;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public boolean containsAlias(java.lang.String) throws java.security.KeyStoreException
    {
        com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl r0;
        java.lang.String r1;
        java.security.KeyStore $r2;
        boolean $z0;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: java.security.KeyStore mKeyStore>;

        $z0 = virtualinvoke $r2.<java.security.KeyStore: boolean containsAlias(java.lang.String)>(r1);

        return $z0;
    }

    public void deleteEntry(java.lang.String) throws java.security.KeyStoreException
    {
        com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl r0;
        java.lang.String r1;
        java.security.KeyStore $r2;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: java.security.KeyStore mKeyStore>;

        virtualinvoke $r2.<java.security.KeyStore: void deleteEntry(java.lang.String)>(r1);

        return;
    }

    public java.security.Key getKey(java.lang.String, char[]) throws java.security.KeyStoreException, java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException
    {
        com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl r0;
        java.lang.String r1;
        char[] r2;
        java.security.KeyStore $r3;
        java.security.Key $r4;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: char[];

        $r3 = r0.<com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: java.security.KeyStore mKeyStore>;

        $r4 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(r1, r2);

        return $r4;
    }

    public void setEntry(java.lang.String, java.security.KeyStore$Entry, java.security.KeyStore$ProtectionParameter) throws java.security.KeyStoreException
    {
        com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl r0;
        java.lang.String r1;
        java.security.KeyStore$Entry r2;
        java.security.KeyStore$ProtectionParameter r3;
        java.security.KeyStore $r4;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.KeyStore$Entry;

        r3 := @parameter2: java.security.KeyStore$ProtectionParameter;

        $r4 = r0.<com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: java.security.KeyStore mKeyStore>;

        virtualinvoke $r4.<java.security.KeyStore: void setEntry(java.lang.String,java.security.KeyStore$Entry,java.security.KeyStore$ProtectionParameter)>(r1, r2, r3);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: java.lang.String ANDROID_KEY_STORE_PROVIDER> = "AndroidKeyStore";

        return;
    }
}
