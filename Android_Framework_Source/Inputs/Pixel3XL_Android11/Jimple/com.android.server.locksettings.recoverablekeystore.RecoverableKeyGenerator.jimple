public class com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator extends java.lang.Object
{
    static final int KEY_SIZE_BITS;
    private static final int RESULT_CANNOT_INSERT_ROW;
    private static final java.lang.String SECRET_KEY_ALGORITHM;
    private static final java.lang.String TAG;
    private final com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase;
    private final javax.crypto.KeyGenerator mKeyGenerator;

    private void <init>(javax.crypto.KeyGenerator, com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb)
    {
        com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator r0;
        javax.crypto.KeyGenerator r1;
        com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb r2;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator;

        r1 := @parameter0: javax.crypto.KeyGenerator;

        r2 := @parameter1: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: javax.crypto.KeyGenerator mKeyGenerator> = r1;

        r0.<com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase> = r2;

        return;
    }

    public static com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator newInstance(com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb) throws java.security.NoSuchAlgorithmException
    {
        com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb r0;
        com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator $r1;
        javax.crypto.KeyGenerator $r2;

        r0 := @parameter0: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb;

        $r1 = new com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator;

        $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES");

        specialinvoke $r1.<com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: void <init>(javax.crypto.KeyGenerator,com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb)>($r2, r0);

        return $r1;
    }

    public byte[] generateAndStoreKey(com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey, int, int, java.lang.String, byte[]) throws com.android.server.locksettings.recoverablekeystore.RecoverableKeyStorageException, java.security.KeyStoreException, java.security.InvalidKeyException
    {
        com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator r0;
        int i0, i1;
        java.lang.String r1, $r11;
        byte[] r2, $r13;
        javax.crypto.SecretKey r3;
        javax.crypto.KeyGenerator $r4, $r5;
        com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb $r6, $r12;
        long $l2, $l4;
        byte $b3, $b5;
        com.android.server.locksettings.recoverablekeystore.RecoverableKeyStorageException $r7;
        java.lang.Object[] $r8;
        java.util.Locale $r9;
        java.lang.Integer $r10;
        com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey r14;
        com.android.server.locksettings.recoverablekeystore.WrappedKey r15;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator;

        r14 := @parameter0: com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: byte[];

        $r4 = r0.<com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: javax.crypto.KeyGenerator mKeyGenerator>;

        virtualinvoke $r4.<javax.crypto.KeyGenerator: void init(int)>(256);

        $r5 = r0.<com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: javax.crypto.KeyGenerator mKeyGenerator>;

        r3 = virtualinvoke $r5.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        r15 = staticinvoke <com.android.server.locksettings.recoverablekeystore.WrappedKey: com.android.server.locksettings.recoverablekeystore.WrappedKey fromSecretKey(com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey,javax.crypto.SecretKey,byte[])>(r14, r3, r2);

        $r6 = r0.<com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase>;

        $l2 = virtualinvoke $r6.<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long insertKey(int,int,java.lang.String,com.android.server.locksettings.recoverablekeystore.WrappedKey)>(i0, i1, r1, r15);

        $b3 = $l2 cmp -1L;

        if $b3 == 0 goto label2;

        $r12 = r0.<com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase>;

        $l4 = virtualinvoke $r12.<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setShouldCreateSnapshot(int,int,boolean)>(i0, i1, 1);

        $b5 = $l4 cmp 0L;

        if $b5 >= 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PlatformKeyGen", "Failed to set the shoudCreateSnapshot flag in the local DB.");

     label1:
        $r13 = interfaceinvoke r3.<javax.crypto.SecretKey: byte[] getEncoded()>();

        return $r13;

     label2:
        $r7 = new com.android.server.locksettings.recoverablekeystore.RecoverableKeyStorageException;

        $r9 = <java.util.Locale: java.util.Locale US>;

        $r8 = newarray (java.lang.Object)[2];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r8[0] = $r10;

        $r8[1] = r1;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r9, "Failed writing (%d, %s) to database.", $r8);

        specialinvoke $r7.<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStorageException: void <init>(java.lang.String)>($r11);

        throw $r7;
    }

    public void importKey(com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey, int, int, java.lang.String, byte[], byte[]) throws com.android.server.locksettings.recoverablekeystore.RecoverableKeyStorageException, java.security.KeyStoreException, java.security.InvalidKeyException
    {
        com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator r0;
        int i0, i1;
        java.lang.String r1, $r10;
        byte[] r2, r3;
        javax.crypto.spec.SecretKeySpec $r4;
        com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb $r5, $r11;
        long $l2;
        byte $b3;
        com.android.server.locksettings.recoverablekeystore.RecoverableKeyStorageException $r6;
        java.lang.Object[] $r7;
        java.util.Locale $r8;
        java.lang.Integer $r9;
        com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey r12;
        com.android.server.locksettings.recoverablekeystore.WrappedKey r13;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator;

        r12 := @parameter0: com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: byte[];

        r3 := @parameter5: byte[];

        $r4 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, "AES");

        r13 = staticinvoke <com.android.server.locksettings.recoverablekeystore.WrappedKey: com.android.server.locksettings.recoverablekeystore.WrappedKey fromSecretKey(com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey,javax.crypto.SecretKey,byte[])>(r12, $r4, r3);

        $r5 = r0.<com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase>;

        $l2 = virtualinvoke $r5.<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long insertKey(int,int,java.lang.String,com.android.server.locksettings.recoverablekeystore.WrappedKey)>(i0, i1, r1, r13);

        $b3 = $l2 cmp -1L;

        if $b3 == 0 goto label1;

        $r11 = r0.<com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase>;

        virtualinvoke $r11.<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setShouldCreateSnapshot(int,int,boolean)>(i0, i1, 1);

        return;

     label1:
        $r6 = new com.android.server.locksettings.recoverablekeystore.RecoverableKeyStorageException;

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r7 = newarray (java.lang.Object)[2];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7[0] = $r9;

        $r7[1] = r1;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "Failed writing (%d, %s) to database.", $r7);

        specialinvoke $r6.<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStorageException: void <init>(java.lang.String)>($r10);

        throw $r6;
    }

    public static void <clinit>()
    {
        <com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: java.lang.String TAG> = "PlatformKeyGen";

        <com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: java.lang.String SECRET_KEY_ALGORITHM> = "AES";

        <com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: int RESULT_CANNOT_INSERT_ROW> = -1;

        <com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: int KEY_SIZE_BITS> = 256;

        return;
    }
}
