public class com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage extends java.lang.Object
{
    private static final java.lang.String TAG;
    private android.util.SparseArray mAgentIntents;
    private android.util.ArraySet mAgentsWithPendingSnapshots;

    public void <init>()
    {
        com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage r0;
        android.util.SparseArray $r1;
        android.util.ArraySet $r2;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: android.util.SparseArray mAgentIntents> = $r1;

        $r2 = new android.util.ArraySet;

        specialinvoke $r2.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: android.util.ArraySet mAgentsWithPendingSnapshots> = $r2;

        return;
    }

    private void tryToSendIntent(int, android.app.PendingIntent)
    {
        com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage r0;
        int i0;
        java.lang.StringBuilder r1;
        android.util.ArraySet $r2, $r8;
        java.lang.Integer $r3, $r9;
        android.app.PendingIntent$CanceledException $r4;
        java.lang.String $r7;
        java.lang.Throwable $r10;
        android.app.PendingIntent r11;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage;

        i0 := @parameter0: int;

        r11 := @parameter1: android.app.PendingIntent;

        entermonitor r0;

     label1:
        virtualinvoke r11.<android.app.PendingIntent: void send()>();

        $r2 = r0.<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: android.util.ArraySet mAgentsWithPendingSnapshots>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<android.util.ArraySet: boolean remove(java.lang.Object)>($r3);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RecoverySnapshotLstnrs", "Successfully notified listener.");

     label2:
        goto label6;

     label3:
        $r10 := @caughtexception;

        goto label7;

     label4:
        $r4 := @caughtexception;

     label5:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to trigger PendingIntent for ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RecoverySnapshotLstnrs", $r7, $r4);

        $r8 = r0.<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: android.util.ArraySet mAgentsWithPendingSnapshots>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r8.<android.util.ArraySet: boolean add(java.lang.Object)>($r9);

     label6:
        exitmonitor r0;

        return;

     label7:
        exitmonitor r0;

        throw $r10;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean hasListener(int)
    {
        com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Throwable $r2;
        java.lang.Object r3;
        boolean z0;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: android.util.SparseArray mAgentIntents>;

        r3 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

     label2:
        if r3 == null goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r0;

        return z0;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public void recoverySnapshotAvailable(int)
    {
        com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        java.lang.String $r6;
        android.util.ArraySet $r7;
        java.lang.Integer $r8;
        java.lang.Throwable $r9;
        android.app.PendingIntent r10;
        java.lang.StringBuilder r11;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: android.util.SparseArray mAgentIntents>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r10 = (android.app.PendingIntent) $r2;

     label2:
        if r10 != null goto label5;

     label3:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Snapshot available for agent ");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but agent has not yet initialized. Will notify agent when it does.");

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverySnapshotLstnrs", $r6);

        $r7 = r0.<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: android.util.ArraySet mAgentsWithPendingSnapshots>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r7.<android.util.ArraySet: boolean add(java.lang.Object)>($r8);

     label4:
        exitmonitor r0;

        return;

     label5:
        specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: void tryToSendIntent(int,android.app.PendingIntent)>(i0, r10);

     label6:
        exitmonitor r0;

        return;

     label7:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void setSnapshotListener(int, android.app.PendingIntent)
    {
        com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage r0;
        int i0;
        java.lang.StringBuilder r1;
        java.lang.String $r4;
        android.util.SparseArray $r5;
        android.util.ArraySet $r6;
        java.lang.Integer $r7;
        boolean $z0;
        java.lang.Throwable $r8;
        android.app.PendingIntent r9;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage;

        i0 := @parameter0: int;

        r9 := @parameter1: android.app.PendingIntent;

        entermonitor r0;

     label1:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registered listener for agent with uid ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverySnapshotLstnrs", $r4);

        $r5 = r0.<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: android.util.SparseArray mAgentIntents>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r9);

        $r6 = r0.<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: android.util.ArraySet mAgentsWithPendingSnapshots>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r6.<android.util.ArraySet: boolean contains(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverySnapshotLstnrs", "Snapshot already created for agent. Immediately triggering intent.");

        specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: void tryToSendIntent(int,android.app.PendingIntent)>(i0, r9);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: java.lang.String TAG> = "RecoverySnapshotLstnrs";

        return;
    }
}
