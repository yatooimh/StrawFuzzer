public final class com.android.server.locksettings.recoverablekeystore.certificate.CertXml extends java.lang.Object
{
    private static final java.lang.String ENDPOINT_CERT_ITEM_TAG;
    private static final java.lang.String ENDPOINT_CERT_LIST_TAG;
    private static final java.lang.String INTERMEDIATE_CERT_ITEM_TAG;
    private static final java.lang.String INTERMEDIATE_CERT_LIST_TAG;
    private static final java.lang.String METADATA_NODE_TAG;
    private static final java.lang.String METADATA_SERIAL_NODE_TAG;
    private final java.util.List endpointCerts;
    private final java.util.List intermediateCerts;
    private final long serial;

    private void <init>(long, java.util.List, java.util.List)
    {
        com.android.server.locksettings.recoverablekeystore.certificate.CertXml r0;
        long l0;
        java.util.List r1, r2;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.certificate.CertXml;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: long serial> = l0;

        r0.<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.util.List intermediateCerts> = r1;

        r0.<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.util.List endpointCerts> = r2;

        return;
    }

    public static com.android.server.locksettings.recoverablekeystore.certificate.CertXml parse(byte[]) throws com.android.server.locksettings.recoverablekeystore.certificate.CertParsingException
    {
        com.android.server.locksettings.recoverablekeystore.certificate.CertXml $r0;
        long $l0;
        java.util.List $r1, $r2;
        byte[] r3;
        org.w3c.dom.Element r4;

        r3 := @parameter0: byte[];

        r4 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: org.w3c.dom.Element getXmlRootNode(byte[])>(r3);

        $r0 = new com.android.server.locksettings.recoverablekeystore.certificate.CertXml;

        $l0 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertXml: long parseSerial(org.w3c.dom.Element)>(r4);

        $r1 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.util.List parseIntermediateCerts(org.w3c.dom.Element)>(r4);

        $r2 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.util.List parseEndpointCerts(org.w3c.dom.Element)>(r4);

        specialinvoke $r0.<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: void <init>(long,java.util.List,java.util.List)>($l0, $r1, $r2);

        return $r0;
    }

    private static java.util.List parseEndpointCerts(org.w3c.dom.Element) throws com.android.server.locksettings.recoverablekeystore.certificate.CertParsingException
    {
        java.lang.String[] $r0;
        java.util.ArrayList $r1;
        boolean $z0;
        java.util.List $r2, r8;
        java.lang.Object $r3;
        java.lang.String $r4;
        byte[] $r5;
        java.security.cert.X509Certificate $r6;
        org.w3c.dom.Element r7;
        java.util.Iterator r10;

        r7 := @parameter0: org.w3c.dom.Element;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "endpoints";

        $r0[1] = "cert";

        r8 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: java.util.List getXmlNodeContents(int,org.w3c.dom.Element,java.lang.String[])>(2, r7, $r0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r10 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: byte[] decodeBase64(java.lang.String)>($r4);

        $r6 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: java.security.cert.X509Certificate decodeCert(byte[])>($r5);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    private static java.util.List parseIntermediateCerts(org.w3c.dom.Element) throws com.android.server.locksettings.recoverablekeystore.certificate.CertParsingException
    {
        java.lang.String[] $r0;
        java.util.ArrayList $r1;
        boolean $z0;
        java.util.List $r2, r8;
        java.lang.Object $r3;
        java.lang.String $r4;
        byte[] $r5;
        java.security.cert.X509Certificate $r6;
        org.w3c.dom.Element r7;
        java.util.Iterator r10;

        r7 := @parameter0: org.w3c.dom.Element;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "intermediates";

        $r0[1] = "cert";

        r8 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: java.util.List getXmlNodeContents(int,org.w3c.dom.Element,java.lang.String[])>(0, r7, $r0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r10 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: byte[] decodeBase64(java.lang.String)>($r4);

        $r6 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: java.security.cert.X509Certificate decodeCert(byte[])>($r5);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    private static long parseSerial(org.w3c.dom.Element) throws com.android.server.locksettings.recoverablekeystore.certificate.CertParsingException
    {
        org.w3c.dom.Element r0;
        java.lang.String[] $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        long $l0;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "metadata";

        $r1[1] = "serial";

        $r2 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: java.util.List getXmlNodeContents(int,org.w3c.dom.Element,java.lang.String[])>(1, r0, $r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.lang.String) $r3;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

        return $l0;
    }

    java.util.List getAllEndpointCerts()
    {
        com.android.server.locksettings.recoverablekeystore.certificate.CertXml r0;
        java.util.List $r1;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.certificate.CertXml;

        $r1 = r0.<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.util.List endpointCerts>;

        return $r1;
    }

    java.util.List getAllIntermediateCerts()
    {
        com.android.server.locksettings.recoverablekeystore.certificate.CertXml r0;
        java.util.List $r1;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.certificate.CertXml;

        $r1 = r0.<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.util.List intermediateCerts>;

        return $r1;
    }

    java.security.cert.CertPath getEndpointCert(int, java.util.Date, java.security.cert.X509Certificate) throws com.android.server.locksettings.recoverablekeystore.certificate.CertValidationException
    {
        com.android.server.locksettings.recoverablekeystore.certificate.CertXml r0;
        int i0;
        java.util.Date r1;
        java.security.cert.X509Certificate r2, r3;
        java.util.List $r4, $r6;
        java.lang.Object $r5;
        java.security.cert.CertPath $r7;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.certificate.CertXml;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Date;

        r2 := @parameter2: java.security.cert.X509Certificate;

        $r4 = r0.<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.util.List endpointCerts>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (java.security.cert.X509Certificate) $r5;

        $r6 = r0.<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.util.List intermediateCerts>;

        $r7 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: java.security.cert.CertPath validateCert(java.util.Date,java.security.cert.X509Certificate,java.util.List,java.security.cert.X509Certificate)>(r1, r2, $r6, r3);

        return $r7;
    }

    public java.security.cert.CertPath getRandomEndpointCert(java.security.cert.X509Certificate) throws com.android.server.locksettings.recoverablekeystore.certificate.CertValidationException
    {
        com.android.server.locksettings.recoverablekeystore.certificate.CertXml r0;
        java.security.cert.X509Certificate r1;
        java.security.SecureRandom $r2;
        java.util.List $r3;
        int $i0, $i1;
        java.security.cert.CertPath $r4;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.certificate.CertXml;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        $r3 = r0.<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.util.List endpointCerts>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = virtualinvoke $r2.<java.security.SecureRandom: int nextInt(int)>($i0);

        $r4 = virtualinvoke r0.<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.security.cert.CertPath getEndpointCert(int,java.util.Date,java.security.cert.X509Certificate)>($i1, null, r1);

        return $r4;
    }

    public long getSerial()
    {
        com.android.server.locksettings.recoverablekeystore.certificate.CertXml r0;
        long $l0;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.certificate.CertXml;

        $l0 = r0.<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: long serial>;

        return $l0;
    }

    public static void <clinit>()
    {
        <com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.lang.String METADATA_SERIAL_NODE_TAG> = "serial";

        <com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.lang.String METADATA_NODE_TAG> = "metadata";

        <com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.lang.String INTERMEDIATE_CERT_LIST_TAG> = "intermediates";

        <com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.lang.String INTERMEDIATE_CERT_ITEM_TAG> = "cert";

        <com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.lang.String ENDPOINT_CERT_LIST_TAG> = "endpoints";

        <com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.lang.String ENDPOINT_CERT_ITEM_TAG> = "cert";

        return;
    }
}
