public final class com.android.server.locksettings.recoverablekeystore.certificate.SigXml extends java.lang.Object
{
    private static final java.lang.String INTERMEDIATE_CERT_ITEM_TAG;
    private static final java.lang.String INTERMEDIATE_CERT_LIST_TAG;
    private static final java.lang.String SIGNATURE_NODE_TAG;
    private static final java.lang.String SIGNER_CERT_NODE_TAG;
    private final java.util.List intermediateCerts;
    private final byte[] signature;
    private final java.security.cert.X509Certificate signerCert;

    private void <init>(java.util.List, java.security.cert.X509Certificate, byte[])
    {
        com.android.server.locksettings.recoverablekeystore.certificate.SigXml r0;
        java.util.List r1;
        java.security.cert.X509Certificate r2;
        byte[] r3;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.certificate.SigXml;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.security.cert.X509Certificate;

        r3 := @parameter2: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.locksettings.recoverablekeystore.certificate.SigXml: java.util.List intermediateCerts> = r1;

        r0.<com.android.server.locksettings.recoverablekeystore.certificate.SigXml: java.security.cert.X509Certificate signerCert> = r2;

        r0.<com.android.server.locksettings.recoverablekeystore.certificate.SigXml: byte[] signature> = r3;

        return;
    }

    public static com.android.server.locksettings.recoverablekeystore.certificate.SigXml parse(byte[]) throws com.android.server.locksettings.recoverablekeystore.certificate.CertParsingException
    {
        com.android.server.locksettings.recoverablekeystore.certificate.SigXml $r0;
        java.util.List $r1;
        java.security.cert.X509Certificate $r2;
        byte[] $r3, r4;
        org.w3c.dom.Element r5;

        r4 := @parameter0: byte[];

        r5 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: org.w3c.dom.Element getXmlRootNode(byte[])>(r4);

        $r0 = new com.android.server.locksettings.recoverablekeystore.certificate.SigXml;

        $r1 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.SigXml: java.util.List parseIntermediateCerts(org.w3c.dom.Element)>(r5);

        $r2 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.SigXml: java.security.cert.X509Certificate parseSignerCert(org.w3c.dom.Element)>(r5);

        $r3 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.SigXml: byte[] parseFileSignature(org.w3c.dom.Element)>(r5);

        specialinvoke $r0.<com.android.server.locksettings.recoverablekeystore.certificate.SigXml: void <init>(java.util.List,java.security.cert.X509Certificate,byte[])>($r1, $r2, $r3);

        return $r0;
    }

    private static byte[] parseFileSignature(org.w3c.dom.Element) throws com.android.server.locksettings.recoverablekeystore.certificate.CertParsingException
    {
        org.w3c.dom.Element r0;
        java.lang.String[] $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        byte[] $r5;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "value";

        $r2 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: java.util.List getXmlNodeContents(int,org.w3c.dom.Element,java.lang.String[])>(1, r0, $r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: byte[] decodeBase64(java.lang.String)>($r4);

        return $r5;
    }

    private static java.util.List parseIntermediateCerts(org.w3c.dom.Element) throws com.android.server.locksettings.recoverablekeystore.certificate.CertParsingException
    {
        java.lang.String[] $r0;
        java.util.ArrayList $r1;
        boolean $z0;
        java.util.List $r2, r8;
        java.lang.Object $r3;
        java.lang.String $r4;
        byte[] $r5;
        java.security.cert.X509Certificate $r6;
        org.w3c.dom.Element r7;
        java.util.Iterator r10;

        r7 := @parameter0: org.w3c.dom.Element;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "intermediates";

        $r0[1] = "cert";

        r8 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: java.util.List getXmlNodeContents(int,org.w3c.dom.Element,java.lang.String[])>(0, r7, $r0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r10 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: byte[] decodeBase64(java.lang.String)>($r4);

        $r6 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: java.security.cert.X509Certificate decodeCert(byte[])>($r5);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    private static java.security.cert.X509Certificate parseSignerCert(org.w3c.dom.Element) throws com.android.server.locksettings.recoverablekeystore.certificate.CertParsingException
    {
        org.w3c.dom.Element r0;
        java.lang.String[] $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        byte[] $r5;
        java.security.cert.X509Certificate $r6;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "certificate";

        $r2 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: java.util.List getXmlNodeContents(int,org.w3c.dom.Element,java.lang.String[])>(1, r0, $r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: byte[] decodeBase64(java.lang.String)>($r4);

        $r6 = staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: java.security.cert.X509Certificate decodeCert(byte[])>($r5);

        return $r6;
    }

    public void verifyFileSignature(java.security.cert.X509Certificate, byte[]) throws com.android.server.locksettings.recoverablekeystore.certificate.CertValidationException
    {
        com.android.server.locksettings.recoverablekeystore.certificate.SigXml r0;
        java.security.cert.X509Certificate r1;
        byte[] r2;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.certificate.SigXml;

        r1 := @parameter0: java.security.cert.X509Certificate;

        r2 := @parameter1: byte[];

        virtualinvoke r0.<com.android.server.locksettings.recoverablekeystore.certificate.SigXml: void verifyFileSignature(java.security.cert.X509Certificate,byte[],java.util.Date)>(r1, r2, null);

        return;
    }

    void verifyFileSignature(java.security.cert.X509Certificate, byte[], java.util.Date) throws com.android.server.locksettings.recoverablekeystore.certificate.CertValidationException
    {
        com.android.server.locksettings.recoverablekeystore.certificate.SigXml r0;
        java.security.cert.X509Certificate r1, $r4, $r7;
        byte[] r2, $r9;
        java.util.Date r3;
        java.util.List $r5;
        java.security.PublicKey $r8;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.certificate.SigXml;

        r1 := @parameter0: java.security.cert.X509Certificate;

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.util.Date;

        $r5 = r0.<com.android.server.locksettings.recoverablekeystore.certificate.SigXml: java.util.List intermediateCerts>;

        $r4 = r0.<com.android.server.locksettings.recoverablekeystore.certificate.SigXml: java.security.cert.X509Certificate signerCert>;

        staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: java.security.cert.CertPath validateCert(java.util.Date,java.security.cert.X509Certificate,java.util.List,java.security.cert.X509Certificate)>(r3, r1, $r5, $r4);

        $r7 = r0.<com.android.server.locksettings.recoverablekeystore.certificate.SigXml: java.security.cert.X509Certificate signerCert>;

        $r8 = virtualinvoke $r7.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $r9 = r0.<com.android.server.locksettings.recoverablekeystore.certificate.SigXml: byte[] signature>;

        staticinvoke <com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: void verifyRsaSha256Signature(java.security.PublicKey,byte[],byte[])>($r8, $r9, r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.locksettings.recoverablekeystore.certificate.SigXml: java.lang.String SIGNER_CERT_NODE_TAG> = "certificate";

        <com.android.server.locksettings.recoverablekeystore.certificate.SigXml: java.lang.String SIGNATURE_NODE_TAG> = "value";

        <com.android.server.locksettings.recoverablekeystore.certificate.SigXml: java.lang.String INTERMEDIATE_CERT_LIST_TAG> = "intermediates";

        <com.android.server.locksettings.recoverablekeystore.certificate.SigXml: java.lang.String INTERMEDIATE_CERT_ITEM_TAG> = "cert";

        return;
    }
}
