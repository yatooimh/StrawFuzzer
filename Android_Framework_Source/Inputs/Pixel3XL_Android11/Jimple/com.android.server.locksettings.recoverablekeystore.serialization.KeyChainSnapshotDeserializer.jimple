public class com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer extends java.lang.Object
{

    private void <init>()
    {
        com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer r0;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.security.keystore.recovery.KeyChainSnapshot deserialize(java.io.InputStream) throws com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException, java.io.IOException
    {
        java.lang.Throwable $r0;
        com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException $r1;
        java.io.InputStream r2;
        android.security.keystore.recovery.KeyChainSnapshot r3;

        r2 := @parameter0: java.io.InputStream;

     label1:
        r3 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: android.security.keystore.recovery.KeyChainSnapshot deserializeInternal(java.io.InputStream)>(r2);

     label2:
        return r3;

     label3:
        $r0 := @caughtexception;

        $r1 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        specialinvoke $r1.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String,java.lang.Throwable)>("Malformed KeyChainSnapshot XML", $r0);

        throw $r1;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
    }

    private static android.security.keystore.recovery.KeyChainSnapshot deserializeInternal(java.io.InputStream) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException, com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, $i2, $i3, $i4, $i6;
        java.lang.String $r2, $r4, $r21, r27;
        android.security.keystore.recovery.KeyChainSnapshot$Builder $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.List $r5, $r7;
        java.security.cert.CertPath $r9;
        byte[] $r12, $r15;
        long $l5;
        com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException $r18, $r23, $r25;
        java.lang.Object[] $r19;
        java.util.Locale $r20;
        java.lang.NullPointerException $r22;
        java.lang.Throwable $r24;
        java.io.InputStream r26;
        byte b7;
        android.security.keystore.recovery.KeyChainSnapshot r29;

        r26 := @parameter0: java.io.InputStream;

        r0 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r26, "UTF-8");

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        $r2 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r2, "keyChainSnapshot");

        $r3 = new android.security.keystore.recovery.KeyChainSnapshot$Builder;

        specialinvoke $r3.<android.security.keystore.recovery.KeyChainSnapshot$Builder: void <init>()>();

     label01:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        b7 = 3;

        if i0 == 3 goto label28;

        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i2 == 2 goto label02;

        goto label01;

     label02:
        r27 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $i3 = virtualinvoke r27.<java.lang.String: int hashCode()>();

        lookupswitch($i3)
        {
            case -1719931702: goto label12;
            case -1388433662: goto label11;
            case -1370381871: goto label10;
            case -1368437758: goto label09;
            case 481270388: goto label08;
            case 1190285858: goto label07;
            case 1352257591: goto label06;
            case 1596875199: goto label05;
            case 1806980777: goto label04;
            default: goto label03;
        };

     label03:
        goto label13;

     label04:
        $z0 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("serverParams");

        if $z0 == 0 goto label03;

        goto label14;

     label05:
        $z1 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("keyChainProtectionParamsList");

        if $z1 == 0 goto label03;

        b7 = 7;

        goto label14;

     label06:
        $z2 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("counterId");

        if $z2 == 0 goto label03;

        b7 = 2;

        goto label14;

     label07:
        $z3 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("applicationKeysList");

        if $z3 == 0 goto label03;

        b7 = 8;

        goto label14;

     label08:
        $z4 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("snapshotVersion");

        if $z4 == 0 goto label03;

        b7 = 0;

        goto label14;

     label09:
        $z5 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("thmCertPath");

        if $z5 == 0 goto label03;

        b7 = 5;

        goto label14;

     label10:
        $z6 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("recoveryKeyMaterial");

        if $z6 == 0 goto label03;

        b7 = 1;

        goto label14;

     label11:
        $z7 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("backendPublicKey");

        if $z7 == 0 goto label03;

        b7 = 6;

        goto label14;

     label12:
        $z8 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("maxAttempts");

        if $z8 == 0 goto label03;

        b7 = 4;

        goto label14;

     label13:
        b7 = -1;

     label14:
        tableswitch(b7)
        {
            case 0: goto label26;
            case 1: goto label25;
            case 2: goto label24;
            case 3: goto label23;
            case 4: goto label22;
            case 5: goto label19;
            case 6: goto label18;
            case 7: goto label17;
            case 8: goto label16;
            default: goto label15;
        };

     label15:
        $r18 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        $r20 = <java.util.Locale: java.util.Locale US>;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = r27;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r20, "Unexpected tag %s in keyChainSnapshot", $r19);

        specialinvoke $r18.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String)>($r21);

        throw $r18;

     label16:
        $r5 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: java.util.List readWrappedApplicationKeys(org.xmlpull.v1.XmlPullParser)>(r0);

        virtualinvoke $r3.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot$Builder setWrappedApplicationKeys(java.util.List)>($r5);

        goto label27;

     label17:
        $r7 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: java.util.List readKeyChainProtectionParamsList(org.xmlpull.v1.XmlPullParser)>(r0);

        virtualinvoke $r3.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot$Builder setKeyChainProtectionParams(java.util.List)>($r7);

        goto label27;

     label18:
        goto label27;

     label19:
        $r9 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: java.security.cert.CertPath readCertPathTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "thmCertPath");

        virtualinvoke $r3.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot$Builder setTrustedHardwareCertPath(java.security.cert.CertPath)>($r9);

     label20:
        goto label27;

     label21:
        $r24 := @caughtexception;

        $r25 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        specialinvoke $r25.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String,java.lang.Throwable)>("Could not set trustedHardwareCertPath", $r24);

        throw $r25;

     label22:
        $i4 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: int readIntTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "maxAttempts");

        virtualinvoke $r3.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot$Builder setMaxAttempts(int)>($i4);

        goto label27;

     label23:
        $r12 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: byte[] readBlobTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "serverParams");

        virtualinvoke $r3.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot$Builder setServerParams(byte[])>($r12);

        goto label27;

     label24:
        $l5 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: long readLongTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "counterId");

        virtualinvoke $r3.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot$Builder setCounterId(long)>($l5);

        goto label27;

     label25:
        $r15 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: byte[] readBlobTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "recoveryKeyMaterial");

        virtualinvoke $r3.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot$Builder setEncryptedRecoveryKeyBlob(byte[])>($r15);

        goto label27;

     label26:
        $i6 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: int readIntTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "snapshotVersion");

        virtualinvoke $r3.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot$Builder setSnapshotVersion(int)>($i6);

     label27:
        goto label01;

     label28:
        $r4 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r4, "keyChainSnapshot");

     label29:
        r29 = virtualinvoke $r3.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot build()>();

     label30:
        return r29;

     label31:
        $r22 := @caughtexception;

        $r23 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        specialinvoke $r23.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to build KeyChainSnapshot", $r22);

        throw $r23;

        catch java.security.cert.CertificateException from label19 to label20 with label21;
        catch java.lang.NullPointerException from label29 to label30 with label31;
    }

    private static byte[] readBlobTag(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException, com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException
    {
        java.lang.String r0, r1, $r2, $r3, $r8;
        java.lang.Throwable $r4;
        com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException $r5;
        java.lang.Object[] $r6;
        java.util.Locale $r7;
        org.xmlpull.v1.XmlPullParser r9;
        byte[] r10;

        r9 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        $r2 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r2, r0);

        r1 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: java.lang.String readText(org.xmlpull.v1.XmlPullParser)>(r9);

        $r3 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r3, r0);

     label1:
        r10 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r1, 0);

     label2:
        return r10;

     label3:
        $r4 := @caughtexception;

        $r5 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        $r7 = <java.util.Locale: java.util.Locale US>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r0;

        $r6[1] = r1;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "%s expected base64 encoded bytes but got \'%s\'", $r6);

        specialinvoke $r5.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r4);

        throw $r5;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    private static java.security.cert.CertPath readCertPathTag(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException, com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException
    {
        java.lang.String r0, $r7;
        java.security.cert.CertificateFactory r1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException $r6;
        org.xmlpull.v1.XmlPullParser r8;
        byte[] r9;
        java.io.ByteArrayInputStream r10;
        java.security.cert.CertPath r11;

        r8 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r9 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: byte[] readBlobTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r8, r0);

     label1:
        r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        r10 = new java.io.ByteArrayInputStream;

        specialinvoke r10.<java.io.ByteArrayInputStream: void <init>(byte[])>(r9);

        r11 = virtualinvoke r1.<java.security.cert.CertificateFactory: java.security.cert.CertPath generateCertPath(java.io.InputStream)>(r10);

     label2:
        return r11;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse CertPath in tag ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r2);

        throw $r6;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    private static int readIntTag(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException, com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException
    {
        java.lang.String r0, r1, $r2, $r3, $r9;
        int i0;
        java.lang.Integer $r4;
        java.lang.Throwable $r5;
        com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException $r6;
        java.lang.Object[] $r7;
        java.util.Locale $r8;
        org.xmlpull.v1.XmlPullParser r10;

        r10 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        $r2 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r2, r0);

        r1 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: java.lang.String readText(org.xmlpull.v1.XmlPullParser)>(r10);

        $r3 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r3, r0);

     label1:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r1);

        i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

        $r6 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r0;

        $r7[1] = r1;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "%s expected int but got \'%s\'", $r7);

        specialinvoke $r6.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r5);

        throw $r6;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static android.security.keystore.recovery.KeyChainProtectionParams readKeyChainProtectionParams(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException, com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException
    {
        java.lang.String r1, $r2, $r4, $r10;
        int i0, $i1, $i2, $i3, $i4;
        android.security.keystore.recovery.KeyChainProtectionParams$Builder $r3;
        boolean $z0, $z1, $z2;
        com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException $r7, $r14;
        java.lang.Object[] $r8;
        java.util.Locale $r9;
        android.security.keystore.recovery.KeyDerivationParams $r11;
        java.lang.NullPointerException $r13;
        org.xmlpull.v1.XmlPullParser r15;
        byte b5;
        android.security.keystore.recovery.KeyChainProtectionParams r16;

        r15 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r15.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r2, "keyChainProtectionParams");

        $r3 = new android.security.keystore.recovery.KeyChainProtectionParams$Builder;

        specialinvoke $r3.<android.security.keystore.recovery.KeyChainProtectionParams$Builder: void <init>()>();

     label01:
        $i4 = interfaceinvoke r15.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i4 == 3 goto label12;

        $i1 = interfaceinvoke r15.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 2 goto label02;

        goto label01;

     label02:
        r1 = interfaceinvoke r15.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        b5 = -1;

        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i0 == -776797115 goto label06;

        if i0 == -696958923 goto label05;

        if i0 == 912448924 goto label04;

     label03:
        goto label07;

     label04:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("keyDerivationParams");

        if $z2 == 0 goto label03;

        b5 = 2;

        goto label07;

     label05:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("userSecretType");

        if $z1 == 0 goto label03;

        b5 = 1;

        goto label07;

     label06:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lockScreenUiType");

        if $z0 == 0 goto label03;

        b5 = 0;

     label07:
        if b5 == 0 goto label10;

        if b5 == 1 goto label09;

        if b5 != 2 goto label08;

        $r11 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: android.security.keystore.recovery.KeyDerivationParams readKeyDerivationParams(org.xmlpull.v1.XmlPullParser)>(r15);

        virtualinvoke $r3.<android.security.keystore.recovery.KeyChainProtectionParams$Builder: android.security.keystore.recovery.KeyChainProtectionParams$Builder setKeyDerivationParams(android.security.keystore.recovery.KeyDerivationParams)>($r11);

        goto label11;

     label08:
        $r7 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        $r9 = <java.util.Locale: java.util.Locale US>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r1;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r9, "Unexpected tag %s in keyChainProtectionParams", $r8);

        specialinvoke $r7.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label09:
        $i3 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: int readIntTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r15, "userSecretType");

        virtualinvoke $r3.<android.security.keystore.recovery.KeyChainProtectionParams$Builder: android.security.keystore.recovery.KeyChainProtectionParams$Builder setUserSecretType(int)>($i3);

        goto label11;

     label10:
        $i2 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: int readIntTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r15, "lockScreenUiType");

        virtualinvoke $r3.<android.security.keystore.recovery.KeyChainProtectionParams$Builder: android.security.keystore.recovery.KeyChainProtectionParams$Builder setLockScreenUiFormat(int)>($i2);

     label11:
        goto label01;

     label12:
        $r4 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r15.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r4, "keyChainProtectionParams");

     label13:
        r16 = virtualinvoke $r3.<android.security.keystore.recovery.KeyChainProtectionParams$Builder: android.security.keystore.recovery.KeyChainProtectionParams build()>();

     label14:
        return r16;

     label15:
        $r13 := @caughtexception;

        $r14 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        specialinvoke $r14.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to build KeyChainProtectionParams", $r13);

        throw $r14;

        catch java.lang.NullPointerException from label13 to label14 with label15;
    }

    private static java.util.List readKeyChainProtectionParamsList(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException, com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String $r2, $r4;
        java.util.ArrayList $r3;
        int $i0, $i1;
        android.security.keystore.recovery.KeyChainProtectionParams $r5;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r2, "keyChainProtectionParamsList");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label1:
        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 3 goto label3;

        $i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 2 goto label2;

        goto label1;

     label2:
        $r5 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: android.security.keystore.recovery.KeyChainProtectionParams readKeyChainProtectionParams(org.xmlpull.v1.XmlPullParser)>(r0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label1;

     label3:
        $r4 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r4, "keyChainProtectionParamsList");

        return $r3;
    }

    private static android.security.keystore.recovery.KeyDerivationParams readKeyDerivationParams(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException, com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r2, $r4, $r9;
        int i0, $i1, i2, i3, $i4;
        com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException $r3, $r5, $r6;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r7;
        java.util.Locale $r8;
        byte[] r10;
        byte b5;
        android.security.keystore.recovery.KeyDerivationParams r11;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r2, "keyDerivationParams");

        i2 = -1;

        i3 = -1;

        r10 = null;

     label01:
        $i4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i4 == 3 goto label12;

        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 2 goto label02;

        goto label01;

     label02:
        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        b5 = -1;

        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i0 == -973274212 goto label06;

        if i0 == 3522646 goto label05;

        if i0 == 225490031 goto label04;

     label03:
        goto label07;

     label04:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("algorithm");

        if $z2 == 0 goto label03;

        b5 = 1;

        goto label07;

     label05:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("salt");

        if $z1 == 0 goto label03;

        b5 = 2;

        goto label07;

     label06:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("memoryDifficulty");

        if $z0 == 0 goto label03;

        b5 = 0;

     label07:
        if b5 == 0 goto label10;

        if b5 == 1 goto label09;

        if b5 != 2 goto label08;

        r10 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: byte[] readBlobTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "salt");

        goto label11;

     label08:
        $r6 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r1;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "Unexpected tag %s in keyDerivationParams", $r7);

        specialinvoke $r6.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String)>($r9);

        throw $r6;

     label09:
        i3 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: int readIntTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "algorithm");

        goto label11;

     label10:
        i2 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: int readIntTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "memoryDifficulty");

     label11:
        goto label01;

     label12:
        if r10 == null goto label16;

        if i3 == 1 goto label14;

        if i3 != 2 goto label13;

        r11 = staticinvoke <android.security.keystore.recovery.KeyDerivationParams: android.security.keystore.recovery.KeyDerivationParams createScryptParams(byte[],int)>(r10, i2);

        goto label15;

     label13:
        $r5 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        specialinvoke $r5.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String)>("Unknown algorithm in keyDerivationParams");

        throw $r5;

     label14:
        r11 = staticinvoke <android.security.keystore.recovery.KeyDerivationParams: android.security.keystore.recovery.KeyDerivationParams createSha256Params(byte[])>(r10);

     label15:
        $r4 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r4, "keyDerivationParams");

        return r11;

     label16:
        $r3 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        specialinvoke $r3.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String)>("salt was not set in keyDerivationParams");

        throw $r3;
    }

    private static long readLongTag(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException, com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException
    {
        java.lang.String r0, r1, $r2, $r3, $r9;
        long l0;
        java.lang.Long $r4;
        java.lang.Throwable $r5;
        com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException $r6;
        java.lang.Object[] $r7;
        java.util.Locale $r8;
        org.xmlpull.v1.XmlPullParser r10;

        r10 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        $r2 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r2, r0);

        r1 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: java.lang.String readText(org.xmlpull.v1.XmlPullParser)>(r10);

        $r3 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r3, r0);

     label1:
        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r1);

        l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

     label2:
        return l0;

     label3:
        $r5 := @caughtexception;

        $r6 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r0;

        $r7[1] = r1;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "%s expected long but got \'%s\'", $r7);

        specialinvoke $r6.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r5);

        throw $r6;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static java.lang.String readStringTag(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2, $r3, $r4;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        $r3 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r3, r1);

        r2 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: java.lang.String readText(org.xmlpull.v1.XmlPullParser)>(r0);

        $r4 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r4, r1);

        return r2;
    }

    private static java.lang.String readText(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int $i0;
        java.lang.String r1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = "";

        $i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 != 4 goto label1;

        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

     label1:
        return r1;
    }

    private static android.security.keystore.recovery.WrappedApplicationKey readWrappedApplicationKey(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException, com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException
    {
        java.lang.String r1, $r2, $r4, $r5, $r12;
        int i0, $i1, $i2;
        android.security.keystore.recovery.WrappedApplicationKey$Builder $r3;
        boolean $z0, $z1, $z2;
        byte[] $r7, $r13;
        com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException $r9, $r16;
        java.lang.Object[] $r10;
        java.util.Locale $r11;
        java.lang.NullPointerException $r15;
        org.xmlpull.v1.XmlPullParser r17;
        byte b3;
        android.security.keystore.recovery.WrappedApplicationKey r18;

        r17 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r2, "applicationKey");

        $r3 = new android.security.keystore.recovery.WrappedApplicationKey$Builder;

        specialinvoke $r3.<android.security.keystore.recovery.WrappedApplicationKey$Builder: void <init>()>();

     label01:
        $i2 = interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i2 == 3 goto label12;

        $i1 = interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 2 goto label02;

        goto label01;

     label02:
        r1 = interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        b3 = -1;

        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i0 == -1712279890 goto label06;

        if i0 == -963209050 goto label05;

        if i0 == 92902992 goto label04;

     label03:
        goto label07;

     label04:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("alias");

        if $z2 == 0 goto label03;

        b3 = 0;

        goto label07;

     label05:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("keyMaterial");

        if $z1 == 0 goto label03;

        b3 = 1;

        goto label07;

     label06:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("keyMetadata");

        if $z0 == 0 goto label03;

        b3 = 2;

     label07:
        if b3 == 0 goto label10;

        if b3 == 1 goto label09;

        if b3 != 2 goto label08;

        $r13 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: byte[] readBlobTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r17, "keyMetadata");

        virtualinvoke $r3.<android.security.keystore.recovery.WrappedApplicationKey$Builder: android.security.keystore.recovery.WrappedApplicationKey$Builder setMetadata(byte[])>($r13);

        goto label11;

     label08:
        $r9 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        $r11 = <java.util.Locale: java.util.Locale US>;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r1;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r11, "Unexpected tag %s in wrappedApplicationKey", $r10);

        specialinvoke $r9.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String)>($r12);

        throw $r9;

     label09:
        $r7 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: byte[] readBlobTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r17, "keyMaterial");

        virtualinvoke $r3.<android.security.keystore.recovery.WrappedApplicationKey$Builder: android.security.keystore.recovery.WrappedApplicationKey$Builder setEncryptedKeyMaterial(byte[])>($r7);

        goto label11;

     label10:
        $r5 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: java.lang.String readStringTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r17, "alias");

        virtualinvoke $r3.<android.security.keystore.recovery.WrappedApplicationKey$Builder: android.security.keystore.recovery.WrappedApplicationKey$Builder setAlias(java.lang.String)>($r5);

     label11:
        goto label01;

     label12:
        $r4 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r4, "applicationKey");

     label13:
        r18 = virtualinvoke $r3.<android.security.keystore.recovery.WrappedApplicationKey$Builder: android.security.keystore.recovery.WrappedApplicationKey build()>();

     label14:
        return r18;

     label15:
        $r15 := @caughtexception;

        $r16 = new com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException;

        specialinvoke $r16.<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to build WrappedApplicationKey", $r15);

        throw $r16;

        catch java.lang.NullPointerException from label13 to label14 with label15;
    }

    private static java.util.List readWrappedApplicationKeys(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException, com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String $r2, $r4;
        java.util.ArrayList $r3;
        int $i0, $i1;
        android.security.keystore.recovery.WrappedApplicationKey $r5;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r2, "applicationKeysList");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label1:
        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 3 goto label3;

        $i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 2 goto label2;

        goto label1;

     label2:
        $r5 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: android.security.keystore.recovery.WrappedApplicationKey readWrappedApplicationKey(org.xmlpull.v1.XmlPullParser)>(r0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label1;

     label3:
        $r4 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r4, "applicationKeysList");

        return $r3;
    }
}
