public class com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer extends java.lang.Object
{

    private void <init>()
    {
        com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer r0;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void serialize(android.security.keystore.recovery.KeyChainSnapshot, java.io.OutputStream) throws java.io.IOException, java.security.cert.CertificateEncodingException
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        java.io.OutputStream r1;
        org.xmlpull.v1.XmlSerializer r2;
        java.lang.String $r3, $r7;
        java.util.List $r5, $r6;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        r1 := @parameter1: java.io.OutputStream;

        r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, "UTF-8");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, null);

        $r3 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r3, "keyChainSnapshot");

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writeKeyChainSnapshotProperties(org.xmlpull.v1.XmlSerializer,android.security.keystore.recovery.KeyChainSnapshot)>(r2, r0);

        $r5 = virtualinvoke r0.<android.security.keystore.recovery.KeyChainSnapshot: java.util.List getKeyChainProtectionParams()>();

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writeKeyChainProtectionParams(org.xmlpull.v1.XmlSerializer,java.util.List)>(r2, $r5);

        $r6 = virtualinvoke r0.<android.security.keystore.recovery.KeyChainSnapshot: java.util.List getWrappedApplicationKeys()>();

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writeApplicationKeys(org.xmlpull.v1.XmlSerializer,java.util.List)>(r2, $r6);

        $r7 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r7, "keyChainSnapshot");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    private static void writeApplicationKeyProperties(org.xmlpull.v1.XmlSerializer, android.security.keystore.recovery.WrappedApplicationKey) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        android.security.keystore.recovery.WrappedApplicationKey r1;
        java.lang.String $r2;
        byte[] $r3, $r4;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: android.security.keystore.recovery.WrappedApplicationKey;

        $r2 = virtualinvoke r1.<android.security.keystore.recovery.WrappedApplicationKey: java.lang.String getAlias()>();

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>(r0, "alias", $r2);

        $r3 = virtualinvoke r1.<android.security.keystore.recovery.WrappedApplicationKey: byte[] getEncryptedKeyMaterial()>();

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,byte[])>(r0, "keyMaterial", $r3);

        $r4 = virtualinvoke r1.<android.security.keystore.recovery.WrappedApplicationKey: byte[] getMetadata()>();

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,byte[])>(r0, "keyMetadata", $r4);

        return;
    }

    private static void writeApplicationKeys(org.xmlpull.v1.XmlSerializer, java.util.List) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        android.security.keystore.recovery.WrappedApplicationKey r1;
        java.lang.String $r2, $r4, $r7, $r9;
        boolean $z0;
        java.lang.Object $r6;
        java.util.List r11;
        java.util.Iterator r12;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r11 := @parameter1: java.util.List;

        $r2 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r2, "applicationKeysList");

        r12 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.security.keystore.recovery.WrappedApplicationKey) $r6;

        $r7 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r7, "applicationKey");

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writeApplicationKeyProperties(org.xmlpull.v1.XmlSerializer,android.security.keystore.recovery.WrappedApplicationKey)>(r0, r1);

        $r9 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r9, "applicationKey");

        goto label1;

     label2:
        $r4 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r4, "applicationKeysList");

        return;
    }

    private static void writeKeyChainProtectionParams(org.xmlpull.v1.XmlSerializer, java.util.List) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.util.Iterator r1;
        java.lang.String $r2, $r4, $r7, $r9;
        boolean $z0;
        java.lang.Object $r6;
        java.util.List r11;
        android.security.keystore.recovery.KeyChainProtectionParams r12;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r11 := @parameter1: java.util.List;

        $r2 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r2, "keyChainProtectionParamsList");

        r1 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.security.keystore.recovery.KeyChainProtectionParams) $r6;

        $r7 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r7, "keyChainProtectionParams");

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writeKeyChainProtectionParamsProperties(org.xmlpull.v1.XmlSerializer,android.security.keystore.recovery.KeyChainProtectionParams)>(r0, r12);

        $r9 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r9, "keyChainProtectionParams");

        goto label1;

     label2:
        $r4 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r4, "keyChainProtectionParamsList");

        return;
    }

    private static void writeKeyChainProtectionParamsProperties(org.xmlpull.v1.XmlSerializer, android.security.keystore.recovery.KeyChainProtectionParams) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        android.security.keystore.recovery.KeyChainProtectionParams r1;
        int $i0, $i2;
        long $l1, $l3;
        android.security.keystore.recovery.KeyDerivationParams $r2;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: android.security.keystore.recovery.KeyChainProtectionParams;

        $i0 = virtualinvoke r1.<android.security.keystore.recovery.KeyChainProtectionParams: int getUserSecretType()>();

        $l1 = (long) $i0;

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>(r0, "userSecretType", $l1);

        $i2 = virtualinvoke r1.<android.security.keystore.recovery.KeyChainProtectionParams: int getLockScreenUiFormat()>();

        $l3 = (long) $i2;

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>(r0, "lockScreenUiType", $l3);

        $r2 = virtualinvoke r1.<android.security.keystore.recovery.KeyChainProtectionParams: android.security.keystore.recovery.KeyDerivationParams getKeyDerivationParams()>();

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writeKeyDerivationParams(org.xmlpull.v1.XmlSerializer,android.security.keystore.recovery.KeyDerivationParams)>(r0, $r2);

        return;
    }

    private static void writeKeyChainSnapshotProperties(org.xmlpull.v1.XmlSerializer, android.security.keystore.recovery.KeyChainSnapshot) throws java.io.IOException, java.security.cert.CertificateEncodingException
    {
        org.xmlpull.v1.XmlSerializer r0;
        android.security.keystore.recovery.KeyChainSnapshot r1;
        int $i0, $i2;
        long $l1, $l3, $l4;
        byte[] $r2, $r3;
        java.security.cert.CertPath $r4;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: android.security.keystore.recovery.KeyChainSnapshot;

        $i0 = virtualinvoke r1.<android.security.keystore.recovery.KeyChainSnapshot: int getSnapshotVersion()>();

        $l1 = (long) $i0;

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>(r0, "snapshotVersion", $l1);

        $i2 = virtualinvoke r1.<android.security.keystore.recovery.KeyChainSnapshot: int getMaxAttempts()>();

        $l3 = (long) $i2;

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>(r0, "maxAttempts", $l3);

        $l4 = virtualinvoke r1.<android.security.keystore.recovery.KeyChainSnapshot: long getCounterId()>();

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>(r0, "counterId", $l4);

        $r2 = virtualinvoke r1.<android.security.keystore.recovery.KeyChainSnapshot: byte[] getEncryptedRecoveryKeyBlob()>();

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,byte[])>(r0, "recoveryKeyMaterial", $r2);

        $r3 = virtualinvoke r1.<android.security.keystore.recovery.KeyChainSnapshot: byte[] getServerParams()>();

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,byte[])>(r0, "serverParams", $r3);

        $r4 = virtualinvoke r1.<android.security.keystore.recovery.KeyChainSnapshot: java.security.cert.CertPath getTrustedHardwareCertPath()>();

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,java.security.cert.CertPath)>(r0, "thmCertPath", $r4);

        return;
    }

    private static void writeKeyDerivationParams(org.xmlpull.v1.XmlSerializer, android.security.keystore.recovery.KeyDerivationParams) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        android.security.keystore.recovery.KeyDerivationParams r1;
        java.lang.String $r2, $r4;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: android.security.keystore.recovery.KeyDerivationParams;

        $r2 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r2, "keyDerivationParams");

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writeKeyDerivationParamsProperties(org.xmlpull.v1.XmlSerializer,android.security.keystore.recovery.KeyDerivationParams)>(r0, r1);

        $r4 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r4, "keyDerivationParams");

        return;
    }

    private static void writeKeyDerivationParamsProperties(org.xmlpull.v1.XmlSerializer, android.security.keystore.recovery.KeyDerivationParams) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        android.security.keystore.recovery.KeyDerivationParams r1;
        int $i0, $i2;
        long $l1, $l3;
        byte[] $r2;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: android.security.keystore.recovery.KeyDerivationParams;

        $i0 = virtualinvoke r1.<android.security.keystore.recovery.KeyDerivationParams: int getAlgorithm()>();

        $l1 = (long) $i0;

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>(r0, "algorithm", $l1);

        $r2 = virtualinvoke r1.<android.security.keystore.recovery.KeyDerivationParams: byte[] getSalt()>();

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,byte[])>(r0, "salt", $r2);

        $i2 = virtualinvoke r1.<android.security.keystore.recovery.KeyDerivationParams: int getMemoryDifficulty()>();

        $l3 = (long) $i2;

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>(r0, "memoryDifficulty", $l3);

        return;
    }

    private static void writePropertyTag(org.xmlpull.v1.XmlSerializer, java.lang.String, long) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2, $r4, $r6;
        long l0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r2, r1);

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r4);

        $r6 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r6, r1);

        return;
    }

    private static void writePropertyTag(org.xmlpull.v1.XmlSerializer, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, r2, $r3, $r6;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r3, r1);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r2);

        $r6 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r6, r1);

        return;
    }

    private static void writePropertyTag(org.xmlpull.v1.XmlSerializer, java.lang.String, java.security.cert.CertPath) throws java.io.IOException, java.security.cert.CertificateEncodingException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1;
        java.security.cert.CertPath r2;
        byte[] $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.security.cert.CertPath;

        $r3 = virtualinvoke r2.<java.security.cert.CertPath: byte[] getEncoded(java.lang.String)>("PkiPath");

        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void writePropertyTag(org.xmlpull.v1.XmlSerializer,java.lang.String,byte[])>(r0, r1, $r3);

        return;
    }

    private static void writePropertyTag(org.xmlpull.v1.XmlSerializer, java.lang.String, byte[]) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r3, $r5, $r7;
        byte[] r2;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        if r2 != null goto label1;

        return;

     label1:
        $r3 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r3, r1);

        $r5 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>(r2, 0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

        $r7 = <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSchema: java.lang.String NAMESPACE>;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r7, r1);

        return;
    }
}
