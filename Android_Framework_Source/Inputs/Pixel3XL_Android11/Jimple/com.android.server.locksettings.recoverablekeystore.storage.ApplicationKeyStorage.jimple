public class com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage extends java.lang.Object
{
    private static final java.lang.String APPLICATION_KEY_ALIAS_PREFIX;
    private static final java.lang.String TAG;
    private final com.android.server.locksettings.recoverablekeystore.KeyStoreProxy mKeyStore;
    private final android.security.KeyStore mKeystoreService;

    void <init>(com.android.server.locksettings.recoverablekeystore.KeyStoreProxy, android.security.KeyStore)
    {
        com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage r0;
        com.android.server.locksettings.recoverablekeystore.KeyStoreProxy r1;
        android.security.KeyStore r2;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage;

        r1 := @parameter0: com.android.server.locksettings.recoverablekeystore.KeyStoreProxy;

        r2 := @parameter1: android.security.KeyStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: com.android.server.locksettings.recoverablekeystore.KeyStoreProxy mKeyStore> = r1;

        r0.<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: android.security.KeyStore mKeystoreService> = r2;

        return;
    }

    public static com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage getInstance(android.security.KeyStore) throws java.security.KeyStoreException
    {
        android.security.KeyStore r0;
        com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage $r1;
        com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl $r2;
        java.security.KeyStore $r3;

        r0 := @parameter0: android.security.KeyStore;

        $r1 = new com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage;

        $r2 = new com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl;

        $r3 = staticinvoke <com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: java.security.KeyStore getAndLoadAndroidKeyStore()>();

        specialinvoke $r2.<com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: void <init>(java.security.KeyStore)>($r3);

        specialinvoke $r1.<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: void <init>(com.android.server.locksettings.recoverablekeystore.KeyStoreProxy,android.security.KeyStore)>($r2, r0);

        return $r1;
    }

    private java.lang.String getInternalAlias(int, int, java.lang.String)
    {
        com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage r0;
        int i0, i1;
        java.lang.String r1, $r10;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("com.android.server.locksettings.recoverablekeystore/application/");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void deleteEntry(int, int, java.lang.String)
    {
        com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage r0;
        int i0, i1;
        java.lang.Object[] $r1;
        java.util.Locale $r2;
        java.lang.Integer $r3, $r4;
        java.lang.String $r5, $r7, $r10, r11;
        com.android.server.locksettings.recoverablekeystore.KeyStoreProxy $r6;
        java.lang.Throwable $r8;
        android.os.ServiceSpecificException r13;
        java.security.KeyStoreException r14;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r11 := @parameter2: java.lang.String;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r1 = newarray (java.lang.Object)[3];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r1[1] = $r4;

        $r1[2] = r11;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "Del %d/%d/%s", $r1);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverableAppKeyStore", $r5);

     label1:
        $r6 = r0.<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: com.android.server.locksettings.recoverablekeystore.KeyStoreProxy mKeyStore>;

        $r7 = specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: java.lang.String getInternalAlias(int,int,java.lang.String)>(i0, i1, r11);

        interfaceinvoke $r6.<com.android.server.locksettings.recoverablekeystore.KeyStoreProxy: void deleteEntry(java.lang.String)>($r7);

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        r13 = new android.os.ServiceSpecificException;

        r14 = (java.security.KeyStoreException) $r8;

        $r10 = virtualinvoke r14.<java.security.KeyStoreException: java.lang.String getMessage()>();

        specialinvoke r13.<android.os.ServiceSpecificException: void <init>(int,java.lang.String)>(22, $r10);

        throw r13;

        catch java.security.KeyStoreException from label1 to label2 with label3;
    }

    public java.lang.String getGrantAlias(int, int, java.lang.String)
    {
        com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage r0;
        int i0, i1;
        java.lang.Object[] $r2;
        java.util.Locale $r3;
        java.lang.Integer $r4, $r5;
        java.lang.String $r6, $r9, $r12, r13, r14;
        java.lang.StringBuilder $r7;
        android.security.KeyStore $r11;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r13 := @parameter2: java.lang.String;

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r2 = newarray (java.lang.Object)[3];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r2[1] = $r5;

        $r2[2] = r13;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, "Get %d/%d/%s", $r2);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverableAppKeyStore", $r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r9 = specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: java.lang.String getInternalAlias(int,int,java.lang.String)>(i0, i1, r13);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: android.security.KeyStore mKeystoreService>;

        $r12 = virtualinvoke $r11.<android.security.KeyStore: java.lang.String grant(java.lang.String,int)>(r14, i1);

        return $r12;
    }

    public void setSymmetricKeyEntry(int, int, java.lang.String, byte[]) throws java.security.KeyStoreException
    {
        com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage r0;
        int i0, i1, $i2;
        com.android.server.locksettings.recoverablekeystore.KeyStoreProxy r1;
        java.lang.String r2, $r9, $r17, r18;
        java.lang.Object[] $r4;
        java.util.Locale $r5;
        java.lang.Integer $r6, $r7, $r8;
        java.lang.String[] $r10, $r12;
        android.security.keystore.KeyProtection$Builder $r11, $r13, r25;
        android.security.keystore.KeyProtection $r14;
        java.lang.Throwable $r15;
        byte[] r19;
        javax.crypto.spec.SecretKeySpec r23;
        java.security.KeyStore$SecretKeyEntry r24;
        android.os.ServiceSpecificException r26;
        java.security.KeyStoreException r27;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r18 := @parameter2: java.lang.String;

        r19 := @parameter3: byte[];

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r4 = newarray (java.lang.Object)[4];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4[1] = $r7;

        $r4[2] = r18;

        $i2 = lengthof r19;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[3] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r5, "Set %d/%d/%s: %d bytes of key material", $r4);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverableAppKeyStore", $r9);

     label1:
        r1 = r0.<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: com.android.server.locksettings.recoverablekeystore.KeyStoreProxy mKeyStore>;

        r2 = specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: java.lang.String getInternalAlias(int,int,java.lang.String)>(i0, i1, r18);

        r24 = new java.security.KeyStore$SecretKeyEntry;

        r23 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r19, "AES");

        specialinvoke r24.<java.security.KeyStore$SecretKeyEntry: void <init>(javax.crypto.SecretKey)>(r23);

        r25 = new android.security.keystore.KeyProtection$Builder;

        specialinvoke r25.<android.security.keystore.KeyProtection$Builder: void <init>(int)>(3);

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = "GCM";

        $r11 = virtualinvoke r25.<android.security.keystore.KeyProtection$Builder: android.security.keystore.KeyProtection$Builder setBlockModes(java.lang.String[])>($r10);

        $r12 = newarray (java.lang.String)[1];

        $r12[0] = "NoPadding";

        $r13 = virtualinvoke $r11.<android.security.keystore.KeyProtection$Builder: android.security.keystore.KeyProtection$Builder setEncryptionPaddings(java.lang.String[])>($r12);

        $r14 = virtualinvoke $r13.<android.security.keystore.KeyProtection$Builder: android.security.keystore.KeyProtection build()>();

        interfaceinvoke r1.<com.android.server.locksettings.recoverablekeystore.KeyStoreProxy: void setEntry(java.lang.String,java.security.KeyStore$Entry,java.security.KeyStore$ProtectionParameter)>(r2, r24, $r14);

     label2:
        return;

     label3:
        $r15 := @caughtexception;

        r26 = new android.os.ServiceSpecificException;

        r27 = (java.security.KeyStoreException) $r15;

        $r17 = virtualinvoke r27.<java.security.KeyStoreException: java.lang.String getMessage()>();

        specialinvoke r26.<android.os.ServiceSpecificException: void <init>(int,java.lang.String)>(22, $r17);

        throw r26;

        catch java.security.KeyStoreException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: java.lang.String TAG> = "RecoverableAppKeyStore";

        <com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: java.lang.String APPLICATION_KEY_ALIAS_PREFIX> = "com.android.server.locksettings.recoverablekeystore/application/";

        return;
    }
}
