public class com.android.server.locksettings.recoverablekeystore.storage.CleanupManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage mApplicationKeyStorage;
    private final android.content.Context mContext;
    private final com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase;
    private java.util.Map mSerialNumbers;
    private final com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage mSnapshotStorage;
    private final android.os.UserManager mUserManager;

    void <init>(android.content.Context, com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage, com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb, android.os.UserManager, com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage)
    {
        com.android.server.locksettings.recoverablekeystore.storage.CleanupManager r0;
        android.content.Context r1;
        com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage r2;
        com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb r3;
        android.os.UserManager r4;
        com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage r5;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.CleanupManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage;

        r3 := @parameter2: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb;

        r4 := @parameter3: android.os.UserManager;

        r5 := @parameter4: com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: android.content.Context mContext> = r1;

        r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage mSnapshotStorage> = r2;

        r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase> = r3;

        r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: android.os.UserManager mUserManager> = r4;

        r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage mApplicationKeyStorage> = r5;

        return;
    }

    public static com.android.server.locksettings.recoverablekeystore.storage.CleanupManager getInstance(android.content.Context, com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage, com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb, com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage)
    {
        android.content.Context r0;
        com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage r1;
        com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb r2;
        com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage r3;
        com.android.server.locksettings.recoverablekeystore.storage.CleanupManager $r4;
        android.os.UserManager $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage;

        r2 := @parameter2: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb;

        r3 := @parameter3: com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage;

        $r4 = new com.android.server.locksettings.recoverablekeystore.storage.CleanupManager;

        $r5 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>(r0);

        specialinvoke $r4.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: void <init>(android.content.Context,com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage,com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb,android.os.UserManager,com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage)>(r0, r1, r2, $r5, r3);

        return $r4;
    }

    private void removeAllKeysForRecoveryAgent(int, int)
    {
        com.android.server.locksettings.recoverablekeystore.storage.CleanupManager r0;
        int i0, i1, i2;
        java.util.Iterator r1;
        java.lang.String r2, $r17;
        com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb $r5, $r6;
        java.util.Map $r7;
        java.util.Set $r8;
        boolean $z0;
        java.lang.Object $r9;
        com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage $r10;
        android.os.ServiceSpecificException $r11;
        java.lang.StringBuilder $r12;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.CleanupManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r5 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase>;

        i2 = virtualinvoke $r5.<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: int getPlatformKeyGenerationId(int)>(i0);

        $r6 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase>;

        $r7 = virtualinvoke $r6.<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: java.util.Map getAllKeys(int,int,int)>(i0, i1, i2);

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        r1 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r9;

     label2:
        $r10 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage mApplicationKeyStorage>;

        virtualinvoke $r10.<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: void deleteEntry(int,int,java.lang.String)>(i0, i1, r2);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while removing recoverable key ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CleanupManager", $r17);

     label5:
        goto label1;

     label6:
        return;

        catch android.os.ServiceSpecificException from label2 to label3 with label4;
    }

    private void removeDataForUser(int)
    {
        com.android.server.locksettings.recoverablekeystore.storage.CleanupManager r0;
        int i0, $i2, $i3;
        java.util.Iterator r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;
        com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb $r7, $r9;
        java.util.List $r8;
        boolean $z0;
        java.lang.Object $r10;
        com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage $r11;
        java.lang.Integer r13;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.CleanupManager;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing data for user ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CleanupManager", $r6);

        $r7 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase>;

        $r8 = virtualinvoke $r7.<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: java.util.List getRecoveryAgents(int)>(i0);

        r1 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.Integer) $r10;

        $r11 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage mSnapshotStorage>;

        $i2 = virtualinvoke r13.<java.lang.Integer: int intValue()>();

        virtualinvoke $r11.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: void remove(int)>($i2);

        $i3 = virtualinvoke r13.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: void removeAllKeysForRecoveryAgent(int,int)>(i0, $i3);

        goto label1;

     label2:
        $r9 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase>;

        virtualinvoke $r9.<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: void removeUserFromAllTables(int)>(i0);

        return;
    }

    private void storeUserSerialNumber(int, long)
    {
        com.android.server.locksettings.recoverablekeystore.storage.CleanupManager r0;
        int i0;
        long l1;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;
        java.util.Map $r7;
        java.lang.Integer $r8;
        java.lang.Long $r9;
        com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb $r11;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.CleanupManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing serial number for user ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CleanupManager", $r6);

        $r7 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: java.util.Map mSerialNumbers>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r11 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase>;

        virtualinvoke $r11.<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setUserSerialNumber(int,long)>(i0, l1);

        return;
    }

    public void registerRecoveryAgent(int, int)
    {
        com.android.server.locksettings.recoverablekeystore.storage.CleanupManager r0;
        int i0, i1;
        java.lang.Long r1, r9;
        java.util.Map $r2, $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        byte $b2, $b3;
        android.os.UserManager $r6;
        android.os.UserHandle $r7;
        java.lang.Throwable $r8;
        long l4, l5;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.CleanupManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label01:
        $r2 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: java.util.Map mSerialNumbers>;

        if $r2 != null goto label02;

        virtualinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: void verifyKnownUsers()>();

     label02:
        $r3 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: java.util.Map mSerialNumbers>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r1 = (java.lang.Long) $r5;

     label03:
        r9 = r1;

        if r1 != null goto label05;

     label04:
        r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L);

     label05:
        l4 = virtualinvoke r9.<java.lang.Long: long longValue()>();

     label06:
        $b2 = l4 cmp -1L;

        if $b2 == 0 goto label07;

        exitmonitor r0;

        return;

     label07:
        $r6 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: android.os.UserManager mUserManager>;

        $r7 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        l5 = virtualinvoke $r6.<android.os.UserManager: long getSerialNumberForUser(android.os.UserHandle)>($r7);

     label08:
        $b3 = l5 cmp -1L;

        if $b3 == 0 goto label10;

     label09:
        specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: void storeUserSerialNumber(int,long)>(i0, l5);

     label10:
        exitmonitor r0;

        return;

     label11:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void verifyKnownUsers()
    {
        com.android.server.locksettings.recoverablekeystore.storage.CleanupManager r0;
        com.android.server.locksettings.recoverablekeystore.storage.CleanupManager$1 r1;
        java.util.Iterator r2, r20;
        java.lang.Integer r3, r21;
        long l0, $l3, $l5;
        com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb $r4;
        java.util.Map $r5, $r6, $r9;
        java.util.Set $r7;
        boolean $z0, $z1;
        java.lang.Object $r8, $r11, $r12, $r13;
        android.os.UserManager $r14;
        int $i1, $i7, $i8, $i9, $i10;
        android.os.UserHandle $r15;
        byte $b2, $b4, $b6;
        java.lang.Throwable $r16;
        java.util.Map$Entry r17;
        java.lang.Long r18, r19;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.CleanupManager;

        entermonitor r0;

     label01:
        $r4 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb mDatabase>;

        $r5 = virtualinvoke $r4.<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: java.util.Map getUserSerialNumbers()>();

        r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: java.util.Map mSerialNumbers> = $r5;

        r1 = new com.android.server.locksettings.recoverablekeystore.storage.CleanupManager$1;

        specialinvoke r1.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager$1: void <init>(com.android.server.locksettings.recoverablekeystore.storage.CleanupManager)>(r0);

        $r6 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: java.util.Map mSerialNumbers>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.Map$Entry) $r11;

        $r12 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        r3 = (java.lang.Integer) $r12;

        $r13 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        r18 = (java.lang.Long) $r13;

     label03:
        r19 = r18;

        if r18 != null goto label05;

     label04:
        r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L);

     label05:
        $r14 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: android.os.UserManager mUserManager>;

        $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r15 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i1);

        l0 = virtualinvoke $r14.<android.os.UserManager: long getSerialNumberForUser(android.os.UserHandle)>($r15);

     label06:
        $b2 = l0 cmp -1L;

        if $b2 != 0 goto label09;

     label07:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

        $i10 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: void removeDataForUser(int)>($i10);

     label08:
        goto label12;

     label09:
        $l3 = virtualinvoke r19.<java.lang.Long: long longValue()>();

        $b4 = $l3 cmp -1L;

        if $b4 != 0 goto label11;

        $i9 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: void storeUserSerialNumber(int,long)>($i9, l0);

     label10:
        goto label12;

     label11:
        $l5 = virtualinvoke r19.<java.lang.Long: long longValue()>();

        $b6 = $l5 cmp l0;

        if $b6 == 0 goto label12;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

        $i7 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: void removeDataForUser(int)>($i7);

        $i8 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: void storeUserSerialNumber(int,long)>($i8, l0);

     label12:
        goto label02;

     label13:
        r20 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r8 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.lang.Integer) $r8;

        $r9 = r0.<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: java.util.Map mSerialNumbers>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r21);

     label15:
        goto label14;

     label16:
        exitmonitor r0;

        return;

     label17:
        $r16 := @caughtexception;

        exitmonitor r0;

        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
    }

    public static void <clinit>()
    {
        <com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: java.lang.String TAG> = "CleanupManager";

        return;
    }
}
