public class com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage extends java.lang.Object
{
    private static final java.lang.String ROOT_PATH;
    private static final java.lang.String STORAGE_PATH;
    private static final java.lang.String TAG;
    private final android.util.SparseArray mSnapshotByUid;
    private final java.io.File rootDirectory;

    public void <init>(java.io.File)
    {
        com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage r0;
        java.io.File r1;
        android.util.SparseArray $r2;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: android.util.SparseArray mSnapshotByUid> = $r2;

        r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: java.io.File rootDirectory> = r1;

        return;
    }

    private java.io.File getSnapshotFile(int)
    {
        com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage r0;
        int i0;
        java.io.File $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: java.io.File getStorageFolder()>();

        $r3 = specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: java.lang.String getSnapshotFileName(int)>(i0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3);

        return $r1;
    }

    private java.lang.String getSnapshotFileName(int)
    {
        com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage r0;
        int i0;
        java.lang.Object[] $r1;
        java.util.Locale $r2;
        java.lang.Integer $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage;

        i0 := @parameter0: int;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r1 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "%d.xml", $r1);

        return $r4;
    }

    private java.io.File getStorageFolder()
    {
        com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage r0;
        java.io.File $r2, $r3;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage;

        $r2 = new java.io.File;

        $r3 = r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: java.io.File rootDirectory>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "recoverablekeystore/snapshots/");

        virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

        return $r2;
    }

    public static com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage newInstance()
    {
        com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage $r0;
        java.io.File $r1, $r2;

        $r0 = new com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "system");

        specialinvoke $r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: void <init>(java.io.File)>($r1);

        return $r0;
    }

    private android.security.keystore.recovery.KeyChainSnapshot readFromDisk(int) throws java.io.IOException, com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException
    {
        com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage r0;
        int i0;
        java.io.File r1;
        java.lang.Throwable $r2, $r3, $r4;
        java.io.FileInputStream r5;
        android.security.keystore.recovery.KeyChainSnapshot r6;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: java.io.File getSnapshotFile(int)>(i0);

     label01:
        r5 = new java.io.FileInputStream;

        specialinvoke r5.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

     label02:
        r6 = staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: android.security.keystore.recovery.KeyChainSnapshot deserialize(java.io.InputStream)>(r5);

     label03:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label04:
        return r6;

     label05:
        $r3 := @caughtexception;

     label06:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label07:
        goto label10;

     label08:
        $r4 := @caughtexception;

     label09:
        virtualinvoke $r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r4);

     label10:
        throw $r3;

     label11:
        $r2 := @caughtexception;

        virtualinvoke r1.<java.io.File: boolean delete()>();

        throw $r2;

        catch java.io.IOException from label01 to label02 with label11;
        catch com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.io.IOException from label03 to label04 with label11;
        catch com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.io.IOException from label09 to label10 with label11;
        catch com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException from label09 to label10 with label11;
        catch java.io.IOException from label10 to label11 with label11;
        catch com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException from label10 to label11 with label11;
    }

    private void writeToDisk(int, android.security.keystore.recovery.KeyChainSnapshot) throws java.io.IOException, java.security.cert.CertificateEncodingException
    {
        com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage r0;
        int i0;
        java.io.File r1;
        java.lang.Throwable $r2, $r3, $r4;
        android.security.keystore.recovery.KeyChainSnapshot r5;
        java.io.FileOutputStream r6;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage;

        i0 := @parameter0: int;

        r5 := @parameter1: android.security.keystore.recovery.KeyChainSnapshot;

        r1 = specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: java.io.File getSnapshotFile(int)>(i0);

     label01:
        r6 = new java.io.FileOutputStream;

        specialinvoke r6.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

     label02:
        staticinvoke <com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void serialize(android.security.keystore.recovery.KeyChainSnapshot,java.io.OutputStream)>(r5, r6);

     label03:
        virtualinvoke r6.<java.io.FileOutputStream: void close()>();

     label04:
        return;

     label05:
        $r4 := @caughtexception;

     label06:
        virtualinvoke r6.<java.io.FileOutputStream: void close()>();

     label07:
        goto label10;

     label08:
        $r3 := @caughtexception;

     label09:
        virtualinvoke $r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r3);

     label10:
        throw $r4;

     label11:
        $r2 := @caughtexception;

        virtualinvoke r1.<java.io.File: boolean delete()>();

        throw $r2;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.security.cert.CertificateEncodingException from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.security.cert.CertificateEncodingException from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.security.cert.CertificateEncodingException from label09 to label10 with label11;
        catch java.io.IOException from label10 to label11 with label11;
        catch java.security.cert.CertificateEncodingException from label10 to label11 with label11;
    }

    public android.security.keystore.recovery.KeyChainSnapshot get(int)
    {
        com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3, $r8;
        java.lang.Object[] $r4;
        java.util.Locale $r5;
        java.lang.Integer $r6;
        java.lang.String $r7;
        android.security.keystore.recovery.KeyChainSnapshot r9, r10;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: android.util.SparseArray mSnapshotByUid>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r9 = (android.security.keystore.recovery.KeyChainSnapshot) $r2;

     label2:
        if r9 == null goto label3;

        exitmonitor r0;

        return r9;

     label3:
        r10 = specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: android.security.keystore.recovery.KeyChainSnapshot readFromDisk(int)>(i0);

     label4:
        exitmonitor r0;

        return r10;

     label5:
        $r3 := @caughtexception;

     label6:
        $r5 = <java.util.Locale: java.util.Locale US>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r5, "Error reading snapshot for %d from disk", $r4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RecoverySnapshotStorage", $r7, $r3);

     label7:
        exitmonitor r0;

        return null;

     label8:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label5;
        catch com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void put(int, android.security.keystore.recovery.KeyChainSnapshot)
    {
        com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Throwable $r2, $r7;
        java.lang.Object[] $r3;
        java.util.Locale $r4;
        java.lang.Integer $r5;
        java.lang.String $r6;
        android.security.keystore.recovery.KeyChainSnapshot r8;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage;

        i0 := @parameter0: int;

        r8 := @parameter1: android.security.keystore.recovery.KeyChainSnapshot;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: android.util.SparseArray mSnapshotByUid>;

        virtualinvoke $r1.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r8);

     label2:
        specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: void writeToDisk(int,android.security.keystore.recovery.KeyChainSnapshot)>(i0, r8);

     label3:
        goto label6;

     label4:
        $r2 := @caughtexception;

     label5:
        $r4 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "Error persisting snapshot for %d to disk", $r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RecoverySnapshotStorage", $r6, $r2);

     label6:
        exitmonitor r0;

        return;

     label7:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.io.IOException from label2 to label3 with label4;
        catch java.security.cert.CertificateEncodingException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void remove(int)
    {
        com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage r0;
        int i0;
        android.util.SparseArray $r2;
        java.io.File $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: android.util.SparseArray mSnapshotByUid>;

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>(i0);

        $r3 = specialinvoke r0.<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: java.io.File getSnapshotFile(int)>(i0);

        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: java.lang.String TAG> = "RecoverySnapshotStorage";

        <com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: java.lang.String STORAGE_PATH> = "recoverablekeystore/snapshots/";

        <com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: java.lang.String ROOT_PATH> = "system";

        return;
    }
}
