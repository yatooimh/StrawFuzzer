class com.android.server.media.AudioPlayerStateMonitor extends java.lang.Object
{
    private static boolean DEBUG;
    private static java.lang.String TAG;
    private static com.android.server.media.AudioPlayerStateMonitor sInstance;
    final java.util.Set mActiveAudioUids;
    private final java.util.Map mListenerMap;
    private final java.lang.Object mLock;
    android.util.ArrayMap mPrevActiveAudioPlaybackConfigs;
    final android.util.IntArray mSortedAudioPlaybackClientUids;

    static void <clinit>()
    {
        boolean $z0;

        $z0 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        <com.android.server.media.AudioPlayerStateMonitor: boolean DEBUG> = $z0;

        <com.android.server.media.AudioPlayerStateMonitor: java.lang.String TAG> = "AudioPlayerStateMonitor";

        return;
    }

    private void <init>(android.content.Context)
    {
        com.android.server.media.AudioPlayerStateMonitor r0;
        android.content.Context r1;
        java.lang.Object $r2, $r7;
        android.util.ArrayMap $r3, $r5;
        android.util.ArraySet $r4;
        android.util.IntArray $r6;
        com.android.server.media.AudioPlayerStateMonitor$AudioManagerPlaybackListener $r8;
        android.media.AudioManager $r9;

        r0 := @this: com.android.server.media.AudioPlayerStateMonitor;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.media.AudioPlayerStateMonitor: java.lang.Object mLock> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.media.AudioPlayerStateMonitor: java.util.Map mListenerMap> = $r3;

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.media.AudioPlayerStateMonitor: java.util.Set mActiveAudioUids> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.media.AudioPlayerStateMonitor: android.util.ArrayMap mPrevActiveAudioPlaybackConfigs> = $r5;

        $r6 = new android.util.IntArray;

        specialinvoke $r6.<android.util.IntArray: void <init>()>();

        r0.<com.android.server.media.AudioPlayerStateMonitor: android.util.IntArray mSortedAudioPlaybackClientUids> = $r6;

        $r7 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r9 = (android.media.AudioManager) $r7;

        $r8 = new com.android.server.media.AudioPlayerStateMonitor$AudioManagerPlaybackListener;

        specialinvoke $r8.<com.android.server.media.AudioPlayerStateMonitor$AudioManagerPlaybackListener: void <init>(com.android.server.media.AudioPlayerStateMonitor,com.android.server.media.AudioPlayerStateMonitor$1)>(r0, null);

        virtualinvoke $r9.<android.media.AudioManager: void registerAudioPlaybackCallback(android.media.AudioManager$AudioPlaybackCallback,android.os.Handler)>($r8, null);

        return;
    }

    static java.lang.Object access$100(com.android.server.media.AudioPlayerStateMonitor)
    {
        com.android.server.media.AudioPlayerStateMonitor r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.media.AudioPlayerStateMonitor;

        $r1 = r0.<com.android.server.media.AudioPlayerStateMonitor: java.lang.Object mLock>;

        return $r1;
    }

    static boolean access$200()
    {
        boolean $z0;

        $z0 = <com.android.server.media.AudioPlayerStateMonitor: boolean DEBUG>;

        return $z0;
    }

    static java.lang.String access$300()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.media.AudioPlayerStateMonitor: java.lang.String TAG>;

        return $r0;
    }

    static void access$400(com.android.server.media.AudioPlayerStateMonitor, android.media.AudioPlaybackConfiguration, boolean)
    {
        com.android.server.media.AudioPlayerStateMonitor r0;
        android.media.AudioPlaybackConfiguration r1;
        boolean z0;

        r0 := @parameter0: com.android.server.media.AudioPlayerStateMonitor;

        r1 := @parameter1: android.media.AudioPlaybackConfiguration;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.media.AudioPlayerStateMonitor: void sendAudioPlayerActiveStateChangedMessageLocked(android.media.AudioPlaybackConfiguration,boolean)>(r1, z0);

        return;
    }

    static com.android.server.media.AudioPlayerStateMonitor getInstance(android.content.Context)
    {
        com.android.server.media.AudioPlayerStateMonitor r0, $r1, r4;
        java.lang.Throwable $r2;
        android.content.Context r3;

        r3 := @parameter0: android.content.Context;

        entermonitor class "Lcom/android/server/media/AudioPlayerStateMonitor;";

     label1:
        $r1 = <com.android.server.media.AudioPlayerStateMonitor: com.android.server.media.AudioPlayerStateMonitor sInstance>;

        if $r1 != null goto label2;

        r0 = new com.android.server.media.AudioPlayerStateMonitor;

        specialinvoke r0.<com.android.server.media.AudioPlayerStateMonitor: void <init>(android.content.Context)>(r3);

        <com.android.server.media.AudioPlayerStateMonitor: com.android.server.media.AudioPlayerStateMonitor sInstance> = r0;

     label2:
        r4 = <com.android.server.media.AudioPlayerStateMonitor: com.android.server.media.AudioPlayerStateMonitor sInstance>;

        exitmonitor class "Lcom/android/server/media/AudioPlayerStateMonitor;";

     label3:
        return r4;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor class "Lcom/android/server/media/AudioPlayerStateMonitor;";

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void sendAudioPlayerActiveStateChangedMessageLocked(android.media.AudioPlaybackConfiguration, boolean)
    {
        com.android.server.media.AudioPlayerStateMonitor r0;
        android.media.AudioPlaybackConfiguration r1;
        boolean z0, $z1;
        java.util.Iterator r2;
        java.util.Map $r3;
        java.util.Collection $r4;
        java.lang.Object $r5;
        com.android.server.media.AudioPlayerStateMonitor$MessageHandler $r6;

        r0 := @this: com.android.server.media.AudioPlayerStateMonitor;

        r1 := @parameter0: android.media.AudioPlaybackConfiguration;

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.server.media.AudioPlayerStateMonitor: java.util.Map mListenerMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.media.AudioPlayerStateMonitor$MessageHandler) $r5;

        virtualinvoke $r6.<com.android.server.media.AudioPlayerStateMonitor$MessageHandler: void sendAudioPlayerActiveStateChangedMessage(android.media.AudioPlaybackConfiguration,boolean)>(r1, z0);

        goto label1;

     label2:
        return;
    }

    public void cleanUpAudioPlaybackUids(int)
    {
        com.android.server.media.AudioPlayerStateMonitor r0;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        java.lang.Object r1;
        android.os.UserHandle $r3, $r7;
        android.util.IntArray $r4, $r5, $r6, $r8;
        boolean $z0;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.media.AudioPlayerStateMonitor;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.media.AudioPlayerStateMonitor: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        i1 = virtualinvoke $r3.<android.os.UserHandle: int getIdentifier()>();

        $r4 = r0.<com.android.server.media.AudioPlayerStateMonitor: android.util.IntArray mSortedAudioPlaybackClientUids>;

        $i3 = virtualinvoke $r4.<android.util.IntArray: int size()>();

        i6 = $i3 - 1;

     label02:
        if i6 < 0 goto label07;

     label03:
        $r5 = r0.<com.android.server.media.AudioPlayerStateMonitor: android.util.IntArray mSortedAudioPlaybackClientUids>;

        $i4 = virtualinvoke $r5.<android.util.IntArray: int get(int)>(i6);

        if $i4 != i0 goto label05;

     label04:
        goto label07;

     label05:
        $r6 = r0.<com.android.server.media.AudioPlayerStateMonitor: android.util.IntArray mSortedAudioPlaybackClientUids>;

        i2 = virtualinvoke $r6.<android.util.IntArray: int get(int)>(i6);

        $r7 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i2);

        $i5 = virtualinvoke $r7.<android.os.UserHandle: int getIdentifier()>();

        if i1 != $i5 goto label06;

        $z0 = virtualinvoke r0.<com.android.server.media.AudioPlayerStateMonitor: boolean isPlaybackActive(int)>(i2);

        if $z0 != 0 goto label06;

        $r8 = r0.<com.android.server.media.AudioPlayerStateMonitor: android.util.IntArray mSortedAudioPlaybackClientUids>;

        virtualinvoke $r8.<android.util.IntArray: void remove(int)>(i6);

     label06:
        i6 = i6 + -1;

        goto label02;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void dump(android.content.Context, java.io.PrintWriter, java.lang.String)
    {
        com.android.server.media.AudioPlayerStateMonitor r0;
        java.io.PrintWriter r1;
        java.lang.Object r2;
        java.lang.StringBuilder r3, r24, r25, r27;
        java.lang.String $r6, $r15, $r17, $r20, r23, r26;
        android.util.IntArray $r9, $r10;
        int $i0, $i1, $i2, i3, i4, i5;
        android.content.pm.PackageManager $r16;
        java.lang.Throwable $r21;
        android.content.Context r22;
        java.lang.String[] r28;

        r0 := @this: com.android.server.media.AudioPlayerStateMonitor;

        r22 := @parameter0: android.content.Context;

        r1 := @parameter1: java.io.PrintWriter;

        r23 := @parameter2: java.lang.String;

        r2 = r0.<com.android.server.media.AudioPlayerStateMonitor: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Audio playback (lastly played comes first)");

        $r6 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r26 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        i3 = 0;

     label03:
        $r9 = r0.<com.android.server.media.AudioPlayerStateMonitor: android.util.IntArray mSortedAudioPlaybackClientUids>;

        $i0 = virtualinvoke $r9.<android.util.IntArray: int size()>();

        if i3 >= $i0 goto label11;

        $r10 = r0.<com.android.server.media.AudioPlayerStateMonitor: android.util.IntArray mSortedAudioPlaybackClientUids>;

        i4 = virtualinvoke $r10.<android.util.IntArray: int get(int)>(i3);

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uid=");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packages=");

        $r15 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        $r16 = virtualinvoke r22.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r28 = virtualinvoke $r16.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i4);

     label04:
        if r28 == null goto label09;

     label05:
        $i1 = lengthof r28;

        if $i1 <= 0 goto label09;

     label06:
        i5 = 0;

     label07:
        $i2 = lengthof r28;

        if i5 >= $i2 goto label09;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r17 = r28[i5];

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r20 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r20);

     label08:
        i5 = i5 + 1;

        goto label07;

     label09:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label10:
        i3 = i3 + 1;

        goto label03;

     label11:
        exitmonitor r2;

     label12:
        return;

     label13:
        $r21 := @caughtexception;

     label14:
        exitmonitor r2;

     label15:
        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public android.util.IntArray getSortedAudioPlaybackClientUids()
    {
        com.android.server.media.AudioPlayerStateMonitor r0;
        java.lang.Object r1;
        android.util.IntArray $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.media.AudioPlayerStateMonitor;

        $r2 = new android.util.IntArray;

        specialinvoke $r2.<android.util.IntArray: void <init>()>();

        r1 = r0.<com.android.server.media.AudioPlayerStateMonitor: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.media.AudioPlayerStateMonitor: android.util.IntArray mSortedAudioPlaybackClientUids>;

        virtualinvoke $r2.<android.util.IntArray: void addAll(android.util.IntArray)>($r3);

        exitmonitor r1;

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isPlaybackActive(int)
    {
        com.android.server.media.AudioPlayerStateMonitor r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        java.util.Set $r3;
        java.lang.Integer $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.media.AudioPlayerStateMonitor;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.media.AudioPlayerStateMonitor: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.media.AudioPlayerStateMonitor: java.util.Set mActiveAudioUids>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void registerListener(com.android.server.media.AudioPlayerStateMonitor$OnAudioPlayerActiveStateChangedListener, android.os.Handler)
    {
        com.android.server.media.AudioPlayerStateMonitor r0;
        java.lang.Object r1;
        java.util.Map r2;
        com.android.server.media.AudioPlayerStateMonitor$MessageHandler r3;
        java.lang.Throwable $r5;
        com.android.server.media.AudioPlayerStateMonitor$OnAudioPlayerActiveStateChangedListener r6;
        android.os.Handler r7;
        android.os.Looper r8;

        r0 := @this: com.android.server.media.AudioPlayerStateMonitor;

        r6 := @parameter0: com.android.server.media.AudioPlayerStateMonitor$OnAudioPlayerActiveStateChangedListener;

        r7 := @parameter1: android.os.Handler;

        r1 = r0.<com.android.server.media.AudioPlayerStateMonitor: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = r0.<com.android.server.media.AudioPlayerStateMonitor: java.util.Map mListenerMap>;

        r3 = new com.android.server.media.AudioPlayerStateMonitor$MessageHandler;

     label02:
        if r7 != null goto label05;

     label03:
        r8 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

     label04:
        goto label06;

     label05:
        r8 = virtualinvoke r7.<android.os.Handler: android.os.Looper getLooper()>();

     label06:
        specialinvoke r3.<com.android.server.media.AudioPlayerStateMonitor$MessageHandler: void <init>(android.os.Looper,com.android.server.media.AudioPlayerStateMonitor$OnAudioPlayerActiveStateChangedListener)>(r8, r6);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r3);

        exitmonitor r1;

     label07:
        return;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void unregisterListener(com.android.server.media.AudioPlayerStateMonitor$OnAudioPlayerActiveStateChangedListener)
    {
        com.android.server.media.AudioPlayerStateMonitor r0;
        java.lang.Object r1;
        java.util.Map $r2;
        java.lang.Throwable $r4;
        com.android.server.media.AudioPlayerStateMonitor$OnAudioPlayerActiveStateChangedListener r5;

        r0 := @this: com.android.server.media.AudioPlayerStateMonitor;

        r5 := @parameter0: com.android.server.media.AudioPlayerStateMonitor$OnAudioPlayerActiveStateChangedListener;

        r1 = r0.<com.android.server.media.AudioPlayerStateMonitor: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.media.AudioPlayerStateMonitor: java.util.Map mListenerMap>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
