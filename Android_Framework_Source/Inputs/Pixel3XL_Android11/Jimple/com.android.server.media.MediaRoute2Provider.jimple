abstract class com.android.server.media.MediaRoute2Provider extends java.lang.Object
{
    com.android.server.media.MediaRoute2Provider$Callback mCallback;
    final android.content.ComponentName mComponentName;
    boolean mIsSystemRouteProvider;
    final java.lang.Object mLock;
    private volatile android.media.MediaRoute2ProviderInfo mProviderInfo;
    final java.util.List mSessionInfos;
    final java.lang.String mUniqueId;

    void <init>(android.content.ComponentName)
    {
        com.android.server.media.MediaRoute2Provider r0;
        android.content.ComponentName r1, $r5;
        java.lang.Object $r2;
        java.util.ArrayList $r3;
        java.lang.String $r6;

        r0 := @this: com.android.server.media.MediaRoute2Provider;

        r1 := @parameter0: android.content.ComponentName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.media.MediaRoute2Provider: java.lang.Object mLock> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.media.MediaRoute2Provider: java.util.List mSessionInfos> = $r3;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "Component name must not be null.");

        $r5 = (android.content.ComponentName) r1;

        r0.<com.android.server.media.MediaRoute2Provider: android.content.ComponentName mComponentName> = $r5;

        $r6 = virtualinvoke r1.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        r0.<com.android.server.media.MediaRoute2Provider: java.lang.String mUniqueId> = $r6;

        return;
    }

    public abstract void deselectRoute(long, java.lang.String, java.lang.String);

    public android.media.MediaRoute2ProviderInfo getProviderInfo()
    {
        com.android.server.media.MediaRoute2Provider r0;
        android.media.MediaRoute2ProviderInfo $r1;

        r0 := @this: com.android.server.media.MediaRoute2Provider;

        $r1 = r0.<com.android.server.media.MediaRoute2Provider: android.media.MediaRoute2ProviderInfo mProviderInfo>;

        return $r1;
    }

    public java.util.List getSessionInfos()
    {
        com.android.server.media.MediaRoute2Provider r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.util.List r3;

        r0 := @this: com.android.server.media.MediaRoute2Provider;

        r1 = r0.<com.android.server.media.MediaRoute2Provider: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.media.MediaRoute2Provider: java.util.List mSessionInfos>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String getUniqueId()
    {
        com.android.server.media.MediaRoute2Provider r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.media.MediaRoute2Provider;

        $r1 = r0.<com.android.server.media.MediaRoute2Provider: java.lang.String mUniqueId>;

        return $r1;
    }

    public boolean hasComponentName(java.lang.String, java.lang.String)
    {
        com.android.server.media.MediaRoute2Provider r0;
        java.lang.String r1, r2, $r4, $r6;
        android.content.ComponentName $r3, $r5;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.media.MediaRoute2Provider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.media.MediaRoute2Provider: android.content.ComponentName mComponentName>;

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.media.MediaRoute2Provider: android.content.ComponentName mComponentName>;

        $r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getClassName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    void notifyProviderState()
    {
        com.android.server.media.MediaRoute2Provider r0;
        com.android.server.media.MediaRoute2Provider$Callback r1;

        r0 := @this: com.android.server.media.MediaRoute2Provider;

        r1 = r0.<com.android.server.media.MediaRoute2Provider: com.android.server.media.MediaRoute2Provider$Callback mCallback>;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.server.media.MediaRoute2Provider$Callback: void onProviderStateChanged(com.android.server.media.MediaRoute2Provider)>(r0);

     label1:
        return;
    }

    public abstract void prepareReleaseSession(java.lang.String);

    public abstract void releaseSession(long, java.lang.String);

    public abstract void requestCreateSession(long, java.lang.String, java.lang.String, android.os.Bundle);

    public abstract void selectRoute(long, java.lang.String, java.lang.String);

    void setAndNotifyProviderState(android.media.MediaRoute2ProviderInfo)
    {
        com.android.server.media.MediaRoute2Provider r0;
        android.media.MediaRoute2ProviderInfo r1;

        r0 := @this: com.android.server.media.MediaRoute2Provider;

        r1 := @parameter0: android.media.MediaRoute2ProviderInfo;

        virtualinvoke r0.<com.android.server.media.MediaRoute2Provider: void setProviderState(android.media.MediaRoute2ProviderInfo)>(r1);

        virtualinvoke r0.<com.android.server.media.MediaRoute2Provider: void notifyProviderState()>();

        return;
    }

    public void setCallback(com.android.server.media.MediaRoute2Provider$Callback)
    {
        com.android.server.media.MediaRoute2Provider r0;
        com.android.server.media.MediaRoute2Provider$Callback r1;

        r0 := @this: com.android.server.media.MediaRoute2Provider;

        r1 := @parameter0: com.android.server.media.MediaRoute2Provider$Callback;

        r0.<com.android.server.media.MediaRoute2Provider: com.android.server.media.MediaRoute2Provider$Callback mCallback> = r1;

        return;
    }

    void setProviderState(android.media.MediaRoute2ProviderInfo)
    {
        com.android.server.media.MediaRoute2Provider r0;
        android.media.MediaRoute2ProviderInfo r1, $r6;
        android.media.MediaRoute2ProviderInfo$Builder $r2, $r4, $r5;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.android.server.media.MediaRoute2Provider;

        r1 := @parameter0: android.media.MediaRoute2ProviderInfo;

        if r1 != null goto label1;

        r0.<com.android.server.media.MediaRoute2Provider: android.media.MediaRoute2ProviderInfo mProviderInfo> = null;

        goto label2;

     label1:
        $r2 = new android.media.MediaRoute2ProviderInfo$Builder;

        specialinvoke $r2.<android.media.MediaRoute2ProviderInfo$Builder: void <init>(android.media.MediaRoute2ProviderInfo)>(r1);

        $r3 = r0.<com.android.server.media.MediaRoute2Provider: java.lang.String mUniqueId>;

        $r4 = virtualinvoke $r2.<android.media.MediaRoute2ProviderInfo$Builder: android.media.MediaRoute2ProviderInfo$Builder setUniqueId(java.lang.String)>($r3);

        $z0 = r0.<com.android.server.media.MediaRoute2Provider: boolean mIsSystemRouteProvider>;

        $r5 = virtualinvoke $r4.<android.media.MediaRoute2ProviderInfo$Builder: android.media.MediaRoute2ProviderInfo$Builder setSystemRouteProvider(boolean)>($z0);

        $r6 = virtualinvoke $r5.<android.media.MediaRoute2ProviderInfo$Builder: android.media.MediaRoute2ProviderInfo build()>();

        r0.<com.android.server.media.MediaRoute2Provider: android.media.MediaRoute2ProviderInfo mProviderInfo> = $r6;

     label2:
        return;
    }

    public abstract void setRouteVolume(long, java.lang.String, int);

    public abstract void setSessionVolume(long, java.lang.String, int);

    public abstract void transferToRoute(long, java.lang.String, java.lang.String);

    public abstract void updateDiscoveryPreference(android.media.RouteDiscoveryPreference);
}
