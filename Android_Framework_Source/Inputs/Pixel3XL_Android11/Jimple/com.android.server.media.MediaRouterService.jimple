public final class com.android.server.media.MediaRouterService extends android.media.IMediaRouterService$Stub implements com.android.server.Watchdog$Monitor
{
    static final long CONNECTED_TIMEOUT;
    static final long CONNECTING_TIMEOUT;
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    android.bluetooth.BluetoothDevice mActiveBluetoothDevice;
    private final android.util.IntArray mActivePlayerMinPriorityQueue;
    private final android.util.IntArray mActivePlayerUidMinPriorityQueue;
    private final android.util.ArrayMap mAllClientRecords;
    private final com.android.server.media.AudioPlayerStateMonitor mAudioPlayerStateMonitor;
    int mAudioRouteMainType;
    private final android.media.IAudioService mAudioService;
    private final android.content.Context mContext;
    private int mCurrentUserId;
    boolean mGlobalBluetoothA2dpOn;
    private final android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private final android.content.BroadcastReceiver mReceiver;
    private final com.android.server.media.MediaRouter2ServiceImpl mService2;
    private final android.util.SparseArray mUserRecords;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.media.MediaRouterService: java.lang.String TAG> = "MediaRouterService";

        <com.android.server.media.MediaRouterService: long CONNECTING_TIMEOUT> = 5000L;

        <com.android.server.media.MediaRouterService: long CONNECTED_TIMEOUT> = 60000L;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MediaRouterService", 3);

        <com.android.server.media.MediaRouterService: boolean DEBUG> = $z0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.media.MediaRouterService r0;
        android.content.Context r1;
        android.media.IAudioService r2, $r13;
        java.lang.Object $r3;
        android.util.SparseArray $r4;
        android.util.ArrayMap $r5;
        android.os.Handler $r6, $r15;
        android.util.IntArray $r7, $r8;
        com.android.server.media.MediaRouterService$MediaRouterServiceBroadcastReceiver $r9;
        com.android.server.media.MediaRouter2ServiceImpl $r10;
        com.android.server.Watchdog $r11;
        android.os.IBinder $r12;
        com.android.server.media.MediaRouterService$1 $r14;
        android.content.IntentFilter $r17;
        android.os.UserHandle $r18;
        android.content.BroadcastReceiver $r19;
        android.os.RemoteException $r21;
        com.android.server.media.AudioPlayerStateMonitor r22;
        com.android.server.media.MediaRouterService$2 r23;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.media.IMediaRouterService$Stub: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords> = $r5;

        r0.<com.android.server.media.MediaRouterService: int mCurrentUserId> = -1;

        $r6 = new android.os.Handler;

        specialinvoke $r6.<android.os.Handler: void <init>()>();

        r0.<com.android.server.media.MediaRouterService: android.os.Handler mHandler> = $r6;

        $r7 = new android.util.IntArray;

        specialinvoke $r7.<android.util.IntArray: void <init>()>();

        r0.<com.android.server.media.MediaRouterService: android.util.IntArray mActivePlayerMinPriorityQueue> = $r7;

        $r8 = new android.util.IntArray;

        specialinvoke $r8.<android.util.IntArray: void <init>()>();

        r0.<com.android.server.media.MediaRouterService: android.util.IntArray mActivePlayerUidMinPriorityQueue> = $r8;

        $r9 = new com.android.server.media.MediaRouterService$MediaRouterServiceBroadcastReceiver;

        specialinvoke $r9.<com.android.server.media.MediaRouterService$MediaRouterServiceBroadcastReceiver: void <init>(com.android.server.media.MediaRouterService)>(r0);

        r0.<com.android.server.media.MediaRouterService: android.content.BroadcastReceiver mReceiver> = $r9;

        r0.<com.android.server.media.MediaRouterService: int mAudioRouteMainType> = 0;

        r0.<com.android.server.media.MediaRouterService: boolean mGlobalBluetoothA2dpOn> = 0;

        $r10 = new com.android.server.media.MediaRouter2ServiceImpl;

        specialinvoke $r10.<com.android.server.media.MediaRouter2ServiceImpl: void <init>(android.content.Context)>(r1);

        r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2> = $r10;

        r0.<com.android.server.media.MediaRouterService: android.content.Context mContext> = r1;

        $r11 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r11.<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog$Monitor)>(r0);

        $r12 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("audio");

        $r13 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService asInterface(android.os.IBinder)>($r12);

        r0.<com.android.server.media.MediaRouterService: android.media.IAudioService mAudioService> = $r13;

        r22 = staticinvoke <com.android.server.media.AudioPlayerStateMonitor: com.android.server.media.AudioPlayerStateMonitor getInstance(android.content.Context)>(r1);

        r0.<com.android.server.media.MediaRouterService: com.android.server.media.AudioPlayerStateMonitor mAudioPlayerStateMonitor> = r22;

        $r14 = new com.android.server.media.MediaRouterService$1;

        specialinvoke $r14.<com.android.server.media.MediaRouterService$1: void <init>(com.android.server.media.MediaRouterService)>(r0);

        $r15 = r0.<com.android.server.media.MediaRouterService: android.os.Handler mHandler>;

        virtualinvoke r22.<com.android.server.media.AudioPlayerStateMonitor: void registerListener(com.android.server.media.AudioPlayerStateMonitor$OnAudioPlayerActiveStateChangedListener,android.os.Handler)>($r14, $r15);

     label1:
        r2 = r0.<com.android.server.media.MediaRouterService: android.media.IAudioService mAudioService>;

        r23 = new com.android.server.media.MediaRouterService$2;

        specialinvoke r23.<com.android.server.media.MediaRouterService$2: void <init>(com.android.server.media.MediaRouterService)>(r0);

        interfaceinvoke r2.<android.media.IAudioService: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>(r23);

     label2:
        goto label4;

     label3:
        $r21 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("MediaRouterService", "RemoteException in the audio service.");

     label4:
        $r17 = new android.content.IntentFilter;

        specialinvoke $r17.<android.content.IntentFilter: void <init>(java.lang.String)>("android.bluetooth.a2dp.profile.action.ACTIVE_DEVICE_CHANGED");

        $r19 = r0.<com.android.server.media.MediaRouterService: android.content.BroadcastReceiver mReceiver>;

        $r18 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r19, $r18, $r17, null, null);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static android.util.IntArray access$000(com.android.server.media.MediaRouterService)
    {
        com.android.server.media.MediaRouterService r0;
        android.util.IntArray $r1;

        r0 := @parameter0: com.android.server.media.MediaRouterService;

        $r1 = r0.<com.android.server.media.MediaRouterService: android.util.IntArray mActivePlayerMinPriorityQueue>;

        return $r1;
    }

    static android.util.IntArray access$100(com.android.server.media.MediaRouterService)
    {
        com.android.server.media.MediaRouterService r0;
        android.util.IntArray $r1;

        r0 := @parameter0: com.android.server.media.MediaRouterService;

        $r1 = r0.<com.android.server.media.MediaRouterService: android.util.IntArray mActivePlayerUidMinPriorityQueue>;

        return $r1;
    }

    static android.os.Handler access$200(com.android.server.media.MediaRouterService)
    {
        com.android.server.media.MediaRouterService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.media.MediaRouterService;

        $r1 = r0.<com.android.server.media.MediaRouterService: android.os.Handler mHandler>;

        return $r1;
    }

    static boolean access$300()
    {
        boolean $z0;

        $z0 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        return $z0;
    }

    static java.lang.Object access$400(com.android.server.media.MediaRouterService)
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.media.MediaRouterService;

        $r1 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        return $r1;
    }

    static int access$600(com.android.server.media.MediaRouterService)
    {
        com.android.server.media.MediaRouterService r0;
        int $i0;

        r0 := @parameter0: com.android.server.media.MediaRouterService;

        $i0 = r0.<com.android.server.media.MediaRouterService: int mCurrentUserId>;

        return $i0;
    }

    static android.util.SparseArray access$700(com.android.server.media.MediaRouterService)
    {
        com.android.server.media.MediaRouterService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.media.MediaRouterService;

        $r1 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        return $r1;
    }

    static android.content.Context access$800(com.android.server.media.MediaRouterService)
    {
        com.android.server.media.MediaRouterService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.media.MediaRouterService;

        $r1 = r0.<com.android.server.media.MediaRouterService: android.content.Context mContext>;

        return $r1;
    }

    private void disposeClientLocked(com.android.server.media.MediaRouterService$ClientRecord, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        com.android.server.media.MediaRouterService$ClientRecord r1;
        boolean z0, $z1, $z3;
        com.android.server.media.MediaRouterService$UserRecord $r2;
        com.android.server.media.MediaRouterService$UserHandler $r3;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r7, $r11;
        int $i2;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: com.android.server.media.MediaRouterService$ClientRecord;

        z0 := @parameter1: boolean;

        $z1 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        if $z1 == 0 goto label2;

        if z0 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Died!");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r11);

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Unregistered");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r7);

     label2:
        $i2 = r1.<com.android.server.media.MediaRouterService$ClientRecord: int mRouteTypes>;

        if $i2 != 0 goto label3;

        $z3 = r1.<com.android.server.media.MediaRouterService$ClientRecord: boolean mActiveScan>;

        if $z3 == 0 goto label4;

     label3:
        $r2 = r1.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r3 = $r2.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        virtualinvoke $r3.<com.android.server.media.MediaRouterService$UserHandler: boolean sendEmptyMessage(int)>(3);

     label4:
        virtualinvoke r1.<com.android.server.media.MediaRouterService$ClientRecord: void dispose()>();

        return;
    }

    private void disposeUserIfNeededLocked(com.android.server.media.MediaRouterService$UserRecord)
    {
        com.android.server.media.MediaRouterService r0;
        com.android.server.media.MediaRouterService$UserRecord r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r3;
        boolean $z0, $z1;
        android.util.SparseArray $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: com.android.server.media.MediaRouterService$UserRecord;

        $i1 = r1.<com.android.server.media.MediaRouterService$UserRecord: int mUserId>;

        $i0 = r0.<com.android.server.media.MediaRouterService: int mCurrentUserId>;

        if $i1 == $i0 goto label2;

        $r3 = r1.<com.android.server.media.MediaRouterService$UserRecord: java.util.ArrayList mClientRecords>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $z1 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Disposed");

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r8);

     label1:
        $r4 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        $i2 = r1.<com.android.server.media.MediaRouterService$UserRecord: int mUserId>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>($i2);

     label2:
        return;
    }

    private android.media.MediaRouterClientState getStateLocked(android.media.IMediaRouterClient)
    {
        com.android.server.media.MediaRouterService r0;
        android.util.ArrayMap $r1;
        android.os.IBinder $r2;
        java.lang.Object $r3;
        android.media.MediaRouterClientState $r4;
        android.media.IMediaRouterClient r5;
        com.android.server.media.MediaRouterService$ClientRecord r6;

        r0 := @this: com.android.server.media.MediaRouterService;

        r5 := @parameter0: android.media.IMediaRouterClient;

        $r1 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r2 = interfaceinvoke r5.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r3 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r2);

        r6 = (com.android.server.media.MediaRouterService$ClientRecord) $r3;

        if r6 == null goto label1;

        $r4 = virtualinvoke r6.<com.android.server.media.MediaRouterService$ClientRecord: android.media.MediaRouterClientState getState()>();

        return $r4;

     label1:
        return null;
    }

    private void initializeClientLocked(com.android.server.media.MediaRouterService$ClientRecord)
    {
        com.android.server.media.MediaRouterService r0;
        com.android.server.media.MediaRouterService$ClientRecord r1;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: com.android.server.media.MediaRouterService$ClientRecord;

        $z0 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Registered");

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r6);

     label1:
        return;
    }

    private void initializeUserLocked(com.android.server.media.MediaRouterService$UserRecord)
    {
        com.android.server.media.MediaRouterService r0;
        com.android.server.media.MediaRouterService$UserRecord r1;
        boolean $z0;
        int $i0, $i1;
        com.android.server.media.MediaRouterService$UserHandler $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: com.android.server.media.MediaRouterService$UserRecord;

        $z0 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Initialized");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r7);

     label1:
        $i1 = r1.<com.android.server.media.MediaRouterService$UserRecord: int mUserId>;

        $i0 = r0.<com.android.server.media.MediaRouterService: int mCurrentUserId>;

        if $i1 != $i0 goto label2;

        $r3 = r1.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        virtualinvoke $r3.<com.android.server.media.MediaRouterService$UserHandler: boolean sendEmptyMessage(int)>(1);

     label2:
        return;
    }

    private void registerClientGroupIdLocked(android.media.IMediaRouterClient, java.lang.String)
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.String r1, $r5, $r6, $r9;
        com.android.server.media.MediaRouterService$ClientRecord r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        boolean $z0;
        com.android.server.media.MediaRouterService$UserHandler $r7;
        android.os.Message $r8;
        android.media.IMediaRouterClient r10;
        android.os.IBinder r11;
        com.android.server.media.MediaRouterService$UserRecord r12;

        r0 := @this: com.android.server.media.MediaRouterService;

        r10 := @parameter0: android.media.IMediaRouterClient;

        r1 := @parameter1: java.lang.String;

        r11 = interfaceinvoke r10.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r3 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r11);

        r2 = (com.android.server.media.MediaRouterService$ClientRecord) $r4;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRouterService", "Ignoring group id register request of a unregistered client.");

        return;

     label1:
        $r5 = r2.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mGroupId>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r5, r1);

        if $z0 == 0 goto label2;

        return;

     label2:
        r12 = r2.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r6 = r2.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mGroupId>;

        if $r6 == null goto label3;

        $r9 = r2.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mGroupId>;

        virtualinvoke r12.<com.android.server.media.MediaRouterService$UserRecord: void removeFromGroup(java.lang.String,com.android.server.media.MediaRouterService$ClientRecord)>($r9, r2);

     label3:
        r2.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mGroupId> = r1;

        if r1 == null goto label4;

        virtualinvoke r12.<com.android.server.media.MediaRouterService$UserRecord: void addToGroup(java.lang.String,com.android.server.media.MediaRouterService$ClientRecord)>(r1, r2);

        $r7 = r12.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        $r8 = virtualinvoke $r7.<com.android.server.media.MediaRouterService$UserHandler: android.os.Message obtainMessage(int,java.lang.Object)>(10, r1);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

     label4:
        return;
    }

    private void registerClientLocked(android.media.IMediaRouterClient, int, int, java.lang.String, int, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        int i0, i1, i2;
        java.lang.String r1;
        boolean z0, z2;
        android.os.IBinder r2;
        android.util.ArrayMap $r3, $r10;
        java.lang.Object $r4, $r7;
        com.android.server.media.MediaRouterService$ClientRecord $r5, $r8;
        android.util.SparseArray $r6, $r12;
        java.util.ArrayList $r9;
        com.android.server.media.MediaRouterService$UserRecord $r13, r17;
        android.os.RemoteException $r14;
        java.lang.RuntimeException $r15;
        android.media.IMediaRouterClient r16;

        r0 := @this: com.android.server.media.MediaRouterService;

        r16 := @parameter0: android.media.IMediaRouterClient;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        r2 = interfaceinvoke r16.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r3 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (com.android.server.media.MediaRouterService$ClientRecord) $r4;

        if $r5 != null goto label7;

        $r6 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r17 = (com.android.server.media.MediaRouterService$UserRecord) $r7;

        if r17 != null goto label1;

        $r13 = new com.android.server.media.MediaRouterService$UserRecord;

        specialinvoke $r13.<com.android.server.media.MediaRouterService$UserRecord: void <init>(com.android.server.media.MediaRouterService,int)>(r0, i2);

        r17 = $r13;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        $r8 = new com.android.server.media.MediaRouterService$ClientRecord;

        specialinvoke $r8.<com.android.server.media.MediaRouterService$ClientRecord: void <init>(com.android.server.media.MediaRouterService,com.android.server.media.MediaRouterService$UserRecord,android.media.IMediaRouterClient,int,int,java.lang.String,boolean)>(r0, r17, r16, i0, i1, r1, z0);

     label3:
        interfaceinvoke r2.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r8, 0);

     label4:
        if z2 == 0 goto label5;

        $r12 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        virtualinvoke $r12.<android.util.SparseArray: void put(int,java.lang.Object)>(i2, r17);

        specialinvoke r0.<com.android.server.media.MediaRouterService: void initializeUserLocked(com.android.server.media.MediaRouterService$UserRecord)>(r17);

     label5:
        $r9 = r17.<com.android.server.media.MediaRouterService$UserRecord: java.util.ArrayList mClientRecords>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        $r10 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r8);

        specialinvoke r0.<com.android.server.media.MediaRouterService: void initializeClientLocked(com.android.server.media.MediaRouterService$ClientRecord)>($r8);

        goto label7;

     label6:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Media router client died prematurely.", $r14);

        throw $r15;

     label7:
        return;

        catch android.os.RemoteException from label3 to label4 with label6;
    }

    private void requestSetVolumeLocked(android.media.IMediaRouterClient, java.lang.String, int)
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.String r1;
        int i0;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        com.android.server.media.MediaRouterService$UserRecord $r4;
        com.android.server.media.MediaRouterService$UserHandler $r5;
        android.os.Message $r6;
        android.media.IMediaRouterClient r7;
        android.os.IBinder r8;
        com.android.server.media.MediaRouterService$ClientRecord r9;

        r0 := @this: com.android.server.media.MediaRouterService;

        r7 := @parameter0: android.media.IMediaRouterClient;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r8 = interfaceinvoke r7.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r2 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (com.android.server.media.MediaRouterService$ClientRecord) $r3;

        if r9 == null goto label1;

        $r4 = r9.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r5 = $r4.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        $r6 = virtualinvoke $r5.<com.android.server.media.MediaRouterService$UserHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(6, i0, 0, r1);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    private void requestUpdateVolumeLocked(android.media.IMediaRouterClient, java.lang.String, int)
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.String r1;
        int i0;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        com.android.server.media.MediaRouterService$UserRecord $r4;
        com.android.server.media.MediaRouterService$UserHandler $r5;
        android.os.Message $r6;
        android.media.IMediaRouterClient r7;
        android.os.IBinder r8;
        com.android.server.media.MediaRouterService$ClientRecord r9;

        r0 := @this: com.android.server.media.MediaRouterService;

        r7 := @parameter0: android.media.IMediaRouterClient;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r8 = interfaceinvoke r7.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r2 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (com.android.server.media.MediaRouterService$ClientRecord) $r3;

        if r9 == null goto label1;

        $r4 = r9.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r5 = $r4.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        $r6 = virtualinvoke $r5.<com.android.server.media.MediaRouterService$UserHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(7, i0, 0, r1);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    private void setDiscoveryRequestLocked(android.media.IMediaRouterClient, int, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        int i0, $i1, i3;
        boolean z0, $z1, $z2, $z4;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        com.android.server.media.MediaRouterService$UserRecord $r4;
        com.android.server.media.MediaRouterService$UserHandler $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9, $r13;
        android.media.IMediaRouterClient r14;
        android.os.IBinder r15;
        com.android.server.media.MediaRouterService$ClientRecord r16;

        r0 := @this: com.android.server.media.MediaRouterService;

        r14 := @parameter0: android.media.IMediaRouterClient;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r15 = interfaceinvoke r14.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r2 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r15);

        r16 = (com.android.server.media.MediaRouterService$ClientRecord) $r3;

        if r16 == null goto label4;

        i3 = i0;

        $z1 = r16.<com.android.server.media.MediaRouterService$ClientRecord: boolean mTrusted>;

        if $z1 != 0 goto label1;

        i3 = i0 & -5;

     label1:
        $i1 = r16.<com.android.server.media.MediaRouterService$ClientRecord: int mRouteTypes>;

        if $i1 != i3 goto label2;

        $z4 = r16.<com.android.server.media.MediaRouterService$ClientRecord: boolean mActiveScan>;

        if $z4 == z0 goto label4;

     label2:
        $z2 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        if $z2 == 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Set discovery request, routeTypes=0x");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", activeScan=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r13);

     label3:
        r16.<com.android.server.media.MediaRouterService$ClientRecord: int mRouteTypes> = i3;

        r16.<com.android.server.media.MediaRouterService$ClientRecord: boolean mActiveScan> = z0;

        $r4 = r16.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r5 = $r4.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        virtualinvoke $r5.<com.android.server.media.MediaRouterService$UserHandler: boolean sendEmptyMessage(int)>(3);

     label4:
        return;
    }

    private void setSelectedRouteLocked(android.media.IMediaRouterClient, java.lang.String, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.String r1, r2, $r6, $r9, $r12, $r29;
        boolean z0, $z1, $z2, $z3;
        android.util.ArrayMap $r3, $r8;
        android.os.IBinder $r4;
        java.lang.Object $r5, $r10;
        com.android.server.media.MediaRouterService$UserRecord $r7, $r11, $r15, $r18;
        com.android.server.media.MediaRouterService$UserHandler $r13, $r16, $r19;
        android.os.Message $r14, $r17, $r20;
        java.lang.StringBuilder $r21;
        android.media.IMediaRouterClient r30;
        com.android.server.media.MediaRouterService$ClientRecord r31;
        com.android.server.media.MediaRouterService$ClientGroup r33;

        r0 := @this: com.android.server.media.MediaRouterService;

        r30 := @parameter0: android.media.IMediaRouterClient;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r4 = interfaceinvoke r30.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r31 = (com.android.server.media.MediaRouterService$ClientRecord) $r5;

        if r31 == null goto label4;

        r2 = r31.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mSelectedRouteId>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, r2);

        if $z1 != 0 goto label4;

        $z2 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        if $z2 == 0 goto label1;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Set selected route, routeId=");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oldRouteId=");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", explicit=");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r29 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r29);

     label1:
        r31.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mSelectedRouteId> = r1;

        if z0 == 0 goto label4;

        $z3 = r31.<com.android.server.media.MediaRouterService$ClientRecord: boolean mTrusted>;

        if $z3 == 0 goto label4;

        if r2 == null goto label2;

        $r18 = r31.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r19 = $r18.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        $r20 = virtualinvoke $r19.<com.android.server.media.MediaRouterService$UserHandler: android.os.Message obtainMessage(int,java.lang.Object)>(5, r2);

        virtualinvoke $r20.<android.os.Message: void sendToTarget()>();

     label2:
        if r1 == null goto label3;

        $r15 = r31.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r16 = $r15.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        $r17 = virtualinvoke $r16.<com.android.server.media.MediaRouterService$UserHandler: android.os.Message obtainMessage(int,java.lang.Object)>(4, r1);

        virtualinvoke $r17.<android.os.Message: void sendToTarget()>();

     label3:
        $r6 = r31.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mGroupId>;

        if $r6 == null goto label4;

        $r7 = r31.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r8 = staticinvoke <com.android.server.media.MediaRouterService$UserRecord: android.util.ArrayMap access$500(com.android.server.media.MediaRouterService$UserRecord)>($r7);

        $r9 = r31.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mGroupId>;

        $r10 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r9);

        r33 = (com.android.server.media.MediaRouterService$ClientGroup) $r10;

        if r33 == null goto label4;

        r33.<com.android.server.media.MediaRouterService$ClientGroup: java.lang.String mSelectedRouteId> = r1;

        $r11 = r31.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r13 = $r11.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        $r12 = r31.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mGroupId>;

        $r14 = virtualinvoke $r13.<com.android.server.media.MediaRouterService$UserHandler: android.os.Message obtainMessage(int,java.lang.Object)>(10, $r12);

        virtualinvoke $r14.<android.os.Message: void sendToTarget()>();

     label4:
        return;
    }

    private void unregisterClientLocked(android.media.IMediaRouterClient, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        boolean z0;
        com.android.server.media.MediaRouterService$UserRecord r1;
        android.util.ArrayMap $r2;
        android.os.IBinder $r3;
        java.lang.Object $r4;
        java.util.ArrayList $r5;
        java.lang.String $r6, $r7;
        android.media.IMediaRouterClient r8;
        com.android.server.media.MediaRouterService$ClientRecord r9;

        r0 := @this: com.android.server.media.MediaRouterService;

        r8 := @parameter0: android.media.IMediaRouterClient;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r3 = interfaceinvoke r8.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r4 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r3);

        r9 = (com.android.server.media.MediaRouterService$ClientRecord) $r4;

        if r9 == null goto label2;

        r1 = r9.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r5 = r1.<com.android.server.media.MediaRouterService$UserRecord: java.util.ArrayList mClientRecords>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r9);

        $r6 = r9.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mGroupId>;

        if $r6 == null goto label1;

        $r7 = r9.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mGroupId>;

        virtualinvoke r1.<com.android.server.media.MediaRouterService$UserRecord: void removeFromGroup(java.lang.String,com.android.server.media.MediaRouterService$ClientRecord)>($r7, r9);

        r9.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mGroupId> = null;

     label1:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void disposeClientLocked(com.android.server.media.MediaRouterService$ClientRecord,boolean)>(r9, z0);

        specialinvoke r0.<com.android.server.media.MediaRouterService: void disposeUserIfNeededLocked(com.android.server.media.MediaRouterService$UserRecord)>(r1);

     label2:
        return;
    }

    private boolean validatePackageName(int, java.lang.String)
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.String r1, $r5;
        java.lang.String[] r2;
        int i0, i1, i2;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        boolean $z0;

        r0 := @this: com.android.server.media.MediaRouterService;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        if r1 == null goto label3;

        $r3 = r0.<com.android.server.media.MediaRouterService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i1);

        if r2 == null goto label3;

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $r5 = r2[i2];

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    void clientDied(com.android.server.media.MediaRouterService$ClientRecord)
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.Object r1;
        android.media.IMediaRouterClient $r2;
        java.lang.Throwable $r3;
        com.android.server.media.MediaRouterService$ClientRecord r4;

        r0 := @this: com.android.server.media.MediaRouterService;

        r4 := @parameter0: com.android.server.media.MediaRouterService$ClientRecord;

        r1 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r4.<com.android.server.media.MediaRouterService$ClientRecord: android.media.IMediaRouterClient mClient>;

        specialinvoke r0.<com.android.server.media.MediaRouterService: void unregisterClientLocked(android.media.IMediaRouterClient,boolean)>($r2, 1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void deselectRouteWithManager(android.media.IMediaRouter2Manager, int, java.lang.String, android.media.MediaRoute2Info)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2Manager r1;
        int i0;
        java.lang.String r2;
        android.media.MediaRoute2Info r3;
        com.android.server.media.MediaRouter2ServiceImpl $r4;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.media.MediaRoute2Info;

        $r4 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r4.<com.android.server.media.MediaRouter2ServiceImpl: void deselectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>(r1, i0, r2, r3);

        return;
    }

    public void deselectRouteWithRouter2(android.media.IMediaRouter2, java.lang.String, android.media.MediaRoute2Info)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2 r1;
        java.lang.String r2;
        android.media.MediaRoute2Info r3;
        com.android.server.media.MediaRouter2ServiceImpl $r4;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.media.MediaRoute2Info;

        $r4 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r4.<com.android.server.media.MediaRouter2ServiceImpl: void deselectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>(r1, r2, r3);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.media.MediaRouterService r0;
        int i0, $i1, i2;
        android.content.Context $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.util.SparseArray $r6, $r7;
        java.lang.Object $r8, r14;
        java.lang.Throwable $r9;
        java.io.FileDescriptor r10;
        java.io.PrintWriter r11;
        java.lang.String[] r12;
        com.android.server.media.MediaRouterService$UserRecord r15;

        r0 := @this: com.android.server.media.MediaRouterService;

        r10 := @parameter0: java.io.FileDescriptor;

        r11 := @parameter1: java.io.PrintWriter;

        r12 := @parameter2: java.lang.String[];

        $r1 = r0.<com.android.server.media.MediaRouterService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r1, "MediaRouterService", r11);

        if $z0 != 0 goto label01;

        return;

     label01:
        virtualinvoke r11.<java.io.PrintWriter: void println(java.lang.String)>("MEDIA ROUTER SERVICE (dumpsys media_router)");

        virtualinvoke r11.<java.io.PrintWriter: void println()>();

        virtualinvoke r11.<java.io.PrintWriter: void println(java.lang.String)>("Global state");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurrentUserId=");

        $i1 = r0.<com.android.server.media.MediaRouterService: int mCurrentUserId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r11.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        r14 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r14;

     label02:
        $r6 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        i0 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

     label03:
        i2 = 0;

     label04:
        if i2 >= i0 goto label07;

     label05:
        $r7 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r15 = (com.android.server.media.MediaRouterService$UserRecord) $r8;

        virtualinvoke r11.<java.io.PrintWriter: void println()>();

        virtualinvoke r15.<com.android.server.media.MediaRouterService$UserRecord: void dump(java.io.PrintWriter,java.lang.String)>(r11, "");

     label06:
        i2 = i2 + 1;

        goto label04;

     label07:
        exitmonitor r14;

     label08:
        return;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r14;

     label11:
        throw $r9;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public java.util.List getActiveSessions(android.media.IMediaRouter2Manager)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2Manager r1;
        com.android.server.media.MediaRouter2ServiceImpl $r2;
        java.util.List $r3;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        $r2 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        $r3 = virtualinvoke $r2.<com.android.server.media.MediaRouter2ServiceImpl: java.util.List getActiveSessions(android.media.IMediaRouter2Manager)>(r1);

        return $r3;
    }

    public android.media.MediaRouterClientState getState(android.media.IMediaRouterClient)
    {
        com.android.server.media.MediaRouterService r0;
        long l0;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3, $r4;
        android.media.IMediaRouterClient r5;
        android.media.MediaRouterClientState r6;

        r0 := @this: com.android.server.media.MediaRouterService;

        r5 := @parameter0: android.media.IMediaRouterClient;

        if r5 == null goto label8;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        r6 = specialinvoke r0.<com.android.server.media.MediaRouterService: android.media.MediaRouterClientState getStateLocked(android.media.IMediaRouterClient)>(r5);

        exitmonitor r1;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r6;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

     label7:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

     label8:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public java.util.List getSystemRoutes()
    {
        com.android.server.media.MediaRouterService r0;
        com.android.server.media.MediaRouter2ServiceImpl $r1;
        java.util.List $r2;

        r0 := @this: com.android.server.media.MediaRouterService;

        $r1 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        $r2 = virtualinvoke $r1.<com.android.server.media.MediaRouter2ServiceImpl: java.util.List getSystemRoutes()>();

        return $r2;
    }

    public android.media.RoutingSessionInfo getSystemSessionInfo()
    {
        com.android.server.media.MediaRouterService r0;
        com.android.server.media.MediaRouter2ServiceImpl $r1;
        android.media.RoutingSessionInfo $r2;

        r0 := @this: com.android.server.media.MediaRouterService;

        $r1 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        $r2 = virtualinvoke $r1.<com.android.server.media.MediaRouter2ServiceImpl: android.media.RoutingSessionInfo getSystemSessionInfo()>();

        return $r2;
    }

    public boolean isPlaybackActive(android.media.IMediaRouterClient)
    {
        com.android.server.media.MediaRouterService r0;
        long l0;
        java.lang.Object r1, $r5;
        boolean z0;
        java.lang.IllegalArgumentException $r2;
        android.util.ArrayMap $r3;
        android.os.IBinder $r4;
        int $i1;
        com.android.server.media.AudioPlayerStateMonitor $r6;
        java.lang.Throwable $r7, $r8;
        android.media.IMediaRouterClient r9;
        com.android.server.media.MediaRouterService$ClientRecord r10;

        r0 := @this: com.android.server.media.MediaRouterService;

        r9 := @parameter0: android.media.IMediaRouterClient;

        if r9 == null goto label11;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r1 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $r3 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r4 = interfaceinvoke r9.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r10 = (com.android.server.media.MediaRouterService$ClientRecord) $r5;

        exitmonitor r1;

     label03:
        if r10 == null goto label06;

     label04:
        $r6 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.AudioPlayerStateMonitor mAudioPlayerStateMonitor>;

        $i1 = r10.<com.android.server.media.MediaRouterService$ClientRecord: int mUid>;

        z0 = virtualinvoke $r6.<com.android.server.media.AudioPlayerStateMonitor: boolean isPlaybackActive(int)>($i1);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label07:
        $r7 := @caughtexception;

     label08:
        exitmonitor r1;

     label09:
        throw $r7;

     label10:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r8;

     label11:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    public void monitor()
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void registerClientAsUser(android.media.IMediaRouterClient, java.lang.String, int)
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.String r1;
        int i0, i1, $i3, i4, i5;
        long l2;
        java.lang.Object r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0, z1;
        java.lang.SecurityException $r4;
        android.content.Context $r5;
        java.lang.Throwable $r6, $r7;
        android.media.IMediaRouterClient r8;

        r0 := @this: com.android.server.media.MediaRouterService;

        r8 := @parameter0: android.media.IMediaRouterClient;

        r1 := @parameter1: java.lang.String;

        i4 := @parameter2: int;

        if r8 == null goto label11;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = specialinvoke r0.<com.android.server.media.MediaRouterService: boolean validatePackageName(int,java.lang.String)>(i0, r1);

        if $z0 == 0 goto label10;

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i5 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i1, i0, i4, 0, 1, "registerClientAsUser", r1);

        $r5 = r0.<com.android.server.media.MediaRouterService: android.content.Context mContext>;

        $i3 = virtualinvoke $r5.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.CONFIGURE_WIFI_DISPLAY");

        if $i3 != 0 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        r2 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r2;

     label04:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void registerClientLocked(android.media.IMediaRouterClient,int,int,java.lang.String,int,boolean)>(r8, i0, i1, r1, i5, z1);

        exitmonitor r2;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label06:
        $r7 := @caughtexception;

     label07:
        exitmonitor r2;

     label08:
        throw $r7;

     label09:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r6;

     label10:
        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("packageName must match the calling uid");

        throw $r4;

     label11:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r3;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label08 to label09 with label09;
    }

    public void registerClientGroupId(android.media.IMediaRouterClient, java.lang.String)
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.String r1;
        long l0;
        java.lang.Object r2;
        java.lang.NullPointerException $r3;
        android.content.Context $r4;
        int $i1;
        java.lang.Throwable $r5, $r6;
        android.media.IMediaRouterClient r7;

        r0 := @this: com.android.server.media.MediaRouterService;

        r7 := @parameter0: android.media.IMediaRouterClient;

        r1 := @parameter1: java.lang.String;

        if r7 == null goto label9;

        $r4 = r0.<com.android.server.media.MediaRouterService: android.content.Context mContext>;

        $i1 = virtualinvoke $r4.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.CONFIGURE_WIFI_DISPLAY");

        if $i1 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRouterService", "Ignoring client group request because the client doesn\'t have the CONFIGURE_WIFI_DISPLAY permission.");

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        r2 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r2;

     label3:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void registerClientGroupIdLocked(android.media.IMediaRouterClient,java.lang.String)>(r7, r1);

        exitmonitor r2;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r6;

     label8:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

     label9:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("client must not be null");

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label7 to label8 with label8;
    }

    public void registerManager(android.media.IMediaRouter2Manager, java.lang.String)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2Manager r1;
        java.lang.String r2;
        int $i0;
        boolean $z0;
        java.lang.SecurityException $r3;
        com.android.server.media.MediaRouter2ServiceImpl $r4;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        r2 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = specialinvoke r0.<com.android.server.media.MediaRouterService: boolean validatePackageName(int,java.lang.String)>($i0, r2);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r4.<com.android.server.media.MediaRouter2ServiceImpl: void registerManager(android.media.IMediaRouter2Manager,java.lang.String)>(r1, r2);

        return;

     label1:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("packageName must match the calling uid");

        throw $r3;
    }

    public void registerRouter2(android.media.IMediaRouter2, java.lang.String)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2 r1;
        java.lang.String r2;
        int $i0;
        boolean $z0;
        java.lang.SecurityException $r3;
        com.android.server.media.MediaRouter2ServiceImpl $r4;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = specialinvoke r0.<com.android.server.media.MediaRouterService: boolean validatePackageName(int,java.lang.String)>($i0, r2);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r4.<com.android.server.media.MediaRouter2ServiceImpl: void registerRouter2(android.media.IMediaRouter2,java.lang.String)>(r1, r2);

        return;

     label1:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("packageName must match the calling uid");

        throw $r3;
    }

    public void releaseSessionWithManager(android.media.IMediaRouter2Manager, int, java.lang.String)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2Manager r1;
        int i0;
        java.lang.String r2;
        com.android.server.media.MediaRouter2ServiceImpl $r3;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r3.<com.android.server.media.MediaRouter2ServiceImpl: void releaseSessionWithManager(android.media.IMediaRouter2Manager,int,java.lang.String)>(r1, i0, r2);

        return;
    }

    public void releaseSessionWithRouter2(android.media.IMediaRouter2, java.lang.String)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2 r1;
        java.lang.String r2;
        com.android.server.media.MediaRouter2ServiceImpl $r3;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r3.<com.android.server.media.MediaRouter2ServiceImpl: void releaseSessionWithRouter2(android.media.IMediaRouter2,java.lang.String)>(r1, r2);

        return;
    }

    public void requestCreateSessionWithManager(android.media.IMediaRouter2Manager, int, android.media.RoutingSessionInfo, android.media.MediaRoute2Info)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2Manager r1;
        int i0;
        android.media.RoutingSessionInfo r2;
        android.media.MediaRoute2Info r3;
        com.android.server.media.MediaRouter2ServiceImpl $r4;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: android.media.RoutingSessionInfo;

        r3 := @parameter3: android.media.MediaRoute2Info;

        $r4 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r4.<com.android.server.media.MediaRouter2ServiceImpl: void requestCreateSessionWithManager(android.media.IMediaRouter2Manager,int,android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>(r1, i0, r2, r3);

        return;
    }

    public void requestCreateSessionWithRouter2(android.media.IMediaRouter2, int, long, android.media.RoutingSessionInfo, android.media.MediaRoute2Info, android.os.Bundle)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2 r1;
        int i0;
        long l1;
        android.media.RoutingSessionInfo r2;
        android.media.MediaRoute2Info r3;
        android.os.Bundle r4;
        com.android.server.media.MediaRouter2ServiceImpl $r5;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r2 := @parameter3: android.media.RoutingSessionInfo;

        r3 := @parameter4: android.media.MediaRoute2Info;

        r4 := @parameter5: android.os.Bundle;

        $r5 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r5.<com.android.server.media.MediaRouter2ServiceImpl: void requestCreateSessionWithRouter2(android.media.IMediaRouter2,int,long,android.media.RoutingSessionInfo,android.media.MediaRoute2Info,android.os.Bundle)>(r1, i0, l1, r2, r3, r4);

        return;
    }

    public void requestSetVolume(android.media.IMediaRouterClient, java.lang.String, int)
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.String r1;
        int i0;
        long l1;
        java.lang.Object r2;
        java.lang.IllegalArgumentException $r3, $r4;
        java.lang.Throwable $r5, $r6;
        android.media.IMediaRouterClient r7;

        r0 := @this: com.android.server.media.MediaRouterService;

        r7 := @parameter0: android.media.IMediaRouterClient;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r7 == null goto label9;

        if r1 == null goto label8;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r2;

     label2:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void requestSetVolumeLocked(android.media.IMediaRouterClient,java.lang.String,int)>(r7, r1, i0);

        exitmonitor r2;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        throw $r6;

     label7:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

     label8:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId must not be null");

        throw $r4;

     label9:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void requestUpdateVolume(android.media.IMediaRouterClient, java.lang.String, int)
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.String r1;
        int i0;
        long l1;
        java.lang.Object r2;
        java.lang.IllegalArgumentException $r3, $r4;
        java.lang.Throwable $r5, $r6;
        android.media.IMediaRouterClient r7;

        r0 := @this: com.android.server.media.MediaRouterService;

        r7 := @parameter0: android.media.IMediaRouterClient;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r7 == null goto label9;

        if r1 == null goto label8;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r2;

     label2:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void requestUpdateVolumeLocked(android.media.IMediaRouterClient,java.lang.String,int)>(r7, r1, i0);

        exitmonitor r2;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        throw $r5;

     label7:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r6;

     label8:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId must not be null");

        throw $r4;

     label9:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    void restoreBluetoothA2dp()
    {
        com.android.server.media.MediaRouterService r0;
        boolean z0, $z1;
        android.media.IAudioService $r1;
        java.lang.String $r5;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.Object r8;
        android.bluetooth.BluetoothDevice r9;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.server.media.MediaRouterService;

     label01:
        r8 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r8;

     label02:
        z0 = r0.<com.android.server.media.MediaRouterService: boolean mGlobalBluetoothA2dpOn>;

        r9 = r0.<com.android.server.media.MediaRouterService: android.bluetooth.BluetoothDevice mActiveBluetoothDevice>;

        exitmonitor r8;

     label03:
        if r9 == null goto label06;

     label04:
        $z1 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        if $z1 == 0 goto label05;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreBluetoothA2dp(");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r5);

     label05:
        $r1 = r0.<com.android.server.media.MediaRouterService: android.media.IAudioService mAudioService>;

        interfaceinvoke $r1.<android.media.IAudioService: void setBluetoothA2dpOn(boolean)>(z0);

     label06:
        goto label11;

     label07:
        $r7 := @caughtexception;

     label08:
        exitmonitor r8;

     label09:
        throw $r7;

     label10:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("MediaRouterService", "RemoteException while calling setBluetoothA2dpOn.");

     label11:
        return;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch android.os.RemoteException from label04 to label05 with label10;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch android.os.RemoteException from label09 to label10 with label10;
    }

    void restoreRoute(int)
    {
        com.android.server.media.MediaRouterService r0;
        int i0, $i1;
        java.lang.Object r1, $r4, $r8;
        android.util.SparseArray $r2;
        android.os.UserHandle $r3;
        android.media.IMediaRouterClient $r5;
        java.util.ArrayList $r6, $r7;
        boolean $z0, $z1;
        java.lang.String $r9;
        java.lang.Throwable $r10;
        android.os.RemoteException $r11;
        com.android.server.media.MediaRouterService$UserRecord r12;
        com.android.server.media.MediaRouterService$ClientRecord r13;
        java.util.Iterator r14;

        r0 := @this: com.android.server.media.MediaRouterService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        $r3 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        $i1 = virtualinvoke $r3.<android.os.UserHandle: int getIdentifier()>();

        $r4 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r12 = (com.android.server.media.MediaRouterService$UserRecord) $r4;

     label02:
        r13 = null;

        if r12 == null goto label08;

        r13 = null;

     label03:
        $r6 = r12.<com.android.server.media.MediaRouterService$UserRecord: java.util.ArrayList mClientRecords>;

        if $r6 == null goto label08;

        $r7 = r12.<com.android.server.media.MediaRouterService$UserRecord: java.util.ArrayList mClientRecords>;

        r14 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        r13 = null;

     label05:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r8 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.android.server.media.MediaRouterService$ClientRecord) $r8;

        $r9 = r13.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mPackageName>;

        $z1 = specialinvoke r0.<com.android.server.media.MediaRouterService: boolean validatePackageName(int,java.lang.String)>(i0, $r9);

        if $z1 == 0 goto label07;

     label06:
        goto label08;

     label07:
        goto label04;

     label08:
        exitmonitor r1;

     label09:
        if r13 == null goto label14;

     label10:
        $r5 = r13.<com.android.server.media.MediaRouterService$ClientRecord: android.media.IMediaRouterClient mClient>;

        interfaceinvoke $r5.<android.media.IMediaRouterClient: void onRestoreRoute()>();

     label11:
        goto label13;

     label12:
        $r11 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("MediaRouterService", "Failed to call onRestoreRoute. Client probably died.");

     label13:
        goto label15;

     label14:
        virtualinvoke r0.<com.android.server.media.MediaRouterService: void restoreBluetoothA2dp()>();

     label15:
        return;

     label16:
        $r10 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void selectRouteWithManager(android.media.IMediaRouter2Manager, int, java.lang.String, android.media.MediaRoute2Info)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2Manager r1;
        int i0;
        java.lang.String r2;
        android.media.MediaRoute2Info r3;
        com.android.server.media.MediaRouter2ServiceImpl $r4;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.media.MediaRoute2Info;

        $r4 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r4.<com.android.server.media.MediaRouter2ServiceImpl: void selectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>(r1, i0, r2, r3);

        return;
    }

    public void selectRouteWithRouter2(android.media.IMediaRouter2, java.lang.String, android.media.MediaRoute2Info)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2 r1;
        java.lang.String r2;
        android.media.MediaRoute2Info r3;
        com.android.server.media.MediaRouter2ServiceImpl $r4;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.media.MediaRoute2Info;

        $r4 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r4.<com.android.server.media.MediaRouter2ServiceImpl: void selectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>(r1, r2, r3);

        return;
    }

    public void setDiscoveryRequest(android.media.IMediaRouterClient, int, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        int i0;
        boolean z0;
        long l1;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3, $r4;
        android.media.IMediaRouterClient r5;

        r0 := @this: com.android.server.media.MediaRouterService;

        r5 := @parameter0: android.media.IMediaRouterClient;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if r5 == null goto label8;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void setDiscoveryRequestLocked(android.media.IMediaRouterClient,int,boolean)>(r5, i0, z0);

        exitmonitor r1;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

     label7:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r4;

     label8:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void setDiscoveryRequestWithRouter2(android.media.IMediaRouter2, android.media.RouteDiscoveryPreference)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2 r1;
        android.media.RouteDiscoveryPreference r2;
        com.android.server.media.MediaRouter2ServiceImpl $r3;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: android.media.RouteDiscoveryPreference;

        $r3 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r3.<com.android.server.media.MediaRouter2ServiceImpl: void setDiscoveryRequestWithRouter2(android.media.IMediaRouter2,android.media.RouteDiscoveryPreference)>(r1, r2);

        return;
    }

    public void setRouteVolumeWithManager(android.media.IMediaRouter2Manager, int, android.media.MediaRoute2Info, int)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2Manager r1;
        int i0, i1;
        android.media.MediaRoute2Info r2;
        com.android.server.media.MediaRouter2ServiceImpl $r3;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: android.media.MediaRoute2Info;

        i1 := @parameter3: int;

        $r3 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r3.<com.android.server.media.MediaRouter2ServiceImpl: void setRouteVolumeWithManager(android.media.IMediaRouter2Manager,int,android.media.MediaRoute2Info,int)>(r1, i0, r2, i1);

        return;
    }

    public void setRouteVolumeWithRouter2(android.media.IMediaRouter2, android.media.MediaRoute2Info, int)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2 r1;
        android.media.MediaRoute2Info r2;
        int i0;
        com.android.server.media.MediaRouter2ServiceImpl $r3;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: android.media.MediaRoute2Info;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r3.<com.android.server.media.MediaRouter2ServiceImpl: void setRouteVolumeWithRouter2(android.media.IMediaRouter2,android.media.MediaRoute2Info,int)>(r1, r2, i0);

        return;
    }

    public void setSelectedRoute(android.media.IMediaRouterClient, java.lang.String, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.String r1;
        boolean z0;
        long l0;
        java.lang.Object r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Throwable $r4, $r5;
        android.media.IMediaRouterClient r6;

        r0 := @this: com.android.server.media.MediaRouterService;

        r6 := @parameter0: android.media.IMediaRouterClient;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if r6 == null goto label8;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r2;

     label2:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void setSelectedRouteLocked(android.media.IMediaRouterClient,java.lang.String,boolean)>(r6, r1, z0);

        exitmonitor r2;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        throw $r5;

     label7:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

     label8:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void setSessionVolumeWithManager(android.media.IMediaRouter2Manager, int, java.lang.String, int)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2Manager r1;
        int i0, i1;
        java.lang.String r2;
        com.android.server.media.MediaRouter2ServiceImpl $r3;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        $r3 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r3.<com.android.server.media.MediaRouter2ServiceImpl: void setSessionVolumeWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,int)>(r1, i0, r2, i1);

        return;
    }

    public void setSessionVolumeWithRouter2(android.media.IMediaRouter2, java.lang.String, int)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2 r1;
        java.lang.String r2;
        int i0;
        com.android.server.media.MediaRouter2ServiceImpl $r3;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r3.<com.android.server.media.MediaRouter2ServiceImpl: void setSessionVolumeWithRouter2(android.media.IMediaRouter2,java.lang.String,int)>(r1, r2, i0);

        return;
    }

    void switchUser()
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.Object r1, $r3, $r5;
        int i0, i1, $i2;
        android.util.SparseArray $r2, $r4;
        com.android.server.media.MediaRouterService$UserHandler $r6, $r7;
        java.lang.Throwable $r8;
        com.android.server.media.MediaRouterService$UserRecord r9, r10;
        com.android.server.media.MediaRouter2ServiceImpl $r11;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $i2 = r0.<com.android.server.media.MediaRouterService: int mCurrentUserId>;

        if $i2 == i0 goto label07;

        i1 = r0.<com.android.server.media.MediaRouterService: int mCurrentUserId>;

        r0.<com.android.server.media.MediaRouterService: int mCurrentUserId> = i0;

        $r2 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r9 = (com.android.server.media.MediaRouterService$UserRecord) $r3;

     label02:
        if r9 == null goto label04;

     label03:
        $r7 = r9.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        virtualinvoke $r7.<com.android.server.media.MediaRouterService$UserHandler: boolean sendEmptyMessage(int)>(2);

        specialinvoke r0.<com.android.server.media.MediaRouterService: void disposeUserIfNeededLocked(com.android.server.media.MediaRouterService$UserRecord)>(r9);

     label04:
        $r4 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r10 = (com.android.server.media.MediaRouterService$UserRecord) $r5;

     label05:
        if r10 == null goto label07;

     label06:
        $r6 = r10.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        virtualinvoke $r6.<com.android.server.media.MediaRouterService$UserHandler: boolean sendEmptyMessage(int)>(1);

     label07:
        exitmonitor r1;

     label08:
        $r11 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r11.<com.android.server.media.MediaRouter2ServiceImpl: void switchUser()>();

        return;

     label09:
        $r8 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void systemRunning()
    {
        com.android.server.media.MediaRouterService r0;
        android.content.IntentFilter $r2;
        com.android.server.media.MediaRouterService$3 $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.media.MediaRouterService;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.USER_SWITCHED");

        $r4 = r0.<com.android.server.media.MediaRouterService: android.content.Context mContext>;

        $r3 = new com.android.server.media.MediaRouterService$3;

        specialinvoke $r3.<com.android.server.media.MediaRouterService$3: void <init>(com.android.server.media.MediaRouterService)>(r0);

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, $r2);

        virtualinvoke r0.<com.android.server.media.MediaRouterService: void switchUser()>();

        return;
    }

    public void transferToRouteWithManager(android.media.IMediaRouter2Manager, int, java.lang.String, android.media.MediaRoute2Info)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2Manager r1;
        int i0;
        java.lang.String r2;
        android.media.MediaRoute2Info r3;
        com.android.server.media.MediaRouter2ServiceImpl $r4;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.media.MediaRoute2Info;

        $r4 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r4.<com.android.server.media.MediaRouter2ServiceImpl: void transferToRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>(r1, i0, r2, r3);

        return;
    }

    public void transferToRouteWithRouter2(android.media.IMediaRouter2, java.lang.String, android.media.MediaRoute2Info)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2 r1;
        java.lang.String r2;
        android.media.MediaRoute2Info r3;
        com.android.server.media.MediaRouter2ServiceImpl $r4;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.media.MediaRoute2Info;

        $r4 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r4.<com.android.server.media.MediaRouter2ServiceImpl: void transferToRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>(r1, r2, r3);

        return;
    }

    public void unregisterClient(android.media.IMediaRouterClient)
    {
        com.android.server.media.MediaRouterService r0;
        long l0;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3, $r4;
        android.media.IMediaRouterClient r5;

        r0 := @this: com.android.server.media.MediaRouterService;

        r5 := @parameter0: android.media.IMediaRouterClient;

        if r5 == null goto label8;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void unregisterClientLocked(android.media.IMediaRouterClient,boolean)>(r5, 0);

        exitmonitor r1;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

     label7:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

     label8:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void unregisterManager(android.media.IMediaRouter2Manager)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2Manager r1;
        com.android.server.media.MediaRouter2ServiceImpl $r2;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        $r2 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r2.<com.android.server.media.MediaRouter2ServiceImpl: void unregisterManager(android.media.IMediaRouter2Manager)>(r1);

        return;
    }

    public void unregisterRouter2(android.media.IMediaRouter2)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouter2 r1;
        com.android.server.media.MediaRouter2ServiceImpl $r2;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouter2;

        $r2 = r0.<com.android.server.media.MediaRouterService: com.android.server.media.MediaRouter2ServiceImpl mService2>;

        virtualinvoke $r2.<com.android.server.media.MediaRouter2ServiceImpl: void unregisterRouter2(android.media.IMediaRouter2)>(r1);

        return;
    }
}
