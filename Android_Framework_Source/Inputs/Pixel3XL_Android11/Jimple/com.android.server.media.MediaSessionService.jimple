public class com.android.server.media.MediaSessionService extends com.android.server.SystemService implements com.android.server.Watchdog$Monitor
{
    static final boolean DEBUG;
    static final boolean DEBUG_KEY_EVENT;
    private static final int LONG_PRESS_TIMEOUT;
    private static final int MEDIA_KEY_LISTENER_TIMEOUT;
    private static final int MULTI_TAP_TIMEOUT;
    private static final int SESSION_CREATION_LIMIT_PER_UID;
    private static final java.lang.String TAG;
    private static final int WAKELOCK_TIMEOUT;
    private android.media.AudioManagerInternal mAudioManagerInternal;
    private com.android.server.media.AudioPlayerStateMonitor mAudioPlayerStateMonitor;
    private android.content.ContentResolver mContentResolver;
    private final android.content.Context mContext;
    private com.android.server.media.MediaSessionService$FullUserRecord mCurrentFullUserRecord;
    private com.android.server.media.MediaKeyDispatcher mCustomMediaKeyDispatcher;
    private com.android.server.media.SessionPolicyProvider mCustomSessionPolicyProvider;
    private final android.util.SparseIntArray mFullUserIds;
    private com.android.server.media.MediaSessionRecord mGlobalPrioritySession;
    private final com.android.server.media.MediaSessionService$MessageHandler mHandler;
    private boolean mHasFeatureLeanback;
    private android.app.KeyguardManager mKeyguardManager;
    private final java.lang.Object mLock;
    private final android.os.PowerManager$WakeLock mMediaEventWakeLock;
    private final android.app.INotificationManager mNotificationManager;
    private java.util.Map mOverriddenKeyEventsMap;
    private final android.os.HandlerThread mRecordThread;
    final android.os.RemoteCallbackList mRemoteVolumeControllers;
    private final java.util.List mSession2TokensListenerRecords;
    private final com.android.server.media.MediaSessionService$SessionManagerImpl mSessionManagerImpl;
    private final java.util.ArrayList mSessionsListeners;
    private com.android.server.media.MediaSessionService$SettingsObserver mSettingsObserver;
    private final android.util.SparseArray mUserRecords;

    static void <clinit>()
    {
        boolean $z0;
        int $i0, $i1, $i2;

        <com.android.server.media.MediaSessionService: int WAKELOCK_TIMEOUT> = 5000;

        <com.android.server.media.MediaSessionService: java.lang.String TAG> = "MediaSessionService";

        <com.android.server.media.MediaSessionService: int SESSION_CREATION_LIMIT_PER_UID> = 100;

        <com.android.server.media.MediaSessionService: int MEDIA_KEY_LISTENER_TIMEOUT> = 1000;

        <com.android.server.media.MediaSessionService: boolean DEBUG_KEY_EVENT> = 1;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MediaSessionService", 3);

        <com.android.server.media.MediaSessionService: boolean DEBUG> = $z0;

        $i0 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $i1 = $i0 + 50;

        <com.android.server.media.MediaSessionService: int LONG_PRESS_TIMEOUT> = $i1;

        $i2 = staticinvoke <android.view.ViewConfiguration: int getMultiPressTimeout()>();

        <com.android.server.media.MediaSessionService: int MULTI_TAP_TIMEOUT> = $i2;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.media.MediaSessionService r0;
        android.content.Context r1;
        com.android.server.media.MediaSessionService$MessageHandler $r2;
        java.lang.Object $r3, $r11;
        android.os.HandlerThread $r4;
        android.util.SparseIntArray $r5;
        android.util.SparseArray $r6;
        java.util.ArrayList $r7, $r8;
        android.os.RemoteCallbackList $r9;
        com.android.server.media.MediaSessionService$SessionManagerImpl $r10;
        android.os.PowerManager $r12;
        android.os.PowerManager$WakeLock $r13;
        android.os.IBinder $r14;
        android.app.INotificationManager $r15;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r2 = new com.android.server.media.MediaSessionService$MessageHandler;

        specialinvoke $r2.<com.android.server.media.MediaSessionService$MessageHandler: void <init>(com.android.server.media.MediaSessionService)>(r0);

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$MessageHandler mHandler> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock> = $r3;

        $r4 = new android.os.HandlerThread;

        specialinvoke $r4.<android.os.HandlerThread: void <init>(java.lang.String)>("SessionRecordThread");

        r0.<com.android.server.media.MediaSessionService: android.os.HandlerThread mRecordThread> = $r4;

        $r5 = new android.util.SparseIntArray;

        specialinvoke $r5.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.server.media.MediaSessionService: android.util.SparseIntArray mFullUserIds> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.media.MediaSessionService: java.util.List mSession2TokensListenerRecords> = $r8;

        $r9 = new android.os.RemoteCallbackList;

        specialinvoke $r9.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.media.MediaSessionService: android.os.RemoteCallbackList mRemoteVolumeControllers> = $r9;

        r0.<com.android.server.media.MediaSessionService: android.content.Context mContext> = r1;

        $r10 = new com.android.server.media.MediaSessionService$SessionManagerImpl;

        specialinvoke $r10.<com.android.server.media.MediaSessionService$SessionManagerImpl: void <init>(com.android.server.media.MediaSessionService)>(r0);

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$SessionManagerImpl mSessionManagerImpl> = $r10;

        $r11 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r12 = (android.os.PowerManager) $r11;

        $r13 = virtualinvoke $r12.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "handleMediaEvent");

        r0.<com.android.server.media.MediaSessionService: android.os.PowerManager$WakeLock mMediaEventWakeLock> = $r13;

        $r14 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("notification");

        $r15 = staticinvoke <android.app.INotificationManager$Stub: android.app.INotificationManager asInterface(android.os.IBinder)>($r14);

        r0.<com.android.server.media.MediaSessionService: android.app.INotificationManager mNotificationManager> = $r15;

        return;
    }

    static void access$1000(com.android.server.media.MediaSessionService, com.android.server.media.MediaSessionRecordImpl)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionRecordImpl r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: com.android.server.media.MediaSessionRecordImpl;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void destroySessionLocked(com.android.server.media.MediaSessionRecordImpl)>(r1);

        return;
    }

    static android.util.SparseIntArray access$1100(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.util.SparseIntArray $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.util.SparseIntArray mFullUserIds>;

        return $r1;
    }

    static java.lang.String access$1200(com.android.server.media.MediaSessionService, int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.media.MediaSessionService: java.lang.String getCallingPackageName(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$1300(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.media.MediaSessionService$MessageHandler access$1400(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionService$MessageHandler $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$MessageHandler mHandler>;

        return $r1;
    }

    static com.android.server.media.MediaSessionService$FullUserRecord access$1500(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionService$FullUserRecord $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord mCurrentFullUserRecord>;

        return $r1;
    }

    static boolean access$1600(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $z0 = specialinvoke r0.<com.android.server.media.MediaSessionService: boolean isGlobalPriorityActiveLocked()>();

        return $z0;
    }

    static com.android.server.media.MediaSessionRecord access$1700(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionRecord $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionRecord mGlobalPrioritySession>;

        return $r1;
    }

    static java.util.ArrayList access$2000(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        return $r1;
    }

    static java.util.List access$2100(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: java.util.List mSession2TokensListenerRecords>;

        return $r1;
    }

    static void access$2200(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void updateActiveSessionListeners()>();

        return;
    }

    static void access$2300(com.android.server.media.MediaSessionService, java.lang.String, int)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void enforcePackageName(java.lang.String,int)>(r1, i0);

        return;
    }

    static com.android.server.media.MediaSessionRecord access$2400(com.android.server.media.MediaSessionService, int, int, int, java.lang.String, android.media.session.ISessionCallback, java.lang.String, android.os.Bundle)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1, i2;
        java.lang.String r1, r3;
        android.media.session.ISessionCallback r2;
        android.os.Bundle r4;
        com.android.server.media.MediaSessionRecord $r5;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: android.media.session.ISessionCallback;

        r3 := @parameter6: java.lang.String;

        r4 := @parameter7: android.os.Bundle;

        $r5 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionRecord createSessionInternal(int,int,int,java.lang.String,android.media.session.ISessionCallback,java.lang.String,android.os.Bundle)>(i0, i1, i2, r1, r2, r3, r4);

        return $r5;
    }

    static android.os.HandlerThread access$2500(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.os.HandlerThread $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.os.HandlerThread mRecordThread>;

        return $r1;
    }

    static com.android.server.media.MediaSessionService$FullUserRecord access$2600(com.android.server.media.MediaSessionService, int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0;
        com.android.server.media.MediaSessionService$FullUserRecord $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>(i0);

        return $r1;
    }

    static java.util.List access$2700(com.android.server.media.MediaSessionService, int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.media.MediaSessionService: java.util.List getActiveSessionsLocked(int)>(i0);

        return $r1;
    }

    static int access$2800(com.android.server.media.MediaSessionService, android.media.session.IActiveSessionsListener)
    {
        com.android.server.media.MediaSessionService r0;
        android.media.session.IActiveSessionsListener r1;
        int $i0;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: android.media.session.IActiveSessionsListener;

        $i0 = specialinvoke r0.<com.android.server.media.MediaSessionService: int findIndexOfSessionsListenerLocked(android.media.session.IActiveSessionsListener)>(r1);

        return $i0;
    }

    static int access$2900(com.android.server.media.MediaSessionService, android.media.session.ISession2TokensListener)
    {
        com.android.server.media.MediaSessionService r0;
        android.media.session.ISession2TokensListener r1;
        int $i0;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: android.media.session.ISession2TokensListener;

        $i0 = specialinvoke r0.<com.android.server.media.MediaSessionService: int findIndexOfSession2TokensListenerLocked(android.media.session.ISession2TokensListener)>(r1);

        return $i0;
    }

    static com.android.server.media.MediaSessionRecord access$3200(com.android.server.media.MediaSessionService, android.media.session.MediaSession$Token)
    {
        com.android.server.media.MediaSessionService r0;
        android.media.session.MediaSession$Token r1;
        com.android.server.media.MediaSessionRecord $r2;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: android.media.session.MediaSession$Token;

        $r2 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionRecord getMediaSessionRecordLocked(android.media.session.MediaSession$Token)>(r1);

        return $r2;
    }

    static boolean access$3300(com.android.server.media.MediaSessionService, int, int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.media.MediaSessionService: boolean hasMediaControlPermission(int,int)>(i0, i1);

        return $z0;
    }

    static void access$3600(com.android.server.media.MediaSessionService, java.lang.String, int, int)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void enforceStatusBarServicePermission(java.lang.String,int,int)>(r1, i0, i1);

        return;
    }

    static android.util.SparseArray access$3700(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        return $r1;
    }

    static void access$3800(com.android.server.media.MediaSessionService, java.lang.String)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void instantiateCustomDispatcher(java.lang.String)>(r1);

        return;
    }

    static void access$3900(com.android.server.media.MediaSessionService, java.lang.String)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void instantiateCustomProvider(java.lang.String)>(r1);

        return;
    }

    static void access$4000(com.android.server.media.MediaSessionService, android.content.ComponentName, int, int, int)
    {
        com.android.server.media.MediaSessionService r0;
        android.content.ComponentName r1;
        int i0, i1, i2;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void enforceMediaPermissions(android.content.ComponentName,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    static android.app.INotificationManager access$4100(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.app.INotificationManager $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.app.INotificationManager mNotificationManager>;

        return $r1;
    }

    static android.media.AudioManagerInternal access$4200(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.media.AudioManagerInternal $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.media.AudioManagerInternal mAudioManagerInternal>;

        return $r1;
    }

    static com.android.server.media.MediaKeyDispatcher access$4400(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaKeyDispatcher $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaKeyDispatcher mCustomMediaKeyDispatcher>;

        return $r1;
    }

    static android.app.KeyguardManager access$4700(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.app.KeyguardManager $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.app.KeyguardManager mKeyguardManager>;

        return $r1;
    }

    static android.os.PowerManager$WakeLock access$4800(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.os.PowerManager$WakeLock mMediaEventWakeLock>;

        return $r1;
    }

    static boolean access$4900(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $z0 = r0.<com.android.server.media.MediaSessionService: boolean mHasFeatureLeanback>;

        return $z0;
    }

    static int access$5300()
    {
        int $i0;

        $i0 = <com.android.server.media.MediaSessionService: int MULTI_TAP_TIMEOUT>;

        return $i0;
    }

    static int access$5500()
    {
        int $i0;

        $i0 = <com.android.server.media.MediaSessionService: int LONG_PRESS_TIMEOUT>;

        return $i0;
    }

    static void access$5600(com.android.server.media.MediaSessionService, android.view.KeyEvent)
    {
        com.android.server.media.MediaSessionService r0;
        android.view.KeyEvent r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: android.view.KeyEvent;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void dispatchVolumeKeyLongPressLocked(android.view.KeyEvent)>(r1);

        return;
    }

    static void access$6200(com.android.server.media.MediaSessionService, int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void pushSession1Changed(int)>(i0);

        return;
    }

    static com.android.server.media.AudioPlayerStateMonitor access$700(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.AudioPlayerStateMonitor $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.AudioPlayerStateMonitor mAudioPlayerStateMonitor>;

        return $r1;
    }

    static android.content.ContentResolver access$800(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.content.ContentResolver $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.content.ContentResolver mContentResolver>;

        return $r1;
    }

    static android.content.Context access$900(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        return $r1;
    }

    private com.android.server.media.MediaSessionRecord createSessionInternal(int, int, int, java.lang.String, android.media.session.ISessionCallback, java.lang.String, android.os.Bundle)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1, i2, i3, $i5, i7;
        java.lang.Object r1, r37, r39;
        com.android.server.media.MediaSessionService$FullUserRecord r2;
        com.android.server.media.MediaSessionRecord r3;
        android.os.Looper r4;
        com.android.server.media.SessionPolicyProvider $r5, $r25;
        java.lang.String $r10, $r20, $r24, r31, r33;
        android.util.SparseIntArray $r11, $r13;
        android.os.HandlerThread $r12;
        com.android.server.media.MediaSessionStack $r14;
        com.android.server.media.MediaSessionService$MessageHandler $r15;
        boolean $z0, $z1;
        java.lang.Throwable $r26, $r27, $r30, r40;
        android.os.RemoteException $r28, $r29, r41;
        android.media.session.ISessionCallback r32;
        android.os.Bundle r34;
        java.lang.RuntimeException r35, r42, r44;
        java.lang.StringBuilder r36, r38, r43;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r31 := @parameter3: java.lang.String;

        r32 := @parameter4: android.media.session.ISessionCallback;

        r33 := @parameter5: java.lang.String;

        r34 := @parameter6: android.os.Bundle;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.SessionPolicyProvider mCustomSessionPolicyProvider>;

        if $r5 == null goto label03;

        $r25 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.SessionPolicyProvider mCustomSessionPolicyProvider>;

        i7 = virtualinvoke $r25.<com.android.server.media.SessionPolicyProvider: int getSessionPoliciesForApplication(int,java.lang.String)>(i1, r31);

     label02:
        goto label04;

     label03:
        i7 = 0;

     label04:
        r2 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>(i2);

     label05:
        if r2 == null goto label32;

     label06:
        $r11 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: android.util.SparseIntArray access$500(com.android.server.media.MediaSessionService$FullUserRecord)>(r2);

        i3 = virtualinvoke $r11.<android.util.SparseIntArray: int get(int,int)>(i1, 0);

     label07:
        if i3 < 100 goto label11;

     label08:
        $z1 = specialinvoke r0.<com.android.server.media.MediaSessionService: boolean hasMediaControlPermission(int,int)>(i0, i1);

        if $z1 == 0 goto label10;

     label09:
        goto label11;

     label10:
        r35 = new java.lang.RuntimeException;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created too many sessions. count=");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r35.<java.lang.RuntimeException: void <init>(java.lang.String)>($r24);

        throw r35;

     label11:
        r3 = new com.android.server.media.MediaSessionRecord;

        $r12 = r0.<com.android.server.media.MediaSessionService: android.os.HandlerThread mRecordThread>;

        r4 = virtualinvoke $r12.<android.os.HandlerThread: android.os.Looper getLooper()>();

     label12:
        r37 = r1;

     label13:
        specialinvoke r3.<com.android.server.media.MediaSessionRecord: void <init>(int,int,int,java.lang.String,android.media.session.ISessionCallback,java.lang.String,android.os.Bundle,com.android.server.media.MediaSessionService,android.os.Looper,int)>(i0, i1, i2, r31, r32, r33, r34, r0, r4, i7);

     label14:
        $r13 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: android.util.SparseIntArray access$500(com.android.server.media.MediaSessionService$FullUserRecord)>(r2);

        $i5 = i3 + 1;

        virtualinvoke $r13.<android.util.SparseIntArray: void put(int,int)>(i1, $i5);

        $r14 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r2);

        virtualinvoke $r14.<com.android.server.media.MediaSessionStack: void addSession(com.android.server.media.MediaSessionRecordImpl)>(r3);

        $r15 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$MessageHandler mHandler>;

        virtualinvoke $r15.<com.android.server.media.MediaSessionService$MessageHandler: void postSessionsChanged(com.android.server.media.MediaSessionRecordImpl)>(r3);

        $z0 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        if $z0 == 0 goto label20;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created session for ");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with tag ");

     label15:
        r39 = r1;

     label16:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

     label17:
        r39 = r1;

     label18:
        $r20 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r20);

     label19:
        goto label20;

     label20:
        r39 = r1;

     label21:
        exitmonitor r1;

     label22:
        return r3;

     label23:
        $r26 := @caughtexception;

        r40 = $r26;

        goto label53;

     label24:
        $r29 := @caughtexception;

        r41 = $r29;

        goto label26;

     label25:
        $r28 := @caughtexception;

        r41 = $r28;

     label26:
        r39 = r1;

     label27:
        r42 = new java.lang.RuntimeException;

     label28:
        r39 = r1;

     label29:
        specialinvoke r42.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Media Session owner died prematurely.", r41);

     label30:
        r39 = r1;

     label31:
        throw r42;

     label32:
        r39 = r1;

     label33:
        r43 = new java.lang.StringBuilder;

     label34:
        r39 = r1;

     label35:
        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

     label36:
        r39 = r1;

     label37:
        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request from invalid user: ");

     label38:
        r39 = r1;

     label39:
        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

     label40:
        r39 = r1;

     label41:
        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pkg=");

     label42:
        r39 = r1;

     label43:
        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

     label44:
        r39 = r1;

     label45:
        $r10 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionService", $r10);

     label46:
        r39 = r1;

     label47:
        r44 = new java.lang.RuntimeException;

     label48:
        r39 = r1;

     label49:
        specialinvoke r44.<java.lang.RuntimeException: void <init>(java.lang.String)>("Session request from invalid user.");

     label50:
        r39 = r1;

     label51:
        throw r44;

     label52:
        $r30 := @caughtexception;

        r40 = $r30;

        r37 = r1;

     label53:
        r39 = r37;

     label54:
        exitmonitor r37;

     label55:
        throw r40;

     label56:
        $r27 := @caughtexception;

        r40 = $r27;

        r37 = r39;

        goto label53;

        catch java.lang.Throwable from label01 to label02 with label52;
        catch java.lang.Throwable from label04 to label05 with label52;
        catch java.lang.Throwable from label06 to label07 with label52;
        catch java.lang.Throwable from label08 to label09 with label52;
        catch java.lang.Throwable from label10 to label11 with label52;
        catch android.os.RemoteException from label11 to label12 with label25;
        catch java.lang.Throwable from label11 to label12 with label52;
        catch android.os.RemoteException from label13 to label14 with label24;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label56;
        catch java.lang.Throwable from label18 to label19 with label56;
        catch java.lang.Throwable from label21 to label22 with label56;
        catch java.lang.Throwable from label27 to label28 with label56;
        catch java.lang.Throwable from label29 to label30 with label56;
        catch java.lang.Throwable from label31 to label32 with label56;
        catch java.lang.Throwable from label33 to label34 with label56;
        catch java.lang.Throwable from label35 to label36 with label56;
        catch java.lang.Throwable from label37 to label38 with label56;
        catch java.lang.Throwable from label39 to label40 with label56;
        catch java.lang.Throwable from label41 to label42 with label56;
        catch java.lang.Throwable from label43 to label44 with label56;
        catch java.lang.Throwable from label45 to label46 with label56;
        catch java.lang.Throwable from label47 to label48 with label56;
        catch java.lang.Throwable from label49 to label50 with label56;
        catch java.lang.Throwable from label51 to label52 with label56;
        catch java.lang.Throwable from label54 to label55 with label56;
    }

    private void destroySessionLocked(com.android.server.media.MediaSessionRecordImpl)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionRecordImpl r1;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.media.MediaSessionStack $r3;
        android.util.SparseIntArray $r4, $r5;
        java.lang.StringBuilder $r6, $r10;
        java.lang.String $r9, $r13;
        com.android.server.media.MediaSessionService$FullUserRecord r15;
        com.android.server.media.MediaSessionRecord $r16;
        com.android.server.media.MediaSessionService$MessageHandler $r17;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: com.android.server.media.MediaSessionRecordImpl;

        $z0 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destroying ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r13);

     label1:
        $z1 = interfaceinvoke r1.<com.android.server.media.MediaSessionRecordImpl: boolean isClosed()>();

        if $z1 == 0 goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionService", "Destroying already destroyed session. Ignoring.");

        return;

     label2:
        $i2 = interfaceinvoke r1.<com.android.server.media.MediaSessionRecordImpl: int getUserId()>();

        r15 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>($i2);

        if r15 == null goto label4;

        $z3 = r1 instanceof com.android.server.media.MediaSessionRecord;

        if $z3 == 0 goto label4;

        i0 = interfaceinvoke r1.<com.android.server.media.MediaSessionRecordImpl: int getUid()>();

        $r4 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: android.util.SparseIntArray access$500(com.android.server.media.MediaSessionService$FullUserRecord)>(r15);

        i1 = virtualinvoke $r4.<android.util.SparseIntArray: int get(int,int)>(i0, 0);

        if i1 > 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("destroySessionLocked: sessionCount should be positive. sessionCount=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionService", $r9);

        goto label4;

     label3:
        $r5 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: android.util.SparseIntArray access$500(com.android.server.media.MediaSessionService$FullUserRecord)>(r15);

        $i3 = i1 - 1;

        virtualinvoke $r5.<android.util.SparseIntArray: void put(int,int)>(i0, $i3);

     label4:
        $r16 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionRecord mGlobalPrioritySession>;

        if $r16 != r1 goto label5;

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionRecord mGlobalPrioritySession> = null;

        $z2 = interfaceinvoke r1.<com.android.server.media.MediaSessionRecordImpl: boolean isActive()>();

        if $z2 == 0 goto label6;

        if r15 == null goto label6;

        staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: void access$200(com.android.server.media.MediaSessionService$FullUserRecord)>(r15);

        goto label6;

     label5:
        if r15 == null goto label6;

        $r3 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r15);

        virtualinvoke $r3.<com.android.server.media.MediaSessionStack: void removeSession(com.android.server.media.MediaSessionRecordImpl)>(r1);

     label6:
        interfaceinvoke r1.<com.android.server.media.MediaSessionRecordImpl: void close()>();

        $r17 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$MessageHandler mHandler>;

        virtualinvoke $r17.<com.android.server.media.MediaSessionService$MessageHandler: void postSessionsChanged(com.android.server.media.MediaSessionRecordImpl)>(r1);

        return;
    }

    private void dispatchVolumeKeyLongPressLocked(android.view.KeyEvent)
    {
        com.android.server.media.MediaSessionService r0;
        android.view.KeyEvent r1;
        com.android.server.media.MediaSessionService$FullUserRecord $r2, $r4;
        android.media.session.IOnVolumeKeyLongPressListener $r3, $r5;
        android.os.RemoteException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r11;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: android.view.KeyEvent;

        $r2 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord mCurrentFullUserRecord>;

        $r3 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: android.media.session.IOnVolumeKeyLongPressListener access$600(com.android.server.media.MediaSessionService$FullUserRecord)>($r2);

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord mCurrentFullUserRecord>;

        $r5 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: android.media.session.IOnVolumeKeyLongPressListener access$600(com.android.server.media.MediaSessionService$FullUserRecord)>($r4);

        interfaceinvoke $r5.<android.media.session.IOnVolumeKeyLongPressListener: void onVolumeKeyLongPress(android.view.KeyEvent)>(r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to send ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to volume key long-press listener");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionService", $r11);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void enforceMediaPermissions(android.content.ComponentName, int, int, int)
    {
        com.android.server.media.MediaSessionService r0;
        android.content.ComponentName r1;
        int i0, i1, i2, $i3, $i4;
        boolean $z0, $z1;
        android.content.Context $r2;
        android.os.UserHandle $r3;
        java.lang.SecurityException $r4;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z0 = specialinvoke r0.<com.android.server.media.MediaSessionService: boolean hasStatusBarServicePermission(int,int)>(i0, i1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        $i3 = virtualinvoke $r2.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.MEDIA_CONTENT_CONTROL", i0, i1);

        if $i3 == 0 goto label3;

        $r3 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i1);

        $i4 = virtualinvoke $r3.<android.os.UserHandle: int getIdentifier()>();

        $z1 = specialinvoke r0.<com.android.server.media.MediaSessionService: boolean isEnabledNotificationListener(android.content.ComponentName,int,int)>(r1, $i4, i2);

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("Missing permission to control media.");

        throw $r4;

     label3:
        return;
    }

    private void enforcePackageName(java.lang.String, int)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.String r1, $r7;
        java.lang.String[] r2;
        int i0, i1, i2;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3, $r6;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label4;

        $r4 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i1);

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $r7 = r2[i2];

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        return;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("packageName is not owned by the calling process");

        throw $r6;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("packageName may not be empty");

        throw $r3;
    }

    private void enforceStatusBarServicePermission(java.lang.String, int, int)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.String r1, $r7;
        int i0, i1;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r6;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.media.MediaSessionService: boolean hasStatusBarServicePermission(int,int)>(i0, i1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only System UI and Settings may ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = new java.lang.SecurityException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private int findIndexOfSession2TokensListenerLocked(android.media.session.ISession2TokensListener)
    {
        com.android.server.media.MediaSessionService r0;
        android.media.session.ISession2TokensListener r1, $r6;
        java.util.List $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.media.MediaSessionService$Session2TokensListenerRecord $r5;
        android.os.IBinder $r7, $r8;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: android.media.session.ISession2TokensListener;

        $r2 = r0.<com.android.server.media.MediaSessionService: java.util.List mSession2TokensListenerRecords>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.media.MediaSessionService: java.util.List mSession2TokensListenerRecords>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.media.MediaSessionService$Session2TokensListenerRecord) $r4;

        $r6 = $r5.<com.android.server.media.MediaSessionService$Session2TokensListenerRecord: android.media.session.ISession2TokensListener listener>;

        $r7 = interfaceinvoke $r6.<android.media.session.ISession2TokensListener: android.os.IBinder asBinder()>();

        $r8 = interfaceinvoke r1.<android.media.session.ISession2TokensListener: android.os.IBinder asBinder()>();

        if $r7 != $r8 goto label2;

        return i1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return -1;
    }

    private int findIndexOfSessionsListenerLocked(android.media.session.IActiveSessionsListener)
    {
        com.android.server.media.MediaSessionService r0;
        android.media.session.IActiveSessionsListener r1, $r6;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.media.MediaSessionService$SessionsListenerRecord $r5;
        android.os.IBinder $r7, $r8;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: android.media.session.IActiveSessionsListener;

        $r2 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.media.MediaSessionService$SessionsListenerRecord) $r4;

        $r6 = $r5.<com.android.server.media.MediaSessionService$SessionsListenerRecord: android.media.session.IActiveSessionsListener listener>;

        $r7 = interfaceinvoke $r6.<android.media.session.IActiveSessionsListener: android.os.IBinder asBinder()>();

        $r8 = interfaceinvoke r1.<android.media.session.IActiveSessionsListener: android.os.IBinder asBinder()>();

        if $r7 != $r8 goto label2;

        return i1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return -1;
    }

    private java.util.List getActiveSessionsLocked(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1, $i2, i4;
        java.util.ArrayList $r2;
        com.android.server.media.MediaSessionStack $r3, $r15;
        java.util.List $r4, $r16;
        boolean $z1;
        com.android.server.media.MediaSessionRecord $r5, $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r10;
        android.util.SparseArray $r11, $r12;
        java.lang.Object $r13;
        com.android.server.media.MediaSessionService$FullUserRecord $r14, r17;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        if i0 != -1 goto label3;

        $r11 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        i1 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

        i4 = 0;

     label1:
        if i4 >= i1 goto label2;

        $r12 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r14 = (com.android.server.media.MediaSessionService$FullUserRecord) $r13;

        $r15 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>($r14);

        $r16 = virtualinvoke $r15.<com.android.server.media.MediaSessionStack: java.util.List getActiveSessions(int)>(i0);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r16);

        i4 = i4 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        r17 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>(i0);

        if r17 != null goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSessions failed. Unknown user ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionService", $r10);

        return $r2;

     label4:
        $r3 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r17);

        $r4 = virtualinvoke $r3.<com.android.server.media.MediaSessionStack: java.util.List getActiveSessions(int)>(i0);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r4);

     label5:
        $z1 = specialinvoke r0.<com.android.server.media.MediaSessionService: boolean isGlobalPriorityActiveLocked()>();

        if $z1 == 0 goto label7;

        if i0 == -1 goto label6;

        $r6 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionRecord mGlobalPrioritySession>;

        $i2 = virtualinvoke $r6.<com.android.server.media.MediaSessionRecord: int getUserId()>();

        if i0 != $i2 goto label7;

     label6:
        $r5 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionRecord mGlobalPrioritySession>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(0, $r5);

     label7:
        return $r2;
    }

    private java.lang.String getCallingPackageName(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, $i1;
        java.lang.String[] r1;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke $r3.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        if r1 == null goto label1;

        $i1 = lengthof r1;

        if $i1 <= 0 goto label1;

        $r4 = r1[0];

        return $r4;

     label1:
        return "";
    }

    private com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)
    {
        com.android.server.media.MediaSessionService r0;
        android.util.SparseIntArray $r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        com.android.server.media.MediaSessionService$FullUserRecord $r4;
        int i0, i1;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.util.SparseIntArray mFullUserIds>;

        i1 = virtualinvoke $r1.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if i1 >= 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.media.MediaSessionService$FullUserRecord) $r3;

        return $r4;
    }

    private com.android.server.media.MediaSessionRecord getMediaSessionRecordLocked(android.media.session.MediaSession$Token)
    {
        com.android.server.media.MediaSessionService r0;
        android.media.session.MediaSession$Token r1;
        com.android.server.media.MediaSessionService$FullUserRecord r2;
        int $i0, $i1;
        com.android.server.media.MediaSessionStack $r3;
        com.android.server.media.MediaSessionRecord $r4;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: android.media.session.MediaSession$Token;

        $i0 = virtualinvoke r1.<android.media.session.MediaSession$Token: int getUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        r2 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>($i1);

        if r2 == null goto label1;

        $r3 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r2);

        $r4 = virtualinvoke $r3.<com.android.server.media.MediaSessionStack: com.android.server.media.MediaSessionRecord getMediaSessionRecord(android.media.session.MediaSession$Token)>(r1);

        return $r4;

     label1:
        return null;
    }

    private boolean hasMediaControlPermission(int, int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1, $i2;
        android.content.Context $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r7;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 == 1000 goto label3;

        $r2 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        $i2 = virtualinvoke $r2.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.MEDIA_CONTENT_CONTROL", i0, i1);

        if $i2 != 0 goto label1;

        goto label3;

     label1:
        $z0 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uid(");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") hasn\'t granted MEDIA_CONTENT_CONTROL");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r7);

     label2:
        return 0;

     label3:
        return 1;
    }

    private boolean hasStatusBarServicePermission(int, int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1, $i2;
        android.content.Context $r1;
        boolean z0;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        $i2 = virtualinvoke $r1.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.STATUS_BAR_SERVICE", i0, i1);

        if $i2 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void instantiateCustomDispatcher(java.lang.String)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1, $r6;
        boolean $z0;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r4;
        java.lang.Object[] $r5;
        java.util.Map $r7;
        android.content.Context $r8;
        android.content.res.Resources $r9;
        java.lang.Throwable $r10, $r11;
        java.lang.String r12;
        com.android.server.media.MediaKeyDispatcher r13;

        r0 := @this: com.android.server.media.MediaSessionService;

        r12 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaKeyDispatcher mCustomMediaKeyDispatcher> = null;

        r0.<com.android.server.media.MediaSessionService: java.util.Map mOverriddenKeyEventsMap> = null;

     label02:
        if r12 != null goto label05;

     label03:
        $r8 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        r12 = virtualinvoke $r9.<android.content.res.Resources: java.lang.String getString(int)>(17039847);

     label04:
        goto label05;

     label05:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z0 != 0 goto label06;

        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r12);

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r3);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

        r13 = (com.android.server.media.MediaKeyDispatcher) $r6;

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaKeyDispatcher mCustomMediaKeyDispatcher> = r13;

        $r7 = virtualinvoke r13.<com.android.server.media.MediaKeyDispatcher: java.util.Map getOverriddenKeyEvents()>();

        r0.<com.android.server.media.MediaSessionService: java.util.Map mOverriddenKeyEventsMap> = $r7;

     label06:
        goto label09;

     label07:
        $r10 := @caughtexception;

     label08:
        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaKeyDispatcher mCustomMediaKeyDispatcher> = null;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionService", "Encountered problem while using reflection", $r10);

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r11 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.ClassNotFoundException from label05 to label06 with label07;
        catch java.lang.InstantiationException from label05 to label06 with label07;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label07;
        catch java.lang.IllegalAccessException from label05 to label06 with label07;
        catch java.lang.NoSuchMethodException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private void instantiateCustomProvider(java.lang.String)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1, $r6;
        boolean $z0;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r4;
        java.lang.Object[] $r5;
        com.android.server.media.SessionPolicyProvider $r7;
        android.content.Context $r8;
        android.content.res.Resources $r9;
        java.lang.Throwable $r10, $r11;
        java.lang.String r12;

        r0 := @this: com.android.server.media.MediaSessionService;

        r12 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r0.<com.android.server.media.MediaSessionService: com.android.server.media.SessionPolicyProvider mCustomSessionPolicyProvider> = null;

     label02:
        if r12 != null goto label05;

     label03:
        $r8 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        r12 = virtualinvoke $r9.<android.content.res.Resources: java.lang.String getString(int)>(17039849);

     label04:
        goto label05;

     label05:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z0 != 0 goto label06;

        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r12);

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r3);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

        $r7 = (com.android.server.media.SessionPolicyProvider) $r6;

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.SessionPolicyProvider mCustomSessionPolicyProvider> = $r7;

     label06:
        goto label09;

     label07:
        $r11 := @caughtexception;

     label08:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionService", "Encountered problem while using reflection", $r11);

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r10 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.ClassNotFoundException from label05 to label06 with label07;
        catch java.lang.InstantiationException from label05 to label06 with label07;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label07;
        catch java.lang.IllegalAccessException from label05 to label06 with label07;
        catch java.lang.NoSuchMethodException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private boolean isEnabledNotificationListener(android.content.ComponentName, int, int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1;
        boolean z0, $z1;
        android.app.INotificationManager $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.os.RemoteException $r7;
        android.content.ComponentName r8;

        r0 := @this: com.android.server.media.MediaSessionService;

        r8 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 == i1 goto label1;

        return 0;

     label1:
        $z1 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking if enabled notification listener ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r6);

     label2:
        if r8 == null goto label6;

     label3:
        $r2 = r0.<com.android.server.media.MediaSessionService: android.app.INotificationManager mNotificationManager>;

        z0 = interfaceinvoke $r2.<android.app.INotificationManager: boolean isNotificationListenerAccessGrantedForUser(android.content.ComponentName,int)>(r8, i0);

     label4:
        return z0;

     label5:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionService", "Dead NotificationManager in isEnabledNotificationListener", $r7);

     label6:
        return 0;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private boolean isGlobalPriorityActiveLocked()
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionRecord r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionRecord mGlobalPrioritySession>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.server.media.MediaSessionRecord: boolean isActive()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private void pushRemoteVolumeUpdateLocked(int)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1;
        int i0, i3, i4;
        android.os.RemoteCallbackList $r3, $r6, $r7;
        com.android.server.media.MediaSessionStack $r4;
        boolean $z0;
        com.android.server.media.MediaSessionRecord $r5;
        android.os.IInterface $r8;
        android.media.IRemoteVolumeController $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r13;
        java.lang.Throwable $r14;
        java.lang.Exception $r15;
        com.android.server.media.MediaSessionService$FullUserRecord r16;
        com.android.server.media.MediaSessionRecordImpl r18;
        android.media.session.MediaSession$Token r19;

        r0 := @this: com.android.server.media.MediaSessionService;

        i3 := @parameter0: int;

        r16 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>(i3);

        if r16 != null goto label01;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pushRemoteVolumeUpdateLocked failed. No user with id=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionService", $r13);

        return;

     label01:
        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $r3 = r0.<com.android.server.media.MediaSessionService: android.os.RemoteCallbackList mRemoteVolumeControllers>;

        i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $r4 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r16);

        r18 = virtualinvoke $r4.<com.android.server.media.MediaSessionStack: com.android.server.media.MediaSessionRecordImpl getDefaultRemoteSession(int)>(i3);

        $z0 = r18 instanceof com.android.server.media.MediaSession2Record;

        if $z0 == 0 goto label04;

        exitmonitor r1;

     label03:
        return;

     label04:
        if r18 != null goto label05;

        r19 = null;

        goto label06;

     label05:
        $r5 = (com.android.server.media.MediaSessionRecord) r18;

        r19 = virtualinvoke $r5.<com.android.server.media.MediaSessionRecord: android.media.session.MediaSession$Token getSessionToken()>();

     label06:
        i4 = i0 - 1;

     label07:
        if i4 < 0 goto label13;

     label08:
        $r7 = r0.<com.android.server.media.MediaSessionService: android.os.RemoteCallbackList mRemoteVolumeControllers>;

        $r8 = virtualinvoke $r7.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i4);

        $r9 = (android.media.IRemoteVolumeController) $r8;

        interfaceinvoke $r9.<android.media.IRemoteVolumeController: void updateRemoteController(android.media.session.MediaSession$Token)>(r19);

     label09:
        goto label12;

     label10:
        $r15 := @caughtexception;

     label11:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionService", "Error sending default remote volume.", $r15);

     label12:
        i4 = i4 + -1;

        goto label07;

     label13:
        $r6 = r0.<com.android.server.media.MediaSessionService: android.os.RemoteCallbackList mRemoteVolumeControllers>;

        virtualinvoke $r6.<android.os.RemoteCallbackList: void finishBroadcast()>();

        exitmonitor r1;

     label14:
        return;

     label15:
        $r14 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r14;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    private void pushSession1Changed(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, $i1, $i2, i5, i6, i7, i8;
        java.lang.Object r1, $r5, $r7;
        com.android.server.media.MediaSessionService$FullUserRecord $r2;
        java.util.ArrayList $r3, $r4, $r15, r19;
        android.media.session.IActiveSessionsListener $r6;
        com.android.server.media.MediaSessionRecord $r8;
        android.media.session.MediaSession$Token $r9;
        java.lang.String $r12;
        java.lang.Throwable $r13;
        android.os.RemoteException $r14;
        java.lang.StringBuilder r17;
        java.util.List r18;
        com.android.server.media.MediaSessionService$SessionsListenerRecord r20;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>(i0);

        if $r2 != null goto label03;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pushSession1ChangedOnHandler failed. No user with id=");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionService", $r12);

        exitmonitor r1;

     label02:
        return;

     label03:
        r18 = specialinvoke r0.<com.android.server.media.MediaSessionService: java.util.List getActiveSessionsLocked(int)>(i0);

        i5 = interfaceinvoke r18.<java.util.List: int size()>();

        r19 = new java.util.ArrayList;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

     label04:
        i6 = 0;

     label05:
        if i6 >= i5 goto label08;

     label06:
        $r7 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(i6);

        $r8 = (com.android.server.media.MediaSessionRecord) $r7;

        $r9 = virtualinvoke $r8.<com.android.server.media.MediaSessionRecord: android.media.session.MediaSession$Token getSessionToken()>();

        virtualinvoke r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label07:
        i6 = i6 + 1;

        goto label05;

     label08:
        specialinvoke r0.<com.android.server.media.MediaSessionService: void pushRemoteVolumeUpdateLocked(int)>(i0);

        $r3 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i7 = $i1 - 1;

     label09:
        if i7 < 0 goto label17;

     label10:
        $r4 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r20 = (com.android.server.media.MediaSessionService$SessionsListenerRecord) $r5;

        $i2 = r20.<com.android.server.media.MediaSessionService$SessionsListenerRecord: int userId>;

        if $i2 == -1 goto label12;

        i8 = r20.<com.android.server.media.MediaSessionService$SessionsListenerRecord: int userId>;

     label11:
        if i8 != i0 goto label16;

     label12:
        $r6 = r20.<com.android.server.media.MediaSessionService$SessionsListenerRecord: android.media.session.IActiveSessionsListener listener>;

        interfaceinvoke $r6.<android.media.session.IActiveSessionsListener: void onActiveSessionsChanged(java.util.List)>(r19);

     label13:
        goto label16;

     label14:
        $r14 := @caughtexception;

     label15:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionService", "Dead ActiveSessionsListener in pushSessionsChanged, removing", $r14);

        $r15 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        virtualinvoke $r15.<java.util.ArrayList: java.lang.Object remove(int)>(i7);

     label16:
        i7 = i7 + -1;

        goto label09;

     label17:
        exitmonitor r1;

     label18:
        return;

     label19:
        $r13 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch android.os.RemoteException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    private void updateActiveSessionListeners()
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1, $r4;
        java.util.ArrayList $r2, $r3, $r13, r20;
        int $i0, $i1, $i2, $i3, i5;
        android.content.ComponentName $r5, $r9;
        java.lang.Throwable $r6, $r7;
        java.lang.String $r12;
        java.lang.Exception $r15;
        com.android.server.media.MediaSessionService$SessionsListenerRecord r16;
        java.lang.StringBuilder r18;
        android.media.session.IActiveSessionsListener r19;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i5 = $i0 - 1;

     label02:
        if i5 < 0 goto label12;

     label03:
        $r3 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r16 = (com.android.server.media.MediaSessionService$SessionsListenerRecord) $r4;

     label04:
        $r5 = r16.<com.android.server.media.MediaSessionService$SessionsListenerRecord: android.content.ComponentName componentName>;

        $i3 = r16.<com.android.server.media.MediaSessionService$SessionsListenerRecord: int pid>;

        $i2 = r16.<com.android.server.media.MediaSessionService$SessionsListenerRecord: int uid>;

        $i1 = r16.<com.android.server.media.MediaSessionService$SessionsListenerRecord: int userId>;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void enforceMediaPermissions(android.content.ComponentName,int,int,int)>($r5, $i3, $i2, $i1);

     label05:
        goto label11;

     label06:
        $r7 := @caughtexception;

     label07:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActiveSessionsListener ");

        $r9 = r16.<com.android.server.media.MediaSessionService$SessionsListenerRecord: android.content.ComponentName componentName>;

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is no longer authorized. Disconnecting.");

        $r12 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MediaSessionService", $r12);

        $r13 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        virtualinvoke $r13.<java.util.ArrayList: java.lang.Object remove(int)>(i5);

     label08:
        r19 = r16.<com.android.server.media.MediaSessionService$SessionsListenerRecord: android.media.session.IActiveSessionsListener listener>;

        r20 = new java.util.ArrayList;

        specialinvoke r20.<java.util.ArrayList: void <init>()>();

        interfaceinvoke r19.<android.media.session.IActiveSessionsListener: void onActiveSessionsChanged(java.util.List)>(r20);

     label09:
        goto label11;

     label10:
        $r15 := @caughtexception;

     label11:
        i5 = i5 + -1;

        goto label02;

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r6 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.SecurityException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    private void updateUser()
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1, $r6, $r9, $r15, $r18;
        android.content.pm.UserInfo r2;
        android.util.SparseArray r3, $r8, $r14, $r17;
        com.android.server.media.MediaSessionService$FullUserRecord r4, r24, r26;
        android.content.Context $r5;
        android.util.SparseIntArray $r7, $r10, $r16, $r19;
        java.lang.String $r13;
        boolean $z0, $z1;
        int $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.lang.Throwable $r20;
        android.os.UserManager r21;
        java.util.List r22;
        java.util.Iterator r23;
        java.lang.StringBuilder r25;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        r21 = (android.os.UserManager) $r6;

        $r7 = r0.<com.android.server.media.MediaSessionService: android.util.SparseIntArray mFullUserIds>;

        virtualinvoke $r7.<android.util.SparseIntArray: void clear()>();

        r22 = virtualinvoke r21.<android.os.UserManager: java.util.List getUsers()>();

     label02:
        if r22 == null goto label08;

     label03:
        r23 = interfaceinvoke r22.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r15 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.pm.UserInfo) $r15;

        $z1 = virtualinvoke r2.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z1 == 0 goto label06;

        $r19 = r0.<com.android.server.media.MediaSessionService: android.util.SparseIntArray mFullUserIds>;

        $i6 = r2.<android.content.pm.UserInfo: int id>;

        $i5 = r2.<android.content.pm.UserInfo: int profileGroupId>;

        virtualinvoke $r19.<android.util.SparseIntArray: void put(int,int)>($i6, $i5);

     label05:
        goto label07;

     label06:
        $r16 = r0.<com.android.server.media.MediaSessionService: android.util.SparseIntArray mFullUserIds>;

        $i2 = r2.<android.content.pm.UserInfo: int id>;

        $i1 = r2.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r16.<android.util.SparseIntArray: void put(int,int)>($i2, $i1);

        $r17 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        $i3 = r2.<android.content.pm.UserInfo: int id>;

        $r18 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        if $r18 != null goto label07;

        r3 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        i7 = r2.<android.content.pm.UserInfo: int id>;

        r4 = new com.android.server.media.MediaSessionService$FullUserRecord;

        $i4 = r2.<android.content.pm.UserInfo: int id>;

        specialinvoke r4.<com.android.server.media.MediaSessionService$FullUserRecord: void <init>(com.android.server.media.MediaSessionService,int)>(r0, $i4);

        virtualinvoke r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i7, r4);

     label07:
        goto label04;

     label08:
        i8 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $r8 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i8);

        r24 = (com.android.server.media.MediaSessionService$FullUserRecord) $r9;

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord mCurrentFullUserRecord> = r24;

     label09:
        if r24 != null goto label11;

     label10:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find FullUserInfo for the current user ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r13 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionService", $r13);

        r26 = new com.android.server.media.MediaSessionService$FullUserRecord;

        specialinvoke r26.<com.android.server.media.MediaSessionService$FullUserRecord: void <init>(com.android.server.media.MediaSessionService,int)>(r0, i8);

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord mCurrentFullUserRecord> = r26;

        $r14 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        virtualinvoke $r14.<android.util.SparseArray: void put(int,java.lang.Object)>(i8, r26);

     label11:
        $r10 = r0.<com.android.server.media.MediaSessionService: android.util.SparseIntArray mFullUserIds>;

        virtualinvoke $r10.<android.util.SparseIntArray: void put(int,int)>(i8, i8);

        exitmonitor r1;

     label12:
        return;

     label13:
        $r20 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    protected void enforcePhoneStatePermission(int, int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1, $i2;
        android.content.Context $r1;
        java.lang.SecurityException $r2;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        $i2 = virtualinvoke $r1.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.MODIFY_PHONE_STATE", i0, i1);

        if $i2 != 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Must hold the MODIFY_PHONE_STATE permission.");

        throw $r2;
    }

    java.util.List getSession2TokensLocked(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1, i2;
        java.util.ArrayList $r2;
        com.android.server.media.MediaSessionService$FullUserRecord $r3, $r9;
        com.android.server.media.MediaSessionStack $r4, $r10;
        java.util.List $r5, $r11;
        android.util.SparseArray $r6, $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        if i0 != -1 goto label3;

        $r6 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        i1 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r7 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r9 = (com.android.server.media.MediaSessionService$FullUserRecord) $r8;

        $r10 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>($r9);

        $r11 = virtualinvoke $r10.<com.android.server.media.MediaSessionStack: java.util.List getSession2Tokens(int)>(i0);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r11);

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        $r3 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>(i0);

        $r4 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>($r3);

        $r5 = virtualinvoke $r4.<com.android.server.media.MediaSessionStack: java.util.List getSession2Tokens(int)>(i0);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r5);

     label4:
        return $r2;
    }

    public void lambda$onStart$0$MediaSessionService(android.media.AudioPlaybackConfiguration, boolean)
    {
        com.android.server.media.MediaSessionService r0;
        boolean z0, $z1;
        int $i0, $i1, $i2;
        android.os.UserHandle $r1;
        com.android.server.media.MediaSessionStack $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r8;
        java.lang.Throwable $r9;
        android.media.AudioPlaybackConfiguration r10;
        java.lang.Object r12;
        com.android.server.media.MediaSessionService$FullUserRecord r13;

        r0 := @this: com.android.server.media.MediaSessionService;

        r10 := @parameter0: android.media.AudioPlaybackConfiguration;

        z0 := @parameter1: boolean;

        $z1 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        if $z1 == 0 goto label01;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Audio playback is changed, config=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", removed=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r8);

     label01:
        $i0 = virtualinvoke r10.<android.media.AudioPlaybackConfiguration: int getPlayerType()>();

        if $i0 != 3 goto label02;

        return;

     label02:
        r12 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r12;

     label03:
        $i1 = virtualinvoke r10.<android.media.AudioPlaybackConfiguration: int getClientUid()>();

        $r1 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>($i1);

        $i2 = virtualinvoke $r1.<android.os.UserHandle: int getIdentifier()>();

        r13 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>($i2);

     label04:
        if r13 == null goto label06;

     label05:
        $r2 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r13);

        virtualinvoke $r2.<com.android.server.media.MediaSessionStack: void updateMediaButtonSessionIfNeeded()>();

     label06:
        exitmonitor r12;

     label07:
        return;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r12;

     label10:
        throw $r9;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void monitor()
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notifyRemoteVolumeChanged(int, com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i2, i3;
        java.lang.Object r1;
        android.media.session.MediaSession$Token r2;
        boolean $z0;
        android.os.RemoteCallbackList $r3, $r4, $r5;
        android.os.IInterface $r6;
        android.media.IRemoteVolumeController $r7;
        java.lang.Throwable $r8;
        java.lang.Exception $r9;
        com.android.server.media.MediaSessionRecord r10;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        r10 := @parameter1: com.android.server.media.MediaSessionRecord;

        $z0 = virtualinvoke r10.<com.android.server.media.MediaSessionRecord: boolean isActive()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $r3 = r0.<com.android.server.media.MediaSessionService: android.os.RemoteCallbackList mRemoteVolumeControllers>;

        i2 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        r2 = virtualinvoke r10.<com.android.server.media.MediaSessionRecord: android.media.session.MediaSession$Token getSessionToken()>();

     label03:
        i3 = i2 + -1;

     label04:
        if i3 < 0 goto label10;

     label05:
        $r5 = r0.<com.android.server.media.MediaSessionService: android.os.RemoteCallbackList mRemoteVolumeControllers>;

        $r6 = virtualinvoke $r5.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i3);

        $r7 = (android.media.IRemoteVolumeController) $r6;

        interfaceinvoke $r7.<android.media.IRemoteVolumeController: void remoteVolumeChanged(android.media.session.MediaSession$Token,int)>(r2, i0);

     label06:
        goto label09;

     label07:
        $r9 := @caughtexception;

     label08:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionService", "Error sending volume change.", $r9);

     label09:
        i3 = i3 + -1;

        goto label04;

     label10:
        $r4 = r0.<com.android.server.media.MediaSessionService: android.os.RemoteCallbackList mRemoteVolumeControllers>;

        virtualinvoke $r4.<android.os.RemoteCallbackList: void finishBroadcast()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r8 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r8;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void onCleanupUser(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, $i1;
        boolean $z0;
        android.util.SparseArray $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        java.lang.Object r8;
        com.android.server.media.MediaSessionService$FullUserRecord r9;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        $z0 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCleanupUser: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r5);

     label01:
        r8 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r8;

     label02:
        r9 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>(i0);

     label03:
        if r9 == null goto label07;

     label04:
        $i1 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: int access$400(com.android.server.media.MediaSessionService$FullUserRecord)>(r9);

        if $i1 != i0 goto label06;

        virtualinvoke r9.<com.android.server.media.MediaSessionService$FullUserRecord: void destroySessionsForUserLocked(int)>(-1);

        $r1 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>(i0);

     label05:
        goto label07;

     label06:
        virtualinvoke r9.<com.android.server.media.MediaSessionService$FullUserRecord: void destroySessionsForUserLocked(int)>(i0);

     label07:
        specialinvoke r0.<com.android.server.media.MediaSessionService: void updateUser()>();

        exitmonitor r8;

     label08:
        return;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r8;

     label11:
        throw $r6;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void onMediaButtonReceiverChanged(com.android.server.media.MediaSessionRecordImpl)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1;
        com.android.server.media.MediaSessionService$FullUserRecord r2;
        com.android.server.media.MediaSessionRecordImpl r3, r6;
        int $i0;
        com.android.server.media.MediaSessionStack $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.media.MediaSessionService;

        r6 := @parameter0: com.android.server.media.MediaSessionRecordImpl;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = interfaceinvoke r6.<com.android.server.media.MediaSessionRecordImpl: int getUserId()>();

        r2 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>($i0);

     label2:
        $r4 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r2);

        r3 = virtualinvoke $r4.<com.android.server.media.MediaSessionStack: com.android.server.media.MediaSessionRecordImpl getMediaButtonSession()>();

     label3:
        if r6 != r3 goto label5;

     label4:
        virtualinvoke r2.<com.android.server.media.MediaSessionService$FullUserRecord: void rememberMediaButtonReceiverLocked(com.android.server.media.MediaSessionRecordImpl)>(r3);

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void onSessionActiveStateChanged(com.android.server.media.MediaSessionRecordImpl)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1;
        com.android.server.media.MediaSessionService$FullUserRecord r2;
        java.lang.StringBuilder r3;
        int $i0;
        boolean $z0, $z1, $z2;
        com.android.server.media.MediaSessionStack $r4, $r5;
        com.android.server.media.MediaSessionService$MessageHandler $r6;
        java.lang.String $r9;
        java.lang.Throwable $r10;
        com.android.server.media.MediaSessionRecordImpl r11;

        r0 := @this: com.android.server.media.MediaSessionService;

        r11 := @parameter0: com.android.server.media.MediaSessionRecordImpl;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $i0 = interfaceinvoke r11.<com.android.server.media.MediaSessionRecordImpl: int getUserId()>();

        r2 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>($i0);

     label02:
        if r2 != null goto label05;

     label03:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionService", "Unknown session updated. Ignoring.");

        exitmonitor r1;

     label04:
        return;

     label05:
        $z0 = interfaceinvoke r11.<com.android.server.media.MediaSessionRecordImpl: boolean isSystemPriority()>();

        if $z0 == 0 goto label07;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Global priority session is updated, active=");

        $z2 = interfaceinvoke r11.<com.android.server.media.MediaSessionRecordImpl: boolean isActive()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r9);

        staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: void access$200(com.android.server.media.MediaSessionService$FullUserRecord)>(r2);

     label06:
        goto label10;

     label07:
        $r4 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r2);

        $z1 = virtualinvoke $r4.<com.android.server.media.MediaSessionStack: boolean contains(com.android.server.media.MediaSessionRecordImpl)>(r11);

        if $z1 != 0 goto label09;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionService", "Unknown session updated. Ignoring.");

        exitmonitor r1;

     label08:
        return;

     label09:
        $r5 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r2);

        virtualinvoke $r5.<com.android.server.media.MediaSessionStack: void onSessionActiveStateChanged(com.android.server.media.MediaSessionRecordImpl)>(r11);

     label10:
        $r6 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$MessageHandler mHandler>;

        virtualinvoke $r6.<com.android.server.media.MediaSessionService$MessageHandler: void postSessionsChanged(com.android.server.media.MediaSessionRecordImpl)>(r11);

        exitmonitor r1;

     label11:
        return;

     label12:
        $r10 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    void onSessionDied(com.android.server.media.MediaSessionRecordImpl)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.server.media.MediaSessionRecordImpl r3;

        r0 := @this: com.android.server.media.MediaSessionService;

        r3 := @parameter0: com.android.server.media.MediaSessionRecordImpl;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.media.MediaSessionService: void destroySessionLocked(com.android.server.media.MediaSessionRecordImpl)>(r3);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void onSessionPlaybackStateChanged(com.android.server.media.MediaSessionRecordImpl, boolean)
    {
        com.android.server.media.MediaSessionService r0;
        boolean z0, $z1;
        java.lang.Object r1;
        com.android.server.media.MediaSessionService$FullUserRecord r2;
        int $i0;
        com.android.server.media.MediaSessionStack $r3, $r4;
        java.lang.Throwable $r5;
        com.android.server.media.MediaSessionRecordImpl r6;

        r0 := @this: com.android.server.media.MediaSessionService;

        r6 := @parameter0: com.android.server.media.MediaSessionRecordImpl;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $i0 = interfaceinvoke r6.<com.android.server.media.MediaSessionRecordImpl: int getUserId()>();

        r2 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>($i0);

     label02:
        if r2 == null goto label07;

     label03:
        $r3 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r2);

        $z1 = virtualinvoke $r3.<com.android.server.media.MediaSessionStack: boolean contains(com.android.server.media.MediaSessionRecordImpl)>(r6);

        if $z1 != 0 goto label05;

     label04:
        goto label07;

     label05:
        $r4 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r2);

        virtualinvoke $r4.<com.android.server.media.MediaSessionStack: void onPlaybackStateChanged(com.android.server.media.MediaSessionRecordImpl,boolean)>(r6, z0);

        exitmonitor r1;

     label06:
        return;

     label07:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", "Unknown session changed playback state. Ignoring.");

        exitmonitor r1;

     label08:
        return;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void onSessionPlaybackTypeChanged(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1;
        com.android.server.media.MediaSessionService$FullUserRecord r2;
        int $i0, $i2;
        com.android.server.media.MediaSessionStack $r3;
        boolean $z0;
        java.lang.Throwable $r4;
        com.android.server.media.MediaSessionRecord r5;

        r0 := @this: com.android.server.media.MediaSessionService;

        r5 := @parameter0: com.android.server.media.MediaSessionRecord;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $i0 = virtualinvoke r5.<com.android.server.media.MediaSessionRecord: int getUserId()>();

        r2 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>($i0);

     label02:
        if r2 == null goto label07;

     label03:
        $r3 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r2);

        $z0 = virtualinvoke $r3.<com.android.server.media.MediaSessionStack: boolean contains(com.android.server.media.MediaSessionRecordImpl)>(r5);

        if $z0 != 0 goto label05;

     label04:
        goto label07;

     label05:
        $i2 = virtualinvoke r5.<com.android.server.media.MediaSessionRecord: int getUserId()>();

        specialinvoke r0.<com.android.server.media.MediaSessionService: void pushRemoteVolumeUpdateLocked(int)>($i2);

        exitmonitor r1;

     label06:
        return;

     label07:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", "Unknown session changed playback type. Ignoring.");

        exitmonitor r1;

     label08:
        return;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void onStart()
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionService$SessionManagerImpl $r1;
        com.android.server.Watchdog $r2;
        android.content.Context $r3, $r8, $r10, $r13;
        java.lang.Object $r4, $r6;
        android.app.KeyguardManager $r5;
        android.media.AudioManagerInternal $r7;
        com.android.server.media._$$Lambda$MediaSessionService$za_9dlUSlnaiZw6eCdPVEZq0XLw $r9;
        android.content.ContentResolver $r11;
        com.android.server.media.MediaSessionService$SettingsObserver $r12;
        android.content.pm.PackageManager $r14;
        boolean $z0;
        android.os.HandlerThread $r15;
        com.android.server.media.AudioPlayerStateMonitor r16;

        r0 := @this: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$SessionManagerImpl mSessionManagerImpl>;

        virtualinvoke r0.<com.android.server.media.MediaSessionService: void publishBinderService(java.lang.String,android.os.IBinder)>("media_session", $r1);

        $r2 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r2.<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog$Monitor)>(r0);

        $r3 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("keyguard");

        $r5 = (android.app.KeyguardManager) $r4;

        r0.<com.android.server.media.MediaSessionService: android.app.KeyguardManager mKeyguardManager> = $r5;

        $r6 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/media/AudioManagerInternal;");

        $r7 = (android.media.AudioManagerInternal) $r6;

        r0.<com.android.server.media.MediaSessionService: android.media.AudioManagerInternal mAudioManagerInternal> = $r7;

        $r8 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        r16 = staticinvoke <com.android.server.media.AudioPlayerStateMonitor: com.android.server.media.AudioPlayerStateMonitor getInstance(android.content.Context)>($r8);

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.AudioPlayerStateMonitor mAudioPlayerStateMonitor> = r16;

        $r9 = new com.android.server.media._$$Lambda$MediaSessionService$za_9dlUSlnaiZw6eCdPVEZq0XLw;

        specialinvoke $r9.<com.android.server.media._$$Lambda$MediaSessionService$za_9dlUSlnaiZw6eCdPVEZq0XLw: void <init>(com.android.server.media.MediaSessionService)>(r0);

        virtualinvoke r16.<com.android.server.media.AudioPlayerStateMonitor: void registerListener(com.android.server.media.AudioPlayerStateMonitor$OnAudioPlayerActiveStateChangedListener,android.os.Handler)>($r9, null);

        $r10 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.server.media.MediaSessionService: android.content.ContentResolver mContentResolver> = $r11;

        $r12 = new com.android.server.media.MediaSessionService$SettingsObserver;

        specialinvoke $r12.<com.android.server.media.MediaSessionService$SettingsObserver: void <init>(com.android.server.media.MediaSessionService,com.android.server.media.MediaSessionService$1)>(r0, null);

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$SettingsObserver mSettingsObserver> = $r12;

        staticinvoke <com.android.server.media.MediaSessionService$SettingsObserver: void access$100(com.android.server.media.MediaSessionService$SettingsObserver)>($r12);

        $r13 = r0.<com.android.server.media.MediaSessionService: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r14.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.leanback");

        r0.<com.android.server.media.MediaSessionService: boolean mHasFeatureLeanback> = $z0;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void updateUser()>();

        specialinvoke r0.<com.android.server.media.MediaSessionService: void instantiateCustomProvider(java.lang.String)>(null);

        specialinvoke r0.<com.android.server.media.MediaSessionService: void instantiateCustomDispatcher(java.lang.String)>(null);

        $r15 = r0.<com.android.server.media.MediaSessionService: android.os.HandlerThread mRecordThread>;

        virtualinvoke $r15.<android.os.HandlerThread: void start()>();

        return;
    }

    public void onStartUser(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        $z0 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onStartUser: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r5);

     label1:
        specialinvoke r0.<com.android.server.media.MediaSessionService: void updateUser()>();

        return;
    }

    public void onSwitchUser(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        $z0 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSwitchUser: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r5);

     label1:
        specialinvoke r0.<com.android.server.media.MediaSessionService: void updateUser()>();

        return;
    }

    void pushSession2Changed(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, $i1, $i2, $i3, i5;
        java.lang.Object r1, $r5;
        java.util.List r2, $r3, $r4, $r10, r12;
        android.media.session.ISession2TokensListener $r6, $r7;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;
        com.android.server.media.MediaSessionService$Session2TokensListenerRecord r13;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r12 = virtualinvoke r0.<com.android.server.media.MediaSessionService: java.util.List getSession2TokensLocked(int)>(-1);

        r2 = virtualinvoke r0.<com.android.server.media.MediaSessionService: java.util.List getSession2TokensLocked(int)>(i0);

        $r3 = r0.<com.android.server.media.MediaSessionService: java.util.List mSession2TokensListenerRecords>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        i5 = $i1 - 1;

     label02:
        if i5 < 0 goto label11;

     label03:
        $r4 = r0.<com.android.server.media.MediaSessionService: java.util.List mSession2TokensListenerRecords>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i5);

        r13 = (com.android.server.media.MediaSessionService$Session2TokensListenerRecord) $r5;

     label04:
        $i2 = r13.<com.android.server.media.MediaSessionService$Session2TokensListenerRecord: int userId>;

        if $i2 != -1 goto label06;

        $r7 = r13.<com.android.server.media.MediaSessionService$Session2TokensListenerRecord: android.media.session.ISession2TokensListener listener>;

        interfaceinvoke $r7.<android.media.session.ISession2TokensListener: void onSession2TokensChanged(java.util.List)>(r12);

     label05:
        goto label07;

     label06:
        $i3 = r13.<com.android.server.media.MediaSessionService$Session2TokensListenerRecord: int userId>;

        if $i3 != i0 goto label07;

        $r6 = r13.<com.android.server.media.MediaSessionService$Session2TokensListenerRecord: android.media.session.ISession2TokensListener listener>;

        interfaceinvoke $r6.<android.media.session.ISession2TokensListener: void onSession2TokensChanged(java.util.List)>(r2);

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

     label09:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionService", "Failed to notify Session2Token change. Removing listener.", $r9);

        $r10 = r0.<com.android.server.media.MediaSessionService: java.util.List mSession2TokensListenerRecords>;

        interfaceinvoke $r10.<java.util.List: java.lang.Object remove(int)>(i5);

     label10:
        i5 = i5 + -1;

        goto label02;

     label11:
        exitmonitor r1;

     label12:
        return;

     label13:
        $r8 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch android.os.RemoteException from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    void setGlobalPrioritySession(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1;
        com.android.server.media.MediaSessionService$FullUserRecord r2;
        java.lang.StringBuilder r3;
        int $i0;
        com.android.server.media.MediaSessionRecord $r4, $r6, r14;
        java.lang.String $r10;
        com.android.server.media.MediaSessionStack $r11, $r12;
        boolean $z0;
        java.lang.Throwable $r13;

        r0 := @this: com.android.server.media.MediaSessionService;

        r14 := @parameter0: com.android.server.media.MediaSessionRecord;

        r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = virtualinvoke r14.<com.android.server.media.MediaSessionRecord: int getUserId()>();

        r2 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$FullUserRecord getFullUserRecordLocked(int)>($i0);

        $r4 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionRecord mGlobalPrioritySession>;

        if $r4 == r14 goto label4;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Global priority session is changed from ");

        $r6 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionRecord mGlobalPrioritySession>;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r10);

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionRecord mGlobalPrioritySession> = r14;

     label2:
        if r2 == null goto label4;

     label3:
        $r11 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r2);

        $z0 = virtualinvoke $r11.<com.android.server.media.MediaSessionStack: boolean contains(com.android.server.media.MediaSessionRecordImpl)>(r14);

        if $z0 == 0 goto label4;

        $r12 = staticinvoke <com.android.server.media.MediaSessionService$FullUserRecord: com.android.server.media.MediaSessionStack access$300(com.android.server.media.MediaSessionService$FullUserRecord)>(r2);

        virtualinvoke $r12.<com.android.server.media.MediaSessionStack: void removeSession(com.android.server.media.MediaSessionRecordImpl)>(r14);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r13 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
