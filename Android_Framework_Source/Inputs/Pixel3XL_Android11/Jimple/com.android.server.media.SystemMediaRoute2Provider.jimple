class com.android.server.media.SystemMediaRoute2Provider extends com.android.server.media.MediaRoute2Provider
{
    private static final boolean DEBUG;
    static final java.lang.String DEFAULT_ROUTE_ID;
    static final java.lang.String DEVICE_ROUTE_ID;
    static final java.lang.String SYSTEM_SESSION_ID;
    private static final java.lang.String TAG;
    private static android.content.ComponentName sComponentName;
    private final android.media.AudioManager mAudioManager;
    final android.media.IAudioRoutesObserver$Stub mAudioRoutesObserver;
    private final android.media.IAudioService mAudioService;
    private final com.android.server.media.BluetoothRouteProvider mBtRouteProvider;
    private final android.content.Context mContext;
    final android.media.AudioRoutesInfo mCurAudioRoutesInfo;
    android.media.MediaRoute2Info mDefaultRoute;
    android.media.RoutingSessionInfo mDefaultSessionInfo;
    android.media.MediaRoute2Info mDeviceRoute;
    int mDeviceVolume;
    private final android.os.Handler mHandler;
    private volatile com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest mPendingSessionCreationRequest;
    private final java.lang.Object mRequestLock;
    private java.lang.String mSelectedRouteId;

    static void <clinit>()
    {
        boolean $z0;
        android.content.ComponentName $r0;
        java.lang.Class $r1, $r4;
        java.lang.Package $r2;
        java.lang.String $r3, $r5;

        <com.android.server.media.SystemMediaRoute2Provider: java.lang.String TAG> = "MR2SystemProvider";

        <com.android.server.media.SystemMediaRoute2Provider: java.lang.String SYSTEM_SESSION_ID> = "SYSTEM_SESSION";

        <com.android.server.media.SystemMediaRoute2Provider: java.lang.String DEVICE_ROUTE_ID> = "DEVICE_ROUTE";

        <com.android.server.media.SystemMediaRoute2Provider: java.lang.String DEFAULT_ROUTE_ID> = "DEFAULT_ROUTE";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MR2SystemProvider", 3);

        <com.android.server.media.SystemMediaRoute2Provider: boolean DEBUG> = $z0;

        $r0 = new android.content.ComponentName;

        $r1 = class "Lcom/android/server/media/SystemMediaRoute2Provider;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Package getPackage()>();

        $r3 = virtualinvoke $r2.<java.lang.Package: java.lang.String getName()>();

        $r4 = class "Lcom/android/server/media/SystemMediaRoute2Provider;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r3, $r5);

        <com.android.server.media.SystemMediaRoute2Provider: android.content.ComponentName sComponentName> = $r0;

        return;
    }

    void <init>(android.content.Context)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        android.content.ComponentName $r1;
        android.media.AudioRoutesInfo $r2, r23, r24;
        java.lang.Object $r3, $r7;
        com.android.server.media.SystemMediaRoute2Provider$1 $r4;
        android.os.Handler $r5, $r19;
        android.os.Looper $r6;
        android.media.AudioManager $r8;
        android.os.IBinder $r9;
        android.media.IAudioRoutesObserver$Stub $r10;
        com.android.server.media._$$Lambda$SystemMediaRoute2Provider$aOlVIsBkXTnw1voyl2_9vhrVhMY $r11;
        com.android.server.media.BluetoothRouteProvider $r12, $r17;
        android.content.IntentFilter $r13;
        com.android.server.media.SystemMediaRoute2Provider$AudioManagerBroadcastReceiver $r14;
        android.content.Context $r15, r21;
        com.android.server.media._$$Lambda$SystemMediaRoute2Provider$AB_PWlKU2NOApQQQov7CqgW5RnQ $r18;
        android.os.RemoteException $r20;
        android.media.IAudioService r22;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        r21 := @parameter0: android.content.Context;

        $r1 = <com.android.server.media.SystemMediaRoute2Provider: android.content.ComponentName sComponentName>;

        specialinvoke r0.<com.android.server.media.MediaRoute2Provider: void <init>(android.content.ComponentName)>($r1);

        $r2 = new android.media.AudioRoutesInfo;

        specialinvoke $r2.<android.media.AudioRoutesInfo: void <init>()>();

        r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.AudioRoutesInfo mCurAudioRoutesInfo> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.media.SystemMediaRoute2Provider: java.lang.Object mRequestLock> = $r3;

        $r4 = new com.android.server.media.SystemMediaRoute2Provider$1;

        specialinvoke $r4.<com.android.server.media.SystemMediaRoute2Provider$1: void <init>(com.android.server.media.SystemMediaRoute2Provider)>(r0);

        r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.IAudioRoutesObserver$Stub mAudioRoutesObserver> = $r4;

        r0.<com.android.server.media.SystemMediaRoute2Provider: boolean mIsSystemRouteProvider> = 1;

        r0.<com.android.server.media.SystemMediaRoute2Provider: android.content.Context mContext> = r21;

        $r5 = new android.os.Handler;

        $r6 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r5.<android.os.Handler: void <init>(android.os.Looper)>($r6);

        r0.<com.android.server.media.SystemMediaRoute2Provider: android.os.Handler mHandler> = $r5;

        $r7 = virtualinvoke r21.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r8 = (android.media.AudioManager) $r7;

        r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.AudioManager mAudioManager> = $r8;

        $r9 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("audio");

        r22 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService asInterface(android.os.IBinder)>($r9);

        r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.IAudioService mAudioService> = r22;

        r23 = null;

     label1:
        $r10 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.IAudioRoutesObserver$Stub mAudioRoutesObserver>;

        r24 = interfaceinvoke r22.<android.media.IAudioService: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>($r10);

     label2:
        r23 = r24;

        goto label4;

     label3:
        $r20 := @caughtexception;

     label4:
        specialinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void updateDeviceRoute(android.media.AudioRoutesInfo)>(r23);

        $r11 = new com.android.server.media._$$Lambda$SystemMediaRoute2Provider$aOlVIsBkXTnw1voyl2_9vhrVhMY;

        specialinvoke $r11.<com.android.server.media._$$Lambda$SystemMediaRoute2Provider$aOlVIsBkXTnw1voyl2_9vhrVhMY: void <init>(com.android.server.media.SystemMediaRoute2Provider)>(r0);

        $r12 = staticinvoke <com.android.server.media.BluetoothRouteProvider: com.android.server.media.BluetoothRouteProvider getInstance(android.content.Context,com.android.server.media.BluetoothRouteProvider$BluetoothRoutesUpdatedListener)>(r21, $r11);

        r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.BluetoothRouteProvider mBtRouteProvider> = $r12;

        virtualinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: boolean updateSessionInfosIfNeeded()>();

        $r13 = new android.content.IntentFilter;

        specialinvoke $r13.<android.content.IntentFilter: void <init>(java.lang.String)>("android.media.VOLUME_CHANGED_ACTION");

        virtualinvoke $r13.<android.content.IntentFilter: void addAction(java.lang.String)>("android.media.STREAM_DEVICES_CHANGED_ACTION");

        $r15 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.content.Context mContext>;

        $r14 = new com.android.server.media.SystemMediaRoute2Provider$AudioManagerBroadcastReceiver;

        specialinvoke $r14.<com.android.server.media.SystemMediaRoute2Provider$AudioManagerBroadcastReceiver: void <init>(com.android.server.media.SystemMediaRoute2Provider,com.android.server.media.SystemMediaRoute2Provider$1)>(r0, null);

        virtualinvoke $r15.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r14, $r13);

        $r17 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.BluetoothRouteProvider mBtRouteProvider>;

        if $r17 == null goto label5;

        $r19 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.os.Handler mHandler>;

        $r18 = new com.android.server.media._$$Lambda$SystemMediaRoute2Provider$AB_PWlKU2NOApQQQov7CqgW5RnQ;

        specialinvoke $r18.<com.android.server.media._$$Lambda$SystemMediaRoute2Provider$AB_PWlKU2NOApQQQov7CqgW5RnQ: void <init>(com.android.server.media.SystemMediaRoute2Provider)>(r0);

        virtualinvoke $r19.<android.os.Handler: boolean post(java.lang.Runnable)>($r18);

     label5:
        virtualinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void updateVolume()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static android.os.Handler access$000(com.android.server.media.SystemMediaRoute2Provider)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.media.SystemMediaRoute2Provider;

        $r1 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$100(com.android.server.media.SystemMediaRoute2Provider, android.media.AudioRoutesInfo)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        android.media.AudioRoutesInfo r1;

        r0 := @parameter0: com.android.server.media.SystemMediaRoute2Provider;

        r1 := @parameter1: android.media.AudioRoutesInfo;

        specialinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void updateDeviceRoute(android.media.AudioRoutesInfo)>(r1);

        return;
    }

    private void updateDeviceRoute(android.media.AudioRoutesInfo)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        android.media.MediaRoute2Info$Builder $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r13;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        android.media.AudioManager $r3, $r19;
        android.media.MediaRoute2Info $r10;
        android.media.AudioRoutesInfo $r11, r12;
        byte b17, b18;
        android.content.Context $r14;
        android.content.res.Resources $r15;
        java.lang.CharSequence $r16;
        java.lang.String $r17;
        boolean $z0;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        r12 := @parameter0: android.media.AudioRoutesInfo;

        i16 = 17040032;

        b17 = 2;

        if r12 == null goto label5;

        $r11 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.AudioRoutesInfo mCurAudioRoutesInfo>;

        $i5 = r12.<android.media.AudioRoutesInfo: int mainType>;

        $r11.<android.media.AudioRoutesInfo: int mainType> = $i5;

        $i6 = r12.<android.media.AudioRoutesInfo: int mainType>;

        $i7 = $i6 & 2;

        if $i7 == 0 goto label1;

        b17 = 4;

        i16 = 17040035;

        goto label5;

     label1:
        $i8 = r12.<android.media.AudioRoutesInfo: int mainType>;

        $i9 = $i8 & 1;

        if $i9 == 0 goto label2;

        b17 = 3;

        i16 = 17040035;

        goto label5;

     label2:
        $i10 = r12.<android.media.AudioRoutesInfo: int mainType>;

        $i11 = $i10 & 4;

        if $i11 == 0 goto label3;

        b17 = 13;

        i16 = 17040033;

        goto label5;

     label3:
        $i12 = r12.<android.media.AudioRoutesInfo: int mainType>;

        $i13 = $i12 & 8;

        if $i13 == 0 goto label4;

        b17 = 9;

        i16 = 17040034;

        goto label5;

     label4:
        i16 = 17040032;

        b17 = 2;

        $i14 = r12.<android.media.AudioRoutesInfo: int mainType>;

        $i15 = $i14 & 16;

        if $i15 == 0 goto label5;

        b17 = 11;

        i16 = 17040036;

     label5:
        $r13 = new android.media.MediaRoute2Info$Builder;

        $r14 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        $r16 = virtualinvoke $r15.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i16);

        $r17 = interfaceinvoke $r16.<java.lang.CharSequence: java.lang.String toString()>();

        specialinvoke $r13.<android.media.MediaRoute2Info$Builder: void <init>(java.lang.String,java.lang.CharSequence)>("DEVICE_ROUTE", $r17);

        $r19 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.AudioManager mAudioManager>;

        $z0 = virtualinvoke $r19.<android.media.AudioManager: boolean isVolumeFixed()>();

        if $z0 == 0 goto label6;

        b18 = 0;

        goto label7;

     label6:
        b18 = 1;

     label7:
        $r1 = virtualinvoke $r13.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setVolumeHandling(int)>(b18);

        $i3 = r0.<com.android.server.media.SystemMediaRoute2Provider: int mDeviceVolume>;

        $r2 = virtualinvoke $r1.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setVolume(int)>($i3);

        $r3 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.AudioManager mAudioManager>;

        $i4 = virtualinvoke $r3.<android.media.AudioManager: int getStreamMaxVolume(int)>(3);

        $r4 = virtualinvoke $r2.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setVolumeMax(int)>($i4);

        $r5 = virtualinvoke $r4.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setType(int)>(b17);

        $r6 = virtualinvoke $r5.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder addFeature(java.lang.String)>("android.media.route.feature.LIVE_AUDIO");

        $r7 = virtualinvoke $r6.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder addFeature(java.lang.String)>("android.media.route.feature.LIVE_VIDEO");

        $r8 = virtualinvoke $r7.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder addFeature(java.lang.String)>("android.media.route.feature.LOCAL_PLAYBACK");

        $r9 = virtualinvoke $r8.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setConnectionState(int)>(2);

        $r10 = virtualinvoke $r9.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info build()>();

        r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.MediaRoute2Info mDeviceRoute> = $r10;

        specialinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void updateProviderState()>();

        return;
    }

    private void updateProviderState()
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        android.media.MediaRoute2ProviderInfo$Builder $r1;
        android.media.MediaRoute2Info $r2, $r10;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        java.util.List $r8;
        java.lang.Object $r9;
        com.android.server.media.BluetoothRouteProvider r13;
        java.util.Iterator r14;
        android.media.MediaRoute2ProviderInfo r15;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        $r1 = new android.media.MediaRoute2ProviderInfo$Builder;

        specialinvoke $r1.<android.media.MediaRoute2ProviderInfo$Builder: void <init>()>();

        $r2 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.MediaRoute2Info mDeviceRoute>;

        virtualinvoke $r1.<android.media.MediaRoute2ProviderInfo$Builder: android.media.MediaRoute2ProviderInfo$Builder addRoute(android.media.MediaRoute2Info)>($r2);

        r13 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.BluetoothRouteProvider mBtRouteProvider>;

        if r13 == null goto label2;

        $r8 = virtualinvoke r13.<com.android.server.media.BluetoothRouteProvider: java.util.List getAllBluetoothRoutes()>();

        r14 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.media.MediaRoute2Info) $r9;

        virtualinvoke $r1.<android.media.MediaRoute2ProviderInfo$Builder: android.media.MediaRoute2ProviderInfo$Builder addRoute(android.media.MediaRoute2Info)>($r10);

        goto label1;

     label2:
        r15 = virtualinvoke $r1.<android.media.MediaRoute2ProviderInfo$Builder: android.media.MediaRoute2ProviderInfo build()>();

        virtualinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void setProviderState(android.media.MediaRoute2ProviderInfo)>(r15);

        $z0 = <com.android.server.media.SystemMediaRoute2Provider: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating system provider info : ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MR2SystemProvider", $r7);

     label3:
        return;
    }

    public void deselectRoute(long, java.lang.String, java.lang.String)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        long l0;
        java.lang.String r1, r2;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return;
    }

    public android.media.MediaRoute2Info getDefaultRoute()
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        android.media.MediaRoute2Info $r1;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        $r1 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.MediaRoute2Info mDefaultRoute>;

        return $r1;
    }

    public android.media.RoutingSessionInfo getDefaultSessionInfo()
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        android.media.RoutingSessionInfo $r1;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        $r1 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.RoutingSessionInfo mDefaultSessionInfo>;

        return $r1;
    }

    public void lambda$new$0$SystemMediaRoute2Provider(java.util.List)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        java.util.List r1;
        boolean $z0;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void publishProviderState()>();

        $z0 = virtualinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: boolean updateSessionInfosIfNeeded()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void notifySessionInfoUpdated()>();

     label1:
        return;
    }

    public void lambda$new$1$SystemMediaRoute2Provider()
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        com.android.server.media.BluetoothRouteProvider $r1;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        $r1 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.BluetoothRouteProvider mBtRouteProvider>;

        virtualinvoke $r1.<com.android.server.media.BluetoothRouteProvider: void start()>();

        virtualinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void notifyProviderState()>();

        return;
    }

    void notifySessionInfoUpdated()
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        java.lang.Object r1, $r4;
        com.android.server.media.MediaRoute2Provider$Callback $r2, $r5;
        java.util.List $r3;
        java.lang.Throwable $r6;
        android.media.RoutingSessionInfo r7;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        $r2 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.MediaRoute2Provider$Callback mCallback>;

        if $r2 != null goto label1;

        return;

     label1:
        r1 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        $r3 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.util.List mSessionInfos>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        r7 = (android.media.RoutingSessionInfo) $r4;

        exitmonitor r1;

     label3:
        $r5 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.MediaRoute2Provider$Callback mCallback>;

        interfaceinvoke $r5.<com.android.server.media.MediaRoute2Provider$Callback: void onSessionUpdated(com.android.server.media.MediaRoute2Provider,android.media.RoutingSessionInfo)>(r0, r7);

        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void prepareReleaseSession(java.lang.String)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        java.lang.String r1;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        r1 := @parameter0: java.lang.String;

        return;
    }

    void publishProviderState()
    {
        com.android.server.media.SystemMediaRoute2Provider r0;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        specialinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void updateProviderState()>();

        virtualinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void notifyProviderState()>();

        return;
    }

    public void releaseSession(long, java.lang.String)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        long l0;
        java.lang.String r1;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public void requestCreateSession(long, java.lang.String, java.lang.String, android.os.Bundle)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        long l0, $l1;
        boolean $z0, $z1;
        java.lang.String $r1, r12, r13;
        com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest $r2, $r3, r16;
        com.android.server.media.MediaRoute2Provider$Callback $r4, $r6, $r10;
        java.util.List $r5;
        java.lang.Object $r7, r15;
        android.media.RoutingSessionInfo $r8, $r9;
        java.lang.Throwable $r11;
        android.os.Bundle r14;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        l0 := @parameter0: long;

        r12 := @parameter1: java.lang.String;

        r13 := @parameter2: java.lang.String;

        r14 := @parameter3: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r13, "DEFAULT_ROUTE");

        if $z0 == 0 goto label1;

        $r10 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.MediaRoute2Provider$Callback mCallback>;

        $r9 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.RoutingSessionInfo mDefaultSessionInfo>;

        interfaceinvoke $r10.<com.android.server.media.MediaRoute2Provider$Callback: void onSessionCreated(com.android.server.media.MediaRoute2Provider,long,android.media.RoutingSessionInfo)>(r0, l0, $r9);

        return;

     label1:
        $r1 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.lang.String mSelectedRouteId>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r13, $r1);

        if $z1 == 0 goto label2;

        $r6 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.MediaRoute2Provider$Callback mCallback>;

        $r5 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.util.List mSessionInfos>;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (android.media.RoutingSessionInfo) $r7;

        interfaceinvoke $r6.<com.android.server.media.MediaRoute2Provider$Callback: void onSessionCreated(com.android.server.media.MediaRoute2Provider,long,android.media.RoutingSessionInfo)>(r0, l0, $r8);

        return;

     label2:
        r15 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.lang.Object mRequestLock>;

        entermonitor r15;

     label3:
        $r2 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest mPendingSessionCreationRequest>;

        if $r2 == null goto label4;

        $r4 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.MediaRoute2Provider$Callback mCallback>;

        $r3 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest mPendingSessionCreationRequest>;

        $l1 = $r3.<com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest: long mRequestId>;

        interfaceinvoke $r4.<com.android.server.media.MediaRoute2Provider$Callback: void onRequestFailed(com.android.server.media.MediaRoute2Provider,long,int)>(r0, $l1, 0);

     label4:
        r16 = new com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest;

        specialinvoke r16.<com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest: void <init>(long,java.lang.String)>(l0, r13);

        r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest mPendingSessionCreationRequest> = r16;

        exitmonitor r15;

     label5:
        virtualinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void transferToRoute(long,java.lang.String,java.lang.String)>(l0, "SYSTEM_SESSION", r13);

        return;

     label6:
        $r11 := @caughtexception;

     label7:
        exitmonitor r15;

     label8:
        throw $r11;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void selectRoute(long, java.lang.String, java.lang.String)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        long l0;
        java.lang.String r1, r2;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return;
    }

    public void setCallback(com.android.server.media.MediaRoute2Provider$Callback)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        com.android.server.media.MediaRoute2Provider$Callback r1;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        r1 := @parameter0: com.android.server.media.MediaRoute2Provider$Callback;

        specialinvoke r0.<com.android.server.media.MediaRoute2Provider: void setCallback(com.android.server.media.MediaRoute2Provider$Callback)>(r1);

        virtualinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void notifyProviderState()>();

        virtualinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void notifySessionInfoUpdated()>();

        return;
    }

    public void setRouteVolume(long, java.lang.String, int)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        long l0;
        java.lang.String r1, $r2;
        int i1;
        boolean $z0;
        android.media.AudioManager $r3;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.lang.String mSelectedRouteId>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, $r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.AudioManager mAudioManager>;

        virtualinvoke $r3.<android.media.AudioManager: void setStreamVolume(int,int,int)>(3, i1, 0);

        return;
    }

    public void setSessionVolume(long, java.lang.String, int)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        long l0;
        java.lang.String r1;
        int i1;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        return;
    }

    public void transferToRoute(long, java.lang.String, java.lang.String)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        long l0;
        java.lang.String r1, r2, $r5;
        boolean $z0, $z1;
        com.android.server.media.BluetoothRouteProvider $r3, $r6, $r7;
        android.media.MediaRoute2Info $r4;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r2, "DEFAULT_ROUTE");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.BluetoothRouteProvider mBtRouteProvider>;

        if $r3 == null goto label3;

        $r4 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.MediaRoute2Info mDeviceRoute>;

        $r5 = virtualinvoke $r4.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r2, $r5);

        if $z1 == 0 goto label2;

        $r7 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.BluetoothRouteProvider mBtRouteProvider>;

        virtualinvoke $r7.<com.android.server.media.BluetoothRouteProvider: void transferTo(java.lang.String)>(null);

        goto label3;

     label2:
        $r6 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.BluetoothRouteProvider mBtRouteProvider>;

        virtualinvoke $r6.<com.android.server.media.BluetoothRouteProvider: void transferTo(java.lang.String)>(r2);

     label3:
        return;
    }

    public void updateDiscoveryPreference(android.media.RouteDiscoveryPreference)
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        android.media.RouteDiscoveryPreference r1;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        r1 := @parameter0: android.media.RouteDiscoveryPreference;

        return;
    }

    boolean updateSessionInfosIfNeeded()
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        java.lang.Object r1, $r5, $r27, r52;
        android.media.RoutingSessionInfo$Builder r2, $r9, $r14, $r15, $r16, r38, r56;
        java.util.List $r3, $r4, $r11, $r12, $r26;
        boolean $z0, $z1, $z3, $z4, $z5;
        com.android.server.media.BluetoothRouteProvider $r6, $r25, $r31, $r49;
        java.lang.String $r8, $r13, $r20, $r21, $r22, $r29, $r33, $r42, $r45, $r48;
        com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest $r10, r53;
        android.media.RoutingSessionInfo $r17, r37, r51;
        long $l1, $l2;
        com.android.server.media.MediaRoute2Provider$Callback $r23, $r24;
        android.media.MediaRoute2Info $r28, $r32, r39, r40, r41, $r47;
        java.lang.Throwable $r35, $r36;
        android.media.MediaRoute2Info$Builder r43, $r44, $r46;
        java.util.Iterator r50;
        java.lang.StringBuilder r55;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        r1 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.util.List mSessionInfos>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label03;

     label02:
        r37 = null;

        goto label04;

     label03:
        $r4 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.util.List mSessionInfos>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r37 = (android.media.RoutingSessionInfo) $r5;

     label04:
        r38 = new android.media.RoutingSessionInfo$Builder;

        specialinvoke r38.<android.media.RoutingSessionInfo$Builder: void <init>(java.lang.String,java.lang.String)>("SYSTEM_SESSION", "");

        r2 = virtualinvoke r38.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setSystemSession(boolean)>(1);

        r39 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.MediaRoute2Info mDeviceRoute>;

     label05:
        r40 = r39;

     label06:
        $r6 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.BluetoothRouteProvider mBtRouteProvider>;

        if $r6 == null goto label09;

        $r31 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.BluetoothRouteProvider mBtRouteProvider>;

        r41 = virtualinvoke $r31.<com.android.server.media.BluetoothRouteProvider: android.media.MediaRoute2Info getSelectedRoute()>();

     label07:
        r40 = r39;

        if r41 == null goto label09;

        r40 = r41;

     label08:
        $r32 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.MediaRoute2Info mDeviceRoute>;

        $r33 = virtualinvoke $r32.<android.media.MediaRoute2Info: java.lang.String getId()>();

        virtualinvoke r2.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addTransferableRoute(java.lang.String)>($r33);

     label09:
        $r42 = virtualinvoke r40.<android.media.MediaRoute2Info: java.lang.String getId()>();

        r0.<com.android.server.media.SystemMediaRoute2Provider: java.lang.String mSelectedRouteId> = $r42;

        r43 = new android.media.MediaRoute2Info$Builder;

        specialinvoke r43.<android.media.MediaRoute2Info$Builder: void <init>(java.lang.String,android.media.MediaRoute2Info)>("DEFAULT_ROUTE", r40);

        $r44 = virtualinvoke r43.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setSystemRoute(boolean)>(1);

        $r45 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.lang.String mUniqueId>;

        $r46 = virtualinvoke $r44.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setProviderId(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info build()>();

        r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.MediaRoute2Info mDefaultRoute> = $r47;

        $r48 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.lang.String mSelectedRouteId>;

        virtualinvoke r2.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addSelectedRoute(java.lang.String)>($r48);

        $r49 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.BluetoothRouteProvider mBtRouteProvider>;

        if $r49 == null goto label12;

        $r25 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.BluetoothRouteProvider mBtRouteProvider>;

        $r26 = virtualinvoke $r25.<com.android.server.media.BluetoothRouteProvider: java.util.List getTransferableRoutes()>();

        r50 = interfaceinvoke $r26.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z4 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r27 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        $r28 = (android.media.MediaRoute2Info) $r27;

        $r29 = virtualinvoke $r28.<android.media.MediaRoute2Info: java.lang.String getId()>();

        virtualinvoke r2.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addTransferableRoute(java.lang.String)>($r29);

     label11:
        goto label10;

     label12:
        $r8 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.lang.String mUniqueId>;

        $r9 = virtualinvoke r2.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setProviderId(java.lang.String)>($r8);

        r51 = virtualinvoke $r9.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo build()>();

        $r10 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest mPendingSessionCreationRequest>;

        if $r10 == null goto label22;

        r52 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.lang.Object mRequestLock>;

        entermonitor r52;

     label13:
        r53 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest mPendingSessionCreationRequest>;

        r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest mPendingSessionCreationRequest> = null;

        exitmonitor r52;

     label14:
        if r53 == null goto label22;

     label15:
        $r22 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.lang.String mSelectedRouteId>;

        $r21 = r53.<com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest: java.lang.String mRouteId>;

        $z3 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r22, $r21);

        if $z3 == 0 goto label17;

        $r24 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.MediaRoute2Provider$Callback mCallback>;

        $l2 = r53.<com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest: long mRequestId>;

        interfaceinvoke $r24.<com.android.server.media.MediaRoute2Provider$Callback: void onSessionCreated(com.android.server.media.MediaRoute2Provider,long,android.media.RoutingSessionInfo)>(r0, $l2, r51);

     label16:
        goto label22;

     label17:
        $r23 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.MediaRoute2Provider$Callback mCallback>;

        $l1 = r53.<com.android.server.media.SystemMediaRoute2Provider$SessionCreationRequest: long mRequestId>;

        interfaceinvoke $r23.<com.android.server.media.MediaRoute2Provider$Callback: void onRequestFailed(com.android.server.media.MediaRoute2Provider,long,int)>(r0, $l1, 0);

     label18:
        goto label22;

     label19:
        $r35 := @caughtexception;

     label20:
        exitmonitor r52;

     label21:
        throw $r35;

     label22:
        $z5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r37, r51);

        if $z5 == 0 goto label24;

        exitmonitor r1;

     label23:
        return 0;

     label24:
        $z1 = <com.android.server.media.SystemMediaRoute2Provider: boolean DEBUG>;

        if $z1 == 0 goto label25;

        r55 = new java.lang.StringBuilder;

        specialinvoke r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating system routing session info : ");

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51);

        $r20 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MR2SystemProvider", $r20);

     label25:
        $r11 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.util.List mSessionInfos>;

        interfaceinvoke $r11.<java.util.List: void clear()>();

        $r12 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.util.List mSessionInfos>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r51);

        r56 = new android.media.RoutingSessionInfo$Builder;

        specialinvoke r56.<android.media.RoutingSessionInfo$Builder: void <init>(java.lang.String,java.lang.String)>("SYSTEM_SESSION", "");

        $r13 = r0.<com.android.server.media.SystemMediaRoute2Provider: java.lang.String mUniqueId>;

        $r14 = virtualinvoke r56.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setProviderId(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setSystemSession(boolean)>(1);

        $r16 = virtualinvoke $r15.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addSelectedRoute(java.lang.String)>("DEFAULT_ROUTE");

        $r17 = virtualinvoke $r16.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo build()>();

        r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.RoutingSessionInfo mDefaultSessionInfo> = $r17;

        exitmonitor r1;

     label26:
        return 1;

     label27:
        $r36 := @caughtexception;

     label28:
        exitmonitor r1;

     label29:
        throw $r36;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.lang.Throwable from label08 to label09 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label10 to label11 with label27;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label27;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label21 to label22 with label27;
        catch java.lang.Throwable from label22 to label23 with label27;
        catch java.lang.Throwable from label24 to label25 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    void updateVolume()
    {
        com.android.server.media.SystemMediaRoute2Provider r0;
        int i0, i1, $i2, $i3;
        com.android.server.media.BluetoothRouteProvider r1;
        android.media.AudioManager $r2, $r3;
        android.media.MediaRoute2Info $r4, $r6, $r8, $r10, $r12;
        android.media.MediaRoute2Info$Builder $r5, $r7, $r9, $r11;
        boolean $z0;

        r0 := @this: com.android.server.media.SystemMediaRoute2Provider;

        $r2 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.AudioManager mAudioManager>;

        i0 = virtualinvoke $r2.<android.media.AudioManager: int getDevicesForStream(int)>(3);

        $r3 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.AudioManager mAudioManager>;

        i1 = virtualinvoke $r3.<android.media.AudioManager: int getStreamVolume(int)>(3);

        $r4 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.MediaRoute2Info mDefaultRoute>;

        $i2 = virtualinvoke $r4.<android.media.MediaRoute2Info: int getVolume()>();

        if $i2 == i1 goto label1;

        $r9 = new android.media.MediaRoute2Info$Builder;

        $r10 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.MediaRoute2Info mDefaultRoute>;

        specialinvoke $r9.<android.media.MediaRoute2Info$Builder: void <init>(android.media.MediaRoute2Info)>($r10);

        $r11 = virtualinvoke $r9.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setVolume(int)>(i1);

        $r12 = virtualinvoke $r11.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info build()>();

        r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.MediaRoute2Info mDefaultRoute> = $r12;

     label1:
        r1 = r0.<com.android.server.media.SystemMediaRoute2Provider: com.android.server.media.BluetoothRouteProvider mBtRouteProvider>;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<com.android.server.media.BluetoothRouteProvider: boolean updateVolumeForDevices(int,int)>(i0, i1);

        if $z0 == 0 goto label2;

        return;

     label2:
        $i3 = r0.<com.android.server.media.SystemMediaRoute2Provider: int mDeviceVolume>;

        if $i3 == i1 goto label3;

        r0.<com.android.server.media.SystemMediaRoute2Provider: int mDeviceVolume> = i1;

        $r5 = new android.media.MediaRoute2Info$Builder;

        $r6 = r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.MediaRoute2Info mDeviceRoute>;

        specialinvoke $r5.<android.media.MediaRoute2Info$Builder: void <init>(android.media.MediaRoute2Info)>($r6);

        $r7 = virtualinvoke $r5.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder setVolume(int)>(i1);

        $r8 = virtualinvoke $r7.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info build()>();

        r0.<com.android.server.media.SystemMediaRoute2Provider: android.media.MediaRoute2Info mDeviceRoute> = $r8;

     label3:
        virtualinvoke r0.<com.android.server.media.SystemMediaRoute2Provider: void publishProviderState()>();

        return;
    }
}
