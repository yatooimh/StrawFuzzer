final class com.android.server.media.projection.MediaProjectionManagerService$MediaProjection extends android.media.projection.IMediaProjection$Stub
{
    private android.media.projection.IMediaProjectionCallback mCallback;
    private android.os.IBinder$DeathRecipient mDeathEater;
    private final boolean mIsPrivileged;
    private boolean mRestoreSystemAlertWindow;
    private final int mTargetSdkVersion;
    private android.os.IBinder mToken;
    private final int mType;
    public final java.lang.String packageName;
    final com.android.server.media.projection.MediaProjectionManagerService this$0;
    public final int uid;
    public final android.os.UserHandle userHandle;

    void <init>(com.android.server.media.projection.MediaProjectionManagerService, int, int, java.lang.String, int, boolean)
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        com.android.server.media.projection.MediaProjectionManagerService r1;
        int i0, i1, i2, $i3;
        java.lang.String r2;
        boolean z0;
        android.os.UserHandle $r3;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        r1 := @parameter0: com.android.server.media.projection.MediaProjectionManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0> = r1;

        specialinvoke r0.<android.media.projection.IMediaProjection$Stub: void <init>()>();

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType> = i0;

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int uid> = i1;

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: java.lang.String packageName> = r2;

        $r3 = new android.os.UserHandle;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        specialinvoke $r3.<android.os.UserHandle: void <init>(int)>($i3);

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.UserHandle userHandle> = $r3;

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mTargetSdkVersion> = i2;

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: boolean mIsPrivileged> = z0;

        return;
    }

    public int applyVirtualDisplayFlags(int)
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.RuntimeException $r1;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        i0 := @parameter0: int;

        i1 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType>;

        if i1 != 0 goto label1;

        $i6 = i0 & -9;

        $i7 = $i6 | 18;

        return $i7;

     label1:
        if i1 != 1 goto label2;

        $i4 = i0 & -18;

        $i5 = $i4 | 10;

        return $i5;

     label2:
        if i1 != 2 goto label3;

        $i2 = i0 & -9;

        $i3 = $i2 | 19;

        return $i3;

     label3:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unknown MediaProjection type");

        throw $r1;
    }

    public boolean canProjectAudio()
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        int i0;
        boolean z1;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        i0 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType>;

        z1 = 1;

        if i0 == 1 goto label2;

        z1 = 1;

        if i0 == 2 goto label2;

        if i0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean canProjectSecureVideo()
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        return 0;
    }

    public boolean canProjectVideo()
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        int i0;
        boolean z1;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        i0 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType>;

        z1 = 1;

        if i0 == 1 goto label2;

        if i0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r10, $r12;
        int $i0, $i1;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        r1 := @parameter0: java.io.PrintWriter;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r5 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: java.lang.String packageName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int uid>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $i1 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType>;

        $r10 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: java.lang.String access$1700(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return;
    }

    public android.media.projection.MediaProjectionInfo getProjectionInfo()
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        android.media.projection.MediaProjectionInfo $r1;
        android.os.UserHandle $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        $r1 = new android.media.projection.MediaProjectionInfo;

        $r3 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: java.lang.String packageName>;

        $r2 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.UserHandle userHandle>;

        specialinvoke $r1.<android.media.projection.MediaProjectionInfo: void <init>(java.lang.String,android.os.UserHandle)>($r3, $r2);

        return $r1;
    }

    public void registerCallback(android.media.projection.IMediaProjectionCallback)
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        android.media.projection.IMediaProjectionCallback r1;
        java.lang.IllegalArgumentException $r2;
        com.android.server.media.projection.MediaProjectionManagerService $r3;
        com.android.server.media.projection.MediaProjectionManagerService$CallbackDelegate $r4;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        r1 := @parameter0: android.media.projection.IMediaProjectionCallback;

        if r1 == null goto label1;

        $r3 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r4 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: com.android.server.media.projection.MediaProjectionManagerService$CallbackDelegate access$1400(com.android.server.media.projection.MediaProjectionManagerService)>($r3);

        virtualinvoke $r4.<com.android.server.media.projection.MediaProjectionManagerService$CallbackDelegate: void add(android.media.projection.IMediaProjectionCallback)>(r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback must not be null");

        throw $r2;
    }

    boolean requiresForegroundService()
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        int $i0;
        boolean $z0, z1;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        $i0 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mTargetSdkVersion>;

        if $i0 < 29 goto label1;

        $z0 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: boolean mIsPrivileged>;

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void start(android.media.projection.IMediaProjectionCallback)
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        java.lang.Object r1;
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection$1 r2;
        long l0;
        java.lang.IllegalArgumentException $r3;
        com.android.server.media.projection.MediaProjectionManagerService $r4, $r5, $r9, $r10, $r15, $r18, $r21;
        android.os.IBinder $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.content.pm.PackageManager $r11;
        java.lang.String $r12, $r17, $r20, $r26;
        android.content.pm.PackageInfo $r13;
        java.lang.String[] $r14;
        android.app.AppOpsManager $r16, $r19;
        android.app.ActivityManagerInternal $r22;
        java.lang.Throwable $r27, $r28;
        android.os.RemoteException $r29;
        android.content.pm.PackageManager$NameNotFoundException $r30;
        android.media.projection.IMediaProjectionCallback r31;
        java.lang.StringBuilder r32;
        java.lang.SecurityException r33;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        r31 := @parameter0: android.media.projection.IMediaProjectionCallback;

        if r31 == null goto label27;

        $r4 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        r1 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: java.lang.Object access$1200(com.android.server.media.projection.MediaProjectionManagerService)>($r4);

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r6 = virtualinvoke r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder asBinder()>();

        $z0 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: boolean access$700(com.android.server.media.projection.MediaProjectionManagerService,android.os.IBinder)>($r5, $r6);

        if $z0 == 0 goto label03;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UID ");

        $i8 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attempted to start already started MediaProjection");

        $r26 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("MediaProjectionManagerService", $r26);

        exitmonitor r1;

     label02:
        return;

     label03:
        $z1 = virtualinvoke r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: boolean requiresForegroundService()>();

        if $z1 == 0 goto label06;

        $r21 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r22 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: android.app.ActivityManagerInternal access$1300(com.android.server.media.projection.MediaProjectionManagerService)>($r21);

        $i7 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int uid>;

        $z3 = virtualinvoke $r22.<android.app.ActivityManagerInternal: boolean hasRunningForegroundService(int,int)>($i7, 32);

        if $z3 == 0 goto label05;

     label04:
        goto label06;

     label05:
        r33 = new java.lang.SecurityException;

        specialinvoke r33.<java.lang.SecurityException: void <init>(java.lang.String)>("Media projections require a foreground service of type ServiceInfo.FOREGROUND_SERVICE_TYPE_MEDIA_PROJECTION");

        throw r33;

     label06:
        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.media.projection.IMediaProjectionCallback mCallback> = r31;

        virtualinvoke r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: void registerCallback(android.media.projection.IMediaProjectionCallback)>(r31);

     label07:
        $r7 = interfaceinvoke r31.<android.media.projection.IMediaProjectionCallback: android.os.IBinder asBinder()>();

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder mToken> = $r7;

        r2 = new com.android.server.media.projection.MediaProjectionManagerService$MediaProjection$1;

        specialinvoke r2.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection$1: void <init>(com.android.server.media.projection.MediaProjectionManagerService$MediaProjection,android.media.projection.IMediaProjectionCallback)>(r0, r31);

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder$DeathRecipient mDeathEater> = r2;

        $r8 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder mToken>;

        interfaceinvoke $r8.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r2, 0);

     label08:
        $i1 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType>;

        if $i1 != 0 goto label19;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label09:
        $r10 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r11 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: android.content.pm.PackageManager access$600(com.android.server.media.projection.MediaProjectionManagerService)>($r10);

        $r12 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: java.lang.String packageName>;

        $i2 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int uid>;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        $r13 = virtualinvoke $r11.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)>($r12, 4096, $i3);

        $r14 = $r13.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>($r14, "android.permission.SYSTEM_ALERT_WINDOW");

        if $z2 == 0 goto label10;

        $r15 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r16 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: android.app.AppOpsManager access$400(com.android.server.media.projection.MediaProjectionManagerService)>($r15);

        $i4 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int uid>;

        $r17 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: java.lang.String packageName>;

        $i5 = virtualinvoke $r16.<android.app.AppOpsManager: int unsafeCheckOpRawNoThrow(int,int,java.lang.String)>(24, $i4, $r17);

        if $i5 != 3 goto label10;

        $r18 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r19 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: android.app.AppOpsManager access$400(com.android.server.media.projection.MediaProjectionManagerService)>($r18);

        $i6 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int uid>;

        $r20 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: java.lang.String packageName>;

        virtualinvoke $r19.<android.app.AppOpsManager: void setMode(int,int,java.lang.String,int)>(24, $i6, $r20, 0);

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: boolean mRestoreSystemAlertWindow> = 1;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label11:
        goto label19;

     label12:
        $r28 := @caughtexception;

        goto label17;

     label13:
        $r30 := @caughtexception;

     label14:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaProjectionManagerService", "Package not found, aborting MediaProjection", $r30);

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r1;

     label16:
        return;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label18:
        throw $r28;

     label19:
        $r9 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: void access$1500(com.android.server.media.projection.MediaProjectionManagerService,com.android.server.media.projection.MediaProjectionManagerService$MediaProjection)>($r9, r0);

        exitmonitor r1;

     label20:
        return;

     label21:
        $r29 := @caughtexception;

     label22:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaProjectionManagerService", "MediaProjectionCallbacks must be valid, aborting MediaProjection", $r29);

        exitmonitor r1;

     label23:
        return;

     label24:
        $r27 := @caughtexception;

     label25:
        exitmonitor r1;

     label26:
        throw $r27;

     label27:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback must not be null");

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label05 to label06 with label24;
        catch java.lang.Throwable from label06 to label07 with label24;
        catch android.os.RemoteException from label07 to label08 with label21;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label13;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label24;
        catch java.lang.Throwable from label14 to label15 with label12;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    public void stop()
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        java.lang.Object r1;
        long l0;
        com.android.server.media.projection.MediaProjectionManagerService $r2, $r3, $r5, $r9, $r12;
        android.os.IBinder $r4, $r7;
        boolean $z0, $z1;
        android.os.IBinder$DeathRecipient $r6;
        android.media.projection.IMediaProjectionCallback $r8;
        android.app.AppOpsManager $r10, $r13;
        java.lang.String $r11, $r14, $r20;
        int $i1, $i2, $i3, $i4, $i5;
        java.lang.Throwable $r21, $r22;
        java.lang.StringBuilder r23;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        $r2 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        r1 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: java.lang.Object access$1200(com.android.server.media.projection.MediaProjectionManagerService)>($r2);

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r4 = virtualinvoke r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder asBinder()>();

        $z0 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: boolean access$700(com.android.server.media.projection.MediaProjectionManagerService,android.os.IBinder)>($r3, $r4);

        if $z0 != 0 goto label03;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to stop inactive MediaProjection (uid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("MediaProjectionManagerService", $r20);

        exitmonitor r1;

     label02:
        return;

     label03:
        $z1 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: boolean mRestoreSystemAlertWindow>;

        if $z1 == 0 goto label11;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r9 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r10 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: android.app.AppOpsManager access$400(com.android.server.media.projection.MediaProjectionManagerService)>($r9);

        $i1 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int uid>;

        $r11 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: java.lang.String packageName>;

        $i2 = virtualinvoke $r10.<android.app.AppOpsManager: int unsafeCheckOpRawNoThrow(int,int,java.lang.String)>(24, $i1, $r11);

        if $i2 != 0 goto label05;

        $r12 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r13 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: android.app.AppOpsManager access$400(com.android.server.media.projection.MediaProjectionManagerService)>($r12);

        $i3 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int uid>;

        $r14 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: java.lang.String packageName>;

        virtualinvoke $r13.<android.app.AppOpsManager: void setMode(int,int,java.lang.String,int)>(24, $i3, $r14, 3);

     label05:
        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: boolean mRestoreSystemAlertWindow> = 0;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label07:
        goto label11;

     label08:
        $r21 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label10:
        throw $r21;

     label11:
        $r5 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: void access$1600(com.android.server.media.projection.MediaProjectionManagerService,com.android.server.media.projection.MediaProjectionManagerService$MediaProjection)>($r5, r0);

        $r7 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder mToken>;

        $r6 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder$DeathRecipient mDeathEater>;

        interfaceinvoke $r7.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r6, 0);

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder mToken> = null;

        $r8 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.media.projection.IMediaProjectionCallback mCallback>;

        virtualinvoke r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: void unregisterCallback(android.media.projection.IMediaProjectionCallback)>($r8);

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.media.projection.IMediaProjectionCallback mCallback> = null;

        exitmonitor r1;

     label12:
        return;

     label13:
        $r22 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void unregisterCallback(android.media.projection.IMediaProjectionCallback)
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        android.media.projection.IMediaProjectionCallback r1;
        java.lang.IllegalArgumentException $r2;
        com.android.server.media.projection.MediaProjectionManagerService $r3;
        com.android.server.media.projection.MediaProjectionManagerService$CallbackDelegate $r4;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        r1 := @parameter0: android.media.projection.IMediaProjectionCallback;

        if r1 == null goto label1;

        $r3 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r4 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: com.android.server.media.projection.MediaProjectionManagerService$CallbackDelegate access$1400(com.android.server.media.projection.MediaProjectionManagerService)>($r3);

        virtualinvoke $r4.<com.android.server.media.projection.MediaProjectionManagerService$CallbackDelegate: void remove(android.media.projection.IMediaProjectionCallback)>(r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback must not be null");

        throw $r2;
    }
}
