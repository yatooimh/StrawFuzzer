public class com.android.server.midi.MidiService$Lifecycle extends com.android.server.SystemService
{
    private com.android.server.midi.MidiService mMidiService;

    public void <init>(android.content.Context)
    {
        com.android.server.midi.MidiService$Lifecycle r0;
        android.content.Context r1;

        r0 := @this: com.android.server.midi.MidiService$Lifecycle;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        return;
    }

    public void onStart()
    {
        com.android.server.midi.MidiService$Lifecycle r0;
        com.android.server.midi.MidiService $r2;
        android.content.Context $r3;

        r0 := @this: com.android.server.midi.MidiService$Lifecycle;

        $r2 = new com.android.server.midi.MidiService;

        $r3 = virtualinvoke r0.<com.android.server.midi.MidiService$Lifecycle: android.content.Context getContext()>();

        specialinvoke $r2.<com.android.server.midi.MidiService: void <init>(android.content.Context)>($r3);

        r0.<com.android.server.midi.MidiService$Lifecycle: com.android.server.midi.MidiService mMidiService> = $r2;

        virtualinvoke r0.<com.android.server.midi.MidiService$Lifecycle: void publishBinderService(java.lang.String,android.os.IBinder)>("midi", $r2);

        return;
    }

    public void onUnlockUser(int)
    {
        com.android.server.midi.MidiService$Lifecycle r0;
        int i0;
        com.android.server.midi.MidiService $r1;

        r0 := @this: com.android.server.midi.MidiService$Lifecycle;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r1 = r0.<com.android.server.midi.MidiService$Lifecycle: com.android.server.midi.MidiService mMidiService>;

        staticinvoke <com.android.server.midi.MidiService: void access$000(com.android.server.midi.MidiService)>($r1);

     label1:
        return;
    }
}
