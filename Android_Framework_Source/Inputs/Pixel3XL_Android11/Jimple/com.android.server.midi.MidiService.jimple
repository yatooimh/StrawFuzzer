public class com.android.server.midi.MidiService extends android.media.midi.IMidiManager$Stub
{
    private static final android.media.midi.MidiDeviceInfo[] EMPTY_DEVICE_INFO_ARRAY;
    private static final java.lang.String[] EMPTY_STRING_ARRAY;
    private static final java.lang.String TAG;
    private final java.util.HashMap mBluetoothDevices;
    private int mBluetoothServiceUid;
    private final java.util.HashMap mClients;
    private final android.content.Context mContext;
    private final java.util.HashMap mDevicesByInfo;
    private final java.util.HashMap mDevicesByServer;
    private int mNextDeviceId;
    private final android.content.pm.PackageManager mPackageManager;
    private final com.android.internal.content.PackageMonitor mPackageMonitor;

    static void <clinit>()
    {
        android.media.midi.MidiDeviceInfo[] $r0;
        java.lang.String[] $r1;

        <com.android.server.midi.MidiService: java.lang.String TAG> = "MidiService";

        $r0 = newarray (android.media.midi.MidiDeviceInfo)[0];

        <com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo[] EMPTY_DEVICE_INFO_ARRAY> = $r0;

        $r1 = newarray (java.lang.String)[0];

        <com.android.server.midi.MidiService: java.lang.String[] EMPTY_STRING_ARRAY> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.midi.MidiService r0;
        android.content.Context r1;
        java.util.HashMap $r2, $r3, $r4, $r5;
        com.android.server.midi.MidiService$1 $r6;
        android.content.pm.PackageManager $r7;

        r0 := @this: com.android.server.midi.MidiService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.media.midi.IMidiManager$Stub: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.midi.MidiService: java.util.HashMap mClients> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.midi.MidiService: java.util.HashMap mBluetoothDevices> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByServer> = $r5;

        r0.<com.android.server.midi.MidiService: int mNextDeviceId> = 1;

        $r6 = new com.android.server.midi.MidiService$1;

        specialinvoke $r6.<com.android.server.midi.MidiService$1: void <init>(com.android.server.midi.MidiService)>(r0);

        r0.<com.android.server.midi.MidiService: com.android.internal.content.PackageMonitor mPackageMonitor> = $r6;

        r0.<com.android.server.midi.MidiService: android.content.Context mContext> = r1;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.midi.MidiService: android.content.pm.PackageManager mPackageManager> = $r7;

        r0.<com.android.server.midi.MidiService: int mBluetoothServiceUid> = -1;

        return;
    }

    static void access$000(com.android.server.midi.MidiService)
    {
        com.android.server.midi.MidiService r0;

        r0 := @parameter0: com.android.server.midi.MidiService;

        specialinvoke r0.<com.android.server.midi.MidiService: void onUnlockUser()>();

        return;
    }

    static void access$100(com.android.server.midi.MidiService, java.lang.String)
    {
        com.android.server.midi.MidiService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.midi.MidiService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.midi.MidiService: void addPackageDeviceServers(java.lang.String)>(r1);

        return;
    }

    static java.util.HashMap access$1000(com.android.server.midi.MidiService)
    {
        com.android.server.midi.MidiService r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.midi.MidiService;

        $r1 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        return $r1;
    }

    static void access$1100(com.android.server.midi.MidiService, com.android.server.midi.MidiService$Device)
    {
        com.android.server.midi.MidiService r0;
        com.android.server.midi.MidiService$Device r1;

        r0 := @parameter0: com.android.server.midi.MidiService;

        r1 := @parameter1: com.android.server.midi.MidiService$Device;

        specialinvoke r0.<com.android.server.midi.MidiService: void removeDeviceLocked(com.android.server.midi.MidiService$Device)>(r1);

        return;
    }

    static java.util.HashMap access$1200(com.android.server.midi.MidiService)
    {
        com.android.server.midi.MidiService r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.midi.MidiService;

        $r1 = r0.<com.android.server.midi.MidiService: java.util.HashMap mBluetoothDevices>;

        return $r1;
    }

    static void access$200(com.android.server.midi.MidiService, java.lang.String)
    {
        com.android.server.midi.MidiService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.midi.MidiService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.midi.MidiService: void removePackageDeviceServers(java.lang.String)>(r1);

        return;
    }

    static java.util.HashMap access$300(com.android.server.midi.MidiService)
    {
        com.android.server.midi.MidiService r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.midi.MidiService;

        $r1 = r0.<com.android.server.midi.MidiService: java.util.HashMap mClients>;

        return $r1;
    }

    static int access$400(com.android.server.midi.MidiService)
    {
        com.android.server.midi.MidiService r0;
        int $i0;

        r0 := @parameter0: com.android.server.midi.MidiService;

        $i0 = r0.<com.android.server.midi.MidiService: int mBluetoothServiceUid>;

        return $i0;
    }

    static java.util.HashMap access$500(com.android.server.midi.MidiService)
    {
        com.android.server.midi.MidiService r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.midi.MidiService;

        $r1 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByServer>;

        return $r1;
    }

    static android.content.Context access$900(com.android.server.midi.MidiService)
    {
        com.android.server.midi.MidiService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.midi.MidiService;

        $r1 = r0.<com.android.server.midi.MidiService: android.content.Context mContext>;

        return $r1;
    }

    private android.media.midi.MidiDeviceInfo addDeviceLocked(int, int, int, java.lang.String[], java.lang.String[], android.os.Bundle, android.media.midi.IMidiDeviceServer, android.content.pm.ServiceInfo, boolean, int)
    {
        com.android.server.midi.MidiService r0;
        int i0, i1, i2, i3, i4, $i5;
        android.media.midi.IMidiDeviceServer r1;
        android.content.pm.ServiceInfo r2;
        boolean z0, $z1;
        android.media.midi.MidiDeviceInfo $r4;
        java.util.HashMap $r5, $r7, $r11, $r15, r25;
        java.util.Collection $r8;
        java.lang.Object $r9, $r16;
        com.android.server.midi.MidiService$Client $r10;
        com.android.server.midi.MidiService$Device $r13, r23;
        android.os.Parcelable $r14;
        java.lang.Throwable $r17;
        android.os.RemoteException $r18;
        java.lang.String[] r19, r20;
        android.os.Bundle r21;
        android.bluetooth.BluetoothDevice r24;
        java.util.Iterator r26;

        r0 := @this: com.android.server.midi.MidiService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r19 := @parameter3: java.lang.String[];

        r20 := @parameter4: java.lang.String[];

        r21 := @parameter5: android.os.Bundle;

        r1 := @parameter6: android.media.midi.IMidiDeviceServer;

        r2 := @parameter7: android.content.pm.ServiceInfo;

        z0 := @parameter8: boolean;

        i3 := @parameter9: int;

        i4 = r0.<com.android.server.midi.MidiService: int mNextDeviceId>;

        $i5 = i4 + 1;

        r0.<com.android.server.midi.MidiService: int mNextDeviceId> = $i5;

        $r4 = new android.media.midi.MidiDeviceInfo;

        specialinvoke $r4.<android.media.midi.MidiDeviceInfo: void <init>(int,int,int,int,java.lang.String[],java.lang.String[],android.os.Bundle,boolean)>(i0, i4, i1, i2, r19, r20, r21, z0);

        if r1 == null goto label04;

     label01:
        interfaceinvoke r1.<android.media.midi.IMidiDeviceServer: void setDeviceInfo(android.media.midi.MidiDeviceInfo)>($r4);

     label02:
        goto label04;

     label03:
        $r18 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MidiService", "RemoteException in setDeviceInfo()");

        return null;

     label04:
        r23 = null;

        if i0 != 3 goto label06;

        $r14 = virtualinvoke r21.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("bluetooth_device");

        r24 = (android.bluetooth.BluetoothDevice) $r14;

        $r15 = r0.<com.android.server.midi.MidiService: java.util.HashMap mBluetoothDevices>;

        $r16 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r24);

        r23 = (com.android.server.midi.MidiService$Device) $r16;

        if r23 == null goto label05;

        virtualinvoke r23.<com.android.server.midi.MidiService$Device: void setDeviceInfo(android.media.midi.MidiDeviceInfo)>($r4);

     label05:
        goto label07;

     label06:
        r24 = null;

     label07:
        if r23 != null goto label08;

        $r13 = new com.android.server.midi.MidiService$Device;

        specialinvoke $r13.<com.android.server.midi.MidiService$Device: void <init>(com.android.server.midi.MidiService,android.media.midi.IMidiDeviceServer,android.media.midi.MidiDeviceInfo,android.content.pm.ServiceInfo,int)>(r0, r1, $r4, r2, i3);

        r23 = $r13;

        goto label08;

     label08:
        $r5 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r23);

        if r24 == null goto label09;

        $r11 = r0.<com.android.server.midi.MidiService: java.util.HashMap mBluetoothDevices>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r24, r23);

     label09:
        r25 = r0.<com.android.server.midi.MidiService: java.util.HashMap mClients>;

        entermonitor r25;

     label10:
        $r7 = r0.<com.android.server.midi.MidiService: java.util.HashMap mClients>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        r26 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r9 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.android.server.midi.MidiService$Client) $r9;

        virtualinvoke $r10.<com.android.server.midi.MidiService$Client: void deviceAdded(com.android.server.midi.MidiService$Device)>(r23);

     label12:
        goto label11;

     label13:
        exitmonitor r25;

     label14:
        return $r4;

     label15:
        $r17 := @caughtexception;

     label16:
        exitmonitor r25;

     label17:
        throw $r17;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    private void addPackageDeviceServer(android.content.pm.ServiceInfo)
    {
        com.android.server.midi.MidiService r0;
        java.util.ArrayList r1, r48;
        java.lang.String[] r2, $r11, $r13, r63;
        android.content.pm.PackageManager $r3, $r9;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r35, $r36, $r40, $r41, r50, r53, r54, r56, r57, r59, r60;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9;
        android.content.pm.ApplicationInfo $r10;
        java.lang.Object[] $r12, $r14;
        java.lang.Throwable $r32, $r33, $r37, $r38, r66, r69;
        android.content.pm.PackageManager$NameNotFoundException $r34;
        java.lang.Exception $r39, $r42, r70;
        android.content.pm.ServiceInfo r43;
        android.content.res.XmlResourceParser r44, r45, r46;
        java.lang.StringBuilder r47, r51, r55, r58, r61, r68, r71;
        android.os.Bundle r49, r52;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12;
        java.util.HashMap r62, r65, r67;

        r0 := @this: com.android.server.midi.MidiService;

        r43 := @parameter0: android.content.pm.ServiceInfo;

        r44 = null;

        r45 = null;

     label01:
        $r3 = r0.<com.android.server.midi.MidiService: android.content.pm.PackageManager mPackageManager>;

        r46 = virtualinvoke r43.<android.content.pm.ServiceInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>($r3, "android.media.midi.MidiDeviceService");

     label02:
        if r46 != null goto label04;

        if r46 == null goto label03;

        interfaceinvoke r46.<android.content.res.XmlResourceParser: void close()>();

     label03:
        return;

     label04:
        $r5 = "android.permission.BIND_MIDI_DEVICE_SERVICE";

        $r4 = r43.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label07;

        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping MIDI device service ");

        $r30 = r43.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": it does not require the permission ");

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_MIDI_DEVICE_SERVICE");

        $r31 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MidiService", $r31);

     label05:
        if r46 == null goto label06;

        interfaceinvoke r46.<android.content.res.XmlResourceParser: void close()>();

     label06:
        return;

     label07:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        r48 = new java.util.ArrayList;

        specialinvoke r48.<java.util.ArrayList: void <init>()>();

     label08:
        r49 = null;

        i0 = 0;

        i1 = 0;

        z8 = 0;

     label09:
        i2 = interfaceinvoke r46.<android.content.res.XmlResourceParser: int next()>();

     label10:
        if i2 != 1 goto label11;

        if r46 == null goto label95;

        interfaceinvoke r46.<android.content.res.XmlResourceParser: void close()>();

        goto label95;

     label11:
        if i2 != 2 goto label54;

     label12:
        r50 = interfaceinvoke r46.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r17 = "device";

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r50);

        if $z2 == 0 goto label26;

     label13:
        if r49 == null goto label16;

     label14:
        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nested <device> elements in metadata for ");

        $r28 = r43.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r29 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MidiService", $r29);

     label15:
        goto label75;

     label16:
        r52 = new android.os.Bundle;

        specialinvoke r52.<android.os.Bundle: void <init>()>();

        virtualinvoke r52.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("service_info", r43);

     label17:
        i3 = 0;

     label18:
        i4 = interfaceinvoke r46.<android.content.res.XmlResourceParser: int getAttributeCount()>();

     label19:
        i5 = 0;

        z9 = 0;

     label20:
        if i5 >= i4 goto label25;

     label21:
        r53 = interfaceinvoke r46.<android.content.res.XmlResourceParser: java.lang.String getAttributeName(int)>(i5);

        r54 = interfaceinvoke r46.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(i5);

        $r26 = "private";

        $z7 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r53);

        if $z7 == 0 goto label23;

        $r27 = "true";

        z9 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r54);

     label22:
        goto label24;

     label23:
        virtualinvoke r52.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r53, r54);

     label24:
        i5 = i5 + 1;

        goto label20;

     label25:
        i6 = 0;

        goto label53;

     label26:
        $r18 = "input-port";

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r50);

        if $z3 == 0 goto label39;

     label27:
        if r49 != null goto label30;

     label28:
        r55 = new java.lang.StringBuilder;

        specialinvoke r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<input-port> outside of <device> in metadata for ");

        $r24 = r43.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r25 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MidiService", $r25);

     label29:
        goto label75;

     label30:
        i3 = i0 + 1;

     label31:
        i7 = interfaceinvoke r46.<android.content.res.XmlResourceParser: int getAttributeCount()>();

     label32:
        i8 = 0;

     label33:
        r56 = null;

        if i8 >= i7 goto label37;

     label34:
        r57 = interfaceinvoke r46.<android.content.res.XmlResourceParser: java.lang.String getAttributeName(int)>(i8);

        r56 = interfaceinvoke r46.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(i8);

        $r23 = "name";

        $z6 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r57);

        if $z6 == 0 goto label36;

     label35:
        goto label37;

     label36:
        i8 = i8 + 1;

        goto label33;

     label37:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r56);

     label38:
        r52 = r49;

        i6 = i1;

        z9 = z8;

        goto label53;

     label39:
        r52 = r49;

        i3 = i0;

        i6 = i1;

        z9 = z8;

     label40:
        $r19 = "output-port";

        $z4 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r50);

        if $z4 == 0 goto label53;

     label41:
        if r49 != null goto label44;

     label42:
        r58 = new java.lang.StringBuilder;

        specialinvoke r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<output-port> outside of <device> in metadata for ");

        $r21 = r43.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r22 = virtualinvoke r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MidiService", $r22);

     label43:
        goto label75;

     label44:
        i9 = i1 + 1;

     label45:
        i10 = interfaceinvoke r46.<android.content.res.XmlResourceParser: int getAttributeCount()>();

     label46:
        i11 = 0;

     label47:
        r59 = null;

        if i11 >= i10 goto label51;

     label48:
        r60 = interfaceinvoke r46.<android.content.res.XmlResourceParser: java.lang.String getAttributeName(int)>(i11);

        r59 = interfaceinvoke r46.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(i11);

        $r20 = "name";

        $z5 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r60);

        if $z5 == 0 goto label50;

     label49:
        goto label51;

     label50:
        i11 = i11 + 1;

        goto label47;

     label51:
        virtualinvoke r48.<java.util.ArrayList: boolean add(java.lang.Object)>(r59);

     label52:
        z9 = z8;

        i6 = i9;

        i3 = i0;

        r52 = r49;

     label53:
        r49 = r52;

        goto label79;

     label54:
        if i2 != 3 goto label78;

     label55:
        $r6 = "device";

        $r7 = interfaceinvoke r46.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label77;

     label56:
        if r49 == null goto label76;

        if i0 != 0 goto label59;

        if i1 != 0 goto label59;

     label57:
        r61 = new java.lang.StringBuilder;

        specialinvoke r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<device> with no ports in metadata for ");

        $r15 = r43.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MidiService", $r16);

     label58:
        goto label75;

     label59:
        $r9 = r0.<com.android.server.midi.MidiService: android.content.pm.PackageManager mPackageManager>;

        $r8 = r43.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r10 = virtualinvoke $r9.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r8, 0);

        i12 = $r10.<android.content.pm.ApplicationInfo: int uid>;

     label60:
        r62 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        entermonitor r62;

     label61:
        $r11 = <com.android.server.midi.MidiService: java.lang.String[] EMPTY_STRING_ARRAY>;

        $r12 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        r2 = (java.lang.String[]) $r12;

        $r13 = <com.android.server.midi.MidiService: java.lang.String[] EMPTY_STRING_ARRAY>;

        $r14 = virtualinvoke r48.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        r63 = (java.lang.String[]) $r14;

     label62:
        r65 = r62;

     label63:
        specialinvoke r0.<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo addDeviceLocked(int,int,int,java.lang.String[],java.lang.String[],android.os.Bundle,android.media.midi.IMidiDeviceServer,android.content.pm.ServiceInfo,boolean,int)>(2, i0, i1, r2, r63, r49, null, r43, z8, i12);

     label64:
        r65 = r62;

     label65:
        exitmonitor r62;

     label66:
        virtualinvoke r1.<java.util.ArrayList: void clear()>();

        virtualinvoke r48.<java.util.ArrayList: void clear()>();

     label67:
        r49 = null;

        i3 = i0;

        i6 = i1;

        z9 = z8;

        goto label79;

     label68:
        $r37 := @caughtexception;

        r66 = $r37;

        r67 = r62;

     label69:
        r65 = r67;

     label70:
        exitmonitor r67;

     label71:
        throw r66;

     label72:
        $r32 := @caughtexception;

        r66 = $r32;

        r67 = r65;

        goto label69;

     label73:
        $r34 := @caughtexception;

     label74:
        r68 = new java.lang.StringBuilder;

        specialinvoke r68.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not fetch ApplicationInfo for ");

        $r35 = r43.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r36 = virtualinvoke r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MidiService", $r36);

     label75:
        goto label09;

     label76:
        i3 = i0;

        i6 = i1;

        z9 = z8;

        goto label79;

     label77:
        i3 = i0;

        i6 = i1;

        z9 = z8;

        goto label79;

     label78:
        z9 = z8;

        i6 = i1;

        i3 = i0;

     label79:
        i0 = i3;

        i1 = i6;

        z8 = z9;

        goto label09;

     label80:
        $r38 := @caughtexception;

        r69 = $r38;

        r45 = r46;

        goto label96;

     label81:
        $r39 := @caughtexception;

        r70 = $r39;

        r44 = r46;

        goto label84;

     label82:
        $r33 := @caughtexception;

        r69 = $r33;

        goto label96;

     label83:
        $r42 := @caughtexception;

        r70 = $r42;

     label84:
        r45 = r44;

     label85:
        r71 = new java.lang.StringBuilder;

     label86:
        r45 = r44;

     label87:
        specialinvoke r71.<java.lang.StringBuilder: void <init>()>();

     label88:
        r45 = r44;

     label89:
        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load component info ");

     label90:
        r45 = r44;

     label91:
        $r40 = virtualinvoke r43.<android.content.pm.ServiceInfo: java.lang.String toString()>();

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

     label92:
        r45 = r44;

     label93:
        $r41 = virtualinvoke r71.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MidiService", $r41, r70);

     label94:
        if r44 == null goto label95;

        interfaceinvoke r44.<android.content.res.XmlResourceParser: void close()>();

     label95:
        return;

     label96:
        if r45 == null goto label97;

        interfaceinvoke r45.<android.content.res.XmlResourceParser: void close()>();

     label97:
        throw r69;

        catch java.lang.Exception from label01 to label02 with label83;
        catch java.lang.Throwable from label01 to label02 with label82;
        catch java.lang.Exception from label04 to label05 with label81;
        catch java.lang.Throwable from label04 to label05 with label80;
        catch java.lang.Exception from label07 to label08 with label81;
        catch java.lang.Throwable from label07 to label08 with label80;
        catch java.lang.Exception from label09 to label10 with label81;
        catch java.lang.Throwable from label09 to label10 with label80;
        catch java.lang.Exception from label12 to label13 with label81;
        catch java.lang.Throwable from label12 to label13 with label80;
        catch java.lang.Exception from label14 to label15 with label81;
        catch java.lang.Throwable from label14 to label15 with label80;
        catch java.lang.Exception from label16 to label17 with label81;
        catch java.lang.Throwable from label16 to label17 with label80;
        catch java.lang.Exception from label18 to label19 with label81;
        catch java.lang.Throwable from label18 to label19 with label80;
        catch java.lang.Exception from label21 to label22 with label81;
        catch java.lang.Throwable from label21 to label22 with label80;
        catch java.lang.Exception from label23 to label24 with label81;
        catch java.lang.Throwable from label23 to label24 with label80;
        catch java.lang.Exception from label26 to label27 with label81;
        catch java.lang.Throwable from label26 to label27 with label80;
        catch java.lang.Exception from label28 to label29 with label81;
        catch java.lang.Throwable from label28 to label29 with label80;
        catch java.lang.Exception from label31 to label32 with label81;
        catch java.lang.Throwable from label31 to label32 with label80;
        catch java.lang.Exception from label34 to label35 with label81;
        catch java.lang.Throwable from label34 to label35 with label80;
        catch java.lang.Exception from label37 to label38 with label81;
        catch java.lang.Throwable from label37 to label38 with label80;
        catch java.lang.Exception from label40 to label41 with label81;
        catch java.lang.Throwable from label40 to label41 with label80;
        catch java.lang.Exception from label42 to label43 with label81;
        catch java.lang.Throwable from label42 to label43 with label80;
        catch java.lang.Exception from label45 to label46 with label81;
        catch java.lang.Throwable from label45 to label46 with label80;
        catch java.lang.Exception from label48 to label49 with label81;
        catch java.lang.Throwable from label48 to label49 with label80;
        catch java.lang.Exception from label51 to label52 with label81;
        catch java.lang.Throwable from label51 to label52 with label80;
        catch java.lang.Exception from label55 to label56 with label81;
        catch java.lang.Throwable from label55 to label56 with label80;
        catch java.lang.Exception from label57 to label58 with label81;
        catch java.lang.Throwable from label57 to label58 with label80;
        catch android.content.pm.PackageManager$NameNotFoundException from label59 to label60 with label73;
        catch java.lang.Exception from label59 to label60 with label81;
        catch java.lang.Throwable from label59 to label60 with label80;
        catch java.lang.Exception from label60 to label61 with label81;
        catch java.lang.Throwable from label60 to label61 with label80;
        catch java.lang.Throwable from label61 to label62 with label68;
        catch java.lang.Throwable from label63 to label64 with label72;
        catch java.lang.Throwable from label65 to label66 with label72;
        catch java.lang.Exception from label66 to label67 with label81;
        catch java.lang.Throwable from label66 to label67 with label80;
        catch java.lang.Throwable from label70 to label71 with label72;
        catch java.lang.Exception from label71 to label72 with label81;
        catch java.lang.Throwable from label71 to label72 with label80;
        catch java.lang.Exception from label74 to label75 with label81;
        catch java.lang.Throwable from label74 to label75 with label80;
        catch java.lang.Throwable from label85 to label86 with label82;
        catch java.lang.Throwable from label87 to label88 with label82;
        catch java.lang.Throwable from label89 to label90 with label82;
        catch java.lang.Throwable from label91 to label92 with label82;
        catch java.lang.Throwable from label93 to label94 with label82;
    }

    private void addPackageDeviceServers(java.lang.String)
    {
        com.android.server.midi.MidiService r0;
        android.content.pm.PackageManager $r2;
        int $i0, i2;
        android.content.pm.ServiceInfo $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8, r9;
        android.content.pm.PackageInfo r10;
        android.content.pm.ServiceInfo[] r11;

        r0 := @this: com.android.server.midi.MidiService;

        r9 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<com.android.server.midi.MidiService: android.content.pm.PackageManager mPackageManager>;

        r10 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r9, 132);

     label2:
        r11 = r10.<android.content.pm.PackageInfo: android.content.pm.ServiceInfo[] services>;

        if r11 != null goto label3;

        return;

     label3:
        i2 = 0;

     label4:
        $i0 = lengthof r11;

        if i2 >= $i0 goto label5;

        $r3 = r11[i2];

        specialinvoke r0.<com.android.server.midi.MidiService: void addPackageDeviceServer(android.content.pm.ServiceInfo)>($r3);

        i2 = i2 + 1;

        goto label4;

     label5:
        return;

     label6:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePackageUpdate could not find package ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MidiService", $r8, $r4);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label6;
    }

    private com.android.server.midi.MidiService$Client getClient(android.os.IBinder)
    {
        com.android.server.midi.MidiService r0;
        java.util.HashMap r1, $r3, $r5;
        com.android.server.midi.MidiService$Client r2, r10;
        java.lang.Object $r4;
        android.os.RemoteException $r7;
        java.lang.Throwable $r8;
        android.os.IBinder r9;

        r0 := @this: com.android.server.midi.MidiService;

        r9 := @parameter0: android.os.IBinder;

        r1 = r0.<com.android.server.midi.MidiService: java.util.HashMap mClients>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.midi.MidiService: java.util.HashMap mClients>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9);

        r2 = (com.android.server.midi.MidiService$Client) $r4;

     label02:
        r10 = r2;

        if r2 != null goto label10;

     label03:
        r10 = new com.android.server.midi.MidiService$Client;

        specialinvoke r10.<com.android.server.midi.MidiService$Client: void <init>(com.android.server.midi.MidiService,android.os.IBinder)>(r0, r9);

     label04:
        interfaceinvoke r9.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r10, 0);

     label05:
        $r5 = r0.<com.android.server.midi.MidiService: java.util.HashMap mClients>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10);

     label06:
        goto label10;

     label07:
        $r7 := @caughtexception;

     label08:
        exitmonitor r1;

     label09:
        return null;

     label10:
        exitmonitor r1;

     label11:
        return r10;

     label12:
        $r8 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private void notifyDeviceStatusChanged(com.android.server.midi.MidiService$Device, android.media.midi.MidiDeviceStatus)
    {
        com.android.server.midi.MidiService r0;
        android.media.midi.MidiDeviceStatus r1;
        java.util.HashMap r2, $r4;
        java.util.Iterator r3;
        java.util.Collection $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.android.server.midi.MidiService$Client $r7;
        java.lang.Throwable $r8;
        com.android.server.midi.MidiService$Device r9;

        r0 := @this: com.android.server.midi.MidiService;

        r9 := @parameter0: com.android.server.midi.MidiService$Device;

        r1 := @parameter1: android.media.midi.MidiDeviceStatus;

        r2 = r0.<com.android.server.midi.MidiService: java.util.HashMap mClients>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.midi.MidiService: java.util.HashMap mClients>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.android.server.midi.MidiService$Client) $r6;

        virtualinvoke $r7.<com.android.server.midi.MidiService$Client: void deviceStatusChanged(com.android.server.midi.MidiService$Device,android.media.midi.MidiDeviceStatus)>(r9, r1);

     label3:
        goto label2;

     label4:
        exitmonitor r2;

     label5:
        return;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void onUnlockUser()
    {
        com.android.server.midi.MidiService r0;
        int i0, $i1, i2;
        android.content.pm.ServiceInfo r1;
        android.content.Context $r2;
        com.android.internal.content.PackageMonitor $r3;
        android.content.Intent $r4;
        android.content.pm.PackageManager $r5, $r6;
        android.content.pm.ApplicationInfo $r7, $r8;
        java.lang.Object $r9;
        android.content.pm.ResolveInfo $r10;
        android.content.pm.PackageManager$NameNotFoundException $r11;
        java.util.List r13;
        android.content.pm.PackageInfo r14;

        r0 := @this: com.android.server.midi.MidiService;

        $r3 = r0.<com.android.server.midi.MidiService: com.android.internal.content.PackageMonitor mPackageMonitor>;

        $r2 = r0.<com.android.server.midi.MidiService: android.content.Context mContext>;

        virtualinvoke $r3.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,boolean)>($r2, null, 1);

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.media.midi.MidiDeviceService");

        $r5 = r0.<com.android.server.midi.MidiService: android.content.pm.PackageManager mPackageManager>;

        r13 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>($r4, 128);

        if r13 == null goto label3;

        i0 = interfaceinvoke r13.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $r9 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(i2);

        $r10 = (android.content.pm.ResolveInfo) $r9;

        r1 = $r10.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if r1 == null goto label2;

        specialinvoke r0.<com.android.server.midi.MidiService: void addPackageDeviceServer(android.content.pm.ServiceInfo)>(r1);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r6 = r0.<com.android.server.midi.MidiService: android.content.pm.PackageManager mPackageManager>;

        r14 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>("com.android.bluetoothmidiservice", 0);

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        r14 = null;

     label6:
        if r14 == null goto label7;

        $r7 = r14.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r7 == null goto label7;

        $r8 = r14.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        r0.<com.android.server.midi.MidiService: int mBluetoothServiceUid> = $i1;

        goto label8;

     label7:
        r0.<com.android.server.midi.MidiService: int mBluetoothServiceUid> = -1;

     label8:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }

    private void removeDeviceLocked(com.android.server.midi.MidiService$Device)
    {
        com.android.server.midi.MidiService r0;
        java.util.Iterator r1;
        java.util.HashMap $r2, $r5, $r9, r15;
        android.media.midi.MidiDeviceInfo $r3;
        java.util.Collection $r6;
        java.lang.Object $r7;
        com.android.server.midi.MidiService$Client $r8;
        android.os.IBinder $r10;
        java.lang.Throwable $r12;
        com.android.server.midi.MidiService$Device r13;
        android.media.midi.IMidiDeviceServer r14;
        boolean $z0;

        r0 := @this: com.android.server.midi.MidiService;

        r13 := @parameter0: com.android.server.midi.MidiService$Device;

        r14 = virtualinvoke r13.<com.android.server.midi.MidiService$Device: android.media.midi.IMidiDeviceServer getDeviceServer()>();

        if r14 == null goto label1;

        $r9 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByServer>;

        $r10 = interfaceinvoke r14.<android.media.midi.IMidiDeviceServer: android.os.IBinder asBinder()>();

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r10);

     label1:
        $r2 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        $r3 = virtualinvoke r13.<com.android.server.midi.MidiService$Device: android.media.midi.MidiDeviceInfo getDeviceInfo()>();

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r3);

        r15 = r0.<com.android.server.midi.MidiService: java.util.HashMap mClients>;

        entermonitor r15;

     label2:
        $r5 = r0.<com.android.server.midi.MidiService: java.util.HashMap mClients>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.android.server.midi.MidiService$Client) $r7;

        virtualinvoke $r8.<com.android.server.midi.MidiService$Client: void deviceRemoved(com.android.server.midi.MidiService$Device)>(r13);

     label4:
        goto label3;

     label5:
        exitmonitor r15;

     label6:
        return;

     label7:
        $r12 := @caughtexception;

     label8:
        exitmonitor r15;

     label9:
        throw $r12;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void removePackageDeviceServers(java.lang.String)
    {
        com.android.server.midi.MidiService r0;
        java.util.HashMap r1, $r4;
        java.util.Iterator r2;
        com.android.server.midi.MidiService$Device r3;
        java.util.Collection $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.String $r7, r9;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.midi.MidiService;

        r9 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.midi.MidiService$Device) $r6;

        $r7 = virtualinvoke r3.<com.android.server.midi.MidiService$Device: java.lang.String getPackageName()>();

        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label3;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        specialinvoke r0.<com.android.server.midi.MidiService: void removeDeviceLocked(com.android.server.midi.MidiService$Device)>(r3);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void updateStickyDeviceStatus(int, android.media.midi.IMidiDeviceListener)
    {
        com.android.server.midi.MidiService r0;
        int i0;
        java.util.HashMap r1, $r3;
        java.util.Iterator r2;
        boolean z0, $z1;
        java.util.Collection $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;
        android.media.midi.IMidiDeviceListener r8;
        com.android.server.midi.MidiService$Device r9;
        android.media.midi.MidiDeviceStatus r10;

        r0 := @this: com.android.server.midi.MidiService;

        i0 := @parameter0: int;

        r8 := @parameter1: android.media.midi.IMidiDeviceListener;

        r1 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.android.server.midi.MidiService$Device) $r5;

        z0 = virtualinvoke r9.<com.android.server.midi.MidiService$Device: boolean isUidAllowed(int)>(i0);

     label03:
        if z0 == 0 goto label10;

     label04:
        r10 = virtualinvoke r9.<com.android.server.midi.MidiService$Device: android.media.midi.MidiDeviceStatus getDeviceStatus()>();

     label05:
        if r10 == null goto label07;

     label06:
        interfaceinvoke r8.<android.media.midi.IMidiDeviceListener: void onDeviceStatusChanged(android.media.midi.MidiDeviceStatus)>(r10);

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

     label09:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MidiService", "remote exception", $r7);

     label10:
        goto label02;

     label11:
        exitmonitor r1;

     label12:
        return;

     label13:
        $r6 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch android.os.RemoteException from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void closeDevice(android.os.IBinder, android.os.IBinder)
    {
        com.android.server.midi.MidiService r0;
        android.os.IBinder r1, r2;
        com.android.server.midi.MidiService$Client r3;

        r0 := @this: com.android.server.midi.MidiService;

        r2 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.os.IBinder;

        r3 = specialinvoke r0.<com.android.server.midi.MidiService: com.android.server.midi.MidiService$Client getClient(android.os.IBinder)>(r2);

        if r3 != null goto label1;

        return;

     label1:
        virtualinvoke r3.<com.android.server.midi.MidiService$Client: void removeDeviceConnection(android.os.IBinder)>(r1);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.midi.MidiService r0;
        android.content.Context $r1;
        boolean $z0, $z1, $z2;
        com.android.internal.util.IndentingPrintWriter $r2;
        java.util.HashMap $r5, $r9, r24, r26;
        java.util.Collection $r6, $r10;
        java.lang.Object $r12, $r15;
        com.android.server.midi.MidiService$Client $r13;
        java.lang.String $r14, $r17;
        com.android.server.midi.MidiService$Device $r16;
        java.lang.Throwable $r18, $r19;
        java.io.FileDescriptor r20;
        java.io.PrintWriter r21;
        java.lang.String[] r22;
        java.util.Iterator r25, r27;

        r0 := @this: com.android.server.midi.MidiService;

        r20 := @parameter0: java.io.FileDescriptor;

        r21 := @parameter1: java.io.PrintWriter;

        r22 := @parameter2: java.lang.String[];

        $r1 = r0.<com.android.server.midi.MidiService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r1, "MidiService", r21);

        if $z0 != 0 goto label01;

        return;

     label01:
        $r2 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r21, "  ");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("MIDI Manager State:");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Devices:");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r24 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        entermonitor r24;

     label02:
        $r5 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        r25 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r15 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (com.android.server.midi.MidiService$Device) $r15;

        $r17 = virtualinvoke $r16.<com.android.server.midi.MidiService$Device: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r17);

     label04:
        goto label03;

     label05:
        exitmonitor r24;

     label06:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Clients:");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r26 = r0.<com.android.server.midi.MidiService: java.util.HashMap mClients>;

        entermonitor r26;

     label07:
        $r9 = r0.<com.android.server.midi.MidiService: java.util.HashMap mClients>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Collection values()>();

        r27 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r12 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (com.android.server.midi.MidiService$Client) $r12;

        $r14 = virtualinvoke $r13.<com.android.server.midi.MidiService$Client: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r14);

     label09:
        goto label08;

     label10:
        exitmonitor r26;

     label11:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        return;

     label12:
        $r18 := @caughtexception;

     label13:
        exitmonitor r26;

     label14:
        throw $r18;

     label15:
        $r19 := @caughtexception;

     label16:
        exitmonitor r24;

     label17:
        throw $r19;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)
    {
        com.android.server.midi.MidiService r0;
        android.media.midi.MidiDeviceInfo r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8;
        android.media.midi.MidiDeviceStatus $r9;
        com.android.server.midi.MidiService$Device r10;

        r0 := @this: com.android.server.midi.MidiService;

        r1 := @parameter0: android.media.midi.MidiDeviceInfo;

        $r2 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (com.android.server.midi.MidiService$Device) $r3;

        if r10 == null goto label1;

        $r9 = virtualinvoke r10.<com.android.server.midi.MidiService$Device: android.media.midi.MidiDeviceStatus getDeviceStatus()>();

        return $r9;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no such device for ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public android.media.midi.MidiDeviceInfo[] getDevices()
    {
        com.android.server.midi.MidiService r0;
        int i0;
        java.util.HashMap r1, $r5;
        java.util.Iterator r2;
        com.android.server.midi.MidiService$Device r3;
        java.util.ArrayList $r4;
        java.util.Collection $r6;
        boolean $z0, $z1;
        android.media.midi.MidiDeviceInfo[] $r7, $r9;
        java.lang.Object[] $r8;
        java.lang.Object $r10;
        android.media.midi.MidiDeviceInfo $r11;
        java.lang.Throwable $r12;

        r0 := @this: com.android.server.midi.MidiService;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r1 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.midi.MidiService$Device) $r10;

        $z1 = virtualinvoke r3.<com.android.server.midi.MidiService$Device: boolean isUidAllowed(int)>(i0);

        if $z1 == 0 goto label3;

        $r11 = virtualinvoke r3.<com.android.server.midi.MidiService$Device: android.media.midi.MidiDeviceInfo getDeviceInfo()>();

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        $r7 = <com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo[] EMPTY_DEVICE_INFO_ARRAY>;

        $r8 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (android.media.midi.MidiDeviceInfo[]) $r8;

        return $r9;

     label6:
        $r12 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public android.media.midi.MidiDeviceInfo getServiceDeviceInfo(java.lang.String, java.lang.String)
    {
        com.android.server.midi.MidiService r0;
        java.lang.String r1, $r9, $r10, r12;
        java.util.HashMap r2, $r6;
        java.util.Iterator r3;
        com.android.server.midi.MidiService$Device r4;
        android.content.pm.ServiceInfo r5;
        java.util.Collection $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8;
        java.lang.Throwable $r11;
        android.media.midi.MidiDeviceInfo r13;

        r0 := @this: com.android.server.midi.MidiService;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        entermonitor r2;

     label01:
        $r6 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.midi.MidiService$Device) $r8;

        r5 = virtualinvoke r4.<com.android.server.midi.MidiService$Device: android.content.pm.ServiceInfo getServiceInfo()>();

     label03:
        if r5 == null goto label06;

     label04:
        $r9 = r5.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $z1 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label06;

        $r10 = r5.<android.content.pm.ServiceInfo: java.lang.String name>;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label06;

        r13 = virtualinvoke r4.<com.android.server.midi.MidiService$Device: android.media.midi.MidiDeviceInfo getDeviceInfo()>();

        exitmonitor r2;

     label05:
        return r13;

     label06:
        goto label02;

     label07:
        exitmonitor r2;

     label08:
        return null;

     label09:
        $r11 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void openBluetoothDevice(android.os.IBinder, android.bluetooth.BluetoothDevice, android.media.midi.IMidiDeviceOpenCallback)
    {
        com.android.server.midi.MidiService r0;
        android.bluetooth.BluetoothDevice r1;
        android.media.midi.IMidiDeviceOpenCallback r2;
        com.android.server.midi.MidiService$Client r3;
        java.util.HashMap r4, $r6, $r8;
        com.android.server.midi.MidiService$Device r5, r13;
        long l0;
        java.lang.Object $r7;
        java.lang.Throwable $r10, $r11;
        android.os.IBinder r12;

        r0 := @this: com.android.server.midi.MidiService;

        r12 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.bluetooth.BluetoothDevice;

        r2 := @parameter2: android.media.midi.IMidiDeviceOpenCallback;

        r3 = specialinvoke r0.<com.android.server.midi.MidiService: com.android.server.midi.MidiService$Client getClient(android.os.IBinder)>(r12);

        if r3 != null goto label01;

        return;

     label01:
        r4 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        entermonitor r4;

     label02:
        $r6 = r0.<com.android.server.midi.MidiService: java.util.HashMap mBluetoothDevices>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.android.server.midi.MidiService$Device) $r7;

     label03:
        r13 = r5;

        if r5 != null goto label06;

     label04:
        r13 = new com.android.server.midi.MidiService$Device;

        specialinvoke r13.<com.android.server.midi.MidiService$Device: void <init>(com.android.server.midi.MidiService,android.bluetooth.BluetoothDevice)>(r0, r1);

     label05:
        $r8 = r0.<com.android.server.midi.MidiService: java.util.HashMap mBluetoothDevices>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r13);

     label06:
        exitmonitor r4;

     label07:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label08:
        virtualinvoke r3.<com.android.server.midi.MidiService$Client: void addDeviceConnection(com.android.server.midi.MidiService$Device,android.media.midi.IMidiDeviceOpenCallback)>(r13, r2);

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label10:
        $r11 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r11;

     label11:
        $r10 := @caughtexception;

     label12:
        exitmonitor r4;

     label13:
        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void openDevice(android.os.IBinder, android.media.midi.MidiDeviceInfo, android.media.midi.IMidiDeviceOpenCallback)
    {
        com.android.server.midi.MidiService r0;
        com.android.server.midi.MidiService$Client r1;
        long l0;
        java.util.HashMap $r2, r12;
        java.lang.Object $r3;
        java.lang.String $r6;
        int $i1;
        boolean $z0;
        java.lang.Throwable $r7, $r8;
        android.os.IBinder r9;
        android.media.midi.MidiDeviceInfo r10;
        android.media.midi.IMidiDeviceOpenCallback r11;
        com.android.server.midi.MidiService$Device r13;
        java.lang.SecurityException r15;
        java.lang.IllegalArgumentException r16;
        java.lang.StringBuilder r17;

        r0 := @this: com.android.server.midi.MidiService;

        r9 := @parameter0: android.os.IBinder;

        r10 := @parameter1: android.media.midi.MidiDeviceInfo;

        r11 := @parameter2: android.media.midi.IMidiDeviceOpenCallback;

        r1 = specialinvoke r0.<com.android.server.midi.MidiService: com.android.server.midi.MidiService$Client getClient(android.os.IBinder)>(r9);

        if r1 != null goto label01;

        return;

     label01:
        r12 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        entermonitor r12;

     label02:
        $r2 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r10);

        r13 = (com.android.server.midi.MidiService$Device) $r3;

     label03:
        if r13 == null goto label10;

     label04:
        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = virtualinvoke r13.<com.android.server.midi.MidiService$Device: boolean isUidAllowed(int)>($i1);

        if $z0 == 0 goto label09;

        exitmonitor r12;

     label05:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        virtualinvoke r1.<com.android.server.midi.MidiService$Client: void addDeviceConnection(com.android.server.midi.MidiService$Device,android.media.midi.IMidiDeviceOpenCallback)>(r13, r11);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label08:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r8;

     label09:
        r15 = new java.lang.SecurityException;

        specialinvoke r15.<java.lang.SecurityException: void <init>(java.lang.String)>("Attempt to open private device with wrong UID");

        throw r15;

     label10:
        r16 = new java.lang.IllegalArgumentException;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("device does not exist: ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r6 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw r16;

     label11:
        $r7 := @caughtexception;

     label12:
        exitmonitor r12;

     label13:
        throw $r7;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public android.media.midi.MidiDeviceInfo registerDeviceServer(android.media.midi.IMidiDeviceServer, int, int, java.lang.String[], java.lang.String[], android.os.Bundle, int)
    {
        com.android.server.midi.MidiService r0;
        int i0, i1, i2, i3, $i4;
        java.lang.String[] r1, r2;
        android.os.Bundle r3;
        java.util.HashMap r4;
        java.lang.SecurityException $r5, $r6;
        java.lang.Throwable $r7;
        android.media.midi.IMidiDeviceServer r8;
        android.media.midi.MidiDeviceInfo r9;

        r0 := @this: com.android.server.midi.MidiService;

        r8 := @parameter0: android.media.midi.IMidiDeviceServer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String[];

        r2 := @parameter4: java.lang.String[];

        r3 := @parameter5: android.os.Bundle;

        i2 := @parameter6: int;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i2 != 1 goto label2;

        if i3 != 1000 goto label1;

        goto label2;

     label1:
        $r6 = new java.lang.SecurityException;

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>("only system can create USB devices");

        throw $r6;

     label2:
        if i2 != 3 goto label4;

        $i4 = r0.<com.android.server.midi.MidiService: int mBluetoothServiceUid>;

        if i3 != $i4 goto label3;

        goto label4;

     label3:
        $r5 = new java.lang.SecurityException;

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>("only MidiBluetoothService can create Bluetooth devices");

        throw $r5;

     label4:
        r4 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        entermonitor r4;

     label5:
        r9 = specialinvoke r0.<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo addDeviceLocked(int,int,int,java.lang.String[],java.lang.String[],android.os.Bundle,android.media.midi.IMidiDeviceServer,android.content.pm.ServiceInfo,boolean,int)>(i2, i0, i1, r1, r2, r3, r8, null, 0, i3);

        exitmonitor r4;

     label6:
        return r9;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r4;

     label9:
        throw $r7;

        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void registerListener(android.os.IBinder, android.media.midi.IMidiDeviceListener)
    {
        com.android.server.midi.MidiService r0;
        android.media.midi.IMidiDeviceListener r1;
        int $i0;
        android.os.IBinder r2;
        com.android.server.midi.MidiService$Client r3;

        r0 := @this: com.android.server.midi.MidiService;

        r2 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.media.midi.IMidiDeviceListener;

        r3 = specialinvoke r0.<com.android.server.midi.MidiService: com.android.server.midi.MidiService$Client getClient(android.os.IBinder)>(r2);

        if r3 != null goto label1;

        return;

     label1:
        virtualinvoke r3.<com.android.server.midi.MidiService$Client: void addListener(android.media.midi.IMidiDeviceListener)>(r1);

        $i0 = staticinvoke <com.android.server.midi.MidiService$Client: int access$1300(com.android.server.midi.MidiService$Client)>(r3);

        specialinvoke r0.<com.android.server.midi.MidiService: void updateStickyDeviceStatus(int,android.media.midi.IMidiDeviceListener)>($i0, r1);

        return;
    }

    public void setDeviceStatus(android.media.midi.IMidiDeviceServer, android.media.midi.MidiDeviceStatus)
    {
        com.android.server.midi.MidiService r0;
        java.util.HashMap $r1;
        android.os.IBinder $r2;
        java.lang.Object $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r4;
        java.lang.SecurityException $r9;
        java.lang.String $r10;
        android.media.midi.IMidiDeviceServer r11;
        android.media.midi.MidiDeviceStatus r12;
        com.android.server.midi.MidiService$Device r13;

        r0 := @this: com.android.server.midi.MidiService;

        r11 := @parameter0: android.media.midi.IMidiDeviceServer;

        r12 := @parameter1: android.media.midi.MidiDeviceStatus;

        $r1 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByServer>;

        $r2 = interfaceinvoke r11.<android.media.midi.IMidiDeviceServer: android.os.IBinder asBinder()>();

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r13 = (com.android.server.midi.MidiService$Device) $r3;

        if r13 == null goto label2;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = virtualinvoke r13.<com.android.server.midi.MidiService$Device: int getUid()>();

        if $i0 != $i1 goto label1;

        virtualinvoke r13.<com.android.server.midi.MidiService$Device: void setDeviceStatus(android.media.midi.MidiDeviceStatus)>(r12);

        specialinvoke r0.<com.android.server.midi.MidiService: void notifyDeviceStatusChanged(com.android.server.midi.MidiService$Device,android.media.midi.MidiDeviceStatus)>(r13, r12);

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDeviceStatus() caller UID ");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match device\'s UID ");

        $i3 = virtualinvoke r13.<com.android.server.midi.MidiService$Device: int getUid()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = new java.lang.SecurityException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label2:
        return;
    }

    public void unregisterDeviceServer(android.media.midi.IMidiDeviceServer)
    {
        com.android.server.midi.MidiService r0;
        java.util.HashMap r1, $r2;
        android.os.IBinder $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        android.media.midi.IMidiDeviceServer r6;
        com.android.server.midi.MidiService$Device r7;

        r0 := @this: com.android.server.midi.MidiService;

        r6 := @parameter0: android.media.midi.IMidiDeviceServer;

        r1 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByInfo>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.midi.MidiService: java.util.HashMap mDevicesByServer>;

        $r3 = interfaceinvoke r6.<android.media.midi.IMidiDeviceServer: android.os.IBinder asBinder()>();

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r7 = (com.android.server.midi.MidiService$Device) $r4;

     label2:
        if r7 == null goto label4;

     label3:
        virtualinvoke r7.<com.android.server.midi.MidiService$Device: void closeLocked()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void unregisterListener(android.os.IBinder, android.media.midi.IMidiDeviceListener)
    {
        com.android.server.midi.MidiService r0;
        android.media.midi.IMidiDeviceListener r1;
        android.os.IBinder r2;
        com.android.server.midi.MidiService$Client r3;

        r0 := @this: com.android.server.midi.MidiService;

        r2 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.media.midi.IMidiDeviceListener;

        r3 = specialinvoke r0.<com.android.server.midi.MidiService: com.android.server.midi.MidiService$Client getClient(android.os.IBinder)>(r2);

        if r3 != null goto label1;

        return;

     label1:
        virtualinvoke r3.<com.android.server.midi.MidiService$Client: void removeListener(android.media.midi.IMidiDeviceListener)>(r1);

        return;
    }
}
