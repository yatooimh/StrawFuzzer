public class com.android.server.net.DelayedDiskWrite extends java.lang.Object
{
    private final java.lang.String TAG;
    private android.os.Handler mDiskWriteHandler;
    private android.os.HandlerThread mDiskWriteHandlerThread;
    private int mWriteSequence;

    public void <init>()
    {
        com.android.server.net.DelayedDiskWrite r0;

        r0 := @this: com.android.server.net.DelayedDiskWrite;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.net.DelayedDiskWrite: int mWriteSequence> = 0;

        r0.<com.android.server.net.DelayedDiskWrite: java.lang.String TAG> = "DelayedDiskWrite";

        return;
    }

    static void access$000(com.android.server.net.DelayedDiskWrite, java.lang.String, com.android.server.net.DelayedDiskWrite$Writer, boolean)
    {
        com.android.server.net.DelayedDiskWrite r0;
        java.lang.String r1;
        com.android.server.net.DelayedDiskWrite$Writer r2;
        boolean z0;

        r0 := @parameter0: com.android.server.net.DelayedDiskWrite;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.server.net.DelayedDiskWrite$Writer;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.server.net.DelayedDiskWrite: void doWrite(java.lang.String,com.android.server.net.DelayedDiskWrite$Writer,boolean)>(r1, r2, z0);

        return;
    }

    private void doWrite(java.lang.String, com.android.server.net.DelayedDiskWrite$Writer, boolean)
    {
        com.android.server.net.DelayedDiskWrite r0;
        boolean z0;
        java.io.BufferedOutputStream r1;
        java.io.FileOutputStream r2;
        int $i0, $i1, $i2, i3, i4, i5;
        android.os.Handler $r3, $r6, $r15;
        android.os.Looper $r4, $r7, $r16;
        java.lang.Exception $r5, $r12, $r17;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r13;
        java.lang.String $r14, r18;
        com.android.server.net.DelayedDiskWrite$Writer r19;
        java.io.DataOutputStream r20, r21, r22;
        java.lang.StringBuilder r25;

        r0 := @this: com.android.server.net.DelayedDiskWrite;

        r18 := @parameter0: java.lang.String;

        r19 := @parameter1: com.android.server.net.DelayedDiskWrite$Writer;

        z0 := @parameter2: boolean;

        r20 = null;

        if z0 == 0 goto label12;

        r21 = null;

        r22 = null;

     label01:
        r20 = new java.io.DataOutputStream;

     label02:
        r21 = null;

        r22 = null;

     label03:
        r1 = new java.io.BufferedOutputStream;

     label04:
        r21 = null;

        r22 = null;

     label05:
        r2 = new java.io.FileOutputStream;

     label06:
        r21 = null;

        r22 = null;

     label07:
        specialinvoke r2.<java.io.FileOutputStream: void <init>(java.lang.String)>(r18);

     label08:
        r21 = null;

        r22 = null;

     label09:
        specialinvoke r1.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r2);

     label10:
        r21 = null;

        r22 = null;

     label11:
        specialinvoke r20.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);

     label12:
        r21 = r20;

        r22 = r20;

     label13:
        interfaceinvoke r19.<com.android.server.net.DelayedDiskWrite$Writer: void onWriteCalled(java.io.DataOutputStream)>(r20);

     label14:
        if r20 == null goto label18;

     label15:
        virtualinvoke r20.<java.io.DataOutputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r12 := @caughtexception;

        goto label16;

     label18:
        entermonitor r0;

     label19:
        $i0 = r0.<com.android.server.net.DelayedDiskWrite: int mWriteSequence>;

        i3 = $i0 - 1;

        r0.<com.android.server.net.DelayedDiskWrite: int mWriteSequence> = i3;

     label20:
        if i3 != 0 goto label22;

     label21:
        $r3 = r0.<com.android.server.net.DelayedDiskWrite: android.os.Handler mDiskWriteHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Looper getLooper()>();

        virtualinvoke $r4.<android.os.Looper: void quit()>();

        r0.<com.android.server.net.DelayedDiskWrite: android.os.Handler mDiskWriteHandler> = null;

        r0.<com.android.server.net.DelayedDiskWrite: android.os.HandlerThread mDiskWriteHandlerThread> = null;

     label22:
        exitmonitor r0;

     label23:
        goto label48;

     label24:
        $r8 := @caughtexception;

     label25:
        exitmonitor r0;

     label26:
        throw $r8;

     label27:
        $r10 := @caughtexception;

        goto label52;

     label28:
        $r13 := @caughtexception;

        r21 = r22;

     label29:
        r25 = new java.lang.StringBuilder;

     label30:
        r21 = r22;

     label31:
        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

     label32:
        r21 = r22;

     label33:
        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing data file ");

     label34:
        r21 = r22;

     label35:
        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

     label36:
        r21 = r22;

     label37:
        $r14 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.net.DelayedDiskWrite: void loge(java.lang.String)>($r14);

     label38:
        if r22 == null goto label42;

     label39:
        virtualinvoke r22.<java.io.DataOutputStream: void close()>();

     label40:
        goto label42;

     label41:
        $r17 := @caughtexception;

        goto label40;

     label42:
        entermonitor r0;

     label43:
        $i2 = r0.<com.android.server.net.DelayedDiskWrite: int mWriteSequence>;

        i4 = $i2 - 1;

        r0.<com.android.server.net.DelayedDiskWrite: int mWriteSequence> = i4;

     label44:
        if i4 != 0 goto label46;

     label45:
        $r15 = r0.<com.android.server.net.DelayedDiskWrite: android.os.Handler mDiskWriteHandler>;

        $r16 = virtualinvoke $r15.<android.os.Handler: android.os.Looper getLooper()>();

        virtualinvoke $r16.<android.os.Looper: void quit()>();

        r0.<com.android.server.net.DelayedDiskWrite: android.os.Handler mDiskWriteHandler> = null;

        r0.<com.android.server.net.DelayedDiskWrite: android.os.HandlerThread mDiskWriteHandlerThread> = null;

     label46:
        exitmonitor r0;

     label47:
        goto label23;

     label48:
        return;

     label49:
        $r9 := @caughtexception;

     label50:
        exitmonitor r0;

     label51:
        throw $r9;

     label52:
        if r21 == null goto label56;

     label53:
        virtualinvoke r21.<java.io.DataOutputStream: void close()>();

     label54:
        goto label56;

     label55:
        $r5 := @caughtexception;

        goto label54;

     label56:
        entermonitor r0;

     label57:
        $i1 = r0.<com.android.server.net.DelayedDiskWrite: int mWriteSequence>;

        i5 = $i1 - 1;

        r0.<com.android.server.net.DelayedDiskWrite: int mWriteSequence> = i5;

     label58:
        if i5 != 0 goto label60;

     label59:
        $r6 = r0.<com.android.server.net.DelayedDiskWrite: android.os.Handler mDiskWriteHandler>;

        $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Looper getLooper()>();

        virtualinvoke $r7.<android.os.Looper: void quit()>();

        r0.<com.android.server.net.DelayedDiskWrite: android.os.Handler mDiskWriteHandler> = null;

        r0.<com.android.server.net.DelayedDiskWrite: android.os.HandlerThread mDiskWriteHandlerThread> = null;

     label60:
        exitmonitor r0;

     label61:
        throw $r10;

     label62:
        $r11 := @caughtexception;

     label63:
        exitmonitor r0;

     label64:
        throw $r11;

        catch java.io.IOException from label01 to label02 with label28;
        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.io.IOException from label03 to label04 with label28;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.io.IOException from label05 to label06 with label28;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.io.IOException from label07 to label08 with label28;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.io.IOException from label09 to label10 with label28;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.io.IOException from label11 to label12 with label28;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.io.IOException from label13 to label14 with label28;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label21 to label22 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label29 to label30 with label27;
        catch java.lang.Throwable from label31 to label32 with label27;
        catch java.lang.Throwable from label33 to label34 with label27;
        catch java.lang.Throwable from label35 to label36 with label27;
        catch java.lang.Throwable from label37 to label38 with label27;
        catch java.lang.Exception from label39 to label40 with label41;
        catch java.lang.Throwable from label43 to label44 with label49;
        catch java.lang.Throwable from label45 to label46 with label49;
        catch java.lang.Throwable from label46 to label47 with label49;
        catch java.lang.Throwable from label50 to label51 with label49;
        catch java.lang.Exception from label53 to label54 with label55;
        catch java.lang.Throwable from label57 to label58 with label62;
        catch java.lang.Throwable from label59 to label60 with label62;
        catch java.lang.Throwable from label60 to label61 with label62;
        catch java.lang.Throwable from label63 to label64 with label62;
    }

    private void loge(java.lang.String)
    {
        com.android.server.net.DelayedDiskWrite r0;
        java.lang.String r1;

        r0 := @this: com.android.server.net.DelayedDiskWrite;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DelayedDiskWrite", r1);

        return;
    }

    public void write(java.lang.String, com.android.server.net.DelayedDiskWrite$Writer)
    {
        com.android.server.net.DelayedDiskWrite r0;
        java.lang.String r1;
        com.android.server.net.DelayedDiskWrite$Writer r2;

        r0 := @this: com.android.server.net.DelayedDiskWrite;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.net.DelayedDiskWrite$Writer;

        virtualinvoke r0.<com.android.server.net.DelayedDiskWrite: void write(java.lang.String,com.android.server.net.DelayedDiskWrite$Writer,boolean)>(r1, r2, 1);

        return;
    }

    public void write(java.lang.String, com.android.server.net.DelayedDiskWrite$Writer, boolean)
    {
        com.android.server.net.DelayedDiskWrite r0;
        com.android.server.net.DelayedDiskWrite$Writer r1;
        boolean z0, $z1;
        int i0, $i1;
        java.lang.IllegalArgumentException $r2;
        com.android.server.net.DelayedDiskWrite$1 $r3;
        android.os.Handler $r4, r10;
        android.os.HandlerThread $r5, r9;
        android.os.Looper $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: com.android.server.net.DelayedDiskWrite;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.server.net.DelayedDiskWrite$Writer;

        z0 := @parameter2: boolean;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z1 != 0 goto label9;

        entermonitor r0;

     label1:
        $i1 = r0.<com.android.server.net.DelayedDiskWrite: int mWriteSequence>;

        i0 = $i1 + 1;

        r0.<com.android.server.net.DelayedDiskWrite: int mWriteSequence> = i0;

     label2:
        if i0 != 1 goto label4;

     label3:
        r9 = new android.os.HandlerThread;

        specialinvoke r9.<android.os.HandlerThread: void <init>(java.lang.String)>("DelayedDiskWriteThread");

        r0.<com.android.server.net.DelayedDiskWrite: android.os.HandlerThread mDiskWriteHandlerThread> = r9;

        virtualinvoke r9.<android.os.HandlerThread: void start()>();

        r10 = new android.os.Handler;

        $r5 = r0.<com.android.server.net.DelayedDiskWrite: android.os.HandlerThread mDiskWriteHandlerThread>;

        $r6 = virtualinvoke $r5.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke r10.<android.os.Handler: void <init>(android.os.Looper)>($r6);

        r0.<com.android.server.net.DelayedDiskWrite: android.os.Handler mDiskWriteHandler> = r10;

     label4:
        exitmonitor r0;

     label5:
        $r4 = r0.<com.android.server.net.DelayedDiskWrite: android.os.Handler mDiskWriteHandler>;

        $r3 = new com.android.server.net.DelayedDiskWrite$1;

        specialinvoke $r3.<com.android.server.net.DelayedDiskWrite$1: void <init>(com.android.server.net.DelayedDiskWrite,java.lang.String,com.android.server.net.DelayedDiskWrite$Writer,boolean)>(r0, r8, r1, z0);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r7;

     label9:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("empty file path");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
