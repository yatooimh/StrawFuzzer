public class com.android.server.net.LockdownVpnTracker extends java.lang.Object
{
    private static final java.lang.String ACTION_LOCKDOWN_RESET;
    private static final int MAX_ERROR_COUNT;
    private static final java.lang.String TAG;
    private java.lang.String mAcceptedEgressIface;
    private final android.app.PendingIntent mConfigIntent;
    private final com.android.server.ConnectivityService mConnService;
    private final android.content.Context mContext;
    private int mErrorCount;
    private final android.os.Handler mHandler;
    private final com.android.internal.net.VpnProfile mProfile;
    private final android.app.PendingIntent mResetIntent;
    private android.content.BroadcastReceiver mResetReceiver;
    private final java.lang.Object mStateLock;
    private final com.android.server.connectivity.Vpn mVpn;

    public void <init>(android.content.Context, com.android.server.ConnectivityService, android.os.Handler, com.android.server.connectivity.Vpn, com.android.internal.net.VpnProfile)
    {
        com.android.server.net.LockdownVpnTracker r0;
        com.android.server.ConnectivityService r1, $r10;
        android.os.Handler r2, $r12;
        com.android.server.connectivity.Vpn r3, $r14;
        com.android.internal.net.VpnProfile r4, $r16;
        java.lang.Object $r5;
        com.android.server.net.LockdownVpnTracker$1 $r6;
        android.content.Context $r8, $r18, $r22, r24;
        android.content.Intent $r17, $r20;
        android.app.PendingIntent $r19, $r23;

        r0 := @this: com.android.server.net.LockdownVpnTracker;

        r24 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.server.ConnectivityService;

        r2 := @parameter2: android.os.Handler;

        r3 := @parameter3: com.android.server.connectivity.Vpn;

        r4 := @parameter4: com.android.internal.net.VpnProfile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.server.net.LockdownVpnTracker: java.lang.Object mStateLock> = $r5;

        $r6 = new com.android.server.net.LockdownVpnTracker$1;

        specialinvoke $r6.<com.android.server.net.LockdownVpnTracker$1: void <init>(com.android.server.net.LockdownVpnTracker)>(r0);

        r0.<com.android.server.net.LockdownVpnTracker: android.content.BroadcastReceiver mResetReceiver> = $r6;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r24);

        $r8 = (android.content.Context) r24;

        r0.<com.android.server.net.LockdownVpnTracker: android.content.Context mContext> = $r8;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r10 = (com.android.server.ConnectivityService) r1;

        r0.<com.android.server.net.LockdownVpnTracker: com.android.server.ConnectivityService mConnService> = $r10;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r12 = (android.os.Handler) r2;

        r0.<com.android.server.net.LockdownVpnTracker: android.os.Handler mHandler> = $r12;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        $r14 = (com.android.server.connectivity.Vpn) r3;

        r0.<com.android.server.net.LockdownVpnTracker: com.android.server.connectivity.Vpn mVpn> = $r14;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r4);

        $r16 = (com.android.internal.net.VpnProfile) r4;

        r0.<com.android.server.net.LockdownVpnTracker: com.android.internal.net.VpnProfile mProfile> = $r16;

        $r17 = new android.content.Intent;

        specialinvoke $r17.<android.content.Intent: void <init>(java.lang.String)>("android.settings.VPN_SETTINGS");

        $r18 = r0.<com.android.server.net.LockdownVpnTracker: android.content.Context mContext>;

        $r19 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>($r18, 0, $r17, 0);

        r0.<com.android.server.net.LockdownVpnTracker: android.app.PendingIntent mConfigIntent> = $r19;

        $r20 = new android.content.Intent;

        specialinvoke $r20.<android.content.Intent: void <init>(java.lang.String)>("com.android.server.action.LOCKDOWN_RESET");

        virtualinvoke $r20.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r22 = r0.<com.android.server.net.LockdownVpnTracker: android.content.Context mContext>;

        $r23 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r22, 0, $r20, 0);

        r0.<com.android.server.net.LockdownVpnTracker: android.app.PendingIntent mResetIntent> = $r23;

        return;
    }

    private void handleStateChangedLocked()
    {
        com.android.server.net.LockdownVpnTracker r0;
        android.net.NetworkInfo r1, r3, $r28;
        android.net.LinkProperties r2;
        com.android.server.ConnectivityService $r5, $r6, $r29;
        com.android.server.connectivity.Vpn $r7, $r8, $r18, $r32;
        int $i0, $i2, i7;
        java.lang.StringBuilder $r9, $r21;
        java.lang.String $r13, $r17, $r25, $r27, $r31, $r35, $r36, r41, r42, r44;
        android.net.NetworkInfo$DetailedState $r19, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7;
        com.android.internal.net.VpnProfile $r30, $r33;
        android.security.KeyStore $r34;
        android.net.NetworkInfo$State $r37, $r38;
        java.lang.Throwable $r39;
        com.android.internal.net.VpnConfig r40;
        java.util.List r45;

        r0 := @this: com.android.server.net.LockdownVpnTracker;

        $r5 = r0.<com.android.server.net.LockdownVpnTracker: com.android.server.ConnectivityService mConnService>;

        r1 = virtualinvoke $r5.<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoUnfiltered()>();

        $r6 = r0.<com.android.server.net.LockdownVpnTracker: com.android.server.ConnectivityService mConnService>;

        r2 = virtualinvoke $r6.<com.android.server.ConnectivityService: android.net.LinkProperties getActiveLinkProperties()>();

        $r7 = r0.<com.android.server.net.LockdownVpnTracker: com.android.server.connectivity.Vpn mVpn>;

        r3 = virtualinvoke $r7.<com.android.server.connectivity.Vpn: android.net.NetworkInfo getNetworkInfo()>();

        $r8 = r0.<com.android.server.net.LockdownVpnTracker: com.android.server.connectivity.Vpn mVpn>;

        r40 = virtualinvoke $r8.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig getLegacyVpnConfig()>();

        z6 = 0;

        if r1 == null goto label02;

        $r37 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State DISCONNECTED>;

        $r38 = virtualinvoke r1.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $z5 = virtualinvoke $r37.<android.net.NetworkInfo$State: boolean equals(java.lang.Object)>($r38);

        if $z5 == 0 goto label01;

        goto label02;

     label01:
        z7 = 0;

        goto label03;

     label02:
        z7 = 1;

     label03:
        if r2 == null goto label04;

        $r35 = r0.<com.android.server.net.LockdownVpnTracker: java.lang.String mAcceptedEgressIface>;

        $r36 = virtualinvoke r2.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r35, $r36);

        if $z4 != 0 goto label05;

     label04:
        z6 = 1;

     label05:
        if r1 != null goto label06;

        r41 = null;

        goto label07;

     label06:
        $i0 = virtualinvoke r1.<android.net.NetworkInfo: int getType()>();

        r41 = staticinvoke <android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)>($i0);

     label07:
        if r2 != null goto label08;

        r42 = null;

        goto label09;

     label08:
        r42 = virtualinvoke r2.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

     label09:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleStateChanged: egress=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = r0.<com.android.server.net.LockdownVpnTracker: java.lang.String mAcceptedEgressIface>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r17 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("LockdownVpnTracker", $r17);

        if z7 != 0 goto label10;

        if z6 == 0 goto label11;

     label10:
        r0.<com.android.server.net.LockdownVpnTracker: java.lang.String mAcceptedEgressIface> = null;

        $r18 = r0.<com.android.server.net.LockdownVpnTracker: com.android.server.connectivity.Vpn mVpn>;

        virtualinvoke $r18.<com.android.server.connectivity.Vpn: void stopVpnRunnerPrivileged()>();

     label11:
        if z7 == 0 goto label12;

        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void hideNotification()>();

        return;

     label12:
        i7 = virtualinvoke r1.<android.net.NetworkInfo: int getType()>();

        $r19 = virtualinvoke r3.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        $r20 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState FAILED>;

        if $r19 != $r20 goto label13;

        staticinvoke <com.android.server.EventLogTags: void writeLockdownVpnError(int)>(i7);

     label13:
        $i2 = r0.<com.android.server.net.LockdownVpnTracker: int mErrorCount>;

        if $i2 <= 4 goto label14;

        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void showNotification(int,int)>(17041430, 17303799);

        goto label21;

     label14:
        $z0 = virtualinvoke r1.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label20;

        $z2 = virtualinvoke r3.<android.net.NetworkInfo: boolean isConnectedOrConnecting()>();

        if $z2 != 0 goto label20;

        $r30 = r0.<com.android.server.net.LockdownVpnTracker: com.android.internal.net.VpnProfile mProfile>;

        $z3 = virtualinvoke $r30.<com.android.internal.net.VpnProfile: boolean isValidLockdownProfile()>();

        if $z3 == 0 goto label19;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("LockdownVpnTracker", "Active network connected; starting VPN");

        staticinvoke <com.android.server.EventLogTags: void writeLockdownVpnConnecting(int)>(i7);

        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void showNotification(int,int)>(17041428, 17303799);

        $r31 = virtualinvoke r2.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        r0.<com.android.server.net.LockdownVpnTracker: java.lang.String mAcceptedEgressIface> = $r31;

     label15:
        $r32 = r0.<com.android.server.net.LockdownVpnTracker: com.android.server.connectivity.Vpn mVpn>;

        $r33 = r0.<com.android.server.net.LockdownVpnTracker: com.android.internal.net.VpnProfile mProfile>;

        $r34 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        virtualinvoke $r32.<com.android.server.connectivity.Vpn: void startLegacyVpnPrivileged(com.android.internal.net.VpnProfile,android.security.KeyStore,android.net.LinkProperties)>($r33, $r34, r2);

     label16:
        goto label18;

     label17:
        $r39 := @caughtexception;

        r0.<com.android.server.net.LockdownVpnTracker: java.lang.String mAcceptedEgressIface> = null;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LockdownVpnTracker", "Failed to start VPN", $r39);

        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void showNotification(int,int)>(17041430, 17303799);

     label18:
        goto label21;

     label19:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("LockdownVpnTracker", "Invalid VPN profile; requires IP-based server and DNS");

        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void showNotification(int,int)>(17041430, 17303799);

        goto label21;

     label20:
        $z1 = virtualinvoke r3.<android.net.NetworkInfo: boolean isConnected()>();

        if $z1 == 0 goto label21;

        if r40 == null goto label21;

        r44 = r40.<com.android.internal.net.VpnConfig: java.lang.String interfaze>;

        r45 = r40.<com.android.internal.net.VpnConfig: java.util.List addresses>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VPN connected using iface=");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sourceAddr=");

        $r25 = virtualinvoke r45.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("LockdownVpnTracker", $r27);

        staticinvoke <com.android.server.EventLogTags: void writeLockdownVpnConnected(int)>(i7);

        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void showNotification(int,int)>(17041427, 17303798);

        $r28 = new android.net.NetworkInfo;

        specialinvoke $r28.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>(r1);

        virtualinvoke r0.<com.android.server.net.LockdownVpnTracker: void augmentNetworkInfo(android.net.NetworkInfo)>($r28);

        $r29 = r0.<com.android.server.net.LockdownVpnTracker: com.android.server.ConnectivityService mConnService>;

        virtualinvoke $r29.<com.android.server.ConnectivityService: void sendConnectedBroadcast(android.net.NetworkInfo)>($r28);

     label21:
        return;

        catch java.lang.IllegalStateException from label15 to label16 with label17;
    }

    private void hideNotification()
    {
        com.android.server.net.LockdownVpnTracker r0;
        android.content.Context $r1;
        android.app.NotificationManager $r2;

        r0 := @this: com.android.server.net.LockdownVpnTracker;

        $r1 = r0.<com.android.server.net.LockdownVpnTracker: android.content.Context mContext>;

        $r2 = staticinvoke <android.app.NotificationManager: android.app.NotificationManager 'from'(android.content.Context)>($r1);

        virtualinvoke $r2.<android.app.NotificationManager: void cancel(java.lang.String,int)>(null, 20);

        return;
    }

    private void initLocked()
    {
        com.android.server.net.LockdownVpnTracker r0;
        com.android.server.connectivity.Vpn $r2, $r3;
        android.content.IntentFilter $r4;
        android.os.Handler $r5;
        android.content.BroadcastReceiver $r6;
        android.content.Context $r7;

        r0 := @this: com.android.server.net.LockdownVpnTracker;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("LockdownVpnTracker", "initLocked()");

        $r2 = r0.<com.android.server.net.LockdownVpnTracker: com.android.server.connectivity.Vpn mVpn>;

        virtualinvoke $r2.<com.android.server.connectivity.Vpn: void setEnableTeardown(boolean)>(0);

        $r3 = r0.<com.android.server.net.LockdownVpnTracker: com.android.server.connectivity.Vpn mVpn>;

        virtualinvoke $r3.<com.android.server.connectivity.Vpn: void setLockdown(boolean)>(1);

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>(java.lang.String)>("com.android.server.action.LOCKDOWN_RESET");

        $r7 = r0.<com.android.server.net.LockdownVpnTracker: android.content.Context mContext>;

        $r6 = r0.<com.android.server.net.LockdownVpnTracker: android.content.BroadcastReceiver mResetReceiver>;

        $r5 = r0.<com.android.server.net.LockdownVpnTracker: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r6, $r4, "android.permission.NETWORK_STACK", $r5);

        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void handleStateChangedLocked()>();

        return;
    }

    public static boolean isEnabled()
    {
        android.security.KeyStore $r0;
        boolean $z0;

        $r0 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        $z0 = virtualinvoke $r0.<android.security.KeyStore: boolean contains(java.lang.String)>("LOCKDOWN_VPN");

        return $z0;
    }

    private void showNotification(int, int)
    {
        com.android.server.net.LockdownVpnTracker r0;
        int i0, i1, $i2;
        android.app.Notification$Builder r1, $r2, $r5, $r6, $r9, $r12, $r14, $r15, $r19;
        java.lang.String $r3, $r8, $r11, $r17;
        android.content.Context $r4, $r7, $r10, $r16, $r20, $r21;
        android.app.PendingIntent $r13, $r18;
        android.app.NotificationManager $r22;
        android.app.Notification $r23;

        r0 := @this: com.android.server.net.LockdownVpnTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new android.app.Notification$Builder;

        $r4 = r0.<com.android.server.net.LockdownVpnTracker: android.content.Context mContext>;

        $r3 = <com.android.internal.notification.SystemNotificationChannels: java.lang.String VPN>;

        specialinvoke $r2.<android.app.Notification$Builder: void <init>(android.content.Context,java.lang.String)>($r4, $r3);

        $r5 = virtualinvoke $r2.<android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>(0L);

        $r6 = virtualinvoke $r5.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>(i1);

        $r7 = r0.<com.android.server.net.LockdownVpnTracker: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.String getString(int)>(i0);

        $r9 = virtualinvoke $r6.<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>($r8);

        $r10 = r0.<com.android.server.net.LockdownVpnTracker: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.String getString(int)>(17041426);

        $r12 = virtualinvoke $r9.<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>($r11);

        $r13 = r0.<com.android.server.net.LockdownVpnTracker: android.app.PendingIntent mConfigIntent>;

        $r14 = virtualinvoke $r12.<android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>($r13);

        $r15 = virtualinvoke $r14.<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>(1);

        $r16 = r0.<com.android.server.net.LockdownVpnTracker: android.content.Context mContext>;

        $r17 = virtualinvoke $r16.<android.content.Context: java.lang.String getString(int)>(17041127);

        $r18 = r0.<com.android.server.net.LockdownVpnTracker: android.app.PendingIntent mResetIntent>;

        $r19 = virtualinvoke $r15.<android.app.Notification$Builder: android.app.Notification$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>(17302734, $r17, $r18);

        $r20 = r0.<com.android.server.net.LockdownVpnTracker: android.content.Context mContext>;

        $i2 = virtualinvoke $r20.<android.content.Context: int getColor(int)>(17170460);

        r1 = virtualinvoke $r19.<android.app.Notification$Builder: android.app.Notification$Builder setColor(int)>($i2);

        $r21 = r0.<com.android.server.net.LockdownVpnTracker: android.content.Context mContext>;

        $r22 = staticinvoke <android.app.NotificationManager: android.app.NotificationManager 'from'(android.content.Context)>($r21);

        $r23 = virtualinvoke r1.<android.app.Notification$Builder: android.app.Notification build()>();

        virtualinvoke $r22.<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>(null, 20, $r23);

        return;
    }

    private void shutdownLocked()
    {
        com.android.server.net.LockdownVpnTracker r0;
        com.android.server.connectivity.Vpn $r1, $r2, $r5;
        android.content.BroadcastReceiver $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.net.LockdownVpnTracker;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("LockdownVpnTracker", "shutdownLocked()");

        r0.<com.android.server.net.LockdownVpnTracker: java.lang.String mAcceptedEgressIface> = null;

        r0.<com.android.server.net.LockdownVpnTracker: int mErrorCount> = 0;

        $r1 = r0.<com.android.server.net.LockdownVpnTracker: com.android.server.connectivity.Vpn mVpn>;

        virtualinvoke $r1.<com.android.server.connectivity.Vpn: void stopVpnRunnerPrivileged()>();

        $r2 = r0.<com.android.server.net.LockdownVpnTracker: com.android.server.connectivity.Vpn mVpn>;

        virtualinvoke $r2.<com.android.server.connectivity.Vpn: void setLockdown(boolean)>(0);

        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void hideNotification()>();

        $r4 = r0.<com.android.server.net.LockdownVpnTracker: android.content.Context mContext>;

        $r3 = r0.<com.android.server.net.LockdownVpnTracker: android.content.BroadcastReceiver mResetReceiver>;

        virtualinvoke $r4.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r3);

        $r5 = r0.<com.android.server.net.LockdownVpnTracker: com.android.server.connectivity.Vpn mVpn>;

        virtualinvoke $r5.<com.android.server.connectivity.Vpn: void setEnableTeardown(boolean)>(1);

        return;
    }

    public void augmentNetworkInfo(android.net.NetworkInfo)
    {
        com.android.server.net.LockdownVpnTracker r0;
        android.net.NetworkInfo r1, r2;
        boolean $z0;
        com.android.server.connectivity.Vpn $r3;
        android.net.NetworkInfo$DetailedState $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.net.LockdownVpnTracker;

        r1 := @parameter0: android.net.NetworkInfo;

        $z0 = virtualinvoke r1.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.net.LockdownVpnTracker: com.android.server.connectivity.Vpn mVpn>;

        r2 = virtualinvoke $r3.<com.android.server.connectivity.Vpn: android.net.NetworkInfo getNetworkInfo()>();

        $r4 = virtualinvoke r2.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        $r5 = virtualinvoke r2.<android.net.NetworkInfo: java.lang.String getReason()>();

        virtualinvoke r1.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r4, $r5, null);

     label1:
        return;
    }

    public void init()
    {
        com.android.server.net.LockdownVpnTracker r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.net.LockdownVpnTracker;

        r1 = r0.<com.android.server.net.LockdownVpnTracker: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void initLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onNetworkInfoChanged()
    {
        com.android.server.net.LockdownVpnTracker r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.net.LockdownVpnTracker;

        r1 = r0.<com.android.server.net.LockdownVpnTracker: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void handleStateChangedLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onVpnStateChanged(android.net.NetworkInfo)
    {
        com.android.server.net.LockdownVpnTracker r0;
        java.lang.Object r1;
        android.net.NetworkInfo$DetailedState $r2, $r3;
        int $i0, $i1;
        java.lang.Throwable $r4;
        android.net.NetworkInfo r5;

        r0 := @this: com.android.server.net.LockdownVpnTracker;

        r5 := @parameter0: android.net.NetworkInfo;

        $r2 = virtualinvoke r5.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        $r3 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState FAILED>;

        if $r2 != $r3 goto label1;

        $i0 = r0.<com.android.server.net.LockdownVpnTracker: int mErrorCount>;

        $i1 = $i0 + 1;

        r0.<com.android.server.net.LockdownVpnTracker: int mErrorCount> = $i1;

     label1:
        r1 = r0.<com.android.server.net.LockdownVpnTracker: java.lang.Object mStateLock>;

        entermonitor r1;

     label2:
        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void handleStateChangedLocked()>();

        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void reset()
    {
        com.android.server.net.LockdownVpnTracker r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.net.LockdownVpnTracker;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("LockdownVpnTracker", "reset()");

        r1 = r0.<com.android.server.net.LockdownVpnTracker: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void shutdownLocked()>();

        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void initLocked()>();

        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void handleStateChangedLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void shutdown()
    {
        com.android.server.net.LockdownVpnTracker r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.net.LockdownVpnTracker;

        r1 = r0.<com.android.server.net.LockdownVpnTracker: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.net.LockdownVpnTracker: void shutdownLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.net.LockdownVpnTracker: java.lang.String TAG> = "LockdownVpnTracker";

        <com.android.server.net.LockdownVpnTracker: int MAX_ERROR_COUNT> = 4;

        <com.android.server.net.LockdownVpnTracker: java.lang.String ACTION_LOCKDOWN_RESET> = "com.android.server.action.LOCKDOWN_RESET";

        return;
    }
}
