public class com.android.server.net.NetworkPinner extends android.net.ConnectivityManager$NetworkCallback
{
    private static final java.lang.String TAG;
    private static android.net.ConnectivityManager sCM;
    private static com.android.server.net.NetworkPinner$Callback sCallback;
    protected static final java.lang.Object sLock;
    protected static android.net.Network sNetwork;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.Object $r2;

        $r0 = class "Lcom/android/server/net/NetworkPinner;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.net.NetworkPinner: java.lang.String TAG> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <com.android.server.net.NetworkPinner: java.lang.Object sLock> = $r2;

        return;
    }

    public void <init>()
    {
        com.android.server.net.NetworkPinner r0;

        r0 := @this: com.android.server.net.NetworkPinner;

        specialinvoke r0.<android.net.ConnectivityManager$NetworkCallback: void <init>()>();

        return;
    }

    static com.android.server.net.NetworkPinner$Callback access$000()
    {
        com.android.server.net.NetworkPinner$Callback $r0;

        $r0 = <com.android.server.net.NetworkPinner: com.android.server.net.NetworkPinner$Callback sCallback>;

        return $r0;
    }

    static android.net.ConnectivityManager access$100()
    {
        android.net.ConnectivityManager $r0;

        $r0 = <com.android.server.net.NetworkPinner: android.net.ConnectivityManager sCM>;

        return $r0;
    }

    static java.lang.String access$200()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.net.NetworkPinner: java.lang.String TAG>;

        return $r0;
    }

    private static void maybeInitConnectivityManager(android.content.Context)
    {
        android.net.ConnectivityManager $r0, r4;
        java.lang.Object $r1;
        java.lang.IllegalStateException $r2;
        android.content.Context r3;

        r3 := @parameter0: android.content.Context;

        $r0 = <com.android.server.net.NetworkPinner: android.net.ConnectivityManager sCM>;

        if $r0 != null goto label2;

        $r1 = virtualinvoke r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r4 = (android.net.ConnectivityManager) $r1;

        <com.android.server.net.NetworkPinner: android.net.ConnectivityManager sCM> = r4;

        if r4 == null goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Bad luck, ConnectivityService not started.");

        throw $r2;

     label2:
        return;
    }

    public static void pin(android.content.Context, android.net.NetworkRequest)
    {
        android.net.NetworkRequest r0;
        java.lang.Object r1;
        com.android.server.net.NetworkPinner$Callback $r2, r8;
        android.net.ConnectivityManager $r3;
        java.lang.Throwable $r4, $r5;
        java.lang.String $r6;
        android.content.Context r7;

        r7 := @parameter0: android.content.Context;

        r0 := @parameter1: android.net.NetworkRequest;

        r1 = <com.android.server.net.NetworkPinner: java.lang.Object sLock>;

        entermonitor r1;

     label01:
        $r2 = <com.android.server.net.NetworkPinner: com.android.server.net.NetworkPinner$Callback sCallback>;

        if $r2 != null goto label06;

        staticinvoke <com.android.server.net.NetworkPinner: void maybeInitConnectivityManager(android.content.Context)>(r7);

        r8 = new com.android.server.net.NetworkPinner$Callback;

        specialinvoke r8.<com.android.server.net.NetworkPinner$Callback: void <init>(com.android.server.net.NetworkPinner$1)>(null);

        <com.android.server.net.NetworkPinner: com.android.server.net.NetworkPinner$Callback sCallback> = r8;

     label02:
        $r3 = <com.android.server.net.NetworkPinner: android.net.ConnectivityManager sCM>;

        virtualinvoke $r3.<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>(r0, r8);

     label03:
        goto label06;

     label04:
        $r5 := @caughtexception;

     label05:
        $r6 = <com.android.server.net.NetworkPinner: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Failed to register network callback", $r5);

        <com.android.server.net.NetworkPinner: com.android.server.net.NetworkPinner$Callback sCallback> = null;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.SecurityException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public static void unpin()
    {
        java.lang.Object r0;
        android.net.ConnectivityManager $r1, $r3;
        com.android.server.net.NetworkPinner$Callback $r2, r7;
        java.lang.Throwable $r4, $r5;
        java.lang.String $r6;

        r0 = <com.android.server.net.NetworkPinner: java.lang.Object sLock>;

        entermonitor r0;

     label01:
        r7 = <com.android.server.net.NetworkPinner: com.android.server.net.NetworkPinner$Callback sCallback>;

     label02:
        if r7 == null goto label08;

     label03:
        $r1 = <com.android.server.net.NetworkPinner: android.net.ConnectivityManager sCM>;

        virtualinvoke $r1.<android.net.ConnectivityManager: boolean bindProcessToNetwork(android.net.Network)>(null);

        $r3 = <com.android.server.net.NetworkPinner: android.net.ConnectivityManager sCM>;

        $r2 = <com.android.server.net.NetworkPinner: com.android.server.net.NetworkPinner$Callback sCallback>;

        virtualinvoke $r3.<android.net.ConnectivityManager: void unregisterNetworkCallback(android.net.ConnectivityManager$NetworkCallback)>($r2);

     label04:
        goto label07;

     label05:
        $r5 := @caughtexception;

     label06:
        $r6 = <com.android.server.net.NetworkPinner: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Failed to unregister network callback", $r5);

     label07:
        <com.android.server.net.NetworkPinner: com.android.server.net.NetworkPinner$Callback sCallback> = null;

        <com.android.server.net.NetworkPinner: android.net.Network sNetwork> = null;

     label08:
        exitmonitor r0;

     label09:
        return;

     label10:
        $r4 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.SecurityException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }
}
