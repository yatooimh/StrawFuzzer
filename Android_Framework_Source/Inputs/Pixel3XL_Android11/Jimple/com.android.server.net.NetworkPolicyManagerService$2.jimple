class com.android.server.net.NetworkPolicyManagerService$2 extends java.lang.Object implements android.os.PowerManagerInternal$LowPowerModeListener
{
    final com.android.server.net.NetworkPolicyManagerService this$0;

    void <init>(com.android.server.net.NetworkPolicyManagerService)
    {
        com.android.server.net.NetworkPolicyManagerService$2 r0;
        com.android.server.net.NetworkPolicyManagerService r1;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$2;

        r1 := @parameter0: com.android.server.net.NetworkPolicyManagerService;

        r0.<com.android.server.net.NetworkPolicyManagerService$2: com.android.server.net.NetworkPolicyManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getServiceType()
    {
        com.android.server.net.NetworkPolicyManagerService$2 r0;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$2;

        return 10;
    }

    public void onLowPowerModeChanged(android.os.PowerSaveState)
    {
        com.android.server.net.NetworkPolicyManagerService$2 r0;
        java.lang.Object r1;
        com.android.server.net.NetworkPolicyManagerService $r2, $r3;
        java.lang.Throwable $r4;
        android.os.PowerSaveState r5;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$2;

        r5 := @parameter0: android.os.PowerSaveState;

        $r2 = r0.<com.android.server.net.NetworkPolicyManagerService$2: com.android.server.net.NetworkPolicyManagerService this$0>;

        r1 = $r2.<com.android.server.net.NetworkPolicyManagerService: java.lang.Object mUidRulesFirstLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.net.NetworkPolicyManagerService$2: com.android.server.net.NetworkPolicyManagerService this$0>;

        virtualinvoke $r3.<com.android.server.net.NetworkPolicyManagerService: void updateRestrictBackgroundByLowPowerModeUL(android.os.PowerSaveState)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
