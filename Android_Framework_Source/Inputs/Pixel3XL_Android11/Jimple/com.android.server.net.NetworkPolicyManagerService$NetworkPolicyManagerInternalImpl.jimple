class com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl extends com.android.server.net.NetworkPolicyManagerInternal
{
    final com.android.server.net.NetworkPolicyManagerService this$0;

    private void <init>(com.android.server.net.NetworkPolicyManagerService)
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        com.android.server.net.NetworkPolicyManagerService r1;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        r1 := @parameter0: com.android.server.net.NetworkPolicyManagerService;

        r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0> = r1;

        specialinvoke r0.<com.android.server.net.NetworkPolicyManagerInternal: void <init>()>();

        return;
    }

    void <init>(com.android.server.net.NetworkPolicyManagerService, com.android.server.net.NetworkPolicyManagerService$1)
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        com.android.server.net.NetworkPolicyManagerService r1;
        com.android.server.net.NetworkPolicyManagerService$1 r2;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        r1 := @parameter0: com.android.server.net.NetworkPolicyManagerService;

        r2 := @parameter1: com.android.server.net.NetworkPolicyManagerService$1;

        specialinvoke r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: void <init>(com.android.server.net.NetworkPolicyManagerService)>(r1);

        return;
    }

    public long getSubscriptionOpportunisticQuota(android.net.Network, int)
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        int i0, $i2;
        java.lang.Object r1;
        long l1, $l4, $l5;
        com.android.server.net.NetworkPolicyManagerService $r2, $r3, $r4, $r6, $r9;
        android.util.SparseLongArray $r5;
        byte $b3;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.content.Context $r7, $r10;
        android.content.ContentResolver $r8, $r11;
        java.lang.Throwable $r12;
        android.net.Network r13;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        r13 := @parameter0: android.net.Network;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        r1 = $r2.<com.android.server.net.NetworkPolicyManagerService: java.lang.Object mNetworkPoliciesSecondLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r5 = $r3.<com.android.server.net.NetworkPolicyManagerService: android.util.SparseLongArray mSubscriptionOpportunisticQuota>;

        $r4 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $i2 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: int access$4200(com.android.server.net.NetworkPolicyManagerService,android.net.Network)>($r4, r13);

        l1 = virtualinvoke $r5.<android.util.SparseLongArray: long get(int,long)>($i2, -1L);

        exitmonitor r1;

     label2:
        $b3 = l1 cmp -1L;

        if $b3 != 0 goto label3;

        return -1L;

     label3:
        if i0 != 1 goto label4;

        $f3 = (float) l1;

        $r9 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r10 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: android.content.Context access$1400(com.android.server.net.NetworkPolicyManagerService)>($r9);

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $f4 = staticinvoke <android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String,float)>($r11, "netpolicy_quota_frac_jobs", 0.5F);

        $f5 = $f3 * $f4;

        $l5 = (long) $f5;

        return $l5;

     label4:
        if i0 != 2 goto label5;

        $f0 = (float) l1;

        $r6 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r7 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: android.content.Context access$1400(com.android.server.net.NetworkPolicyManagerService)>($r6);

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $f1 = staticinvoke <android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String,float)>($r8, "netpolicy_quota_frac_multipath", 0.5F);

        $f2 = $f0 * $f1;

        $l4 = (long) $f2;

        return $l4;

     label5:
        return -1L;

     label6:
        $r12 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public android.telephony.SubscriptionPlan getSubscriptionPlan(android.net.Network)
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        java.lang.Object r1;
        int i0;
        com.android.server.net.NetworkPolicyManagerService $r2, $r3, $r4;
        java.lang.Throwable $r5;
        android.net.Network r6;
        android.telephony.SubscriptionPlan r7;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        r6 := @parameter0: android.net.Network;

        $r2 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        r1 = $r2.<com.android.server.net.NetworkPolicyManagerService: java.lang.Object mNetworkPoliciesSecondLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        i0 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: int access$4200(com.android.server.net.NetworkPolicyManagerService,android.net.Network)>($r3, r6);

        $r4 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        r7 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: android.telephony.SubscriptionPlan access$4300(com.android.server.net.NetworkPolicyManagerService,int)>($r4, i0);

        exitmonitor r1;

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.telephony.SubscriptionPlan getSubscriptionPlan(android.net.NetworkTemplate)
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        java.lang.Object r1;
        int i0;
        com.android.server.net.NetworkPolicyManagerService $r2, $r3, $r4;
        java.lang.Throwable $r5;
        android.net.NetworkTemplate r6;
        android.telephony.SubscriptionPlan r7;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        r6 := @parameter0: android.net.NetworkTemplate;

        $r2 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        r1 = $r2.<com.android.server.net.NetworkPolicyManagerService: java.lang.Object mNetworkPoliciesSecondLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        i0 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: int access$4400(com.android.server.net.NetworkPolicyManagerService,android.net.NetworkTemplate)>($r3, r6);

        $r4 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        r7 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: android.telephony.SubscriptionPlan access$4300(com.android.server.net.NetworkPolicyManagerService,int)>($r4, i0);

        exitmonitor r1;

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isUidNetworkingBlocked(int, java.lang.String)
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        int i0, i2;
        long l1;
        boolean z0, z1, z2;
        com.android.server.net.NetworkPolicyManagerService $r1, $r3, $r4, $r6, $r7, $r8, $r10, $r12;
        com.android.internal.util.StatLogger $r2, $r13;
        android.util.SparseIntArray $r5;
        android.util.ArraySet $r9;
        com.android.server.net.NetworkPolicyLogger $r11;
        java.lang.Throwable $r14, $r15;
        java.lang.String r16;
        java.lang.Object r17, r18;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        i0 := @parameter0: int;

        r16 := @parameter1: java.lang.String;

        $r1 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r2 = $r1.<com.android.server.net.NetworkPolicyManagerService: com.android.internal.util.StatLogger mStatLogger>;

        l1 = virtualinvoke $r2.<com.android.internal.util.StatLogger: long getTime()>();

        $r3 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        r17 = $r3.<com.android.server.net.NetworkPolicyManagerService: java.lang.Object mUidRulesFirstLock>;

        entermonitor r17;

     label01:
        $r4 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r5 = $r4.<com.android.server.net.NetworkPolicyManagerService: android.util.SparseIntArray mUidRules>;

        i2 = virtualinvoke $r5.<android.util.SparseIntArray: int get(int,int)>(i0, 0);

        $r6 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        z1 = $r6.<com.android.server.net.NetworkPolicyManagerService: boolean mRestrictBackground>;

        exitmonitor r17;

     label02:
        $r7 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        r18 = $r7.<com.android.server.net.NetworkPolicyManagerService: java.lang.Object mNetworkPoliciesSecondLock>;

        entermonitor r18;

     label03:
        $r8 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r9 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: android.util.ArraySet access$2800(com.android.server.net.NetworkPolicyManagerService)>($r8);

        z0 = virtualinvoke $r9.<android.util.ArraySet: boolean contains(java.lang.Object)>(r16);

        exitmonitor r18;

     label04:
        $r10 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r11 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: com.android.server.net.NetworkPolicyLogger access$1800(com.android.server.net.NetworkPolicyManagerService)>($r10);

        z2 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: boolean isUidNetworkingBlockedInternal(int,int,boolean,boolean,com.android.server.net.NetworkPolicyLogger)>(i0, i2, z0, z1, $r11);

        $r12 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r13 = $r12.<com.android.server.net.NetworkPolicyManagerService: com.android.internal.util.StatLogger mStatLogger>;

        virtualinvoke $r13.<com.android.internal.util.StatLogger: long logDurationStat(int,long)>(1, l1);

        return z2;

     label05:
        $r15 := @caughtexception;

     label06:
        exitmonitor r18;

     label07:
        throw $r15;

     label08:
        $r14 := @caughtexception;

     label09:
        exitmonitor r17;

     label10:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isUidRestrictedOnMeteredNetworks(int)
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        java.lang.Object r1;
        boolean z0, $z1, $z2, z3;
        com.android.server.net.NetworkPolicyManagerService $r3, $r4, $r6;
        android.util.SparseIntArray $r5;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        r1 = $r3.<com.android.server.net.NetworkPolicyManagerService: java.lang.Object mUidRulesFirstLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r5 = $r4.<com.android.server.net.NetworkPolicyManagerService: android.util.SparseIntArray mUidRules>;

        i1 = virtualinvoke $r5.<android.util.SparseIntArray: int get(int,int)>(i0, 32);

        $r6 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        z0 = $r6.<com.android.server.net.NetworkPolicyManagerService: boolean mRestrictBackground>;

        exitmonitor r1;

     label2:
        z3 = 1;

        if z0 == 0 goto label3;

        $z1 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: boolean access$3900(int,int)>(i1, 1);

        if $z1 != 0 goto label3;

        $z2 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: boolean access$3900(int,int)>(i1, 2);

        if $z2 != 0 goto label3;

        goto label4;

     label3:
        z3 = 0;

     label4:
        return z3;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void onAdminDataAvailable()
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        com.android.server.net.NetworkPolicyManagerService $r1;
        java.util.concurrent.CountDownLatch $r2;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        $r1 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r2 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: java.util.concurrent.CountDownLatch access$4500(com.android.server.net.NetworkPolicyManagerService)>($r1);

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;
    }

    public void onStatsProviderLimitReached(java.lang.String)
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r3;
        com.android.server.net.NetworkPolicyManagerService $r7;
        android.os.Handler $r8;
        android.os.Message $r9;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onStatsProviderLimitReached: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("NetworkPolicy", $r6);

        $r7 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r8 = $r7.<com.android.server.net.NetworkPolicyManagerService: android.os.Handler mHandler>;

        $r9 = virtualinvoke $r8.<android.os.Handler: android.os.Message obtainMessage(int)>(20);

        virtualinvoke $r9.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void onTempPowerSaveWhitelistChange(int, boolean)
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        int i0;
        boolean z0, $z1;
        java.lang.Object r1;
        com.android.server.net.NetworkPolicyManagerService $r3, $r4, $r5, $r7, $r9, $r10;
        com.android.server.net.NetworkPolicyLogger $r6;
        android.util.SparseBooleanArray $r8, $r11;
        java.lang.Throwable $r12;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        r1 = $r3.<com.android.server.net.NetworkPolicyManagerService: java.lang.Object mUidRulesFirstLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $z1 = $r4.<com.android.server.net.NetworkPolicyManagerService: boolean mSystemReady>;

        if $z1 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r5 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r6 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: com.android.server.net.NetworkPolicyLogger access$1800(com.android.server.net.NetworkPolicyManagerService)>($r5);

        virtualinvoke $r6.<com.android.server.net.NetworkPolicyLogger: void tempPowerSaveWlChanged(int,boolean)>(i0, z0);

     label04:
        if z0 == 0 goto label07;

     label05:
        $r10 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r11 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: android.util.SparseBooleanArray access$4000(com.android.server.net.NetworkPolicyManagerService)>($r10);

        virtualinvoke $r11.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

     label06:
        goto label08;

     label07:
        $r7 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r8 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: android.util.SparseBooleanArray access$4000(com.android.server.net.NetworkPolicyManagerService)>($r7);

        virtualinvoke $r8.<android.util.SparseBooleanArray: void delete(int)>(i0);

     label08:
        $r9 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        staticinvoke <com.android.server.net.NetworkPolicyManagerService: void access$4100(com.android.server.net.NetworkPolicyManagerService,int)>($r9, i0);

        exitmonitor r1;

     label09:
        return;

     label10:
        $r12 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void resetUserState(int)
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        int i0;
        java.lang.Object r1, r10;
        boolean z1, $z2, z3;
        com.android.server.net.NetworkPolicyManagerService $r3, $r4, $r5, $r6, r9;
        java.lang.Throwable $r7, $r8;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        r1 = $r3.<com.android.server.net.NetworkPolicyManagerService: java.lang.Object mUidRulesFirstLock>;

        entermonitor r1;

     label01:
        r9 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

     label02:
        z1 = virtualinvoke r9.<com.android.server.net.NetworkPolicyManagerService: boolean removeUserStateUL(int,boolean,boolean)>(i0, 0, 1);

     label03:
        z3 = 1;

     label04:
        $r4 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $z2 = staticinvoke <com.android.server.net.NetworkPolicyManagerService: boolean access$1100(com.android.server.net.NetworkPolicyManagerService,int)>($r4, i0);

        if $z2 != 0 goto label07;

     label05:
        if z1 == 0 goto label06;

        z3 = 1;

        goto label07;

     label06:
        z3 = 0;

     label07:
        if z3 == 0 goto label14;

     label08:
        $r5 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        r10 = $r5.<com.android.server.net.NetworkPolicyManagerService: java.lang.Object mNetworkPoliciesSecondLock>;

        entermonitor r10;

     label09:
        $r6 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        virtualinvoke $r6.<com.android.server.net.NetworkPolicyManagerService: void writePolicyAL()>();

        exitmonitor r10;

     label10:
        goto label14;

     label11:
        $r7 := @caughtexception;

     label12:
        exitmonitor r10;

     label13:
        throw $r7;

     label14:
        exitmonitor r1;

     label15:
        return;

     label16:
        $r8 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void setAppIdleWhitelist(int, boolean)
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        int i0;
        boolean z0;
        com.android.server.net.NetworkPolicyManagerService $r1;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        virtualinvoke $r1.<com.android.server.net.NetworkPolicyManagerService: void setAppIdleWhitelist(int,boolean)>(i0, z0);

        return;
    }

    public void setMeteredRestrictedPackages(java.util.Set, int)
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        java.util.Set r1;
        int i0;
        com.android.server.net.NetworkPolicyManagerService $r2;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        r1 := @parameter0: java.util.Set;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        staticinvoke <com.android.server.net.NetworkPolicyManagerService: void access$3600(com.android.server.net.NetworkPolicyManagerService,java.util.Set,int)>($r2, r1, i0);

        return;
    }

    public void setMeteredRestrictedPackagesAsync(java.util.Set, int)
    {
        com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl r0;
        java.util.Set r1;
        int i0;
        com.android.server.net.NetworkPolicyManagerService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl;

        r1 := @parameter0: java.util.Set;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r3 = $r2.<com.android.server.net.NetworkPolicyManagerService: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(17, i0, 0, r1);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }
}
