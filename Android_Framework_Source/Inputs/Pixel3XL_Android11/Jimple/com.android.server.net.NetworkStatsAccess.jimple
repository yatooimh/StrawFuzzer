public final class com.android.server.net.NetworkStatsAccess extends java.lang.Object
{

    private void <init>()
    {
        com.android.server.net.NetworkStatsAccess r0;

        r0 := @this: com.android.server.net.NetworkStatsAccess;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int checkAccessLevel(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.app.admin.DevicePolicyManagerInternal r2;
        android.telephony.TelephonyManager r3;
        java.lang.Object $r4, $r5;
        int $i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2, z3, z4, z5;

        r0 := @parameter0: android.content.Context;

        i3 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/admin/DevicePolicyManagerInternal;");

        r2 = (android.app.admin.DevicePolicyManagerInternal) $r4;

        $r5 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r3 = (android.telephony.TelephonyManager) $r5;

        if r3 == null goto label01;

        $i2 = virtualinvoke r3.<android.telephony.TelephonyManager: int checkCarrierPrivilegesForPackageAnyPhone(java.lang.String)>(r1);

        if $i2 != 1 goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        if r2 == null goto label03;

        $z2 = virtualinvoke r2.<android.app.admin.DevicePolicyManagerInternal: boolean isActiveAdminWithPolicy(int,int)>(i3, -2);

        if $z2 == 0 goto label03;

        z4 = 1;

        goto label04;

     label03:
        z4 = 0;

     label04:
        if z3 != 0 goto label11;

        if z4 != 0 goto label11;

        $i0 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i3);

        if $i0 != 1000 goto label05;

        goto label11;

     label05:
        $z0 = staticinvoke <com.android.server.net.NetworkStatsAccess: boolean hasAppOpsPermission(android.content.Context,int,java.lang.String)>(r0, i3, r1);

        if $z0 != 0 goto label10;

        $i1 = virtualinvoke r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.READ_NETWORK_USAGE_HISTORY");

        if $i1 != 0 goto label06;

        goto label10;

     label06:
        if r2 == null goto label07;

        $z1 = virtualinvoke r2.<android.app.admin.DevicePolicyManagerInternal: boolean isActiveAdminWithPolicy(int,int)>(i3, -1);

        if $z1 == 0 goto label07;

        z5 = 1;

        goto label08;

     label07:
        z5 = 0;

     label08:
        if z5 == 0 goto label09;

        return 1;

     label09:
        return 0;

     label10:
        return 2;

     label11:
        return 3;
    }

    private static boolean hasAppOpsPermission(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        java.lang.Object $r2;
        android.app.AppOpsManager $r3;
        int $i0, i1, i2;
        boolean z1, z2;

        r0 := @parameter0: android.content.Context;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        z1 = 0;

        if r1 == null goto label4;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r3 = (android.app.AppOpsManager) $r2;

        i2 = virtualinvoke $r3.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(43, i1, r1);

        if i2 != 3 goto label2;

        $i0 = virtualinvoke r0.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.PACKAGE_USAGE_STATS");

        if $i0 != 0 goto label1;

        z1 = 1;

     label1:
        return z1;

     label2:
        z2 = 0;

        if i2 != 0 goto label3;

        z2 = 1;

     label3:
        return z2;

     label4:
        return 0;
    }

    public static boolean isAccessibleToUser(int, int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        boolean z2, z3, z4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z2 = 0;

        if i2 == 1 goto label6;

        if i2 == 2 goto label3;

        if i2 == 3 goto label2;

        if i0 != i1 goto label1;

        z2 = 1;

     label1:
        return z2;

     label2:
        return 1;

     label3:
        if i0 == 1000 goto label4;

        if i0 == -4 goto label4;

        if i0 == -5 goto label4;

        if i0 == -1 goto label4;

        z3 = 0;

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        if $i5 != $i6 goto label5;

     label4:
        z3 = 1;

     label5:
        return z3;

     label6:
        if i0 == 1000 goto label7;

        if i0 == -4 goto label7;

        if i0 == -5 goto label7;

        z4 = 0;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        if $i3 != $i4 goto label8;

     label7:
        z4 = 1;

     label8:
        return z4;
    }
}
