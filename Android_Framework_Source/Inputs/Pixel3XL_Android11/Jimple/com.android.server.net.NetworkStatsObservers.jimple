class com.android.server.net.NetworkStatsObservers extends java.lang.Object
{
    private static final boolean LOGV;
    private static final int MSG_REGISTER;
    private static final int MSG_UNREGISTER;
    private static final int MSG_UPDATE_STATS;
    private static final java.lang.String TAG;
    private final android.util.SparseArray mDataUsageRequests;
    private volatile android.os.Handler mHandler;
    private android.os.Handler$Callback mHandlerCallback;
    private final java.util.concurrent.atomic.AtomicInteger mNextDataUsageRequestId;

    void <init>()
    {
        com.android.server.net.NetworkStatsObservers r0;
        android.util.SparseArray $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        com.android.server.net.NetworkStatsObservers$1 $r3;

        r0 := @this: com.android.server.net.NetworkStatsObservers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.net.NetworkStatsObservers: android.util.SparseArray mDataUsageRequests> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<com.android.server.net.NetworkStatsObservers: java.util.concurrent.atomic.AtomicInteger mNextDataUsageRequestId> = $r2;

        $r3 = new com.android.server.net.NetworkStatsObservers$1;

        specialinvoke $r3.<com.android.server.net.NetworkStatsObservers$1: void <init>(com.android.server.net.NetworkStatsObservers)>(r0);

        r0.<com.android.server.net.NetworkStatsObservers: android.os.Handler$Callback mHandlerCallback> = $r3;

        return;
    }

    static void access$000(com.android.server.net.NetworkStatsObservers, com.android.server.net.NetworkStatsObservers$RequestInfo)
    {
        com.android.server.net.NetworkStatsObservers r0;
        com.android.server.net.NetworkStatsObservers$RequestInfo r1;

        r0 := @parameter0: com.android.server.net.NetworkStatsObservers;

        r1 := @parameter1: com.android.server.net.NetworkStatsObservers$RequestInfo;

        specialinvoke r0.<com.android.server.net.NetworkStatsObservers: void handleRegister(com.android.server.net.NetworkStatsObservers$RequestInfo)>(r1);

        return;
    }

    static void access$100(com.android.server.net.NetworkStatsObservers, android.net.DataUsageRequest, int)
    {
        com.android.server.net.NetworkStatsObservers r0;
        android.net.DataUsageRequest r1;
        int i0;

        r0 := @parameter0: com.android.server.net.NetworkStatsObservers;

        r1 := @parameter1: android.net.DataUsageRequest;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.net.NetworkStatsObservers: void handleUnregister(android.net.DataUsageRequest,int)>(r1, i0);

        return;
    }

    static void access$200(com.android.server.net.NetworkStatsObservers, com.android.server.net.NetworkStatsObservers$StatsContext)
    {
        com.android.server.net.NetworkStatsObservers r0;
        com.android.server.net.NetworkStatsObservers$StatsContext r1;

        r0 := @parameter0: com.android.server.net.NetworkStatsObservers;

        r1 := @parameter1: com.android.server.net.NetworkStatsObservers$StatsContext;

        specialinvoke r0.<com.android.server.net.NetworkStatsObservers: void handleUpdateStats(com.android.server.net.NetworkStatsObservers$StatsContext)>(r1);

        return;
    }

    private android.net.DataUsageRequest buildRequest(android.net.DataUsageRequest)
    {
        com.android.server.net.NetworkStatsObservers r0;
        android.net.DataUsageRequest r1, $r3;
        long l0, $l1, $l2, $l3;
        byte $b4;
        java.util.concurrent.atomic.AtomicInteger $r4;
        int $i5;
        android.net.NetworkTemplate $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r12;

        r0 := @this: com.android.server.net.NetworkStatsObservers;

        r1 := @parameter0: android.net.DataUsageRequest;

        $l2 = <android.app.usage.NetworkStatsManager: long MIN_THRESHOLD_BYTES>;

        $l1 = r1.<android.net.DataUsageRequest: long thresholdInBytes>;

        l0 = staticinvoke <java.lang.Math: long max(long,long)>($l2, $l1);

        $l3 = r1.<android.net.DataUsageRequest: long thresholdInBytes>;

        $b4 = l0 cmp $l3;

        if $b4 >= 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Threshold was too low for ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Overriding to a safer default of ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NetworkStatsObservers", $r12);

     label1:
        $r3 = new android.net.DataUsageRequest;

        $r4 = r0.<com.android.server.net.NetworkStatsObservers: java.util.concurrent.atomic.AtomicInteger mNextDataUsageRequestId>;

        $i5 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r5 = r1.<android.net.DataUsageRequest: android.net.NetworkTemplate template>;

        specialinvoke $r3.<android.net.DataUsageRequest: void <init>(int,android.net.NetworkTemplate,long)>($i5, $r5, l0);

        return $r3;
    }

    private com.android.server.net.NetworkStatsObservers$RequestInfo buildRequestInfo(android.net.DataUsageRequest, android.os.Messenger, android.os.IBinder, int, int)
    {
        com.android.server.net.NetworkStatsObservers r0;
        android.net.DataUsageRequest r1;
        android.os.Messenger r2;
        android.os.IBinder r3;
        int i0, i1;
        com.android.server.net.NetworkStatsObservers$NetworkUsageRequestInfo $r4;
        com.android.server.net.NetworkStatsObservers$UserUsageRequestInfo $r5;
        boolean z0;

        r0 := @this: com.android.server.net.NetworkStatsObservers;

        r1 := @parameter0: android.net.DataUsageRequest;

        r2 := @parameter1: android.os.Messenger;

        r3 := @parameter2: android.os.IBinder;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 = 1;

        if i1 > 1 goto label1;

        $r5 = new com.android.server.net.NetworkStatsObservers$UserUsageRequestInfo;

        specialinvoke $r5.<com.android.server.net.NetworkStatsObservers$UserUsageRequestInfo: void <init>(com.android.server.net.NetworkStatsObservers,android.net.DataUsageRequest,android.os.Messenger,android.os.IBinder,int,int)>(r0, r1, r2, r3, i0, i1);

        return $r5;

     label1:
        if i1 < 2 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z0);

        $r4 = new com.android.server.net.NetworkStatsObservers$NetworkUsageRequestInfo;

        specialinvoke $r4.<com.android.server.net.NetworkStatsObservers$NetworkUsageRequestInfo: void <init>(com.android.server.net.NetworkStatsObservers,android.net.DataUsageRequest,android.os.Messenger,android.os.IBinder,int,int)>(r0, r1, r2, r3, i0, i1);

        return $r4;
    }

    private android.os.Handler getHandler()
    {
        com.android.server.net.NetworkStatsObservers r0;
        android.os.Handler $r1, $r2, $r3, r7;
        android.os.Looper $r4;
        android.os.Handler$Callback $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.net.NetworkStatsObservers;

        $r1 = r0.<com.android.server.net.NetworkStatsObservers: android.os.Handler mHandler>;

        if $r1 != null goto label7;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.net.NetworkStatsObservers: android.os.Handler mHandler>;

        if $r3 != null goto label2;

        r7 = new android.os.Handler;

        $r4 = virtualinvoke r0.<com.android.server.net.NetworkStatsObservers: android.os.Looper getHandlerLooperLocked()>();

        $r5 = r0.<com.android.server.net.NetworkStatsObservers: android.os.Handler$Callback mHandlerCallback>;

        specialinvoke r7.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r4, $r5);

        r0.<com.android.server.net.NetworkStatsObservers: android.os.Handler mHandler> = r7;

     label2:
        exitmonitor r0;

     label3:
        goto label7;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r6;

     label7:
        $r2 = r0.<com.android.server.net.NetworkStatsObservers: android.os.Handler mHandler>;

        return $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void handleRegister(com.android.server.net.NetworkStatsObservers$RequestInfo)
    {
        com.android.server.net.NetworkStatsObservers r0;
        com.android.server.net.NetworkStatsObservers$RequestInfo r1;
        android.net.DataUsageRequest $r2;
        int $i0;
        android.util.SparseArray $r3;

        r0 := @this: com.android.server.net.NetworkStatsObservers;

        r1 := @parameter0: com.android.server.net.NetworkStatsObservers$RequestInfo;

        $r3 = r0.<com.android.server.net.NetworkStatsObservers: android.util.SparseArray mDataUsageRequests>;

        $r2 = r1.<com.android.server.net.NetworkStatsObservers$RequestInfo: android.net.DataUsageRequest mRequest>;

        $i0 = $r2.<android.net.DataUsageRequest: int requestId>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, r1);

        return;
    }

    private void handleUnregister(android.net.DataUsageRequest, int)
    {
        com.android.server.net.NetworkStatsObservers r0;
        android.net.DataUsageRequest r1;
        int i0, $i1, $i2, $i3;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5;
        java.lang.String $r10;
        com.android.server.net.NetworkStatsObservers$RequestInfo r11;

        r0 := @this: com.android.server.net.NetworkStatsObservers;

        r1 := @parameter0: android.net.DataUsageRequest;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.net.NetworkStatsObservers: android.util.SparseArray mDataUsageRequests>;

        $i1 = r1.<android.net.DataUsageRequest: int requestId>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r11 = (com.android.server.net.NetworkStatsObservers$RequestInfo) $r3;

        if r11 != null goto label1;

        return;

     label1:
        if 1000 == i0 goto label2;

        $i3 = r11.<com.android.server.net.NetworkStatsObservers$RequestInfo: int mCallingUid>;

        if $i3 == i0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller uid ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not owner of ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NetworkStatsObservers", $r10);

        return;

     label2:
        $r4 = r0.<com.android.server.net.NetworkStatsObservers: android.util.SparseArray mDataUsageRequests>;

        $i2 = r1.<android.net.DataUsageRequest: int requestId>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>($i2);

        staticinvoke <com.android.server.net.NetworkStatsObservers$RequestInfo: void access$300(com.android.server.net.NetworkStatsObservers$RequestInfo)>(r11);

        staticinvoke <com.android.server.net.NetworkStatsObservers$RequestInfo: void access$400(com.android.server.net.NetworkStatsObservers$RequestInfo,int)>(r11, 1);

        return;
    }

    private void handleUpdateStats(com.android.server.net.NetworkStatsObservers$StatsContext)
    {
        com.android.server.net.NetworkStatsObservers r0;
        com.android.server.net.NetworkStatsObservers$StatsContext r1;
        android.util.SparseArray $r2, $r3, $r4;
        int $i0, $i1, i2;
        java.lang.Object $r5;
        com.android.server.net.NetworkStatsObservers$RequestInfo $r6;

        r0 := @this: com.android.server.net.NetworkStatsObservers;

        r1 := @parameter0: com.android.server.net.NetworkStatsObservers$StatsContext;

        $r2 = r0.<com.android.server.net.NetworkStatsObservers: android.util.SparseArray mDataUsageRequests>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        i2 = 0;

     label2:
        $r3 = r0.<com.android.server.net.NetworkStatsObservers: android.util.SparseArray mDataUsageRequests>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i2 >= $i1 goto label3;

        $r4 = r0.<com.android.server.net.NetworkStatsObservers: android.util.SparseArray mDataUsageRequests>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r6 = (com.android.server.net.NetworkStatsObservers$RequestInfo) $r5;

        staticinvoke <com.android.server.net.NetworkStatsObservers$RequestInfo: void access$500(com.android.server.net.NetworkStatsObservers$RequestInfo,com.android.server.net.NetworkStatsObservers$StatsContext)>($r6, r1);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    protected android.os.Looper getHandlerLooperLocked()
    {
        com.android.server.net.NetworkStatsObservers r0;
        android.os.HandlerThread $r2;
        android.os.Looper $r3;

        r0 := @this: com.android.server.net.NetworkStatsObservers;

        $r2 = new android.os.HandlerThread;

        specialinvoke $r2.<android.os.HandlerThread: void <init>(java.lang.String)>("NetworkStatsObservers");

        virtualinvoke $r2.<android.os.HandlerThread: void start()>();

        $r3 = virtualinvoke $r2.<android.os.HandlerThread: android.os.Looper getLooper()>();

        return $r3;
    }

    public android.net.DataUsageRequest register(android.net.DataUsageRequest, android.os.Messenger, android.os.IBinder, int, int)
    {
        com.android.server.net.NetworkStatsObservers r0;
        android.os.IBinder r1;
        int i0, i1;
        android.os.Handler $r2, $r3;
        android.os.Message $r4;
        android.net.DataUsageRequest r5, r7;
        android.os.Messenger r6;
        com.android.server.net.NetworkStatsObservers$RequestInfo r8;

        r0 := @this: com.android.server.net.NetworkStatsObservers;

        r5 := @parameter0: android.net.DataUsageRequest;

        r6 := @parameter1: android.os.Messenger;

        r1 := @parameter2: android.os.IBinder;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r7 = specialinvoke r0.<com.android.server.net.NetworkStatsObservers: android.net.DataUsageRequest buildRequest(android.net.DataUsageRequest)>(r5);

        r8 = specialinvoke r0.<com.android.server.net.NetworkStatsObservers: com.android.server.net.NetworkStatsObservers$RequestInfo buildRequestInfo(android.net.DataUsageRequest,android.os.Messenger,android.os.IBinder,int,int)>(r7, r6, r1, i0, i1);

        $r2 = specialinvoke r0.<com.android.server.net.NetworkStatsObservers: android.os.Handler getHandler()>();

        $r3 = r0.<com.android.server.net.NetworkStatsObservers: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r8);

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return r7;
    }

    public void unregister(android.net.DataUsageRequest, int)
    {
        com.android.server.net.NetworkStatsObservers r0;
        android.net.DataUsageRequest r1;
        int i0;
        android.os.Handler $r2, $r3;
        android.os.Message $r4;

        r0 := @this: com.android.server.net.NetworkStatsObservers;

        r1 := @parameter0: android.net.DataUsageRequest;

        i0 := @parameter1: int;

        $r2 = specialinvoke r0.<com.android.server.net.NetworkStatsObservers: android.os.Handler getHandler()>();

        $r3 = r0.<com.android.server.net.NetworkStatsObservers: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(2, i0, 0, r1);

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    public void updateStats(android.net.NetworkStats, android.net.NetworkStats, android.util.ArrayMap, android.util.ArrayMap, long)
    {
        com.android.server.net.NetworkStatsObservers r0;
        android.net.NetworkStats r1, r8;
        android.util.ArrayMap r2, r3;
        long l0;
        com.android.server.net.NetworkStatsObservers$StatsContext $r4;
        android.os.Handler $r5, $r6;
        android.os.Message $r7;

        r0 := @this: com.android.server.net.NetworkStatsObservers;

        r8 := @parameter0: android.net.NetworkStats;

        r1 := @parameter1: android.net.NetworkStats;

        r2 := @parameter2: android.util.ArrayMap;

        r3 := @parameter3: android.util.ArrayMap;

        l0 := @parameter4: long;

        $r4 = new com.android.server.net.NetworkStatsObservers$StatsContext;

        specialinvoke $r4.<com.android.server.net.NetworkStatsObservers$StatsContext: void <init>(android.net.NetworkStats,android.net.NetworkStats,android.util.ArrayMap,android.util.ArrayMap,long)>(r8, r1, r2, r3, l0);

        $r5 = specialinvoke r0.<com.android.server.net.NetworkStatsObservers: android.os.Handler getHandler()>();

        $r6 = r0.<com.android.server.net.NetworkStatsObservers: android.os.Handler mHandler>;

        $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r4);

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>($r7);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.net.NetworkStatsObservers: java.lang.String TAG> = "NetworkStatsObservers";

        <com.android.server.net.NetworkStatsObservers: int MSG_UPDATE_STATS> = 3;

        <com.android.server.net.NetworkStatsObservers: int MSG_UNREGISTER> = 2;

        <com.android.server.net.NetworkStatsObservers: int MSG_REGISTER> = 1;

        <com.android.server.net.NetworkStatsObservers: boolean LOGV> = 0;

        return;
    }
}
