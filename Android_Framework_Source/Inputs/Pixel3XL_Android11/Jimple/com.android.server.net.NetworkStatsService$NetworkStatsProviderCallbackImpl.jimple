class com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl extends android.net.netstats.provider.INetworkStatsProviderCallback$Stub implements android.os.IBinder$DeathRecipient
{
    final android.net.INetworkManagementEventObserver mAlertObserver;
    private final android.net.NetworkStats mIfaceStats;
    final android.net.netstats.provider.INetworkStatsProvider mProvider;
    private final java.lang.Object mProviderStatsLock;
    private final java.util.concurrent.Semaphore mSemaphore;
    final java.util.concurrent.CopyOnWriteArrayList mStatsProviderCbList;
    final java.lang.String mTag;
    private final android.net.NetworkStats mUidStats;

    void <init>(java.lang.String, android.net.netstats.provider.INetworkStatsProvider, java.util.concurrent.Semaphore, android.net.INetworkManagementEventObserver, java.util.concurrent.CopyOnWriteArrayList) throws android.os.RemoteException
    {
        com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl r0;
        java.lang.String r1;
        android.net.netstats.provider.INetworkStatsProvider r2;
        java.util.concurrent.Semaphore r3;
        android.net.INetworkManagementEventObserver r4;
        java.util.concurrent.CopyOnWriteArrayList r5;
        java.lang.Object $r6;
        android.net.NetworkStats $r7, $r8;
        android.os.IBinder $r9;

        r0 := @this: com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.netstats.provider.INetworkStatsProvider;

        r3 := @parameter2: java.util.concurrent.Semaphore;

        r4 := @parameter3: android.net.INetworkManagementEventObserver;

        r5 := @parameter4: java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke r0.<android.net.netstats.provider.INetworkStatsProviderCallback$Stub: void <init>()>();

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: java.lang.Object mProviderStatsLock> = $r6;

        $r7 = new android.net.NetworkStats;

        specialinvoke $r7.<android.net.NetworkStats: void <init>(long,int)>(0L, 0);

        r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: android.net.NetworkStats mIfaceStats> = $r7;

        $r8 = new android.net.NetworkStats;

        specialinvoke $r8.<android.net.NetworkStats: void <init>(long,int)>(0L, 0);

        r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: android.net.NetworkStats mUidStats> = $r8;

        r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: java.lang.String mTag> = r1;

        r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: android.net.netstats.provider.INetworkStatsProvider mProvider> = r2;

        $r9 = interfaceinvoke r2.<android.net.netstats.provider.INetworkStatsProvider: android.os.IBinder asBinder()>();

        interfaceinvoke $r9.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: java.util.concurrent.Semaphore mSemaphore> = r3;

        r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: android.net.INetworkManagementEventObserver mAlertObserver> = r4;

        r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: java.util.concurrent.CopyOnWriteArrayList mStatsProviderCbList> = r5;

        return;
    }

    public void binderDied()
    {
        com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6;
        java.util.concurrent.CopyOnWriteArrayList $r7;

        r0 := @this: com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: java.lang.String mTag>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": binderDied");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetworkStats", $r6);

        $r7 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: java.util.concurrent.CopyOnWriteArrayList mStatsProviderCbList>;

        virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r0);

        return;
    }

    public android.net.NetworkStats getCachedStats(int)
    {
        com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl r0;
        int i0;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        android.net.NetworkStats r7, r9;
        java.lang.IllegalArgumentException r8;

        r0 := @this: com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: java.lang.Object mProviderStatsLock>;

        entermonitor r1;

        if i0 == 0 goto label4;

        if i0 != 1 goto label3;

     label1:
        r7 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: android.net.NetworkStats mUidStats>;

     label2:
        goto label5;

     label3:
        r8 = new java.lang.IllegalArgumentException;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid type: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw r8;

     label4:
        r7 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: android.net.NetworkStats mIfaceStats>;

     label5:
        r9 = virtualinvoke r7.<android.net.NetworkStats: android.net.NetworkStats clone()>();

        exitmonitor r1;

     label6:
        return r9;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void notifyAlertReached() throws android.os.RemoteException
    {
        com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl r0;
        android.net.INetworkManagementEventObserver $r1;

        r0 := @this: com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl;

        $r1 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: android.net.INetworkManagementEventObserver mAlertObserver>;

        interfaceinvoke $r1.<android.net.INetworkManagementEventObserver: void limitReached(java.lang.String,java.lang.String)>("globalAlert", null);

        return;
    }

    public void notifyLimitReached()
    {
        com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6, $r8;
        java.lang.Object $r7;
        com.android.server.net.NetworkPolicyManagerInternal $r9;

        r0 := @this: com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: java.lang.String mTag>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": onLimitReached");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetworkStats", $r6);

        $r7 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/net/NetworkPolicyManagerInternal;");

        $r9 = (com.android.server.net.NetworkPolicyManagerInternal) $r7;

        $r8 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: java.lang.String mTag>;

        virtualinvoke $r9.<com.android.server.net.NetworkPolicyManagerInternal: void onStatsProviderLimitReached(java.lang.String)>($r8);

        return;
    }

    public void notifyStatsUpdated(int, android.net.NetworkStats, android.net.NetworkStats)
    {
        com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl r0;
        int i0;
        android.net.NetworkStats r1, $r4, $r5, r7;
        java.lang.Object r2;
        java.util.concurrent.Semaphore $r3;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl;

        i0 := @parameter0: int;

        r7 := @parameter1: android.net.NetworkStats;

        r1 := @parameter2: android.net.NetworkStats;

        r2 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: java.lang.Object mProviderStatsLock>;

        entermonitor r2;

        if r7 == null goto label4;

     label1:
        $r5 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: android.net.NetworkStats mIfaceStats>;

        virtualinvoke $r5.<android.net.NetworkStats: void combineAllValues(android.net.NetworkStats)>(r7);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        goto label8;

     label4:
        if r1 == null goto label6;

     label5:
        $r4 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: android.net.NetworkStats mUidStats>;

        virtualinvoke $r4.<android.net.NetworkStats: void combineAllValues(android.net.NetworkStats)>(r1);

     label6:
        exitmonitor r2;

     label7:
        $r3 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: java.util.concurrent.Semaphore mSemaphore>;

        virtualinvoke $r3.<java.util.concurrent.Semaphore: void release()>();

        return;

     label8:
        exitmonitor r2;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
        catch java.lang.Throwable from label8 to label9 with label3;
    }

    public void unregister()
    {
        com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6;
        java.util.concurrent.CopyOnWriteArrayList $r7;

        r0 := @this: com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: java.lang.String mTag>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unregister");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetworkStats", $r6);

        $r7 = r0.<com.android.server.net.NetworkStatsService$NetworkStatsProviderCallbackImpl: java.util.concurrent.CopyOnWriteArrayList mStatsProviderCbList>;

        virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r0);

        return;
    }
}
