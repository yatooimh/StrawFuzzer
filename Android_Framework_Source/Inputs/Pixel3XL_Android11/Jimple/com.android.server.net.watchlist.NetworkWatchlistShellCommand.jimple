class com.android.server.net.watchlist.NetworkWatchlistShellCommand extends android.os.ShellCommand
{
    final android.content.Context mContext;
    final com.android.server.net.watchlist.NetworkWatchlistService mService;

    void <init>(com.android.server.net.watchlist.NetworkWatchlistService, android.content.Context)
    {
        com.android.server.net.watchlist.NetworkWatchlistShellCommand r0;
        com.android.server.net.watchlist.NetworkWatchlistService r1;
        android.content.Context r2;

        r0 := @this: com.android.server.net.watchlist.NetworkWatchlistShellCommand;

        r1 := @parameter0: com.android.server.net.watchlist.NetworkWatchlistService;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: android.content.Context mContext> = r2;

        r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: com.android.server.net.watchlist.NetworkWatchlistService mService> = r1;

        return;
    }

    private int runForceGenerateReport() throws android.os.RemoteException
    {
        com.android.server.net.watchlist.NetworkWatchlistShellCommand r0;
        java.io.PrintWriter r1;
        long l0, $l1;
        java.lang.StringBuilder r2;
        com.android.server.net.watchlist.WatchlistConfig $r3;
        boolean $z0;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        com.android.server.net.watchlist.NetworkWatchlistService $r6;
        java.lang.Exception $r7;
        java.lang.String $r10;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.net.watchlist.NetworkWatchlistShellCommand;

        r1 = virtualinvoke r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = staticinvoke <com.android.server.net.watchlist.WatchlistConfig: com.android.server.net.watchlist.WatchlistConfig getInstance()>();

        $z0 = virtualinvoke $r3.<com.android.server.net.watchlist.WatchlistConfig: boolean isConfigSecure()>();

        if $z0 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: Cannot force generate report under production config");

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return -1;

     label3:
        $r4 = r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putLong(android.content.ContentResolver,java.lang.String,long)>($r5, "network_watchlist_last_report_time", 0L);

        $r6 = r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: com.android.server.net.watchlist.NetworkWatchlistService mService>;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r6.<com.android.server.net.watchlist.NetworkWatchlistService: boolean forceReportWatchlistForTest(long)>($l1);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success!");

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label5:
        $r11 := @caughtexception;

        goto label9;

     label6:
        $r7 := @caughtexception;

     label7:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return -1;

     label9:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r11;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label5;
    }

    private int runSetTestConfig() throws android.os.RemoteException
    {
        com.android.server.net.watchlist.NetworkWatchlistShellCommand r0;
        java.io.PrintWriter r1;
        java.io.FileDescriptor $r2;
        com.android.server.net.watchlist.WatchlistConfig $r3;
        java.lang.String $r6, $r10, $r12, r13;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r8, r15;
        android.os.ParcelFileDescriptor r14;
        java.io.FileInputStream r16;

        r0 := @this: com.android.server.net.watchlist.NetworkWatchlistShellCommand;

        r1 = virtualinvoke r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label1:
        r13 = virtualinvoke r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: java.lang.String getNextArgRequired()>();

        r14 = virtualinvoke r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: android.os.ParcelFileDescriptor openFileForSystem(java.lang.String,java.lang.String)>(r13, "r");

     label2:
        if r14 != null goto label5;

     label3:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: can\'t open input file ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r6 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

     label4:
        return -1;

     label5:
        r16 = new java.io.FileInputStream;

        $r2 = virtualinvoke r14.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke r16.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r2);

        $r3 = staticinvoke <com.android.server.net.watchlist.WatchlistConfig: com.android.server.net.watchlist.WatchlistConfig getInstance()>();

        virtualinvoke $r3.<com.android.server.net.watchlist.WatchlistConfig: void setTestMode(java.io.InputStream)>(r16);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success!");

     label6:
        return 0;

     label7:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r10 = virtualinvoke $r7.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return -1;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.net.watchlist.NetworkWatchlistShellCommand r0;
        java.io.PrintWriter r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, i3, i5;
        java.lang.Exception $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7, r8;
        byte b4;

        r0 := @this: com.android.server.net.watchlist.NetworkWatchlistShellCommand;

        r8 := @parameter0: java.lang.String;

        if r8 != null goto label01;

        $i2 = virtualinvoke r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: int handleDefaultCommands(java.lang.String)>(r8);

        return $i2;

     label01:
        r1 = virtualinvoke r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label02:
        i3 = virtualinvoke r8.<java.lang.String: int hashCode()>();

     label03:
        if i3 == 1757613042 goto label07;

        if i3 == 1854202282 goto label05;

     label04:
        goto label09;

     label05:
        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("force-generate-report");

        if $z1 == 0 goto label04;

     label06:
        b4 = 1;

        goto label10;

     label07:
        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("set-test-config");

        if $z0 == 0 goto label04;

     label08:
        b4 = 0;

        goto label10;

     label09:
        b4 = -1;

     label10:
        if b4 == 0 goto label13;

        if b4 == 1 goto label12;

     label11:
        $i1 = virtualinvoke r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: int handleDefaultCommands(java.lang.String)>(r8);

        return $i1;

     label12:
        $i0 = specialinvoke r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: int runForceGenerateReport()>();

        return $i0;

     label13:
        i5 = specialinvoke r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: int runSetTestConfig()>();

     label14:
        return i5;

     label15:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return -1;

        catch java.lang.Exception from label02 to label03 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label12 to label13 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    public void onHelp()
    {
        com.android.server.net.watchlist.NetworkWatchlistShellCommand r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.net.watchlist.NetworkWatchlistShellCommand;

        r1 = virtualinvoke r0.<com.android.server.net.watchlist.NetworkWatchlistShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Network watchlist manager commands:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-test-config your_watchlist_config.xml");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Set network watchlist test config file.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  force-generate-report");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Force generate watchlist test report.");

        return;
    }
}
