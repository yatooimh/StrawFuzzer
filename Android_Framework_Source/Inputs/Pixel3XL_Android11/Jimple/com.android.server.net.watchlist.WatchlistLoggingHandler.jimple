class com.android.server.net.watchlist.WatchlistLoggingHandler extends android.os.Handler
{
    private static final boolean DEBUG;
    private static final java.lang.String DROPBOX_TAG;
    static final int FORCE_REPORT_RECORDS_NOW_FOR_TEST_MSG;
    static final int LOG_WATCHLIST_EVENT_MSG;
    private static final long ONE_DAY_MS;
    static final int REPORT_RECORDS_IF_NECESSARY_MSG;
    private static final java.lang.String TAG;
    private final java.util.concurrent.ConcurrentHashMap mCachedUidDigestMap;
    private final com.android.server.net.watchlist.WatchlistConfig mConfig;
    private final android.content.Context mContext;
    private final com.android.server.net.watchlist.WatchlistReportDbHelper mDbHelper;
    private final android.os.DropBoxManager mDropBoxManager;
    private final android.content.pm.PackageManager mPm;
    private int mPrimaryUserId;
    private final android.content.ContentResolver mResolver;
    private final com.android.server.net.watchlist.WatchlistSettings mSettings;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.concurrent.TimeUnit $r2;
        long $l0;

        <com.android.server.net.watchlist.WatchlistLoggingHandler: int REPORT_RECORDS_IF_NECESSARY_MSG> = 2;

        <com.android.server.net.watchlist.WatchlistLoggingHandler: int LOG_WATCHLIST_EVENT_MSG> = 1;

        <com.android.server.net.watchlist.WatchlistLoggingHandler: int FORCE_REPORT_RECORDS_NOW_FOR_TEST_MSG> = 3;

        <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String DROPBOX_TAG> = "network_watchlist_report";

        <com.android.server.net.watchlist.WatchlistLoggingHandler: boolean DEBUG> = 0;

        $r0 = class "Lcom/android/server/net/watchlist/WatchlistLoggingHandler;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG> = $r1;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L);

        <com.android.server.net.watchlist.WatchlistLoggingHandler: long ONE_DAY_MS> = $l0;

        return;
    }

    void <init>(android.content.Context, android.os.Looper)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        android.content.Context r1, $r5, $r10;
        android.os.Looper r2;
        java.util.concurrent.ConcurrentHashMap $r3;
        android.content.pm.PackageManager $r4;
        android.content.ContentResolver $r6;
        com.android.server.net.watchlist.WatchlistReportDbHelper $r7;
        com.android.server.net.watchlist.WatchlistConfig $r8;
        com.android.server.net.watchlist.WatchlistSettings $r9;
        java.lang.Object $r11;
        android.os.DropBoxManager $r12;
        int $i0;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Looper;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: int mPrimaryUserId> = -1;

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: java.util.concurrent.ConcurrentHashMap mCachedUidDigestMap> = $r3;

        r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.content.Context mContext> = r1;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.content.pm.PackageManager mPm> = $r4;

        $r5 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.content.ContentResolver mResolver> = $r6;

        $r7 = staticinvoke <com.android.server.net.watchlist.WatchlistReportDbHelper: com.android.server.net.watchlist.WatchlistReportDbHelper getInstance(android.content.Context)>(r1);

        r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: com.android.server.net.watchlist.WatchlistReportDbHelper mDbHelper> = $r7;

        $r8 = staticinvoke <com.android.server.net.watchlist.WatchlistConfig: com.android.server.net.watchlist.WatchlistConfig getInstance()>();

        r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: com.android.server.net.watchlist.WatchlistConfig mConfig> = $r8;

        $r9 = staticinvoke <com.android.server.net.watchlist.WatchlistSettings: com.android.server.net.watchlist.WatchlistSettings getInstance()>();

        r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: com.android.server.net.watchlist.WatchlistSettings mSettings> = $r9;

        $r10 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/DropBoxManager;");

        $r12 = (android.os.DropBoxManager) $r11;

        r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.os.DropBoxManager mDropBoxManager> = $r12;

        $i0 = specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: int getPrimaryUserId()>();

        r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: int mPrimaryUserId> = $i0;

        return;
    }

    private void addEncodedReportToDropBox(byte[])
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        byte[] r1;
        android.os.DropBoxManager $r2;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        r1 := @parameter0: byte[];

        $r2 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.os.DropBoxManager mDropBoxManager>;

        virtualinvoke $r2.<android.os.DropBoxManager: void addData(java.lang.String,byte[],int)>("network_watchlist_report", r1, 0);

        return;
    }

    static java.lang.String[] getAllSubDomains(java.lang.String)
    {
        java.util.ArrayList $r1;
        java.lang.String[] $r2, $r4;
        java.lang.Object[] $r3;
        int $i0, i1;
        boolean $z1;
        java.lang.String r5;

        r5 := @parameter0: java.lang.String;

        if r5 != null goto label1;

        return null;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(".");

     label2:
        if i1 == -1 goto label4;

        $i0 = i1 + 1;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i0);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z1 != 0 goto label3;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label3:
        i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(".");

        goto label2;

     label4:
        $r2 = newarray (java.lang.String)[0];

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }

    private byte[] getDigestFromUid(int)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        int i0;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.lang.Integer $r2;
        com.android.server.net.watchlist._$$Lambda$WatchlistLoggingHandler$GBD0dX6RhipHIkM0Z_B5jLlwfHQ $r3;
        java.lang.Object $r4;
        byte[] $r5;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: java.util.concurrent.ConcurrentHashMap mCachedUidDigestMap>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = new com.android.server.net.watchlist._$$Lambda$WatchlistLoggingHandler$GBD0dX6RhipHIkM0Z_B5jLlwfHQ;

        specialinvoke $r3.<com.android.server.net.watchlist._$$Lambda$WatchlistLoggingHandler$GBD0dX6RhipHIkM0Z_B5jLlwfHQ: void <init>(com.android.server.net.watchlist.WatchlistLoggingHandler,int)>(r0, i0);

        $r4 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>($r2, $r3);

        $r5 = (byte[]) $r4;

        return $r5;
    }

    static long getLastMidnightTime()
    {
        long $l0;

        $l0 = staticinvoke <com.android.server.net.watchlist.WatchlistLoggingHandler: long getMidnightTimestamp(int)>(0);

        return $l0;
    }

    static long getMidnightTimestamp(int)
    {
        int i0, $i1;
        java.util.GregorianCalendar $r1;
        long $l2;

        i0 := @parameter0: int;

        $r1 = new java.util.GregorianCalendar;

        specialinvoke $r1.<java.util.GregorianCalendar: void <init>()>();

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(14, 0);

        $i1 = neg i0;

        virtualinvoke $r1.<java.util.Calendar: void add(int,int)>(5, $i1);

        $l2 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        return $l2;
    }

    private int getPrimaryUserId()
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        android.content.pm.UserInfo r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.os.UserManager $r4;
        int $i0;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        $r2 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r4 = (android.os.UserManager) $r3;

        r1 = virtualinvoke $r4.<android.os.UserManager: android.content.pm.UserInfo getPrimaryUser()>();

        if r1 == null goto label1;

        $i0 = r1.<android.content.pm.UserInfo: int id>;

        return $i0;

     label1:
        return -1;
    }

    private void handleNetworkEvent(java.lang.String, java.lang.String[], int, long)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        java.lang.String[] r1;
        int i0, $i2, $i3, $i4, $i5;
        long l1;
        java.lang.String r2, r3, r4;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        $i2 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: int mPrimaryUserId>;

        if $i2 != -1 goto label1;

        $i5 = specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: int getPrimaryUserId()>();

        r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: int mPrimaryUserId> = $i5;

     label1:
        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i4 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: int mPrimaryUserId>;

        if $i3 == $i4 goto label2;

        return;

     label2:
        r3 = specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String searchAllSubDomainsInWatchlist(java.lang.String)>(r2);

        if r3 == null goto label3;

        specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: void insertRecord(int,java.lang.String,long)>(i0, r3, l1);

        goto label4;

     label3:
        r4 = specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String searchIpInWatchlist(java.lang.String[])>(r1);

        if r4 == null goto label4;

        specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: void insertRecord(int,java.lang.String,long)>(i0, r4, l1);

     label4:
        return;
    }

    private void insertRecord(int, java.lang.String, long)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        int i0;
        long l1;
        com.android.server.net.watchlist.WatchlistConfig $r1;
        boolean $z0, $z1, $z2;
        com.android.server.net.watchlist.WatchlistReportDbHelper $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, r7, r9;
        byte[] r8;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        $r1 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: com.android.server.net.watchlist.WatchlistConfig mConfig>;

        $z0 = virtualinvoke $r1.<com.android.server.net.watchlist.WatchlistConfig: boolean isConfigSecure()>();

        if $z0 != 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: boolean isPackageTestOnly(int)>(i0);

        if $z2 != 0 goto label1;

        return;

     label1:
        r8 = specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: byte[] getDigestFromUid(int)>(i0);

        if r8 != null goto label2;

        return;

     label2:
        $r2 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: com.android.server.net.watchlist.WatchlistReportDbHelper mDbHelper>;

        $z1 = virtualinvoke $r2.<com.android.server.net.watchlist.WatchlistReportDbHelper: boolean insertNewRecord(byte[],java.lang.String,long)>(r8, r7, l1);

        if $z1 == 0 goto label3;

        r9 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to insert record for uid: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r9, $r6);

     label3:
        return;
    }

    private boolean isHostInWatchlist(java.lang.String)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        java.lang.String r1;
        com.android.server.net.watchlist.WatchlistConfig $r2;
        boolean $z0;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: com.android.server.net.watchlist.WatchlistConfig mConfig>;

        $z0 = virtualinvoke $r2.<com.android.server.net.watchlist.WatchlistConfig: boolean containsDomain(java.lang.String)>(r1);

        return $z0;
    }

    private boolean isIpInWatchlist(java.lang.String)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        java.lang.String r1;
        com.android.server.net.watchlist.WatchlistConfig $r2;
        boolean $z0;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: com.android.server.net.watchlist.WatchlistConfig mConfig>;

        $z0 = virtualinvoke $r2.<com.android.server.net.watchlist.WatchlistConfig: boolean containsIp(java.lang.String)>(r1);

        return $z0;
    }

    private boolean isPackageTestOnly(int)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        int i0, $i2, $i3, $i4;
        java.lang.String r1, $r6, $r7;
        java.lang.StringBuilder r2;
        android.content.pm.PackageManager $r3, $r8;
        android.content.pm.PackageManager$NameNotFoundException $r9;
        boolean z0;
        java.lang.String[] r10;
        android.content.pm.ApplicationInfo r11;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        i0 := @parameter0: int;

        z0 = 0;

     label01:
        $r3 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.content.pm.PackageManager mPm>;

        r10 = virtualinvoke $r3.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

     label02:
        if r10 == null goto label08;

     label03:
        $i2 = lengthof r10;

        if $i2 != 0 goto label05;

     label04:
        goto label08;

     label05:
        $r8 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.content.pm.PackageManager mPm>;

        $r7 = r10[0];

        r11 = virtualinvoke $r8.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r7, 0);

     label06:
        $i3 = r11.<android.content.pm.ApplicationInfo: int flags>;

        $i4 = $i3 & 256;

        if $i4 == 0 goto label07;

        z0 = 1;

     label07:
        return z0;

     label08:
        r1 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find package: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r1, $r6);

     label09:
        return 0;

     label10:
        $r9 := @caughtexception;

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label10;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label10;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label10;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label10;
    }

    private java.lang.String searchAllSubDomainsInWatchlist(java.lang.String)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        int i0, i1;
        java.lang.String r1, r2;
        boolean $z0;
        java.lang.String[] r3;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        r2 := @parameter0: java.lang.String;

        if r2 != null goto label1;

        return null;

     label1:
        r3 = staticinvoke <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String[] getAllSubDomains(java.lang.String)>(r2);

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r1 = r3[i1];

        $z0 = specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: boolean isHostInWatchlist(java.lang.String)>(r1);

        if $z0 == 0 goto label3;

        return r1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return null;
    }

    private java.lang.String searchIpInWatchlist(java.lang.String[])
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        java.lang.String[] r1;
        int i0, i1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        r1 := @parameter0: java.lang.String[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        $z0 = specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: boolean isIpInWatchlist(java.lang.String)>(r2);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private boolean shouldReportNetworkWatchlist(long)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        long l0, l1, $l3, $l4;
        android.content.ContentResolver $r1;
        byte $b2, $b5;
        java.lang.String $r2;
        com.android.server.net.watchlist.WatchlistReportDbHelper $r3;
        boolean z1;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.content.ContentResolver mResolver>;

        l1 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>($r1, "network_watchlist_last_report_time", 0L);

        z1 = 0;

        $b2 = l0 cmp l1;

        if $b2 >= 0 goto label1;

        $r2 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r2, "Last report time is larger than current time, reset report");

        $r3 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: com.android.server.net.watchlist.WatchlistReportDbHelper mDbHelper>;

        virtualinvoke $r3.<com.android.server.net.watchlist.WatchlistReportDbHelper: boolean cleanup(long)>(l1);

        return 0;

     label1:
        $l3 = <com.android.server.net.watchlist.WatchlistLoggingHandler: long ONE_DAY_MS>;

        $l4 = $l3 + l1;

        $b5 = l0 cmp $l4;

        if $b5 < 0 goto label2;

        z1 = 1;

     label2:
        return z1;
    }

    private void tryAggregateRecords(long)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        long l0, $l5, $l8, $l10, l12, l13, l14, l15, $l16, l17;
        boolean $z0, $z2;
        java.lang.String $r1, $r3, $r11, $r15, $r16, $r20, $r25, r26, r29, r35, $r38, r40;
        android.os.DropBoxManager $r2, $r6;
        android.content.ContentResolver $r7;
        com.android.server.net.watchlist.WatchlistReportDbHelper $r8, $r34;
        com.android.server.net.watchlist.WatchlistSettings $r9;
        com.android.server.net.watchlist.WatchlistConfig $r10;
        java.lang.StringBuilder $r12, $r17, $r22, $r36;
        java.lang.Throwable $r21;
        com.android.server.net.watchlist.WatchlistReportDbHelper$AggregatedResult r28;
        java.util.List r31;
        byte[] r32, r33;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        l12 := @parameter0: long;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label01:
        $z0 = specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: boolean shouldReportNetworkWatchlist(long)>(l12);

        if $z0 != 0 goto label03;

        $r16 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r16, "No need to aggregate record yet.");

     label02:
        l13 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r26 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Milliseconds spent on tryAggregateRecords(): ");

        $l8 = l13 - l0;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r26, $r20);

        return;

     label03:
        $r1 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r1, "Start aggregating watchlist records.");

        $r2 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.os.DropBoxManager mDropBoxManager>;

        if $r2 == null goto label11;

        $r6 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.os.DropBoxManager mDropBoxManager>;

        $z2 = virtualinvoke $r6.<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>("network_watchlist_report");

        if $z2 == 0 goto label11;

        $r7 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.content.ContentResolver mResolver>;

        staticinvoke <android.provider.Settings$Global: boolean putLong(android.content.ContentResolver,java.lang.String,long)>($r7, "network_watchlist_last_report_time", l12);

        $r8 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: com.android.server.net.watchlist.WatchlistReportDbHelper mDbHelper>;

        r28 = virtualinvoke $r8.<com.android.server.net.watchlist.WatchlistReportDbHelper: com.android.server.net.watchlist.WatchlistReportDbHelper$AggregatedResult getAggregatedRecords(long)>(l12);

     label04:
        if r28 != null goto label07;

     label05:
        $r11 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r11, "Cannot get result from database");

     label06:
        l14 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r29 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Milliseconds spent on tryAggregateRecords(): ");

        $l5 = l14 - l0;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r29, $r15);

        return;

     label07:
        r31 = virtualinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: java.util.List getAllDigestsForReport(com.android.server.net.watchlist.WatchlistReportDbHelper$AggregatedResult)>(r28);

        $r9 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: com.android.server.net.watchlist.WatchlistSettings mSettings>;

        r32 = virtualinvoke $r9.<com.android.server.net.watchlist.WatchlistSettings: byte[] getPrivacySecretKey()>();

        $r10 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: com.android.server.net.watchlist.WatchlistConfig mConfig>;

        r33 = staticinvoke <com.android.server.net.watchlist.ReportEncoder: byte[] encodeWatchlistReport(com.android.server.net.watchlist.WatchlistConfig,byte[],java.util.List,com.android.server.net.watchlist.WatchlistReportDbHelper$AggregatedResult)>($r10, r32, r31, r28);

     label08:
        if r33 == null goto label10;

     label09:
        specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: void addEncodedReportToDropBox(byte[])>(r33);

     label10:
        goto label12;

     label11:
        $r3 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r3, "Network Watchlist dropbox tag is not enabled");

     label12:
        $r34 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: com.android.server.net.watchlist.WatchlistReportDbHelper mDbHelper>;

        virtualinvoke $r34.<com.android.server.net.watchlist.WatchlistReportDbHelper: boolean cleanup(long)>(l12);

     label13:
        l15 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r35 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Milliseconds spent on tryAggregateRecords(): ");

        $l16 = l15 - l0;

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r35, $r38);

        return;

     label14:
        $r21 := @caughtexception;

        l17 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r40 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Milliseconds spent on tryAggregateRecords(): ");

        $l10 = l17 - l0;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r40, $r25);

        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void asyncNetworkEvent(java.lang.String, java.lang.String[], int)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        java.lang.String r1;
        java.lang.String[] r2;
        int i0;
        android.os.Message r3;
        android.os.Bundle $r5;
        long $l1;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        r3 = virtualinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.os.Message obtainMessage(int)>(1);

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("host", r1);

        virtualinvoke $r5.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>("ipAddresses", r2);

        virtualinvoke $r5.<android.os.Bundle: void putInt(java.lang.String,int)>("uid", i0);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r5.<android.os.Bundle: void putLong(java.lang.String,long)>("timestamp", $l1);

        virtualinvoke r3.<android.os.Message: void setData(android.os.Bundle)>($r5);

        virtualinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: boolean sendMessage(android.os.Message)>(r3);

        return;
    }

    public void forceReportWatchlistForTest(long)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        long l0;
        android.os.Message r1;
        java.lang.Long $r2;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.os.Message obtainMessage(int)>(3);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r1.<android.os.Message: java.lang.Object obj> = $r2;

        virtualinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    java.util.List getAllDigestsForReport(com.android.server.net.watchlist.WatchlistReportDbHelper$AggregatedResult)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        com.android.server.net.watchlist.WatchlistReportDbHelper$AggregatedResult r1;
        java.util.List r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        byte[] r4;
        android.content.Context $r5;
        android.content.pm.PackageManager $r6;
        java.util.HashSet $r7;
        java.util.HashMap $r8, $r9;
        java.util.Set $r10;
        java.util.ArrayList $r11;
        java.lang.Object $r12;
        android.content.pm.ApplicationInfo $r13;
        java.lang.String $r14;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        r1 := @parameter0: com.android.server.net.watchlist.WatchlistReportDbHelper$AggregatedResult;

        $r5 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r6.<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>(131072);

        $r7 = new java.util.HashSet;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $r8 = r1.<com.android.server.net.watchlist.WatchlistReportDbHelper$AggregatedResult: java.util.HashMap appDigestCNCList>;

        $i2 = virtualinvoke $r8.<java.util.HashMap: int size()>();

        $i3 = $i1 + $i2;

        specialinvoke $r7.<java.util.HashSet: void <init>(int)>($i3);

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label3;

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i5);

        $r13 = (android.content.pm.ApplicationInfo) $r12;

        $i4 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        r4 = specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: byte[] getDigestFromUid(int)>($i4);

        if r4 == null goto label2;

        $r14 = staticinvoke <com.android.internal.util.HexDump: java.lang.String toHexString(byte[])>(r4);

        virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>($r14);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $r9 = r1.<com.android.server.net.watchlist.WatchlistReportDbHelper$AggregatedResult: java.util.HashMap appDigestCNCList>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set keySet()>();

        virtualinvoke $r7.<java.util.HashSet: boolean addAll(java.util.Collection)>($r10);

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        return $r11;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        int i0, $i1;
        java.lang.String $r1, $r4, $r7;
        java.lang.String[] $r2;
        long $l2, $l3, $l5;
        java.lang.Object $r3, $r5;
        boolean $z0;
        java.lang.Long $r6;
        android.os.Message r8;
        android.os.Bundle r9;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        r8 := @parameter0: android.os.Message;

        i0 = r8.<android.os.Message: int what>;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label1;

        $r7 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r7, "WatchlistLoggingHandler received an unknown of message.");

        goto label5;

     label1:
        $r3 = r8.<android.os.Message: java.lang.Object obj>;

        $z0 = $r3 instanceof java.lang.Long;

        if $z0 == 0 goto label2;

        $r5 = r8.<android.os.Message: java.lang.Object obj>;

        $r6 = (java.lang.Long) $r5;

        $l5 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: void tryAggregateRecords(long)>($l5);

        goto label5;

     label2:
        $r4 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r4, "Msg.obj needs to be a Long object.");

        goto label5;

     label3:
        $l3 = staticinvoke <com.android.server.net.watchlist.WatchlistLoggingHandler: long getLastMidnightTime()>();

        specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: void tryAggregateRecords(long)>($l3);

        goto label5;

     label4:
        r9 = virtualinvoke r8.<android.os.Message: android.os.Bundle getData()>();

        $r1 = virtualinvoke r9.<android.os.Bundle: java.lang.String getString(java.lang.String)>("host");

        $r2 = virtualinvoke r9.<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>("ipAddresses");

        $i1 = virtualinvoke r9.<android.os.Bundle: int getInt(java.lang.String)>("uid");

        $l2 = virtualinvoke r9.<android.os.Bundle: long getLong(java.lang.String)>("timestamp");

        specialinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: void handleNetworkEvent(java.lang.String,java.lang.String[],int,long)>($r1, $r2, $i1, $l2);

     label5:
        return;
    }

    public byte[] lambda$getDigestFromUid$0$WatchlistLoggingHandler(int, java.lang.Integer)
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        java.lang.Integer r1;
        int i0, i1, $i2, i6, i7;
        java.lang.String r2, $r9, $r12, $r19, r21, r22, r24, r29;
        android.content.pm.PackageManager $r3, $r4;
        boolean $z0, $z1, $z2;
        android.content.pm.PackageInfo $r5;
        android.content.pm.ApplicationInfo $r6;
        java.lang.Throwable $r13;
        java.lang.StringBuilder $r14, r23, r25;
        java.lang.String[] r20;
        java.io.File r26;
        byte[] r27;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        i6 := @parameter0: int;

        r1 := @parameter1: java.lang.Integer;

        $r3 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.content.pm.PackageManager mPm>;

        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        r20 = virtualinvoke $r3.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>($i2);

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i6);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r20);

        if $z0 != 0 goto label9;

        i1 = lengthof r20;

        i7 = 0;

     label1:
        if i7 >= i1 goto label9;

        r2 = r20[i7];

     label2:
        $r4 = r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.content.pm.PackageManager mPm>;

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)>(r2, 786432, i0);

        $r6 = $r5.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r21 = $r6.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r21);

        if $z1 == 0 goto label4;

        r22 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find apkPath for ");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r22, $r12);

     label3:
        goto label5;

     label4:
        $z2 = staticinvoke <android.os.incremental.IncrementalManager: boolean isIncrementalPath(java.lang.String)>(r21);

        if $z2 == 0 goto label6;

        r24 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping incremental path: ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r24, $r9);

     label5:
        i7 = i7 + 1;

        goto label1;

     label6:
        r26 = new java.io.File;

        specialinvoke r26.<java.io.File: void <init>(java.lang.String)>(r21);

        r27 = staticinvoke <com.android.server.net.watchlist.DigestUtils: byte[] getSha256Hash(java.io.File)>(r26);

     label7:
        return r27;

     label8:
        $r13 := @caughtexception;

        r29 = <com.android.server.net.watchlist.WatchlistLoggingHandler: java.lang.String TAG>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get digest from uid: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",pkg: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r29, $r19, $r13);

        return null;

     label9:
        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label8;
        catch java.security.NoSuchAlgorithmException from label2 to label3 with label8;
        catch java.io.IOException from label2 to label3 with label8;
        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label8;
        catch java.security.NoSuchAlgorithmException from label4 to label5 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch android.content.pm.PackageManager$NameNotFoundException from label6 to label7 with label8;
        catch java.security.NoSuchAlgorithmException from label6 to label7 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public void reportWatchlistIfNecessary()
    {
        com.android.server.net.watchlist.WatchlistLoggingHandler r0;
        android.os.Message $r1;

        r0 := @this: com.android.server.net.watchlist.WatchlistLoggingHandler;

        $r1 = virtualinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke r0.<com.android.server.net.watchlist.WatchlistLoggingHandler: boolean sendMessage(android.os.Message)>($r1);

        return;
    }
}
