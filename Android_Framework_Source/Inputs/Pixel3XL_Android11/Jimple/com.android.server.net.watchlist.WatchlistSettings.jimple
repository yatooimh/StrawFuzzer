class com.android.server.net.watchlist.WatchlistSettings extends java.lang.Object
{
    private static final java.lang.String FILE_NAME;
    private static final int SECRET_KEY_LENGTH;
    private static final java.lang.String TAG;
    private static final com.android.server.net.watchlist.WatchlistSettings sInstance;
    private byte[] mPrivacySecretKey;
    private final android.util.AtomicFile mXmlFile;

    static void <clinit>()
    {
        com.android.server.net.watchlist.WatchlistSettings $r0;

        <com.android.server.net.watchlist.WatchlistSettings: java.lang.String TAG> = "WatchlistSettings";

        <com.android.server.net.watchlist.WatchlistSettings: int SECRET_KEY_LENGTH> = 48;

        <com.android.server.net.watchlist.WatchlistSettings: java.lang.String FILE_NAME> = "watchlist_settings.xml";

        $r0 = new com.android.server.net.watchlist.WatchlistSettings;

        specialinvoke $r0.<com.android.server.net.watchlist.WatchlistSettings: void <init>()>();

        <com.android.server.net.watchlist.WatchlistSettings: com.android.server.net.watchlist.WatchlistSettings sInstance> = $r0;

        return;
    }

    private void <init>()
    {
        com.android.server.net.watchlist.WatchlistSettings r0;
        java.io.File $r1;

        r0 := @this: com.android.server.net.watchlist.WatchlistSettings;

        $r1 = staticinvoke <com.android.server.net.watchlist.WatchlistSettings: java.io.File getSystemWatchlistFile()>();

        specialinvoke r0.<com.android.server.net.watchlist.WatchlistSettings: void <init>(java.io.File)>($r1);

        return;
    }

    protected void <init>(java.io.File)
    {
        com.android.server.net.watchlist.WatchlistSettings r0;
        java.io.File r1;
        android.util.AtomicFile $r2;
        byte[] $r3, $r4;

        r0 := @this: com.android.server.net.watchlist.WatchlistSettings;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.net.watchlist.WatchlistSettings: byte[] mPrivacySecretKey> = null;

        $r2 = new android.util.AtomicFile;

        specialinvoke $r2.<android.util.AtomicFile: void <init>(java.io.File,java.lang.String)>(r1, "net-watchlist");

        r0.<com.android.server.net.watchlist.WatchlistSettings: android.util.AtomicFile mXmlFile> = $r2;

        specialinvoke r0.<com.android.server.net.watchlist.WatchlistSettings: void reloadSettings()>();

        $r3 = r0.<com.android.server.net.watchlist.WatchlistSettings: byte[] mPrivacySecretKey>;

        if $r3 != null goto label1;

        $r4 = specialinvoke r0.<com.android.server.net.watchlist.WatchlistSettings: byte[] generatePrivacySecretKey()>();

        r0.<com.android.server.net.watchlist.WatchlistSettings: byte[] mPrivacySecretKey> = $r4;

        specialinvoke r0.<com.android.server.net.watchlist.WatchlistSettings: void saveSettings()>();

     label1:
        return;
    }

    private byte[] generatePrivacySecretKey()
    {
        com.android.server.net.watchlist.WatchlistSettings r0;
        byte[] r1;
        java.security.SecureRandom $r2;

        r0 := @this: com.android.server.net.watchlist.WatchlistSettings;

        r1 = newarray (byte)[48];

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>(r1);

        return r1;
    }

    public static com.android.server.net.watchlist.WatchlistSettings getInstance()
    {
        com.android.server.net.watchlist.WatchlistSettings $r0;

        $r0 = <com.android.server.net.watchlist.WatchlistSettings: com.android.server.net.watchlist.WatchlistSettings sInstance>;

        return $r0;
    }

    static java.io.File getSystemWatchlistFile()
    {
        java.io.File $r0, $r1;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataSystemDirectory()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "watchlist_settings.xml");

        return $r0;
    }

    private byte[] parseSecretKey(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.net.watchlist.WatchlistSettings r0;
        org.xmlpull.v1.XmlPullParser r1;
        byte[] r2;
        java.lang.String $r3;
        int $i1;

        r0 := @this: com.android.server.net.watchlist.WatchlistSettings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "secret-key");

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        r2 = staticinvoke <com.android.internal.util.HexDump: byte[] hexStringToByteArray(java.lang.String)>($r3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, null, "secret-key");

        if r2 == null goto label2;

        $i1 = lengthof r2;

        if $i1 == 48 goto label1;

        goto label2;

     label1:
        return r2;

     label2:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WatchlistSettings", "Unable to parse secret key");

        return null;
    }

    private void reloadSettings()
    {
        com.android.server.net.watchlist.WatchlistSettings r0;
        int i0;
        android.util.AtomicFile $r1, $r2;
        boolean $z0, $z1, $z2;
        java.nio.charset.Charset $r3;
        java.lang.String $r4, $r5;
        byte[] $r6;
        java.lang.Throwable $r7, $r8, $r9;
        java.io.FileInputStream r10;
        org.xmlpull.v1.XmlPullParser r11;

        r0 := @this: com.android.server.net.watchlist.WatchlistSettings;

        $r1 = r0.<com.android.server.net.watchlist.WatchlistSettings: android.util.AtomicFile mXmlFile>;

        $z0 = virtualinvoke $r1.<android.util.AtomicFile: boolean exists()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $r2 = r0.<com.android.server.net.watchlist.WatchlistSettings: android.util.AtomicFile mXmlFile>;

        r10 = virtualinvoke $r2.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        r11 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r11.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r10, $r4);

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r11, "network-watchlist-settings");

        i0 = interfaceinvoke r11.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label03:
        $z2 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r11, i0);

        if $z2 == 0 goto label05;

        $r5 = interfaceinvoke r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("secret-key");

        if $z1 == 0 goto label03;

        $r6 = specialinvoke r0.<com.android.server.net.watchlist.WatchlistSettings: byte[] parseSecretKey(org.xmlpull.v1.XmlPullParser)>(r11);

        r0.<com.android.server.net.watchlist.WatchlistSettings: byte[] mPrivacySecretKey> = $r6;

     label04:
        goto label03;

     label05:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WatchlistSettings", "Reload watchlist settings done");

     label06:
        if r10 == null goto label08;

     label07:
        virtualinvoke r10.<java.io.FileInputStream: void close()>();

     label08:
        goto label16;

     label09:
        $r7 := @caughtexception;

        if r10 == null goto label14;

     label10:
        virtualinvoke r10.<java.io.FileInputStream: void close()>();

     label11:
        goto label14;

     label12:
        $r9 := @caughtexception;

     label13:
        virtualinvoke $r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r9);

     label14:
        throw $r7;

     label15:
        $r8 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WatchlistSettings", "Failed parsing xml", $r8);

     label16:
        return;

        catch java.lang.IllegalStateException from label01 to label02 with label15;
        catch java.lang.NullPointerException from label01 to label02 with label15;
        catch java.lang.NumberFormatException from label01 to label02 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label15;
        catch java.io.IOException from label01 to label02 with label15;
        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.IllegalStateException from label07 to label08 with label15;
        catch java.lang.NullPointerException from label07 to label08 with label15;
        catch java.lang.NumberFormatException from label07 to label08 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label15;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.lang.IndexOutOfBoundsException from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.IllegalStateException from label13 to label14 with label15;
        catch java.lang.NullPointerException from label13 to label14 with label15;
        catch java.lang.NumberFormatException from label13 to label14 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label15;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.IndexOutOfBoundsException from label13 to label14 with label15;
        catch java.lang.IllegalStateException from label14 to label15 with label15;
        catch java.lang.NullPointerException from label14 to label15 with label15;
        catch java.lang.NumberFormatException from label14 to label15 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label15;
        catch java.io.IOException from label14 to label15 with label15;
        catch java.lang.IndexOutOfBoundsException from label14 to label15 with label15;
    }

    private void saveSettings()
    {
        com.android.server.net.watchlist.WatchlistSettings r0;
        android.util.AtomicFile $r1, $r12, $r14;
        java.nio.charset.Charset $r2;
        java.lang.String $r3, $r8, $r19;
        java.lang.Boolean $r4;
        byte[] $r7;
        java.lang.Throwable $r13, $r15;
        java.lang.StringBuilder $r16;
        java.io.FileOutputStream r20;
        com.android.internal.util.FastXmlSerializer r21;

        r0 := @this: com.android.server.net.watchlist.WatchlistSettings;

     label1:
        $r1 = r0.<com.android.server.net.watchlist.WatchlistSettings: android.util.AtomicFile mXmlFile>;

        r20 = virtualinvoke $r1.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label2:
        r21 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke r21.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r21.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r20, $r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r21.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r4);

        interfaceinvoke r21.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "network-watchlist-settings");

        interfaceinvoke r21.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "secret-key");

        $r7 = r0.<com.android.server.net.watchlist.WatchlistSettings: byte[] mPrivacySecretKey>;

        $r8 = staticinvoke <com.android.internal.util.HexDump: java.lang.String toHexString(byte[])>($r7);

        interfaceinvoke r21.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r8);

        interfaceinvoke r21.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "secret-key");

        interfaceinvoke r21.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "network-watchlist-settings");

        interfaceinvoke r21.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r12 = r0.<com.android.server.net.watchlist.WatchlistSettings: android.util.AtomicFile mXmlFile>;

        virtualinvoke $r12.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r20);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WatchlistSettings", "Failed to write display settings, restoring backup.", $r13);

        $r14 = r0.<com.android.server.net.watchlist.WatchlistSettings: android.util.AtomicFile mXmlFile>;

        virtualinvoke $r14.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r20);

     label5:
        return;

     label6:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write display settings: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WatchlistSettings", $r19);

        return;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label2 to label3 with label4;
    }

    byte[] getPrivacySecretKey()
    {
        com.android.server.net.watchlist.WatchlistSettings r0;
        byte[] $r1, r3;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.net.watchlist.WatchlistSettings;

        entermonitor r0;

     label1:
        r3 = newarray (byte)[48];

        $r1 = r0.<com.android.server.net.watchlist.WatchlistSettings: byte[] mPrivacySecretKey>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r3, 0, 48);

     label2:
        exitmonitor r0;

        return r3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
