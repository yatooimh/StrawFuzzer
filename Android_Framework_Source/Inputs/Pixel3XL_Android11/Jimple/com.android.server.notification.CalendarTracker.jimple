public class com.android.server.notification.CalendarTracker extends java.lang.Object
{
    private static final java.lang.String[] ATTENDEE_PROJECTION;
    private static final java.lang.String ATTENDEE_SELECTION;
    private static final boolean DEBUG;
    private static final boolean DEBUG_ATTENDEES;
    private static final int EVENT_CHECK_LOOKAHEAD;
    private static final java.lang.String INSTANCE_ORDER_BY;
    private static final java.lang.String[] INSTANCE_PROJECTION;
    private static final java.lang.String TAG;
    private com.android.server.notification.CalendarTracker$Callback mCallback;
    private final android.database.ContentObserver mObserver;
    private boolean mRegistered;
    private final android.content.Context mSystemContext;
    private final android.content.Context mUserContext;

    static void <clinit>()
    {
        boolean $z0;
        java.lang.String[] $r0, $r1;

        <com.android.server.notification.CalendarTracker: java.lang.String TAG> = "ConditionProviders.CT";

        <com.android.server.notification.CalendarTracker: java.lang.String INSTANCE_ORDER_BY> = "begin ASC";

        <com.android.server.notification.CalendarTracker: int EVENT_CHECK_LOOKAHEAD> = 86400000;

        <com.android.server.notification.CalendarTracker: boolean DEBUG_ATTENDEES> = 0;

        <com.android.server.notification.CalendarTracker: java.lang.String ATTENDEE_SELECTION> = "event_id = ? AND attendeeEmail = ?";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ConditionProviders", 3);

        <com.android.server.notification.CalendarTracker: boolean DEBUG> = $z0;

        $r0 = newarray (java.lang.String)[9];

        $r0[0] = "begin";

        $r0[1] = "end";

        $r0[2] = "title";

        $r0[3] = "visible";

        $r0[4] = "event_id";

        $r0[5] = "calendar_displayName";

        $r0[6] = "ownerAccount";

        $r0[7] = "calendar_id";

        $r0[8] = "availability";

        <com.android.server.notification.CalendarTracker: java.lang.String[] INSTANCE_PROJECTION> = $r0;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "event_id";

        $r1[1] = "attendeeEmail";

        $r1[2] = "attendeeStatus";

        <com.android.server.notification.CalendarTracker: java.lang.String[] ATTENDEE_PROJECTION> = $r1;

        return;
    }

    public void <init>(android.content.Context, android.content.Context)
    {
        com.android.server.notification.CalendarTracker r0;
        android.content.Context r1, r2;
        com.android.server.notification.CalendarTracker$1 $r3;

        r0 := @this: com.android.server.notification.CalendarTracker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new com.android.server.notification.CalendarTracker$1;

        specialinvoke $r3.<com.android.server.notification.CalendarTracker$1: void <init>(com.android.server.notification.CalendarTracker,android.os.Handler)>(r0, null);

        r0.<com.android.server.notification.CalendarTracker: android.database.ContentObserver mObserver> = $r3;

        r0.<com.android.server.notification.CalendarTracker: android.content.Context mSystemContext> = r1;

        r0.<com.android.server.notification.CalendarTracker: android.content.Context mUserContext> = r2;

        return;
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        return $z0;
    }

    static android.content.Context access$100(com.android.server.notification.CalendarTracker)
    {
        com.android.server.notification.CalendarTracker r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.notification.CalendarTracker;

        $r1 = r0.<com.android.server.notification.CalendarTracker: android.content.Context mUserContext>;

        return $r1;
    }

    static com.android.server.notification.CalendarTracker$Callback access$200(com.android.server.notification.CalendarTracker)
    {
        com.android.server.notification.CalendarTracker r0;
        com.android.server.notification.CalendarTracker$Callback $r1;

        r0 := @parameter0: com.android.server.notification.CalendarTracker;

        $r1 = r0.<com.android.server.notification.CalendarTracker: com.android.server.notification.CalendarTracker$Callback mCallback>;

        return $r1;
    }

    private static java.lang.String attendeeStatusToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == 0 goto label5;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ATTENDEE_STATUS_UNKNOWN_");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        return "ATTENDEE_STATUS_TENTATIVE";

     label2:
        return "ATTENDEE_STATUS_INVITED";

     label3:
        return "ATTENDEE_STATUS_DECLINED";

     label4:
        return "ATTENDEE_STATUS_ACCEPTED";

     label5:
        return "ATTENDEE_STATUS_NONE";
    }

    private static java.lang.String availabilityToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AVAILABILITY_UNKNOWN_");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        return "AVAILABILITY_TENTATIVE";

     label2:
        return "AVAILABILITY_FREE";

     label3:
        return "AVAILABILITY_BUSY";
    }

    private android.util.ArraySet getCalendarsWithAccess()
    {
        com.android.server.notification.CalendarTracker r0;
        long l0, $l1, $l2, $l4;
        android.util.ArraySet $r2;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        java.lang.String[] $r5;
        android.net.Uri $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r10;
        boolean $z0, $z2;
        java.lang.Long $r11;
        java.lang.Throwable $r12;
        android.database.sqlite.SQLiteException $r13;
        android.database.Cursor r14, r15, r16;

        r0 := @this: com.android.server.notification.CalendarTracker;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = new android.util.ArraySet;

        specialinvoke $r2.<android.util.ArraySet: void <init>()>();

        r14 = null;

        r15 = null;

     label01:
        $r3 = r0.<com.android.server.notification.CalendarTracker: android.content.Context mUserContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = <android.provider.CalendarContract$Calendars: android.net.Uri CONTENT_URI>;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "_id";

        r16 = virtualinvoke $r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, $r5, "calendar_access_level >= 500 AND sync_events = 1", null, null);

     label02:
        if r16 == null goto label07;

        r15 = r16;

        r14 = r16;

     label03:
        $z0 = interfaceinvoke r16.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label07;

     label04:
        r15 = r16;

        r14 = r16;

     label05:
        $l4 = interfaceinvoke r16.<android.database.Cursor: long getLong(int)>(0);

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke $r2.<android.util.ArraySet: boolean add(java.lang.Object)>($r11);

     label06:
        goto label02;

     label07:
        if r16 == null goto label13;

        r14 = r16;

     label08:
        interfaceinvoke r14.<android.database.Cursor: void close()>();

        goto label13;

     label09:
        $r12 := @caughtexception;

        goto label15;

     label10:
        $r13 := @caughtexception;

        r15 = r14;

     label11:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ConditionProviders.CT", "error querying calendar content provider", $r13);

     label12:
        if r14 == null goto label13;

        goto label08;

     label13:
        $z2 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z2 == 0 goto label14;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getCalendarsWithAccess took ");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 - l0;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", $r10);

     label14:
        return $r2;

     label15:
        if r15 == null goto label16;

        interfaceinvoke r15.<android.database.Cursor: void close()>();

     label16:
        throw $r12;

        catch android.database.sqlite.SQLiteException from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
    }

    private boolean meetsAttendee(android.service.notification.ZenModeConfig$EventInfo, int, java.lang.String)
    {
        com.android.server.notification.CalendarTracker r0;
        int i0, $i5, $i8, i15;
        long l1, l2, $l3, $l4, $l6, $l7, $l9, $l11, $l12, $l13, $l14;
        java.lang.String[] r1, $r7;
        java.lang.String r2, $r4, $r10, $r12, $r14, $r16, $r17, $r20, $r23, r31;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10;
        java.lang.StringBuilder r3, $r9, $r11, $r19, $r22;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        android.net.Uri $r8;
        byte $b10;
        java.lang.Object[] $r13;
        java.lang.Boolean $r15;
        java.lang.Throwable $r18, $r24, $r25, $r27, r35;
        android.database.sqlite.SQLiteException $r21, $r26, $r28, $r29, r36;
        android.service.notification.ZenModeConfig$EventInfo r30;
        android.database.Cursor r32, r33, r34, r37;

        r0 := @this: com.android.server.notification.CalendarTracker;

        r30 := @parameter0: android.service.notification.ZenModeConfig$EventInfo;

        i0 := @parameter1: int;

        r31 := @parameter2: java.lang.String;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1 = newarray (java.lang.String)[2];

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        r1[0] = $r4;

        r1[1] = r31;

        r32 = null;

        r33 = null;

     label01:
        $r5 = r0.<com.android.server.notification.CalendarTracker: android.content.Context mUserContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        $r7 = <com.android.server.notification.CalendarTracker: java.lang.String[] ATTENDEE_PROJECTION>;

        r34 = virtualinvoke $r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r8, $r7, "event_id = ? AND attendeeEmail = ?", r1, null);

     label02:
        if r34 == null goto label37;

        r32 = r34;

        r33 = r34;

     label03:
        $i5 = interfaceinvoke r34.<android.database.Cursor: int getCount()>();

        if $i5 != 0 goto label05;

     label04:
        goto label37;

     label05:
        z9 = 0;

     label06:
        if r34 == null goto label34;

        r32 = r34;

        r33 = r34;

     label07:
        $z5 = interfaceinvoke r34.<android.database.Cursor: boolean moveToNext()>();

        if $z5 == 0 goto label34;

     label08:
        r32 = r34;

        r33 = r34;

     label09:
        l2 = interfaceinvoke r34.<android.database.Cursor: long getLong(int)>(0);

     label10:
        r32 = r34;

        r33 = r34;

     label11:
        r2 = interfaceinvoke r34.<android.database.Cursor: java.lang.String getString(int)>(1);

     label12:
        r32 = r34;

        r33 = r34;

     label13:
        i15 = interfaceinvoke r34.<android.database.Cursor: int getInt(int)>(2);

     label14:
        r32 = r34;

        r33 = r34;

     label15:
        $i8 = r30.<android.service.notification.ZenModeConfig$EventInfo: int reply>;

        z0 = staticinvoke <com.android.server.notification.CalendarTracker: boolean meetsReply(int,int)>($i8, i15);

     label16:
        r32 = r34;

        r33 = r34;

     label17:
        $z6 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z6 == 0 goto label29;

     label18:
        r32 = r34;

        r33 = r34;

     label19:
        r3 = new java.lang.StringBuilder;

     label20:
        r32 = r34;

        r33 = r34;

     label21:
        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

     label22:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

     label23:
        $r13 = newarray (java.lang.Object)[2];

        $r14 = staticinvoke <com.android.server.notification.CalendarTracker: java.lang.String attendeeStatusToString(int)>(i15);

        $r13[0] = $r14;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r13[1] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("status=%s, meetsReply=%s", $r13);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", $r17);

     label24:
        goto label29;

     label25:
        $r27 := @caughtexception;

        r35 = $r27;

        goto label53;

     label26:
        $r21 := @caughtexception;

        r36 = $r21;

        goto label47;

     label27:
        $r25 := @caughtexception;

        r35 = $r25;

        goto label53;

     label28:
        $r28 := @caughtexception;

        r36 = $r28;

        goto label47;

     label29:
        $l9 = (long) i0;

        $b10 = l2 cmp $l9;

        if $b10 != 0 goto label32;

        r37 = r34;

     label30:
        z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r2, r31);

     label31:
        if z1 == 0 goto label32;

        if z0 == 0 goto label32;

        z10 = 1;

        goto label33;

     label32:
        z10 = 0;

     label33:
        z9 = z9 | z10;

        goto label06;

     label34:
        if r34 == null goto label35;

        interfaceinvoke r34.<android.database.Cursor: void close()>();

     label35:
        $z4 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z4 == 0 goto label36;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meetsAttendee took ");

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l7 = $l6 - l1;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", $r12);

     label36:
        return z9;

     label37:
        r37 = r34;

     label38:
        $z2 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z2 == 0 goto label41;

     label39:
        r37 = r34;

     label40:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", "No attendees found");

     label41:
        if r34 == null goto label42;

        interfaceinvoke r34.<android.database.Cursor: void close()>();

     label42:
        $z3 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z3 == 0 goto label43;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meetsAttendee took ");

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = $l3 - l1;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", $r10);

     label43:
        return 1;

     label44:
        $r29 := @caughtexception;

        r36 = $r29;

        goto label47;

     label45:
        $r24 := @caughtexception;

        r35 = $r24;

        r34 = r32;

        goto label53;

     label46:
        $r26 := @caughtexception;

        r36 = $r26;

        r34 = r33;

     label47:
        r37 = r34;

     label48:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ConditionProviders.CT", "error querying attendees content provider", r36);

     label49:
        if r34 == null goto label50;

        interfaceinvoke r34.<android.database.Cursor: void close()>();

     label50:
        $z8 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z8 == 0 goto label51;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meetsAttendee took ");

        $l13 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l14 = $l13 - l1;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", $r23);

     label51:
        return 0;

     label52:
        $r18 := @caughtexception;

        r35 = $r18;

        r34 = r37;

     label53:
        if r34 == null goto label54;

        interfaceinvoke r34.<android.database.Cursor: void close()>();

     label54:
        $z7 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z7 == 0 goto label55;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meetsAttendee took ");

        $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l12 = $l11 - l1;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", $r20);

     label55:
        throw r35;

        catch android.database.sqlite.SQLiteException from label01 to label02 with label46;
        catch java.lang.Throwable from label01 to label02 with label45;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label46;
        catch java.lang.Throwable from label03 to label04 with label45;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label46;
        catch java.lang.Throwable from label07 to label08 with label45;
        catch android.database.sqlite.SQLiteException from label09 to label10 with label46;
        catch java.lang.Throwable from label09 to label10 with label45;
        catch android.database.sqlite.SQLiteException from label11 to label12 with label46;
        catch java.lang.Throwable from label11 to label12 with label45;
        catch android.database.sqlite.SQLiteException from label13 to label14 with label46;
        catch java.lang.Throwable from label13 to label14 with label45;
        catch android.database.sqlite.SQLiteException from label15 to label16 with label46;
        catch java.lang.Throwable from label15 to label16 with label45;
        catch android.database.sqlite.SQLiteException from label17 to label18 with label46;
        catch java.lang.Throwable from label17 to label18 with label45;
        catch android.database.sqlite.SQLiteException from label19 to label20 with label46;
        catch java.lang.Throwable from label19 to label20 with label45;
        catch android.database.sqlite.SQLiteException from label21 to label22 with label46;
        catch java.lang.Throwable from label21 to label22 with label45;
        catch android.database.sqlite.SQLiteException from label22 to label23 with label28;
        catch java.lang.Throwable from label22 to label23 with label27;
        catch android.database.sqlite.SQLiteException from label23 to label24 with label26;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch android.database.sqlite.SQLiteException from label30 to label31 with label44;
        catch java.lang.Throwable from label30 to label31 with label52;
        catch android.database.sqlite.SQLiteException from label38 to label39 with label44;
        catch java.lang.Throwable from label38 to label39 with label52;
        catch android.database.sqlite.SQLiteException from label40 to label41 with label44;
        catch java.lang.Throwable from label40 to label41 with label52;
        catch java.lang.Throwable from label48 to label49 with label52;
    }

    private static boolean meetsReply(int, int)
    {
        int i0, i1;
        boolean z2, z3, z4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z2 = 0;

        if i0 == 0 goto label6;

        if i0 == 1 goto label3;

        if i0 == 2 goto label1;

        return 0;

     label1:
        if i1 != 1 goto label2;

        z2 = 1;

     label2:
        return z2;

     label3:
        if i1 == 1 goto label4;

        z3 = 0;

        if i1 != 4 goto label5;

     label4:
        z3 = 1;

     label5:
        return z3;

     label6:
        z4 = 0;

        if i1 == 2 goto label7;

        z4 = 1;

     label7:
        return z4;
    }

    private void setRegistered(boolean)
    {
        com.android.server.notification.CalendarTracker r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.content.ContentResolver r1;
        int i0;
        android.content.Context $r2, $r3;
        android.database.ContentObserver $r4, $r6, $r8, $r20;
        android.net.Uri $r5, $r7, $r9;
        java.lang.StringBuilder $r10, $r14, $r21;
        java.lang.String $r13, $r19, $r24;

        r0 := @this: com.android.server.notification.CalendarTracker;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.notification.CalendarTracker: boolean mRegistered>;

        if $z1 != z0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.notification.CalendarTracker: android.content.Context mSystemContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = r0.<com.android.server.notification.CalendarTracker: android.content.Context mUserContext>;

        i0 = virtualinvoke $r3.<android.content.Context: int getUserId()>();

        $z2 = r0.<com.android.server.notification.CalendarTracker: boolean mRegistered>;

        if $z2 == 0 goto label3;

        $z5 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z5 == 0 goto label2;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unregister content observer u=");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", $r24);

     label2:
        $r20 = r0.<com.android.server.notification.CalendarTracker: android.database.ContentObserver mObserver>;

        virtualinvoke r1.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r20);

     label3:
        r0.<com.android.server.notification.CalendarTracker: boolean mRegistered> = z0;

        $z6 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z6 == 0 goto label4;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRegistered = ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", $r19);

     label4:
        $z3 = r0.<com.android.server.notification.CalendarTracker: boolean mRegistered>;

        if $z3 == 0 goto label6;

        $z4 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z4 == 0 goto label5;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("register content observer u=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", $r13);

     label5:
        $r5 = <android.provider.CalendarContract$Instances: android.net.Uri CONTENT_URI>;

        $r4 = r0.<com.android.server.notification.CalendarTracker: android.database.ContentObserver mObserver>;

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r5, 1, $r4, i0);

        $r7 = <android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>;

        $r6 = r0.<com.android.server.notification.CalendarTracker: android.database.ContentObserver mObserver>;

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r7, 1, $r6, i0);

        $r9 = <android.provider.CalendarContract$Calendars: android.net.Uri CONTENT_URI>;

        $r8 = r0.<com.android.server.notification.CalendarTracker: android.database.ContentObserver mObserver>;

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r9, 1, $r8, i0);

     label6:
        return;
    }

    public com.android.server.notification.CalendarTracker$CheckEventResult checkEvent(android.service.notification.ZenModeConfig$EventInfo, long)
    {
        com.android.server.notification.CalendarTracker r0;
        long l0, l1, l2, l4, $l6, $l7, $l11, $l13;
        android.net.Uri$Builder r1;
        android.net.Uri r2, $r9;
        java.lang.String r5, r6, r7, $r13, $r16, $r23, r44;
        int i3, i5, $i8;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, z11, z12;
        java.util.Date r8, r43;
        com.android.server.notification.CalendarTracker$CheckEventResult $r10;
        android.content.Context $r11;
        java.lang.Long $r12, $r14, $r15, $r17, $r21;
        byte $b9, $b10, $b12, $b14, $b15, $b16;
        java.lang.Object[] $r18;
        java.lang.Boolean $r19, $r22;
        java.lang.Integer $r20;
        java.lang.Exception $r24, $r30, $r32, $r33, $r34, r46;
        java.lang.Throwable $r25, $r26, $r27, $r28, $r29, $r31, r45;
        android.service.notification.ZenModeConfig$EventInfo r35;
        android.database.Cursor r36, r39, r40, r41;
        android.content.ContentResolver r37;
        java.lang.String[] r38;
        android.util.ArraySet r42;

        r0 := @this: com.android.server.notification.CalendarTracker;

        r35 := @parameter0: android.service.notification.ZenModeConfig$EventInfo;

        l0 := @parameter1: long;

        $r9 = <android.provider.CalendarContract$Instances: android.net.Uri CONTENT_URI>;

        r1 = virtualinvoke $r9.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        staticinvoke <android.content.ContentUris: android.net.Uri$Builder appendId(android.net.Uri$Builder,long)>(r1, l0);

        $l6 = l0 + 86400000L;

        staticinvoke <android.content.ContentUris: android.net.Uri$Builder appendId(android.net.Uri$Builder,long)>(r1, $l6);

        r2 = virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri build()>();

        r36 = null;

        $r10 = new com.android.server.notification.CalendarTracker$CheckEventResult;

        specialinvoke $r10.<com.android.server.notification.CalendarTracker$CheckEventResult: void <init>()>();

        $l7 = 86400000L + l0;

        $r10.<com.android.server.notification.CalendarTracker$CheckEventResult: long recheckAt> = $l7;

     label01:
        $r11 = r0.<com.android.server.notification.CalendarTracker: android.content.Context mUserContext>;

        r37 = virtualinvoke $r11.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r38 = <com.android.server.notification.CalendarTracker: java.lang.String[] INSTANCE_PROJECTION>;

     label02:
        r39 = virtualinvoke r37.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r2, r38, null, null, "begin ASC");

     label03:
        r36 = r39;

        r40 = r39;

        r41 = r39;

     label04:
        r42 = specialinvoke r0.<com.android.server.notification.CalendarTracker: android.util.ArraySet getCalendarsWithAccess()>();

     label05:
        if r39 == null goto label63;

        r40 = r39;

        r41 = r39;

     label06:
        $z1 = interfaceinvoke r39.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label63;

     label07:
        r40 = r39;

        r41 = r39;

     label08:
        l1 = interfaceinvoke r39.<android.database.Cursor: long getLong(int)>(0);

     label09:
        r40 = r39;

        r41 = r39;

     label10:
        l2 = interfaceinvoke r39.<android.database.Cursor: long getLong(int)>(1);

     label11:
        r40 = r39;

        r41 = r39;

     label12:
        r5 = interfaceinvoke r39.<android.database.Cursor: java.lang.String getString(int)>(2);

     label13:
        r40 = r39;

        r41 = r39;

     label14:
        $i8 = interfaceinvoke r39.<android.database.Cursor: int getInt(int)>(3);

        if $i8 != 1 goto label16;

     label15:
        z9 = 1;

        goto label17;

     label16:
        z9 = 0;

     label17:
        r40 = r39;

        r41 = r39;

     label18:
        i3 = interfaceinvoke r39.<android.database.Cursor: int getInt(int)>(4);

     label19:
        r40 = r39;

        r41 = r39;

     label20:
        r6 = interfaceinvoke r39.<android.database.Cursor: java.lang.String getString(int)>(5);

     label21:
        r40 = r39;

        r41 = r39;

     label22:
        r7 = interfaceinvoke r39.<android.database.Cursor: java.lang.String getString(int)>(6);

     label23:
        r40 = r39;

        r41 = r39;

     label24:
        l4 = interfaceinvoke r39.<android.database.Cursor: long getLong(int)>(7);

     label25:
        r40 = r39;

        r41 = r39;

     label26:
        i5 = interfaceinvoke r39.<android.database.Cursor: int getInt(int)>(8);

     label27:
        r40 = r39;

        r41 = r39;

     label28:
        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        z0 = virtualinvoke r42.<android.util.ArraySet: boolean contains(java.lang.Object)>($r12);

     label29:
        r40 = r39;

        r41 = r39;

     label30:
        $z2 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z2 == 0 goto label36;

     label31:
        r43 = new java.util.Date;

        specialinvoke r43.<java.util.Date: void <init>(long)>(l1);

        r8 = new java.util.Date;

        specialinvoke r8.<java.util.Date: void <init>(long)>(l2);

        r44 = staticinvoke <com.android.server.notification.CalendarTracker: java.lang.String availabilityToString(int)>(i5);

     label32:
        $r18 = newarray (java.lang.Object)[10];

        $r18[0] = r5;

        $r18[1] = r43;

        $r18[2] = r8;

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z9);

        $r18[3] = $r19;

        $r18[4] = r44;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r18[5] = $r20;

        $r18[6] = r6;

        $r18[7] = r7;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        $r18[8] = $r21;

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r18[9] = $r22;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("title=%s time=%s-%s vis=%s availability=%s eventId=%s name=%s owner=%s calId=%s canAccessCal=%s", $r18);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", $r23);

     label33:
        goto label36;

     label34:
        $r29 := @caughtexception;

        r45 = $r29;

        goto label75;

     label35:
        $r33 := @caughtexception;

        r46 = $r33;

        goto label71;

     label36:
        z10 = 0;

        $b9 = l0 cmp l1;

        if $b9 < 0 goto label37;

        $b15 = l0 cmp l2;

        if $b15 >= 0 goto label37;

        z11 = 1;

        goto label38;

     label37:
        z11 = 0;

     label38:
        if z9 == 0 goto label46;

        if z0 == 0 goto label46;

     label39:
        $r13 = r35.<android.service.notification.ZenModeConfig$EventInfo: java.lang.String calName>;

        if $r13 != null goto label42;

        $r17 = r35.<android.service.notification.ZenModeConfig$EventInfo: java.lang.Long calendarId>;

        if $r17 == null goto label41;

     label40:
        goto label42;

     label41:
        goto label43;

     label42:
        $r14 = r35.<android.service.notification.ZenModeConfig$EventInfo: java.lang.Long calendarId>;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        $z7 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r14, $r15);

        if $z7 != 0 goto label43;

        $r16 = r35.<android.service.notification.ZenModeConfig$EventInfo: java.lang.String calName>;

        $z8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r16, r6);

        if $z8 == 0 goto label46;

     label43:
        z12 = 1;

        goto label47;

     label44:
        $r31 := @caughtexception;

        r45 = $r31;

        goto label75;

     label45:
        $r24 := @caughtexception;

        r46 = $r24;

        goto label71;

     label46:
        z12 = 0;

     label47:
        if i5 == 1 goto label48;

        z10 = 1;

     label48:
        if z12 == 0 goto label62;

        if z10 == 0 goto label62;

     label49:
        $z3 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z3 == 0 goto label51;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", "  MEETS CALENDAR & AVAILABILITY");

     label50:
        goto label51;

     label51:
        $z4 = specialinvoke r0.<com.android.server.notification.CalendarTracker: boolean meetsAttendee(android.service.notification.ZenModeConfig$EventInfo,int,java.lang.String)>(r35, i3, r7);

        if $z4 == 0 goto label61;

        $z5 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z5 == 0 goto label52;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", "    MEETS ATTENDEE");

     label52:
        if z11 == 0 goto label55;

     label53:
        $z6 = <com.android.server.notification.CalendarTracker: boolean DEBUG>;

        if $z6 == 0 goto label54;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConditionProviders.CT", "      MEETS TIME");

     label54:
        $r10.<com.android.server.notification.CalendarTracker$CheckEventResult: boolean inEvent> = 1;

     label55:
        $b16 = l1 cmp l0;

        if $b16 <= 0 goto label58;

     label56:
        $l13 = $r10.<com.android.server.notification.CalendarTracker$CheckEventResult: long recheckAt>;

        $b14 = l1 cmp $l13;

        if $b14 >= 0 goto label58;

        $r10.<com.android.server.notification.CalendarTracker$CheckEventResult: long recheckAt> = l1;

     label57:
        goto label62;

     label58:
        $b10 = l2 cmp l0;

        if $b10 <= 0 goto label62;

     label59:
        $l11 = $r10.<com.android.server.notification.CalendarTracker$CheckEventResult: long recheckAt>;

        $b12 = l2 cmp $l11;

        if $b12 >= 0 goto label62;

        $r10.<com.android.server.notification.CalendarTracker$CheckEventResult: long recheckAt> = l2;

     label60:
        goto label62;

     label61:
        goto label62;

     label62:
        goto label05;

     label63:
        if r39 == null goto label64;

        interfaceinvoke r39.<android.database.Cursor: void close()>();

     label64:
        goto label73;

     label65:
        $r27 := @caughtexception;

        r45 = $r27;

        r36 = r40;

        goto label75;

     label66:
        $r34 := @caughtexception;

        r46 = $r34;

        r36 = r41;

        goto label71;

     label67:
        $r28 := @caughtexception;

        r45 = $r28;

        r36 = null;

        goto label75;

     label68:
        $r30 := @caughtexception;

        r46 = $r30;

        goto label71;

     label69:
        $r26 := @caughtexception;

        r45 = $r26;

        r36 = null;

        goto label75;

     label70:
        $r32 := @caughtexception;

        r46 = $r32;

     label71:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ConditionProviders.CT", "error reading calendar", r46);

     label72:
        if r36 == null goto label73;

        interfaceinvoke r36.<android.database.Cursor: void close()>();

     label73:
        return $r10;

     label74:
        $r25 := @caughtexception;

        r45 = $r25;

     label75:
        if r36 == null goto label76;

        interfaceinvoke r36.<android.database.Cursor: void close()>();

     label76:
        throw r45;

        catch java.lang.Exception from label01 to label02 with label70;
        catch java.lang.Throwable from label01 to label02 with label69;
        catch java.lang.Exception from label02 to label03 with label68;
        catch java.lang.Throwable from label02 to label03 with label67;
        catch java.lang.Exception from label04 to label05 with label66;
        catch java.lang.Throwable from label04 to label05 with label65;
        catch java.lang.Exception from label06 to label07 with label66;
        catch java.lang.Throwable from label06 to label07 with label65;
        catch java.lang.Exception from label08 to label09 with label66;
        catch java.lang.Throwable from label08 to label09 with label65;
        catch java.lang.Exception from label10 to label11 with label66;
        catch java.lang.Throwable from label10 to label11 with label65;
        catch java.lang.Exception from label12 to label13 with label66;
        catch java.lang.Throwable from label12 to label13 with label65;
        catch java.lang.Exception from label14 to label15 with label66;
        catch java.lang.Throwable from label14 to label15 with label65;
        catch java.lang.Exception from label18 to label19 with label66;
        catch java.lang.Throwable from label18 to label19 with label65;
        catch java.lang.Exception from label20 to label21 with label66;
        catch java.lang.Throwable from label20 to label21 with label65;
        catch java.lang.Exception from label22 to label23 with label66;
        catch java.lang.Throwable from label22 to label23 with label65;
        catch java.lang.Exception from label24 to label25 with label66;
        catch java.lang.Throwable from label24 to label25 with label65;
        catch java.lang.Exception from label26 to label27 with label66;
        catch java.lang.Throwable from label26 to label27 with label65;
        catch java.lang.Exception from label28 to label29 with label66;
        catch java.lang.Throwable from label28 to label29 with label65;
        catch java.lang.Exception from label30 to label31 with label66;
        catch java.lang.Throwable from label30 to label31 with label65;
        catch java.lang.Exception from label31 to label32 with label35;
        catch java.lang.Throwable from label31 to label32 with label34;
        catch java.lang.Exception from label32 to label33 with label45;
        catch java.lang.Throwable from label32 to label33 with label44;
        catch java.lang.Exception from label39 to label40 with label45;
        catch java.lang.Throwable from label39 to label40 with label44;
        catch java.lang.Exception from label42 to label43 with label45;
        catch java.lang.Throwable from label42 to label43 with label44;
        catch java.lang.Exception from label49 to label50 with label45;
        catch java.lang.Throwable from label49 to label50 with label44;
        catch java.lang.Exception from label51 to label52 with label45;
        catch java.lang.Throwable from label51 to label52 with label44;
        catch java.lang.Exception from label53 to label54 with label45;
        catch java.lang.Throwable from label53 to label54 with label44;
        catch java.lang.Exception from label54 to label55 with label45;
        catch java.lang.Throwable from label54 to label55 with label44;
        catch java.lang.Exception from label56 to label57 with label45;
        catch java.lang.Throwable from label56 to label57 with label44;
        catch java.lang.Exception from label59 to label60 with label45;
        catch java.lang.Throwable from label59 to label60 with label44;
        catch java.lang.Throwable from label71 to label72 with label74;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.notification.CalendarTracker r0;
        java.lang.String r1;
        java.io.PrintWriter r2;
        com.android.server.notification.CalendarTracker$Callback $r3;
        boolean $z0;
        android.content.Context $r4;
        int $i0;

        r0 := @this: com.android.server.notification.CalendarTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mCallback=");

        $r3 = r0.<com.android.server.notification.CalendarTracker: com.android.server.notification.CalendarTracker$Callback mCallback>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mRegistered=");

        $z0 = r0.<com.android.server.notification.CalendarTracker: boolean mRegistered>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("u=");

        $r4 = r0.<com.android.server.notification.CalendarTracker: android.content.Context mUserContext>;

        $i0 = virtualinvoke $r4.<android.content.Context: int getUserId()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i0);

        return;
    }

    public void setCallback(com.android.server.notification.CalendarTracker$Callback)
    {
        com.android.server.notification.CalendarTracker r0;
        com.android.server.notification.CalendarTracker$Callback r1, $r2;
        boolean z0;

        r0 := @this: com.android.server.notification.CalendarTracker;

        r1 := @parameter0: com.android.server.notification.CalendarTracker$Callback;

        $r2 = r0.<com.android.server.notification.CalendarTracker: com.android.server.notification.CalendarTracker$Callback mCallback>;

        if $r2 != r1 goto label1;

        return;

     label1:
        r0.<com.android.server.notification.CalendarTracker: com.android.server.notification.CalendarTracker$Callback mCallback> = r1;

        if r1 == null goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        specialinvoke r0.<com.android.server.notification.CalendarTracker: void setRegistered(boolean)>(z0);

        return;
    }
}
