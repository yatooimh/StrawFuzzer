public class com.android.server.notification.ConditionProviders extends com.android.server.notification.ManagedServices
{
    static final java.lang.String TAG_ENABLED_DND_APPS;
    private com.android.server.notification.ConditionProviders$Callback mCallback;
    private final java.util.ArrayList mRecords;
    private final android.util.ArraySet mSystemConditionProviderNames;
    private final android.util.ArraySet mSystemConditionProviders;

    public void <init>(android.content.Context, com.android.server.notification.ManagedServices$UserProfiles, android.content.pm.IPackageManager)
    {
        com.android.server.notification.ConditionProviders r0;
        android.content.Context r1, $r7;
        com.android.server.notification.ManagedServices$UserProfiles r2;
        android.content.pm.IPackageManager r3;
        java.lang.Object $r4;
        java.util.ArrayList $r5;
        android.util.ArraySet $r6, $r9;
        java.lang.String[] $r8;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.notification.ManagedServices$UserProfiles;

        r3 := @parameter2: android.content.pm.IPackageManager;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        specialinvoke r0.<com.android.server.notification.ManagedServices: void <init>(android.content.Context,java.lang.Object,com.android.server.notification.ManagedServices$UserProfiles,android.content.pm.IPackageManager)>(r1, $r4, r2, r3);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.notification.ConditionProviders: java.util.ArrayList mRecords> = $r5;

        $r6 = new android.util.ArraySet;

        specialinvoke $r6.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.notification.ConditionProviders: android.util.ArraySet mSystemConditionProviders> = $r6;

        $r7 = r0.<com.android.server.notification.ConditionProviders: android.content.Context mContext>;

        $r8 = staticinvoke <com.android.server.notification.PropConfig: java.lang.String[] getStringArray(android.content.Context,java.lang.String,int)>($r7, "system.condition.providers", 17236080);

        $r9 = staticinvoke <com.android.server.notification.ConditionProviders: android.util.ArraySet safeSet(java.lang.Object[])>($r8);

        r0.<com.android.server.notification.ConditionProviders: android.util.ArraySet mSystemConditionProviderNames> = $r9;

        r0.<com.android.server.notification.ConditionProviders: int mApprovalLevel> = 0;

        return;
    }

    private com.android.server.notification.ConditionProviders$ConditionRecord getRecordLocked(android.net.Uri, android.content.ComponentName, boolean)
    {
        com.android.server.notification.ConditionProviders r0;
        android.content.ComponentName r1, $r9;
        boolean z0, $z2, $z3;
        int i0, i1;
        com.android.server.notification.ConditionProviders$ConditionRecord r2, $r4;
        java.util.ArrayList $r3, $r5, $r6;
        java.lang.Object $r7;
        android.net.Uri $r8, r10;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r10 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.content.ComponentName;

        z0 := @parameter2: boolean;

        if r10 == null goto label6;

        if r1 != null goto label1;

        goto label6;

     label1:
        $r3 = r0.<com.android.server.notification.ConditionProviders: java.util.ArrayList mRecords>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r6 = r0.<com.android.server.notification.ConditionProviders: java.util.ArrayList mRecords>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.notification.ConditionProviders$ConditionRecord) $r7;

        $r8 = r2.<com.android.server.notification.ConditionProviders$ConditionRecord: android.net.Uri id>;

        $z2 = virtualinvoke $r8.<android.net.Uri: boolean equals(java.lang.Object)>(r10);

        if $z2 == 0 goto label3;

        $r9 = r2.<com.android.server.notification.ConditionProviders$ConditionRecord: android.content.ComponentName component>;

        $z3 = virtualinvoke $r9.<android.content.ComponentName: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label3;

        return r2;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if z0 == 0 goto label5;

        $r4 = new com.android.server.notification.ConditionProviders$ConditionRecord;

        specialinvoke $r4.<com.android.server.notification.ConditionProviders$ConditionRecord: void <init>(android.net.Uri,android.content.ComponentName,com.android.server.notification.ConditionProviders$1)>(r10, r1, null);

        $r5 = r0.<com.android.server.notification.ConditionProviders: java.util.ArrayList mRecords>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        return $r4;

     label5:
        return null;

     label6:
        return null;
    }

    private static android.service.notification.IConditionProvider provider(com.android.server.notification.ConditionProviders$ConditionRecord)
    {
        com.android.server.notification.ManagedServices$ManagedServiceInfo $r0;
        com.android.server.notification.ConditionProviders$ConditionRecord r1;
        android.service.notification.IConditionProvider r2;

        r1 := @parameter0: com.android.server.notification.ConditionProviders$ConditionRecord;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        $r0 = r1.<com.android.server.notification.ConditionProviders$ConditionRecord: com.android.server.notification.ManagedServices$ManagedServiceInfo info>;

        r2 = staticinvoke <com.android.server.notification.ConditionProviders: android.service.notification.IConditionProvider provider(com.android.server.notification.ManagedServices$ManagedServiceInfo)>($r0);

     label2:
        return r2;
    }

    private static android.service.notification.IConditionProvider provider(com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        android.os.IInterface $r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        android.service.notification.IConditionProvider r2;

        r1 := @parameter0: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        $r0 = r1.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.os.IInterface service>;

        r2 = (android.service.notification.IConditionProvider) $r0;

     label2:
        return r2;
    }

    private android.service.notification.Condition[] removeDuplicateConditions(java.lang.String, android.service.notification.Condition[])
    {
        com.android.server.notification.ConditionProviders r0;
        android.service.notification.Condition[] r1, r19;
        int i0, $i1, $i2, $i3, $i4, $i5, i7, i8;
        android.net.Uri r3;
        java.lang.String r4, $r17, r18;
        android.util.ArrayMap $r6;
        java.lang.Object $r7;
        android.service.notification.Condition $r8, $r9, $r10;
        boolean $z0;
        java.lang.StringBuilder $r12;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r18 := @parameter0: java.lang.String;

        r1 := @parameter1: android.service.notification.Condition[];

        if r1 == null goto label10;

        $i1 = lengthof r1;

        if $i1 != 0 goto label01;

        goto label10;

     label01:
        i0 = lengthof r1;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>(int)>(i0);

        i7 = 0;

     label02:
        if i7 >= i0 goto label05;

        $r9 = r1[i7];

        r3 = $r9.<android.service.notification.Condition: android.net.Uri id>;

        $z0 = virtualinvoke $r6.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r3);

        if $z0 == 0 goto label03;

        r4 = r0.<com.android.server.notification.ConditionProviders: java.lang.String TAG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring condition from ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for duplicate id: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r4, $r17);

        goto label04;

     label03:
        $r10 = r1[i7];

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r10);

     label04:
        i7 = i7 + 1;

        goto label02;

     label05:
        $i2 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        if $i2 != 0 goto label06;

        return null;

     label06:
        $i3 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        if $i3 != i0 goto label07;

        return r1;

     label07:
        $i4 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        r19 = newarray (android.service.notification.Condition)[$i4];

        i8 = 0;

     label08:
        $i5 = lengthof r19;

        if i8 >= $i5 goto label09;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        $r8 = (android.service.notification.Condition) $r7;

        r19[i8] = $r8;

        i8 = i8 + 1;

        goto label08;

     label09:
        return r19;

     label10:
        return null;
    }

    private static transient android.util.ArraySet safeSet(java.lang.Object[])
    {
        java.lang.Object[] r0;
        int i0, $i1, i2;
        java.lang.Object r2;
        android.util.ArraySet $r3;

        r0 := @parameter0: java.lang.Object[];

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        if r0 == null goto label5;

        $i1 = lengthof r0;

        if $i1 != 0 goto label1;

        goto label5;

     label1:
        i0 = lengthof r0;

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        r2 = r0[i2];

        if r2 == null goto label3;

        virtualinvoke $r3.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return $r3;

     label5:
        return $r3;
    }

    private void subscribeLocked(com.android.server.notification.ConditionProviders$ConditionRecord)
    {
        com.android.server.notification.ConditionProviders r0;
        android.service.notification.IConditionProvider r1;
        boolean $z0;
        android.net.Uri $r2, $r5, r19;
        android.content.ComponentName $r3;
        java.lang.String $r4, $r7, $r10, r12, r15, r17;
        java.lang.StringBuilder $r6, $r9, r16;
        android.os.RemoteException $r8, r14;
        com.android.server.notification.ConditionProviders$ConditionRecord r11;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r11 := @parameter0: com.android.server.notification.ConditionProviders$ConditionRecord;

        $z0 = r0.<com.android.server.notification.ConditionProviders: boolean DEBUG>;

        if $z0 == 0 goto label1;

        r12 = r0.<com.android.server.notification.ConditionProviders: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("subscribeLocked ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r12, $r7);

     label1:
        r1 = staticinvoke <com.android.server.notification.ConditionProviders: android.service.notification.IConditionProvider provider(com.android.server.notification.ConditionProviders$ConditionRecord)>(r11);

        r14 = null;

        if r1 == null goto label5;

     label2:
        r15 = r0.<com.android.server.notification.ConditionProviders: java.lang.String TAG>;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subscribing to ");

        $r2 = r11.<com.android.server.notification.ConditionProviders$ConditionRecord: android.net.Uri id>;

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r3 = r11.<com.android.server.notification.ConditionProviders$ConditionRecord: android.content.ComponentName component>;

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r15, $r4);

        $r5 = r11.<com.android.server.notification.ConditionProviders$ConditionRecord: android.net.Uri id>;

        interfaceinvoke r1.<android.service.notification.IConditionProvider: void onSubscribe(android.net.Uri)>($r5);

        r11.<com.android.server.notification.ConditionProviders$ConditionRecord: boolean subscribed> = 1;

     label3:
        r14 = null;

        goto label5;

     label4:
        $r8 := @caughtexception;

        r14 = $r8;

        r17 = r0.<com.android.server.notification.ConditionProviders: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error subscribing to ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>(r17, $r10, $r8);

     label5:
        if r11 == null goto label6;

        r19 = r11.<com.android.server.notification.ConditionProviders$ConditionRecord: android.net.Uri id>;

        goto label7;

     label6:
        r19 = null;

     label7:
        staticinvoke <com.android.server.notification.ZenLog: void traceSubscribe(android.net.Uri,android.service.notification.IConditionProvider,android.os.RemoteException)>(r19, r1, r14);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void unsubscribeLocked(com.android.server.notification.ConditionProviders$ConditionRecord)
    {
        com.android.server.notification.ConditionProviders r0;
        android.service.notification.IConditionProvider r1;
        java.lang.String r2, $r5, $r8, r10;
        boolean $z0;
        android.net.Uri $r3, r14;
        java.lang.StringBuilder $r4, $r7;
        android.os.RemoteException $r6, r12;
        com.android.server.notification.ConditionProviders$ConditionRecord r9;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r9 := @parameter0: com.android.server.notification.ConditionProviders$ConditionRecord;

        $z0 = r0.<com.android.server.notification.ConditionProviders: boolean DEBUG>;

        if $z0 == 0 goto label1;

        r10 = r0.<com.android.server.notification.ConditionProviders: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsubscribeLocked ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r10, $r5);

     label1:
        r1 = staticinvoke <com.android.server.notification.ConditionProviders: android.service.notification.IConditionProvider provider(com.android.server.notification.ConditionProviders$ConditionRecord)>(r9);

        r12 = null;

        if r1 == null goto label6;

     label2:
        $r3 = r9.<com.android.server.notification.ConditionProviders$ConditionRecord: android.net.Uri id>;

        interfaceinvoke r1.<android.service.notification.IConditionProvider: void onUnsubscribe(android.net.Uri)>($r3);

     label3:
        r12 = null;

        goto label5;

     label4:
        $r6 := @caughtexception;

        r12 = $r6;

        r2 = r0.<com.android.server.notification.ConditionProviders: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error unsubscribing to ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>(r2, $r8, $r6);

     label5:
        r9.<com.android.server.notification.ConditionProviders$ConditionRecord: boolean subscribed> = 0;

     label6:
        if r9 == null goto label7;

        r14 = r9.<com.android.server.notification.ConditionProviders$ConditionRecord: android.net.Uri id>;

        goto label8;

     label7:
        r14 = null;

     label8:
        staticinvoke <com.android.server.notification.ZenLog: void traceUnsubscribe(android.net.Uri,android.service.notification.IConditionProvider,android.os.RemoteException)>(r14, r1, r12);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void addSystemProvider(com.android.server.notification.SystemConditionProviderService)
    {
        com.android.server.notification.ConditionProviders r0;
        com.android.server.notification.SystemConditionProviderService r1;
        android.util.ArraySet $r2;
        android.content.Context $r3;
        android.service.notification.IConditionProvider $r4;
        android.content.ComponentName $r5;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r1 := @parameter0: com.android.server.notification.SystemConditionProviderService;

        $r2 = r0.<com.android.server.notification.ConditionProviders: android.util.ArraySet mSystemConditionProviders>;

        virtualinvoke $r2.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.notification.ConditionProviders: android.content.Context mContext>;

        virtualinvoke r1.<com.android.server.notification.SystemConditionProviderService: void attachBase(android.content.Context)>($r3);

        $r4 = virtualinvoke r1.<com.android.server.notification.SystemConditionProviderService: android.service.notification.IConditionProvider asInterface()>();

        $r5 = virtualinvoke r1.<com.android.server.notification.SystemConditionProviderService: android.content.ComponentName getComponent()>();

        virtualinvoke r0.<com.android.server.notification.ConditionProviders: void registerSystemService(android.os.IInterface,android.content.ComponentName,int)>($r4, $r5, 0);

        return;
    }

    protected android.os.IInterface asInterface(android.os.IBinder)
    {
        com.android.server.notification.ConditionProviders r0;
        android.os.IBinder r1;
        android.service.notification.IConditionProvider $r2;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.service.notification.IConditionProvider$Stub: android.service.notification.IConditionProvider asInterface(android.os.IBinder)>(r1);

        return $r2;
    }

    public com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceToken(android.service.notification.IConditionProvider)
    {
        com.android.server.notification.ConditionProviders r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.service.notification.IConditionProvider r3;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r4;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r3 := @parameter0: android.service.notification.IConditionProvider;

        r1 = r0.<com.android.server.notification.ConditionProviders: java.lang.Object mMutex>;

        entermonitor r1;

     label1:
        r4 = virtualinvoke r0.<com.android.server.notification.ConditionProviders: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r3);

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected boolean checkType(android.os.IInterface)
    {
        com.android.server.notification.ConditionProviders r0;
        android.os.IInterface r1;
        boolean $z0;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r1 := @parameter0: android.os.IInterface;

        $z0 = r1 instanceof android.service.notification.IConditionProvider;

        return $z0;
    }

    public void dump(java.io.PrintWriter, com.android.server.notification.NotificationManagerService$DumpFilter)
    {
        com.android.server.notification.ConditionProviders r0;
        com.android.server.notification.NotificationManagerService$DumpFilter r1;
        java.lang.Object r2, $r8, $r11;
        java.util.ArrayList $r3, $r4, $r10;
        int $i0, $i1, $i2, i3, i4;
        android.util.ArraySet $r5, $r6, $r7;
        com.android.server.notification.SystemConditionProviderService $r9;
        android.net.Uri $r12;
        android.content.ComponentName $r13;
        boolean $z0;
        java.lang.Throwable $r14;
        java.io.PrintWriter r15;
        com.android.server.notification.ConditionProviders$ConditionRecord r16;
        java.lang.String r17;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r15 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.server.notification.NotificationManagerService$DumpFilter;

        specialinvoke r0.<com.android.server.notification.ManagedServices: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(r15, r1);

        r2 = r0.<com.android.server.notification.ConditionProviders: java.lang.Object mMutex>;

        entermonitor r2;

     label01:
        virtualinvoke r15.<java.io.PrintWriter: void print(java.lang.String)>("    mRecords(");

        $r3 = r0.<com.android.server.notification.ConditionProviders: java.util.ArrayList mRecords>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        virtualinvoke r15.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r15.<java.io.PrintWriter: void println(java.lang.String)>("):");

     label02:
        i3 = 0;

     label03:
        $r4 = r0.<com.android.server.notification.ConditionProviders: java.util.ArrayList mRecords>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label11;

        $r10 = r0.<com.android.server.notification.ConditionProviders: java.util.ArrayList mRecords>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r16 = (com.android.server.notification.ConditionProviders$ConditionRecord) $r11;

     label04:
        if r1 == null goto label07;

     label05:
        $r13 = r16.<com.android.server.notification.ConditionProviders$ConditionRecord: android.content.ComponentName component>;

        $z0 = virtualinvoke r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean matches(android.content.ComponentName)>($r13);

        if $z0 != 0 goto label07;

     label06:
        goto label10;

     label07:
        virtualinvoke r15.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke r15.<java.io.PrintWriter: void println(java.lang.Object)>(r16);

        $r12 = r16.<com.android.server.notification.ConditionProviders$ConditionRecord: android.net.Uri id>;

        r17 = staticinvoke <com.android.server.notification.CountdownConditionProvider: java.lang.String tryParseDescription(android.net.Uri)>($r12);

     label08:
        if r17 == null goto label10;

     label09:
        virtualinvoke r15.<java.io.PrintWriter: void print(java.lang.String)>("        (");

        virtualinvoke r15.<java.io.PrintWriter: void print(java.lang.String)>(r17);

        virtualinvoke r15.<java.io.PrintWriter: void println(java.lang.String)>(")");

     label10:
        i3 = i3 + 1;

        goto label03;

     label11:
        exitmonitor r2;

     label12:
        virtualinvoke r15.<java.io.PrintWriter: void print(java.lang.String)>("    mSystemConditionProviders: ");

        $r5 = r0.<com.android.server.notification.ConditionProviders: android.util.ArraySet mSystemConditionProviderNames>;

        virtualinvoke r15.<java.io.PrintWriter: void println(java.lang.Object)>($r5);

        i4 = 0;

     label13:
        $r6 = r0.<com.android.server.notification.ConditionProviders: android.util.ArraySet mSystemConditionProviders>;

        $i2 = virtualinvoke $r6.<android.util.ArraySet: int size()>();

        if i4 >= $i2 goto label14;

        $r7 = r0.<com.android.server.notification.ConditionProviders: android.util.ArraySet mSystemConditionProviders>;

        $r8 = virtualinvoke $r7.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        $r9 = (com.android.server.notification.SystemConditionProviderService) $r8;

        virtualinvoke $r9.<com.android.server.notification.SystemConditionProviderService: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(r15, r1);

        i4 = i4 + 1;

        goto label13;

     label14:
        return;

     label15:
        $r14 := @caughtexception;

     label16:
        exitmonitor r2;

     label17:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void ensureRecordExists(android.content.ComponentName, android.net.Uri, android.service.notification.IConditionProvider)
    {
        com.android.server.notification.ConditionProviders r0;
        android.net.Uri r1;
        android.service.notification.IConditionProvider r2;
        java.lang.Object r3;
        com.android.server.notification.ManagedServices$ManagedServiceInfo $r4, $r5;
        java.lang.Throwable $r6;
        android.content.ComponentName r7;
        com.android.server.notification.ConditionProviders$ConditionRecord r8;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r7 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.service.notification.IConditionProvider;

        r3 = r0.<com.android.server.notification.ConditionProviders: java.lang.Object mMutex>;

        entermonitor r3;

     label1:
        r8 = specialinvoke r0.<com.android.server.notification.ConditionProviders: com.android.server.notification.ConditionProviders$ConditionRecord getRecordLocked(android.net.Uri,android.content.ComponentName,boolean)>(r1, r7, 1);

        $r4 = r8.<com.android.server.notification.ConditionProviders$ConditionRecord: com.android.server.notification.ManagedServices$ManagedServiceInfo info>;

        if $r4 != null goto label2;

        $r5 = virtualinvoke r0.<com.android.server.notification.ConditionProviders: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r2);

        r8.<com.android.server.notification.ConditionProviders$ConditionRecord: com.android.server.notification.ManagedServices$ManagedServiceInfo info> = $r5;

     label2:
        exitmonitor r3;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r3;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public android.service.notification.Condition findCondition(android.content.ComponentName, android.net.Uri)
    {
        com.android.server.notification.ConditionProviders r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.content.ComponentName r3;
        android.net.Uri r4;
        com.android.server.notification.ConditionProviders$ConditionRecord r5;
        android.service.notification.Condition r6;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r3 := @parameter0: android.content.ComponentName;

        r4 := @parameter1: android.net.Uri;

        if r3 == null goto label10;

        if r4 != null goto label01;

        goto label10;

     label01:
        r1 = r0.<com.android.server.notification.ConditionProviders: java.lang.Object mMutex>;

        entermonitor r1;

     label02:
        r5 = specialinvoke r0.<com.android.server.notification.ConditionProviders: com.android.server.notification.ConditionProviders$ConditionRecord getRecordLocked(android.net.Uri,android.content.ComponentName,boolean)>(r4, r3, 0);

     label03:
        r6 = null;

        if r5 == null goto label05;

     label04:
        r6 = r5.<com.android.server.notification.ConditionProviders$ConditionRecord: android.service.notification.Condition condition>;

     label05:
        exitmonitor r1;

     label06:
        return r6;

     label07:
        $r2 := @caughtexception;

     label08:
        exitmonitor r1;

     label09:
        throw $r2;

     label10:
        return null;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public android.service.notification.IConditionProvider findConditionProvider(android.content.ComponentName)
    {
        com.android.server.notification.ConditionProviders r0;
        android.content.ComponentName r1, $r6;
        java.util.Iterator r2;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        android.service.notification.IConditionProvider $r7;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r1 := @parameter0: android.content.ComponentName;

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r0.<com.android.server.notification.ConditionProviders: java.util.List getServices()>();

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.notification.ManagedServices$ManagedServiceInfo) $r5;

        $r6 = r3.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        $z1 = virtualinvoke r1.<android.content.ComponentName: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label3;

        $r7 = staticinvoke <com.android.server.notification.ConditionProviders: android.service.notification.IConditionProvider provider(com.android.server.notification.ManagedServices$ManagedServiceInfo)>(r3);

        return $r7;

     label3:
        goto label2;

     label4:
        return null;
    }

    protected com.android.server.notification.ManagedServices$Config getConfig()
    {
        com.android.server.notification.ConditionProviders r0;
        com.android.server.notification.ManagedServices$Config $r2;

        r0 := @this: com.android.server.notification.ConditionProviders;

        $r2 = new com.android.server.notification.ManagedServices$Config;

        specialinvoke $r2.<com.android.server.notification.ManagedServices$Config: void <init>()>();

        $r2.<com.android.server.notification.ManagedServices$Config: java.lang.String caption> = "condition provider";

        $r2.<com.android.server.notification.ManagedServices$Config: java.lang.String serviceInterface> = "android.service.notification.ConditionProviderService";

        $r2.<com.android.server.notification.ManagedServices$Config: java.lang.String secureSettingName> = "enabled_notification_policy_access_packages";

        $r2.<com.android.server.notification.ManagedServices$Config: java.lang.String xmlTag> = "dnd_apps";

        $r2.<com.android.server.notification.ManagedServices$Config: java.lang.String secondarySettingName> = "enabled_notification_listeners";

        $r2.<com.android.server.notification.ManagedServices$Config: java.lang.String bindPermission> = "android.permission.BIND_CONDITION_PROVIDER_SERVICE";

        $r2.<com.android.server.notification.ManagedServices$Config: java.lang.String settingsAction> = "android.settings.ACTION_CONDITION_PROVIDER_SETTINGS";

        $r2.<com.android.server.notification.ManagedServices$Config: int clientLabel> = 17039818;

        return $r2;
    }

    protected java.lang.String getRequiredPermission()
    {
        com.android.server.notification.ConditionProviders r0;

        r0 := @this: com.android.server.notification.ConditionProviders;

        return null;
    }

    public java.lang.Iterable getSystemProviders()
    {
        com.android.server.notification.ConditionProviders r0;
        android.util.ArraySet $r1;

        r0 := @this: com.android.server.notification.ConditionProviders;

        $r1 = r0.<com.android.server.notification.ConditionProviders: android.util.ArraySet mSystemConditionProviders>;

        return $r1;
    }

    public boolean isSystemProviderEnabled(java.lang.String)
    {
        com.android.server.notification.ConditionProviders r0;
        java.lang.String r1;
        android.util.ArraySet $r2;
        boolean $z0;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.ConditionProviders: android.util.ArraySet mSystemConditionProviderNames>;

        $z0 = virtualinvoke $r2.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    protected boolean isValidEntry(java.lang.String, int)
    {
        com.android.server.notification.ConditionProviders r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return 1;
    }

    protected void loadDefaultsFromConfig()
    {
        com.android.server.notification.ConditionProviders r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        int $i0, i1;
        java.lang.String $r3, $r4, r5;
        boolean $z0;
        java.lang.String[] r6;

        r0 := @this: com.android.server.notification.ConditionProviders;

        $r1 = r0.<com.android.server.notification.ConditionProviders: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        r5 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17039863);

        if r5 == null goto label4;

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        i1 = 0;

     label1:
        $i0 = lengthof r6;

        if i1 >= $i0 goto label4;

        $r3 = r6[i1];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r4 = r6[i1];

        virtualinvoke r0.<com.android.server.notification.ConditionProviders: void addDefaultComponentOrPackage(java.lang.String)>($r4);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public void notifyConditions(java.lang.String, com.android.server.notification.ManagedServices$ManagedServiceInfo, android.service.notification.Condition[])
    {
        com.android.server.notification.ConditionProviders r0;
        java.lang.Object r1;
        java.lang.String r2, $r13, r15;
        java.lang.StringBuilder r3;
        boolean $z0;
        int $i0, i2, i3, i4, i5;
        android.net.Uri $r4, $r6;
        android.content.ComponentName $r5;
        java.lang.Throwable $r14;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r16;
        android.service.notification.Condition[] r17, r19;
        java.util.List r18;
        android.service.notification.Condition r20, r22;
        com.android.server.notification.ConditionProviders$ConditionRecord r21;
        com.android.server.notification.ConditionProviders$Callback r23;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r15 := @parameter0: java.lang.String;

        r16 := @parameter1: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        r17 := @parameter2: android.service.notification.Condition[];

        r1 = r0.<com.android.server.notification.ConditionProviders: java.lang.Object mMutex>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.server.notification.ConditionProviders: boolean DEBUG>;

        if $z0 == 0 goto label05;

        r2 = r0.<com.android.server.notification.ConditionProviders: java.lang.String TAG>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyConditions pkg=");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" info=");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" conditions=");

     label02:
        if r17 != null goto label03;

        r18 = null;

        goto label04;

     label03:
        r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r17);

     label04:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r2, $r13);

     label05:
        r19 = specialinvoke r0.<com.android.server.notification.ConditionProviders: android.service.notification.Condition[] removeDuplicateConditions(java.lang.String,android.service.notification.Condition[])>(r15, r17);

     label06:
        if r19 == null goto label19;

     label07:
        $i0 = lengthof r19;

        if $i0 != 0 goto label09;

     label08:
        goto label19;

     label09:
        i2 = lengthof r19;

     label10:
        i3 = 0;

     label11:
        if i3 >= i2 goto label14;

        r20 = r19[i3];

     label12:
        $r6 = r20.<android.service.notification.Condition: android.net.Uri id>;

        $r5 = r16.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        r21 = specialinvoke r0.<com.android.server.notification.ConditionProviders: com.android.server.notification.ConditionProviders$ConditionRecord getRecordLocked(android.net.Uri,android.content.ComponentName,boolean)>($r6, $r5, 1);

        r21.<com.android.server.notification.ConditionProviders$ConditionRecord: com.android.server.notification.ManagedServices$ManagedServiceInfo info> = r16;

        r21.<com.android.server.notification.ConditionProviders$ConditionRecord: android.service.notification.Condition condition> = r20;

     label13:
        i3 = i3 + 1;

        goto label11;

     label14:
        exitmonitor r1;

     label15:
        i4 = lengthof r19;

        i5 = 0;

     label16:
        if i5 >= i4 goto label18;

        r22 = r19[i5];

        r23 = r0.<com.android.server.notification.ConditionProviders: com.android.server.notification.ConditionProviders$Callback mCallback>;

        if r23 == null goto label17;

        $r4 = r22.<android.service.notification.Condition: android.net.Uri id>;

        interfaceinvoke r23.<com.android.server.notification.ConditionProviders$Callback: void onConditionChanged(android.net.Uri,android.service.notification.Condition)>($r4, r22);

     label17:
        i5 = i5 + 1;

        goto label16;

     label18:
        return;

     label19:
        exitmonitor r1;

     label20:
        return;

     label21:
        $r14 := @caughtexception;

     label22:
        exitmonitor r1;

     label23:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    public void onBootPhaseAppsCanStart()
    {
        com.android.server.notification.ConditionProviders r0;
        com.android.server.notification.ConditionProviders$Callback r1;
        android.util.ArraySet $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.notification.SystemConditionProviderService $r5;

        r0 := @this: com.android.server.notification.ConditionProviders;

        specialinvoke r0.<com.android.server.notification.ManagedServices: void onBootPhaseAppsCanStart()>();

        i1 = 0;

     label1:
        $r2 = r0.<com.android.server.notification.ConditionProviders: android.util.ArraySet mSystemConditionProviders>;

        $i0 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

        if i1 >= $i0 goto label2;

        $r3 = r0.<com.android.server.notification.ConditionProviders: android.util.ArraySet mSystemConditionProviders>;

        $r4 = virtualinvoke $r3.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.server.notification.SystemConditionProviderService) $r4;

        virtualinvoke $r5.<com.android.server.notification.SystemConditionProviderService: void onBootComplete()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        r1 = r0.<com.android.server.notification.ConditionProviders: com.android.server.notification.ConditionProviders$Callback mCallback>;

        if r1 == null goto label3;

        interfaceinvoke r1.<com.android.server.notification.ConditionProviders$Callback: void onBootComplete()>();

     label3:
        return;
    }

    public void onPackagesChanged(boolean, java.lang.String[], int[])
    {
        com.android.server.notification.ConditionProviders r0;
        boolean z0;
        java.lang.String[] r1;
        int[] r2;
        android.app.INotificationManager r3;
        int i0, $i1, i3;
        java.lang.String r4, r6, $r12;
        java.lang.Exception $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: com.android.server.notification.ConditionProviders;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: int[];

        if z0 == 0 goto label6;

        r3 = staticinvoke <android.app.NotificationManager: android.app.INotificationManager getService()>();

        if r1 == null goto label6;

        $i1 = lengthof r1;

        if $i1 <= 0 goto label6;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label6;

        r4 = r1[i3];

     label2:
        interfaceinvoke r3.<android.app.INotificationManager: boolean removeAutomaticZenRules(java.lang.String)>(r4);

        interfaceinvoke r3.<android.app.INotificationManager: void setNotificationPolicyAccessGranted(java.lang.String,boolean)>(r4, 0);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r6 = r0.<com.android.server.notification.ConditionProviders: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to clean up rules for ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r6, $r12, $r8);

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        specialinvoke r0.<com.android.server.notification.ManagedServices: void onPackagesChanged(boolean,java.lang.String[],int[])>(z0, r1, r2);

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected void onServiceAdded(com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.ConditionProviders r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        android.content.ComponentName $r4;
        android.os.RemoteException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9, r11;
        android.service.notification.IConditionProvider r10;
        com.android.server.notification.ConditionProviders$Callback r12;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r1 := @parameter0: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        r10 = staticinvoke <com.android.server.notification.ConditionProviders: android.service.notification.IConditionProvider provider(com.android.server.notification.ManagedServices$ManagedServiceInfo)>(r1);

     label1:
        interfaceinvoke r10.<android.service.notification.IConditionProvider: void onConnected()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r11 = r0.<com.android.server.notification.ConditionProviders: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t connect to service ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r11, $r9, $r5);

     label4:
        r12 = r0.<com.android.server.notification.ConditionProviders: com.android.server.notification.ConditionProviders$Callback mCallback>;

        if r12 == null goto label5;

        $r4 = r1.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        interfaceinvoke r12.<com.android.server.notification.ConditionProviders$Callback: void onServiceAdded(android.content.ComponentName)>($r4);

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    protected void onServiceRemovedLocked(com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.ConditionProviders r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        java.util.ArrayList $r2, $r3, $r8;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.notification.ConditionProviders$ConditionRecord $r5;
        android.content.ComponentName $r6, $r7;
        boolean $z0;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r1 := @parameter0: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.notification.ConditionProviders: java.util.ArrayList mRecords>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label5;

        $r3 = r0.<com.android.server.notification.ConditionProviders: java.util.ArrayList mRecords>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.notification.ConditionProviders$ConditionRecord) $r4;

        $r7 = $r5.<com.android.server.notification.ConditionProviders$ConditionRecord: android.content.ComponentName component>;

        $r6 = r1.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        $z0 = virtualinvoke $r7.<android.content.ComponentName: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label3;

        goto label4;

     label3:
        $r8 = r0.<com.android.server.notification.ConditionProviders: java.util.ArrayList mRecords>;

        virtualinvoke $r8.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

     label4:
        i1 = i1 + -1;

        goto label2;

     label5:
        return;
    }

    public void onUserSwitched(int)
    {
        com.android.server.notification.ConditionProviders r0;
        int i0;
        com.android.server.notification.ConditionProviders$Callback r1;

        r0 := @this: com.android.server.notification.ConditionProviders;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.notification.ManagedServices: void onUserSwitched(int)>(i0);

        r1 = r0.<com.android.server.notification.ConditionProviders: com.android.server.notification.ConditionProviders$Callback mCallback>;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.server.notification.ConditionProviders$Callback: void onUserSwitched()>();

     label1:
        return;
    }

    protected android.util.ArrayMap resetComponents(java.lang.String, int)
    {
        com.android.server.notification.ConditionProviders r0;
        int i0;
        android.util.ArrayMap $r1;
        java.lang.Boolean $r2, $r5;
        java.util.ArrayList $r3, $r6;
        java.lang.String r8;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.notification.ConditionProviders: boolean resetPackage(java.lang.String,int)>(r8, i0);

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(0);

        virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(0);

        virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        return $r1;
    }

    boolean resetPackage(java.lang.String, int)
    {
        com.android.server.notification.ConditionProviders r0;
        java.lang.String r1;
        int i0;
        boolean z0, z1, z2;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 = specialinvoke r0.<com.android.server.notification.ManagedServices: boolean isPackageOrComponentAllowed(java.lang.String,int)>(r1, i0);

        z1 = specialinvoke r0.<com.android.server.notification.ManagedServices: boolean isDefaultComponentOrPackage(java.lang.String)>(r1);

        z2 = 1;

        if z0 != 0 goto label1;

        if z1 == 0 goto label1;

        virtualinvoke r0.<com.android.server.notification.ConditionProviders: void setPackageOrComponentEnabled(java.lang.String,int,boolean,boolean)>(r1, i0, 1, 1);

     label1:
        if z0 == 0 goto label2;

        if z1 != 0 goto label2;

        virtualinvoke r0.<com.android.server.notification.ConditionProviders: void setPackageOrComponentEnabled(java.lang.String,int,boolean,boolean)>(r1, i0, 1, 0);

     label2:
        if z0 != 0 goto label3;

        if z1 == 0 goto label3;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    public void setCallback(com.android.server.notification.ConditionProviders$Callback)
    {
        com.android.server.notification.ConditionProviders r0;
        com.android.server.notification.ConditionProviders$Callback r1;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r1 := @parameter0: com.android.server.notification.ConditionProviders$Callback;

        r0.<com.android.server.notification.ConditionProviders: com.android.server.notification.ConditionProviders$Callback mCallback> = r1;

        return;
    }

    public boolean subscribeIfNecessary(android.content.ComponentName, android.net.Uri)
    {
        com.android.server.notification.ConditionProviders r0;
        android.net.Uri r1;
        java.lang.Object r2;
        java.lang.StringBuilder r3;
        boolean z0, $z1;
        java.lang.String $r8, r12;
        java.lang.Throwable $r9;
        android.content.ComponentName r10;
        com.android.server.notification.ConditionProviders$ConditionRecord r11;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r10 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.net.Uri;

        r2 = r0.<com.android.server.notification.ConditionProviders: java.lang.Object mMutex>;

        entermonitor r2;

     label01:
        r11 = specialinvoke r0.<com.android.server.notification.ConditionProviders: com.android.server.notification.ConditionProviders$ConditionRecord getRecordLocked(android.net.Uri,android.content.ComponentName,boolean)>(r1, r10, 0);

     label02:
        if r11 != null goto label05;

     label03:
        r12 = r0.<com.android.server.notification.ConditionProviders: java.lang.String TAG>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to subscribe to ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r12, $r8);

        exitmonitor r2;

     label04:
        return 0;

     label05:
        $z1 = r11.<com.android.server.notification.ConditionProviders$ConditionRecord: boolean subscribed>;

        if $z1 == 0 goto label07;

        exitmonitor r2;

     label06:
        return 1;

     label07:
        specialinvoke r0.<com.android.server.notification.ConditionProviders: void subscribeLocked(com.android.server.notification.ConditionProviders$ConditionRecord)>(r11);

        z0 = r11.<com.android.server.notification.ConditionProviders$ConditionRecord: boolean subscribed>;

        exitmonitor r2;

     label08:
        return z0;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void unsubscribeIfNecessary(android.content.ComponentName, android.net.Uri)
    {
        com.android.server.notification.ConditionProviders r0;
        android.net.Uri r1;
        java.lang.Object r2;
        java.lang.StringBuilder r3;
        boolean $z0;
        java.lang.String $r8, r12;
        java.lang.Throwable $r9;
        android.content.ComponentName r10;
        com.android.server.notification.ConditionProviders$ConditionRecord r11;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r10 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.net.Uri;

        r2 = r0.<com.android.server.notification.ConditionProviders: java.lang.Object mMutex>;

        entermonitor r2;

     label01:
        r11 = specialinvoke r0.<com.android.server.notification.ConditionProviders: com.android.server.notification.ConditionProviders$ConditionRecord getRecordLocked(android.net.Uri,android.content.ComponentName,boolean)>(r1, r10, 0);

     label02:
        if r11 != null goto label05;

     label03:
        r12 = r0.<com.android.server.notification.ConditionProviders: java.lang.String TAG>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to unsubscribe to ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r12, $r8);

        exitmonitor r2;

     label04:
        return;

     label05:
        $z0 = r11.<com.android.server.notification.ConditionProviders$ConditionRecord: boolean subscribed>;

        if $z0 != 0 goto label07;

        exitmonitor r2;

     label06:
        return;

     label07:
        specialinvoke r0.<com.android.server.notification.ConditionProviders: void unsubscribeLocked(com.android.server.notification.ConditionProviders$ConditionRecord)>(r11);

        exitmonitor r2;

     label08:
        return;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void writeDefaults(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.notification.ConditionProviders r0;
        java.lang.Object r1;
        android.util.ArraySet $r2;
        java.lang.String $r3;
        java.lang.Throwable $r5;
        org.xmlpull.v1.XmlSerializer r6;

        r0 := @this: com.android.server.notification.ConditionProviders;

        r6 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 = r0.<com.android.server.notification.ConditionProviders: java.lang.Object mDefaultsLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.notification.ConditionProviders: android.util.ArraySet mDefaultPackages>;

        $r3 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(":", $r2);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "defaults", $r3);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void <clinit>()
    {
        <com.android.server.notification.ConditionProviders: java.lang.String TAG_ENABLED_DND_APPS> = "dnd_apps";

        return;
    }
}
