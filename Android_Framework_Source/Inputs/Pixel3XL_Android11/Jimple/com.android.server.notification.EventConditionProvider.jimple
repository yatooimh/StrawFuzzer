public class com.android.server.notification.EventConditionProvider extends com.android.server.notification.SystemConditionProviderService
{
    private static final java.lang.String ACTION_EVALUATE;
    private static final long CHANGE_DELAY;
    public static final android.content.ComponentName COMPONENT;
    private static final boolean DEBUG;
    private static final java.lang.String EXTRA_TIME;
    private static final java.lang.String NOT_SHOWN;
    private static final int REQUEST_CODE_EVALUATE;
    private static final java.lang.String SIMPLE_NAME;
    private static final java.lang.String TAG;
    private boolean mBootComplete;
    private boolean mConnected;
    private final android.content.Context mContext;
    private final java.lang.Runnable mEvaluateSubscriptionsW;
    private long mNextAlarmTime;
    private final android.content.BroadcastReceiver mReceiver;
    private boolean mRegistered;
    private final android.util.ArraySet mSubscriptions;
    private final android.os.HandlerThread mThread;
    private final com.android.server.notification.CalendarTracker$Callback mTrackerCallback;
    private final android.util.SparseArray mTrackers;
    private final android.os.Handler mWorker;

    static void <clinit>()
    {
        boolean $z0;
        android.content.ComponentName $r1;
        java.lang.Class $r2, $r4;
        java.lang.String $r3, $r5, $r7, $r10;
        java.lang.StringBuilder $r6;

        <com.android.server.notification.EventConditionProvider: java.lang.String TAG> = "ConditionProviders.ECP";

        <com.android.server.notification.EventConditionProvider: int REQUEST_CODE_EVALUATE> = 1;

        <com.android.server.notification.EventConditionProvider: java.lang.String NOT_SHOWN> = "...";

        <com.android.server.notification.EventConditionProvider: java.lang.String EXTRA_TIME> = "time";

        <com.android.server.notification.EventConditionProvider: long CHANGE_DELAY> = 2000L;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ConditionProviders", 3);

        <com.android.server.notification.EventConditionProvider: boolean DEBUG> = $z0;

        $r1 = new android.content.ComponentName;

        $r2 = class "Lcom/android/server/notification/EventConditionProvider;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", $r3);

        <com.android.server.notification.EventConditionProvider: android.content.ComponentName COMPONENT> = $r1;

        $r4 = class "Lcom/android/server/notification/EventConditionProvider;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.notification.EventConditionProvider: java.lang.String SIMPLE_NAME> = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = <com.android.server.notification.EventConditionProvider: java.lang.String SIMPLE_NAME>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".EVALUATE");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.server.notification.EventConditionProvider: java.lang.String ACTION_EVALUATE> = $r10;

        return;
    }

    public void <init>()
    {
        com.android.server.notification.EventConditionProvider r0;
        android.util.ArraySet $r1;
        android.util.SparseArray $r2;
        com.android.server.notification.EventConditionProvider$2 $r3;
        com.android.server.notification.EventConditionProvider$3 $r4;
        com.android.server.notification.EventConditionProvider$4 $r5;
        boolean $z0;
        android.os.HandlerThread $r6, $r8;
        android.os.Handler $r7;
        android.os.Looper $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r12, $r15;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        specialinvoke r0.<com.android.server.notification.SystemConditionProviderService: void <init>()>();

        r0.<com.android.server.notification.EventConditionProvider: android.content.Context mContext> = r0;

        $r1 = new android.util.ArraySet;

        specialinvoke $r1.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.notification.EventConditionProvider: android.util.ArraySet mSubscriptions> = $r1;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.notification.EventConditionProvider: android.util.SparseArray mTrackers> = $r2;

        $r3 = new com.android.server.notification.EventConditionProvider$2;

        specialinvoke $r3.<com.android.server.notification.EventConditionProvider$2: void <init>(com.android.server.notification.EventConditionProvider)>(r0);

        r0.<com.android.server.notification.EventConditionProvider: com.android.server.notification.CalendarTracker$Callback mTrackerCallback> = $r3;

        $r4 = new com.android.server.notification.EventConditionProvider$3;

        specialinvoke $r4.<com.android.server.notification.EventConditionProvider$3: void <init>(com.android.server.notification.EventConditionProvider)>(r0);

        r0.<com.android.server.notification.EventConditionProvider: android.content.BroadcastReceiver mReceiver> = $r4;

        $r5 = new com.android.server.notification.EventConditionProvider$4;

        specialinvoke $r5.<com.android.server.notification.EventConditionProvider$4: void <init>(com.android.server.notification.EventConditionProvider)>(r0);

        r0.<com.android.server.notification.EventConditionProvider: java.lang.Runnable mEvaluateSubscriptionsW> = $r5;

        $z0 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new ");

        $r12 = <com.android.server.notification.EventConditionProvider: java.lang.String SIMPLE_NAME>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("()");

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.ECP", $r15);

     label1:
        $r6 = new android.os.HandlerThread;

        specialinvoke $r6.<android.os.HandlerThread: void <init>(java.lang.String,int)>("ConditionProviders.ECP", 10);

        r0.<com.android.server.notification.EventConditionProvider: android.os.HandlerThread mThread> = $r6;

        virtualinvoke $r6.<android.os.HandlerThread: void start()>();

        $r7 = new android.os.Handler;

        $r8 = r0.<com.android.server.notification.EventConditionProvider: android.os.HandlerThread mThread>;

        $r9 = virtualinvoke $r8.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r7.<android.os.Handler: void <init>(android.os.Looper)>($r9);

        r0.<com.android.server.notification.EventConditionProvider: android.os.Handler mWorker> = $r7;

        return;
    }

    static void access$000(com.android.server.notification.EventConditionProvider)
    {
        com.android.server.notification.EventConditionProvider r0;

        r0 := @parameter0: com.android.server.notification.EventConditionProvider;

        specialinvoke r0.<com.android.server.notification.EventConditionProvider: void reloadTrackers()>();

        return;
    }

    static boolean access$100()
    {
        boolean $z0;

        $z0 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        return $z0;
    }

    static java.lang.Runnable access$200(com.android.server.notification.EventConditionProvider)
    {
        com.android.server.notification.EventConditionProvider r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.server.notification.EventConditionProvider;

        $r1 = r0.<com.android.server.notification.EventConditionProvider: java.lang.Runnable mEvaluateSubscriptionsW>;

        return $r1;
    }

    static android.os.Handler access$300(com.android.server.notification.EventConditionProvider)
    {
        com.android.server.notification.EventConditionProvider r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.notification.EventConditionProvider;

        $r1 = r0.<com.android.server.notification.EventConditionProvider: android.os.Handler mWorker>;

        return $r1;
    }

    static void access$400(com.android.server.notification.EventConditionProvider)
    {
        com.android.server.notification.EventConditionProvider r0;

        r0 := @parameter0: com.android.server.notification.EventConditionProvider;

        specialinvoke r0.<com.android.server.notification.EventConditionProvider: void evaluateSubscriptions()>();

        return;
    }

    static void access$500(com.android.server.notification.EventConditionProvider)
    {
        com.android.server.notification.EventConditionProvider r0;

        r0 := @parameter0: com.android.server.notification.EventConditionProvider;

        specialinvoke r0.<com.android.server.notification.EventConditionProvider: void evaluateSubscriptionsW()>();

        return;
    }

    private android.service.notification.Condition createCondition(android.net.Uri, int)
    {
        com.android.server.notification.EventConditionProvider r0;
        android.net.Uri r1;
        int i0;
        android.service.notification.Condition $r2;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        $r2 = new android.service.notification.Condition;

        specialinvoke $r2.<android.service.notification.Condition: void <init>(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,int,int,int)>(r1, "...", "...", "...", 0, i0, 2);

        return $r2;
    }

    private void evaluateSubscriptions()
    {
        com.android.server.notification.EventConditionProvider r0;
        java.lang.Runnable $r1, $r3;
        android.os.Handler $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        $r2 = r0.<com.android.server.notification.EventConditionProvider: android.os.Handler mWorker>;

        $r1 = r0.<com.android.server.notification.EventConditionProvider: java.lang.Runnable mEvaluateSubscriptionsW>;

        $z0 = virtualinvoke $r2.<android.os.Handler: boolean hasCallbacks(java.lang.Runnable)>($r1);

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.server.notification.EventConditionProvider: android.os.Handler mWorker>;

        $r3 = r0.<com.android.server.notification.EventConditionProvider: java.lang.Runnable mEvaluateSubscriptionsW>;

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private void evaluateSubscriptionsW()
    {
        com.android.server.notification.EventConditionProvider r0;
        long l0, $l3, $l4, $l7, $l10, $l14, $l15, $l16, l21;
        android.util.ArraySet r2, $r8, $r9, $r32;
        java.util.Iterator r3, r40;
        android.net.Uri r4;
        android.service.notification.ZenModeConfig$EventInfo r5;
        boolean $z0, $z1, $z2, $z3, $z7, $z8, $z9, $z11, $z12, z13, z14, $z15, $z16;
        java.util.ArrayList $r6;
        android.util.SparseArray $r7, $r17, $r25, $r26, $r30;
        int $i2, $i6, $i13, i19, i22, i23;
        java.lang.StringBuilder $r10, r39;
        java.lang.String $r13, $r16, $r23;
        java.lang.Object $r14, $r15, $r18, $r27, $r31;
        byte $b8, $b9, $b11;
        android.service.notification.Condition $r19, $r20, $r24, $r29, r41;
        com.android.server.notification.CalendarTracker $r28, r34, r38;
        java.lang.Throwable $r33;
        com.android.server.notification.CalendarTracker$Callback r35;
        com.android.server.notification.CalendarTracker$CheckEventResult r36, r37;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        $z0 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.ECP", "evaluateSubscriptions");

     label01:
        $z1 = r0.<com.android.server.notification.EventConditionProvider: boolean mBootComplete>;

        if $z1 != 0 goto label03;

        $z12 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        if $z12 == 0 goto label02;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.ECP", "Skipping evaluate before boot complete");

     label02:
        return;

     label03:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = r0.<com.android.server.notification.EventConditionProvider: android.util.ArraySet mSubscriptions>;

        entermonitor r2;

        i19 = 0;

     label04:
        $r7 = r0.<com.android.server.notification.EventConditionProvider: android.util.SparseArray mTrackers>;

        $i2 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if i19 >= $i2 goto label09;

        $r30 = r0.<com.android.server.notification.EventConditionProvider: android.util.SparseArray mTrackers>;

        $r31 = virtualinvoke $r30.<android.util.SparseArray: java.lang.Object valueAt(int)>(i19);

        r34 = (com.android.server.notification.CalendarTracker) $r31;

        $r32 = r0.<com.android.server.notification.EventConditionProvider: android.util.ArraySet mSubscriptions>;

        $z11 = virtualinvoke $r32.<android.util.ArraySet: boolean isEmpty()>();

        if $z11 == 0 goto label06;

     label05:
        r35 = null;

        goto label07;

     label06:
        r35 = r0.<com.android.server.notification.EventConditionProvider: com.android.server.notification.CalendarTracker$Callback mTrackerCallback>;

     label07:
        virtualinvoke r34.<com.android.server.notification.CalendarTracker: void setCallback(com.android.server.notification.CalendarTracker$Callback)>(r35);

     label08:
        i19 = i19 + 1;

        goto label04;

     label09:
        $r8 = r0.<com.android.server.notification.EventConditionProvider: android.util.ArraySet mSubscriptions>;

        z13 = virtualinvoke $r8.<android.util.ArraySet: boolean isEmpty()>();

     label10:
        if z13 != 0 goto label11;

        z14 = 1;

        goto label12;

     label11:
        z14 = 0;

     label12:
        specialinvoke r0.<com.android.server.notification.EventConditionProvider: void setRegistered(boolean)>(z14);

     label13:
        l21 = 0L;

     label14:
        $r9 = r0.<com.android.server.notification.EventConditionProvider: android.util.ArraySet mSubscriptions>;

        r3 = virtualinvoke $r9.<android.util.ArraySet: java.util.Iterator iterator()>();

     label15:
        $z15 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label41;

        $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.net.Uri) $r15;

        r5 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$EventInfo tryParseEventConditionId(android.net.Uri)>(r4);

     label16:
        if r5 != null goto label19;

     label17:
        $r29 = specialinvoke r0.<com.android.server.notification.EventConditionProvider: android.service.notification.Condition createCondition(android.net.Uri,int)>(r4, 0);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r29);

     label18:
        goto label30;

     label19:
        r36 = null;

     label20:
        $r16 = r5.<android.service.notification.ZenModeConfig$EventInfo: java.lang.String calName>;

        if $r16 != null goto label27;

     label21:
        i22 = 0;

     label22:
        $r25 = r0.<com.android.server.notification.EventConditionProvider: android.util.SparseArray mTrackers>;

        $i13 = virtualinvoke $r25.<android.util.SparseArray: int size()>();

        if i22 >= $i13 goto label26;

        $r26 = r0.<com.android.server.notification.EventConditionProvider: android.util.SparseArray mTrackers>;

        $r27 = virtualinvoke $r26.<android.util.SparseArray: java.lang.Object valueAt(int)>(i22);

        $r28 = (com.android.server.notification.CalendarTracker) $r27;

        r37 = virtualinvoke $r28.<com.android.server.notification.CalendarTracker: com.android.server.notification.CalendarTracker$CheckEventResult checkEvent(android.service.notification.ZenModeConfig$EventInfo,long)>(r5, l0);

     label23:
        if r36 != null goto label24;

        r36 = r37;

        goto label25;

     label24:
        $z8 = r36.<com.android.server.notification.CalendarTracker$CheckEventResult: boolean inEvent>;

        $z7 = r37.<com.android.server.notification.CalendarTracker$CheckEventResult: boolean inEvent>;

        $z9 = $z8 | $z7;

        r36.<com.android.server.notification.CalendarTracker$CheckEventResult: boolean inEvent> = $z9;

        $l15 = r36.<com.android.server.notification.CalendarTracker$CheckEventResult: long recheckAt>;

        $l14 = r37.<com.android.server.notification.CalendarTracker$CheckEventResult: long recheckAt>;

        $l16 = staticinvoke <java.lang.Math: long min(long,long)>($l15, $l14);

        r36.<com.android.server.notification.CalendarTracker$CheckEventResult: long recheckAt> = $l16;

     label25:
        i22 = i22 + 1;

        goto label22;

     label26:
        goto label32;

     label27:
        $i6 = r5.<android.service.notification.ZenModeConfig$EventInfo: int userId>;

        i23 = staticinvoke <android.service.notification.ZenModeConfig$EventInfo: int resolveUserId(int)>($i6);

        $r17 = r0.<com.android.server.notification.EventConditionProvider: android.util.SparseArray mTrackers>;

        $r18 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object get(int)>(i23);

        r38 = (com.android.server.notification.CalendarTracker) $r18;

     label28:
        if r38 != null goto label31;

     label29:
        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No calendar tracker found for user ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);

        $r23 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ConditionProviders.ECP", $r23);

        $r24 = specialinvoke r0.<com.android.server.notification.EventConditionProvider: android.service.notification.Condition createCondition(android.net.Uri,int)>(r4, 0);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r24);

     label30:
        goto label15;

     label31:
        r36 = virtualinvoke r38.<com.android.server.notification.CalendarTracker: com.android.server.notification.CalendarTracker$CheckEventResult checkEvent(android.service.notification.ZenModeConfig$EventInfo,long)>(r5, l0);

     label32:
        $l7 = r36.<com.android.server.notification.CalendarTracker$CheckEventResult: long recheckAt>;

        $b8 = $l7 cmp 0L;

        if $b8 == 0 goto label37;

     label33:
        $b9 = l21 cmp 0L;

        if $b9 == 0 goto label35;

     label34:
        $l10 = r36.<com.android.server.notification.CalendarTracker$CheckEventResult: long recheckAt>;

        $b11 = $l10 cmp l21;

        if $b11 >= 0 goto label37;

     label35:
        l21 = r36.<com.android.server.notification.CalendarTracker$CheckEventResult: long recheckAt>;

     label36:
        goto label37;

     label37:
        $z16 = r36.<com.android.server.notification.CalendarTracker$CheckEventResult: boolean inEvent>;

        if $z16 != 0 goto label39;

        $r20 = specialinvoke r0.<com.android.server.notification.EventConditionProvider: android.service.notification.Condition createCondition(android.net.Uri,int)>(r4, 0);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r20);

     label38:
        goto label40;

     label39:
        $r19 = specialinvoke r0.<com.android.server.notification.EventConditionProvider: android.service.notification.Condition createCondition(android.net.Uri,int)>(r4, 1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r19);

     label40:
        goto label15;

     label41:
        specialinvoke r0.<com.android.server.notification.EventConditionProvider: void rescheduleAlarm(long,long)>(l0, l21);

        exitmonitor r2;

     label42:
        r40 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label43:
        $z2 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label45;

        $r14 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r41 = (android.service.notification.Condition) $r14;

        if r41 == null goto label44;

        virtualinvoke r0.<com.android.server.notification.EventConditionProvider: void notifyCondition(android.service.notification.Condition)>(r41);

     label44:
        goto label43;

     label45:
        $z3 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        if $z3 == 0 goto label46;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("evaluateSubscriptions took ");

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = $l3 - l0;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.ECP", $r13);

     label46:
        return;

     label47:
        $r33 := @caughtexception;

     label48:
        exitmonitor r2;

     label49:
        throw $r33;

        catch java.lang.Throwable from label04 to label05 with label47;
        catch java.lang.Throwable from label06 to label07 with label47;
        catch java.lang.Throwable from label07 to label08 with label47;
        catch java.lang.Throwable from label09 to label10 with label47;
        catch java.lang.Throwable from label12 to label13 with label47;
        catch java.lang.Throwable from label14 to label15 with label47;
        catch java.lang.Throwable from label15 to label16 with label47;
        catch java.lang.Throwable from label17 to label18 with label47;
        catch java.lang.Throwable from label20 to label21 with label47;
        catch java.lang.Throwable from label22 to label23 with label47;
        catch java.lang.Throwable from label24 to label25 with label47;
        catch java.lang.Throwable from label27 to label28 with label47;
        catch java.lang.Throwable from label29 to label30 with label47;
        catch java.lang.Throwable from label31 to label32 with label47;
        catch java.lang.Throwable from label32 to label33 with label47;
        catch java.lang.Throwable from label34 to label35 with label47;
        catch java.lang.Throwable from label35 to label36 with label47;
        catch java.lang.Throwable from label37 to label38 with label47;
        catch java.lang.Throwable from label39 to label40 with label47;
        catch java.lang.Throwable from label41 to label42 with label47;
        catch java.lang.Throwable from label48 to label49 with label47;
    }

    private static android.content.Context getContextForUser(android.content.Context, android.os.UserHandle)
    {
        android.os.UserHandle r0;
        java.lang.String $r1;
        android.content.pm.PackageManager$NameNotFoundException $r2;
        android.content.Context r3, r4;

        r3 := @parameter0: android.content.Context;

        r0 := @parameter1: android.os.UserHandle;

     label1:
        $r1 = virtualinvoke r3.<android.content.Context: java.lang.String getPackageName()>();

        r4 = virtualinvoke r3.<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>($r1, 0, r0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private void reloadTrackers()
    {
        com.android.server.notification.EventConditionProvider r0;
        java.util.Iterator r1;
        android.os.UserHandle r2;
        boolean $z0, $z1, $z2;
        android.util.SparseArray $r3, $r9, $r16, $r19;
        android.content.Context $r4, $r8, $r11, r20;
        android.os.UserManager $r5;
        java.util.List $r6;
        java.lang.Object $r7, $r17;
        int $i0, $i1, i4, $i5;
        com.android.server.notification.CalendarTracker $r10, $r18;
        java.lang.StringBuilder $r12;
        java.lang.String $r15;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        $z0 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.ECP", "reloadTrackers");

     label1:
        i4 = 0;

     label2:
        $r19 = r0.<com.android.server.notification.EventConditionProvider: android.util.SparseArray mTrackers>;

        $i5 = virtualinvoke $r19.<android.util.SparseArray: int size()>();

        if i4 >= $i5 goto label3;

        $r16 = r0.<com.android.server.notification.EventConditionProvider: android.util.SparseArray mTrackers>;

        $r17 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r18 = (com.android.server.notification.CalendarTracker) $r17;

        virtualinvoke $r18.<com.android.server.notification.CalendarTracker: void setCallback(com.android.server.notification.CalendarTracker$Callback)>(null);

        i4 = i4 + 1;

        goto label2;

     label3:
        $r3 = r0.<com.android.server.notification.EventConditionProvider: android.util.SparseArray mTrackers>;

        virtualinvoke $r3.<android.util.SparseArray: void clear()>();

        $r4 = r0.<com.android.server.notification.EventConditionProvider: android.content.Context mContext>;

        $r5 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>($r4);

        $r6 = virtualinvoke $r5.<android.os.UserManager: java.util.List getUserProfiles()>();

        r1 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.os.UserHandle) $r7;

        $z1 = virtualinvoke r2.<android.os.UserHandle: boolean isSystem()>();

        if $z1 == 0 goto label5;

        r20 = r0.<com.android.server.notification.EventConditionProvider: android.content.Context mContext>;

        goto label6;

     label5:
        $r8 = r0.<com.android.server.notification.EventConditionProvider: android.content.Context mContext>;

        r20 = staticinvoke <com.android.server.notification.EventConditionProvider: android.content.Context getContextForUser(android.content.Context,android.os.UserHandle)>($r8, r2);

     label6:
        if r20 != null goto label7;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create context for user ");

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ConditionProviders.ECP", $r15);

        goto label4;

     label7:
        $r9 = r0.<com.android.server.notification.EventConditionProvider: android.util.SparseArray mTrackers>;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $r10 = new com.android.server.notification.CalendarTracker;

        $r11 = r0.<com.android.server.notification.EventConditionProvider: android.content.Context mContext>;

        specialinvoke $r10.<com.android.server.notification.CalendarTracker: void <init>(android.content.Context,android.content.Context)>($r11, r20);

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r10);

        goto label4;

     label8:
        specialinvoke r0.<com.android.server.notification.EventConditionProvider: void evaluateSubscriptions()>();

        return;
    }

    private void rescheduleAlarm(long, long)
    {
        com.android.server.notification.EventConditionProvider r0;
        long l0, l1, $l6;
        android.content.Context $r1, $r5;
        java.lang.Object $r2;
        android.content.Intent $r3, $r6, $r7;
        java.lang.String $r4, $r11, $r13, $r14, $r15, $r16, r20;
        byte $b2, $b3, $b5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r8;
        java.lang.Object[] $r12;
        android.app.AlarmManager r17;
        android.app.PendingIntent r18;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<com.android.server.notification.EventConditionProvider: long mNextAlarmTime> = l1;

        $r1 = r0.<com.android.server.notification.EventConditionProvider: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r17 = (android.app.AlarmManager) $r2;

        $r5 = r0.<com.android.server.notification.EventConditionProvider: android.content.Context mContext>;

        $r3 = new android.content.Intent;

        $r4 = <com.android.server.notification.EventConditionProvider: java.lang.String ACTION_EVALUATE>;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>($r4);

        $r6 = virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r7 = virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("time", l1);

        r18 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r5, 1, $r7, 134217728);

        virtualinvoke r17.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>(r18);

        $b2 = l1 cmp 0L;

        if $b2 == 0 goto label3;

        $b5 = l1 cmp l0;

        if $b5 >= 0 goto label1;

        goto label3;

     label1:
        $z1 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r12 = newarray (java.lang.Object)[3];

        $r13 = staticinvoke <com.android.server.notification.EventConditionProvider: java.lang.String ts(long)>(l1);

        $r12[0] = $r13;

        $l6 = l1 - l0;

        $r14 = staticinvoke <com.android.server.notification.EventConditionProvider: java.lang.String formatDuration(long)>($l6);

        $r12[1] = $r14;

        $r15 = staticinvoke <com.android.server.notification.EventConditionProvider: java.lang.String ts(long)>(l0);

        $r12[2] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Scheduling evaluate for %s, in %s, now=%s", $r12);

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.ECP", $r16);

     label2:
        virtualinvoke r17.<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>(0, l1, r18);

        return;

     label3:
        $z0 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not scheduling evaluate: ");

        $b3 = l1 cmp 0L;

        if $b3 != 0 goto label4;

        r20 = "no time specified";

        goto label5;

     label4:
        r20 = "specified time in the past";

     label5:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.ECP", $r11);

     label6:
        return;
    }

    private void setRegistered(boolean)
    {
        com.android.server.notification.EventConditionProvider r0;
        boolean z0, $z1, $z2;
        android.content.BroadcastReceiver $r1, $r4;
        android.content.IntentFilter $r2;
        java.lang.String $r3, $r9;
        java.lang.StringBuilder $r6;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.notification.EventConditionProvider: boolean mRegistered>;

        if $z1 != z0 goto label1;

        return;

     label1:
        $z2 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        if $z2 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setRegistered ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.ECP", $r9);

     label2:
        r0.<com.android.server.notification.EventConditionProvider: boolean mRegistered> = z0;

        if z0 == 0 goto label3;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        $r3 = <com.android.server.notification.EventConditionProvider: java.lang.String ACTION_EVALUATE>;

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>($r3);

        $r4 = r0.<com.android.server.notification.EventConditionProvider: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke r0.<com.android.server.notification.EventConditionProvider: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r4, $r2);

        goto label4;

     label3:
        $r1 = r0.<com.android.server.notification.EventConditionProvider: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke r0.<com.android.server.notification.EventConditionProvider: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

     label4:
        return;
    }

    public android.service.notification.IConditionProvider asInterface()
    {
        com.android.server.notification.EventConditionProvider r0;
        android.os.IBinder $r1;
        android.service.notification.IConditionProvider $r2;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        $r1 = virtualinvoke r0.<com.android.server.notification.EventConditionProvider: android.os.IBinder onBind(android.content.Intent)>(null);

        $r2 = (android.service.notification.IConditionProvider) $r1;

        return $r2;
    }

    public void attachBase(android.content.Context)
    {
        com.android.server.notification.EventConditionProvider r0;
        android.content.Context r1;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        r1 := @parameter0: android.content.Context;

        virtualinvoke r0.<com.android.server.notification.EventConditionProvider: void attachBaseContext(android.content.Context)>(r1);

        return;
    }

    public void dump(java.io.PrintWriter, com.android.server.notification.NotificationManagerService$DumpFilter)
    {
        com.android.server.notification.EventConditionProvider r0;
        java.util.Iterator r1;
        android.net.Uri r2;
        java.lang.String $r3;
        boolean $z0, $z1, $z2, $z3;
        long $l0, $l1;
        android.util.ArraySet $r4, r14;
        android.util.SparseArray $r5, $r6, $r7;
        int $i2, $i3, i4;
        java.lang.Object $r8, $r10;
        com.android.server.notification.CalendarTracker $r9;
        java.lang.Throwable $r11;
        java.io.PrintWriter r12;
        com.android.server.notification.NotificationManagerService$DumpFilter r13;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        r12 := @parameter0: java.io.PrintWriter;

        r13 := @parameter1: com.android.server.notification.NotificationManagerService$DumpFilter;

        virtualinvoke r12.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r3 = <com.android.server.notification.EventConditionProvider: java.lang.String SIMPLE_NAME>;

        virtualinvoke r12.<java.io.PrintWriter: void print(java.lang.String)>($r3);

        virtualinvoke r12.<java.io.PrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r12.<java.io.PrintWriter: void print(java.lang.String)>("      mConnected=");

        $z0 = r0.<com.android.server.notification.EventConditionProvider: boolean mConnected>;

        virtualinvoke r12.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r12.<java.io.PrintWriter: void print(java.lang.String)>("      mRegistered=");

        $z1 = r0.<com.android.server.notification.EventConditionProvider: boolean mRegistered>;

        virtualinvoke r12.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r12.<java.io.PrintWriter: void print(java.lang.String)>("      mBootComplete=");

        $z2 = r0.<com.android.server.notification.EventConditionProvider: boolean mBootComplete>;

        virtualinvoke r12.<java.io.PrintWriter: void println(boolean)>($z2);

        $l0 = r0.<com.android.server.notification.EventConditionProvider: long mNextAlarmTime>;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        staticinvoke <com.android.server.notification.EventConditionProvider: void dumpUpcomingTime(java.io.PrintWriter,java.lang.String,long,long)>(r12, "mNextAlarmTime", $l0, $l1);

        r14 = r0.<com.android.server.notification.EventConditionProvider: android.util.ArraySet mSubscriptions>;

        entermonitor r14;

     label01:
        virtualinvoke r12.<java.io.PrintWriter: void println(java.lang.String)>("      mSubscriptions=");

        $r4 = r0.<com.android.server.notification.EventConditionProvider: android.util.ArraySet mSubscriptions>;

        r1 = virtualinvoke $r4.<android.util.ArraySet: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label04;

        $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.net.Uri) $r10;

        virtualinvoke r12.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        virtualinvoke r12.<java.io.PrintWriter: void println(java.lang.Object)>(r2);

     label03:
        goto label02;

     label04:
        exitmonitor r14;

     label05:
        virtualinvoke r12.<java.io.PrintWriter: void println(java.lang.String)>("      mTrackers=");

        i4 = 0;

     label06:
        $r5 = r0.<com.android.server.notification.EventConditionProvider: android.util.SparseArray mTrackers>;

        $i2 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i4 >= $i2 goto label07;

        virtualinvoke r12.<java.io.PrintWriter: void print(java.lang.String)>("        user=");

        $r6 = r0.<com.android.server.notification.EventConditionProvider: android.util.SparseArray mTrackers>;

        $i3 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i4);

        virtualinvoke r12.<java.io.PrintWriter: void println(int)>($i3);

        $r7 = r0.<com.android.server.notification.EventConditionProvider: android.util.SparseArray mTrackers>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r9 = (com.android.server.notification.CalendarTracker) $r8;

        virtualinvoke $r9.<com.android.server.notification.CalendarTracker: void dump(java.lang.String,java.io.PrintWriter)>("          ", r12);

        i4 = i4 + 1;

        goto label06;

     label07:
        return;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor r14;

     label10:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.content.ComponentName getComponent()
    {
        com.android.server.notification.EventConditionProvider r0;
        android.content.ComponentName $r1;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        $r1 = <com.android.server.notification.EventConditionProvider: android.content.ComponentName COMPONENT>;

        return $r1;
    }

    public boolean isValidConditionId(android.net.Uri)
    {
        com.android.server.notification.EventConditionProvider r0;
        android.net.Uri r1;
        boolean $z0;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        r1 := @parameter0: android.net.Uri;

        $z0 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidEventConditionId(android.net.Uri)>(r1);

        return $z0;
    }

    public void onBootComplete()
    {
        com.android.server.notification.EventConditionProvider r0;
        boolean $z0, $z1;
        android.content.IntentFilter $r2;
        com.android.server.notification.EventConditionProvider$1 $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        $z0 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.ECP", "onBootComplete");

     label1:
        $z1 = r0.<com.android.server.notification.EventConditionProvider: boolean mBootComplete>;

        if $z1 == 0 goto label2;

        return;

     label2:
        r0.<com.android.server.notification.EventConditionProvider: boolean mBootComplete> = 1;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.MANAGED_PROFILE_ADDED");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.MANAGED_PROFILE_REMOVED");

        $r4 = r0.<com.android.server.notification.EventConditionProvider: android.content.Context mContext>;

        $r3 = new com.android.server.notification.EventConditionProvider$1;

        specialinvoke $r3.<com.android.server.notification.EventConditionProvider$1: void <init>(com.android.server.notification.EventConditionProvider)>(r0);

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, $r2);

        specialinvoke r0.<com.android.server.notification.EventConditionProvider: void reloadTrackers()>();

        return;
    }

    public void onConnected()
    {
        com.android.server.notification.EventConditionProvider r0;
        boolean $z0;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        $z0 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.ECP", "onConnected");

     label1:
        r0.<com.android.server.notification.EventConditionProvider: boolean mConnected> = 1;

        return;
    }

    public void onDestroy()
    {
        com.android.server.notification.EventConditionProvider r0;
        boolean $z0;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        specialinvoke r0.<com.android.server.notification.SystemConditionProviderService: void onDestroy()>();

        $z0 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.ECP", "onDestroy");

     label1:
        r0.<com.android.server.notification.EventConditionProvider: boolean mConnected> = 0;

        return;
    }

    public void onSubscribe(android.net.Uri)
    {
        com.android.server.notification.EventConditionProvider r0;
        boolean $z0, $z1, $z2;
        android.util.ArraySet $r1, r10;
        android.service.notification.Condition $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        android.net.Uri r8;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        r8 := @parameter0: android.net.Uri;

        $z0 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSubscribe ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.ECP", $r6);

     label1:
        $z1 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidEventConditionId(android.net.Uri)>(r8);

        if $z1 != 0 goto label2;

        $r2 = specialinvoke r0.<com.android.server.notification.EventConditionProvider: android.service.notification.Condition createCondition(android.net.Uri,int)>(r8, 0);

        virtualinvoke r0.<com.android.server.notification.EventConditionProvider: void notifyCondition(android.service.notification.Condition)>($r2);

        return;

     label2:
        r10 = r0.<com.android.server.notification.EventConditionProvider: android.util.ArraySet mSubscriptions>;

        entermonitor r10;

     label3:
        $r1 = r0.<com.android.server.notification.EventConditionProvider: android.util.ArraySet mSubscriptions>;

        $z2 = virtualinvoke $r1.<android.util.ArraySet: boolean add(java.lang.Object)>(r8);

        if $z2 == 0 goto label4;

        specialinvoke r0.<com.android.server.notification.EventConditionProvider: void evaluateSubscriptions()>();

     label4:
        exitmonitor r10;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r10;

     label8:
        throw $r7;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void onUnsubscribe(android.net.Uri)
    {
        com.android.server.notification.EventConditionProvider r0;
        boolean $z0, $z1;
        android.util.ArraySet $r1, r9;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        android.net.Uri r7;

        r0 := @this: com.android.server.notification.EventConditionProvider;

        r7 := @parameter0: android.net.Uri;

        $z0 = <com.android.server.notification.EventConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onUnsubscribe ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.ECP", $r5);

     label1:
        r9 = r0.<com.android.server.notification.EventConditionProvider: android.util.ArraySet mSubscriptions>;

        entermonitor r9;

     label2:
        $r1 = r0.<com.android.server.notification.EventConditionProvider: android.util.ArraySet mSubscriptions>;

        $z1 = virtualinvoke $r1.<android.util.ArraySet: boolean remove(java.lang.Object)>(r7);

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.android.server.notification.EventConditionProvider: void evaluateSubscriptions()>();

     label3:
        exitmonitor r9;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r9;

     label7:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
