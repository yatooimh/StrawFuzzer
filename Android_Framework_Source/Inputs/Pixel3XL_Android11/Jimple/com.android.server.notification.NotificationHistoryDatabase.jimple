public class com.android.server.notification.NotificationHistoryDatabase extends java.lang.Object
{
    private static final java.lang.String ACTION_HISTORY_DELETION;
    private static final boolean DEBUG;
    private static final int DEFAULT_CURRENT_VERSION;
    private static final java.lang.String EXTRA_KEY;
    private static final int HISTORY_RETENTION_DAYS;
    private static final int HISTORY_RETENTION_MS;
    private static final long INVALID_FILE_TIME_MS;
    private static final int REQUEST_CODE_DELETION;
    private static final java.lang.String SCHEME_DELETION;
    private static final java.lang.String TAG;
    private static final long WRITE_BUFFER_INTERVAL_MS;
    private final android.app.AlarmManager mAlarmManager;
    android.app.NotificationHistory mBuffer;
    private final android.content.Context mContext;
    private int mCurrentVersion;
    private final android.content.BroadcastReceiver mFileCleaupReceiver;
    private final android.os.Handler mFileWriteHandler;
    private final java.io.File mHistoryDir;
    final java.util.LinkedList mHistoryFiles;
    private final java.lang.Object mLock;
    private final java.io.File mVersionFile;
    private final com.android.server.notification.NotificationHistoryDatabase$WriteBufferRunnable mWriteBufferRunnable;

    static void <clinit>()
    {
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r6;

        <com.android.server.notification.NotificationHistoryDatabase: long WRITE_BUFFER_INTERVAL_MS> = 1200000L;

        <com.android.server.notification.NotificationHistoryDatabase: java.lang.String TAG> = "NotiHistoryDatabase";

        <com.android.server.notification.NotificationHistoryDatabase: java.lang.String SCHEME_DELETION> = "delete";

        <com.android.server.notification.NotificationHistoryDatabase: int REQUEST_CODE_DELETION> = 1;

        <com.android.server.notification.NotificationHistoryDatabase: long INVALID_FILE_TIME_MS> = -1L;

        <com.android.server.notification.NotificationHistoryDatabase: int HISTORY_RETENTION_MS> = 86400000;

        <com.android.server.notification.NotificationHistoryDatabase: int HISTORY_RETENTION_DAYS> = 1;

        <com.android.server.notification.NotificationHistoryDatabase: java.lang.String EXTRA_KEY> = "key";

        <com.android.server.notification.NotificationHistoryDatabase: int DEFAULT_CURRENT_VERSION> = 1;

        $z0 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        <com.android.server.notification.NotificationHistoryDatabase: boolean DEBUG> = $z0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = class "Lcom/android/server/notification/NotificationHistoryDatabase;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".CLEANUP");

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.server.notification.NotificationHistoryDatabase: java.lang.String ACTION_HISTORY_DELETION> = $r6;

        return;
    }

    public void <init>(android.content.Context, android.os.Handler, java.io.File)
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        android.os.Handler r1;
        java.io.File r2, $r7, $r8;
        java.lang.Object $r3, $r5;
        com.android.server.notification.NotificationHistoryDatabase$1 $r4;
        android.app.AlarmManager $r6;
        java.util.LinkedList $r9;
        android.app.NotificationHistory $r10;
        com.android.server.notification.NotificationHistoryDatabase$WriteBufferRunnable $r11;
        android.content.IntentFilter $r12;
        java.lang.String $r13;
        android.content.BroadcastReceiver $r14;
        android.content.Context $r15, r17;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        r17 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Handler;

        r2 := @parameter2: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.notification.NotificationHistoryDatabase: java.lang.Object mLock> = $r3;

        $r4 = new com.android.server.notification.NotificationHistoryDatabase$1;

        specialinvoke $r4.<com.android.server.notification.NotificationHistoryDatabase$1: void <init>(com.android.server.notification.NotificationHistoryDatabase)>(r0);

        r0.<com.android.server.notification.NotificationHistoryDatabase: android.content.BroadcastReceiver mFileCleaupReceiver> = $r4;

        r0.<com.android.server.notification.NotificationHistoryDatabase: android.content.Context mContext> = r17;

        $r5 = virtualinvoke r17.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AlarmManager;");

        $r6 = (android.app.AlarmManager) $r5;

        r0.<com.android.server.notification.NotificationHistoryDatabase: android.app.AlarmManager mAlarmManager> = $r6;

        r0.<com.android.server.notification.NotificationHistoryDatabase: int mCurrentVersion> = 1;

        r0.<com.android.server.notification.NotificationHistoryDatabase: android.os.Handler mFileWriteHandler> = r1;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "version");

        r0.<com.android.server.notification.NotificationHistoryDatabase: java.io.File mVersionFile> = $r7;

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "history");

        r0.<com.android.server.notification.NotificationHistoryDatabase: java.io.File mHistoryDir> = $r8;

        $r9 = new java.util.LinkedList;

        specialinvoke $r9.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.notification.NotificationHistoryDatabase: java.util.LinkedList mHistoryFiles> = $r9;

        $r10 = new android.app.NotificationHistory;

        specialinvoke $r10.<android.app.NotificationHistory: void <init>()>();

        r0.<com.android.server.notification.NotificationHistoryDatabase: android.app.NotificationHistory mBuffer> = $r10;

        $r11 = new com.android.server.notification.NotificationHistoryDatabase$WriteBufferRunnable;

        specialinvoke $r11.<com.android.server.notification.NotificationHistoryDatabase$WriteBufferRunnable: void <init>(com.android.server.notification.NotificationHistoryDatabase)>(r0);

        r0.<com.android.server.notification.NotificationHistoryDatabase: com.android.server.notification.NotificationHistoryDatabase$WriteBufferRunnable mWriteBufferRunnable> = $r11;

        $r12 = new android.content.IntentFilter;

        $r13 = <com.android.server.notification.NotificationHistoryDatabase: java.lang.String ACTION_HISTORY_DELETION>;

        specialinvoke $r12.<android.content.IntentFilter: void <init>(java.lang.String)>($r13);

        virtualinvoke $r12.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("delete");

        $r15 = r0.<com.android.server.notification.NotificationHistoryDatabase: android.content.Context mContext>;

        $r14 = r0.<com.android.server.notification.NotificationHistoryDatabase: android.content.BroadcastReceiver mFileCleaupReceiver>;

        virtualinvoke $r15.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r14, $r12);

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.notification.NotificationHistoryDatabase: java.lang.String ACTION_HISTORY_DELETION>;

        return $r0;
    }

    static java.lang.Object access$100(com.android.server.notification.NotificationHistoryDatabase)
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.notification.NotificationHistoryDatabase;

        $r1 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.lang.Object mLock>;

        return $r1;
    }

    static boolean access$200()
    {
        boolean $z0;

        $z0 = <com.android.server.notification.NotificationHistoryDatabase: boolean DEBUG>;

        return $z0;
    }

    static java.io.File access$300(com.android.server.notification.NotificationHistoryDatabase)
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        java.io.File $r1;

        r0 := @parameter0: com.android.server.notification.NotificationHistoryDatabase;

        $r1 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.io.File mHistoryDir>;

        return $r1;
    }

    static void access$400(com.android.server.notification.NotificationHistoryDatabase, android.util.AtomicFile, android.app.NotificationHistory) throws java.io.IOException
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        android.util.AtomicFile r1;
        android.app.NotificationHistory r2;

        r0 := @parameter0: com.android.server.notification.NotificationHistoryDatabase;

        r1 := @parameter1: android.util.AtomicFile;

        r2 := @parameter2: android.app.NotificationHistory;

        specialinvoke r0.<com.android.server.notification.NotificationHistoryDatabase: void writeLocked(android.util.AtomicFile,android.app.NotificationHistory)>(r1, r2);

        return;
    }

    static void access$500(com.android.server.notification.NotificationHistoryDatabase, java.io.File, long, int)
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        java.io.File r1;
        long l0;
        int i1;

        r0 := @parameter0: com.android.server.notification.NotificationHistoryDatabase;

        r1 := @parameter1: java.io.File;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.server.notification.NotificationHistoryDatabase: void scheduleDeletion(java.io.File,long,int)>(r1, l0, i1);

        return;
    }

    static void access$600(android.util.AtomicFile, android.app.NotificationHistory, com.android.server.notification.NotificationHistoryFilter) throws java.io.IOException
    {
        android.util.AtomicFile r0;
        android.app.NotificationHistory r1;
        com.android.server.notification.NotificationHistoryFilter r2;

        r0 := @parameter0: android.util.AtomicFile;

        r1 := @parameter1: android.app.NotificationHistory;

        r2 := @parameter2: com.android.server.notification.NotificationHistoryFilter;

        staticinvoke <com.android.server.notification.NotificationHistoryDatabase: void readLocked(android.util.AtomicFile,android.app.NotificationHistory,com.android.server.notification.NotificationHistoryFilter)>(r0, r1, r2);

        return;
    }

    private void checkVersionAndBuildLocked()
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        java.io.File $r1, $r3, $r4;
        java.lang.String $r2, $r5;
        int $i0, $i1, i3;
        boolean $z0;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r11, $r12;
        java.lang.RuntimeException $r10;
        java.io.BufferedReader r13;
        java.io.FileReader r14;
        java.io.BufferedWriter r18;
        java.io.FileWriter r19;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

     label01:
        r13 = new java.io.BufferedReader;

        r14 = new java.io.FileReader;

        $r1 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.io.File mVersionFile>;

        specialinvoke r14.<java.io.FileReader: void <init>(java.io.File)>($r1);

        specialinvoke r13.<java.io.BufferedReader: void <init>(java.io.Reader)>(r14);

     label02:
        $r2 = virtualinvoke r13.<java.io.BufferedReader: java.lang.String readLine()>();

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label03:
        virtualinvoke r13.<java.io.BufferedReader: void close()>();

     label04:
        goto label12;

     label05:
        $r8 := @caughtexception;

     label06:
        virtualinvoke r13.<java.io.BufferedReader: void close()>();

     label07:
        goto label10;

     label08:
        $r12 := @caughtexception;

     label09:
        virtualinvoke $r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r12);

     label10:
        throw $r8;

     label11:
        $r7 := @caughtexception;

        i3 = 0;

     label12:
        $i0 = r0.<com.android.server.notification.NotificationHistoryDatabase: int mCurrentVersion>;

        if i3 == $i0 goto label24;

        $r3 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.io.File mVersionFile>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label24;

     label13:
        r18 = new java.io.BufferedWriter;

        r19 = new java.io.FileWriter;

        $r4 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.io.File mVersionFile>;

        specialinvoke r19.<java.io.FileWriter: void <init>(java.io.File)>($r4);

        specialinvoke r18.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r19);

     label14:
        $i1 = r0.<com.android.server.notification.NotificationHistoryDatabase: int mCurrentVersion>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        virtualinvoke r18.<java.io.BufferedWriter: void write(java.lang.String)>($r5);

        virtualinvoke r18.<java.io.BufferedWriter: void write(java.lang.String)>("\n");

        virtualinvoke r18.<java.io.BufferedWriter: void flush()>();

     label15:
        virtualinvoke r18.<java.io.BufferedWriter: void close()>();

     label16:
        goto label24;

     label17:
        $r11 := @caughtexception;

     label18:
        virtualinvoke r18.<java.io.BufferedWriter: void close()>();

     label19:
        goto label22;

     label20:
        $r6 := @caughtexception;

     label21:
        virtualinvoke $r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r6);

     label22:
        throw $r11;

     label23:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotiHistoryDatabase", "Failed to write new version");

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label24:
        return;

        catch java.lang.NumberFormatException from label01 to label02 with label11;
        catch java.io.IOException from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.NumberFormatException from label03 to label04 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.NumberFormatException from label09 to label10 with label11;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.NumberFormatException from label10 to label11 with label11;
        catch java.io.IOException from label10 to label11 with label11;
        catch java.io.IOException from label13 to label14 with label23;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.io.IOException from label15 to label16 with label23;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.io.IOException from label22 to label23 with label23;
    }

    private void deleteFile(android.util.AtomicFile)
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        android.util.AtomicFile r1;
        boolean $z0;
        java.util.LinkedList $r3;
        java.lang.StringBuilder $r4;
        java.io.File $r6;
        java.lang.String $r7, $r9;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        r1 := @parameter0: android.util.AtomicFile;

        $z0 = <com.android.server.notification.NotificationHistoryDatabase: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed ");

        $r6 = virtualinvoke r1.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotiHistoryDatabase", $r9);

     label1:
        virtualinvoke r1.<android.util.AtomicFile: void delete()>();

        $r3 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.util.LinkedList mHistoryFiles>;

        virtualinvoke $r3.<java.util.LinkedList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    private void indexFilesLocked()
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        java.io.File[] r1;
        int i0, i1;
        java.io.File r2, $r4;
        java.util.LinkedList $r3, $r7;
        com.android.server.notification.'-$$Lambda$NotificationHistoryDatabase$DOpPLk6FC4M8AMJ1FHTPtwlmVmQ' $r5;
        android.util.AtomicFile r8;
        java.util.Comparator r9;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        $r3 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.util.LinkedList mHistoryFiles>;

        virtualinvoke $r3.<java.util.LinkedList: void clear()>();

        $r4 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.io.File mHistoryDir>;

        r1 = virtualinvoke $r4.<java.io.File: java.io.File[] listFiles()>();

        if r1 != null goto label1;

        return;

     label1:
        $r5 = <com.android.server.notification._$$Lambda$NotificationHistoryDatabase$DOpPLk6FC4M8AMJ1FHTPtwlmVmQ: com.android.server.notification.'-$$Lambda$NotificationHistoryDatabase$DOpPLk6FC4M8AMJ1FHTPtwlmVmQ' INSTANCE>;

        r9 = (java.util.Comparator) $r5;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r1, r9);

        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        $r7 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.util.LinkedList mHistoryFiles>;

        r8 = new android.util.AtomicFile;

        specialinvoke r8.<android.util.AtomicFile: void <init>(java.io.File)>(r2);

        virtualinvoke $r7.<java.util.LinkedList: void addLast(java.lang.Object)>(r8);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    static int lambda$indexFilesLocked$0(java.io.File, java.io.File)
    {
        java.io.File r0, r1;
        java.lang.String $r2, $r3;
        long $l0, $l1;
        int $i2;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $l0 = staticinvoke <com.android.server.notification.NotificationHistoryDatabase: long safeParseLong(java.lang.String)>($r2);

        $r3 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $l1 = staticinvoke <com.android.server.notification.NotificationHistoryDatabase: long safeParseLong(java.lang.String)>($r3);

        $i2 = staticinvoke <java.lang.Long: int compare(long,long)>($l0, $l1);

        return $i2;
    }

    private static void readLocked(android.util.AtomicFile, android.app.NotificationHistory, com.android.server.notification.NotificationHistoryFilter) throws java.io.IOException
    {
        java.io.FileInputStream r0, r11, r12;
        java.lang.Throwable $r1, $r7;
        java.io.File $r3;
        java.lang.String $r4, $r6;
        android.util.AtomicFile r8;
        android.app.NotificationHistory r9;
        com.android.server.notification.NotificationHistoryFilter r10;
        java.lang.StringBuilder r15;

        r8 := @parameter0: android.util.AtomicFile;

        r9 := @parameter1: android.app.NotificationHistory;

        r10 := @parameter2: com.android.server.notification.NotificationHistoryFilter;

        r11 = null;

        r12 = null;

     label01:
        r0 = virtualinvoke r8.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        r12 = r0;

        r11 = r0;

     label03:
        staticinvoke <com.android.server.notification.NotificationHistoryProtoHelper: void read(java.io.InputStream,android.app.NotificationHistory,com.android.server.notification.NotificationHistoryFilter)>(r0, r9, r10);

     label04:
        if r0 == null goto label05;

        virtualinvoke r0.<java.io.FileInputStream: void close()>();

     label05:
        return;

     label06:
        $r7 := @caughtexception;

        goto label19;

     label07:
        $r1 := @caughtexception;

        r12 = r11;

     label08:
        r15 = new java.lang.StringBuilder;

     label09:
        r12 = r11;

     label10:
        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

     label11:
        r12 = r11;

     label12:
        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open ");

     label13:
        r12 = r11;

     label14:
        $r3 = virtualinvoke r8.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label15:
        r12 = r11;

     label16:
        $r6 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NotiHistoryDatabase", $r6, $r1);

     label17:
        r12 = r11;

     label18:
        throw $r1;

     label19:
        if r12 == null goto label20;

        virtualinvoke r12.<java.io.FileInputStream: void close()>();

     label20:
        throw $r7;

        catch java.io.FileNotFoundException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.io.FileNotFoundException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label12 to label13 with label06;
        catch java.lang.Throwable from label14 to label15 with label06;
        catch java.lang.Throwable from label16 to label17 with label06;
        catch java.lang.Throwable from label18 to label19 with label06;
    }

    private static long safeParseLong(java.lang.String)
    {
        long l0;
        java.lang.Throwable $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

     label1:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

     label2:
        return l0;

     label3:
        $r0 := @caughtexception;

        return -1L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void scheduleDeletion(java.io.File, long)
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        long l0;
        boolean $z0;
        android.content.Intent $r2, $r10, $r11, $r13;
        java.lang.String $r3, $r7, $r12, $r17, $r21;
        android.content.Context $r4;
        android.net.Uri$Builder $r5, $r6, $r8;
        android.net.Uri $r9;
        android.app.AlarmManager $r14;
        java.lang.StringBuilder $r15;
        java.io.File r22;
        android.app.PendingIntent r23;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        r22 := @parameter0: java.io.File;

        l0 := @parameter1: long;

        $z0 = <com.android.server.notification.NotificationHistoryDatabase: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling deletion for ");

        $r17 = virtualinvoke r22.<java.io.File: java.lang.String getName()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r21 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotiHistoryDatabase", $r21);

     label1:
        $r4 = r0.<com.android.server.notification.NotificationHistoryDatabase: android.content.Context mContext>;

        $r2 = new android.content.Intent;

        $r3 = <com.android.server.notification.NotificationHistoryDatabase: java.lang.String ACTION_HISTORY_DELETION>;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>($r3);

        $r5 = new android.net.Uri$Builder;

        specialinvoke $r5.<android.net.Uri$Builder: void <init>()>();

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("delete");

        $r7 = virtualinvoke r22.<java.io.File: java.lang.String getAbsolutePath()>();

        $r8 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri build()>();

        $r10 = virtualinvoke $r2.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r9);

        $r11 = virtualinvoke $r10.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r12 = virtualinvoke r22.<java.io.File: java.lang.String getAbsolutePath()>();

        $r13 = virtualinvoke $r11.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("key", $r12);

        r23 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r4, 1, $r13, 134217728);

        $r14 = r0.<com.android.server.notification.NotificationHistoryDatabase: android.app.AlarmManager mAlarmManager>;

        virtualinvoke $r14.<android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>(0, l0, r23);

        return;
    }

    private void scheduleDeletion(java.io.File, long, int)
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        java.io.File r1;
        long l0, $l3, $l4;
        int i1, $i2;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        r1 := @parameter0: java.io.File;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $i2 = 86400000 * i1;

        $l3 = (long) $i2;

        $l4 = $l3 + l0;

        specialinvoke r0.<com.android.server.notification.NotificationHistoryDatabase: void scheduleDeletion(java.io.File,long)>(r1, $l4);

        return;
    }

    private void writeLocked(android.util.AtomicFile, android.app.NotificationHistory) throws java.io.IOException
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        android.util.AtomicFile r1;
        java.io.FileOutputStream r2;
        int $i0;
        java.lang.Throwable $r3;
        android.app.NotificationHistory r4;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        r1 := @parameter0: android.util.AtomicFile;

        r4 := @parameter1: android.app.NotificationHistory;

        r2 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label1:
        $i0 = r0.<com.android.server.notification.NotificationHistoryDatabase: int mCurrentVersion>;

        staticinvoke <com.android.server.notification.NotificationHistoryProtoHelper: void write(java.io.OutputStream,android.app.NotificationHistory,int)>(r2, r4, $i0);

        virtualinvoke r1.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r2);

     label2:
        virtualinvoke r1.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(null);

        return;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r1.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r2);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void addNotification(android.app.NotificationHistory$HistoricalNotification)
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        java.lang.Object r1;
        android.app.NotificationHistory $r2, $r3;
        int $i0;
        com.android.server.notification.NotificationHistoryDatabase$WriteBufferRunnable $r4;
        android.os.Handler $r5;
        java.lang.Throwable $r6;
        android.app.NotificationHistory$HistoricalNotification r7;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        r7 := @parameter0: android.app.NotificationHistory$HistoricalNotification;

        r1 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.notification.NotificationHistoryDatabase: android.app.NotificationHistory mBuffer>;

        virtualinvoke $r2.<android.app.NotificationHistory: void addNewNotificationToWrite(android.app.NotificationHistory$HistoricalNotification)>(r7);

        $r3 = r0.<com.android.server.notification.NotificationHistoryDatabase: android.app.NotificationHistory mBuffer>;

        $i0 = virtualinvoke $r3.<android.app.NotificationHistory: int getHistoryCount()>();

        if $i0 != 1 goto label2;

        $r5 = r0.<com.android.server.notification.NotificationHistoryDatabase: android.os.Handler mFileWriteHandler>;

        $r4 = r0.<com.android.server.notification.NotificationHistoryDatabase: com.android.server.notification.NotificationHistoryDatabase$WriteBufferRunnable mWriteBufferRunnable>;

        virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, 1200000L);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void deleteConversation(java.lang.String, java.lang.String)
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        java.lang.String r1, r4;
        com.android.server.notification.NotificationHistoryDatabase$RemoveConversationRunnable $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new com.android.server.notification.NotificationHistoryDatabase$RemoveConversationRunnable;

        specialinvoke $r2.<com.android.server.notification.NotificationHistoryDatabase$RemoveConversationRunnable: void <init>(com.android.server.notification.NotificationHistoryDatabase,java.lang.String,java.lang.String)>(r0, r4, r1);

        $r3 = r0.<com.android.server.notification.NotificationHistoryDatabase: android.os.Handler mFileWriteHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void deleteNotificationHistoryItem(java.lang.String, long)
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        long l0;
        com.android.server.notification.NotificationHistoryDatabase$RemoveNotificationRunnable $r1;
        android.os.Handler $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        r3 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = new com.android.server.notification.NotificationHistoryDatabase$RemoveNotificationRunnable;

        specialinvoke $r1.<com.android.server.notification.NotificationHistoryDatabase$RemoveNotificationRunnable: void <init>(com.android.server.notification.NotificationHistoryDatabase,java.lang.String,long)>(r0, r3, l0);

        $r2 = r0.<com.android.server.notification.NotificationHistoryDatabase: android.os.Handler mFileWriteHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void disableHistory()
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        java.lang.Object r1, $r5;
        java.util.LinkedList $r2, $r4;
        boolean $z0;
        java.io.File $r3;
        android.util.AtomicFile $r6;
        java.lang.Throwable $r7;
        java.util.Iterator r8;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        r1 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.util.LinkedList mHistoryFiles>;

        r8 = virtualinvoke $r2.<java.util.LinkedList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.util.AtomicFile) $r5;

        virtualinvoke $r6.<android.util.AtomicFile: void delete()>();

     label3:
        goto label2;

     label4:
        $r3 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.io.File mHistoryDir>;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        $r4 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.util.LinkedList mHistoryFiles>;

        virtualinvoke $r4.<java.util.LinkedList: void clear()>();

        exitmonitor r1;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void forceWriteToDisk()
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        com.android.server.notification.NotificationHistoryDatabase$WriteBufferRunnable $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        $r2 = r0.<com.android.server.notification.NotificationHistoryDatabase: android.os.Handler mFileWriteHandler>;

        $r1 = r0.<com.android.server.notification.NotificationHistoryDatabase: com.android.server.notification.NotificationHistoryDatabase$WriteBufferRunnable mWriteBufferRunnable>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void init()
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        java.lang.Object r1;
        java.io.File $r2, $r3, $r4;
        boolean $z0, $z2;
        long $l0;
        java.lang.Throwable $r5;
        java.lang.Exception $r6;
        java.lang.IllegalStateException r7;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        r1 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.io.File mHistoryDir>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label04;

        $r4 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.io.File mHistoryDir>;

        $z2 = virtualinvoke $r4.<java.io.File: boolean mkdir()>();

        if $z2 == 0 goto label03;

     label02:
        goto label04;

     label03:
        r7 = new java.lang.IllegalStateException;

        specialinvoke r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("could not create history directory");

        throw r7;

     label04:
        $r3 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.io.File mVersionFile>;

        virtualinvoke $r3.<java.io.File: boolean createNewFile()>();

     label05:
        goto label09;

     label06:
        $r5 := @caughtexception;

        goto label11;

     label07:
        $r6 := @caughtexception;

     label08:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NotiHistoryDatabase", "could not create needed files", $r6);

     label09:
        specialinvoke r0.<com.android.server.notification.NotificationHistoryDatabase: void checkVersionAndBuildLocked()>();

        specialinvoke r0.<com.android.server.notification.NotificationHistoryDatabase: void indexFilesLocked()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r0.<com.android.server.notification.NotificationHistoryDatabase: void prune(int,long)>(1, $l0);

        exitmonitor r1;

     label10:
        return;

     label11:
        exitmonitor r1;

     label12:
        throw $r5;

        catch java.lang.Exception from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Exception from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
    }

    public void onPackageRemoved(java.lang.String)
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        com.android.server.notification.NotificationHistoryDatabase$RemovePackageRunnable $r1;
        android.os.Handler $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        r3 := @parameter0: java.lang.String;

        $r1 = new com.android.server.notification.NotificationHistoryDatabase$RemovePackageRunnable;

        specialinvoke $r1.<com.android.server.notification.NotificationHistoryDatabase$RemovePackageRunnable: void <init>(com.android.server.notification.NotificationHistoryDatabase,java.lang.String)>(r0, r3);

        $r2 = r0.<com.android.server.notification.NotificationHistoryDatabase: android.os.Handler mFileWriteHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    void prune(int, long)
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        int i0, $i1, $i2, i7;
        java.lang.Object r1, $r6;
        java.util.GregorianCalendar r2;
        java.lang.StringBuilder r3;
        java.util.LinkedList $r4, $r5;
        java.io.File $r7, $r9, $r11;
        java.lang.String $r8, $r12, $r16;
        boolean $z0;
        long $l3, l6, l8;
        byte $b4;
        java.lang.Throwable $r17;
        android.util.AtomicFile r18;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        i0 := @parameter0: int;

        l6 := @parameter1: long;

        r1 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = new java.util.GregorianCalendar;

        specialinvoke r2.<java.util.GregorianCalendar: void <init>()>();

        virtualinvoke r2.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l6);

        $i1 = i0 * -1;

        virtualinvoke r2.<java.util.GregorianCalendar: void add(int,int)>(5, $i1);

        $r4 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.util.LinkedList mHistoryFiles>;

        $i2 = virtualinvoke $r4.<java.util.LinkedList: int size()>();

        i7 = $i2 - 1;

     label02:
        if i7 < 0 goto label09;

     label03:
        $r5 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.util.LinkedList mHistoryFiles>;

        $r6 = virtualinvoke $r5.<java.util.LinkedList: java.lang.Object get(int)>(i7);

        r18 = (android.util.AtomicFile) $r6;

     label04:
        $r7 = virtualinvoke r18.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getName()>();

        l8 = staticinvoke <com.android.server.notification.NotificationHistoryDatabase: long safeParseLong(java.lang.String)>($r8);

        $z0 = <com.android.server.notification.NotificationHistoryDatabase: boolean DEBUG>;

        if $z0 == 0 goto label05;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r11 = virtualinvoke r18.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r12 = virtualinvoke $r11.<java.io.File: java.lang.String getName()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" created on ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l8);

        $r16 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotiHistoryDatabase", $r16);

     label05:
        $l3 = virtualinvoke r2.<java.util.GregorianCalendar: long getTimeInMillis()>();

        $b4 = l8 cmp $l3;

        if $b4 > 0 goto label07;

        specialinvoke r0.<com.android.server.notification.NotificationHistoryDatabase: void deleteFile(android.util.AtomicFile)>(r18);

     label06:
        goto label08;

     label07:
        $r9 = virtualinvoke r18.<android.util.AtomicFile: java.io.File getBaseFile()>();

        specialinvoke r0.<com.android.server.notification.NotificationHistoryDatabase: void scheduleDeletion(java.io.File,long,int)>($r9, l8, i0);

     label08:
        i7 = i7 + -1;

        goto label02;

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r17 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public android.app.NotificationHistory readNotificationHistory()
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        java.lang.Object r1, $r7;
        android.app.NotificationHistory r2, $r5;
        android.util.AtomicFile r3;
        java.util.LinkedList $r6;
        boolean $z0;
        com.android.server.notification.NotificationHistoryFilter $r8;
        java.lang.Throwable $r9;
        java.lang.Exception $r10;
        java.io.File $r12;
        java.lang.String $r13, $r15;
        java.util.Iterator r16;
        com.android.server.notification.NotificationHistoryFilter$Builder r17;
        java.lang.StringBuilder r18;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        r1 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = new android.app.NotificationHistory;

        specialinvoke r2.<android.app.NotificationHistory: void <init>()>();

        $r5 = r0.<com.android.server.notification.NotificationHistoryDatabase: android.app.NotificationHistory mBuffer>;

        virtualinvoke r2.<android.app.NotificationHistory: void addNotificationsToWrite(android.app.NotificationHistory)>($r5);

        $r6 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.util.LinkedList mHistoryFiles>;

        r16 = virtualinvoke $r6.<java.util.LinkedList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r7 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.util.AtomicFile) $r7;

     label03:
        r17 = new com.android.server.notification.NotificationHistoryFilter$Builder;

        specialinvoke r17.<com.android.server.notification.NotificationHistoryFilter$Builder: void <init>()>();

        $r8 = virtualinvoke r17.<com.android.server.notification.NotificationHistoryFilter$Builder: com.android.server.notification.NotificationHistoryFilter build()>();

        staticinvoke <com.android.server.notification.NotificationHistoryDatabase: void readLocked(android.util.AtomicFile,android.app.NotificationHistory,com.android.server.notification.NotificationHistoryFilter)>(r3, r2, $r8);

     label04:
        goto label07;

     label05:
        $r10 := @caughtexception;

     label06:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error reading ");

        $r12 = virtualinvoke r3.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r13 = virtualinvoke $r12.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NotiHistoryDatabase", $r15, $r10);

     label07:
        goto label02;

     label08:
        exitmonitor r1;

     label09:
        return r2;

     label10:
        $r9 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public android.app.NotificationHistory readNotificationHistory(java.lang.String, java.lang.String, int)
    {
        com.android.server.notification.NotificationHistoryDatabase r0;
        java.lang.String r1, $r16, $r18, r20;
        int i0, i1;
        java.lang.Object r2, $r8;
        android.app.NotificationHistory r3;
        java.util.Iterator r4;
        android.util.AtomicFile r5;
        java.util.LinkedList $r7;
        boolean $z0;
        com.android.server.notification.NotificationHistoryFilter$Builder $r9, $r10, $r11, r21;
        com.android.server.notification.NotificationHistoryFilter $r12;
        java.lang.Exception $r13;
        java.io.File $r15;
        java.lang.Throwable $r19;
        java.lang.StringBuilder r22;

        r0 := @this: com.android.server.notification.NotificationHistoryDatabase;

        r20 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        r3 = new android.app.NotificationHistory;

        specialinvoke r3.<android.app.NotificationHistory: void <init>()>();

        $r7 = r0.<com.android.server.notification.NotificationHistoryDatabase: java.util.LinkedList mHistoryFiles>;

        r4 = virtualinvoke $r7.<java.util.LinkedList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.util.AtomicFile) $r8;

     label03:
        r21 = new com.android.server.notification.NotificationHistoryFilter$Builder;

        specialinvoke r21.<com.android.server.notification.NotificationHistoryFilter$Builder: void <init>()>();

        $r9 = virtualinvoke r21.<com.android.server.notification.NotificationHistoryFilter$Builder: com.android.server.notification.NotificationHistoryFilter$Builder setPackage(java.lang.String)>(r20);

        $r10 = virtualinvoke $r9.<com.android.server.notification.NotificationHistoryFilter$Builder: com.android.server.notification.NotificationHistoryFilter$Builder setChannel(java.lang.String,java.lang.String)>(r20, r1);

        $r11 = virtualinvoke $r10.<com.android.server.notification.NotificationHistoryFilter$Builder: com.android.server.notification.NotificationHistoryFilter$Builder setMaxNotifications(int)>(i0);

        $r12 = virtualinvoke $r11.<com.android.server.notification.NotificationHistoryFilter$Builder: com.android.server.notification.NotificationHistoryFilter build()>();

        staticinvoke <com.android.server.notification.NotificationHistoryDatabase: void readLocked(android.util.AtomicFile,android.app.NotificationHistory,com.android.server.notification.NotificationHistoryFilter)>(r5, r3, $r12);

        i1 = virtualinvoke r3.<android.app.NotificationHistory: int getHistoryCount()>();

     label04:
        if i0 != i1 goto label05;

        goto label09;

     label05:
        goto label08;

     label06:
        $r13 := @caughtexception;

     label07:
        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error reading ");

        $r15 = virtualinvoke r5.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r16 = virtualinvoke $r15.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NotiHistoryDatabase", $r18, $r13);

     label08:
        goto label02;

     label09:
        exitmonitor r2;

     label10:
        return r3;

     label11:
        $r19 := @caughtexception;

     label12:
        exitmonitor r2;

     label13:
        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Exception from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }
}
