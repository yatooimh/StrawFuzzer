public class com.android.server.notification.NotificationHistoryManager extends java.lang.Object
{
    private static final boolean DEBUG;
    static final java.lang.String DIRECTORY_PER_USER;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.util.SparseBooleanArray mHistoryEnabled;
    private final java.lang.Object mLock;
    final com.android.server.notification.NotificationHistoryManager$SettingsObserver mSettingsObserver;
    private final android.os.UserManager mUserManager;
    private final android.util.SparseBooleanArray mUserPendingHistoryDisables;
    private final android.util.SparseArray mUserPendingPackageRemovals;
    private final android.util.SparseArray mUserState;
    private final android.util.SparseBooleanArray mUserUnlockedStates;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.notification.NotificationHistoryManager: java.lang.String TAG> = "NotificationHistory";

        <com.android.server.notification.NotificationHistoryManager: java.lang.String DIRECTORY_PER_USER> = "notification_history";

        $z0 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        <com.android.server.notification.NotificationHistoryManager: boolean DEBUG> = $z0;

        return;
    }

    public void <init>(android.content.Context, android.os.Handler)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        android.content.Context r1;
        android.os.Handler r2;
        java.lang.Object $r3, $r9;
        android.util.SparseArray $r4, $r6;
        android.util.SparseBooleanArray $r5, $r7, $r8;
        android.os.UserManager $r10;
        com.android.server.notification.NotificationHistoryManager$SettingsObserver $r11;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserState> = $r4;

        $r5 = new android.util.SparseBooleanArray;

        specialinvoke $r5.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mUserUnlockedStates> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserPendingPackageRemovals> = $r6;

        $r7 = new android.util.SparseBooleanArray;

        specialinvoke $r7.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mHistoryEnabled> = $r7;

        $r8 = new android.util.SparseBooleanArray;

        specialinvoke $r8.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mUserPendingHistoryDisables> = $r8;

        r0.<com.android.server.notification.NotificationHistoryManager: android.content.Context mContext> = r1;

        $r9 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/UserManager;");

        $r10 = (android.os.UserManager) $r9;

        r0.<com.android.server.notification.NotificationHistoryManager: android.os.UserManager mUserManager> = $r10;

        $r11 = new com.android.server.notification.NotificationHistoryManager$SettingsObserver;

        specialinvoke $r11.<com.android.server.notification.NotificationHistoryManager$SettingsObserver: void <init>(com.android.server.notification.NotificationHistoryManager,android.os.Handler)>(r0, r2);

        r0.<com.android.server.notification.NotificationHistoryManager: com.android.server.notification.NotificationHistoryManager$SettingsObserver mSettingsObserver> = $r11;

        return;
    }

    static android.content.Context access$000(com.android.server.notification.NotificationHistoryManager)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.notification.NotificationHistoryManager;

        $r1 = r0.<com.android.server.notification.NotificationHistoryManager: android.content.Context mContext>;

        return $r1;
    }

    static java.lang.Object access$100(com.android.server.notification.NotificationHistoryManager)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.notification.NotificationHistoryManager;

        $r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        return $r1;
    }

    static android.os.UserManager access$200(com.android.server.notification.NotificationHistoryManager)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        android.os.UserManager $r1;

        r0 := @parameter0: com.android.server.notification.NotificationHistoryManager;

        $r1 = r0.<com.android.server.notification.NotificationHistoryManager: android.os.UserManager mUserManager>;

        return $r1;
    }

    private void disableHistory(com.android.server.notification.NotificationHistoryDatabase, int)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        com.android.server.notification.NotificationHistoryDatabase r1;
        int i0;
        android.util.SparseBooleanArray $r2, $r3;
        android.util.SparseArray $r4;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        r1 := @parameter0: com.android.server.notification.NotificationHistoryDatabase;

        i0 := @parameter1: int;

        virtualinvoke r1.<com.android.server.notification.NotificationHistoryDatabase: void disableHistory()>();

        $r2 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mUserPendingHistoryDisables>;

        virtualinvoke $r2.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 0);

        $r3 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mHistoryEnabled>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 0);

        $r4 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserState>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, null);

        return;
    }

    private com.android.server.notification.NotificationHistoryDatabase getUserHistoryAndInitializeIfNeededLocked(int)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        int i0;
        com.android.server.notification.NotificationHistoryDatabase r1, r27;
        android.util.SparseBooleanArray $r2, $r9;
        boolean $z0, $z1, $z2, $z3;
        android.util.SparseArray $r3, $r14, $r15;
        java.lang.Object $r4;
        java.io.File $r5, $r6;
        android.content.Context $r7;
        android.os.Handler $r8;
        java.lang.StringBuilder $r10, $r16, $r22;
        java.lang.String $r13, $r19, $r25;
        java.lang.Exception $r20;
        android.os.UserManager $r21;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mHistoryEnabled>;

        $z0 = virtualinvoke $r2.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z0 != 0 goto label2;

        $z2 = <com.android.server.notification.NotificationHistoryManager: boolean DEBUG>;

        if $z2 == 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("History disabled for user ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("NotificationHistory", $r19);

     label1:
        $r15 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserState>;

        virtualinvoke $r15.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, null);

        return null;

     label2:
        $r3 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserState>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.notification.NotificationHistoryDatabase) $r4;

        r27 = r1;

        if r1 != null goto label8;

        $r5 = new java.io.File;

        $r6 = staticinvoke <android.os.Environment: java.io.File getDataSystemCeDirectory(int)>(i0);

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, "notification_history");

        $r7 = r0.<com.android.server.notification.NotificationHistoryManager: android.content.Context mContext>;

        $r8 = staticinvoke <com.android.server.IoThread: android.os.Handler getHandler()>();

        r27 = staticinvoke <com.android.server.notification.NotificationHistoryDatabaseFactory: com.android.server.notification.NotificationHistoryDatabase create(android.content.Context,android.os.Handler,java.io.File)>($r7, $r8, $r5);

        $r9 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mUserUnlockedStates>;

        $z1 = virtualinvoke $r9.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z1 == 0 goto label7;

     label3:
        virtualinvoke r27.<com.android.server.notification.NotificationHistoryDatabase: void init()>();

     label4:
        $r14 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserState>;

        virtualinvoke $r14.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r27);

        goto label8;

     label5:
        $r20 := @caughtexception;

        $r21 = r0.<com.android.server.notification.NotificationHistoryManager: android.os.UserManager mUserManager>;

        $z3 = virtualinvoke $r21.<android.os.UserManager: boolean isUserUnlocked(int)>(i0);

        if $z3 != 0 goto label6;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to initialize service for stopped or removed user ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationHistory", $r25);

        return null;

     label6:
        throw $r20;

     label7:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to initialize service for stopped or removed user ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationHistory", $r13);

        return null;

     label8:
        return r27;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void addNotification(android.app.NotificationHistory$HistoricalNotification)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        android.app.NotificationHistory$HistoricalNotification r1;
        com.android.server.notification._$$Lambda$NotificationHistoryManager$P36FRGiYHm0dLWXCGgnVpI1Em0E $r2;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        r1 := @parameter0: android.app.NotificationHistory$HistoricalNotification;

        $r2 = new com.android.server.notification._$$Lambda$NotificationHistoryManager$P36FRGiYHm0dLWXCGgnVpI1Em0E;

        specialinvoke $r2.<com.android.server.notification._$$Lambda$NotificationHistoryManager$P36FRGiYHm0dLWXCGgnVpI1Em0E: void <init>(com.android.server.notification.NotificationHistoryManager,android.app.NotificationHistory$HistoricalNotification)>(r0, r1);

        staticinvoke <android.os.Binder: void withCleanCallingIdentity(com.android.internal.util.FunctionalUtils$ThrowingRunnable)>($r2);

        return;
    }

    public void deleteConversation(java.lang.String, int, java.lang.String)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        java.lang.String r1, $r6, r8;
        java.lang.Object r2;
        com.android.server.notification.NotificationHistoryDatabase r3;
        java.lang.Throwable $r7;
        int i1, i2;
        java.lang.StringBuilder r9;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        r8 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

     label02:
        r3 = specialinvoke r0.<com.android.server.notification.NotificationHistoryManager: com.android.server.notification.NotificationHistoryDatabase getUserHistoryAndInitializeIfNeededLocked(int)>(i2);

     label03:
        if r3 != null goto label06;

     label04:
        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to remove conversation for locked/gone/disabled user ");

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationHistory", $r6);

        exitmonitor r2;

     label05:
        return;

     label06:
        virtualinvoke r3.<com.android.server.notification.NotificationHistoryDatabase: void deleteConversation(java.lang.String,java.lang.String)>(r8, r1);

        exitmonitor r2;

     label07:
        return;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void deleteNotificationHistoryItem(java.lang.String, int, long)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        long l0;
        java.lang.Object r1;
        com.android.server.notification.NotificationHistoryDatabase r2;
        java.lang.String $r5, r7;
        java.lang.Throwable $r6;
        int i2, i3;
        java.lang.StringBuilder r8;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        r7 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        l0 := @parameter2: long;

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i2);

     label02:
        r2 = specialinvoke r0.<com.android.server.notification.NotificationHistoryManager: com.android.server.notification.NotificationHistoryDatabase getUserHistoryAndInitializeIfNeededLocked(int)>(i3);

     label03:
        if r2 != null goto label06;

     label04:
        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to remove notif for locked/gone/disabled user ");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationHistory", $r5);

        exitmonitor r1;

     label05:
        return;

     label06:
        virtualinvoke r2.<com.android.server.notification.NotificationHistoryDatabase: void deleteNotificationHistoryItem(java.lang.String,long)>(r7, l0);

        exitmonitor r1;

     label07:
        return;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    boolean doesHistoryExistForUser(int)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        int i0;
        java.lang.Object r1, $r4;
        android.util.SparseArray $r3;
        java.lang.Throwable $r5;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserState>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r4 == null goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    java.util.List getPendingPackageRemovalsForUser(int)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        int i0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        java.util.List r5;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserPendingPackageRemovals>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (java.util.List) $r3;

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean isHistoryEnabled(int)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        android.util.SparseBooleanArray $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mHistoryEnabled>;

        z0 = virtualinvoke $r3.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean isUserUnlocked(int)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        android.util.SparseBooleanArray $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mUserUnlockedStates>;

        z0 = virtualinvoke $r3.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$addNotification$0$NotificationHistoryManager(android.app.NotificationHistory$HistoricalNotification) throws java.lang.Exception
    {
        com.android.server.notification.NotificationHistoryManager r0;
        java.lang.Object r1;
        int $i0, $i1;
        java.lang.String $r4;
        java.lang.Throwable $r5;
        android.app.NotificationHistory$HistoricalNotification r6;
        com.android.server.notification.NotificationHistoryDatabase r7;
        java.lang.StringBuilder r8;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        r6 := @parameter0: android.app.NotificationHistory$HistoricalNotification;

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = virtualinvoke r6.<android.app.NotificationHistory$HistoricalNotification: int getUserId()>();

        r7 = specialinvoke r0.<com.android.server.notification.NotificationHistoryManager: com.android.server.notification.NotificationHistoryDatabase getUserHistoryAndInitializeIfNeededLocked(int)>($i0);

     label2:
        if r7 != null goto label5;

     label3:
        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to add notif for locked/gone/disabled user ");

        $i1 = virtualinvoke r6.<android.app.NotificationHistory$HistoricalNotification: int getUserId()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationHistory", $r4);

        exitmonitor r1;

     label4:
        return;

     label5:
        virtualinvoke r7.<com.android.server.notification.NotificationHistoryDatabase: void addNotification(android.app.NotificationHistory$HistoricalNotification)>(r6);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void onBootPhaseAppsCanStart()
    {
        com.android.server.notification.NotificationHistoryManager r0;
        com.android.server.notification.NotificationHistoryManager$SettingsObserver $r1;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        $r1 = r0.<com.android.server.notification.NotificationHistoryManager: com.android.server.notification.NotificationHistoryManager$SettingsObserver mSettingsObserver>;

        virtualinvoke $r1.<com.android.server.notification.NotificationHistoryManager$SettingsObserver: void observe()>();

        return;
    }

    void onDestroy()
    {
        com.android.server.notification.NotificationHistoryManager r0;
        com.android.server.notification.NotificationHistoryManager$SettingsObserver $r1;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        $r1 = r0.<com.android.server.notification.NotificationHistoryManager: com.android.server.notification.NotificationHistoryManager$SettingsObserver mSettingsObserver>;

        virtualinvoke $r1.<com.android.server.notification.NotificationHistoryManager$SettingsObserver: void stopObserving()>();

        return;
    }

    void onHistoryEnabledChanged(int, boolean)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        int i0;
        java.lang.Object r1;
        android.util.SparseBooleanArray $r2, r5;
        java.lang.Throwable $r3;
        boolean z0, z1;
        com.android.server.notification.NotificationHistoryDatabase r4;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

        if z0 == 0 goto label02;

     label01:
        $r2 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mHistoryEnabled>;

        virtualinvoke $r2.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

     label02:
        r4 = specialinvoke r0.<com.android.server.notification.NotificationHistoryManager: com.android.server.notification.NotificationHistoryDatabase getUserHistoryAndInitializeIfNeededLocked(int)>(i0);

     label03:
        if r4 == null goto label06;

        if z0 != 0 goto label10;

     label04:
        specialinvoke r0.<com.android.server.notification.NotificationHistoryManager: void disableHistory(com.android.server.notification.NotificationHistoryDatabase,int)>(r4, i0);

     label05:
        goto label10;

     label06:
        r5 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mUserPendingHistoryDisables>;

     label07:
        if z0 != 0 goto label08;

        z1 = 1;

        goto label09;

     label08:
        z1 = 0;

     label09:
        virtualinvoke r5.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z1);

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        $r3 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void onPackageRemoved(int, java.lang.String)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        int i0;
        java.lang.Object r1, $r5, $r7;
        java.util.ArrayList r2;
        android.util.SparseBooleanArray $r3, $r6;
        boolean $z0, $z1;
        android.util.SparseArray $r4, $r8, r11;
        java.lang.Throwable $r9;
        java.lang.String r10;
        java.util.List r12;
        com.android.server.notification.NotificationHistoryDatabase r13;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mUserUnlockedStates>;

        $z0 = virtualinvoke $r3.<android.util.SparseBooleanArray: boolean get(int,boolean)>(i0, 0);

        if $z0 != 0 goto label04;

        $r6 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mHistoryEnabled>;

        $z1 = virtualinvoke $r6.<android.util.SparseBooleanArray: boolean get(int,boolean)>(i0, 0);

        if $z1 == 0 goto label02;

        r11 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserPendingPackageRemovals>;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r7 = virtualinvoke r11.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>(i0, r2);

        r12 = (java.util.List) $r7;

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>(r10);

        $r8 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserPendingPackageRemovals>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r12);

     label02:
        exitmonitor r1;

     label03:
        return;

     label04:
        $r4 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserState>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r13 = (com.android.server.notification.NotificationHistoryDatabase) $r5;

     label05:
        if r13 != null goto label08;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        virtualinvoke r13.<com.android.server.notification.NotificationHistoryDatabase: void onPackageRemoved(java.lang.String)>(r10);

        exitmonitor r1;

     label09:
        return;

     label10:
        $r9 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void onUserRemoved(int)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        int i0;
        java.lang.Object r1;
        android.util.SparseArray $r3;
        android.util.SparseBooleanArray $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserPendingPackageRemovals>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, null);

        $r4 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mHistoryEnabled>;

        virtualinvoke $r4.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 0);

        $r5 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mUserPendingHistoryDisables>;

        virtualinvoke $r5.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 0);

        virtualinvoke r0.<com.android.server.notification.NotificationHistoryManager: void onUserStopped(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onUserStopped(int)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        int i0;
        java.lang.Object r1;
        android.util.SparseBooleanArray $r3;
        android.util.SparseArray $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mUserUnlockedStates>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 0);

        $r4 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserState>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, null);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void onUserUnlocked(int)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        int i0, $i1, i3;
        java.lang.Object r1, $r5, $r8;
        com.android.server.notification.NotificationHistoryDatabase r2;
        android.util.SparseBooleanArray $r3, $r6;
        android.util.SparseArray $r4, $r7;
        boolean $z0;
        java.lang.String $r9, $r12;
        java.lang.Throwable $r13;
        java.lang.StringBuilder r14;
        java.util.List r15;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mUserUnlockedStates>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

     label02:
        r2 = specialinvoke r0.<com.android.server.notification.NotificationHistoryManager: com.android.server.notification.NotificationHistoryDatabase getUserHistoryAndInitializeIfNeededLocked(int)>(i0);

     label03:
        if r2 != null goto label06;

     label04:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to unlock gone/disabled user ");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("NotificationHistory", $r12);

        exitmonitor r1;

     label05:
        return;

     label06:
        $r4 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserPendingPackageRemovals>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r15 = (java.util.List) $r5;

     label07:
        if r15 == null goto label11;

        i3 = 0;

     label08:
        $i1 = interfaceinvoke r15.<java.util.List: int size()>();

        if i3 >= $i1 goto label10;

        $r8 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(i3);

        $r9 = (java.lang.String) $r8;

        virtualinvoke r2.<com.android.server.notification.NotificationHistoryDatabase: void onPackageRemoved(java.lang.String)>($r9);

     label09:
        i3 = i3 + 1;

        goto label08;

     label10:
        $r7 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserPendingPackageRemovals>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, null);

     label11:
        $r6 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mUserPendingHistoryDisables>;

        $z0 = virtualinvoke $r6.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z0 == 0 goto label12;

        specialinvoke r0.<com.android.server.notification.NotificationHistoryManager: void disableHistory(com.android.server.notification.NotificationHistoryDatabase,int)>(r2, i0);

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r13 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public android.app.NotificationHistory readFilteredNotificationHistory(int, java.lang.String, java.lang.String, int)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        int i0, i1;
        java.lang.String r1, $r6, r8;
        java.lang.Object r2;
        com.android.server.notification.NotificationHistoryDatabase r3;
        java.lang.Throwable $r7;
        java.lang.StringBuilder r9;
        android.app.NotificationHistory r10, r11;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r2 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        r3 = specialinvoke r0.<com.android.server.notification.NotificationHistoryManager: com.android.server.notification.NotificationHistoryDatabase getUserHistoryAndInitializeIfNeededLocked(int)>(i0);

     label2:
        if r3 != null goto label5;

     label3:
        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to read history for locked/gone/disabled user ");

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("NotificationHistory", $r6);

        r10 = new android.app.NotificationHistory;

        specialinvoke r10.<android.app.NotificationHistory: void <init>()>();

        exitmonitor r2;

     label4:
        return r10;

     label5:
        r11 = virtualinvoke r3.<com.android.server.notification.NotificationHistoryDatabase: android.app.NotificationHistory readNotificationHistory(java.lang.String,java.lang.String,int)>(r8, r1, i1);

        exitmonitor r2;

     label6:
        return r11;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.app.NotificationHistory readNotificationHistory(int[])
    {
        com.android.server.notification.NotificationHistoryManager r0;
        java.lang.Object r1;
        android.app.NotificationHistory r2, $r3;
        int i0, i1, i3;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        int[] r8;
        com.android.server.notification.NotificationHistoryDatabase r9;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        r8 := @parameter0: int[];

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = new android.app.NotificationHistory;

        specialinvoke r2.<android.app.NotificationHistory: void <init>()>();

     label02:
        if r8 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return r2;

     label05:
        i0 = lengthof r8;

     label06:
        i3 = 0;

     label07:
        if i3 >= i0 goto label14;

        i1 = r8[i3];

     label08:
        r9 = specialinvoke r0.<com.android.server.notification.NotificationHistoryManager: com.android.server.notification.NotificationHistoryDatabase getUserHistoryAndInitializeIfNeededLocked(int)>(i1);

     label09:
        if r9 != null goto label12;

     label10:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to read history for locked/gone/disabled user ");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("NotificationHistory", $r6);

     label11:
        goto label13;

     label12:
        $r3 = virtualinvoke r9.<com.android.server.notification.NotificationHistoryDatabase: android.app.NotificationHistory readNotificationHistory()>();

        virtualinvoke r2.<android.app.NotificationHistory: void addNotificationsToWrite(android.app.NotificationHistory)>($r3);

     label13:
        i3 = i3 + 1;

        goto label07;

     label14:
        exitmonitor r1;

     label15:
        return r2;

     label16:
        $r7 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    void replaceNotificationHistoryDatabase(int, com.android.server.notification.NotificationHistoryDatabase)
    {
        com.android.server.notification.NotificationHistoryManager r0;
        int i0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2, $r4;
        java.lang.Throwable $r5;
        com.android.server.notification.NotificationHistoryDatabase r6;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        i0 := @parameter0: int;

        r6 := @parameter1: com.android.server.notification.NotificationHistoryDatabase;

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserState>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r3 == null goto label2;

        $r4 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserState>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r6);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void triggerWriteToDisk()
    {
        com.android.server.notification.NotificationHistoryManager r0;
        java.lang.Object r1, $r6;
        int i0, i1, i2;
        android.util.SparseArray $r2, $r3, $r5;
        android.util.SparseBooleanArray $r4;
        boolean $z0;
        java.lang.Throwable $r7;
        com.android.server.notification.NotificationHistoryDatabase r8;

        r0 := @this: com.android.server.notification.NotificationHistoryManager;

        r1 = r0.<com.android.server.notification.NotificationHistoryManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserState>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label10;

     label04:
        $r3 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserState>;

        i1 = virtualinvoke $r3.<android.util.SparseArray: int keyAt(int)>(i2);

        $r4 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseBooleanArray mUserUnlockedStates>;

        $z0 = virtualinvoke $r4.<android.util.SparseBooleanArray: boolean get(int)>(i1);

        if $z0 != 0 goto label06;

     label05:
        goto label09;

     label06:
        $r5 = r0.<com.android.server.notification.NotificationHistoryManager: android.util.SparseArray mUserState>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r8 = (com.android.server.notification.NotificationHistoryDatabase) $r6;

     label07:
        if r8 == null goto label09;

     label08:
        virtualinvoke r8.<com.android.server.notification.NotificationHistoryDatabase: void forceWriteToDisk()>();

     label09:
        i2 = i2 + 1;

        goto label03;

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        $r7 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }
}
