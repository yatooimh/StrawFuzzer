class com.android.server.notification.NotificationManagerService$10 extends android.app.INotificationManager$Stub
{
    final com.android.server.notification.NotificationManagerService this$0;

    void <init>(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        com.android.server.notification.NotificationManagerService r1;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: com.android.server.notification.NotificationManagerService;

        r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0> = r1;

        specialinvoke r0.<android.app.INotificationManager$Stub: void <init>()>();

        return;
    }

    private void cancelNotificationFromListenerLocked(com.android.server.notification.ManagedServices$ManagedServiceInfo, int, int, java.lang.String, java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        int i0, i1, i2, i3;
        java.lang.String r2, r3;
        com.android.server.notification.NotificationManagerService $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService: void cancelNotification(int,int,java.lang.String,java.lang.String,int,int,int,boolean,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>(i0, i1, r2, r3, i2, 0, 66, 1, i3, 10, r1);

        return;
    }

    private boolean checkPackagePolicyAccess(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        com.android.server.notification.NotificationManagerService $r2;
        com.android.server.notification.ConditionProviders $r3;
        android.os.UserHandle $r4;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)>($r2);

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService$10: android.os.UserHandle getCallingUserHandle()>();

        $i0 = virtualinvoke $r4.<android.os.UserHandle: int getIdentifier()>();

        $z0 = virtualinvoke $r3.<com.android.server.notification.ConditionProviders: boolean isPackageOrComponentAllowed(java.lang.String,int)>(r1, $i0);

        return $z0;
    }

    private boolean checkPolicyAccess(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, $i1, $i2, $i3;
        com.android.server.notification.NotificationManagerService $r1, $r4, $r6, $r8;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        boolean $z0, $z1, $z2, z3;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r5;
        android.app.admin.DevicePolicyManagerInternal $r7, $r9;
        android.content.pm.PackageManager$NameNotFoundException $r10;
        java.lang.String r11;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r11 := @parameter0: java.lang.String;

        z3 = 0;

     label1:
        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $i2 = virtualinvoke $r3.<android.content.pm.PackageManager: int getPackageUidAsUser(java.lang.String,int)>(r11, $i1);

        i0 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>("android.permission.MANAGE_NOTIFICATIONS", $i2, -1, 1);

     label2:
        if i0 != 0 goto label3;

        return 1;

     label3:
        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: boolean checkPackagePolicyAccess(java.lang.String)>(r11);

        if $z0 != 0 goto label5;

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r4);

        $z1 = virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$NotificationListeners: boolean isComponentEnabledForPackage(java.lang.String)>(r11);

        if $z1 != 0 goto label5;

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r7 = staticinvoke <com.android.server.notification.NotificationManagerService: android.app.admin.DevicePolicyManagerInternal access$6200(com.android.server.notification.NotificationManagerService)>($r6);

        if $r7 == null goto label4;

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r9 = staticinvoke <com.android.server.notification.NotificationManagerService: android.app.admin.DevicePolicyManagerInternal access$6200(com.android.server.notification.NotificationManagerService)>($r8);

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z2 = virtualinvoke $r9.<android.app.admin.DevicePolicyManagerInternal: boolean isActiveAdminWithPolicy(int,int)>($i3, -1);

        if $z2 == 0 goto label4;

        goto label5;

     label4:
        goto label6;

     label5:
        z3 = 1;

     label6:
        return z3;

     label7:
        $r10 := @caughtexception;

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label7;
    }

    private void createNotificationChannelsImpl(java.lang.String, int, android.content.pm.ParceledListSlice)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r15;
        int i0, i1, $i2, i3;
        java.util.List r2;
        com.android.server.notification.NotificationManagerService $r3, $r6, $r7, $r10, $r13;
        java.lang.Object $r4;
        com.android.server.notification.PreferencesHelper $r8, $r14;
        com.android.server.notification.ConditionProviders $r9;
        boolean $z0, z1;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r11;
        android.os.UserHandle $r12;
        android.app.NotificationChannel $r16, r18;
        android.content.pm.ParceledListSlice r17;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r17 := @parameter2: android.content.pm.ParceledListSlice;

        r2 = virtualinvoke r17.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        z1 = 0;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i3);

        r18 = (android.app.NotificationChannel) $r4;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r18, "channel in list is null");

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r8 = $r6.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r9 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)>($r7);

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $z0 = virtualinvoke $r9.<com.android.server.notification.ConditionProviders: boolean isPackageOrComponentAllowed(java.lang.String,int)>(r1, $i2);

        z1 = virtualinvoke $r8.<com.android.server.notification.PreferencesHelper: boolean createNotificationChannel(java.lang.String,int,android.app.NotificationChannel,boolean,boolean)>(r1, i0, r18, 1, $z0);

        if z1 == 0 goto label2;

        $r10 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r11 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r10);

        $r12 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        $r13 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r14 = $r13.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r15 = virtualinvoke r18.<android.app.NotificationChannel: java.lang.String getId()>();

        $r16 = virtualinvoke $r14.<com.android.server.notification.PreferencesHelper: android.app.NotificationChannel getNotificationChannel(java.lang.String,int,java.lang.String,boolean)>(r1, i0, $r15, 0);

        virtualinvoke $r11.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyNotificationChannelChanged(java.lang.String,android.os.UserHandle,android.app.NotificationChannel,int)>(r1, $r12, $r16, 1);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        if z1 == 0 goto label4;

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

     label4:
        return;
    }

    private void enforcePolicyAccess(int, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, i1, $i2, $i4, i5;
        java.lang.String r1, $r9, $r13;
        com.android.server.notification.NotificationManagerService $r2, $r4, $r11;
        android.content.Context $r3;
        android.content.pm.PackageManager $r5;
        java.lang.StringBuilder $r6;
        java.lang.SecurityException $r10;
        com.android.server.notification.ConditionProviders $r12;
        boolean $z0, z1;
        java.lang.String[] r14;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $i2 = virtualinvoke $r3.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.MANAGE_NOTIFICATIONS");

        if $i2 != 0 goto label1;

        return;

     label1:
        z1 = 0;

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.notification.NotificationManagerService: android.content.pm.PackageManager access$4900(com.android.server.notification.NotificationManagerService)>($r4);

        r14 = virtualinvoke $r5.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        i1 = lengthof r14;

        i5 = 0;

     label2:
        if i5 >= i1 goto label4;

        $r11 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r12 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)>($r11);

        $r13 = r14[i5];

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $z0 = virtualinvoke $r12.<com.android.server.notification.ConditionProviders: boolean isPackageOrComponentAllowed(java.lang.String,int)>($r13, $i4);

        if $z0 == 0 goto label3;

        z1 = 1;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        if z1 == 0 goto label5;

        return;

     label5:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notification policy access denied calling ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r9);

        $r10 = new java.lang.SecurityException;

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>("Notification policy access denied");

        throw $r10;
    }

    private void enforcePolicyAccess(java.lang.String, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r8, r10;
        com.android.server.notification.NotificationManagerService $r2, $r4;
        android.content.Context $r3;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.SecurityException $r9;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $i0 = virtualinvoke $r3.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.MANAGE_NOTIFICATIONS");

        if $i0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4600(com.android.server.notification.NotificationManagerService,java.lang.String)>($r4, r10);

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: boolean checkPolicyAccess(java.lang.String)>(r10);

        if $z0 == 0 goto label2;

        return;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notification policy access denied calling ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r8);

        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>("Notification policy access denied");

        throw $r9;
    }

    private void enforceSystemOrSystemUI(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        boolean $z0;
        android.content.Context $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $z0 = virtualinvoke $r2.<com.android.server.notification.NotificationManagerService: boolean isCallerSystemOrPhone()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = virtualinvoke $r3.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        virtualinvoke $r4.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.STATUS_BAR_SERVICE", r1);

        return;
    }

    private void enforceSystemOrSystemUIOrSamePackage(java.lang.String, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r6;
        com.android.server.notification.NotificationManagerService $r2, $r4;
        java.lang.Throwable $r3;
        android.content.Context $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r2, r6);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = virtualinvoke $r4.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        virtualinvoke $r5.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.STATUS_BAR_SERVICE", r1);

     label4:
        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    private void enqueueToast(java.lang.String, android.os.IBinder, java.lang.CharSequence, android.app.ITransientNotification, int, int, android.app.ITransientNotificationCallback)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, i1, i2, i3, $i6, i11, i13, i16, i17, i18, i19;
        android.app.ITransientNotificationCallback r1;
        boolean z0, $z1, $z3, $z4, $z5, $z6, z7, z9, z10, z11, z12, z13;
        android.os.Binder r2;
        com.android.server.notification.NotificationManagerService r3, $r10, $r11, $r13, $r15, $r17, $r19, $r20, $r21, $r31, $r35, $r73, $r80, $r82;
        java.util.ArrayList $r12, $r16, $r18, $r22, $r32, r81, r86, r89;
        com.android.server.wm.WindowManagerInternal $r14;
        java.lang.Object $r23, $r33;
        com.android.server.notification.toast.ToastRecord $r24, $r34, r87;
        java.lang.String $r25, $r30, $r41, $r46, $r47, $r57, r67, r76, $r93;
        com.android.internal.compat.IPlatformCompat $r36;
        java.lang.StringBuilder $r37, $r42, $r48, r84, $r91;
        java.lang.Throwable $r58, $r59, $r60, $r62, $r63, $r64, $r65, $r66, r83, r85;
        android.os.RemoteException $r61;
        android.os.IBinder r68;
        java.lang.CharSequence r69;
        android.app.ITransientNotification r70;
        android.os.UserHandle r72;
        long l12, l14, l15;
        android.app.ActivityManager $r74;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r67 := @parameter0: java.lang.String;

        r68 := @parameter1: android.os.IBinder;

        r69 := @parameter2: java.lang.CharSequence;

        r70 := @parameter3: android.app.ITransientNotification;

        i11 := @parameter4: int;

        i0 := @parameter5: int;

        r1 := @parameter6: android.app.ITransientNotificationCallback;

        $z1 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z1 == 0 goto label01;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enqueueToast pkg=");

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token=");

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r68);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" duration=");

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" displayId=");

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r57 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("NotificationService", $r57);

     label01:
        if r67 == null goto label67;

        if r69 != null goto label02;

        if r70 == null goto label67;

     label02:
        if r69 == null goto label03;

        if r70 != null goto label67;

     label03:
        if r68 != null goto label04;

        goto label67;

     label04:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r72 = staticinvoke <android.os.Binder: android.os.UserHandle getCallingUserHandle()>();

        $r10 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        z7 = virtualinvoke $r10.<com.android.server.notification.NotificationManagerService: boolean isCallerSystemOrPhone()>();

        if z7 != 0 goto label06;

        $r47 = "android";

        $z6 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>(r67);

        if $z6 == 0 goto label05;

        goto label06;

     label05:
        z9 = 0;

        goto label07;

     label06:
        z9 = 1;

     label07:
        z10 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: boolean isPackagePaused(java.lang.String)>(r67);

        z0 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: boolean areNotificationsEnabledForPackage(java.lang.String,int)>(r67, i1);

        l12 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label08:
        $r73 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r74 = staticinvoke <com.android.server.notification.NotificationManagerService: android.app.ActivityManager access$3700(com.android.server.notification.NotificationManagerService)>($r73);

        i13 = virtualinvoke $r74.<android.app.ActivityManager: int getUidImportance(int)>(i1);

     label09:
        if i13 != 100 goto label10;

        z11 = 1;

        goto label11;

     label10:
        z11 = 0;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l12);

        if z9 != 0 goto label16;

        $z5 = z0 ^ 1;

        if $z5 == 0 goto label12;

        if z11 == 0 goto label13;

     label12:
        if z10 == 0 goto label16;

     label13:
        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suppressing toast from package ");

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        if z10 == 0 goto label14;

        r76 = " due to package suspended.";

        goto label15;

     label14:
        r76 = " by user request.";

     label15:
        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r76);

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r46);

        return;

     label16:
        z12 = 0;

        if r70 == null goto label17;

        z12 = 1;

     label17:
        if z12 == 0 goto label26;

        if z9 != 0 goto label26;

        $z4 = specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: boolean isPackageInForegroundForToast(java.lang.String,int)>(r67, i1);

        if $z4 != 0 goto label26;

        l14 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label18:
        $r35 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r36 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.internal.compat.IPlatformCompat access$3800(com.android.server.notification.NotificationManagerService)>($r35);

        $i6 = virtualinvoke r72.<android.os.UserHandle: int getIdentifier()>();

        z13 = interfaceinvoke $r36.<com.android.internal.compat.IPlatformCompat: boolean isChangeEnabledByPackageName(long,java.lang.String,int)>(128611929L, r67, $i6);

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l14);

        goto label24;

     label20:
        $r64 := @caughtexception;

        goto label25;

     label21:
        $r61 := @caughtexception;

     label22:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Unexpected exception while checking block background custom toasts change", $r61);

     label23:
        z13 = 0;

        goto label19;

     label24:
        if z13 == 0 goto label26;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blocking custom toast from package ");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to package not in the foreground");

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r41);

        return;

     label25:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l14);

        throw $r64;

     label26:
        $r80 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r81 = $r80.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        entermonitor r81;

     label27:
        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l15 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label28:
        $r82 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        i16 = virtualinvoke $r82.<com.android.server.notification.NotificationManagerService: int indexOfToastLocked(java.lang.String,android.os.IBinder)>(r67, r68);

     label29:
        if i16 < 0 goto label33;

     label30:
        $r31 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r32 = $r31.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r33 = virtualinvoke $r32.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        $r34 = (com.android.server.notification.toast.ToastRecord) $r33;

        virtualinvoke $r34.<com.android.server.notification.toast.ToastRecord: void update(int)>(i11);

     label31:
        goto label47;

     label32:
        $r59 := @caughtexception;

        r83 = $r59;

        goto label57;

     label33:
        $r11 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r12 = $r11.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i3 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

     label34:
        i17 = 0;

        i18 = 0;

     label35:
        if i17 >= i3 goto label44;

     label36:
        $r21 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r22 = $r21.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        $r24 = (com.android.server.notification.toast.ToastRecord) $r23;

        $r25 = $r24.<com.android.server.notification.toast.ToastRecord: java.lang.String pkg>;

        $z3 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r67);

        if $z3 == 0 goto label43;

     label37:
        i18 = i18 + 1;

        if i18 < 25 goto label42;

     label38:
        r84 = new java.lang.StringBuilder;

        specialinvoke r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package has already posted ");

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" toasts. Not showing more. Package=");

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $r30 = virtualinvoke r84.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r30);

     label39:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l15);

        exitmonitor r81;

     label40:
        return;

     label41:
        $r60 := @caughtexception;

        r85 = $r60;

        r86 = r81;

        goto label62;

     label42:
        goto label43;

     label43:
        i17 = i17 + 1;

        goto label35;

     label44:
        r2 = new android.os.Binder;

        specialinvoke r2.<android.os.Binder: void <init>()>();

        $r13 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r14 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.wm.WindowManagerInternal access$3900(com.android.server.notification.NotificationManagerService)>($r13);

        virtualinvoke $r14.<com.android.server.wm.WindowManagerInternal: void addWindowToken(android.os.IBinder,int,int)>(r2, 2005, i0);

        r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

     label45:
        r87 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.toast.ToastRecord access$4000(com.android.server.notification.NotificationManagerService,int,int,java.lang.String,android.os.IBinder,java.lang.CharSequence,android.app.ITransientNotification,int,android.os.Binder,int,android.app.ITransientNotificationCallback)>(r3, i1, i2, r67, r68, r69, r70, i11, r2, i0, r1);

        $r15 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r16 = $r15.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>(r87);

        $r17 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r18 = $r17.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i19 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        $r19 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4100(com.android.server.notification.NotificationManagerService,int)>($r19, i2);

     label46:
        i16 = i19 - 1;

     label47:
        if i16 != 0 goto label51;

     label48:
        $r20 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r20.<com.android.server.notification.NotificationManagerService: void showNextToastLocked()>();

     label49:
        goto label51;

     label50:
        $r66 := @caughtexception;

        r83 = $r66;

        goto label57;

     label51:
        r89 = r81;

     label52:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l15);

     label53:
        r89 = r81;

     label54:
        exitmonitor r81;

     label55:
        return;

     label56:
        $r65 := @caughtexception;

        r83 = $r65;

     label57:
        r89 = r81;

     label58:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l15);

     label59:
        r89 = r81;

     label60:
        throw r83;

     label61:
        $r63 := @caughtexception;

        r85 = $r63;

        r86 = r81;

     label62:
        r89 = r86;

     label63:
        exitmonitor r86;

     label64:
        throw r85;

     label65:
        $r62 := @caughtexception;

        r85 = $r62;

        r86 = r89;

        goto label62;

     label66:
        $r58 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l12);

        throw $r58;

     label67:
        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not enqueuing toast. pkg=");

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" text=");

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r69);

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callback= token=");

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r68);

        $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r93);

        return;

        catch java.lang.Throwable from label08 to label09 with label66;
        catch android.os.RemoteException from label18 to label19 with label21;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label22 to label23 with label20;
        catch java.lang.Throwable from label27 to label28 with label61;
        catch java.lang.Throwable from label28 to label29 with label56;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label33 to label34 with label56;
        catch java.lang.Throwable from label36 to label37 with label32;
        catch java.lang.Throwable from label38 to label39 with label32;
        catch java.lang.Throwable from label39 to label40 with label41;
        catch java.lang.Throwable from label44 to label45 with label56;
        catch java.lang.Throwable from label45 to label46 with label50;
        catch java.lang.Throwable from label48 to label49 with label50;
        catch java.lang.Throwable from label52 to label53 with label65;
        catch java.lang.Throwable from label54 to label55 with label65;
        catch java.lang.Throwable from label58 to label59 with label65;
        catch java.lang.Throwable from label60 to label61 with label65;
        catch java.lang.Throwable from label63 to label64 with label65;
    }

    private int getUidForPackageAndUser(java.lang.String, android.os.UserHandle) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.os.UserHandle r1;
        long l0;
        int i1, $i2;
        com.android.server.notification.NotificationManagerService $r2;
        android.content.pm.IPackageManager $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = staticinvoke <com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager access$1300(com.android.server.notification.NotificationManagerService)>($r2);

        $i2 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        i1 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r5, 0, $i2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean isPackageInForegroundForToast(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        com.android.server.notification.NotificationManagerService $r2;
        com.android.server.wm.ActivityTaskManagerInternal $r3;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.wm.ActivityTaskManagerInternal access$4200(com.android.server.notification.NotificationManagerService)>($r2);

        $z0 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerInternal: boolean hasResumedActivity(int)>(i0);

        return $z0;
    }

    private android.service.notification.StatusBarNotification sanitizeSbn(java.lang.String, int, android.service.notification.StatusBarNotification)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r3, $r5, $r6, $r7, $r11, $r12;
        int i0, $i1, $i2, $i3, $i4;
        android.service.notification.StatusBarNotification r2, $r4;
        boolean $z0, $z1;
        android.app.Notification $r8, $r9;
        android.os.UserHandle $r10;
        long $l5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.service.notification.StatusBarNotification;

        $i1 = virtualinvoke r2.<android.service.notification.StatusBarNotification: int getUserId()>();

        if $i1 != i0 goto label2;

        $r3 = virtualinvoke r2.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r12 = virtualinvoke r2.<android.service.notification.StatusBarNotification: java.lang.String getOpPkg()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $r4 = new android.service.notification.StatusBarNotification;

        $r5 = virtualinvoke r2.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r6 = virtualinvoke r2.<android.service.notification.StatusBarNotification: java.lang.String getOpPkg()>();

        $i2 = virtualinvoke r2.<android.service.notification.StatusBarNotification: int getId()>();

        $r7 = virtualinvoke r2.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        $i3 = virtualinvoke r2.<android.service.notification.StatusBarNotification: int getUid()>();

        $i4 = virtualinvoke r2.<android.service.notification.StatusBarNotification: int getInitialPid()>();

        $r8 = virtualinvoke r2.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $r9 = virtualinvoke $r8.<android.app.Notification: android.app.Notification clone()>();

        $r10 = virtualinvoke r2.<android.service.notification.StatusBarNotification: android.os.UserHandle getUser()>();

        $r11 = virtualinvoke r2.<android.service.notification.StatusBarNotification: java.lang.String getOverrideGroupKey()>();

        $l5 = virtualinvoke r2.<android.service.notification.StatusBarNotification: long getPostTime()>();

        specialinvoke $r4.<android.service.notification.StatusBarNotification: void <init>(java.lang.String,java.lang.String,int,java.lang.String,int,int,android.app.Notification,android.os.UserHandle,java.lang.String,long)>($r5, $r6, $i2, $r7, $i3, $i4, $r9, $r10, $r11, $l5);

        return $r4;

     label2:
        return null;
    }

    private void verifyPrivilegedListener(android.service.notification.INotificationListener, android.os.UserHandle, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        boolean z0, $z1, $z2, $z3;
        java.lang.StringBuilder r1, $r6;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r5, $r11, $r15;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r4;
        int $i0;
        java.lang.SecurityException $r9, r25;
        java.lang.String $r10, $r14;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r16;
        android.os.IInterface $r17;
        java.lang.Throwable $r18, $r19;
        android.service.notification.INotificationListener r20;
        android.os.UserHandle r21;
        java.lang.Object r22, r24;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r23;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r20 := @parameter0: android.service.notification.INotificationListener;

        r21 := @parameter1: android.os.UserHandle;

        z0 := @parameter2: boolean;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r22 = $r2.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r22;

     label01:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r3);

        r23 = virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r20);

        exitmonitor r22;

     label02:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $z1 = virtualinvoke $r5.<com.android.server.notification.NotificationManagerService: boolean hasCompanionDevice(com.android.server.notification.ManagedServices$ManagedServiceInfo)>(r23);

        if $z1 != 0 goto label09;

        $r11 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r24 = $r11.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r24;

        if z0 == 0 goto label05;

     label03:
        $r15 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r16 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r15);

        $r17 = r23.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.os.IInterface service>;

        $z3 = virtualinvoke $r16.<com.android.server.notification.NotificationManagerService$NotificationAssistants: boolean isServiceTokenValidLocked(android.os.IInterface)>($r17);

        if $z3 == 0 goto label05;

        exitmonitor r24;

     label04:
        goto label09;

     label05:
        r25 = new java.lang.SecurityException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have access");

        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<java.lang.SecurityException: void <init>(java.lang.String)>($r14);

        throw r25;

     label06:
        $r19 := @caughtexception;

     label07:
        exitmonitor r24;

     label08:
        throw $r19;

     label09:
        $i0 = virtualinvoke r21.<android.os.UserHandle: int getIdentifier()>();

        $z2 = virtualinvoke r23.<com.android.server.notification.ManagedServices$ManagedServiceInfo: boolean enabledAndUserMatches(int)>($i0);

        if $z2 == 0 goto label10;

        return;

     label10:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have access");

        $r9 = new java.lang.SecurityException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label11:
        $r18 := @caughtexception;

     label12:
        exitmonitor r22;

     label13:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public java.lang.String addAutomaticZenRule(android.app.AutomaticZenRule)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.app.AutomaticZenRule r1;
        java.lang.String $r3, $r11;
        android.content.ComponentName $r5, $r13;
        android.net.Uri $r6;
        android.service.notification.ZenPolicy $r8;
        int $i0, $i1;
        com.android.server.notification.NotificationManagerService $r9;
        com.android.server.notification.ZenModeHelper $r10;
        java.lang.IllegalArgumentException $r12;
        java.lang.NullPointerException $r14;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.app.AutomaticZenRule;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "automaticZenRule is null");

        $r3 = virtualinvoke r1.<android.app.AutomaticZenRule: java.lang.String getName()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r3, "Name is null");

        $r5 = virtualinvoke r1.<android.app.AutomaticZenRule: android.content.ComponentName getOwner()>();

        if $r5 != null goto label2;

        $r13 = virtualinvoke r1.<android.app.AutomaticZenRule: android.content.ComponentName getConfigurationActivity()>();

        if $r13 == null goto label1;

        goto label2;

     label1:
        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("Rule must have a conditionproviderservice and/or configuration activity");

        throw $r14;

     label2:
        $r6 = virtualinvoke r1.<android.app.AutomaticZenRule: android.net.Uri getConditionId()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r6, "ConditionId is null");

        $r8 = virtualinvoke r1.<android.app.AutomaticZenRule: android.service.notification.ZenPolicy getZenPolicy()>();

        if $r8 == null goto label4;

        $i1 = virtualinvoke r1.<android.app.AutomaticZenRule: int getInterruptionFilter()>();

        if $i1 != 2 goto label3;

        goto label4;

     label3:
        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ZenPolicy is only applicable to INTERRUPTION_FILTER_PRIORITY filters");

        throw $r12;

     label4:
        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforcePolicyAccess(int,java.lang.String)>($i0, "addAutomaticZenRule");

        $r9 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r10 = $r9.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $r11 = virtualinvoke $r10.<com.android.server.notification.ZenModeHelper: java.lang.String addAutomaticZenRule(android.app.AutomaticZenRule,java.lang.String)>(r1, "addAutomaticZenRule");

        return $r11;
    }

    public void allowAssistantAdjustment(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r5;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$5200(com.android.server.notification.NotificationManagerService)>($r2);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r3);

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void allowAdjustmentType(java.lang.String)>(r1);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    public void applyAdjustmentFromAssistant(android.service.notification.INotificationListener, android.service.notification.Adjustment)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.service.notification.INotificationListener r1;
        android.service.notification.Adjustment r2;
        java.util.ArrayList $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.service.notification.INotificationListener;

        r2 := @parameter1: android.service.notification.Adjustment;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: void applyAdjustmentsFromAssistant(android.service.notification.INotificationListener,java.util.List)>(r1, $r4);

        return;
    }

    public void applyAdjustmentsFromAssistant(android.service.notification.INotificationListener, java.util.List)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        long l0;
        java.lang.Object r1, $r10, $r14;
        java.util.Iterator r2;
        android.service.notification.Adjustment r3;
        com.android.server.notification.NotificationManagerService $r4, $r5, $r8, $r11, $r15, $r17;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r6, $r16;
        boolean $z0, $z1, $z2, z3, z4;
        com.android.server.notification.RankingHandler $r9;
        android.util.ArrayMap $r12;
        java.lang.String $r13, $r21;
        int $i1, $i2;
        android.os.Bundle $r18, $r19;
        java.lang.String[] $r20;
        java.lang.Throwable $r22, $r23;
        android.service.notification.INotificationListener r24;
        java.util.List r25;
        com.android.server.notification.NotificationRecord r26;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r24 := @parameter0: android.service.notification.INotificationListener;

        r25 := @parameter1: java.util.List;

        z3 = 0;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = $r4.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label02:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r5);

        virtualinvoke $r6.<com.android.server.notification.NotificationManagerService$NotificationAssistants: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r24);

        r2 = interfaceinvoke r25.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.service.notification.Adjustment) $r10;

        $r11 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r12 = $r11.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r13 = virtualinvoke r3.<android.service.notification.Adjustment: java.lang.String getKey()>();

        $r14 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r13);

        r26 = (com.android.server.notification.NotificationRecord) $r14;

     label04:
        z4 = z3;

        if r26 == null goto label08;

        z4 = z3;

     label05:
        $r15 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r16 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r15);

        $i1 = virtualinvoke r26.<com.android.server.notification.NotificationRecord: int getUserId()>();

        $z1 = virtualinvoke $r16.<com.android.server.notification.NotificationManagerService$NotificationAssistants: boolean isSameUser(android.os.IInterface,int)>(r24, $i1);

        if $z1 == 0 goto label08;

        $r17 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$7100(com.android.server.notification.NotificationManagerService,com.android.server.notification.NotificationRecord,android.service.notification.Adjustment)>($r17, r26, r3);

        $r18 = virtualinvoke r3.<android.service.notification.Adjustment: android.os.Bundle getSignals()>();

        $z2 = virtualinvoke $r18.<android.os.Bundle: boolean containsKey(java.lang.String)>("key_importance");

        if $z2 == 0 goto label07;

        $r19 = virtualinvoke r3.<android.service.notification.Adjustment: android.os.Bundle getSignals()>();

        $i2 = virtualinvoke $r19.<android.os.Bundle: int getInt(java.lang.String)>("key_importance");

        if $i2 != 0 goto label07;

        $r20 = newarray (java.lang.String)[1];

        $r21 = virtualinvoke r26.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $r20[0] = $r21;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: void cancelNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[])>(r24, $r20);

     label06:
        z4 = z3;

        goto label08;

     label07:
        z4 = 1;

     label08:
        z3 = z4;

        goto label03;

     label09:
        exitmonitor r1;

     label10:
        if z3 == 0 goto label12;

     label11:
        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r9 = $r8.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHandler mRankingHandler>;

        interfaceinvoke $r9.<com.android.server.notification.RankingHandler: void requestSort()>();

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label13:
        $r22 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r22;

     label16:
        $r23 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r23;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label15 to label16 with label16;
    }

    public void applyEnqueuedAdjustmentFromAssistant(android.service.notification.INotificationListener, android.service.notification.Adjustment)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.service.notification.Adjustment r1;
        long l0;
        java.lang.Object r2, $r12;
        int i1, $i2, $i3, $i4, i5;
        com.android.server.notification.NotificationRecord r3;
        com.android.server.notification.NotificationManagerService $r4, $r5, $r8, $r10, $r17, $r19;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r6, $r18;
        java.util.ArrayList $r9, $r11;
        java.lang.String $r13, $r14;
        boolean $z1, $z2, $z3, z4;
        java.lang.Integer $r15, $r16;
        java.lang.Throwable $r20, $r21;
        android.service.notification.INotificationListener r22;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r22 := @parameter0: android.service.notification.INotificationListener;

        r1 := @parameter1: android.service.notification.Adjustment;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r2 = $r4.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r2;

     label02:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r5);

        virtualinvoke $r6.<com.android.server.notification.NotificationManagerService$NotificationAssistants: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r22);

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r9 = $r8.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        i1 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

     label03:
        i5 = 0;

     label04:
        z4 = 0;

        if i5 >= i1 goto label08;

     label05:
        $r10 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r11 = $r10.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r3 = (com.android.server.notification.NotificationRecord) $r12;

        $r13 = virtualinvoke r1.<android.service.notification.Adjustment: java.lang.String getKey()>();

        $r14 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r13, $r14);

        if $z1 == 0 goto label07;

        $i2 = virtualinvoke r1.<android.service.notification.Adjustment: int getUser()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i3 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: int getUserId()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r15, $r16);

        if $z2 == 0 goto label07;

        $r17 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r18 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r17);

        $i4 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: int getUserId()>();

        $z3 = virtualinvoke $r18.<com.android.server.notification.NotificationManagerService$NotificationAssistants: boolean isSameUser(android.os.IInterface,int)>(r22, $i4);

        if $z3 == 0 goto label07;

        $r19 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$7100(com.android.server.notification.NotificationManagerService,com.android.server.notification.NotificationRecord,android.service.notification.Adjustment)>($r19, r3, r1);

        virtualinvoke r3.<com.android.server.notification.NotificationRecord: void applyAdjustments()>();

        virtualinvoke r3.<com.android.server.notification.NotificationRecord: void calculateImportance()>();

     label06:
        z4 = 1;

        goto label08;

     label07:
        i5 = i5 + 1;

        goto label04;

     label08:
        if z4 != 0 goto label10;

     label09:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: void applyAdjustmentFromAssistant(android.service.notification.INotificationListener,android.service.notification.Adjustment)>(r22, r1);

     label10:
        exitmonitor r2;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label12:
        $r21 := @caughtexception;

     label13:
        exitmonitor r2;

     label14:
        throw $r21;

     label15:
        $r20 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label14 to label15 with label15;
    }

    public void applyRestore(byte[], int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0;
        com.android.server.notification.NotificationManagerService $r2, $r4, $r5;
        boolean $z0;
        java.io.ByteArrayInputStream $r3;
        java.lang.StringBuilder $r6, $r10;
        java.lang.String $r9, $r15, $r16, r20;
        java.nio.charset.Charset $r17;
        java.lang.Throwable $r18;
        byte[] r19;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r19 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r2);

        $z0 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z0 == 0 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("applyRestore u=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" payload=");

        if r19 == null goto label1;

        $r16 = new java.lang.String;

        $r17 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r16.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r19, $r17);

        r20 = $r16;

        goto label2;

     label1:
        r20 = null;

     label2:
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r15);

     label3:
        if r19 != null goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("applyRestore: no payload to restore for user ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r9);

        return;

     label4:
        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r19);

     label5:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService: void readPolicyXml(java.io.InputStream,boolean,int)>($r3, 1, i0);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

     label6:
        goto label8;

     label7:
        $r18 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "applyRestore: error reading payload", $r18);

     label8:
        return;

        catch java.lang.NumberFormatException from label5 to label6 with label7;
        catch org.xmlpull.v1.XmlPullParserException from label5 to label6 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public boolean areBubblesAllowed(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: int getBubblePreferenceForPackage(java.lang.String,int)>(r1, $i1);

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean areChannelsBypassingDnd()
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        com.android.server.notification.NotificationManagerService $r1;
        com.android.server.notification.PreferencesHelper $r2;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = $r1.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $z0 = virtualinvoke $r2.<com.android.server.notification.PreferencesHelper: boolean areChannelsBypassingDnd()>();

        return $z0;
    }

    public boolean areNotificationsEnabled(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: boolean areNotificationsEnabledForPackage(java.lang.String,int)>(r1, $i0);

        return $z0;
    }

    public boolean areNotificationsEnabledForPackage(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r10;
        int i0, $i1, $i2, $i3;
        android.content.Context r2;
        com.android.server.notification.NotificationManagerService $r4, $r6;
        com.android.server.notification.PreferencesHelper $r5;
        java.lang.StringBuilder $r7;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUIOrSamePackage(java.lang.String,java.lang.String)>(r1, "Caller not system or systemui or same package");

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        if $i1 == $i2 goto label1;

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r2 = virtualinvoke $r6.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("canNotifyAsPackage for uid ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS", $r10);

     label1:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = $r4.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i3 = virtualinvoke $r5.<com.android.server.notification.PreferencesHelper: int getImportance(java.lang.String,int)>(r1, i0);

        if $i3 == 0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    public boolean canNotifyAsPackage(java.lang.String, java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r13, r15;
        int i0, i1, $i2, $i3;
        boolean z0, $z1;
        com.android.server.notification.NotificationManagerService $r3, $r5, $r7, $r9;
        android.os.UserHandle $r4;
        android.content.pm.IPackageManager $r6;
        com.android.server.notification.PreferencesHelper $r8;
        java.lang.StringBuilder $r10;
        android.os.RemoteException $r14;
        android.content.Context r16;
        android.content.pm.ApplicationInfo r17;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r15 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4600(com.android.server.notification.NotificationManagerService,java.lang.String)>($r3, r15);

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r4 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i1);

        $i2 = virtualinvoke $r4.<android.os.UserHandle: int getIdentifier()>();

        if $i2 == i0 goto label1;

        $r9 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r16 = virtualinvoke $r9.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("canNotifyAsPackage for user ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS", $r13);

     label1:
        $z1 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = staticinvoke <com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager access$1300(com.android.server.notification.NotificationManagerService)>($r5);

        r17 = interfaceinvoke $r6.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 786432, i0);

     label3:
        if r17 == null goto label6;

     label4:
        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r8 = $r7.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i3 = r17.<android.content.pm.ApplicationInfo: int uid>;

        z0 = virtualinvoke $r8.<com.android.server.notification.PreferencesHelper: boolean isDelegateAllowed(java.lang.String,int,java.lang.String,int)>(r1, $i3, r15, i1);

     label5:
        return z0;

     label6:
        goto label8;

     label7:
        $r14 := @caughtexception;

     label8:
        return 0;

        catch android.os.RemoteException from label2 to label3 with label7;
        catch android.os.RemoteException from label4 to label5 with label7;
    }

    public boolean canShowBadge(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        com.android.server.notification.PreferencesHelper $r4;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r2);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $z0 = virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: boolean canShowBadge(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public void cancelAllNotifications(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        int $i0, $i1, $i2, $i3, i4, i5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r2, r1);

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i5 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i0, $i1, i4, 1, 0, "cancelAllNotifications", r1);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService: void cancelAllNotificationsInt(int,int,java.lang.String,java.lang.String,int,int,boolean,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($i2, $i3, r1, null, 0, 64, 1, i5, 9, null);

        return;
    }

    public void cancelNotificationFromListener(android.service.notification.INotificationListener, java.lang.String, java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r10, r16;
        int i0, i1, i2, $i4;
        long l3;
        java.lang.Object r2;
        com.android.server.notification.NotificationManagerService$NotificationListeners r3;
        com.android.server.notification.NotificationManagerService $r4, $r5;
        boolean $z0;
        android.content.ComponentName $r7;
        java.lang.Throwable $r11, $r12, $r13, $r14, r19, r20;
        android.service.notification.INotificationListener r15;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r17;
        java.lang.StringBuilder r18;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r15 := @parameter0: android.service.notification.INotificationListener;

        r16 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r2 = $r4.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r2;

     label02:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r3 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r5);

     label03:
        r17 = virtualinvoke r3.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r15);

        $z0 = virtualinvoke r17.<com.android.server.notification.ManagedServices$ManagedServiceInfo: boolean supportsProfiles()>();

        if $z0 == 0 goto label05;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring deprecated cancelNotification(pkg, tag, id) from ");

        $r7 = r17.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" use cancelNotification(key) instead.");

        $r10 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r10);

     label04:
        goto label06;

     label05:
        $i4 = r17.<com.android.server.notification.ManagedServices$ManagedServiceInfo: int userid>;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void cancelNotificationFromListenerLocked(com.android.server.notification.ManagedServices$ManagedServiceInfo,int,int,java.lang.String,java.lang.String,int,int)>(r17, i1, i2, r16, r1, i0, $i4);

     label06:
        exitmonitor r2;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return;

     label08:
        $r13 := @caughtexception;

        r19 = $r13;

     label09:
        exitmonitor r2;

     label10:
        throw r19;

     label11:
        $r12 := @caughtexception;

        r20 = $r12;

        goto label14;

     label12:
        $r14 := @caughtexception;

        r19 = $r14;

        goto label09;

     label13:
        $r11 := @caughtexception;

        r20 = $r11;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r20;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    public void cancelNotificationWithTag(java.lang.String, java.lang.String, java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r2, r3;
        int i0, i1, $i2, $i3;
        com.android.server.notification.NotificationManagerService $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService: void cancelNotificationInternal(java.lang.String,java.lang.String,int,int,java.lang.String,int,int)>(r1, r2, $i2, $i3, r3, i0, i1);

        return;
    }

    public void cancelNotificationsFromListener(android.service.notification.INotificationListener, java.lang.String[])
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, i1, i3, i4, $i5, $i6, i7, $i8;
        long l2;
        java.lang.Object r1, $r9;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r5, $r6, $r11;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r4;
        boolean $z0, $z1;
        java.lang.String $r7, $r16, $r26, $r28;
        android.util.ArrayMap $r8;
        android.service.notification.StatusBarNotification $r10, $r25, $r27, $r29;
        com.android.server.notification.ManagedServices$UserProfiles $r12;
        android.os.IInterface $r14;
        java.lang.Throwable $r17, $r18;
        android.service.notification.INotificationListener r19;
        java.lang.String[] r20;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r21;
        com.android.server.notification.NotificationRecord r22;
        java.lang.SecurityException r23;
        java.lang.StringBuilder r24;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r19 := @parameter0: android.service.notification.INotificationListener;

        r20 := @parameter1: java.lang.String[];

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = $r2.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label02:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r3);

        r21 = virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r19);

     label03:
        if r20 == null goto label17;

     label04:
        i3 = lengthof r20;

     label05:
        i7 = 0;

     label06:
        if i7 >= i3 goto label16;

     label07:
        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r8 = $r6.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r7 = r20[i7];

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r7);

        r22 = (com.android.server.notification.NotificationRecord) $r9;

     label08:
        if r22 != null goto label09;

        goto label15;

     label09:
        $r10 = virtualinvoke r22.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        i4 = virtualinvoke $r10.<android.service.notification.StatusBarNotification: int getUserId()>();

        $i6 = r21.<com.android.server.notification.ManagedServices$ManagedServiceInfo: int userid>;

        if i4 == $i6 goto label14;

     label10:
        if i4 == -1 goto label14;

     label11:
        $r11 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r12 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles access$2500(com.android.server.notification.NotificationManagerService)>($r11);

        $z1 = virtualinvoke $r12.<com.android.server.notification.ManagedServices$UserProfiles: boolean isCurrentProfile(int)>(i4);

        if $z1 == 0 goto label13;

     label12:
        goto label14;

     label13:
        r23 = new java.lang.SecurityException;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disallowed call from listener: ");

        $r14 = r21.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.os.IInterface service>;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r23.<java.lang.SecurityException: void <init>(java.lang.String)>($r16);

        throw r23;

     label14:
        $r25 = virtualinvoke r22.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r26 = virtualinvoke $r25.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r27 = virtualinvoke r22.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r28 = virtualinvoke $r27.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        $r29 = virtualinvoke r22.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i8 = virtualinvoke $r29.<android.service.notification.StatusBarNotification: int getId()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void cancelNotificationFromListenerLocked(com.android.server.notification.ManagedServices$ManagedServiceInfo,int,int,java.lang.String,java.lang.String,int,int)>(r21, i0, i1, $r26, $r28, $i8, i4);

     label15:
        i7 = i7 + 1;

        goto label06;

     label16:
        goto label18;

     label17:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i5 = r21.<com.android.server.notification.ManagedServices$ManagedServiceInfo: int userid>;

        $z0 = virtualinvoke r21.<com.android.server.notification.ManagedServices$ManagedServiceInfo: boolean supportsProfiles()>();

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService: void cancelAllLocked(int,int,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo,boolean)>(i0, i1, $i5, 11, r21, $z0);

     label18:
        exitmonitor r1;

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label20:
        $r18 := @caughtexception;

     label21:
        exitmonitor r1;

     label22:
        throw $r18;

     label23:
        $r17 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label02 to label03 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
        catch java.lang.Throwable from label22 to label23 with label23;
    }

    public void cancelToast(java.lang.String, android.os.IBinder)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.os.IBinder r1;
        long l0;
        int i1;
        java.lang.StringBuilder r2, $r3, $r9;
        java.lang.String $r8, $r14, $r21, r25;
        com.android.server.notification.NotificationManagerService $r15, $r16, $r22;
        java.lang.Throwable $r23, $r24;
        java.util.ArrayList r27;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r25 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IBinder;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cancelToast pkg=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("NotificationService", $r8);

        if r25 == null goto label17;

        if r1 != null goto label01;

        goto label17;

     label01:
        $r15 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r27 = $r15.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        entermonitor r27;

     label02:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r16 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        i1 = virtualinvoke $r16.<com.android.server.notification.NotificationManagerService: int indexOfToastLocked(java.lang.String,android.os.IBinder)>(r25, r1);

     label04:
        if i1 < 0 goto label07;

     label05:
        $r22 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r22.<com.android.server.notification.NotificationManagerService: void cancelToastLocked(int)>(i1);

     label06:
        goto label08;

     label07:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Toast already cancelled. pkg=");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token=");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r21);

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label09:
        exitmonitor r27;

     label10:
        return;

     label11:
        $r23 := @caughtexception;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label13:
        throw $r23;

     label14:
        $r24 := @caughtexception;

     label15:
        exitmonitor r27;

     label16:
        throw $r24;

     label17:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not cancelling notification. pkg=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r14);

        return;

        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label13 to label14 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void clearData(java.lang.String, int, boolean) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r35, $r42, $r51;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13, i14, $i15;
        boolean z0, z1, $z2, $z3, $z4, z5, z6;
        java.lang.Boolean r2, r3;
        com.android.server.notification.NotificationManagerService $r4, $r5, $r6, $r8, $r12, $r18, $r20, $r21, $r27, $r29, $r36, $r45;
        com.android.server.notification.ConditionProviders $r7, $r30, $r46;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r9;
        java.lang.Object $r10, $r14, $r16, $r31, $r33, $r38, $r40, $r43, $r47, $r49, $r52, $r55, $r58;
        java.util.ArrayList $r11, $r15, $r17, $r32, $r39, $r44, $r48, $r53, $r56, $r59;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r13, $r37;
        com.android.server.notification.SnoozeHelper $r19;
        android.content.Context $r22;
        android.content.Intent $r23, $r24, $r25;
        android.os.UserHandle $r26;
        com.android.server.notification.PreferencesHelper $r28;
        android.content.ComponentName $r34, $r41, $r50;
        android.util.ArrayMap r54, r57;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r4);

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i2 = staticinvoke <com.android.server.notification.NotificationManagerService: int access$2100()>();

        $i3 = staticinvoke <com.android.server.notification.NotificationManagerService: int access$2200()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService: void cancelAllNotificationsInt(int,int,java.lang.String,java.lang.String,int,int,boolean,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($i2, $i3, r1, null, 0, 0, 1, $i5, 17, null);

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r7 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)>($r6);

        z1 = virtualinvoke $r7.<com.android.server.notification.ConditionProviders: boolean resetPackage(java.lang.String,int)>(r1, i1);

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r9 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r8);

        r54 = virtualinvoke $r9.<com.android.server.notification.NotificationManagerService$NotificationListeners: android.util.ArrayMap resetComponents(java.lang.String,int)>(r1, i1);

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r10 = virtualinvoke r54.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        $r11 = (java.util.ArrayList) $r10;

        i11 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        if i11 > 0 goto label02;

        $r52 = virtualinvoke r54.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        $r53 = (java.util.ArrayList) $r52;

        $i10 = virtualinvoke $r53.<java.util.ArrayList: int size()>();

        if $i10 <= 0 goto label01;

        goto label02;

     label01:
        z5 = 0;

        goto label03;

     label02:
        z5 = 1;

     label03:
        i12 = 0;

     label04:
        $r55 = virtualinvoke r54.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        $r56 = (java.util.ArrayList) $r55;

        $i13 = virtualinvoke $r56.<java.util.ArrayList: int size()>();

        if i12 >= $i13 goto label05;

        $r45 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r46 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)>($r45);

        $r47 = virtualinvoke r54.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        $r48 = (java.util.ArrayList) $r47;

        $r49 = virtualinvoke $r48.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        $r50 = (android.content.ComponentName) $r49;

        $r51 = virtualinvoke $r50.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke $r46.<com.android.server.notification.ConditionProviders: void setPackageOrComponentEnabled(java.lang.String,int,boolean,boolean)>($r51, i1, 0, 1);

        i12 = i12 + 1;

        goto label04;

     label05:
        $r12 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r13 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r12);

        r57 = virtualinvoke $r13.<com.android.server.notification.NotificationManagerService$NotificationAssistants: android.util.ArrayMap resetComponents(java.lang.String,int)>(r1, i1);

        $r14 = virtualinvoke r57.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        $r15 = (java.util.ArrayList) $r14;

        $i6 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if $i6 > 0 goto label07;

        $r43 = virtualinvoke r57.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        $r44 = (java.util.ArrayList) $r43;

        $i9 = virtualinvoke $r44.<java.util.ArrayList: int size()>();

        if $i9 <= 0 goto label06;

        goto label07;

     label06:
        z6 = 0;

        goto label08;

     label07:
        z6 = 1;

     label08:
        i14 = 1;

     label09:
        $r58 = virtualinvoke r57.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        $r59 = (java.util.ArrayList) $r58;

        $i15 = virtualinvoke $r59.<java.util.ArrayList: int size()>();

        if i14 >= $i15 goto label10;

        $r36 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r37 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r36);

        $r38 = virtualinvoke r57.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        $r39 = (java.util.ArrayList) $r38;

        $r40 = virtualinvoke $r39.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $r41 = (android.content.ComponentName) $r40;

        $r42 = virtualinvoke $r41.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke $r37.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void setPackageOrComponentEnabled(java.lang.String,int,boolean,boolean)>($r42, i1, 1, 0);

        i14 = i14 + 1;

        goto label09;

     label10:
        $r16 = virtualinvoke r57.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        $r17 = (java.util.ArrayList) $r16;

        $i7 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        if $i7 <= 0 goto label11;

        $r29 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r30 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)>($r29);

        $r31 = virtualinvoke r57.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        $r32 = (java.util.ArrayList) $r31;

        $r33 = virtualinvoke $r32.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r34 = (android.content.ComponentName) $r33;

        $r35 = virtualinvoke $r34.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke $r30.<com.android.server.notification.ConditionProviders: void setPackageOrComponentEnabled(java.lang.String,int,boolean,boolean)>($r35, i1, 0, 1);

     label11:
        $r18 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r19 = $r18.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper>;

        $i8 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke $r19.<com.android.server.notification.SnoozeHelper: void clearData(int,java.lang.String)>($i8, r1);

        if z0 != 0 goto label12;

        $r27 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r28 = $r27.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r28.<com.android.server.notification.PreferencesHelper: void clearData(java.lang.String,int)>(r1, i0);

        goto label12;

     label12:
        $z2 = z1 | 0;

        $z3 = $z2 | z5;

        $z4 = $z3 | z6;

        if $z4 == 0 goto label13;

        $r21 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r22 = virtualinvoke $r21.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r23 = new android.content.Intent;

        specialinvoke $r23.<android.content.Intent: void <init>(java.lang.String)>("android.app.action.NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED");

        $r24 = virtualinvoke $r23.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        $r26 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i1);

        virtualinvoke $r22.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r25, $r26, null);

     label13:
        $r20 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r20.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    public void clearRequestedListenerHints(android.service.notification.INotificationListener)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        long l0;
        java.lang.Object r1;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r5, $r6, $r7;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r4;
        java.lang.Throwable $r8, $r9;
        android.service.notification.INotificationListener r10;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r11;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r10 := @parameter0: android.service.notification.INotificationListener;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = $r2.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label2:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r3);

        r11 = virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r10);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: boolean access$5500(com.android.server.notification.NotificationManagerService,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($r5, r11);

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$5600(com.android.server.notification.NotificationManagerService)>($r6);

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$5700(com.android.server.notification.NotificationManagerService)>($r7);

        exitmonitor r1;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r9;

     label7:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void createConversationNotificationChannelForPackage(java.lang.String, int, java.lang.String, android.app.NotificationChannel, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r3, $r7, r14, r15;
        int i0;
        android.app.NotificationChannel r2;
        java.lang.Object[] $r6;
        android.content.pm.ParceledListSlice $r8;
        android.app.NotificationChannel[] $r9;
        java.util.List $r10;
        com.android.server.notification.NotificationManagerService $r11, $r13;
        com.android.server.notification.RankingHandler $r12;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r14 := @parameter2: java.lang.String;

        r2 := @parameter3: android.app.NotificationChannel;

        r3 := @parameter4: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("only system can call this");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        r15 = virtualinvoke r2.<android.app.NotificationChannel: java.lang.String getId()>();

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r15;

        $r6[1] = r3;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%1$s : %2$s", $r6);

        virtualinvoke r2.<android.app.NotificationChannel: void setId(java.lang.String)>($r7);

        virtualinvoke r2.<android.app.NotificationChannel: void setConversationId(java.lang.String,java.lang.String)>(r15, r3);

        $r8 = new android.content.pm.ParceledListSlice;

        $r9 = newarray (android.app.NotificationChannel)[1];

        $r9[0] = r2;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        specialinvoke $r8.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>($r10);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void createNotificationChannelsImpl(java.lang.String,int,android.content.pm.ParceledListSlice)>(r1, i0, $r8);

        $r11 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r12 = $r11.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHandler mRankingHandler>;

        interfaceinvoke $r12.<com.android.server.notification.RankingHandler: void requestSort()>();

        $r13 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r13.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    public void createNotificationChannelGroups(java.lang.String, android.content.pm.ParceledListSlice) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        java.util.List r2;
        int i0, $i1, i2;
        com.android.server.notification.NotificationManagerService $r3, $r4, $r6;
        java.lang.Object $r5;
        android.content.pm.ParceledListSlice r7;
        android.app.NotificationChannelGroup r8;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: android.content.pm.ParceledListSlice;

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r3, r1);

        r2 = virtualinvoke r7.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r8 = (android.app.NotificationChannelGroup) $r5;

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4700(com.android.server.notification.NotificationManagerService,java.lang.String,int,android.app.NotificationChannelGroup,boolean,boolean)>($r6, r1, $i1, r8, 1, 0);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    public void createNotificationChannels(java.lang.String, android.content.pm.ParceledListSlice)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        android.content.pm.ParceledListSlice r2;
        com.android.server.notification.NotificationManagerService $r3;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.ParceledListSlice;

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r3, r1);

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void createNotificationChannelsImpl(java.lang.String,int,android.content.pm.ParceledListSlice)>(r1, $i0, r2);

        return;
    }

    public void createNotificationChannelsForPackage(java.lang.String, int, android.content.pm.ParceledListSlice)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        android.content.pm.ParceledListSlice r2;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.ParceledListSlice;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("only system can call this");

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void createNotificationChannelsImpl(java.lang.String,int,android.content.pm.ParceledListSlice)>(r1, i0, r2);

        return;
    }

    public void deleteConversationNotificationChannels(java.lang.String, int, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r9, $r12, $r18, r20;
        int i0, i1, $i2, $i3, $i4;
        android.app.NotificationChannel r2, $r19;
        com.android.server.notification.NotificationManagerService $r3, $r4, $r6, $r8, $r10, $r13, $r16;
        com.android.server.notification.PreferencesHelper $r5, $r11, $r17;
        boolean $z0, $z1;
        java.lang.Object $r7;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r14;
        android.os.UserHandle $r15;
        java.util.List r21;
        java.util.Iterator r22;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r20 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r3);

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = $r4.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        r21 = virtualinvoke $r5.<com.android.server.notification.PreferencesHelper: java.util.List getNotificationChannelsByConversationId(java.lang.String,int,java.lang.String)>(r1, i0, r20);

        $z0 = interfaceinvoke r21.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        r22 = interfaceinvoke r21.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.app.NotificationChannel) $r7;

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i2 = staticinvoke <com.android.server.notification.NotificationManagerService: int access$2100()>();

        $i3 = staticinvoke <com.android.server.notification.NotificationManagerService: int access$2200()>();

        $r9 = virtualinvoke r2.<android.app.NotificationChannel: java.lang.String getId()>();

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        virtualinvoke $r8.<com.android.server.notification.NotificationManagerService: void cancelAllNotificationsInt(int,int,java.lang.String,java.lang.String,int,int,boolean,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($i2, $i3, r1, $r9, 0, 0, 1, $i4, 17, null);

        $r10 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r11 = $r10.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r12 = virtualinvoke r2.<android.app.NotificationChannel: java.lang.String getId()>();

        virtualinvoke $r11.<com.android.server.notification.PreferencesHelper: void deleteNotificationChannel(java.lang.String,int,java.lang.String)>(r1, i1, $r12);

        $r13 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r14 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r13);

        $r15 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i1);

        $r16 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r17 = $r16.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r18 = virtualinvoke r2.<android.app.NotificationChannel: java.lang.String getId()>();

        $r19 = virtualinvoke $r17.<com.android.server.notification.PreferencesHelper: android.app.NotificationChannel getNotificationChannel(java.lang.String,int,java.lang.String,boolean)>(r1, i1, $r18, 1);

        virtualinvoke $r14.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyNotificationChannelChanged(java.lang.String,android.os.UserHandle,android.app.NotificationChannel,int)>(r1, $r15, $r19, 3);

        goto label1;

     label2:
        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r6.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

     label3:
        return;
    }

    public void deleteNotificationChannel(java.lang.String, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r2, $r4;
        int i0, $i1, $i2, $i3;
        com.android.server.notification.NotificationManagerService $r3, $r6, $r7, $r9, $r12, $r15;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        com.android.server.notification.PreferencesHelper $r8, $r13;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r10;
        android.os.UserHandle $r11;
        android.app.NotificationChannel $r14;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r3, r1);

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r4 = "miscellaneous";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i1 = staticinvoke <com.android.server.notification.NotificationManagerService: int access$2100()>();

        $i2 = staticinvoke <com.android.server.notification.NotificationManagerService: int access$2200()>();

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke $r6.<com.android.server.notification.NotificationManagerService: void cancelAllNotificationsInt(int,int,java.lang.String,java.lang.String,int,int,boolean,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($i1, $i2, r1, r2, 0, 0, 1, $i3, 17, null);

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r8 = $r7.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r8.<com.android.server.notification.PreferencesHelper: void deleteNotificationChannel(java.lang.String,int,java.lang.String)>(r1, i0, r2);

        $r9 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r10 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r9);

        $r11 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        $r12 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r13 = $r12.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r14 = virtualinvoke $r13.<com.android.server.notification.PreferencesHelper: android.app.NotificationChannel getNotificationChannel(java.lang.String,int,java.lang.String,boolean)>(r1, i0, r2, 1);

        virtualinvoke $r10.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyNotificationChannelChanged(java.lang.String,android.os.UserHandle,android.app.NotificationChannel,int)>(r1, $r11, $r14, 3);

        $r15 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r15.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot delete default channel");

        throw $r5;
    }

    public void deleteNotificationChannelGroup(java.lang.String, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r15, r19;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        android.app.NotificationChannelGroup r2;
        android.app.NotificationChannel r3;
        com.android.server.notification.NotificationManagerService $r4, $r5, $r7, $r9, $r12, $r14, $r16;
        com.android.server.notification.PreferencesHelper $r6, $r8;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r10, $r17;
        android.os.UserHandle $r11, $r18;
        java.lang.Object $r13;
        java.util.List r20;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        r19 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r4, r1);

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = $r5.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        r2 = virtualinvoke $r6.<com.android.server.notification.PreferencesHelper: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String,java.lang.String,int)>(r19, r1, i0);

        if r2 == null goto label3;

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r8 = $r7.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        r20 = virtualinvoke $r8.<com.android.server.notification.PreferencesHelper: java.util.List deleteNotificationChannelGroup(java.lang.String,int,java.lang.String)>(r1, i0, r19);

        i6 = 0;

     label1:
        $i1 = interfaceinvoke r20.<java.util.List: int size()>();

        if i6 >= $i1 goto label2;

        $r13 = interfaceinvoke r20.<java.util.List: java.lang.Object get(int)>(i6);

        r3 = (android.app.NotificationChannel) $r13;

        $r14 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i2 = staticinvoke <com.android.server.notification.NotificationManagerService: int access$2100()>();

        $i3 = staticinvoke <com.android.server.notification.NotificationManagerService: int access$2200()>();

        $r15 = virtualinvoke r3.<android.app.NotificationChannel: java.lang.String getId()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        virtualinvoke $r14.<com.android.server.notification.NotificationManagerService: void cancelAllNotificationsInt(int,int,java.lang.String,java.lang.String,int,int,boolean,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($i2, $i3, r1, $r15, 0, 0, 1, $i5, 17, null);

        $r16 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r17 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r16);

        $r18 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        virtualinvoke $r17.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyNotificationChannelChanged(java.lang.String,android.os.UserHandle,android.app.NotificationChannel,int)>(r1, $r18, r3, 3);

        i6 = i6 + 1;

        goto label1;

     label2:
        $r9 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r10 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r9);

        $r11 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        virtualinvoke $r10.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyNotificationChannelGroupChanged(java.lang.String,android.os.UserHandle,android.app.NotificationChannelGroup,int)>(r1, $r11, r2, 3);

        $r12 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r12.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

     label3:
        return;
    }

    public void deleteNotificationHistoryItem(java.lang.String, int, long)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        long l1;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        com.android.server.notification.NotificationHistoryManager $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r2);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationHistoryManager access$300(com.android.server.notification.NotificationManagerService)>($r3);

        virtualinvoke $r4.<com.android.server.notification.NotificationHistoryManager: void deleteNotificationHistoryItem(java.lang.String,int,long)>(r1, i0, l1);

        return;
    }

    public void disallowAssistantAdjustment(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r5;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$5200(com.android.server.notification.NotificationManagerService)>($r2);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r3);

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void disallowAdjustmentType(java.lang.String)>(r1);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.io.PrintWriter r1;
        long l0;
        com.android.server.notification.NotificationManagerService $r2, $r4, $r5, $r6, $r7, $r8;
        android.content.Context $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Throwable $r9;
        java.io.FileDescriptor r10;
        java.lang.String[] r11;
        com.android.server.notification.NotificationManagerService$DumpFilter r12;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r10 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r11 := @parameter2: java.lang.String[];

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpAndUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r3, "NotificationService", r1);

        if $z0 != 0 goto label01;

        return;

     label01:
        r12 = staticinvoke <com.android.server.notification.NotificationManagerService$DumpFilter: com.android.server.notification.NotificationManagerService$DumpFilter parseFromArguments(java.lang.String[])>(r11);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $z1 = r12.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean stats>;

        if $z1 == 0 goto label04;

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$6300(com.android.server.notification.NotificationManagerService,java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>($r8, r1, r12);

     label03:
        goto label11;

     label04:
        $z2 = r12.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean rvStats>;

        if $z2 == 0 goto label06;

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$6400(com.android.server.notification.NotificationManagerService,java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>($r7, r1, r12);

     label05:
        goto label11;

     label06:
        $z3 = r12.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean proto>;

        if $z3 == 0 goto label08;

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$6500(com.android.server.notification.NotificationManagerService,java.io.FileDescriptor,com.android.server.notification.NotificationManagerService$DumpFilter)>($r6, r10, r12);

     label07:
        goto label11;

     label08:
        $z4 = r12.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean criticalPriority>;

        if $z4 == 0 goto label10;

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$6600(com.android.server.notification.NotificationManagerService,java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>($r5, r1, r12);

     label09:
        goto label11;

     label10:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService: void dumpImpl(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(r1, r12);

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label12:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public void enqueueNotificationWithTag(java.lang.String, java.lang.String, java.lang.String, int, android.app.Notification, int) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r2, r3;
        int i0, i1, $i2, $i3;
        android.app.Notification r4;
        com.android.server.notification.NotificationManagerService $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: android.app.Notification;

        i1 := @parameter5: int;

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService: void enqueueNotificationInternal(java.lang.String,java.lang.String,int,int,java.lang.String,int,android.app.Notification,int)>(r1, r2, $i2, $i3, r3, i0, r4, i1);

        return;
    }

    public void enqueueTextToast(java.lang.String, android.os.IBinder, java.lang.CharSequence, int, int, android.app.ITransientNotificationCallback)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        android.os.IBinder r2;
        java.lang.CharSequence r3;
        int i0, i1;
        android.app.ITransientNotificationCallback r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: java.lang.CharSequence;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: android.app.ITransientNotificationCallback;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enqueueToast(java.lang.String,android.os.IBinder,java.lang.CharSequence,android.app.ITransientNotification,int,int,android.app.ITransientNotificationCallback)>(r1, r2, r3, null, i0, i1, r4);

        return;
    }

    public void enqueueToast(java.lang.String, android.os.IBinder, android.app.ITransientNotification, int, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        android.os.IBinder r2;
        android.app.ITransientNotification r3;
        int i0, i1;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.app.ITransientNotification;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enqueueToast(java.lang.String,android.os.IBinder,java.lang.CharSequence,android.app.ITransientNotification,int,int,android.app.ITransientNotificationCallback)>(r1, r2, null, r3, i0, i1, null);

        return;
    }

    public void finishToken(java.lang.String, android.os.IBinder)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.os.IBinder r1;
        java.util.ArrayList r2, $r12;
        long l0;
        int i1, $i3;
        java.lang.StringBuilder r3;
        com.android.server.notification.NotificationManagerService $r4, $r5, $r11, $r15;
        java.lang.String $r10, r18;
        java.lang.Object $r13;
        android.os.Binder $r14;
        java.lang.Throwable $r16, $r17;
        com.android.server.notification.toast.ToastRecord r19;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r18 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IBinder;

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r2 = $r4.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        entermonitor r2;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        i1 = virtualinvoke $r5.<com.android.server.notification.NotificationManagerService: int indexOfToastLocked(java.lang.String,android.os.IBinder)>(r18, r1);

     label03:
        if i1 < 0 goto label06;

     label04:
        $r11 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r12 = $r11.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r19 = (com.android.server.notification.toast.ToastRecord) $r13;

        $r15 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r14 = r19.<com.android.server.notification.toast.ToastRecord: android.os.Binder windowToken>;

        $i3 = r19.<com.android.server.notification.toast.ToastRecord: int displayId>;

        virtualinvoke $r15.<com.android.server.notification.NotificationManagerService: void finishWindowTokenLocked(android.os.IBinder,int)>($r14, $i3);

     label05:
        goto label07;

     label06:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Toast already killed. pkg=");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token=");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r10);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label08:
        exitmonitor r2;

     label09:
        return;

     label10:
        $r16 := @caughtexception;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label12:
        throw $r16;

     label13:
        $r17 := @caughtexception;

     label14:
        exitmonitor r2;

     label15:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        android.service.notification.StatusBarNotification[] $r2;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: android.service.notification.StatusBarNotification[] getActiveNotificationsWithAttribution(java.lang.String,java.lang.String)>(r1, null);

        return $r2;
    }

    public android.content.pm.ParceledListSlice getActiveNotificationsFromListener(android.service.notification.INotificationListener, java.lang.String[], int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String[] r1;
        int i0, i1, i2;
        java.lang.Object r2, $r12, $r17;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r3;
        java.util.ArrayList r4, $r9, $r11;
        com.android.server.notification.NotificationManagerService $r5, $r6, $r8, $r10, $r13, $r14;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r7;
        boolean $z0, z2;
        java.lang.String $r15;
        android.util.ArrayMap $r16;
        java.lang.Throwable $r18;
        android.service.notification.INotificationListener r19;
        com.android.server.notification.NotificationRecord r20;
        android.service.notification.StatusBarNotification r21;
        android.content.pm.ParceledListSlice r22;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r19 := @parameter0: android.service.notification.INotificationListener;

        r1 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r2 = $r5.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r2;

     label01:
        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r7 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r6);

        r3 = virtualinvoke $r7.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r19);

     label02:
        if r1 == null goto label03;

        z2 = 1;

        goto label04;

     label03:
        z2 = 0;

     label04:
        if z2 == 0 goto label07;

     label05:
        i1 = lengthof r1;

     label06:
        goto label08;

     label07:
        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r9 = $r8.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i1 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

     label08:
        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>(i1);

     label09:
        i2 = 0;

     label10:
        if i2 >= i1 goto label21;

        if z2 == 0 goto label13;

     label11:
        $r14 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r16 = $r14.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r15 = r1[i2];

        $r17 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r15);

        r20 = (com.android.server.notification.NotificationRecord) $r17;

     label12:
        goto label14;

     label13:
        $r10 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r11 = $r10.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r20 = (com.android.server.notification.NotificationRecord) $r12;

     label14:
        if r20 != null goto label15;

        goto label20;

     label15:
        r21 = virtualinvoke r20.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r13 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $z0 = staticinvoke <com.android.server.notification.NotificationManagerService: boolean access$5400(com.android.server.notification.NotificationManagerService,android.service.notification.StatusBarNotification,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($r13, r21, r3);

        if $z0 != 0 goto label17;

     label16:
        goto label20;

     label17:
        if i0 != 0 goto label18;

        goto label19;

     label18:
        r21 = virtualinvoke r21.<android.service.notification.StatusBarNotification: android.service.notification.StatusBarNotification cloneLight()>();

     label19:
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r21);

     label20:
        i2 = i2 + 1;

        goto label10;

     label21:
        r22 = new android.content.pm.ParceledListSlice;

        specialinvoke r22.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r4);

        exitmonitor r2;

     label22:
        return r22;

     label23:
        $r18 := @caughtexception;

     label24:
        exitmonitor r2;

     label25:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    public android.service.notification.StatusBarNotification[] getActiveNotificationsWithAttribution(java.lang.String, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, $i1, $i2, i3, i4;
        com.android.server.notification.NotificationManagerService $r1, $r3, $r5, $r6, $r8, $r10;
        android.content.Context $r2;
        android.app.AppOpsManager $r4;
        java.util.ArrayList $r7, $r9, $r11;
        java.lang.Object $r12, r19;
        com.android.server.notification.NotificationRecord $r13;
        android.service.notification.StatusBarNotification $r14;
        java.lang.Throwable $r15;
        java.lang.String r16, r17;
        android.service.notification.StatusBarNotification[] r18;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r16 := @parameter0: java.lang.String;

        r17 := @parameter1: java.lang.String;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_NOTIFICATIONS", "NotificationManagerService.getActiveNotifications");

        r18 = null;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: android.app.AppOpsManager access$5300(com.android.server.notification.NotificationManagerService)>($r3);

        $i1 = virtualinvoke $r4.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String,java.lang.String,java.lang.String)>(25, i3, r16, r17, null);

        if $i1 != 0 goto label11;

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r19 = $r5.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r19;

     label01:
        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r7 = $r6.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        r18 = newarray (android.service.notification.StatusBarNotification)[$i2];

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r9 = $r8.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

     label02:
        i4 = 0;

     label03:
        if i4 >= i0 goto label06;

     label04:
        $r10 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r11 = $r10.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r13 = (com.android.server.notification.NotificationRecord) $r12;

        $r14 = virtualinvoke $r13.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r18[i4] = $r14;

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        exitmonitor r19;

     label07:
        goto label11;

     label08:
        $r15 := @caughtexception;

     label09:
        exitmonitor r19;

     label10:
        throw $r15;

     label11:
        return r18;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public java.util.List getAllowedAssistantAdjustments(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r4, $r7;
        boolean $z0, $z1;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r5, $r8;
        java.util.List $r6;
        int $i0;
        java.lang.SecurityException $r9;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r2, r1);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $z0 = virtualinvoke $r3.<com.android.server.notification.NotificationManagerService: boolean isCallerSystemOrPhone()>();

        if $z0 != 0 goto label2;

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r8 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r7);

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $z1 = virtualinvoke $r8.<com.android.server.notification.NotificationManagerService$NotificationAssistants: boolean isPackageAllowed(java.lang.String,int)>(r1, $i0);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>("Not currently an assistant");

        throw $r9;

     label2:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r4);

        $r6 = virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$NotificationAssistants: java.util.List getAllowedAssistantAdjustments()>();

        return $r6;
    }

    public android.content.ComponentName getAllowedNotificationAssistant()
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.os.UserHandle $r1;
        int $i0;
        android.content.ComponentName $r2;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        $r1 = staticinvoke <com.android.server.notification.NotificationManagerService$10: android.os.UserHandle getCallingUserHandle()>();

        $i0 = virtualinvoke $r1.<android.os.UserHandle: int getIdentifier()>();

        $r2 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: android.content.ComponentName getAllowedNotificationAssistantForUser(int)>($i0);

        return $r2;
    }

    public android.content.ComponentName getAllowedNotificationAssistantForUser(int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, $i1, $i2;
        java.util.List r1;
        com.android.server.notification.NotificationManagerService $r3, $r4;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r5;
        java.lang.StringBuilder $r6;
        java.lang.IllegalStateException $r9;
        java.lang.String $r10;
        java.lang.Object $r11;
        android.content.ComponentName $r12;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$5200(com.android.server.notification.NotificationManagerService)>($r3);

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r4);

        r1 = virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$NotificationAssistants: java.util.List getAllowedComponents(int)>(i0);

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 > 1 goto label1;

        $r11 = staticinvoke <com.android.internal.util.CollectionUtils: java.lang.Object firstOrNull(java.util.List)>(r1);

        $r12 = (android.content.ComponentName) $r11;

        return $r12;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("At most one NotificationAssistant: ");

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public android.content.pm.ParceledListSlice getAppActiveNotifications(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11;
        java.lang.Object r1, $r19, $r24, $r31;
        java.util.Iterator r2;
        com.android.server.notification.NotificationManagerService $r3, $r4, $r5, $r7, $r9, $r11, $r14, $r17, $r29;
        java.util.ArrayList $r6, $r8, $r10, $r15, $r18, $r30, r42;
        com.android.server.notification.SnoozeHelper $r12;
        java.util.Collection $r13, $r16;
        boolean $z0;
        com.android.server.notification.NotificationRecord $r20, $r25, $r32;
        android.service.notification.StatusBarNotification $r21, $r26, $r33, r39, r40, r41;
        java.lang.String $r22, $r27, $r34, r37;
        java.lang.Throwable $r36;
        android.util.ArrayMap r38;
        android.content.pm.ParceledListSlice r43;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r37 := @parameter0: java.lang.String;

        i7 := @parameter1: int;

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r3, r37);

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i1, $i2, i7, 1, 0, "getAppActiveNotifications", r37);

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = $r4.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label01:
        r38 = new android.util.ArrayMap;

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = $r5.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $i3 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r8 = $r7.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        $i4 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $i5 = $i3 + $i4;

        specialinvoke r38.<android.util.ArrayMap: void <init>(int)>($i5);

        $r9 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r10 = $r9.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i8 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

     label02:
        i9 = 0;

     label03:
        if i9 >= i8 goto label08;

     label04:
        $r29 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r30 = $r29.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r31 = virtualinvoke $r30.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r32 = (com.android.server.notification.NotificationRecord) $r31;

        $r33 = virtualinvoke $r32.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r39 = specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: android.service.notification.StatusBarNotification sanitizeSbn(java.lang.String,int,android.service.notification.StatusBarNotification)>(r37, i0, $r33);

     label05:
        if r39 == null goto label07;

     label06:
        $r34 = virtualinvoke r39.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        virtualinvoke r38.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r39);

     label07:
        i9 = i9 + 1;

        goto label03;

     label08:
        $r11 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r12 = $r11.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper>;

        $r13 = virtualinvoke $r12.<com.android.server.notification.SnoozeHelper: java.util.Collection getSnoozed(int,java.lang.String)>(i0, r37);

        r2 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r24 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r25 = (com.android.server.notification.NotificationRecord) $r24;

        $r26 = virtualinvoke $r25.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r40 = specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: android.service.notification.StatusBarNotification sanitizeSbn(java.lang.String,int,android.service.notification.StatusBarNotification)>(r37, i0, $r26);

     label10:
        if r40 == null goto label12;

     label11:
        $r27 = virtualinvoke r40.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        virtualinvoke r38.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r40);

     label12:
        goto label09;

     label13:
        $r14 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r15 = $r14.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        i10 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

     label14:
        i11 = 0;

     label15:
        if i11 >= i10 goto label20;

     label16:
        $r17 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r18 = $r17.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        $r20 = (com.android.server.notification.NotificationRecord) $r19;

        $r21 = virtualinvoke $r20.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r41 = specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: android.service.notification.StatusBarNotification sanitizeSbn(java.lang.String,int,android.service.notification.StatusBarNotification)>(r37, i0, $r21);

     label17:
        if r41 == null goto label19;

     label18:
        $r22 = virtualinvoke r41.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        virtualinvoke r38.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, r41);

     label19:
        i11 = i11 + 1;

        goto label15;

     label20:
        r42 = new java.util.ArrayList;

        $i6 = virtualinvoke r38.<android.util.ArrayMap: int size()>();

        specialinvoke r42.<java.util.ArrayList: void <init>(int)>($i6);

        $r16 = virtualinvoke r38.<android.util.ArrayMap: java.util.Collection values()>();

        virtualinvoke r42.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r16);

        r43 = new android.content.pm.ParceledListSlice;

        specialinvoke r43.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r42);

        exitmonitor r1;

     label21:
        return r43;

     label22:
        $r36 := @caughtexception;

     label23:
        exitmonitor r1;

     label24:
        throw $r36;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label08 to label09 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    public int getAppsBypassingDndCount(int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, $i1;
        com.android.server.notification.NotificationManagerService $r1, $r2;
        com.android.server.notification.PreferencesHelper $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r1);

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = $r2.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i1 = virtualinvoke $r3.<com.android.server.notification.PreferencesHelper: int getAppsBypassingDndCount(int)>(i0);

        return $i1;
    }

    public android.app.AutomaticZenRule getAutomaticZenRule(java.lang.String) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int $i0;
        com.android.server.notification.NotificationManagerService $r3;
        com.android.server.notification.ZenModeHelper $r4;
        android.app.AutomaticZenRule $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "Id is null");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforcePolicyAccess(int,java.lang.String)>($i0, "getAutomaticZenRule");

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $r5 = virtualinvoke $r4.<com.android.server.notification.ZenModeHelper: android.app.AutomaticZenRule getAutomaticZenRule(java.lang.String)>(r1);

        return $r5;
    }

    public byte[] getBackupPayload(int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0;
        com.android.server.notification.NotificationManagerService $r2, $r4;
        boolean $z0;
        java.io.ByteArrayOutputStream $r3;
        java.lang.StringBuilder $r5, $r10;
        java.lang.String $r8, $r13;
        java.lang.Throwable $r9;
        byte[] r16;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r2);

        $z0 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getBackupPayload u=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r8);

     label1:
        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

     label2:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$200(com.android.server.notification.NotificationManagerService,java.io.OutputStream,boolean,int)>($r4, $r3, 1, i0);

        r16 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label3:
        return r16;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getBackupPayload: error writing payload for user ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", $r13, $r9);

        return null;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public int getBlockedAppCount(int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, $i1;
        com.android.server.notification.NotificationManagerService $r1, $r2;
        com.android.server.notification.PreferencesHelper $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r1);

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = $r2.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i1 = virtualinvoke $r3.<com.android.server.notification.PreferencesHelper: int getBlockedAppCount(int)>(i0);

        return $i1;
    }

    public int getBlockedChannelCount(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0, $i1;
        com.android.server.notification.NotificationManagerService $r2;
        com.android.server.notification.PreferencesHelper $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("getBlockedChannelCount");

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = $r2.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i1 = virtualinvoke $r3.<com.android.server.notification.PreferencesHelper: int getBlockedChannelCount(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public int getBubblePreferenceForPackage(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r10;
        int i0, $i1, $i2, $i3;
        android.content.Context r2;
        com.android.server.notification.NotificationManagerService $r4, $r6;
        com.android.server.notification.PreferencesHelper $r5;
        java.lang.StringBuilder $r7;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUIOrSamePackage(java.lang.String,java.lang.String)>(r1, "Caller not system or systemui or same package");

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        if $i1 == $i2 goto label1;

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r2 = virtualinvoke $r6.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getBubblePreferenceForPackage for uid ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS", $r10);

     label1:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = $r4.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i3 = virtualinvoke $r5.<com.android.server.notification.PreferencesHelper: int getBubblePreference(java.lang.String,int)>(r1, i0);

        return $i3;
    }

    public android.app.NotificationManager$Policy getConsolidatedNotificationPolicy()
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        long l0;
        com.android.server.notification.NotificationManagerService $r1;
        com.android.server.notification.ZenModeHelper $r2;
        java.lang.Throwable $r3;
        android.app.NotificationManager$Policy r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = $r1.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        r4 = virtualinvoke $r2.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy getConsolidatedNotificationPolicy()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.app.NotificationChannel getConversationNotificationChannel(java.lang.String, int, java.lang.String, java.lang.String, boolean, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r2, $r17, r19, r20;
        boolean z0, $z1, $z2;
        com.android.server.notification.NotificationManagerService $r3, $r5, $r8;
        android.content.pm.PackageManager $r4;
        com.android.server.notification.PreferencesHelper $r6;
        android.app.NotificationChannel $r7;
        java.lang.StringBuilder $r9;
        java.lang.SecurityException $r16;
        android.content.pm.PackageManager$NameNotFoundException $r18;
        int i1, i2;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r19 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r20 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r2 := @parameter5: java.lang.String;

        $z1 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: boolean canNotifyAsPackage(java.lang.String,java.lang.String,int)>(r19, r1, i1);

        if $z1 != 0 goto label2;

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $z2 = staticinvoke <com.android.server.notification.NotificationManagerService: boolean access$4800(com.android.server.notification.NotificationManagerService)>($r8);

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pkg ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot read channels for ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = new java.lang.SecurityException;

        $r17 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.SecurityException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label2:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: android.content.pm.PackageManager access$4900(com.android.server.notification.NotificationManagerService)>($r3);

        i2 = virtualinvoke $r4.<android.content.pm.PackageManager: int getPackageUidAsUser(java.lang.String,int)>(r1, i1);

     label3:
        goto label5;

     label4:
        $r18 := @caughtexception;

        i2 = -1;

     label5:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = $r5.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r7 = virtualinvoke $r6.<com.android.server.notification.PreferencesHelper: android.app.NotificationChannel getConversationNotificationChannel(java.lang.String,int,java.lang.String,java.lang.String,boolean,boolean)>(r1, i2, r20, r2, z0, 0);

        return $r7;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    public android.content.pm.ParceledListSlice getConversations(boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        boolean z0, $z1;
        java.util.ArrayList r1;
        java.util.Iterator r2;
        android.service.notification.ConversationChannelWrapper r3;
        com.android.server.notification.NotificationManagerService $r4, $r8, $r10;
        com.android.server.notification.PreferencesHelper $r5;
        android.content.pm.ParceledListSlice $r6;
        java.lang.Object $r7;
        com.android.server.notification.ShortcutHelper $r9, $r11;
        android.app.NotificationChannel $r12;
        java.lang.String $r13, $r14;
        int $i0, $i1;
        android.os.UserHandle $r15;
        android.content.pm.ShortcutInfo $r16;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("getConversations");

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = $r4.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        r1 = virtualinvoke $r5.<com.android.server.notification.PreferencesHelper: java.util.ArrayList getConversations(boolean)>(z0);

        r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.service.notification.ConversationChannelWrapper) $r7;

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r9 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ShortcutHelper access$5100(com.android.server.notification.NotificationManagerService)>($r8);

        if $r9 != null goto label2;

        virtualinvoke r3.<android.service.notification.ConversationChannelWrapper: void setShortcutInfo(android.content.pm.ShortcutInfo)>(null);

        goto label3;

     label2:
        $r10 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r11 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ShortcutHelper access$5100(com.android.server.notification.NotificationManagerService)>($r10);

        $r12 = virtualinvoke r3.<android.service.notification.ConversationChannelWrapper: android.app.NotificationChannel getNotificationChannel()>();

        $r13 = virtualinvoke $r12.<android.app.NotificationChannel: java.lang.String getConversationId()>();

        $r14 = virtualinvoke r3.<android.service.notification.ConversationChannelWrapper: java.lang.String getPkg()>();

        $i0 = virtualinvoke r3.<android.service.notification.ConversationChannelWrapper: int getUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        $r15 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i1);

        $r16 = virtualinvoke $r11.<com.android.server.notification.ShortcutHelper: android.content.pm.ShortcutInfo getValidShortcutInfo(java.lang.String,java.lang.String,android.os.UserHandle)>($r13, $r14, $r15);

        virtualinvoke r3.<android.service.notification.ConversationChannelWrapper: void setShortcutInfo(android.content.pm.ShortcutInfo)>($r16);

     label3:
        goto label1;

     label4:
        $r6 = new android.content.pm.ParceledListSlice;

        specialinvoke $r6.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r1);

        return $r6;
    }

    public android.content.pm.ParceledListSlice getConversationsForPackage(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r14;
        int i0, $i1;
        java.util.ArrayList r2;
        java.util.Iterator r3;
        android.service.notification.ConversationChannelWrapper r4;
        com.android.server.notification.NotificationManagerService $r5, $r9, $r11;
        com.android.server.notification.PreferencesHelper $r6;
        boolean $z0;
        android.content.pm.ParceledListSlice $r7;
        java.lang.Object $r8;
        com.android.server.notification.ShortcutHelper $r10, $r12;
        android.app.NotificationChannel $r13;
        android.os.UserHandle $r15;
        android.content.pm.ShortcutInfo $r16;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("getConversationsForPackage");

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = $r5.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        r2 = virtualinvoke $r6.<com.android.server.notification.PreferencesHelper: java.util.ArrayList getConversations(java.lang.String,int)>(r1, i0);

        r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.service.notification.ConversationChannelWrapper) $r8;

        $r9 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r10 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ShortcutHelper access$5100(com.android.server.notification.NotificationManagerService)>($r9);

        if $r10 != null goto label2;

        virtualinvoke r4.<android.service.notification.ConversationChannelWrapper: void setShortcutInfo(android.content.pm.ShortcutInfo)>(null);

        goto label3;

     label2:
        $r11 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r12 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ShortcutHelper access$5100(com.android.server.notification.NotificationManagerService)>($r11);

        $r13 = virtualinvoke r4.<android.service.notification.ConversationChannelWrapper: android.app.NotificationChannel getNotificationChannel()>();

        $r14 = virtualinvoke $r13.<android.app.NotificationChannel: java.lang.String getConversationId()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r15 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i1);

        $r16 = virtualinvoke $r12.<com.android.server.notification.ShortcutHelper: android.content.pm.ShortcutInfo getValidShortcutInfo(java.lang.String,java.lang.String,android.os.UserHandle)>($r14, r1, $r15);

        virtualinvoke r4.<android.service.notification.ConversationChannelWrapper: void setShortcutInfo(android.content.pm.ShortcutInfo)>($r16);

     label3:
        goto label1;

     label4:
        $r7 = new android.content.pm.ParceledListSlice;

        specialinvoke $r7.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r2);

        return $r7;
    }

    public int getDeletedChannelCount(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0, $i1;
        com.android.server.notification.NotificationManagerService $r2;
        com.android.server.notification.PreferencesHelper $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("getDeletedChannelCount");

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = $r2.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i1 = virtualinvoke $r3.<com.android.server.notification.PreferencesHelper: int getDeletedChannelCount(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public android.content.ComponentName getEffectsSuppressor()
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        com.android.server.notification.NotificationManagerService $r1, $r3;
        java.util.List $r2, $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.content.ComponentName r6;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = staticinvoke <com.android.server.notification.NotificationManagerService: java.util.List access$6700(com.android.server.notification.NotificationManagerService)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: java.util.List access$6700(com.android.server.notification.NotificationManagerService)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (android.content.ComponentName) $r5;

        goto label2;

     label1:
        r6 = null;

     label2:
        return r6;
    }

    public java.util.List getEnabledNotificationListenerPackages()
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        com.android.server.notification.NotificationManagerService $r1, $r2;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r3;
        android.os.UserHandle $r4;
        int $i0;
        java.util.List $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r1);

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r2);

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService$10: android.os.UserHandle getCallingUserHandle()>();

        $i0 = virtualinvoke $r4.<android.os.UserHandle: int getIdentifier()>();

        $r5 = virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$NotificationListeners: java.util.List getAllowedPackages(int)>($i0);

        return $r5;
    }

    public java.util.List getEnabledNotificationListeners(int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0;
        com.android.server.notification.NotificationManagerService $r1, $r2;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r3;
        java.util.List $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r1);

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r2);

        $r4 = virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$NotificationListeners: java.util.List getAllowedComponents(int)>(i0);

        return $r4;
    }

    public int getHintsFromListener(android.service.notification.INotificationListener)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        java.lang.Throwable $r4;
        android.service.notification.INotificationListener r5;
        java.lang.Object r6;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r5 := @parameter0: android.service.notification.INotificationListener;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r6 = $r2.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r6;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        i0 = staticinvoke <com.android.server.notification.NotificationManagerService: int access$6000(com.android.server.notification.NotificationManagerService)>($r3);

        exitmonitor r6;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r6;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.service.notification.StatusBarNotification[] getHistoricalNotifications(java.lang.String, int, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        boolean z0;
        android.service.notification.StatusBarNotification[] $r2;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: android.service.notification.StatusBarNotification[] getHistoricalNotificationsWithAttribution(java.lang.String,java.lang.String,int,boolean)>(r1, null, i0, z0);

        return $r2;
    }

    public android.service.notification.StatusBarNotification[] getHistoricalNotificationsWithAttribution(java.lang.String, java.lang.String, int, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, i1, $i2;
        boolean z0;
        com.android.server.notification.NotificationManagerService $r1, $r3, $r5, $r6;
        android.content.Context $r2;
        android.app.AppOpsManager $r4;
        com.android.server.notification.NotificationManagerService$Archive $r7, r12;
        java.lang.Throwable $r8;
        java.lang.String r9, r10;
        android.service.notification.StatusBarNotification[] r11;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r9 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_NOTIFICATIONS", "NotificationManagerService.getHistoricalNotifications");

        r11 = null;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: android.app.AppOpsManager access$5300(com.android.server.notification.NotificationManagerService)>($r3);

        $i2 = virtualinvoke $r4.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String,java.lang.String,java.lang.String)>(25, i1, r9, r10, null);

        if $i2 != 0 goto label6;

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r12 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$Archive access$2800(com.android.server.notification.NotificationManagerService)>($r5);

        entermonitor r12;

     label1:
        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r7 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$Archive access$2800(com.android.server.notification.NotificationManagerService)>($r6);

        r11 = virtualinvoke $r7.<com.android.server.notification.NotificationManagerService$Archive: android.service.notification.StatusBarNotification[] getArray(int,boolean)>(i0, z0);

        exitmonitor r12;

     label2:
        goto label6;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r12;

     label5:
        throw $r8;

     label6:
        return r11;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getInterruptionFilterFromListener(android.service.notification.INotificationListener) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.Object r1;
        int i0;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        java.lang.Throwable $r4;
        android.service.notification.INotificationListener r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r5 := @parameter0: android.service.notification.INotificationListener;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = $r2.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        i0 = staticinvoke <com.android.server.notification.NotificationManagerService: int access$6100(com.android.server.notification.NotificationManagerService)>($r3);

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.app.NotificationChannel getNotificationChannel(java.lang.String, int, java.lang.String, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r2, r3;
        int i0;
        android.app.NotificationChannel $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: android.app.NotificationChannel getConversationNotificationChannel(java.lang.String,int,java.lang.String,java.lang.String,boolean,java.lang.String)>(r1, i0, r2, r3, 1, null);

        return $r4;
    }

    public android.app.NotificationChannel getNotificationChannelForPackage(java.lang.String, int, java.lang.String, java.lang.String, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r2, r3;
        int i0;
        boolean z0;
        com.android.server.notification.NotificationManagerService $r4, $r5;
        com.android.server.notification.PreferencesHelper $r6;
        android.app.NotificationChannel $r7;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r4);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = $r5.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r7 = virtualinvoke $r6.<com.android.server.notification.PreferencesHelper: android.app.NotificationChannel getConversationNotificationChannel(java.lang.String,int,java.lang.String,java.lang.String,boolean,boolean)>(r1, i0, r2, r3, 1, z0);

        return $r7;
    }

    public android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r2;
        com.android.server.notification.NotificationManagerService $r3, $r4;
        com.android.server.notification.PreferencesHelper $r5;
        int $i0;
        android.app.NotificationChannelGroup $r6;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r3, r1);

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = $r4.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r6 = virtualinvoke $r5.<com.android.server.notification.PreferencesHelper: android.app.NotificationChannelGroup getNotificationChannelGroupWithChannels(java.lang.String,int,java.lang.String,boolean)>(r1, $i0, r2, 0);

        return $r6;
    }

    public android.app.NotificationChannelGroup getNotificationChannelGroupForPackage(java.lang.String, java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r2;
        int i0;
        com.android.server.notification.NotificationManagerService $r3;
        com.android.server.notification.PreferencesHelper $r4;
        android.app.NotificationChannelGroup $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("getNotificationChannelGroupForPackage");

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r5 = virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String,java.lang.String,int)>(r1, r2, i0);

        return $r5;
    }

    public android.content.pm.ParceledListSlice getNotificationChannelGroups(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        com.android.server.notification.PreferencesHelper $r4;
        int $i0;
        android.content.pm.ParceledListSlice $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r2, r1);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r5 = virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: android.content.pm.ParceledListSlice getNotificationChannelGroups(java.lang.String,int,boolean,boolean,boolean)>(r1, $i0, 0, 0, 1);

        return $r5;
    }

    public android.content.pm.ParceledListSlice getNotificationChannelGroupsForPackage(java.lang.String, int, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        boolean z0;
        com.android.server.notification.NotificationManagerService $r2;
        com.android.server.notification.PreferencesHelper $r3;
        android.content.pm.ParceledListSlice $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("getNotificationChannelGroupsForPackage");

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = $r2.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r4 = virtualinvoke $r3.<com.android.server.notification.PreferencesHelper: android.content.pm.ParceledListSlice getNotificationChannelGroups(java.lang.String,int,boolean,boolean,boolean)>(r1, i0, z0, 1, 0);

        return $r4;
    }

    public android.content.pm.ParceledListSlice getNotificationChannelGroupsFromPrivilegedListener(android.service.notification.INotificationListener, java.lang.String, android.os.UserHandle) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        android.os.UserHandle r2;
        java.util.ArrayList $r5;
        com.android.server.notification.NotificationManagerService $r6;
        com.android.server.notification.PreferencesHelper $r7;
        int $i0;
        java.util.Collection $r8;
        android.content.pm.ParceledListSlice $r9;
        android.service.notification.INotificationListener r10;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r10 := @parameter0: android.service.notification.INotificationListener;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.UserHandle;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void verifyPrivilegedListener(android.service.notification.INotificationListener,android.os.UserHandle,boolean)>(r10, r2, 1);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r7 = $r6.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: int getUidForPackageAndUser(java.lang.String,android.os.UserHandle)>(r1, r2);

        $r8 = virtualinvoke $r7.<com.android.server.notification.PreferencesHelper: java.util.Collection getNotificationChannelGroups(java.lang.String,int)>(r1, $i0);

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        $r9 = new android.content.pm.ParceledListSlice;

        specialinvoke $r9.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>($r5);

        return $r9;
    }

    public android.content.pm.ParceledListSlice getNotificationChannels(java.lang.String, java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r17, r19;
        boolean $z0, $z1;
        com.android.server.notification.NotificationManagerService $r3, $r5, $r8;
        android.content.pm.PackageManager $r4;
        com.android.server.notification.PreferencesHelper $r6;
        android.content.pm.ParceledListSlice $r7;
        java.lang.StringBuilder $r9;
        java.lang.SecurityException $r16;
        android.content.pm.PackageManager$NameNotFoundException $r18;
        int i1, i2;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r19 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: boolean canNotifyAsPackage(java.lang.String,java.lang.String,int)>(r19, r1, i1);

        if $z0 != 0 goto label2;

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $z1 = virtualinvoke $r8.<com.android.server.notification.NotificationManagerService: boolean isCallingUidSystem()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pkg ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot read channels for ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = new java.lang.SecurityException;

        $r17 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.SecurityException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label2:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: android.content.pm.PackageManager access$4900(com.android.server.notification.NotificationManagerService)>($r3);

        i2 = virtualinvoke $r4.<android.content.pm.PackageManager: int getPackageUidAsUser(java.lang.String,int)>(r1, i1);

     label3:
        goto label5;

     label4:
        $r18 := @caughtexception;

        i2 = -1;

     label5:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = $r5.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r7 = virtualinvoke $r6.<com.android.server.notification.PreferencesHelper: android.content.pm.ParceledListSlice getNotificationChannels(java.lang.String,int,boolean)>(r1, i2, 0);

        return $r7;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    public android.content.pm.ParceledListSlice getNotificationChannelsBypassingDnd(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        com.android.server.notification.PreferencesHelper $r4;
        android.content.pm.ParceledListSlice $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r2);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r5 = virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: android.content.pm.ParceledListSlice getNotificationChannelsBypassingDnd(java.lang.String,int)>(r1, i0);

        return $r5;
    }

    public android.content.pm.ParceledListSlice getNotificationChannelsForPackage(java.lang.String, int, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        boolean z0;
        com.android.server.notification.NotificationManagerService $r2;
        com.android.server.notification.PreferencesHelper $r3;
        android.content.pm.ParceledListSlice $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("getNotificationChannelsForPackage");

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = $r2.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r4 = virtualinvoke $r3.<com.android.server.notification.PreferencesHelper: android.content.pm.ParceledListSlice getNotificationChannels(java.lang.String,int,boolean)>(r1, i0, z0);

        return $r4;
    }

    public android.content.pm.ParceledListSlice getNotificationChannelsFromPrivilegedListener(android.service.notification.INotificationListener, java.lang.String, android.os.UserHandle) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.service.notification.INotificationListener r1;
        java.lang.String r2;
        android.os.UserHandle r3;
        com.android.server.notification.NotificationManagerService $r6;
        com.android.server.notification.PreferencesHelper $r7;
        int $i0;
        android.content.pm.ParceledListSlice $r8;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.service.notification.INotificationListener;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.UserHandle;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void verifyPrivilegedListener(android.service.notification.INotificationListener,android.os.UserHandle,boolean)>(r1, r3, 1);

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r7 = $r6.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: int getUidForPackageAndUser(java.lang.String,android.os.UserHandle)>(r2, r3);

        $r8 = virtualinvoke $r7.<com.android.server.notification.PreferencesHelper: android.content.pm.ParceledListSlice getNotificationChannels(java.lang.String,int,boolean)>(r2, $i0, 0);

        return $r8;
    }

    public java.lang.String getNotificationDelegate(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r5;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        com.android.server.notification.PreferencesHelper $r4;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r2, r1);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r5 = virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: java.lang.String getNotificationDelegate(java.lang.String,int)>(r1, $i0);

        return $r5;
    }

    public android.app.NotificationHistory getNotificationHistory(java.lang.String, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r13;
        int i0, $i1;
        com.android.server.notification.NotificationManagerService $r2, $r4, $r7, $r9;
        android.content.Context $r3;
        android.app.AppOpsManager $r5;
        android.app.NotificationHistory $r6, r15;
        com.android.server.notification.ManagedServices$UserProfiles $r8;
        com.android.server.notification.NotificationHistoryManager $r10;
        int[] $r11;
        java.lang.Throwable $r12;
        android.util.IntArray r14;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r13 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_NOTIFICATIONS", "NotificationManagerService.getNotificationHistory");

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.notification.NotificationManagerService: android.app.AppOpsManager access$5300(com.android.server.notification.NotificationManagerService)>($r4);

        $i1 = virtualinvoke $r5.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String,java.lang.String,java.lang.String)>(25, i0, r13, r1, null);

        if $i1 != 0 goto label4;

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r8 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles access$2500(com.android.server.notification.NotificationManagerService)>($r7);

        r14 = virtualinvoke $r8.<com.android.server.notification.ManagedServices$UserProfiles: android.util.IntArray getCurrentProfileIds()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(524288L, "notifHistoryReadHistory");

     label1:
        $r9 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r10 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationHistoryManager access$300(com.android.server.notification.NotificationManagerService)>($r9);

        $r11 = virtualinvoke r14.<android.util.IntArray: int[] toArray()>();

        r15 = virtualinvoke $r10.<com.android.server.notification.NotificationHistoryManager: android.app.NotificationHistory readNotificationHistory(int[])>($r11);

     label2:
        staticinvoke <android.os.Trace: void traceEnd(long)>(524288L);

        return r15;

     label3:
        $r12 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(524288L);

        throw $r12;

     label4:
        $r6 = new android.app.NotificationHistory;

        specialinvoke $r6.<android.app.NotificationHistory: void <init>()>();

        return $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.app.NotificationManager$Policy getNotificationPolicy(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        long l0;
        com.android.server.notification.NotificationManagerService $r1;
        com.android.server.notification.ZenModeHelper $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;
        android.app.NotificationManager$Policy r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r4 := @parameter0: java.lang.String;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = $r1.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        r5 = virtualinvoke $r2.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy getNotificationPolicy()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r5;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getNumNotificationChannelsForPackage(java.lang.String, int, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0, $i1;
        boolean z0;
        com.android.server.notification.NotificationManagerService $r2;
        com.android.server.notification.PreferencesHelper $r3;
        android.content.pm.ParceledListSlice $r4;
        java.util.List $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("getNumNotificationChannelsForPackage");

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = $r2.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r4 = virtualinvoke $r3.<com.android.server.notification.PreferencesHelper: android.content.pm.ParceledListSlice getNotificationChannels(java.lang.String,int,boolean)>(r1, i0, z0);

        $r5 = virtualinvoke $r4.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        return $i1;
    }

    public int getPackageImportance(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        com.android.server.notification.PreferencesHelper $r4;
        int $i0, $i1;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r2, r1);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: int getImportance(java.lang.String,int)>(r1, $i0);

        return $i1;
    }

    public android.app.NotificationChannelGroup getPopulatedNotificationChannelGroupForPackage(java.lang.String, int, java.lang.String, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r2;
        int i0;
        boolean z0;
        com.android.server.notification.NotificationManagerService $r3;
        com.android.server.notification.PreferencesHelper $r4;
        android.app.NotificationChannelGroup $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("getPopulatedNotificationChannelGroupForPackage");

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r5 = virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: android.app.NotificationChannelGroup getNotificationChannelGroupWithChannels(java.lang.String,int,java.lang.String,boolean)>(r1, i0, r2, z0);

        return $r5;
    }

    public boolean getPrivateNotificationsAllowed()
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        com.android.server.notification.NotificationManagerService $r1, $r4;
        android.content.Context $r2;
        int $i0;
        java.lang.SecurityException $r3;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $i0 = virtualinvoke $r2.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.CONTROL_KEYGUARD_SECURE_NOTIFICATIONS");

        if $i0 != 0 goto label1;

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $z0 = staticinvoke <com.android.server.notification.NotificationManagerService: boolean access$7200(com.android.server.notification.NotificationManagerService)>($r4);

        return $z0;

     label1:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires CONTROL_KEYGUARD_SECURE_NOTIFICATIONS permission");

        throw $r3;
    }

    public int getRuleInstanceCount(android.content.ComponentName) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.content.ComponentName r1;
        com.android.server.notification.NotificationManagerService $r3;
        com.android.server.notification.ZenModeHelper $r4;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.content.ComponentName;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "Owner is null");

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("getRuleInstanceCount");

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $i0 = virtualinvoke $r4.<com.android.server.notification.ZenModeHelper: int getCurrentInstanceCount(android.content.ComponentName)>(r1);

        return $i0;
    }

    public android.content.pm.ParceledListSlice getSnoozedNotificationsFromListener(android.service.notification.INotificationListener, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, i1, i2;
        java.lang.Object r1, $r10;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r2;
        java.util.List r3;
        java.util.ArrayList r4;
        com.android.server.notification.NotificationManagerService $r5, $r6, $r8, $r11;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r7;
        com.android.server.notification.SnoozeHelper $r9;
        boolean $z0;
        java.lang.Throwable $r12;
        android.service.notification.INotificationListener r13;
        com.android.server.notification.NotificationRecord r14;
        android.service.notification.StatusBarNotification r15;
        android.content.pm.ParceledListSlice r16;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r13 := @parameter0: android.service.notification.INotificationListener;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = $r5.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label01:
        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r7 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r6);

        r2 = virtualinvoke $r7.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r13);

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r9 = $r8.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper>;

        r3 = virtualinvoke $r9.<com.android.server.notification.SnoozeHelper: java.util.List getSnoozed()>();

        i1 = interfaceinvoke r3.<java.util.List: int size()>();

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>(i1);

     label02:
        i2 = 0;

     label03:
        if i2 >= i1 goto label12;

     label04:
        $r10 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        r14 = (com.android.server.notification.NotificationRecord) $r10;

     label05:
        if r14 != null goto label06;

        goto label11;

     label06:
        r15 = virtualinvoke r14.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r11 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $z0 = staticinvoke <com.android.server.notification.NotificationManagerService: boolean access$5400(com.android.server.notification.NotificationManagerService,android.service.notification.StatusBarNotification,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($r11, r15, r2);

        if $z0 != 0 goto label08;

     label07:
        goto label11;

     label08:
        if i0 != 0 goto label09;

        goto label10;

     label09:
        r15 = virtualinvoke r15.<android.service.notification.StatusBarNotification: android.service.notification.StatusBarNotification cloneLight()>();

     label10:
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r15);

     label11:
        i2 = i2 + 1;

        goto label03;

     label12:
        r16 = new android.content.pm.ParceledListSlice;

        specialinvoke r16.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r4);

        exitmonitor r1;

     label13:
        return r16;

     label14:
        $r12 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public int getZenMode()
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        com.android.server.notification.NotificationManagerService $r1;
        com.android.server.notification.ZenModeHelper $r2;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = $r1.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $i0 = virtualinvoke $r2.<com.android.server.notification.ZenModeHelper: int getZenMode()>();

        return $i0;
    }

    public android.service.notification.ZenModeConfig getZenModeConfig()
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        com.android.server.notification.NotificationManagerService $r1;
        com.android.server.notification.ZenModeHelper $r2;
        android.service.notification.ZenModeConfig $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("INotificationManager.getZenModeConfig");

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = $r1.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $r3 = virtualinvoke $r2.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig getConfig()>();

        return $r3;
    }

    public java.util.List getZenRules() throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int $i0;
        com.android.server.notification.NotificationManagerService $r1;
        com.android.server.notification.ZenModeHelper $r2;
        java.util.List $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforcePolicyAccess(int,java.lang.String)>($i0, "getAutomaticZenRules");

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = $r1.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $r3 = virtualinvoke $r2.<com.android.server.notification.ZenModeHelper: java.util.List getZenRules()>();

        return $r3;
    }

    public boolean hasSentValidMsg(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        com.android.server.notification.PreferencesHelper $r4;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r2);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $z0 = virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: boolean hasSentValidMsg(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public boolean hasUserDemotedInvalidMsgApp(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        com.android.server.notification.PreferencesHelper $r4;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r2);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $z0 = virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: boolean hasUserDemotedInvalidMsgApp(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public boolean isInInvalidMsgState(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        com.android.server.notification.PreferencesHelper $r4;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r2);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $z0 = virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: boolean isInInvalidMsgState(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public boolean isNotificationAssistantAccessGranted(android.content.ComponentName)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.content.ComponentName r1;
        com.android.server.notification.NotificationManagerService $r3, $r5;
        java.lang.String $r4, $r7;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r6;
        android.os.UserHandle $r8;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.content.ComponentName;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r3, $r4);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r5);

        $r7 = virtualinvoke r1.<android.content.ComponentName: java.lang.String flattenToString()>();

        $r8 = staticinvoke <com.android.server.notification.NotificationManagerService$10: android.os.UserHandle getCallingUserHandle()>();

        $i0 = virtualinvoke $r8.<android.os.UserHandle: int getIdentifier()>();

        $z0 = virtualinvoke $r6.<com.android.server.notification.NotificationManagerService$NotificationAssistants: boolean isPackageOrComponentAllowed(java.lang.String,int)>($r7, $i0);

        return $z0;
    }

    public boolean isNotificationListenerAccessGranted(android.content.ComponentName)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.content.ComponentName r1;
        com.android.server.notification.NotificationManagerService $r3, $r5;
        java.lang.String $r4, $r7;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r6;
        android.os.UserHandle $r8;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.content.ComponentName;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r3, $r4);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r5);

        $r7 = virtualinvoke r1.<android.content.ComponentName: java.lang.String flattenToString()>();

        $r8 = staticinvoke <com.android.server.notification.NotificationManagerService$10: android.os.UserHandle getCallingUserHandle()>();

        $i0 = virtualinvoke $r8.<android.os.UserHandle: int getIdentifier()>();

        $z0 = virtualinvoke $r6.<com.android.server.notification.NotificationManagerService$NotificationListeners: boolean isPackageOrComponentAllowed(java.lang.String,int)>($r7, $i0);

        return $z0;
    }

    public boolean isNotificationListenerAccessGrantedForUser(android.content.ComponentName, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.content.ComponentName r1;
        int i0;
        com.android.server.notification.NotificationManagerService $r3, $r4;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r5;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r3);

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r4);

        $r6 = virtualinvoke r1.<android.content.ComponentName: java.lang.String flattenToString()>();

        $z0 = virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$NotificationListeners: boolean isPackageOrComponentAllowed(java.lang.String,int)>($r6, i0);

        return $z0;
    }

    public boolean isNotificationPolicyAccessGranted(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: boolean checkPolicyAccess(java.lang.String)>(r1);

        return $z0;
    }

    public boolean isNotificationPolicyAccessGrantedForPackage(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUIOrSamePackage(java.lang.String,java.lang.String)>(r1, "request policy access status for another package");

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: boolean checkPolicyAccess(java.lang.String)>(r1);

        return $z0;
    }

    public boolean isPackagePaused(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        com.android.server.notification.NotificationManagerService $r3, $r4;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4600(com.android.server.notification.NotificationManagerService,java.lang.String)>($r3, r1);

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = virtualinvoke $r4.<com.android.server.notification.NotificationManagerService: boolean isPackagePausedOrSuspended(java.lang.String,int)>(r1, $i0);

        return $z0;
    }

    public boolean isSystemConditionProviderEnabled(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        com.android.server.notification.NotificationManagerService $r2;
        com.android.server.notification.ConditionProviders $r3;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("INotificationManager.isSystemConditionProviderEnabled");

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)>($r2);

        $z0 = virtualinvoke $r3.<com.android.server.notification.ConditionProviders: boolean isSystemProviderEnabled(java.lang.String)>(r1);

        return $z0;
    }

    public boolean matchesCallFilter(android.os.Bundle)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.os.Bundle r1;
        com.android.server.notification.NotificationManagerService $r2, $r5;
        com.android.server.notification.ZenModeHelper $r3;
        android.os.UserHandle $r4;
        com.android.server.notification.RankingHelper $r6;
        com.android.server.notification.NotificationSignalExtractor $r7;
        com.android.server.notification.ValidateNotificationPeople $r8;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("INotificationManager.matchesCallFilter");

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = $r2.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $r4 = staticinvoke <android.os.Binder: android.os.UserHandle getCallingUserHandle()>();

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = $r5.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        $r7 = virtualinvoke $r6.<com.android.server.notification.RankingHelper: com.android.server.notification.NotificationSignalExtractor findExtractor(java.lang.Class)>(class "Lcom/android/server/notification/ValidateNotificationPeople;");

        $r8 = (com.android.server.notification.ValidateNotificationPeople) $r7;

        $z0 = virtualinvoke $r3.<com.android.server.notification.ZenModeHelper: boolean matchesCallFilter(android.os.UserHandle,android.os.Bundle,com.android.server.notification.ValidateNotificationPeople,int,float)>($r4, r1, $r8, 3000, 1.0F);

        return $z0;
    }

    public void notifyConditions(java.lang.String, android.service.notification.IConditionProvider, android.service.notification.Condition[])
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        android.service.notification.Condition[] r2;
        com.android.server.notification.NotificationManagerService $r3, $r5, $r6;
        com.android.server.notification.ConditionProviders $r4;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r7;
        com.android.server.notification.NotificationManagerService$10$1 $r8;
        android.service.notification.IConditionProvider r9;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r10;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        r9 := @parameter1: android.service.notification.IConditionProvider;

        r2 := @parameter2: android.service.notification.Condition[];

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)>($r3);

        r10 = virtualinvoke $r4.<com.android.server.notification.ConditionProviders: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceToken(android.service.notification.IConditionProvider)>(r9);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r5, r1);

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r7 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler access$1100(com.android.server.notification.NotificationManagerService)>($r6);

        $r8 = new com.android.server.notification.NotificationManagerService$10$1;

        specialinvoke $r8.<com.android.server.notification.NotificationManagerService$10$1: void <init>(com.android.server.notification.NotificationManagerService$10,java.lang.String,com.android.server.notification.ManagedServices$ManagedServiceInfo,android.service.notification.Condition[])>(r0, r1, r10, r2);

        virtualinvoke $r7.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r8);

        return;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        android.os.ShellCallback r5;
        android.os.ResultReceiver r6;
        com.android.server.notification.NotificationShellCmd $r7;
        com.android.server.notification.NotificationManagerService $r8;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.FileDescriptor;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.ShellCallback;

        r6 := @parameter5: android.os.ResultReceiver;

        $r7 = new com.android.server.notification.NotificationShellCmd;

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        specialinvoke $r7.<com.android.server.notification.NotificationShellCmd: void <init>(com.android.server.notification.NotificationManagerService)>($r8);

        virtualinvoke $r7.<com.android.server.notification.NotificationShellCmd: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, r1, r2, r3, r4, r5, r6);

        return;
    }

    public boolean onlyHasDefaultChannel(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        com.android.server.notification.NotificationManagerService $r2;
        com.android.server.notification.PreferencesHelper $r3;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("onlyHasDefaultChannel");

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = $r2.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $z0 = virtualinvoke $r3.<com.android.server.notification.PreferencesHelper: boolean onlyHasDefaultChannel(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public long pullStats(long, int, boolean, java.util.List)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, $i4;
        boolean z0;
        com.android.server.notification.NotificationManagerService $r1, $r9;
        java.util.concurrent.TimeUnit $r2, $r3, $r17, $r18;
        java.lang.String $r8, $r13, $r16;
        com.android.server.notification.NotificationUsageStats $r10;
        long $l6, l8, l9, l10, l11;
        java.lang.Throwable $r19, $r20, $r21, $r22, r29, r30;
        java.util.List r23;
        java.lang.StringBuilder r24, r27, r28;
        com.android.server.notification.PulledStats r25;
        android.os.ParcelFileDescriptor r26;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        l8 := @parameter0: long;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r23 := @parameter3: java.util.List;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$6800(com.android.server.notification.NotificationManagerService)>($r1);

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        l9 = virtualinvoke $r3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(l8, $r2);

        l10 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if i0 == 1 goto label01;

        goto label07;

     label01:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pullStats REPORT_REMOTE_VIEWS from: ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l9);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  wtih ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r8);

        $r9 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r10 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats access$7300(com.android.server.notification.NotificationManagerService)>($r9);

        r25 = virtualinvoke $r10.<com.android.server.notification.NotificationUsageStats: com.android.server.notification.PulledStats remoteViewStats(long,boolean)>(l9, z0);

     label02:
        if r25 == null goto label06;

     label03:
        r26 = virtualinvoke r25.<com.android.server.notification.PulledStats: android.os.ParcelFileDescriptor toParcelFileDescriptor(int)>(i0);

     label04:
        interfaceinvoke r23.<java.util.List: boolean add(java.lang.Object)>(r26);

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exiting pullStats with: ");

        $i4 = interfaceinvoke r23.<java.util.List: int size()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r16 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r16);

        $r17 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l6 = virtualinvoke r25.<com.android.server.notification.PulledStats: long endTimeMs()>();

        $r18 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        l11 = virtualinvoke $r17.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($l6, $r18);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        return l11;

     label06:
        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null stats for: ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r13);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", "exiting pullStats: bad request");

        return 0L;

     label08:
        $r19 := @caughtexception;

        r29 = $r19;

        goto label11;

     label09:
        $r20 := @caughtexception;

        r30 = $r20;

        goto label14;

     label10:
        $r21 := @caughtexception;

        r29 = $r21;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "exiting pullStats: on error", r29);

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        return 0L;

     label13:
        $r22 := @caughtexception;

        r30 = $r22;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        throw r30;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.io.IOException from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void registerListener(android.service.notification.INotificationListener, android.content.ComponentName, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.service.notification.INotificationListener r1;
        android.content.ComponentName r2;
        int i0;
        com.android.server.notification.NotificationManagerService $r3;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.service.notification.INotificationListener;

        r2 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("INotificationManager.registerListener");

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r3);

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationListeners: void registerSystemService(android.os.IInterface,android.content.ComponentName,int)>(r1, r2, i0);

        return;
    }

    public boolean removeAutomaticZenRule(java.lang.String) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int $i0;
        com.android.server.notification.NotificationManagerService $r3;
        com.android.server.notification.ZenModeHelper $r4;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "Id is null");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforcePolicyAccess(int,java.lang.String)>($i0, "removeAutomaticZenRule");

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $z0 = virtualinvoke $r4.<com.android.server.notification.ZenModeHelper: boolean removeAutomaticZenRule(java.lang.String,java.lang.String)>(r1, "removeAutomaticZenRule");

        return $z0;
    }

    public boolean removeAutomaticZenRules(java.lang.String) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r9;
        com.android.server.notification.ZenModeHelper r2;
        com.android.server.notification.NotificationManagerService $r5;
        java.lang.StringBuilder $r6;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "Package name is null");

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("removeAutomaticZenRules");

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r2 = $r5.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|removeAutomaticZenRules");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r2.<com.android.server.notification.ZenModeHelper: boolean removeAutomaticZenRules(java.lang.String,java.lang.String)>(r1, $r9);

        return $z0;
    }

    public void requestBindListener(android.content.ComponentName)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        long l0;
        com.android.server.notification.NotificationManagerService $r1, $r3, $r5, $r6;
        java.lang.String $r2;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r4;
        boolean $z0;
        java.lang.Throwable $r7;
        android.content.ComponentName r8;
        com.android.server.notification.ManagedServices r9;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r8 := @parameter0: android.content.ComponentName;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = virtualinvoke r8.<android.content.ComponentName: java.lang.String getPackageName()>();

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r1, $r2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r3);

        $z0 = virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationAssistants: boolean isComponentEnabledForCurrentProfiles(android.content.ComponentName)>(r8);

        if $z0 == 0 goto label3;

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r9 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r6);

     label2:
        goto label4;

     label3:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r9 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r5);

     label4:
        virtualinvoke r9.<com.android.server.notification.ManagedServices: void setComponentState(android.content.ComponentName,boolean)>(r8, 1);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label6:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void requestBindProvider(android.content.ComponentName)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        long l0;
        com.android.server.notification.NotificationManagerService $r1, $r3;
        java.lang.String $r2;
        com.android.server.notification.ConditionProviders $r4;
        java.lang.Throwable $r5;
        android.content.ComponentName r6;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r6 := @parameter0: android.content.ComponentName;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = virtualinvoke r6.<android.content.ComponentName: java.lang.String getPackageName()>();

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,java.lang.String)>($r1, $r2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)>($r3);

        virtualinvoke $r4.<com.android.server.notification.ConditionProviders: void setComponentState(android.content.ComponentName,boolean)>(r6, 1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void requestHintsFromListener(android.service.notification.INotificationListener, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, $i2;
        long l1;
        java.lang.Object r1;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r5, $r6, $r7, $r8;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r4;
        java.lang.Throwable $r9, $r10;
        android.service.notification.INotificationListener r11;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r12;
        boolean z1;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r11 := @parameter0: android.service.notification.INotificationListener;

        i0 := @parameter1: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = $r2.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label02:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r3);

        r12 = virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r11);

     label03:
        $i2 = i0 & 7;

        if $i2 == 0 goto label04;

        z1 = 1;

        goto label05;

     label04:
        z1 = 0;

     label05:
        if z1 == 0 goto label08;

     label06:
        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$5800(com.android.server.notification.NotificationManagerService,com.android.server.notification.ManagedServices$ManagedServiceInfo,int)>($r8, r12, i0);

     label07:
        goto label09;

     label08:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: boolean access$5900(com.android.server.notification.NotificationManagerService,com.android.server.notification.ManagedServices$ManagedServiceInfo,int)>($r5, r12, i0);

     label09:
        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$5600(com.android.server.notification.NotificationManagerService)>($r6);

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$5700(com.android.server.notification.NotificationManagerService)>($r7);

        exitmonitor r1;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label11:
        $r9 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r9;

     label14:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label13 to label14 with label14;
    }

    public void requestInterruptionFilterFromListener(android.service.notification.INotificationListener, int) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0;
        long l1;
        java.lang.Object r1;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r5, $r8;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r4;
        android.content.ComponentName $r6;
        com.android.server.notification.ZenModeHelper $r7;
        java.lang.Throwable $r9, $r10;
        android.service.notification.INotificationListener r11;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r12;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r11 := @parameter0: android.service.notification.INotificationListener;

        i0 := @parameter1: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = $r2.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label2:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r3);

        r12 = virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r11);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r7 = $r5.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $r6 = r12.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        virtualinvoke $r7.<com.android.server.notification.ZenModeHelper: void requestFromListener(android.content.ComponentName,int)>($r6, i0);

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$3000(com.android.server.notification.NotificationManagerService)>($r8);

        exitmonitor r1;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r9;

     label7:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void requestUnbindListener(android.service.notification.INotificationListener)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        long l0;
        java.lang.Object r1;
        com.android.server.notification.NotificationManagerService $r2, $r3;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r4;
        com.android.server.notification.ManagedServices $r5;
        android.content.ComponentName $r6;
        java.lang.Throwable $r7, $r8;
        android.service.notification.INotificationListener r9;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r10;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r9 := @parameter0: android.service.notification.INotificationListener;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = $r2.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label2:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r3);

        r10 = virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r9);

        $r5 = virtualinvoke r10.<com.android.server.notification.ManagedServices$ManagedServiceInfo: com.android.server.notification.ManagedServices getOwner()>();

        $r6 = r10.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        virtualinvoke $r5.<com.android.server.notification.ManagedServices: void setComponentState(android.content.ComponentName,boolean)>($r6, 0);

        exitmonitor r1;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r7;

     label7:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void requestUnbindProvider(android.service.notification.IConditionProvider)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        long l0;
        com.android.server.notification.NotificationManagerService $r1;
        com.android.server.notification.ConditionProviders $r2;
        com.android.server.notification.ManagedServices $r3;
        android.content.ComponentName $r4;
        java.lang.Throwable $r5;
        android.service.notification.IConditionProvider r6;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r7;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r6 := @parameter0: android.service.notification.IConditionProvider;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)>($r1);

        r7 = virtualinvoke $r2.<com.android.server.notification.ConditionProviders: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceToken(android.service.notification.IConditionProvider)>(r6);

        $r3 = virtualinvoke r7.<com.android.server.notification.ManagedServices$ManagedServiceInfo: com.android.server.notification.ManagedServices getOwner()>();

        $r4 = r7.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        virtualinvoke $r3.<com.android.server.notification.ManagedServices: void setComponentState(android.content.ComponentName,boolean)>($r4, 0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setAutomaticZenRuleState(java.lang.String, android.service.notification.Condition)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        android.service.notification.Condition r2;
        int $i0;
        com.android.server.notification.NotificationManagerService $r5;
        com.android.server.notification.ZenModeHelper $r6;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.service.notification.Condition;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "id is null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "Condition is null");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforcePolicyAccess(int,java.lang.String)>($i0, "setAutomaticZenRuleState");

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = $r5.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r6.<com.android.server.notification.ZenModeHelper: void setAutomaticZenRuleState(java.lang.String,android.service.notification.Condition)>(r1, r2);

        return;
    }

    public void setBubblesAllowed(java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0, i1;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r5;
        com.android.server.notification.PreferencesHelper $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4500(com.android.server.notification.NotificationManagerService,java.lang.String)>($r2, "Caller not system or sysui or shell");

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: void setBubblesAllowed(java.lang.String,int,int)>(r1, i0, i1);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    public void setHideSilentStatusIcons(boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        boolean z0;
        com.android.server.notification.NotificationManagerService $r1, $r2, $r4, $r5;
        com.android.server.notification.PreferencesHelper $r3;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r6;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r1);

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = $r2.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r3.<com.android.server.notification.PreferencesHelper: void setHideSilentStatusIcons(boolean)>(z0);

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r5);

        virtualinvoke $r6.<com.android.server.notification.NotificationManagerService$NotificationListeners: void onStatusBarIconsBehaviorChanged(boolean)>(z0);

        return;
    }

    public void setInterruptionFilter(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, i1;
        long l2;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5, r9;
        com.android.server.notification.NotificationManagerService $r6;
        com.android.server.notification.ZenModeHelper $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforcePolicyAccess(java.lang.String,java.lang.String)>(r9, "setInterruptionFilter");

        i1 = staticinvoke <android.app.NotificationManager: int zenModeFromInterruptionFilter(int,int)>(i0, -1);

        if i1 == -1 goto label4;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r7 = $r6.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r7.<com.android.server.notification.ZenModeHelper: void setManualZenMode(int,android.net.Uri,java.lang.String,java.lang.String)>(i1, null, r9, "setInterruptionFilter");

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label3:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r8;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid filter: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setInvalidMsgAppDemoted(java.lang.String, int, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        boolean z0;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r5;
        com.android.server.notification.PreferencesHelper $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r2);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: void setInvalidMsgAppDemoted(java.lang.String,int,boolean)>(r1, i0, z0);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    public void setNotificationAssistantAccessGranted(android.content.ComponentName, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.content.ComponentName r1;
        boolean z0;
        android.os.UserHandle $r2;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.content.ComponentName;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.android.server.notification.NotificationManagerService$10: android.os.UserHandle getCallingUserHandle()>();

        $i0 = virtualinvoke $r2.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: void setNotificationAssistantAccessGrantedForUser(android.content.ComponentName,int,boolean)>(r1, $i0, z0);

        return;
    }

    public void setNotificationAssistantAccessGrantedForUser(android.content.ComponentName, int, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, $i2;
        boolean z0, $z1;
        java.util.Iterator r1;
        android.content.pm.UserInfo r2;
        long l1;
        com.android.server.notification.NotificationManagerService $r3, $r4, $r7, $r9;
        android.os.UserManager $r5;
        java.util.List $r6;
        java.lang.Object $r8;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r10;
        java.lang.Throwable $r11;
        android.content.ComponentName r12;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r12 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$5200(com.android.server.notification.NotificationManagerService)>($r3);

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.notification.NotificationManagerService: android.os.UserManager access$7000(com.android.server.notification.NotificationManagerService)>($r4);

        $r6 = virtualinvoke $r5.<android.os.UserManager: java.util.List getEnabledProfiles(int)>(i0);

        r1 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.pm.UserInfo) $r8;

        $r9 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r10 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r9);

        $i2 = r2.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r10.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void setUserSet(int,boolean)>($i2, 1);

        goto label1;

     label2:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r7.<com.android.server.notification.NotificationManagerService: void setNotificationAssistantAccessGrantedForUserInternal(android.content.ComponentName,int,boolean)>(r12, i0, z0);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label5:
        $r11 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r11;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setNotificationDelegate(java.lang.String, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r13;
        int i0, $i1, $i2, $i3;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r5, $r7, $r8, $r10;
        android.content.pm.IPackageManager $r4;
        com.android.server.notification.PreferencesHelper $r6, $r9;
        android.os.RemoteException $r11;
        android.os.UserHandle r14;
        android.content.pm.ApplicationInfo r15;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r13 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4600(com.android.server.notification.NotificationManagerService,java.lang.String)>($r2, r13);

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r14 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        if r1 != null goto label1;

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r9 = $r8.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r9.<com.android.server.notification.PreferencesHelper: void revokeNotificationDelegate(java.lang.String,int)>(r13, $i3);

        $r10 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r10.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        goto label6;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager access$1300(com.android.server.notification.NotificationManagerService)>($r3);

        $i1 = virtualinvoke r14.<android.os.UserHandle: int getIdentifier()>();

        r15 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 786432, $i1);

     label2:
        if r15 == null goto label4;

     label3:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = $r5.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i2 = r15.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r6.<com.android.server.notification.PreferencesHelper: void setNotificationDelegate(java.lang.String,int,java.lang.String,int)>(r13, i0, r1, $i2);

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r7.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        virtualinvoke $r11.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void setNotificationListenerAccessGranted(android.content.ComponentName, boolean) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.content.ComponentName r1;
        boolean z0;
        android.os.UserHandle $r2;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.content.ComponentName;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.android.server.notification.NotificationManagerService$10: android.os.UserHandle getCallingUserHandle()>();

        $i0 = virtualinvoke $r2.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: void setNotificationListenerAccessGrantedForUser(android.content.ComponentName,int,boolean)>(r1, $i0, z0);

        return;
    }

    public void setNotificationListenerAccessGrantedForUser(android.content.ComponentName, int, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0;
        boolean z0, $z1;
        long l1;
        android.content.Context r1;
        android.content.Intent r2, $r20, $r21;
        com.android.server.notification.NotificationManagerService $r4, $r5, $r9, $r12, $r15, $r18, $r23;
        com.android.internal.util.function.TriPredicate $r6;
        java.lang.String $r7, $r11, $r14, $r17, $r19;
        java.lang.Integer $r8;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r10, $r16;
        com.android.server.notification.ConditionProviders $r13;
        android.os.UserHandle $r22;
        java.lang.Throwable $r24;
        android.content.ComponentName r25;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r25 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r25);

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$6800(com.android.server.notification.NotificationManagerService)>($r4);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.internal.util.function.TriPredicate access$6900(com.android.server.notification.NotificationManagerService)>($r5);

        $r7 = virtualinvoke r25.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r10 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r9);

        $r11 = virtualinvoke $r10.<com.android.server.notification.NotificationManagerService$NotificationListeners: java.lang.String getRequiredPermission()>();

        $z1 = interfaceinvoke $r6.<com.android.internal.util.function.TriPredicate: boolean test(java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r8, $r11);

        if $z1 == 0 goto label2;

        $r12 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r13 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)>($r12);

        $r14 = virtualinvoke r25.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke $r13.<com.android.server.notification.ConditionProviders: void setPackageOrComponentEnabled(java.lang.String,int,boolean,boolean)>($r14, i0, 0, z0);

        $r15 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r16 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r15);

        $r17 = virtualinvoke r25.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke $r16.<com.android.server.notification.NotificationManagerService$NotificationListeners: void setPackageOrComponentEnabled(java.lang.String,int,boolean,boolean)>($r17, i0, 1, z0);

        $r18 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = virtualinvoke $r18.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("android.app.action.NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED");

        $r19 = virtualinvoke r25.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r20 = virtualinvoke r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r22 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        virtualinvoke r1.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r21, $r22, null);

        $r23 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r23.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r24 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r24;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setNotificationPolicy(java.lang.String, android.app.NotificationManager$Policy)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        long l0;
        android.content.pm.ApplicationInfo r1;
        android.app.NotificationManager$Policy r2, r16, r18, r19, r20;
        int i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, i33, i34;
        com.android.server.notification.NotificationManagerService $r3, $r5, $r7, $r8, $r10;
        android.content.pm.IPackageManager $r4;
        com.android.server.notification.ZenModeHelper $r6, $r9;
        android.os.RemoteException $r11, $r14;
        java.lang.Throwable $r12, $r13, r21;
        java.lang.String r15;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r15 := @parameter0: java.lang.String;

        r16 := @parameter1: android.app.NotificationManager$Policy;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforcePolicyAccess(java.lang.String,java.lang.String)>(r15, "setNotificationPolicy");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager access$1300(com.android.server.notification.NotificationManagerService)>($r3);

        $i4 = staticinvoke <com.android.server.notification.NotificationManagerService: int access$2100()>();

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        r1 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r15, 0, $i5);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = $r5.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        r2 = virtualinvoke $r6.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy getNotificationPolicy()>();

     label02:
        r18 = r16;

     label03:
        $i6 = r1.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i6 >= 28 goto label04;

        i1 = r16.<android.app.NotificationManager$Policy: int priorityCategories>;

        i2 = r2.<android.app.NotificationManager$Policy: int priorityCategories>;

        i3 = r2.<android.app.NotificationManager$Policy: int priorityCategories>;

        i32 = r2.<android.app.NotificationManager$Policy: int priorityCategories>;

        r18 = new android.app.NotificationManager$Policy;

        $i20 = i1 & -33;

        $i21 = $i20 & -65;

        $i23 = $i21 & -129;

        $i22 = i2 & 32;

        $i25 = $i23 | $i22;

        $i24 = i3 & 64;

        $i27 = $i25 | $i24;

        $i26 = i32 & 128;

        $i31 = $i27 | $i26;

        $i30 = r16.<android.app.NotificationManager$Policy: int priorityCallSenders>;

        $i29 = r16.<android.app.NotificationManager$Policy: int priorityMessageSenders>;

        $i28 = r16.<android.app.NotificationManager$Policy: int suppressedVisualEffects>;

        specialinvoke r18.<android.app.NotificationManager$Policy: void <init>(int,int,int,int)>($i31, $i30, $i29, $i28);

     label04:
        r19 = r18;

     label05:
        $i7 = r1.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i7 >= 30 goto label06;

        $r10 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i15 = r18.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i14 = r2.<android.app.NotificationManager$Policy: int priorityCategories>;

        i33 = virtualinvoke $r10.<com.android.server.notification.NotificationManagerService: int correctCategory(int,int,int)>($i15, 256, $i14);

        r19 = new android.app.NotificationManager$Policy;

        $i19 = r18.<android.app.NotificationManager$Policy: int priorityCallSenders>;

        $i18 = r18.<android.app.NotificationManager$Policy: int priorityMessageSenders>;

        $i17 = r18.<android.app.NotificationManager$Policy: int suppressedVisualEffects>;

        $i16 = r2.<android.app.NotificationManager$Policy: int priorityConversationSenders>;

        specialinvoke r19.<android.app.NotificationManager$Policy: void <init>(int,int,int,int,int)>(i33, $i19, $i18, $i17, $i16);

     label06:
        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i8 = r1.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        i34 = virtualinvoke $r7.<com.android.server.notification.NotificationManagerService: int calculateSuppressedVisualEffects(android.app.NotificationManager$Policy,android.app.NotificationManager$Policy,int)>(r19, r2, $i8);

        r20 = new android.app.NotificationManager$Policy;

        $i12 = r19.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i11 = r19.<android.app.NotificationManager$Policy: int priorityCallSenders>;

        $i10 = r19.<android.app.NotificationManager$Policy: int priorityMessageSenders>;

        $i9 = r19.<android.app.NotificationManager$Policy: int priorityConversationSenders>;

        specialinvoke r20.<android.app.NotificationManager$Policy: void <init>(int,int,int,int,int)>($i12, $i11, $i10, i34, $i9);

        $i13 = r1.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        staticinvoke <com.android.server.notification.ZenLog: void traceSetNotificationPolicy(java.lang.String,int,android.app.NotificationManager$Policy)>(r15, $i13, r20);

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r9 = $r8.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r9.<com.android.server.notification.ZenModeHelper: void setNotificationPolicy(android.app.NotificationManager$Policy)>(r20);

     label07:
        goto label13;

     label08:
        $r12 := @caughtexception;

        r21 = $r12;

        goto label11;

     label09:
        $r11 := @caughtexception;

        goto label13;

     label10:
        $r13 := @caughtexception;

        r21 = $r13;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r21;

     label12:
        $r14 := @caughtexception;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label12;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch android.os.RemoteException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
    }

    public void setNotificationPolicyAccessGranted(java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        boolean z0;
        android.os.UserHandle $r2;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.android.server.notification.NotificationManagerService$10: android.os.UserHandle getCallingUserHandle()>();

        $i0 = virtualinvoke $r2.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: void setNotificationPolicyAccessGrantedForUser(java.lang.String,int,boolean)>(r1, $i0, z0);

        return;
    }

    public void setNotificationPolicyAccessGrantedForUser(java.lang.String, int, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0;
        boolean z0, $z1;
        long l1;
        android.content.Context r1;
        android.content.Intent r2, $r13, $r14;
        com.android.server.notification.NotificationManagerService $r3, $r4, $r7, $r10, $r12, $r16;
        com.android.internal.util.function.TriPredicate $r5;
        java.lang.Integer $r6;
        com.android.server.notification.ConditionProviders $r8, $r11;
        java.lang.String $r9, r18;
        android.os.UserHandle $r15;
        java.lang.Throwable $r17;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r18 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$6800(com.android.server.notification.NotificationManagerService)>($r3);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.internal.util.function.TriPredicate access$6900(com.android.server.notification.NotificationManagerService)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r8 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)>($r7);

        $r9 = virtualinvoke $r8.<com.android.server.notification.ConditionProviders: java.lang.String getRequiredPermission()>();

        $z1 = interfaceinvoke $r5.<com.android.internal.util.function.TriPredicate: boolean test(java.lang.Object,java.lang.Object,java.lang.Object)>(r18, $r6, $r9);

        if $z1 == 0 goto label2;

        $r10 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r11 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)>($r10);

        virtualinvoke $r11.<com.android.server.notification.ConditionProviders: void setPackageOrComponentEnabled(java.lang.String,int,boolean,boolean)>(r18, i0, 1, z0);

        $r12 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = virtualinvoke $r12.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("android.app.action.NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED");

        $r13 = virtualinvoke r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r18);

        $r14 = virtualinvoke $r13.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        $r15 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        virtualinvoke r1.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r14, $r15, null);

        $r16 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r16.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r17 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setNotificationsEnabledForPackage(java.lang.String, int, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i7;
        boolean z0, z1, z2;
        android.content.Context r1;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r5, $r7, $r13, $r18, $r19;
        com.android.server.notification.PreferencesHelper $r4, $r6;
        com.android.internal.logging.MetricsLogger $r8;
        android.metrics.LogMaker $r9, $r10, $r11, $r12;
        android.content.Intent $r14, $r15, $r16, r24;
        android.os.UserHandle $r17;
        java.lang.Throwable $r20, $r21;
        java.lang.String r22;
        java.lang.Object r23;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r22 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("setNotificationsEnabledForPackage");

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r23 = $r2.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r23;

     label01:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i1 = virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: int getImportance(java.lang.String,int)>(r22, i0);

        if $i1 == 0 goto label03;

     label02:
        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        if z1 != z0 goto label07;

     label05:
        exitmonitor r23;

     label06:
        return;

     label07:
        exitmonitor r23;

     label08:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = $r5.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r6.<com.android.server.notification.PreferencesHelper: void setEnabled(java.lang.String,int,boolean)>(r22, i0, z0);

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r8 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.internal.logging.MetricsLogger access$1000(com.android.server.notification.NotificationManagerService)>($r7);

        $r9 = new android.metrics.LogMaker;

        specialinvoke $r9.<android.metrics.LogMaker: void <init>(int)>(147);

        $r10 = virtualinvoke $r9.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(4);

        $r11 = virtualinvoke $r10.<android.metrics.LogMaker: android.metrics.LogMaker setPackageName(java.lang.String)>(r22);

        i7 = (int) z0;

        $r12 = virtualinvoke $r11.<android.metrics.LogMaker: android.metrics.LogMaker setSubtype(int)>(i7);

        virtualinvoke $r8.<com.android.internal.logging.MetricsLogger: void write(android.metrics.LogMaker)>($r12);

        if z0 != 0 goto label09;

        $r19 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i3 = staticinvoke <com.android.server.notification.NotificationManagerService: int access$2100()>();

        $i4 = staticinvoke <com.android.server.notification.NotificationManagerService: int access$2200()>();

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke $r19.<com.android.server.notification.NotificationManagerService: void cancelAllNotificationsInt(int,int,java.lang.String,java.lang.String,int,int,boolean,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($i3, $i4, r22, null, 0, 0, 1, $i5, 7, null);

     label09:
        $r13 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = virtualinvoke $r13.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        r24 = new android.content.Intent;

        specialinvoke r24.<android.content.Intent: void <init>(java.lang.String)>("android.app.action.APP_BLOCK_STATE_CHANGED");

     label10:
        if z0 != 0 goto label11;

        z2 = 1;

        goto label12;

     label11:
        z2 = 0;

     label12:
        $r14 = virtualinvoke r24.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.app.extra.BLOCKED_STATE", z2);

        $r15 = virtualinvoke $r14.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r16 = virtualinvoke $r15.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r22);

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r17 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i2);

        virtualinvoke r1.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r16, $r17, null);

     label13:
        goto label15;

     label14:
        $r20 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Can\'t notify app about app block change", $r20);

     label15:
        $r18 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r18.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;

     label16:
        $r21 := @caughtexception;

     label17:
        exitmonitor r23;

     label18:
        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.SecurityException from label09 to label10 with label14;
        catch java.lang.SecurityException from label12 to label13 with label14;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void setNotificationsEnabledWithImportanceLockForPackage(java.lang.String, int, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        boolean z0;
        com.android.server.notification.NotificationManagerService $r2;
        com.android.server.notification.PreferencesHelper $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService$10: void setNotificationsEnabledForPackage(java.lang.String,int,boolean)>(r1, i0, z0);

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = $r2.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r3.<com.android.server.notification.PreferencesHelper: void setAppImportanceLocked(java.lang.String,int)>(r1, i0);

        return;
    }

    public void setNotificationsShownFromListener(android.service.notification.INotificationListener, java.lang.String[])
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        long l0;
        java.lang.Object r1, $r12;
        java.util.ArrayList r2;
        int i1, i2, $i3, i5;
        java.lang.StringBuilder r3, r33;
        com.android.server.notification.NotificationManagerService $r4, $r5, $r7, $r9, $r14, $r15, $r20;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r6;
        boolean $z0, $z2, $z3, $z4;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r8;
        java.lang.String $r10, $r17, $r19, $r25;
        android.util.ArrayMap $r11;
        android.service.notification.StatusBarNotification $r13;
        com.android.server.notification.ManagedServices$UserProfiles $r21;
        android.os.IInterface $r23;
        java.lang.Throwable $r26, $r27;
        android.service.notification.INotificationListener r28;
        java.lang.String[] r29;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r30;
        com.android.server.notification.NotificationRecord r31;
        java.lang.SecurityException r32;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r28 := @parameter0: android.service.notification.INotificationListener;

        r29 := @parameter1: java.lang.String[];

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = $r4.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label02:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r5);

        r30 = virtualinvoke $r6.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r28);

     label03:
        if r29 != null goto label06;

     label04:
        exitmonitor r1;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label06:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        i1 = lengthof r29;

     label07:
        i5 = 0;

     label08:
        if i5 >= i1 goto label19;

     label09:
        $r9 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r11 = $r9.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r10 = r29[i5];

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r10);

        r31 = (com.android.server.notification.NotificationRecord) $r12;

     label10:
        if r31 != null goto label11;

        goto label18;

     label11:
        $r13 = virtualinvoke r31.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        i2 = virtualinvoke $r13.<android.service.notification.StatusBarNotification: int getUserId()>();

        $i3 = r30.<com.android.server.notification.ManagedServices$ManagedServiceInfo: int userid>;

        if i2 == $i3 goto label16;

     label12:
        if i2 == -1 goto label16;

     label13:
        $r20 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r21 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles access$2500(com.android.server.notification.NotificationManagerService)>($r20);

        $z3 = virtualinvoke $r21.<com.android.server.notification.ManagedServices$UserProfiles: boolean isCurrentProfile(int)>(i2);

        if $z3 == 0 goto label15;

     label14:
        goto label16;

     label15:
        r32 = new java.lang.SecurityException;

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disallowed call from listener: ");

        $r23 = r30.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.os.IInterface service>;

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r32.<java.lang.SecurityException: void <init>(java.lang.String)>($r25);

        throw r32;

     label16:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r31);

        $z4 = virtualinvoke r31.<com.android.server.notification.NotificationRecord: boolean isSeen()>();

        if $z4 != 0 goto label18;

        $z2 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z2 == 0 goto label17;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Marking notification as seen ");

        $r17 = r29[i5];

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r19);

     label17:
        $r14 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r14.<com.android.server.notification.NotificationManagerService: void reportSeen(com.android.server.notification.NotificationRecord)>(r31);

        virtualinvoke r31.<com.android.server.notification.NotificationRecord: void setSeen()>();

        $r15 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r15.<com.android.server.notification.NotificationManagerService: void maybeRecordInterruptionLocked(com.android.server.notification.NotificationRecord)>(r31);

     label18:
        i5 = i5 + 1;

        goto label08;

     label19:
        $z0 = virtualinvoke r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label20;

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r8 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r7);

        virtualinvoke $r8.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void onNotificationsSeenLocked(java.util.ArrayList)>(r2);

     label20:
        exitmonitor r1;

     label21:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label22:
        $r26 := @caughtexception;

     label23:
        exitmonitor r1;

     label24:
        throw $r26;

     label25:
        $r27 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r27;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label19 to label20 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label24 to label25 with label25;
    }

    public void setOnNotificationPostedTrimFromListener(android.service.notification.INotificationListener, int) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0;
        java.lang.Object r1;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r5;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r4, $r6;
        java.lang.Throwable $r7;
        android.service.notification.INotificationListener r8;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r9;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r8 := @parameter0: android.service.notification.INotificationListener;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r1 = $r2.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r3);

        r9 = virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r8);

     label2:
        if r9 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r5);

        virtualinvoke $r6.<com.android.server.notification.NotificationManagerService$NotificationListeners: void setOnNotificationPostedTrimLocked(com.android.server.notification.ManagedServices$ManagedServiceInfo,int)>(r9, i0);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void setPrivateNotificationsAllowed(boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        boolean z0, $z1;
        com.android.server.notification.NotificationManagerService $r1, $r4, $r5, $r6;
        android.content.Context $r2;
        int $i0;
        java.lang.SecurityException $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $i0 = virtualinvoke $r2.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.CONTROL_KEYGUARD_SECURE_NOTIFICATIONS");

        if $i0 != 0 goto label2;

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $z1 = staticinvoke <com.android.server.notification.NotificationManagerService: boolean access$7200(com.android.server.notification.NotificationManagerService)>($r4);

        if z0 == $z1 goto label1;

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: boolean access$7202(com.android.server.notification.NotificationManagerService,boolean)>($r5, z0);

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r6.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

     label1:
        return;

     label2:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires CONTROL_KEYGUARD_SECURE_NOTIFICATIONS permission");

        throw $r3;
    }

    public void setShowBadge(java.lang.String, int, boolean)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        boolean z0;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r5;
        com.android.server.notification.PreferencesHelper $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r2);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r4 = $r3.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: void setShowBadge(java.lang.String,int,boolean)>(r1, i0, z0);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    public void setZenMode(int, android.net.Uri, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        int i0;
        java.lang.String r1;
        long l1;
        com.android.server.notification.NotificationManagerService $r2;
        com.android.server.notification.ZenModeHelper $r3;
        java.lang.Throwable $r4;
        android.net.Uri r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        i0 := @parameter0: int;

        r5 := @parameter1: android.net.Uri;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("INotificationManager.setZenMode");

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = $r2.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r3.<com.android.server.notification.ZenModeHelper: void setManualZenMode(int,android.net.Uri,java.lang.String,java.lang.String)>(i0, r5, null, r1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean shouldHideSilentStatusIcons(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        com.android.server.notification.NotificationManagerService $r2, $r3, $r4, $r6;
        boolean $z0, $z1, $z2;
        com.android.server.notification.PreferencesHelper $r5;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r7;
        java.lang.SecurityException $r8;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4600(com.android.server.notification.NotificationManagerService,java.lang.String)>($r2, r1);

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $z0 = virtualinvoke $r3.<com.android.server.notification.NotificationManagerService: boolean isCallerSystemOrPhone()>();

        if $z0 != 0 goto label2;

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r7 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r6);

        $z2 = virtualinvoke $r7.<com.android.server.notification.NotificationManagerService$NotificationListeners: boolean isListenerPackage(java.lang.String)>(r1);

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>("Only available for notification listeners");

        throw $r8;

     label2:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = $r4.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $z1 = virtualinvoke $r5.<com.android.server.notification.PreferencesHelper: boolean shouldHideSilentStatusIcons()>();

        return $z1;
    }

    public void silenceNotificationSound()
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        com.android.server.notification.NotificationManagerService $r1, $r2;
        com.android.server.notification.NotificationDelegate $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        $r1 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4400(com.android.server.notification.NotificationManagerService)>($r1);

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = $r2.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationDelegate mNotificationDelegate>;

        interfaceinvoke $r3.<com.android.server.notification.NotificationDelegate: void clearEffects()>();

        return;
    }

    public void snoozeNotificationUntilContextFromListener(android.service.notification.INotificationListener, java.lang.String, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, r2;
        long l0;
        java.lang.Object r3;
        com.android.server.notification.NotificationManagerService $r4, $r5, $r7;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r6;
        java.lang.Throwable $r8, $r9;
        android.service.notification.INotificationListener r10;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r11;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r10 := @parameter0: android.service.notification.INotificationListener;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r3 = $r4.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r3;

     label2:
        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r6 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r5);

        r11 = virtualinvoke $r6.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r10);

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r7.<com.android.server.notification.NotificationManagerService: void snoozeNotificationInt(java.lang.String,long,java.lang.String,com.android.server.notification.ManagedServices$ManagedServiceInfo)>(r1, -1L, r2, r11);

        exitmonitor r3;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r3;

     label6:
        throw $r8;

     label7:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void snoozeNotificationUntilFromListener(android.service.notification.INotificationListener, java.lang.String, long)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        long l0, l1;
        java.lang.Object r2;
        com.android.server.notification.NotificationManagerService $r3, $r4, $r6;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r5;
        java.lang.Throwable $r7, $r8;
        android.service.notification.INotificationListener r9;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r10;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r9 := @parameter0: android.service.notification.INotificationListener;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r2 = $r3.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r2;

     label2:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r4);

        r10 = virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r9);

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r6.<com.android.server.notification.NotificationManagerService: void snoozeNotificationInt(java.lang.String,long,java.lang.String,com.android.server.notification.ManagedServices$ManagedServiceInfo)>(r1, l0, null, r10);

        exitmonitor r2;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        throw $r8;

     label7:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void unregisterListener(android.service.notification.INotificationListener, int)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.service.notification.INotificationListener r1;
        int i0;
        com.android.server.notification.NotificationManagerService $r2;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.service.notification.INotificationListener;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r3 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r2);

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$NotificationListeners: void unregisterService(android.os.IInterface,int)>(r1, i0);

        return;
    }

    public void unsnoozeNotificationFromAssistant(android.service.notification.INotificationListener, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        long l0;
        java.lang.Object r2;
        com.android.server.notification.NotificationManagerService $r3, $r4, $r6;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r5;
        java.lang.Throwable $r7, $r8;
        android.service.notification.INotificationListener r9;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r10;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r9 := @parameter0: android.service.notification.INotificationListener;

        r1 := @parameter1: java.lang.String;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r2 = $r3.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r2;

     label2:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)>($r4);

        r10 = virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$NotificationAssistants: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r9);

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r6.<com.android.server.notification.NotificationManagerService: void unsnoozeNotificationInt(java.lang.String,com.android.server.notification.ManagedServices$ManagedServiceInfo,boolean)>(r1, r10, 0);

        exitmonitor r2;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        throw $r7;

     label7:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void unsnoozeNotificationFromSystemListener(android.service.notification.INotificationListener, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        long l0;
        java.lang.Object r2;
        com.android.server.notification.NotificationManagerService $r3, $r4, $r6;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r5;
        boolean $z0;
        java.lang.Throwable $r7, $r8;
        android.service.notification.INotificationListener r9;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r10;
        java.lang.SecurityException r11;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r9 := @parameter0: android.service.notification.INotificationListener;

        r1 := @parameter1: java.lang.String;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        r2 = $r3.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r2;

     label2:
        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)>($r4);

        r10 = virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r9);

        $z0 = r10.<com.android.server.notification.ManagedServices$ManagedServiceInfo: boolean isSystem>;

        if $z0 == 0 goto label4;

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r6.<com.android.server.notification.NotificationManagerService: void unsnoozeNotificationInt(java.lang.String,com.android.server.notification.ManagedServices$ManagedServiceInfo,boolean)>(r1, r10, 1);

        exitmonitor r2;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        r11 = new java.lang.SecurityException;

        specialinvoke r11.<java.lang.SecurityException: void <init>(java.lang.String)>("Not allowed to unsnooze before deadline");

        throw r11;

     label5:
        $r8 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r8;

     label8:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label7 to label8 with label8;
    }

    public boolean updateAutomaticZenRule(java.lang.String, android.app.AutomaticZenRule) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1, $r4;
        android.app.AutomaticZenRule r2;
        android.content.ComponentName $r6, $r11;
        android.net.Uri $r7;
        int $i0;
        com.android.server.notification.NotificationManagerService $r9;
        com.android.server.notification.ZenModeHelper $r10;
        boolean $z0;
        java.lang.NullPointerException $r12;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.app.AutomaticZenRule;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "automaticZenRule is null");

        $r4 = virtualinvoke r2.<android.app.AutomaticZenRule: java.lang.String getName()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r4, "Name is null");

        $r6 = virtualinvoke r2.<android.app.AutomaticZenRule: android.content.ComponentName getOwner()>();

        if $r6 != null goto label2;

        $r11 = virtualinvoke r2.<android.app.AutomaticZenRule: android.content.ComponentName getConfigurationActivity()>();

        if $r11 == null goto label1;

        goto label2;

     label1:
        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("Rule must have a conditionproviderservice and/or configuration activity");

        throw $r12;

     label2:
        $r7 = virtualinvoke r2.<android.app.AutomaticZenRule: android.net.Uri getConditionId()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r7, "ConditionId is null");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforcePolicyAccess(int,java.lang.String)>($i0, "updateAutomaticZenRule");

        $r9 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $r10 = $r9.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $z0 = virtualinvoke $r10.<com.android.server.notification.ZenModeHelper: boolean updateAutomaticZenRule(java.lang.String,android.app.AutomaticZenRule,java.lang.String)>(r1, r2, "updateAutomaticZenRule");

        return $z0;
    }

    public void updateNotificationChannelForPackage(java.lang.String, int, android.app.NotificationChannel)
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        android.app.NotificationChannel r2;
        com.android.server.notification.NotificationManagerService $r3, $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.app.NotificationChannel;

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4500(com.android.server.notification.NotificationManagerService,java.lang.String)>($r3, "Caller not system or sysui or shell");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r5 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$5000(com.android.server.notification.NotificationManagerService,java.lang.String,int,android.app.NotificationChannel,boolean)>($r5, r1, i0, r2, 0);

        return;
    }

    public void updateNotificationChannelFromPrivilegedListener(android.service.notification.INotificationListener, java.lang.String, android.os.UserHandle, android.app.NotificationChannel) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.service.notification.INotificationListener r1;
        java.lang.String r2;
        android.os.UserHandle r3;
        android.app.NotificationChannel r4;
        com.android.server.notification.NotificationManagerService $r8;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.service.notification.INotificationListener;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.UserHandle;

        r4 := @parameter3: android.app.NotificationChannel;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r4);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void verifyPrivilegedListener(android.service.notification.INotificationListener,android.os.UserHandle,boolean)>(r1, r3, 0);

        $r8 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: int getUidForPackageAndUser(java.lang.String,android.os.UserHandle)>(r2, r3);

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$5000(com.android.server.notification.NotificationManagerService,java.lang.String,int,android.app.NotificationChannel,boolean)>($r8, r2, $i0, r4, 1);

        return;
    }

    public void updateNotificationChannelGroupForPackage(java.lang.String, int, android.app.NotificationChannelGroup) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        java.lang.String r1;
        int i0;
        android.app.NotificationChannelGroup r2;
        com.android.server.notification.NotificationManagerService $r3, $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.app.NotificationChannelGroup;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void enforceSystemOrSystemUI(java.lang.String)>("Caller not system or systemui");

        $r3 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4700(com.android.server.notification.NotificationManagerService,java.lang.String,int,android.app.NotificationChannelGroup,boolean,boolean)>($r3, r1, i0, r2, 0, 0);

        $r4 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    public void updateNotificationChannelGroupFromPrivilegedListener(android.service.notification.INotificationListener, java.lang.String, android.os.UserHandle, android.app.NotificationChannelGroup) throws android.os.RemoteException
    {
        com.android.server.notification.NotificationManagerService$10 r0;
        android.service.notification.INotificationListener r1;
        java.lang.String r2;
        android.os.UserHandle r3;
        android.app.NotificationChannelGroup r4;
        com.android.server.notification.NotificationManagerService $r6, $r7;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService$10;

        r1 := @parameter0: android.service.notification.INotificationListener;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.UserHandle;

        r4 := @parameter3: android.app.NotificationChannelGroup;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: void verifyPrivilegedListener(android.service.notification.INotificationListener,android.os.UserHandle,boolean)>(r1, r3, 0);

        $r6 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        $i0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService$10: int getUidForPackageAndUser(java.lang.String,android.os.UserHandle)>(r2, r3);

        staticinvoke <com.android.server.notification.NotificationManagerService: void access$4700(com.android.server.notification.NotificationManagerService,java.lang.String,int,android.app.NotificationChannelGroup,boolean,boolean)>($r6, r2, $i0, r4, 0, 1);

        $r7 = r0.<com.android.server.notification.NotificationManagerService$10: com.android.server.notification.NotificationManagerService this$0>;

        virtualinvoke $r7.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }
}
