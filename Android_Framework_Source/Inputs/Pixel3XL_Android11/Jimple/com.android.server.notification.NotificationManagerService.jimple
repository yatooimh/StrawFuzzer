public class com.android.server.notification.NotificationManagerService extends com.android.server.SystemService
{
    private static final java.lang.String ACTION_NOTIFICATION_TIMEOUT;
    private static final java.lang.String ATTR_VERSION;
    private static final long CHANGE_BACKGROUND_CUSTOM_TOAST_BLOCK;
    public static final boolean DBG;
    private static final int DB_VERSION;
    static final boolean DEBUG_INTERRUPTIVENESS;
    static final java.lang.String[] DEFAULT_ALLOWED_ADJUSTMENTS;
    static final float DEFAULT_MAX_NOTIFICATION_ENQUEUE_RATE;
    static final long[] DEFAULT_VIBRATE_PATTERN;
    private static final long DELAY_FOR_ASSISTANT_TIME;
    static final boolean ENABLE_BLOCKED_TOASTS;
    public static final boolean ENABLE_CHILD_NOTIFICATIONS;
    private static final int EVENTLOG_ENQUEUE_STATUS_IGNORED;
    private static final int EVENTLOG_ENQUEUE_STATUS_NEW;
    private static final int EVENTLOG_ENQUEUE_STATUS_UPDATE;
    private static final java.lang.String EXTRA_KEY;
    static final int FINISH_TOKEN_TIMEOUT;
    static final int INVALID_UID;
    private static final java.lang.String LOCKSCREEN_ALLOW_SECURE_NOTIFICATIONS_TAG;
    private static final java.lang.String LOCKSCREEN_ALLOW_SECURE_NOTIFICATIONS_VALUE;
    static final int LONG_DELAY;
    static final int MATCHES_CALL_FILTER_CONTACTS_TIMEOUT_MS;
    static final float MATCHES_CALL_FILTER_TIMEOUT_AFFINITY;
    static final int MAX_PACKAGE_NOTIFICATIONS;
    static final int MESSAGE_DURATION_REACHED;
    static final int MESSAGE_FINISH_TOKEN_TIMEOUT;
    static final int MESSAGE_LISTENER_HINTS_CHANGED;
    static final int MESSAGE_LISTENER_NOTIFICATION_FILTER_CHANGED;
    static final int MESSAGE_ON_PACKAGE_CHANGED;
    private static final int MESSAGE_RANKING_SORT;
    private static final int MESSAGE_RECONSIDER_RANKING;
    static final int MESSAGE_SEND_RANKING_UPDATE;
    private static final long MIN_PACKAGE_OVERRATE_LOG_INTERVAL;
    private static final int MY_PID;
    private static final int MY_UID;
    static final java.lang.String[] NON_BLOCKABLE_DEFAULT_ROLES;
    private static final int NOTIFICATION_INSTANCE_ID_MAX;
    public static final int REPORT_REMOTE_VIEWS;
    private static final int REQUEST_CODE_TIMEOUT;
    static final java.lang.String ROOT_PKG;
    private static final java.lang.String SCHEME_TIMEOUT;
    static final int SHORT_DELAY;
    static final long SNOOZE_UNTIL_UNSPECIFIED;
    public static final java.lang.String TAG;
    private static final java.lang.String TAG_NOTIFICATION_POLICY;
    static final int VIBRATE_PATTERN_MAXLEN;
    private static final android.os.IBinder WHITELIST_TOKEN;
    private android.view.accessibility.AccessibilityManager mAccessibilityManager;
    private android.app.ActivityManager mActivityManager;
    private android.app.AlarmManager mAlarmManager;
    private com.android.internal.util.function.TriPredicate mAllowedManagedServicePackages;
    private android.app.IActivityManager mAm;
    private android.app.AppOpsManager mAppOps;
    private android.app.usage.UsageStatsManagerInternal mAppUsageStats;
    private com.android.server.notification.NotificationManagerService$Archive mArchive;
    private com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants;
    private com.android.server.wm.ActivityTaskManagerInternal mAtm;
    com.android.server.lights.LogicalLight mAttentionLight;
    android.media.AudioManager mAudioManager;
    android.media.AudioManagerInternal mAudioManagerInternal;
    private int mAutoGroupAtCount;
    final android.util.ArrayMap mAutobundledSummaries;
    private android.os.Binder mCallNotificationToken;
    private int mCallState;
    private android.companion.ICompanionDeviceManager mCompanionManager;
    private com.android.server.notification.ConditionProviders mConditionProviders;
    private android.provider.DeviceConfig$OnPropertiesChangedListener mDeviceConfigChangedListener;
    private android.os.IDeviceIdleController mDeviceIdleController;
    private boolean mDisableNotificationEffects;
    private android.app.admin.DevicePolicyManagerInternal mDpm;
    private java.util.List mEffectsSuppressors;
    final java.util.ArrayList mEnqueuedNotifications;
    private long[] mFallbackVibrationPattern;
    final android.os.IBinder mForegroundToken;
    private com.android.server.notification.GroupHelper mGroupHelper;
    private com.android.server.notification.NotificationManagerService$WorkerHandler mHandler;
    boolean mHasLight;
    private com.android.server.notification.NotificationHistoryManager mHistoryManager;
    private android.media.AudioAttributes mInCallNotificationAudioAttributes;
    private android.net.Uri mInCallNotificationUri;
    private float mInCallNotificationVolume;
    protected boolean mInCallStateOffHook;
    final android.util.ArrayMap mInlineReplyRecordsByKey;
    private final android.content.BroadcastReceiver mIntentReceiver;
    private final com.android.server.notification.NotificationManagerInternal mInternalService;
    private int mInterruptionFilter;
    private boolean mIsAutomotive;
    private boolean mIsTelevision;
    private long mLastOverRateLogTime;
    boolean mLightEnabled;
    java.util.ArrayList mLights;
    private int mListenerHints;
    private com.android.server.notification.NotificationManagerService$NotificationListeners mListeners;
    private final android.util.SparseArray mListenersDisablingEffects;
    protected final android.content.BroadcastReceiver mLocaleChangeReceiver;
    private boolean mLockScreenAllowSecureNotifications;
    private float mMaxPackageEnqueueRate;
    private com.android.internal.logging.MetricsLogger mMetricsLogger;
    private java.util.Set mMsgPkgsAllowedAsConvos;
    final com.android.server.notification.NotificationDelegate mNotificationDelegate;
    private boolean mNotificationEffectsEnabledForAutomotive;
    private com.android.internal.logging.InstanceIdSequence mNotificationInstanceIdSequence;
    private com.android.server.lights.LogicalLight mNotificationLight;
    final java.util.ArrayList mNotificationList;
    final java.lang.Object mNotificationLock;
    boolean mNotificationPulseEnabled;
    private com.android.server.notification.NotificationRecordLogger mNotificationRecordLogger;
    private final android.content.BroadcastReceiver mNotificationTimeoutReceiver;
    final android.util.ArrayMap mNotificationsByKey;
    private final android.content.BroadcastReceiver mPackageIntentReceiver;
    private android.content.pm.IPackageManager mPackageManager;
    private android.content.pm.PackageManager mPackageManagerClient;
    private com.android.internal.compat.IPlatformCompat mPlatformCompat;
    private android.util.AtomicFile mPolicyFile;
    com.android.server.notification.PreferencesHelper mPreferencesHelper;
    private com.android.server.notification.NotificationManagerService$StatsPullAtomCallbackImpl mPullAtomCallback;
    protected com.android.server.notification.RankingHandler mRankingHandler;
    com.android.server.notification.RankingHelper mRankingHelper;
    private final android.os.HandlerThread mRankingThread;
    private final android.content.BroadcastReceiver mRestoreReceiver;
    private com.android.server.notification.NotificationManagerService$RoleObserver mRoleObserver;
    private final com.android.server.notification.NotificationManagerService$SavePolicyFileRunnable mSavePolicyFile;
    boolean mScreenOn;
    final android.os.IBinder mService;
    private com.android.server.notification.NotificationManagerService$SettingsObserver mSettingsObserver;
    private com.android.server.notification.ShortcutHelper mShortcutHelper;
    private com.android.server.notification.ShortcutHelper$ShortcutListener mShortcutListener;
    protected com.android.server.notification.SnoozeHelper mSnoozeHelper;
    private java.lang.String mSoundNotificationKey;
    private android.app.StatsManager mStatsManager;
    com.android.server.statusbar.StatusBarManagerInternal mStatusBar;
    private int mStripRemoteViewsSizeBytes;
    final android.util.ArrayMap mSummaryByGroupKey;
    boolean mSystemReady;
    final java.util.ArrayList mToastQueue;
    private android.app.IUriGrantsManager mUgm;
    private com.android.server.uri.UriGrantsManagerInternal mUgmInternal;
    private android.os.Handler mUiHandler;
    private android.os.UserManager mUm;
    private com.android.server.notification.NotificationUsageStats mUsageStats;
    private boolean mUseAttentionLight;
    private final com.android.server.notification.ManagedServices$UserProfiles mUserProfiles;
    private java.lang.String mVibrateNotificationKey;
    android.os.Vibrator mVibrator;
    private int mWarnRemoteViewsSizeBytes;
    private com.android.server.wm.WindowManagerInternal mWindowManagerInternal;
    protected com.android.server.notification.ZenModeHelper mZenModeHelper;

    static void <clinit>()
    {
        boolean $z0, $z1, $z2;
        long[] $r1;
        java.lang.String[] $r2, $r3;
        java.lang.StringBuilder $r4;
        java.lang.Class $r5;
        java.lang.String $r6, $r9;
        int $i0, $i1;
        android.os.Binder $r10;

        <com.android.server.notification.NotificationManagerService: int VIBRATE_PATTERN_MAXLEN> = 17;

        <com.android.server.notification.NotificationManagerService: java.lang.String TAG_NOTIFICATION_POLICY> = "notification-policy";

        <com.android.server.notification.NotificationManagerService: java.lang.String TAG> = "NotificationService";

        <com.android.server.notification.NotificationManagerService: long SNOOZE_UNTIL_UNSPECIFIED> = -1L;

        <com.android.server.notification.NotificationManagerService: int SHORT_DELAY> = 2000;

        <com.android.server.notification.NotificationManagerService: java.lang.String SCHEME_TIMEOUT> = "timeout";

        <com.android.server.notification.NotificationManagerService: java.lang.String ROOT_PKG> = "root";

        <com.android.server.notification.NotificationManagerService: int REQUEST_CODE_TIMEOUT> = 1;

        <com.android.server.notification.NotificationManagerService: int REPORT_REMOTE_VIEWS> = 1;

        <com.android.server.notification.NotificationManagerService: int NOTIFICATION_INSTANCE_ID_MAX> = 8192;

        <com.android.server.notification.NotificationManagerService: long MIN_PACKAGE_OVERRATE_LOG_INTERVAL> = 5000L;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_SEND_RANKING_UPDATE> = 4;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_RECONSIDER_RANKING> = 1000;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_RANKING_SORT> = 1001;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_ON_PACKAGE_CHANGED> = 8;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_LISTENER_NOTIFICATION_FILTER_CHANGED> = 6;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_LISTENER_HINTS_CHANGED> = 5;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_FINISH_TOKEN_TIMEOUT> = 7;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_DURATION_REACHED> = 2;

        <com.android.server.notification.NotificationManagerService: int MAX_PACKAGE_NOTIFICATIONS> = 25;

        <com.android.server.notification.NotificationManagerService: float MATCHES_CALL_FILTER_TIMEOUT_AFFINITY> = 1.0F;

        <com.android.server.notification.NotificationManagerService: int MATCHES_CALL_FILTER_CONTACTS_TIMEOUT_MS> = 3000;

        <com.android.server.notification.NotificationManagerService: int LONG_DELAY> = 3500;

        <com.android.server.notification.NotificationManagerService: java.lang.String LOCKSCREEN_ALLOW_SECURE_NOTIFICATIONS_VALUE> = "value";

        <com.android.server.notification.NotificationManagerService: java.lang.String LOCKSCREEN_ALLOW_SECURE_NOTIFICATIONS_TAG> = "allow-secure-notifications-on-lockscreen";

        <com.android.server.notification.NotificationManagerService: int INVALID_UID> = -1;

        <com.android.server.notification.NotificationManagerService: int FINISH_TOKEN_TIMEOUT> = 11000;

        <com.android.server.notification.NotificationManagerService: java.lang.String EXTRA_KEY> = "key";

        <com.android.server.notification.NotificationManagerService: int EVENTLOG_ENQUEUE_STATUS_UPDATE> = 1;

        <com.android.server.notification.NotificationManagerService: int EVENTLOG_ENQUEUE_STATUS_NEW> = 0;

        <com.android.server.notification.NotificationManagerService: int EVENTLOG_ENQUEUE_STATUS_IGNORED> = 2;

        <com.android.server.notification.NotificationManagerService: boolean ENABLE_BLOCKED_TOASTS> = 1;

        <com.android.server.notification.NotificationManagerService: long DELAY_FOR_ASSISTANT_TIME> = 200L;

        <com.android.server.notification.NotificationManagerService: float DEFAULT_MAX_NOTIFICATION_ENQUEUE_RATE> = 5.0F;

        <com.android.server.notification.NotificationManagerService: int DB_VERSION> = 1;

        <com.android.server.notification.NotificationManagerService: long CHANGE_BACKGROUND_CUSTOM_TOAST_BLOCK> = 128611929L;

        <com.android.server.notification.NotificationManagerService: java.lang.String ATTR_VERSION> = "version";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotificationService", 3);

        <com.android.server.notification.NotificationManagerService: boolean DBG> = $z0;

        $z1 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("debug.child_notifs", 1);

        <com.android.server.notification.NotificationManagerService: boolean ENABLE_CHILD_NOTIFICATIONS> = $z1;

        $z2 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("debug.notification.interruptiveness", 0);

        <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS> = $z2;

        $r1 = newarray (long)[4];

        $r1[0] = 0L;

        $r1[1] = 250L;

        $r1[2] = 250L;

        $r1[3] = 250L;

        <com.android.server.notification.NotificationManagerService: long[] DEFAULT_VIBRATE_PATTERN> = $r1;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "key_contextual_actions";

        $r2[1] = "key_text_replies";

        <com.android.server.notification.NotificationManagerService: java.lang.String[] DEFAULT_ALLOWED_ADJUSTMENTS> = $r2;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "android.app.role.DIALER";

        $r3[1] = "android.app.role.EMERGENCY";

        <com.android.server.notification.NotificationManagerService: java.lang.String[] NON_BLOCKABLE_DEFAULT_ROLES> = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = class "Lcom/android/server/notification/NotificationManagerService;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".TIMEOUT");

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.server.notification.NotificationManagerService: java.lang.String ACTION_NOTIFICATION_TIMEOUT> = $r9;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        <com.android.server.notification.NotificationManagerService: int MY_UID> = $i0;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        <com.android.server.notification.NotificationManagerService: int MY_PID> = $i1;

        $r10 = new android.os.Binder;

        specialinvoke $r10.<android.os.Binder: void <init>()>();

        <com.android.server.notification.NotificationManagerService: android.os.IBinder WHITELIST_TOKEN> = $r10;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.Context r1;
        com.android.server.notification.NotificationRecordLoggerImpl $r2;
        com.android.internal.logging.InstanceIdSequence $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.content.Context;

        $r2 = new com.android.server.notification.NotificationRecordLoggerImpl;

        specialinvoke $r2.<com.android.server.notification.NotificationRecordLoggerImpl: void <init>()>();

        $r3 = new com.android.internal.logging.InstanceIdSequence;

        specialinvoke $r3.<com.android.internal.logging.InstanceIdSequence: void <init>(int)>(8192);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void <init>(android.content.Context,com.android.server.notification.NotificationRecordLogger,com.android.internal.logging.InstanceIdSequence)>(r1, $r2, $r3);

        return;
    }

    public void <init>(android.content.Context, com.android.server.notification.NotificationRecordLogger, com.android.internal.logging.InstanceIdSequence)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.Context r1;
        com.android.server.notification.NotificationRecordLogger r2;
        com.android.internal.logging.InstanceIdSequence r3;
        android.os.Binder $r4;
        android.os.HandlerThread $r5;
        android.util.SparseArray $r6;
        java.util.ArrayList $r7, $r9, $r12, $r14, $r16;
        java.lang.Object $r8;
        android.util.ArrayMap $r10, $r11, $r13, $r15;
        com.android.server.notification.ManagedServices$UserProfiles $r17;
        com.android.server.notification.NotificationManagerService$SavePolicyFileRunnable $r18;
        java.util.HashSet $r19;
        com.android.server.notification.NotificationManagerService$1 $r20;
        com.android.server.notification.NotificationManagerService$2 $r21;
        com.android.server.notification.NotificationManagerService$3 $r22;
        com.android.server.notification.NotificationManagerService$4 $r23;
        com.android.server.notification.NotificationManagerService$5 $r24;
        com.android.server.notification.NotificationManagerService$6 $r25;
        com.android.server.notification.NotificationManagerService$10 $r26;
        com.android.server.notification.NotificationManagerService$11 $r27;
        com.android.server.notification.NotificationManagerService$12 $r28;
        android.os.IBinder $r29;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.notification.NotificationRecordLogger;

        r3 := @parameter2: com.android.internal.logging.InstanceIdSequence;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r4 = new android.os.Binder;

        specialinvoke $r4.<android.os.Binder: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: android.os.IBinder mForegroundToken> = $r4;

        $r5 = new android.os.HandlerThread;

        specialinvoke $r5.<android.os.HandlerThread: void <init>(java.lang.String,int)>("ranker", 10);

        r0.<com.android.server.notification.NotificationManagerService: android.os.HandlerThread mRankingThread> = $r5;

        r0.<com.android.server.notification.NotificationManagerService: boolean mHasLight> = 1;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: java.util.List mEffectsSuppressors> = $r7;

        r0.<com.android.server.notification.NotificationManagerService: int mInterruptionFilter> = 0;

        r0.<com.android.server.notification.NotificationManagerService: boolean mScreenOn> = 1;

        r0.<com.android.server.notification.NotificationManagerService: boolean mInCallStateOffHook> = 0;

        r0.<com.android.server.notification.NotificationManagerService: android.os.Binder mCallNotificationToken> = null;

        $r8 = new java.lang.Object;

        specialinvoke $r8.<java.lang.Object: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList> = $r9;

        $r10 = new android.util.ArrayMap;

        specialinvoke $r10.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey> = $r10;

        $r11 = new android.util.ArrayMap;

        specialinvoke $r11.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mInlineReplyRecordsByKey> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications> = $r12;

        $r13 = new android.util.ArrayMap;

        specialinvoke $r13.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mAutobundledSummaries> = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue> = $r14;

        $r15 = new android.util.ArrayMap;

        specialinvoke $r15.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mSummaryByGroupKey> = $r15;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights> = $r16;

        $r17 = new com.android.server.notification.ManagedServices$UserProfiles;

        specialinvoke $r17.<com.android.server.notification.ManagedServices$UserProfiles: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles> = $r17;

        r0.<com.android.server.notification.NotificationManagerService: boolean mLockScreenAllowSecureNotifications> = 1;

        r0.<com.android.server.notification.NotificationManagerService: float mMaxPackageEnqueueRate> = 5.0F;

        $r18 = new com.android.server.notification.NotificationManagerService$SavePolicyFileRunnable;

        specialinvoke $r18.<com.android.server.notification.NotificationManagerService$SavePolicyFileRunnable: void <init>(com.android.server.notification.NotificationManagerService,com.android.server.notification.NotificationManagerService$1)>(r0, null);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$SavePolicyFileRunnable mSavePolicyFile> = $r18;

        $r19 = new java.util.HashSet;

        specialinvoke $r19.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: java.util.Set mMsgPkgsAllowedAsConvos> = $r19;

        $r20 = new com.android.server.notification.NotificationManagerService$1;

        specialinvoke $r20.<com.android.server.notification.NotificationManagerService$1: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationDelegate mNotificationDelegate> = $r20;

        $r21 = new com.android.server.notification.NotificationManagerService$2;

        specialinvoke $r21.<com.android.server.notification.NotificationManagerService$2: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mLocaleChangeReceiver> = $r21;

        $r22 = new com.android.server.notification.NotificationManagerService$3;

        specialinvoke $r22.<com.android.server.notification.NotificationManagerService$3: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mRestoreReceiver> = $r22;

        $r23 = new com.android.server.notification.NotificationManagerService$4;

        specialinvoke $r23.<com.android.server.notification.NotificationManagerService$4: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mNotificationTimeoutReceiver> = $r23;

        $r24 = new com.android.server.notification.NotificationManagerService$5;

        specialinvoke $r24.<com.android.server.notification.NotificationManagerService$5: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mPackageIntentReceiver> = $r24;

        $r25 = new com.android.server.notification.NotificationManagerService$6;

        specialinvoke $r25.<com.android.server.notification.NotificationManagerService$6: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mIntentReceiver> = $r25;

        $r26 = new com.android.server.notification.NotificationManagerService$10;

        specialinvoke $r26.<com.android.server.notification.NotificationManagerService$10: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: android.os.IBinder mService> = $r26;

        $r27 = new com.android.server.notification.NotificationManagerService$11;

        specialinvoke $r27.<com.android.server.notification.NotificationManagerService$11: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerInternal mInternalService> = $r27;

        $r28 = new com.android.server.notification.NotificationManagerService$12;

        specialinvoke $r28.<com.android.server.notification.NotificationManagerService$12: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ShortcutHelper$ShortcutListener mShortcutListener> = $r28;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecordLogger mNotificationRecordLogger> = r2;

        r0.<com.android.server.notification.NotificationManagerService: com.android.internal.logging.InstanceIdSequence mNotificationInstanceIdSequence> = r3;

        $r29 = <com.android.server.notification.NotificationManagerService: android.os.IBinder WHITELIST_TOKEN>;

        <android.app.Notification: android.os.IBinder processWhitelistToken> = $r29;

        return;
    }

    static android.util.AtomicFile access$100(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.util.AtomicFile $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.util.AtomicFile mPolicyFile>;

        return $r1;
    }

    static com.android.internal.logging.MetricsLogger access$1000(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.internal.logging.MetricsLogger $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.internal.logging.MetricsLogger mMetricsLogger>;

        return $r1;
    }

    static void access$10000(com.android.server.notification.NotificationManagerService, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleListenerInterruptionFilterChanged(int)>(i0);

        return;
    }

    static void access$10100(com.android.server.notification.NotificationManagerService, android.os.Message)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleRankingReconsideration(android.os.Message)>(r1);

        return;
    }

    static void access$10200(com.android.server.notification.NotificationManagerService, java.util.ArrayList, int, int, java.lang.String, boolean, java.lang.String, com.android.server.notification.NotificationManagerService$FlagChecker, boolean, int, boolean, int, java.lang.String, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList r1;
        int i0, i1, i2, i3;
        java.lang.String r2, r3, r5;
        boolean z0, z1, z2, z3;
        com.android.server.notification.NotificationManagerService$FlagChecker r4;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        r3 := @parameter6: java.lang.String;

        r4 := @parameter7: com.android.server.notification.NotificationManagerService$FlagChecker;

        z1 := @parameter8: boolean;

        i2 := @parameter9: int;

        z2 := @parameter10: boolean;

        i3 := @parameter11: int;

        r5 := @parameter12: java.lang.String;

        z3 := @parameter13: boolean;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelAllNotificationsByListLocked(java.util.ArrayList,int,int,java.lang.String,boolean,java.lang.String,com.android.server.notification.NotificationManagerService$FlagChecker,boolean,int,boolean,int,java.lang.String,boolean)>(r1, i0, i1, r2, z0, r3, r4, z1, i2, z2, i3, r5, z3);

        return;
    }

    static android.service.notification.NotificationRankingUpdate access$10300(com.android.server.notification.NotificationManagerService, com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        android.service.notification.NotificationRankingUpdate $r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        $r2 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: android.service.notification.NotificationRankingUpdate makeRankingUpdateLocked(com.android.server.notification.ManagedServices$ManagedServiceInfo)>(r1);

        return $r2;
    }

    static com.android.server.notification.NotificationManagerService$WorkerHandler access$1100(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        return $r1;
    }

    static com.android.server.uri.UriGrantsManagerInternal access$1200(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.uri.UriGrantsManagerInternal $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        return $r1;
    }

    static android.content.pm.IPackageManager access$1300(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.pm.IPackageManager $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager mPackageManager>;

        return $r1;
    }

    static void access$1400(com.android.server.notification.NotificationManagerService, android.os.IBinder, android.net.Uri, int, java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.IBinder r1;
        android.net.Uri r2;
        int i0, i1;
        java.lang.String r3;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: android.net.Uri;

        i0 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        i1 := @parameter5: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void grantUriPermission(android.os.IBinder,android.net.Uri,int,java.lang.String,int)>(r1, r2, i0, r3, i1);

        return;
    }

    static void access$1500(com.android.server.notification.NotificationManagerService, android.os.IBinder, int, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.IBinder r1;
        int i0;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void destroyPermissionOwner(android.os.IBinder,int,java.lang.String)>(r1, i0, r2);

        return;
    }

    static android.app.IActivityManager access$1600(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.app.IActivityManager $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.app.IActivityManager mAm>;

        return $r1;
    }

    static com.android.server.notification.NotificationManagerService$NotificationListeners access$1700(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        return $r1;
    }

    static com.android.server.notification.ConditionProviders access$1800(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ConditionProviders $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        return $r1;
    }

    static java.lang.String access$1900()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.notification.NotificationManagerService: java.lang.String ACTION_NOTIFICATION_TIMEOUT>;

        return $r0;
    }

    static void access$200(com.android.server.notification.NotificationManagerService, java.io.OutputStream, boolean, int) throws java.io.IOException
    {
        com.android.server.notification.NotificationManagerService r0;
        java.io.OutputStream r1;
        boolean z0;
        int i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.io.OutputStream;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void writePolicyXml(java.io.OutputStream,boolean,int)>(r1, z0, i0);

        return;
    }

    static com.android.server.notification.NotificationRecord access$2000(com.android.server.notification.NotificationManagerService, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;
        com.android.server.notification.NotificationRecord $r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord findNotificationByKeyLocked(java.lang.String)>(r1);

        return $r2;
    }

    static int access$2100()
    {
        int $i0;

        $i0 = <com.android.server.notification.NotificationManagerService: int MY_UID>;

        return $i0;
    }

    static int access$2200()
    {
        int $i0;

        $i0 = <com.android.server.notification.NotificationManagerService: int MY_PID>;

        return $i0;
    }

    static void access$2300(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void updateNotificationPulse()>();

        return;
    }

    static com.android.server.lights.LogicalLight access$2400(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.lights.LogicalLight $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.LogicalLight mNotificationLight>;

        return $r1;
    }

    static com.android.server.notification.ManagedServices$UserProfiles access$2500(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ManagedServices$UserProfiles $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles>;

        return $r1;
    }

    static com.android.server.notification.NotificationManagerService$SettingsObserver access$2600(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$SettingsObserver $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$SettingsObserver mSettingsObserver>;

        return $r1;
    }

    static float access$2700(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        float $f0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $f0 = r0.<com.android.server.notification.NotificationManagerService: float mMaxPackageEnqueueRate>;

        return $f0;
    }

    static float access$2702(com.android.server.notification.NotificationManagerService, float)
    {
        com.android.server.notification.NotificationManagerService r0;
        float f0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        f0 := @parameter1: float;

        r0.<com.android.server.notification.NotificationManagerService: float mMaxPackageEnqueueRate> = f0;

        return f0;
    }

    static com.android.server.notification.NotificationManagerService$Archive access$2800(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$Archive $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$Archive mArchive>;

        return $r1;
    }

    static void access$2900(com.android.server.notification.NotificationManagerService, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void sendRegisteredOnlyBroadcast(java.lang.String)>(r1);

        return;
    }

    static com.android.server.notification.NotificationHistoryManager access$300(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationHistoryManager $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationHistoryManager mHistoryManager>;

        return $r1;
    }

    static void access$3000(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void updateInterruptionFilterLocked()>();

        return;
    }

    static int access$3100(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $i0 = r0.<com.android.server.notification.NotificationManagerService: int mCallState>;

        return $i0;
    }

    static int access$3102(com.android.server.notification.NotificationManagerService, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        i0 := @parameter1: int;

        r0.<com.android.server.notification.NotificationManagerService: int mCallState> = i0;

        return i0;
    }

    static java.lang.String access$3200(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.android.server.notification.NotificationManagerService: java.lang.String callStateToString(int)>(i0);

        return $r0;
    }

    static int access$3400(com.android.server.notification.NotificationManagerService, int, java.util.List)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i1;
        java.util.List r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        $i1 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: int pullNotificationStates(int,java.util.List)>(i0, r1);

        return $i1;
    }

    static void access$3500(com.android.server.notification.NotificationManagerService, int, java.lang.String, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void createAutoGroupSummary(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        return;
    }

    static void access$3600(com.android.server.notification.NotificationManagerService, int, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void clearAutogroupSummaryLocked(int,java.lang.String)>(i0, r1);

        return;
    }

    static android.app.ActivityManager access$3700(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.app.ActivityManager $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.app.ActivityManager mActivityManager>;

        return $r1;
    }

    static com.android.internal.compat.IPlatformCompat access$3800(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.internal.compat.IPlatformCompat $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.internal.compat.IPlatformCompat mPlatformCompat>;

        return $r1;
    }

    static com.android.server.wm.WindowManagerInternal access$3900(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.wm.WindowManagerInternal $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        return $r1;
    }

    static com.android.server.notification.toast.ToastRecord access$4000(com.android.server.notification.NotificationManagerService, int, int, java.lang.String, android.os.IBinder, java.lang.CharSequence, android.app.ITransientNotification, int, android.os.Binder, int, android.app.ITransientNotificationCallback)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2, i3;
        java.lang.String r1;
        android.os.IBinder r2;
        java.lang.CharSequence r3;
        android.app.ITransientNotification r4;
        android.os.Binder r5;
        android.app.ITransientNotificationCallback r6;
        com.android.server.notification.toast.ToastRecord $r7;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.os.IBinder;

        r3 := @parameter5: java.lang.CharSequence;

        r4 := @parameter6: android.app.ITransientNotification;

        i2 := @parameter7: int;

        r5 := @parameter8: android.os.Binder;

        i3 := @parameter9: int;

        r6 := @parameter10: android.app.ITransientNotificationCallback;

        $r7 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.toast.ToastRecord getToastRecord(int,int,java.lang.String,android.os.IBinder,java.lang.CharSequence,android.app.ITransientNotification,int,android.os.Binder,int,android.app.ITransientNotificationCallback)>(i0, i1, r1, r2, r3, r4, i2, r5, i3, r6);

        return $r7;
    }

    static boolean access$402(com.android.server.notification.NotificationManagerService, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.notification.NotificationManagerService: boolean mDisableNotificationEffects> = z0;

        return z0;
    }

    static void access$4100(com.android.server.notification.NotificationManagerService, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void keepProcessAliveForToastIfNeededLocked(int)>(i0);

        return;
    }

    static com.android.server.wm.ActivityTaskManagerInternal access$4200(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.wm.ActivityTaskManagerInternal $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtm>;

        return $r1;
    }

    static void access$4300(com.android.server.notification.NotificationManagerService, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSystemOrSameApp(java.lang.String)>(r1);

        return;
    }

    static void access$4400(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSystem()>();

        return;
    }

    static void access$4500(com.android.server.notification.NotificationManagerService, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSystemOrSystemUiOrShell(java.lang.String)>(r1);

        return;
    }

    static void access$4600(com.android.server.notification.NotificationManagerService, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSameApp(java.lang.String)>(r1);

        return;
    }

    static void access$4700(com.android.server.notification.NotificationManagerService, java.lang.String, int, android.app.NotificationChannelGroup, boolean, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;
        int i0;
        android.app.NotificationChannelGroup r2;
        boolean z0, z1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.app.NotificationChannelGroup;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void createNotificationChannelGroup(java.lang.String,int,android.app.NotificationChannelGroup,boolean,boolean)>(r1, i0, r2, z0, z1);

        return;
    }

    static boolean access$4800(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isCallerIsSystemOrSysemUiOrShell()>();

        return $z0;
    }

    static android.content.pm.PackageManager access$4900(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.pm.PackageManager $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.PackageManager mPackageManagerClient>;

        return $r1;
    }

    static java.lang.String access$500(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        java.lang.String $r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        $r2 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: java.lang.String disableNotificationEffects(com.android.server.notification.NotificationRecord)>(r1);

        return $r2;
    }

    static void access$5000(com.android.server.notification.NotificationManagerService, java.lang.String, int, android.app.NotificationChannel, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;
        int i0;
        android.app.NotificationChannel r2;
        boolean z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.app.NotificationChannel;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void updateNotificationChannelInt(java.lang.String,int,android.app.NotificationChannel,boolean)>(r1, i0, r2, z0);

        return;
    }

    static com.android.server.notification.ShortcutHelper access$5100(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ShortcutHelper $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ShortcutHelper mShortcutHelper>;

        return $r1;
    }

    static void access$5200(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSystemOrSystemUiOrShell()>();

        return;
    }

    static android.app.AppOpsManager access$5300(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.app.AppOpsManager $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.app.AppOpsManager mAppOps>;

        return $r1;
    }

    static boolean access$5400(com.android.server.notification.NotificationManagerService, android.service.notification.StatusBarNotification, com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.service.notification.StatusBarNotification r1;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r2;
        boolean $z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: android.service.notification.StatusBarNotification;

        r2 := @parameter2: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isVisibleToListener(android.service.notification.StatusBarNotification,com.android.server.notification.ManagedServices$ManagedServiceInfo)>(r1, r2);

        return $z0;
    }

    static boolean access$5500(com.android.server.notification.NotificationManagerService, com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean removeDisabledHints(com.android.server.notification.ManagedServices$ManagedServiceInfo)>(r1);

        return $z0;
    }

    static void access$5600(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void updateListenerHintsLocked()>();

        return;
    }

    static void access$5700(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void updateEffectsSuppressorLocked()>();

        return;
    }

    static void access$5800(com.android.server.notification.NotificationManagerService, com.android.server.notification.ManagedServices$ManagedServiceInfo, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        int i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void addDisabledHints(com.android.server.notification.ManagedServices$ManagedServiceInfo,int)>(r1, i0);

        return;
    }

    static boolean access$5900(com.android.server.notification.NotificationManagerService, com.android.server.notification.ManagedServices$ManagedServiceInfo, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean removeDisabledHints(com.android.server.notification.ManagedServices$ManagedServiceInfo,int)>(r1, i0);

        return $z0;
    }

    static void access$600(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void exitIdle()>();

        return;
    }

    static int access$6000(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $i0 = r0.<com.android.server.notification.NotificationManagerService: int mListenerHints>;

        return $i0;
    }

    static int access$6100(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $i0 = r0.<com.android.server.notification.NotificationManagerService: int mInterruptionFilter>;

        return $i0;
    }

    static android.app.admin.DevicePolicyManagerInternal access$6200(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.app.admin.DevicePolicyManagerInternal $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.app.admin.DevicePolicyManagerInternal mDpm>;

        return $r1;
    }

    static void access$6300(com.android.server.notification.NotificationManagerService, java.io.PrintWriter, com.android.server.notification.NotificationManagerService$DumpFilter)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.io.PrintWriter r1;
        com.android.server.notification.NotificationManagerService$DumpFilter r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: com.android.server.notification.NotificationManagerService$DumpFilter;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void dumpJson(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(r1, r2);

        return;
    }

    static void access$6400(com.android.server.notification.NotificationManagerService, java.io.PrintWriter, com.android.server.notification.NotificationManagerService$DumpFilter)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.io.PrintWriter r1;
        com.android.server.notification.NotificationManagerService$DumpFilter r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: com.android.server.notification.NotificationManagerService$DumpFilter;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void dumpRemoteViewStats(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(r1, r2);

        return;
    }

    static void access$6500(com.android.server.notification.NotificationManagerService, java.io.FileDescriptor, com.android.server.notification.NotificationManagerService$DumpFilter)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.io.FileDescriptor r1;
        com.android.server.notification.NotificationManagerService$DumpFilter r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: com.android.server.notification.NotificationManagerService$DumpFilter;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void dumpProto(java.io.FileDescriptor,com.android.server.notification.NotificationManagerService$DumpFilter)>(r1, r2);

        return;
    }

    static void access$6600(com.android.server.notification.NotificationManagerService, java.io.PrintWriter, com.android.server.notification.NotificationManagerService$DumpFilter)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.io.PrintWriter r1;
        com.android.server.notification.NotificationManagerService$DumpFilter r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: com.android.server.notification.NotificationManagerService$DumpFilter;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void dumpNotificationRecords(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(r1, r2);

        return;
    }

    static java.util.List access$6700(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: java.util.List mEffectsSuppressors>;

        return $r1;
    }

    static void access$6800(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSystemOrShell()>();

        return;
    }

    static com.android.internal.util.function.TriPredicate access$6900(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.internal.util.function.TriPredicate $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.internal.util.function.TriPredicate mAllowedManagedServicePackages>;

        return $r1;
    }

    static com.android.server.notification.NotificationRecordLogger access$700(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecordLogger $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecordLogger mNotificationRecordLogger>;

        return $r1;
    }

    static android.os.UserManager access$7000(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.UserManager $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.os.UserManager mUm>;

        return $r1;
    }

    static void access$7100(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord, android.service.notification.Adjustment)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        android.service.notification.Adjustment r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        r2 := @parameter2: android.service.notification.Adjustment;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void applyAdjustment(com.android.server.notification.NotificationRecord,android.service.notification.Adjustment)>(r1, r2);

        return;
    }

    static boolean access$7200(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $z0 = r0.<com.android.server.notification.NotificationManagerService: boolean mLockScreenAllowSecureNotifications>;

        return $z0;
    }

    static boolean access$7202(com.android.server.notification.NotificationManagerService, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.notification.NotificationManagerService: boolean mLockScreenAllowSecureNotifications> = z0;

        return z0;
    }

    static com.android.server.notification.NotificationUsageStats access$7300(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationUsageStats $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        return $r1;
    }

    static void access$7400(com.android.server.notification.NotificationManagerService, java.lang.String, int, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void onConversationRemovedInternal(java.lang.String,int,java.lang.String)>(r1, i0, r2);

        return;
    }

    static java.util.List access$7500(com.android.server.notification.NotificationManagerService, java.util.ArrayList, java.lang.String, java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList r1;
        java.lang.String r2, r3;
        int i0, i1;
        java.util.List $r4;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        $r4 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: java.util.List findNotificationsByListLocked(java.util.ArrayList,java.lang.String,java.lang.String,int,int)>(r1, r2, r3, i0, i1);

        return $r4;
    }

    static com.android.server.notification.NotificationRecord access$7600(com.android.server.notification.NotificationManagerService, java.util.ArrayList, java.lang.String, java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList r1;
        java.lang.String r2, r3;
        int i0, i1;
        com.android.server.notification.NotificationRecord $r4;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        $r4 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord findNotificationByListLocked(java.util.ArrayList,java.lang.String,java.lang.String,int,int)>(r1, r2, r3, i0, i1);

        return $r4;
    }

    static com.android.server.notification.NotificationRecord access$7700(com.android.server.notification.NotificationManagerService, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;
        com.android.server.notification.NotificationRecord $r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord findInCurrentAndSnoozedNotificationByKeyLocked(java.lang.String)>(r1);

        return $r2;
    }

    static boolean access$7800(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean removeFromNotificationListsLocked(com.android.server.notification.NotificationRecord)>(r1);

        return $z0;
    }

    static void access$7900(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord, boolean, int, boolean, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        boolean z0, z1;
        int i0;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        z1 := @parameter4: boolean;

        r2 := @parameter5: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelNotificationLocked(com.android.server.notification.NotificationRecord,boolean,int,boolean,java.lang.String)>(r1, z0, i0, z1, r2);

        return;
    }

    static com.android.server.notification.NotificationManagerService$NotificationAssistants access$800(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        return $r1;
    }

    static java.util.List access$8100(com.android.server.notification.NotificationManagerService, java.lang.String, java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r2;
        int i0, i1;
        java.util.List $r3;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r3 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: java.util.List findEnqueuedNotificationsForCriteria(java.lang.String,java.lang.String,int,int)>(r1, r2, i0, i1);

        return $r3;
    }

    static void access$8200(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord, boolean, int, int, int, boolean, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        boolean z0, z1;
        int i0, i1, i2;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        z1 := @parameter6: boolean;

        r2 := @parameter7: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelNotificationLocked(com.android.server.notification.NotificationRecord,boolean,int,int,int,boolean,java.lang.String)>(r1, z0, i0, i1, i2, z1, r2);

        return;
    }

    static void access$8300(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord, int, int, java.lang.String, boolean, com.android.server.notification.NotificationManagerService$FlagChecker, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        int i0, i1, i2;
        java.lang.String r2;
        boolean z0;
        com.android.server.notification.NotificationManagerService$FlagChecker r3;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        r3 := @parameter6: com.android.server.notification.NotificationManagerService$FlagChecker;

        i2 := @parameter7: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelGroupChildrenLocked(com.android.server.notification.NotificationRecord,int,int,java.lang.String,boolean,com.android.server.notification.NotificationManagerService$FlagChecker,int)>(r1, i0, i1, r2, z0, r3, i2);

        return;
    }

    static void access$8400(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        boolean z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void updateNotificationBubbleFlags(com.android.server.notification.NotificationRecord,boolean)>(r1, z0);

        return;
    }

    static void access$8500(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord, com.android.server.notification.NotificationRecord, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1, r2;
        int i0, i1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        r2 := @parameter2: com.android.server.notification.NotificationRecord;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleGroupedNotificationLocked(com.android.server.notification.NotificationRecord,com.android.server.notification.NotificationRecord,int,int)>(r1, r2, i0, i1);

        return;
    }

    static boolean access$8700(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isBlocked(com.android.server.notification.NotificationRecord)>(r1);

        return $z0;
    }

    static com.android.internal.logging.InstanceIdSequence access$8800(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.internal.logging.InstanceIdSequence $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.internal.logging.InstanceIdSequence mNotificationInstanceIdSequence>;

        return $r1;
    }

    static boolean access$8900(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isCritical(com.android.server.notification.NotificationRecord)>(r1);

        return $z0;
    }

    static void access$900(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void clearLightsLocked()>();

        return;
    }

    static boolean access$9000(com.android.server.notification.NotificationManagerService, android.service.notification.StatusBarNotification)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.service.notification.StatusBarNotification r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: android.service.notification.StatusBarNotification;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean hasAutoGroupSummaryLocked(android.service.notification.StatusBarNotification)>(r1);

        return $z0;
    }

    static com.android.server.notification.GroupHelper access$9100(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.GroupHelper $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.GroupHelper mGroupHelper>;

        return $r1;
    }

    static android.os.Binder access$9200(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.Binder $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.os.Binder mCallNotificationToken>;

        return $r1;
    }

    static android.os.Binder access$9202(com.android.server.notification.NotificationManagerService, android.os.Binder)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.Binder r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: android.os.Binder;

        r0.<com.android.server.notification.NotificationManagerService: android.os.Binder mCallNotificationToken> = r1;

        return r1;
    }

    static android.net.Uri access$9300(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.net.Uri $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.net.Uri mInCallNotificationUri>;

        return $r1;
    }

    static android.media.AudioAttributes access$9400(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.media.AudioAttributes $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioAttributes mInCallNotificationAudioAttributes>;

        return $r1;
    }

    static float access$9500(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        float $f0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $f0 = r0.<com.android.server.notification.NotificationManagerService: float mInCallNotificationVolume>;

        return $f0;
    }

    static void access$9600(com.android.server.notification.NotificationManagerService, com.android.server.notification.toast.ToastRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.toast.ToastRecord r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.toast.ToastRecord;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleDurationReached(com.android.server.notification.toast.ToastRecord)>(r1);

        return;
    }

    static void access$9700(com.android.server.notification.NotificationManagerService, com.android.server.notification.toast.ToastRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.toast.ToastRecord r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.toast.ToastRecord;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleKillTokenTimeout(com.android.server.notification.toast.ToastRecord)>(r1);

        return;
    }

    static void access$9800(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleSendRankingUpdate()>();

        return;
    }

    static void access$9900(com.android.server.notification.NotificationManagerService, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleListenerHintsChanged(int)>(i0);

        return;
    }

    private void addAutoGroupAdjustment(com.android.server.notification.NotificationRecord, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        java.lang.String r2, $r7, $r8;
        android.os.Bundle $r4;
        android.service.notification.Adjustment $r5;
        android.service.notification.StatusBarNotification $r6, $r9;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        r2 := @parameter1: java.lang.String;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        virtualinvoke $r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("key_group_key", r2);

        $r5 = new android.service.notification.Adjustment;

        $r6 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r7 = virtualinvoke $r6.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r8 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $r9 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i0 = virtualinvoke $r9.<android.service.notification.StatusBarNotification: int getUserId()>();

        specialinvoke $r5.<android.service.notification.Adjustment: void <init>(java.lang.String,java.lang.String,android.os.Bundle,java.lang.CharSequence,int)>($r7, $r8, $r4, "", $i0);

        virtualinvoke r1.<com.android.server.notification.NotificationRecord: void addAdjustment(android.service.notification.Adjustment)>($r5);

        return;
    }

    private void addDisabledHint(com.android.server.notification.ManagedServices$ManagedServiceInfo, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        int i0, $i1;
        android.util.SparseArray $r2, $r3, $r8;
        java.lang.Object $r4;
        android.content.ComponentName $r5;
        android.util.ArraySet $r6, $r7;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if $i1 >= 0 goto label1;

        $r8 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        $r7 = new android.util.ArraySet;

        specialinvoke $r7.<android.util.ArraySet: void <init>()>();

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r7);

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (android.util.ArraySet) $r4;

        $r5 = r1.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        virtualinvoke $r6.<android.util.ArraySet: boolean add(java.lang.Object)>($r5);

        return;
    }

    private void addDisabledHints(com.android.server.notification.ManagedServices$ManagedServiceInfo, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        int i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        i0 := @parameter1: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void addDisabledHint(com.android.server.notification.ManagedServices$ManagedServiceInfo,int)>(r1, 1);

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void addDisabledHint(com.android.server.notification.ManagedServices$ManagedServiceInfo,int)>(r1, 2);

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void addDisabledHint(com.android.server.notification.ManagedServices$ManagedServiceInfo,int)>(r1, 4);

     label3:
        return;
    }

    private boolean allowAssistant(int, android.content.ComponentName)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        android.content.ComponentName r1;
        android.util.ArraySet r2;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r3;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.ComponentName;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        r2 = virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$NotificationAssistants: android.util.ArraySet queryPackageForServices(java.lang.String,int,int)>(null, 786432, i0);

        if r1 == null goto label1;

        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void setNotificationAssistantAccessGrantedForUserInternal(android.content.ComponentName,int,boolean)>(r1, i0, 1);

        return 1;

     label1:
        return 0;
    }

    private void allowDndPackage(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.app.INotificationManager $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r3 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.app.INotificationManager getBinderService()>();

        interfaceinvoke $r1.<android.app.INotificationManager: void setNotificationPolicyAccessGranted(java.lang.String,boolean)>(r3, 1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.RemoteException: void printStackTrace()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void allowNotificationListener(int, android.content.ComponentName)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        android.app.INotificationManager $r1;
        android.os.RemoteException $r2;
        android.content.ComponentName r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        r3 := @parameter1: android.content.ComponentName;

     label1:
        $r1 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.app.INotificationManager getBinderService()>();

        interfaceinvoke $r1.<android.app.INotificationManager: void setNotificationListenerAccessGrantedForUser(android.content.ComponentName,int,boolean)>(r3, i0, 1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.RemoteException: void printStackTrace()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void applyAdjustment(com.android.server.notification.NotificationRecord, android.service.notification.Adjustment)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        android.service.notification.Adjustment r2;
        android.os.Bundle r3, $r6;
        java.util.Iterator r4, r15;
        java.lang.String r5, $r11;
        java.util.ArrayList $r8;
        java.util.Set $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r10, $r12;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r13;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        r2 := @parameter1: android.service.notification.Adjustment;

        if r1 != null goto label1;

        return;

     label1:
        $r6 = virtualinvoke r2.<android.service.notification.Adjustment: android.os.Bundle getSignals()>();

        if $r6 == null goto label7;

        r3 = virtualinvoke r2.<android.service.notification.Adjustment: android.os.Bundle getSignals()>();

        staticinvoke <android.os.Bundle: android.os.Bundle setDefusable(android.os.Bundle,boolean)>(r3, 1);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = virtualinvoke r3.<android.os.Bundle: java.util.Set keySet()>();

        r4 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r12;

        $r13 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        $z2 = virtualinvoke $r13.<com.android.server.notification.NotificationManagerService$NotificationAssistants: boolean isAdjustmentAllowed(java.lang.String)>(r5);

        if $z2 != 0 goto label3;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r5);

     label3:
        goto label2;

     label4:
        r15 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r10 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.String) $r10;

        virtualinvoke r3.<android.os.Bundle: void remove(java.lang.String)>($r11);

        goto label5;

     label6:
        virtualinvoke r1.<com.android.server.notification.NotificationRecord: void addAdjustment(android.service.notification.Adjustment)>(r2);

     label7:
        return;
    }

    private void applyZenModeLocked(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        com.android.server.notification.ZenModeHelper $r2, $r3;
        boolean $z0, $z2;
        android.app.NotificationManager$Policy $r4;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $z0 = virtualinvoke $r2.<com.android.server.notification.ZenModeHelper: boolean shouldIntercept(com.android.server.notification.NotificationRecord)>(r1);

        virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean setIntercepted(boolean)>($z0);

        $z2 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean isIntercepted()>();

        if $z2 == 0 goto label1;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $r4 = virtualinvoke $r3.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy getConsolidatedNotificationPolicy()>();

        $i0 = $r4.<android.app.NotificationManager$Policy: int suppressedVisualEffects>;

        virtualinvoke r1.<com.android.server.notification.NotificationRecord: void setSuppressedVisualEffects(int)>($i0);

        goto label2;

     label1:
        virtualinvoke r1.<com.android.server.notification.NotificationRecord: void setSuppressedVisualEffects(int)>(0);

     label2:
        return;
    }

    private int calculateHints()
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i1, i2, i3, i4;
        android.util.SparseArray $r1, $r2, $r3;
        java.lang.Object $r4;
        android.util.ArraySet $r5;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i2 = 0;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        $i1 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label3;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int keyAt(int)>(i3);

        i4 = i2;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r5 = (android.util.ArraySet) $r4;

        $z0 = virtualinvoke $r5.<android.util.ArraySet: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        i4 = i2 | i0;

     label2:
        i3 = i3 + -1;

        i2 = i4;

        goto label1;

     label3:
        return i2;
    }

    private long calculateSuppressedEffects()
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i1, $i2, $i3;
        long l4, l5, l6;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: int calculateHints()>();

        l4 = 0L;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        l4 = 0L | 3L;

     label1:
        l5 = l4;

        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        l5 = l4 | 1L;

     label2:
        l6 = l5;

        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        l6 = l5 | 2L;

     label3:
        return l6;
    }

    private static java.lang.String callStateToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CALL_STATE_UNKNOWN_");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        return "CALL_STATE_OFFHOOK";

     label2:
        return "CALL_STATE_RINGING";

     label3:
        return "CALL_STATE_IDLE";
    }

    private void cancelAllNotificationsByListLocked(java.util.ArrayList, int, int, java.lang.String, boolean, java.lang.String, com.android.server.notification.NotificationManagerService$FlagChecker, boolean, int, boolean, int, java.lang.String, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList r1, $r14, r19, r20;
        int i0, i1, i2, $i3, i4, i5, i6, $i7, i8, i9;
        java.lang.String r2, r3, r5, $r12, $r16, $r18;
        boolean z0, z1, z2, z3, $z4, $z6, $z7, $z8, $z9;
        com.android.server.notification.NotificationManagerService$FlagChecker r4;
        com.android.server.notification.NotificationRecord r6, $r8;
        java.lang.Object $r7, $r9;
        android.util.ArrayMap $r11;
        android.app.NotificationChannel $r15;
        android.service.notification.StatusBarNotification $r17;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r3 := @parameter5: java.lang.String;

        r4 := @parameter6: com.android.server.notification.NotificationManagerService$FlagChecker;

        z1 := @parameter7: boolean;

        i4 := @parameter8: int;

        z2 := @parameter9: boolean;

        i2 := @parameter10: int;

        r5 := @parameter11: java.lang.String;

        z3 := @parameter12: boolean;

        i5 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r19 = null;

        i6 = i5 + -1;

     label01:
        if i6 < 0 goto label10;

        $r9 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r6 = (com.android.server.notification.NotificationRecord) $r9;

        if z1 == 0 goto label02;

        $z8 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean notificationMatchesCurrentProfiles(com.android.server.notification.NotificationRecord,int)>(r6, i4);

        if $z8 != 0 goto label03;

        goto label09;

     label02:
        $z4 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean notificationMatchesUserId(com.android.server.notification.NotificationRecord,int)>(r6, i4);

        if $z4 != 0 goto label03;

        goto label09;

     label03:
        if z0 == 0 goto label04;

        if r2 != null goto label04;

        $i3 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: int getUserId()>();

        if $i3 != -1 goto label04;

        goto label09;

     label04:
        $i7 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: int getFlags()>();

        $z9 = interfaceinvoke r4.<com.android.server.notification.NotificationManagerService$FlagChecker: boolean apply(int)>($i7);

        if $z9 != 0 goto label05;

        goto label09;

     label05:
        if r2 == null goto label06;

        $r17 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r18 = virtualinvoke $r17.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z7 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z7 != 0 goto label06;

        goto label09;

     label06:
        if r3 == null goto label07;

        $r15 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: android.app.NotificationChannel getChannel()>();

        $r16 = virtualinvoke $r15.<android.app.NotificationChannel: java.lang.String getId()>();

        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z6 != 0 goto label07;

        goto label09;

     label07:
        r20 = r19;

        if r19 != null goto label08;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r20 = $r14;

     label08:
        virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(i6);

        $r11 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r12 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r12);

        virtualinvoke r6.<com.android.server.notification.NotificationRecord: void recordDismissalSentiment(int)>(1);

        virtualinvoke r20.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelNotificationLocked(com.android.server.notification.NotificationRecord,boolean,int,boolean,java.lang.String)>(r6, z2, i2, z3, r5);

        r19 = r20;

     label09:
        i6 = i6 + -1;

        goto label01;

     label10:
        if r19 == null goto label13;

        i8 = virtualinvoke r19.<java.util.ArrayList: int size()>();

        i9 = 0;

     label11:
        if i9 >= i8 goto label12;

        $r7 = virtualinvoke r19.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r8 = (com.android.server.notification.NotificationRecord) $r7;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelGroupChildrenLocked(com.android.server.notification.NotificationRecord,int,int,java.lang.String,boolean,com.android.server.notification.NotificationManagerService$FlagChecker,int)>($r8, i0, i1, r5, 0, r4, i2);

        i9 = i9 + 1;

        goto label11;

     label12:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void updateLightsLocked()>();

     label13:
        return;
    }

    private void cancelGroupChildrenByListLocked(java.util.ArrayList, com.android.server.notification.NotificationRecord, int, int, java.lang.String, boolean, boolean, com.android.server.notification.NotificationManagerService$FlagChecker, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList r1;
        com.android.server.notification.NotificationRecord r2, r6;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.String r3, r5, $r11, $r12, $r14, $r17;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        com.android.server.notification.NotificationManagerService$FlagChecker r4;
        android.service.notification.StatusBarNotification r7, $r8;
        java.lang.Object $r9;
        android.app.Notification $r10;
        android.app.NotificationChannel $r13;
        android.util.ArrayMap $r16;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: com.android.server.notification.NotificationRecord;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        r4 := @parameter7: com.android.server.notification.NotificationManagerService$FlagChecker;

        i2 := @parameter8: int;

        $r8 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r5 = virtualinvoke $r8.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        i3 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: int getUserId()>();

        $i4 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i9 = $i4 - 1;

     label1:
        if i9 < 0 goto label9;

        $r9 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r6 = (com.android.server.notification.NotificationRecord) $r9;

        r7 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $z2 = virtualinvoke r7.<android.service.notification.StatusBarNotification: boolean isGroup()>();

        if $z2 == 0 goto label8;

        $r10 = virtualinvoke r7.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $z3 = virtualinvoke $r10.<android.app.Notification: boolean isGroupSummary()>();

        if $z3 != 0 goto label8;

        $r11 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: java.lang.String getGroupKey()>();

        $r12 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: java.lang.String getGroupKey()>();

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z4 == 0 goto label7;

        $i5 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: int getFlags()>();

        $i6 = $i5 & 64;

        if $i6 != 0 goto label6;

        if r4 == null goto label3;

        $i8 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: int getFlags()>();

        $z6 = interfaceinvoke r4.<com.android.server.notification.NotificationManagerService$FlagChecker: boolean apply(int)>($i8);

        if $z6 == 0 goto label2;

        goto label3;

     label2:
        goto label8;

     label3:
        $r13 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: android.app.NotificationChannel getChannel()>();

        $z5 = virtualinvoke $r13.<android.app.NotificationChannel: boolean isImportantConversation()>();

        if $z5 == 0 goto label5;

        if i2 == 2 goto label4;

        goto label5;

     label4:
        goto label8;

     label5:
        $i7 = virtualinvoke r7.<android.service.notification.StatusBarNotification: int getId()>();

        $r14 = virtualinvoke r7.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        staticinvoke <com.android.server.EventLogTags: void writeNotificationCancel(int,int,java.lang.String,int,java.lang.String,int,int,int,int,java.lang.String)>(i0, i1, r5, $i7, $r14, i3, 0, 0, 12, r3);

        virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(i9);

        $r16 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r17 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r17);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelNotificationLocked(com.android.server.notification.NotificationRecord,boolean,int,boolean,java.lang.String)>(r6, z0, 12, z1, r3);

        goto label8;

     label6:
        goto label8;

     label7:
        goto label8;

     label8:
        i9 = i9 + -1;

        goto label1;

     label9:
        return;
    }

    private void cancelGroupChildrenLocked(com.android.server.notification.NotificationRecord, int, int, java.lang.String, boolean, com.android.server.notification.NotificationManagerService$FlagChecker, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        int i0, i1, i2;
        boolean z0, $z1, $z2;
        com.android.server.notification.NotificationManagerService$FlagChecker r2;
        android.app.Notification $r3;
        android.service.notification.StatusBarNotification $r4;
        java.lang.String $r5, $r10, $r12, r13;
        java.util.ArrayList $r6, $r7;
        java.lang.StringBuilder $r8;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r13 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r2 := @parameter5: com.android.server.notification.NotificationManagerService$FlagChecker;

        i2 := @parameter6: int;

        $r3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $z1 = virtualinvoke $r3.<android.app.Notification: boolean isGroupSummary()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r5 = virtualinvoke $r4.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        if $r5 != null goto label3;

        $z2 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z2 == 0 goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package for group summary: ");

        $r10 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r12);

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelGroupChildrenByListLocked(java.util.ArrayList,com.android.server.notification.NotificationRecord,int,int,java.lang.String,boolean,boolean,com.android.server.notification.NotificationManagerService$FlagChecker,int)>($r6, r1, i0, i1, r13, z0, 1, r2, i2);

        $r7 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelGroupChildrenByListLocked(java.util.ArrayList,com.android.server.notification.NotificationRecord,int,int,java.lang.String,boolean,boolean,com.android.server.notification.NotificationManagerService$FlagChecker,int)>($r7, r1, i0, i1, r13, z0, 0, r2, i2);

        return;
    }

    private void cancelNotificationLocked(com.android.server.notification.NotificationRecord, boolean, int, int, int, boolean, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0, z1, $z2, $z3, $z6, $z7;
        int i0, i1, i2, $i3, $i4, $i8, $i10, $i11, $i12;
        java.lang.String r1, r2, $r11, $r13, $r16, $r18, $r42, $r44, $r50, $r54, r57;
        android.service.notification.NotificationStats $r3, $r5, $r28;
        com.android.server.notification.NotificationRecordLogger $r4;
        java.lang.Integer $r6, $r8, $r63;
        android.metrics.LogMaker $r7, $r68, $r69, r70;
        android.service.notification.StatusBarNotification $r10, $r12, $r15, $r41, $r62, $r67;
        java.lang.Object $r14, $r32, $r59, $r64;
        android.util.ArrayMap $r19, $r58, $r61, r65;
        com.android.server.notification.NotificationUsageStats $r21, $r56;
        android.app.Notification $r22, $r31;
        android.graphics.drawable.Icon $r23;
        java.util.ArrayList $r24;
        android.os.Vibrator $r25;
        android.media.AudioManager $r26;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r27;
        com.android.server.notification.NotificationManagerService$14 $r29;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r30;
        android.app.ActivityManagerInternal $r33;
        android.content.IIntentSender $r34;
        android.os.IBinder $r35;
        java.lang.Throwable $r36, $r37;
        android.app.PendingIntent$CanceledException $r38;
        java.lang.StringBuilder $r39;
        android.os.RemoteException $r45;
        com.android.server.notification.NotificationRecord r46, r60;
        android.app.PendingIntent r47;
        long l6, l7, l9;
        android.media.IRingtonePlayer r51;
        com.android.server.notification.NotificationManagerService$Archive $r66;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r46 := @parameter0: com.android.server.notification.NotificationRecord;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z1 := @parameter5: boolean;

        r1 := @parameter6: java.lang.String;

        r2 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void recordCallerLocked(com.android.server.notification.NotificationRecord)>(r46);

        $r3 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: android.service.notification.NotificationStats getStats()>();

        $i3 = virtualinvoke $r3.<android.service.notification.NotificationStats: int getDismissalSurface()>();

        if $i3 != -1 goto label01;

        virtualinvoke r46.<com.android.server.notification.NotificationRecord: void recordDismissalSurface(int)>(0);

     label01:
        if z0 == 0 goto label05;

        $r31 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        r47 = $r31.<android.app.Notification: android.app.PendingIntent deleteIntent>;

        if r47 == null goto label05;

     label02:
        $r32 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        $r33 = (android.app.ActivityManagerInternal) $r32;

        $r34 = virtualinvoke r47.<android.app.PendingIntent: android.content.IIntentSender getTarget()>();

        $r35 = <com.android.server.notification.NotificationManagerService: android.os.IBinder WHITELIST_TOKEN>;

        virtualinvoke $r33.<android.app.ActivityManagerInternal: void clearPendingIntentAllowBgActivityStarts(android.content.IIntentSender,android.os.IBinder)>($r34, $r35);

        virtualinvoke r47.<android.app.PendingIntent: void send()>();

     label03:
        goto label05;

     label04:
        $r38 := @caughtexception;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("canceled PendingIntent for ");

        $r41 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r42 = virtualinvoke $r41.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", $r44, $r38);

     label05:
        if z1 == 0 goto label20;

        $r22 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $r23 = virtualinvoke $r22.<android.app.Notification: android.graphics.drawable.Icon getSmallIcon()>();

        if $r23 == null goto label07;

        if i0 == 18 goto label06;

        r46.<com.android.server.notification.NotificationRecord: boolean isCanceled> = 1;

     label06:
        $r27 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        $r28 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: android.service.notification.NotificationStats getStats()>();

        virtualinvoke $r27.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyRemovedLocked(com.android.server.notification.NotificationRecord,int,android.service.notification.NotificationStats)>(r46, i0, $r28);

        $r30 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r29 = new com.android.server.notification.NotificationManagerService$14;

        specialinvoke $r29.<com.android.server.notification.NotificationManagerService$14: void <init>(com.android.server.notification.NotificationManagerService,com.android.server.notification.NotificationRecord)>(r0, r46);

        virtualinvoke $r30.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r29);

     label07:
        $r50 = r0.<com.android.server.notification.NotificationManagerService: java.lang.String mSoundNotificationKey>;

        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r50);

        if $z6 == 0 goto label15;

        r0.<com.android.server.notification.NotificationManagerService: java.lang.String mSoundNotificationKey> = null;

        l6 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label08:
        $r26 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        r51 = virtualinvoke $r26.<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()>();

     label09:
        if r51 == null goto label14;

     label10:
        interfaceinvoke r51.<android.media.IRingtonePlayer: void stopAsync()>();

     label11:
        goto label14;

     label12:
        $r37 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l6);

        throw $r37;

     label13:
        $r45 := @caughtexception;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l6);

     label15:
        $r54 = r0.<com.android.server.notification.NotificationManagerService: java.lang.String mVibrateNotificationKey>;

        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r54);

        if $z7 == 0 goto label19;

        r0.<com.android.server.notification.NotificationManagerService: java.lang.String mVibrateNotificationKey> = null;

        l7 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label16:
        $r25 = r0.<com.android.server.notification.NotificationManagerService: android.os.Vibrator mVibrator>;

        virtualinvoke $r25.<android.os.Vibrator: void cancel()>();

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l7);

        goto label19;

     label18:
        $r36 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l7);

        throw $r36;

     label19:
        $r24 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        virtualinvoke $r24.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

     label20:
        if i0 == 2 goto label23;

        if i0 == 3 goto label23;

        tableswitch(i0)
        {
            case 8: goto label22;
            case 9: goto label22;
            case 10: goto label23;
            case 11: goto label23;
            default: goto label21;
        };

     label21:
        goto label24;

     label22:
        $r21 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        virtualinvoke $r21.<com.android.server.notification.NotificationUsageStats: void registerRemovedByApp(com.android.server.notification.NotificationRecord)>(r46);

        goto label24;

     label23:
        $r56 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        virtualinvoke $r56.<com.android.server.notification.NotificationUsageStats: void registerDismissedByUser(com.android.server.notification.NotificationRecord)>(r46);

     label24:
        r57 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: java.lang.String getGroupKey()>();

        $r58 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mSummaryByGroupKey>;

        $r59 = virtualinvoke $r58.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r57);

        r60 = (com.android.server.notification.NotificationRecord) $r59;

        if r60 == null goto label25;

        $r18 = virtualinvoke r60.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label25;

        $r19 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mSummaryByGroupKey>;

        virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r57);

     label25:
        $r61 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mAutobundledSummaries>;

        $r62 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i8 = virtualinvoke $r62.<android.service.notification.StatusBarNotification: int getUserId()>();

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r64 = virtualinvoke $r61.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r63);

        r65 = (android.util.ArrayMap) $r64;

        if r65 == null goto label26;

        $r10 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r11 = virtualinvoke $r10.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        $r12 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r13 = virtualinvoke $r12.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r14 = virtualinvoke r65.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r13);

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label26;

        $r15 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r16 = virtualinvoke $r15.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        virtualinvoke r65.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r16);

     label26:
        $r66 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$Archive mArchive>;

        $r67 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        virtualinvoke $r66.<com.android.server.notification.NotificationManagerService$Archive: void record(android.service.notification.StatusBarNotification,int)>($r67, i0);

        l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r68 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: android.metrics.LogMaker getItemLogMaker()>();

        $r69 = virtualinvoke $r68.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(5);

        r70 = virtualinvoke $r69.<android.metrics.LogMaker: android.metrics.LogMaker setSubtype(int)>(i0);

        if i1 == -1 goto label27;

        if i2 == -1 goto label27;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7 = virtualinvoke r70.<android.metrics.LogMaker: android.metrics.LogMaker addTaggedData(int,java.lang.Object)>(798, $r6);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke $r7.<android.metrics.LogMaker: android.metrics.LogMaker addTaggedData(int,java.lang.Object)>(1395, $r8);

        goto label27;

     label27:
        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.metrics.LogMaker)>(r70);

        $i10 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: int getLifespanMs(long)>(l9);

        $i11 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: int getFreshnessMs(long)>(l9);

        $i12 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: int getExposureMs(long)>(l9);

        staticinvoke <com.android.server.EventLogTags: void writeNotificationCanceled(java.lang.String,int,int,int,int,int,int,java.lang.String)>(r2, i0, $i10, $i11, $i12, i1, i2, r1);

        if z1 == 0 goto label28;

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecordLogger mNotificationRecordLogger>;

        $r5 = virtualinvoke r46.<com.android.server.notification.NotificationRecord: android.service.notification.NotificationStats getStats()>();

        $i4 = virtualinvoke $r5.<android.service.notification.NotificationStats: int getDismissalSurface()>();

        interfaceinvoke $r4.<com.android.server.notification.NotificationRecordLogger: void logNotificationCancelled(com.android.server.notification.NotificationRecord,int,int)>(r46, i0, $i4);

     label28:
        return;

        catch android.app.PendingIntent$CanceledException from label02 to label03 with label04;
        catch android.os.RemoteException from label08 to label09 with label13;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch android.os.RemoteException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    private void cancelNotificationLocked(com.android.server.notification.NotificationRecord, boolean, int, boolean, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        boolean z0, z1;
        int i0;
        java.lang.String r2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        r2 := @parameter4: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelNotificationLocked(com.android.server.notification.NotificationRecord,boolean,int,int,int,boolean,java.lang.String)>(r1, z0, i0, -1, -1, z1, r2);

        return;
    }

    private void checkCallerIsSameApp(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;
        int $i0, $i1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSameApp(java.lang.String,int,int)>(r1, $i0, $i1);

        return;
    }

    private void checkCallerIsSameApp(java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r6, $r13, $r14, $r22;
        int i0, i1, $i2, $i3;
        java.lang.SecurityException r2, $r21, r25;
        android.content.pm.IPackageManager $r3;
        boolean $z0, $z1;
        android.os.RemoteException $r15;
        java.lang.StringBuilder $r16, r24, r26;
        android.content.pm.ApplicationInfo r23;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 != 0 goto label1;

        $r14 = "root";

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager mPackageManager>;

        r23 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 0, i1);

     label2:
        if r23 == null goto label6;

     label3:
        $i2 = r23.<android.content.pm.ApplicationInfo: int uid>;

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i2, i0);

        if $z0 == 0 goto label5;

     label4:
        return;

     label5:
        r2 = new java.lang.SecurityException;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gave package ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which is owned by uid ");

        $i3 = r23.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.SecurityException: void <init>(java.lang.String)>($r13);

        throw r2;

     label6:
        r25 = new java.lang.SecurityException;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw r25;

     label7:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r21 = new java.lang.SecurityException;

        $r22 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.SecurityException: void <init>(java.lang.String)>($r22);

        throw $r21;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
        catch android.os.RemoteException from label6 to label7 with label7;
    }

    private void checkCallerIsSystem()
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.SecurityException $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $z0 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isCallerSystemOrPhone()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disallowed call for uid ");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = new java.lang.SecurityException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    private void checkCallerIsSystemOrSameApp(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isCallerSystemOrPhone()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSameApp(java.lang.String)>(r1);

        return;
    }

    private void checkCallerIsSystemOrShell()
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 2000 goto label2;

        if i0 != 0 goto label1;

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSystem()>();

        return;

     label2:
        return;
    }

    private void checkCallerIsSystemOrSystemUiOrShell()
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSystemOrSystemUiOrShell(java.lang.String)>(null);

        return;
    }

    private void checkCallerIsSystemOrSystemUiOrShell(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;
        int i0;
        boolean $z0;
        android.content.Context $r2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 2000 goto label3;

        if i0 != 0 goto label1;

        goto label3;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isCallerSystemOrPhone()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $r2 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.STATUS_BAR_SERVICE", r1);

        return;

     label3:
        return;
    }

    private boolean checkDisqualifyingFeatures(int, int, int, java.lang.String, com.android.server.notification.NotificationRecord, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i10, i11, i12;
        java.lang.String r1, $r11, $r13, $r16, $r20, $r27, $r35, $r39, $r43, $r44, r48, $r60;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, z9, $z10;
        float f0, $f1;
        long l2, $l6, $l7;
        android.service.notification.StatusBarNotification $r2, $r15, $r19, $r34;
        com.android.server.notification.NotificationUsageStats $r3, $r22, $r29, $r30;
        android.metrics.LogMaker $r4, $r5, $r6;
        com.android.server.notification.NotificationRecordLogger$NotificationEvent $r7;
        com.android.server.notification.NotificationRecordLogger $r8;
        com.android.server.notification.SnoozeHelper $r9, $r59;
        android.util.ArrayMap $r14, $r18;
        java.lang.Object $r17, $r21, r51, r58;
        android.app.Notification $r28, $r55;
        byte $b5, $b8;
        java.lang.Throwable $r45, $r46, $r47, r57;
        com.android.server.notification.NotificationRecord r49;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r50;
        java.lang.SecurityException r52;
        java.lang.StringBuilder r53, r54, r56, r61;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i10 := @parameter1: int;

        i1 := @parameter2: int;

        r48 := @parameter3: java.lang.String;

        r49 := @parameter4: com.android.server.notification.NotificationRecord;

        z7 := @parameter5: boolean;

        $r2 = virtualinvoke r49.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r1 = virtualinvoke $r2.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z1 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isUidSystemOrPhone(int)>(i10);

        if $z1 != 0 goto label02;

        $r44 = "android";

        $z6 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 == 0 goto label01;

        goto label02;

     label01:
        z8 = 0;

        goto label03;

     label02:
        z8 = 1;

     label03:
        $r50 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        z0 = virtualinvoke $r50.<com.android.server.notification.NotificationManagerService$NotificationListeners: boolean isListenerPackage(java.lang.String)>(r1);

        if z8 != 0 goto label24;

        if z0 != 0 goto label24;

        r51 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r51;

     label04:
        i11 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r14 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r15 = virtualinvoke r49.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r16 = virtualinvoke $r15.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        $r17 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r16);

        if $r17 != null goto label07;

        $z5 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isCallerInstantApp(int,int)>(i11, i0);

        if $z5 != 0 goto label06;

     label05:
        goto label07;

     label06:
        r52 = new java.lang.SecurityException;

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instant app ");

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot create notifications");

        $r43 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r52.<java.lang.SecurityException: void <init>(java.lang.String)>($r43);

        throw r52;

     label07:
        $r18 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r19 = virtualinvoke r49.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r20 = virtualinvoke $r19.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        $r21 = virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r20);

        if $r21 == null goto label12;

        $r28 = virtualinvoke r49.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $z4 = virtualinvoke $r28.<android.app.Notification: boolean hasCompletedProgress()>();

        if $z4 != 0 goto label12;

     label08:
        if z7 != 0 goto label12;

     label09:
        $r29 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        f0 = virtualinvoke $r29.<com.android.server.notification.NotificationUsageStats: float getAppEnqueueRate(java.lang.String)>(r1);

        $f1 = r0.<com.android.server.notification.NotificationManagerService: float mMaxPackageEnqueueRate>;

        $b5 = f0 cmpl $f1;

        if $b5 <= 0 goto label12;

        $r30 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        virtualinvoke $r30.<com.android.server.notification.NotificationUsageStats: void registerOverRateQuota(java.lang.String)>(r1);

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = r0.<com.android.server.notification.NotificationManagerService: long mLastOverRateLogTime>;

        $l7 = l2 - $l6;

        $b8 = $l7 cmp 5000L;

        if $b8 <= 0 goto label10;

        r54 = new java.lang.StringBuilder;

        specialinvoke r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package enqueue rate is ");

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Shedding ");

        $r34 = virtualinvoke r49.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r35 = virtualinvoke $r34.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". package=");

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r39 = virtualinvoke r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r39);

        r0.<com.android.server.notification.NotificationManagerService: long mLastOverRateLogTime> = l2;

     label10:
        exitmonitor r51;

     label11:
        return 0;

     label12:
        $r55 = virtualinvoke r49.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        z9 = virtualinvoke $r55.<android.app.Notification: boolean isForegroundService()>();

     label13:
        if z9 != 0 goto label18;

     label14:
        i12 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: int getNotificationCountLocked(java.lang.String,int,int,java.lang.String)>(r1, i0, i1, r48);

     label15:
        if i12 < 25 goto label18;

     label16:
        $r22 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        virtualinvoke $r22.<com.android.server.notification.NotificationUsageStats: void registerOverCountQuota(java.lang.String)>(r1);

        r56 = new java.lang.StringBuilder;

        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package has already posted or enqueued ");

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notifications.  Not showing more.  package=");

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r27);

        exitmonitor r51;

     label17:
        return 0;

     label18:
        exitmonitor r51;

     label19:
        goto label24;

     label20:
        $r46 := @caughtexception;

        r57 = $r46;

     label21:
        exitmonitor r51;

     label22:
        throw r57;

     label23:
        $r45 := @caughtexception;

        r57 = $r45;

        goto label21;

     label24:
        r58 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r58;

     label25:
        $r59 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper>;

        $r60 = virtualinvoke r49.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $z10 = virtualinvoke $r59.<com.android.server.notification.SnoozeHelper: boolean isSnoozed(int,java.lang.String,java.lang.String)>(i0, r1, $r60);

        if $z10 == 0 goto label28;

        $r4 = virtualinvoke r49.<com.android.server.notification.NotificationRecord: android.metrics.LogMaker getLogMaker()>();

        $r5 = virtualinvoke $r4.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(6);

        $r6 = virtualinvoke $r5.<android.metrics.LogMaker: android.metrics.LogMaker setCategory(int)>(831);

        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.metrics.LogMaker)>($r6);

        $r8 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecordLogger mNotificationRecordLogger>;

        $r7 = <com.android.server.notification.NotificationRecordLogger$NotificationEvent: com.android.server.notification.NotificationRecordLogger$NotificationEvent NOTIFICATION_NOT_POSTED_SNOOZED>;

        interfaceinvoke $r8.<com.android.server.notification.NotificationRecordLogger: void log(com.android.internal.logging.UiEventLogger$UiEventEnum,com.android.server.notification.NotificationRecord)>($r7, r49);

        $z3 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z3 == 0 goto label26;

        r61 = new java.lang.StringBuilder;

        specialinvoke r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignored enqueue for snoozed notification ");

        $r11 = virtualinvoke r49.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r13);

     label26:
        $r9 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper>;

        virtualinvoke $r9.<com.android.server.notification.SnoozeHelper: void update(int,com.android.server.notification.NotificationRecord)>(i0, r49);

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        exitmonitor r58;

     label27:
        return 0;

     label28:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        $z2 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isBlocked(com.android.server.notification.NotificationRecord,com.android.server.notification.NotificationUsageStats)>(r49, $r3);

        if $z2 == 0 goto label30;

        exitmonitor r58;

     label29:
        return 0;

     label30:
        exitmonitor r58;

     label31:
        return 1;

     label32:
        $r47 := @caughtexception;

     label33:
        exitmonitor r58;

     label34:
        throw $r47;

        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch java.lang.Throwable from label26 to label27 with label32;
        catch java.lang.Throwable from label28 to label29 with label32;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label33 to label34 with label32;
    }

    private void checkRemoteViews(java.lang.String, java.lang.String, int, android.app.Notification)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r2;
        int i0;
        android.app.Notification r3, $r7, $r8, $r10, $r12, $r14, $r15, $r16;
        android.widget.RemoteViews $r4, $r5, $r6, $r9, $r11, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.app.Notification;

        $r4 = r3.<android.app.Notification: android.widget.RemoteViews contentView>;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean removeRemoteView(java.lang.String,java.lang.String,int,android.widget.RemoteViews)>(r1, r2, i0, $r4);

        if $z0 == 0 goto label1;

        r3.<android.app.Notification: android.widget.RemoteViews contentView> = null;

     label1:
        $r5 = r3.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        $z1 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean removeRemoteView(java.lang.String,java.lang.String,int,android.widget.RemoteViews)>(r1, r2, i0, $r5);

        if $z1 == 0 goto label2;

        r3.<android.app.Notification: android.widget.RemoteViews bigContentView> = null;

     label2:
        $r6 = r3.<android.app.Notification: android.widget.RemoteViews headsUpContentView>;

        $z2 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean removeRemoteView(java.lang.String,java.lang.String,int,android.widget.RemoteViews)>(r1, r2, i0, $r6);

        if $z2 == 0 goto label3;

        r3.<android.app.Notification: android.widget.RemoteViews headsUpContentView> = null;

     label3:
        $r7 = r3.<android.app.Notification: android.app.Notification publicVersion>;

        if $r7 == null goto label6;

        $r8 = r3.<android.app.Notification: android.app.Notification publicVersion>;

        $r9 = $r8.<android.app.Notification: android.widget.RemoteViews contentView>;

        $z3 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean removeRemoteView(java.lang.String,java.lang.String,int,android.widget.RemoteViews)>(r1, r2, i0, $r9);

        if $z3 == 0 goto label4;

        $r16 = r3.<android.app.Notification: android.app.Notification publicVersion>;

        $r16.<android.app.Notification: android.widget.RemoteViews contentView> = null;

     label4:
        $r10 = r3.<android.app.Notification: android.app.Notification publicVersion>;

        $r11 = $r10.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        $z4 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean removeRemoteView(java.lang.String,java.lang.String,int,android.widget.RemoteViews)>(r1, r2, i0, $r11);

        if $z4 == 0 goto label5;

        $r15 = r3.<android.app.Notification: android.app.Notification publicVersion>;

        $r15.<android.app.Notification: android.widget.RemoteViews bigContentView> = null;

     label5:
        $r12 = r3.<android.app.Notification: android.app.Notification publicVersion>;

        $r13 = $r12.<android.app.Notification: android.widget.RemoteViews headsUpContentView>;

        $z5 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean removeRemoteView(java.lang.String,java.lang.String,int,android.widget.RemoteViews)>(r1, r2, i0, $r13);

        if $z5 == 0 goto label6;

        $r14 = r3.<android.app.Notification: android.app.Notification publicVersion>;

        $r14.<android.app.Notification: android.widget.RemoteViews headsUpContentView> = null;

     label6:
        return;
    }

    private void checkRestrictedCategories(android.app.Notification)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.app.Notification r1;
        boolean z0, $z1, $z2, $z3, $z4;
        android.content.pm.IPackageManager $r3;
        java.lang.String $r4, $r5, $r6, $r7, $r9, $r10;
        android.os.RemoteException $r8;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.app.Notification;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager mPackageManager>;

        z0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String,int)>("android.hardware.type.automotive", 0);

     label2:
        if z0 != 0 goto label3;

        return;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $z3 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z3 == 0 goto label5;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", "Unable to confirm if it\'s safe to skip category restrictions check thus the check will be done anyway");

     label5:
        $r9 = "car_emergency";

        $r10 = r1.<android.app.Notification: java.lang.String category>;

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z4 != 0 goto label6;

        $r5 = "car_warning";

        $r4 = r1.<android.app.Notification: java.lang.String category>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label6;

        $r7 = "car_information";

        $r6 = r1.<android.app.Notification: java.lang.String category>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label7;

     label6:
        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSystem()>();

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    static int clamp(int, int, int)
    {
        int i0, i1, i2;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i2 >= i0 goto label1;

        i2 = i0;

        goto label2;

     label1:
        if i2 <= i1 goto label2;

        i2 = i1;

        goto label2;

     label2:
        return i2;
    }

    private void clearAutogroupSummaryLocked(int, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        android.util.ArrayMap r1, $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4, $r5;
        boolean $z0, $z1;
        java.lang.String $r6, r7;
        com.android.server.notification.NotificationRecord r8;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mAutobundledSummaries>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (android.util.ArrayMap) $r4;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r7);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r7);

        $r6 = (java.lang.String) $r5;

        r8 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord findNotificationByKeyLocked(java.lang.String)>($r6);

        if r8 == null goto label1;

        $z1 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean removeFromNotificationListsLocked(com.android.server.notification.NotificationRecord)>(r8);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelNotificationLocked(com.android.server.notification.NotificationRecord,boolean,int,boolean,java.lang.String)>(r8, 0, 16, $z1, null);

     label1:
        return;
    }

    private void clearLightsLocked()
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void updateLightsLocked()>();

        return;
    }

    private void createAutoGroupSummary(int, java.lang.String, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.Object r1, $r5, $r9;
        com.android.server.notification.NotificationRecord r2, r67, r68;
        android.service.notification.StatusBarNotification r3, $r13, $r14, r66;
        android.app.ActivityManager $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7, i8;
        android.os.UserHandle $r6, $r39, $r45;
        android.util.ArrayMap $r7, $r10, r56, r58, r59;
        java.lang.Integer $r8, $r11;
        boolean $z0, $z1, $z3, z4;
        java.lang.String $r15, $r37, $r38, $r42, r54, r55, r62;
        com.android.server.notification.NotificationManagerService$EnqueueNotificationRunnable $r16;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r17;
        android.app.Notification $r18, $r23, $r31, r64;
        android.os.Bundle $r19, $r34, r61;
        android.os.Parcelable $r20;
        android.app.NotificationChannel $r21, $r41;
        android.content.Context $r22, $r35, $r40, $r44;
        android.graphics.drawable.Icon $r24;
        android.app.Notification$Builder $r25, $r26, $r27, $r28, $r29, $r30, $r32, $r33, r63;
        android.content.pm.PackageManager $r36;
        long $l6;
        android.app.PendingIntent $r46;
        java.lang.Throwable $r47, $r48, $r49, $r50, $r51, $r52, $r53, r57;
        android.content.pm.ApplicationInfo r60;
        android.content.Intent r65;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i7 := @parameter0: int;

        r54 := @parameter1: java.lang.String;

        r55 := @parameter2: java.lang.String;

        $r4 = r0.<com.android.server.notification.NotificationManagerService: android.app.ActivityManager mActivityManager>;

        $i0 = virtualinvoke $r4.<android.app.ActivityManager: int getPackageImportance(java.lang.String)>(r54);

        if $i0 != 100 goto label01;

        z4 = 1;

        goto label02;

     label01:
        z4 = 0;

     label02:
        r1 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label03:
        r56 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

     label04:
        $r5 = virtualinvoke r56.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r55);

        r2 = (com.android.server.notification.NotificationRecord) $r5;

     label05:
        if r2 != null goto label09;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r53 := @caughtexception;

        r57 = $r53;

        goto label30;

     label09:
        r3 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r6 = virtualinvoke r3.<android.service.notification.StatusBarNotification: android.os.UserHandle getUser()>();

        i8 = virtualinvoke $r6.<android.os.UserHandle: int getIdentifier()>();

     label10:
        $r7 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mAutobundledSummaries>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $r9 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        r58 = (android.util.ArrayMap) $r9;

     label11:
        r59 = r58;

        if r58 != null goto label13;

     label12:
        r59 = new android.util.ArrayMap;

        specialinvoke r59.<android.util.ArrayMap: void <init>()>();

     label13:
        $r10 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mAutobundledSummaries>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r59);

        $z0 = virtualinvoke r59.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r54);

        if $z0 != 0 goto label22;

     label14:
        $r18 = virtualinvoke r3.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $r19 = $r18.<android.app.Notification: android.os.Bundle extras>;

        $r20 = virtualinvoke $r19.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.appInfo");

        r60 = (android.content.pm.ApplicationInfo) $r20;

        r61 = new android.os.Bundle;

        specialinvoke r61.<android.os.Bundle: void <init>()>();

        virtualinvoke r61.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.appInfo", r60);

        $r21 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.app.NotificationChannel getChannel()>();

        r62 = virtualinvoke $r21.<android.app.NotificationChannel: java.lang.String getId()>();

        r63 = new android.app.Notification$Builder;

        $r22 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        specialinvoke r63.<android.app.Notification$Builder: void <init>(android.content.Context,java.lang.String)>($r22, r62);

        $r23 = virtualinvoke r3.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $r24 = virtualinvoke $r23.<android.app.Notification: android.graphics.drawable.Icon getSmallIcon()>();

        $r25 = virtualinvoke r63.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(android.graphics.drawable.Icon)>($r24);

        $r26 = virtualinvoke $r25.<android.app.Notification$Builder: android.app.Notification$Builder setGroupSummary(boolean)>(1);

        $r27 = virtualinvoke $r26.<android.app.Notification$Builder: android.app.Notification$Builder setGroupAlertBehavior(int)>(2);

        $r28 = virtualinvoke $r27.<android.app.Notification$Builder: android.app.Notification$Builder setGroup(java.lang.String)>("ranker_group");

        $r29 = virtualinvoke $r28.<android.app.Notification$Builder: android.app.Notification$Builder setFlag(int,boolean)>(1024, 1);

        $r30 = virtualinvoke $r29.<android.app.Notification$Builder: android.app.Notification$Builder setFlag(int,boolean)>(512, 1);

        $r31 = virtualinvoke r3.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $i3 = $r31.<android.app.Notification: int color>;

        $r32 = virtualinvoke $r30.<android.app.Notification$Builder: android.app.Notification$Builder setColor(int)>($i3);

        $r33 = virtualinvoke $r32.<android.app.Notification$Builder: android.app.Notification$Builder setLocalOnly(boolean)>(1);

        r64 = virtualinvoke $r33.<android.app.Notification$Builder: android.app.Notification build()>();

        $r34 = r64.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r34.<android.os.Bundle: void putAll(android.os.Bundle)>(r61);

        $r35 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r36 = virtualinvoke $r35.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r65 = virtualinvoke $r36.<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>(r54);

     label15:
        if r65 == null goto label17;

     label16:
        $r44 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r45 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i8);

        $r46 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>($r44, 0, r65, 0, null, $r45);

        r64.<android.app.Notification: android.app.PendingIntent contentIntent> = $r46;

     label17:
        r66 = new android.service.notification.StatusBarNotification;

        $r37 = virtualinvoke r3.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r38 = virtualinvoke r3.<android.service.notification.StatusBarNotification: java.lang.String getOpPkg()>();

        $i4 = virtualinvoke r3.<android.service.notification.StatusBarNotification: int getUid()>();

        $i5 = virtualinvoke r3.<android.service.notification.StatusBarNotification: int getInitialPid()>();

        $r39 = virtualinvoke r3.<android.service.notification.StatusBarNotification: android.os.UserHandle getUser()>();

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r66.<android.service.notification.StatusBarNotification: void <init>(java.lang.String,java.lang.String,int,java.lang.String,int,int,android.app.Notification,android.os.UserHandle,java.lang.String,long)>($r37, $r38, 2147483647, "ranker_group", $i4, $i5, r64, $r39, "ranker_group", $l6);

        r67 = new com.android.server.notification.NotificationRecord;

     label18:
        $r40 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r41 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.app.NotificationChannel getChannel()>();

        specialinvoke r67.<com.android.server.notification.NotificationRecord: void <init>(android.content.Context,android.service.notification.StatusBarNotification,android.app.NotificationChannel)>($r40, r66, $r41);

     label19:
        $z3 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: boolean getIsAppImportanceLocked()>();

        virtualinvoke r67.<com.android.server.notification.NotificationRecord: void setIsAppImportanceLocked(boolean)>($z3);

        $r42 = virtualinvoke r66.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        virtualinvoke r59.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r54, $r42);

     label20:
        r68 = r67;

        goto label23;

     label21:
        $r50 := @caughtexception;

        r57 = $r50;

        goto label30;

     label22:
        r68 = null;

     label23:
        exitmonitor r1;

     label24:
        if r68 == null goto label25;

        $i1 = <com.android.server.notification.NotificationManagerService: int MY_UID>;

        $r13 = virtualinvoke r68.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i2 = virtualinvoke $r13.<android.service.notification.StatusBarNotification: int getId()>();

        $r14 = virtualinvoke r68.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r15 = virtualinvoke $r14.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        $z1 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean checkDisqualifyingFeatures(int,int,int,java.lang.String,com.android.server.notification.NotificationRecord,boolean)>(i8, $i1, $i2, $r15, r68, 1);

        if $z1 == 0 goto label25;

        $r17 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r16 = new com.android.server.notification.NotificationManagerService$EnqueueNotificationRunnable;

        specialinvoke $r16.<com.android.server.notification.NotificationManagerService$EnqueueNotificationRunnable: void <init>(com.android.server.notification.NotificationManagerService,int,com.android.server.notification.NotificationRecord,boolean)>(r0, i8, r68, z4);

        virtualinvoke $r17.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r16);

     label25:
        return;

     label26:
        $r49 := @caughtexception;

        r57 = $r49;

        goto label30;

     label27:
        $r47 := @caughtexception;

        r57 = $r47;

        goto label30;

     label28:
        $r52 := @caughtexception;

        r57 = $r52;

        goto label30;

     label29:
        $r48 := @caughtexception;

        r57 = $r48;

     label30:
        exitmonitor r1;

     label31:
        throw r57;

     label32:
        $r51 := @caughtexception;

        r57 = $r51;

        goto label30;

        catch java.lang.Throwable from label03 to label04 with label29;
        catch java.lang.Throwable from label04 to label05 with label28;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch java.lang.Throwable from label10 to label11 with label27;
        catch java.lang.Throwable from label12 to label13 with label32;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.lang.Throwable from label16 to label17 with label32;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch java.lang.Throwable from label23 to label24 with label26;
        catch java.lang.Throwable from label30 to label31 with label32;
    }

    private void createNotificationChannelGroup(java.lang.String, int, android.app.NotificationChannelGroup, boolean, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r7;
        int i0, $i1;
        android.app.NotificationChannelGroup r2, r3;
        boolean z0, z1;
        com.android.server.notification.PreferencesHelper $r6, $r8;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r9;
        android.os.UserHandle $r10;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.app.NotificationChannelGroup;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r6 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r7 = virtualinvoke r2.<android.app.NotificationChannelGroup: java.lang.String getId()>();

        r3 = virtualinvoke $r6.<com.android.server.notification.PreferencesHelper: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String,java.lang.String,int)>($r7, r1, i0);

        $r8 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r8.<com.android.server.notification.PreferencesHelper: void createNotificationChannelGroup(java.lang.String,int,android.app.NotificationChannelGroup,boolean)>(r1, i0, r2, z0);

        if z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void maybeNotifyChannelGroupOwner(java.lang.String,int,android.app.NotificationChannelGroup,android.app.NotificationChannelGroup)>(r1, i0, r3, r2);

     label1:
        if z1 != 0 goto label2;

        $r9 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r10 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i1);

        virtualinvoke $r9.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyNotificationChannelGroupChanged(java.lang.String,android.os.UserHandle,android.app.NotificationChannelGroup,int)>(r1, $r10, r2, 1);

     label2:
        return;
    }

    private void destroyPermissionOwner(android.os.IBinder, int, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        java.lang.String r1, $r6;
        long l1;
        java.lang.StringBuilder r2;
        boolean $z0;
        com.android.server.uri.UriGrantsManagerInternal $r3;
        java.lang.Throwable $r7;
        android.os.IBinder r8;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r8 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $z0 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z0 == 0 goto label2;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": destroying owner");

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r6);

     label2:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        interfaceinvoke $r3.<com.android.server.uri.UriGrantsManagerInternal: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>(r8, null, -1, i0);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private java.lang.String disableNotificationEffects(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.android.server.notification.ZenModeHelper $r2;
        android.media.AudioAttributes $r3, $r4, $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $z0 = r0.<com.android.server.notification.NotificationManagerService: boolean mDisableNotificationEffects>;

        if $z0 == 0 goto label1;

        return "booleanState";

     label1:
        $i0 = r0.<com.android.server.notification.NotificationManagerService: int mListenerHints>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label2;

        return "listenerHints";

     label2:
        if r1 == null goto label4;

        $r3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.media.AudioAttributes getAudioAttributes()>();

        if $r3 == null goto label4;

        $i2 = r0.<com.android.server.notification.NotificationManagerService: int mListenerHints>;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label3;

        $r5 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.media.AudioAttributes getAudioAttributes()>();

        $i7 = virtualinvoke $r5.<android.media.AudioAttributes: int getUsage()>();

        if $i7 == 6 goto label3;

        return "listenerNoti";

     label3:
        $i4 = r0.<com.android.server.notification.NotificationManagerService: int mListenerHints>;

        $i5 = $i4 & 4;

        if $i5 == 0 goto label4;

        $r4 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.media.AudioAttributes getAudioAttributes()>();

        $i6 = virtualinvoke $r4.<android.media.AudioAttributes: int getUsage()>();

        if $i6 != 6 goto label4;

        return "listenerCall";

     label4:
        $i8 = r0.<com.android.server.notification.NotificationManagerService: int mCallState>;

        if $i8 == 0 goto label5;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $z1 = virtualinvoke $r2.<com.android.server.notification.ZenModeHelper: boolean isCall(com.android.server.notification.NotificationRecord)>(r1);

        if $z1 != 0 goto label5;

        return "callState";

     label5:
        return null;
    }

    private void doChannelWarningToast(java.lang.CharSequence)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.CharSequence r1;
        com.android.server.notification._$$Lambda$NotificationManagerService$oBqbud98Vzd9hmZYK_pWIY4cBpI $r2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = new com.android.server.notification._$$Lambda$NotificationManagerService$oBqbud98Vzd9hmZYK_pWIY4cBpI;

        specialinvoke $r2.<com.android.server.notification._$$Lambda$NotificationManagerService$oBqbud98Vzd9hmZYK_pWIY4cBpI: void <init>(com.android.server.notification.NotificationManagerService,java.lang.CharSequence)>(r0, r1);

        staticinvoke <android.os.Binder: void withCleanCallingIdentity(com.android.internal.util.FunctionalUtils$ThrowingRunnable)>($r2);

        return;
    }

    private void dumpJson(java.io.PrintWriter, com.android.server.notification.NotificationManagerService$DumpFilter)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.io.PrintWriter r1;
        com.android.server.notification.PreferencesHelper $r5, $r8, $r14;
        org.json.JSONArray $r6, $r15;
        org.json.JSONObject $r9, $r12, r20;
        com.android.server.notification.NotificationUsageStats $r11;
        java.lang.Throwable $r17;
        com.android.server.notification.NotificationManagerService$DumpFilter r18;
        org.json.JSONException r21;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        r18 := @parameter1: com.android.server.notification.NotificationManagerService$DumpFilter;

        r20 = new org.json.JSONObject;

        specialinvoke r20.<org.json.JSONObject: void <init>()>();

     label1:
        virtualinvoke r20.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("service", "Notification Manager");

        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r6 = virtualinvoke $r5.<com.android.server.notification.PreferencesHelper: org.json.JSONArray dumpBansJson(com.android.server.notification.NotificationManagerService$DumpFilter)>(r18);

        virtualinvoke r20.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("bans", $r6);

        $r8 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r9 = virtualinvoke $r8.<com.android.server.notification.PreferencesHelper: org.json.JSONObject dumpJson(com.android.server.notification.NotificationManagerService$DumpFilter)>(r18);

        virtualinvoke r20.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("ranking", $r9);

        $r11 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        $r12 = virtualinvoke $r11.<com.android.server.notification.NotificationUsageStats: org.json.JSONObject dumpJson(com.android.server.notification.NotificationManagerService$DumpFilter)>(r18);

        virtualinvoke r20.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("stats", $r12);

        $r14 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r15 = virtualinvoke $r14.<com.android.server.notification.PreferencesHelper: org.json.JSONArray dumpChannelsJson(com.android.server.notification.NotificationManagerService$DumpFilter)>(r18);

        virtualinvoke r20.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("channels", $r15);

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

        r21 = (org.json.JSONException) $r17;

        virtualinvoke r21.<org.json.JSONException: void printStackTrace()>();

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r20);

        return;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    private void dumpNotificationRecords(java.io.PrintWriter, com.android.server.notification.NotificationManagerService$DumpFilter)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$DumpFilter r1;
        java.lang.Object r2, $r6;
        int i0, i1;
        com.android.server.notification.NotificationRecord r3;
        java.util.ArrayList $r4, $r5;
        boolean $z0, $z1, $z2;
        android.content.Context $r7;
        android.service.notification.StatusBarNotification $r8;
        java.lang.Throwable $r9;
        java.io.PrintWriter r10;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r10 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.server.notification.NotificationManagerService$DumpFilter;

        r2 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r2;

     label01:
        $r4 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label02:
        if i0 <= 0 goto label11;

     label03:
        virtualinvoke r10.<java.io.PrintWriter: void println(java.lang.String)>("  Notification List:");

     label04:
        i1 = 0;

     label05:
        if i1 >= i0 goto label10;

     label06:
        $r5 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.notification.NotificationRecord) $r6;

        $z0 = r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean filtered>;

        if $z0 == 0 goto label08;

        $r8 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $z2 = virtualinvoke r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean matches(android.service.notification.StatusBarNotification)>($r8);

        if $z2 != 0 goto label08;

     label07:
        goto label09;

     label08:
        $r7 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $z1 = r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean redact>;

        virtualinvoke r3.<com.android.server.notification.NotificationRecord: void dump(java.io.PrintWriter,java.lang.String,android.content.Context,boolean)>(r10, "    ", $r7, $z1);

     label09:
        i1 = i1 + 1;

        goto label05;

     label10:
        virtualinvoke r10.<java.io.PrintWriter: void println(java.lang.String)>("  ");

     label11:
        exitmonitor r2;

     label12:
        return;

     label13:
        $r9 := @caughtexception;

     label14:
        exitmonitor r2;

     label15:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private void dumpProto(java.io.FileDescriptor, com.android.server.notification.NotificationManagerService$DumpFilter)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.List r2, $r8;
        long l0, l1, l12, l15, l16, l17;
        android.util.proto.ProtoOutputStream $r3;
        java.util.ArrayList $r4, $r5, $r24, $r27;
        com.android.server.notification.SnoozeHelper $r6;
        com.android.server.notification.ZenModeHelper $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r9;
        int $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i13, i14;
        android.util.SparseArray $r10, $r15, $r16;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r11;
        com.android.server.notification.ConditionProviders $r12;
        com.android.server.notification.RankingHelper $r13;
        com.android.server.notification.PreferencesHelper $r14;
        java.lang.Object $r17, $r18, $r20, $r22, $r25, $r28, r33;
        android.content.ComponentName $r19, $r21;
        android.service.notification.StatusBarNotification $r23, $r26, $r29;
        java.lang.Throwable $r30;
        java.io.FileDescriptor r31;
        com.android.server.notification.NotificationManagerService$DumpFilter r32;
        com.android.server.notification.NotificationRecord r34, r35, r36;
        java.util.Iterator r37;
        android.util.ArraySet r38;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r31 := @parameter0: java.io.FileDescriptor;

        r32 := @parameter1: com.android.server.notification.NotificationManagerService$DumpFilter;

        $r3 = new android.util.proto.ProtoOutputStream;

        specialinvoke $r3.<android.util.proto.ProtoOutputStream: void <init>(java.io.FileDescriptor)>(r31);

        r33 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r33;

     label01:
        $r4 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i6 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label02:
        i7 = 0;

     label03:
        if i7 >= i6 goto label08;

     label04:
        $r27 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r28 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r34 = (com.android.server.notification.NotificationRecord) $r28;

        $z7 = r32.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean filtered>;

        if $z7 == 0 goto label06;

        $r29 = virtualinvoke r34.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $z9 = virtualinvoke r32.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean matches(android.service.notification.StatusBarNotification)>($r29);

        if $z9 != 0 goto label06;

     label05:
        goto label07;

     label06:
        $z8 = r32.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean redact>;

        virtualinvoke r34.<com.android.server.notification.NotificationRecord: void dump(android.util.proto.ProtoOutputStream,long,boolean,int)>($r3, 2246267895809L, $z8, 1);

     label07:
        i7 = i7 + 1;

        goto label03;

     label08:
        $r5 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        i8 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label09:
        i9 = 0;

     label10:
        if i9 >= i8 goto label15;

     label11:
        $r24 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        $r25 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r35 = (com.android.server.notification.NotificationRecord) $r25;

        $z4 = r32.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean filtered>;

        if $z4 == 0 goto label13;

        $r26 = virtualinvoke r35.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $z6 = virtualinvoke r32.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean matches(android.service.notification.StatusBarNotification)>($r26);

        if $z6 != 0 goto label13;

     label12:
        goto label14;

     label13:
        $z5 = r32.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean redact>;

        virtualinvoke r35.<com.android.server.notification.NotificationRecord: void dump(android.util.proto.ProtoOutputStream,long,boolean,int)>($r3, 2246267895809L, $z5, 0);

     label14:
        i9 = i9 + 1;

        goto label10;

     label15:
        $r6 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper>;

        r2 = virtualinvoke $r6.<com.android.server.notification.SnoozeHelper: java.util.List getSnoozed()>();

        i10 = interfaceinvoke r2.<java.util.List: int size()>();

     label16:
        i11 = 0;

     label17:
        if i11 >= i10 goto label22;

     label18:
        $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i11);

        r36 = (com.android.server.notification.NotificationRecord) $r22;

        $z1 = r32.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean filtered>;

        if $z1 == 0 goto label20;

        $r23 = virtualinvoke r36.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $z3 = virtualinvoke r32.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean matches(android.service.notification.StatusBarNotification)>($r23);

        if $z3 != 0 goto label20;

     label19:
        goto label21;

     label20:
        $z2 = r32.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean redact>;

        virtualinvoke r36.<com.android.server.notification.NotificationRecord: void dump(android.util.proto.ProtoOutputStream,long,boolean,int)>($r3, 2246267895809L, $z2, 2);

     label21:
        i11 = i11 + 1;

        goto label17;

     label22:
        l0 = virtualinvoke $r3.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268034L);

        $r7 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r7.<com.android.server.notification.ZenModeHelper: void dump(android.util.proto.ProtoOutputStream)>($r3);

        $r8 = r0.<com.android.server.notification.NotificationManagerService: java.util.List mEffectsSuppressors>;

        r37 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $z0 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label25;

        $r20 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (android.content.ComponentName) $r20;

        virtualinvoke $r21.<android.content.ComponentName: void dumpDebug(android.util.proto.ProtoOutputStream,long)>($r3, 2246267895812L);

     label24:
        goto label23;

     label25:
        virtualinvoke $r3.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        l12 = virtualinvoke $r3.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268035L);

        $r9 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r9.<com.android.server.notification.NotificationManagerService$NotificationListeners: void dump(android.util.proto.ProtoOutputStream,com.android.server.notification.NotificationManagerService$DumpFilter)>($r3, r32);

        virtualinvoke $r3.<android.util.proto.ProtoOutputStream: void end(long)>(l12);

        $i2 = r0.<com.android.server.notification.NotificationManagerService: int mListenerHints>;

        virtualinvoke $r3.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i2);

     label26:
        i13 = 0;

     label27:
        $r10 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        $i3 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        if i13 >= $i3 goto label33;

        l1 = virtualinvoke $r3.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895813L);

        $r15 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        $i4 = virtualinvoke $r15.<android.util.SparseArray: int keyAt(int)>(i13);

        virtualinvoke $r3.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i4);

        $r16 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        $r17 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>(i13);

        r38 = (android.util.ArraySet) $r17;

     label28:
        i14 = 0;

     label29:
        $i5 = virtualinvoke r38.<android.util.ArraySet: int size()>();

        if i14 >= $i5 goto label31;

        $r18 = virtualinvoke r38.<android.util.ArraySet: java.lang.Object valueAt(int)>(i14);

        $r19 = (android.content.ComponentName) $r18;

        virtualinvoke $r19.<android.content.ComponentName: void dumpDebug(android.util.proto.ProtoOutputStream,long)>($r3, 2246267895811L);

     label30:
        i14 = i14 + 1;

        goto label29;

     label31:
        virtualinvoke $r3.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

     label32:
        i13 = i13 + 1;

        goto label27;

     label33:
        l15 = virtualinvoke $r3.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268038L);

        $r11 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        virtualinvoke $r11.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void dump(android.util.proto.ProtoOutputStream,com.android.server.notification.NotificationManagerService$DumpFilter)>($r3, r32);

        virtualinvoke $r3.<android.util.proto.ProtoOutputStream: void end(long)>(l15);

        l16 = virtualinvoke $r3.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268039L);

        $r12 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        virtualinvoke $r12.<com.android.server.notification.ConditionProviders: void dump(android.util.proto.ProtoOutputStream,com.android.server.notification.NotificationManagerService$DumpFilter)>($r3, r32);

        virtualinvoke $r3.<android.util.proto.ProtoOutputStream: void end(long)>(l16);

        l17 = virtualinvoke $r3.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268040L);

        $r13 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        virtualinvoke $r13.<com.android.server.notification.RankingHelper: void dump(android.util.proto.ProtoOutputStream,com.android.server.notification.NotificationManagerService$DumpFilter)>($r3, r32);

        $r14 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r14.<com.android.server.notification.PreferencesHelper: void dump(android.util.proto.ProtoOutputStream,com.android.server.notification.NotificationManagerService$DumpFilter)>($r3, r32);

        virtualinvoke $r3.<android.util.proto.ProtoOutputStream: void end(long)>(l17);

        exitmonitor r33;

     label34:
        virtualinvoke $r3.<android.util.proto.ProtoOutputStream: void flush()>();

        return;

     label35:
        $r30 := @caughtexception;

     label36:
        exitmonitor r33;

     label37:
        throw $r30;

        catch java.lang.Throwable from label01 to label02 with label35;
        catch java.lang.Throwable from label04 to label05 with label35;
        catch java.lang.Throwable from label06 to label07 with label35;
        catch java.lang.Throwable from label08 to label09 with label35;
        catch java.lang.Throwable from label11 to label12 with label35;
        catch java.lang.Throwable from label13 to label14 with label35;
        catch java.lang.Throwable from label15 to label16 with label35;
        catch java.lang.Throwable from label18 to label19 with label35;
        catch java.lang.Throwable from label20 to label21 with label35;
        catch java.lang.Throwable from label22 to label23 with label35;
        catch java.lang.Throwable from label23 to label24 with label35;
        catch java.lang.Throwable from label25 to label26 with label35;
        catch java.lang.Throwable from label27 to label28 with label35;
        catch java.lang.Throwable from label29 to label30 with label35;
        catch java.lang.Throwable from label31 to label32 with label35;
        catch java.lang.Throwable from label33 to label34 with label35;
        catch java.lang.Throwable from label36 to label37 with label35;
    }

    private void dumpRemoteViewStats(java.io.PrintWriter, com.android.server.notification.NotificationManagerService$DumpFilter)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.io.PrintWriter r1;
        com.android.server.notification.NotificationManagerService$DumpFilter r2;
        com.android.server.notification.PulledStats r3;
        long $l0;
        com.android.server.notification.NotificationUsageStats $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: com.android.server.notification.NotificationManagerService$DumpFilter;

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        $l0 = r2.<com.android.server.notification.NotificationManagerService$DumpFilter: long since>;

        r3 = virtualinvoke $r4.<com.android.server.notification.NotificationUsageStats: com.android.server.notification.PulledStats remoteViewStats(long,boolean)>($l0, 1);

        if r3 != null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("no remote view stats reported.");

        return;

     label1:
        virtualinvoke r3.<com.android.server.notification.PulledStats: void dump(int,java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(1, r1, r2);

        return;
    }

    private void exitIdle()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.IDeviceIdleController $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

     label1:
        $r2 = r0.<com.android.server.notification.NotificationManagerService: android.os.IDeviceIdleController mDeviceIdleController>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.os.IDeviceIdleController mDeviceIdleController>;

        interfaceinvoke $r3.<android.os.IDeviceIdleController: void exitIdle(java.lang.String)>("notification interaction");

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private java.util.List findEnqueuedNotificationsForCriteria(java.lang.String, java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r2, $r11, $r13;
        int i0, i1, i2, $i3, i4;
        com.android.server.notification.NotificationRecord r4;
        java.util.ArrayList $r5, $r6, $r7;
        java.lang.Object $r8;
        boolean $z0, $z1, $z2;
        android.service.notification.StatusBarNotification $r9, $r10, $r12;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i4 = 0;

     label1:
        if i4 >= i2 goto label3;

        $r7 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r4 = (com.android.server.notification.NotificationRecord) $r8;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean notificationMatchesUserId(com.android.server.notification.NotificationRecord,int)>(r4, i1);

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke r4.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i3 = virtualinvoke $r9.<android.service.notification.StatusBarNotification: int getId()>();

        if $i3 != i0 goto label2;

        $r10 = virtualinvoke r4.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r11 = virtualinvoke $r10.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r11, r2);

        if $z1 == 0 goto label2;

        $r12 = virtualinvoke r4.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r13 = virtualinvoke $r12.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return $r5;
    }

    private java.util.List findGroupNotificationByListLocked(java.util.ArrayList, java.lang.String, java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList r1, $r6;
        java.lang.String r2, r3, $r8, $r10;
        int i0, i1, i2;
        com.android.server.notification.NotificationRecord r5;
        java.lang.Object $r7;
        boolean $z0, $z1, $z2;
        android.service.notification.StatusBarNotification $r9;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.notification.NotificationRecord) $r7;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean notificationMatchesUserId(com.android.server.notification.NotificationRecord,int)>(r5, i0);

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r5.<com.android.server.notification.NotificationRecord: java.lang.String getGroupKey()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label2;

        $r9 = virtualinvoke r5.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r10 = virtualinvoke $r9.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label2;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r5);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return $r6;
    }

    private com.android.server.notification.NotificationRecord findInCurrentAndSnoozedNotificationByKeyLocked(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;
        com.android.server.notification.NotificationRecord r2, r4;
        com.android.server.notification.SnoozeHelper $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord findNotificationByKeyLocked(java.lang.String)>(r1);

        r4 = r2;

        if r2 != null goto label1;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper>;

        r4 = virtualinvoke $r3.<com.android.server.notification.SnoozeHelper: com.android.server.notification.NotificationRecord getNotification(java.lang.String)>(r1);

     label1:
        return r4;
    }

    private com.android.server.notification.NotificationRecord findNotificationByKeyLocked(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1, r5;
        java.util.ArrayList $r2, $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r4 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        r1 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord findNotificationByListLocked(java.util.ArrayList,java.lang.String)>($r2, r4);

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        r5 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord findNotificationByListLocked(java.util.ArrayList,java.lang.String)>($r3, r4);

        if r5 == null goto label2;

        return r5;

     label2:
        return null;
    }

    private com.android.server.notification.NotificationRecord findNotificationByListLocked(java.util.ArrayList, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList r1;
        java.lang.String r2, $r5;
        int i0, i1;
        java.lang.Object $r3, $r6;
        com.android.server.notification.NotificationRecord $r4, $r7;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.String;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.notification.NotificationRecord) $r3;

        $r5 = virtualinvoke $r4.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (com.android.server.notification.NotificationRecord) $r6;

        return $r7;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private com.android.server.notification.NotificationRecord findNotificationByListLocked(java.util.ArrayList, java.lang.String, java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList r1;
        java.lang.String r2, r3, $r8, $r10;
        int i0, i1, i2, $i3, i4;
        com.android.server.notification.NotificationRecord r4;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;
        android.service.notification.StatusBarNotification $r6, $r7, $r9;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i4 = 0;

     label1:
        if i4 >= i2 goto label3;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r4 = (com.android.server.notification.NotificationRecord) $r5;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean notificationMatchesUserId(com.android.server.notification.NotificationRecord,int)>(r4, i1);

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke r4.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i3 = virtualinvoke $r6.<android.service.notification.StatusBarNotification: int getId()>();

        if $i3 != i0 goto label2;

        $r7 = virtualinvoke r4.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r8 = virtualinvoke $r7.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r8, r3);

        if $z1 == 0 goto label2;

        $r9 = virtualinvoke r4.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r10 = virtualinvoke $r9.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label2;

        return r4;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return null;
    }

    private int findNotificationRecordIndexLocked(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        java.util.ArrayList $r2;
        com.android.server.notification.RankingHelper $r3;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $i0 = virtualinvoke $r3.<com.android.server.notification.RankingHelper: int indexOf(java.util.ArrayList,com.android.server.notification.NotificationRecord)>($r2, r1);

        return $i0;
    }

    private java.util.List findNotificationsByListLocked(java.util.ArrayList, java.lang.String, java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList r1, $r6;
        java.lang.String r2, r3, $r10, $r12;
        int i0, i1, i2, $i3, i4;
        com.android.server.notification.NotificationRecord r5;
        java.lang.Object $r7;
        boolean $z0, $z1, $z2;
        android.service.notification.StatusBarNotification $r8, $r9, $r11;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i4 = 0;

     label1:
        if i4 >= i2 goto label3;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r5 = (com.android.server.notification.NotificationRecord) $r7;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean notificationMatchesUserId(com.android.server.notification.NotificationRecord,int)>(r5, i1);

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r5.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i3 = virtualinvoke $r8.<android.service.notification.StatusBarNotification: int getId()>();

        if $i3 != i0 goto label2;

        $r9 = virtualinvoke r5.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r10 = virtualinvoke $r9.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r10, r3);

        if $z1 == 0 goto label2;

        $r11 = virtualinvoke r5.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r12 = virtualinvoke $r11.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label2;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r5);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return $r6;
    }

    private com.android.server.notification.GroupHelper getGroupHelper()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        int $i0, $i1;
        com.android.server.notification.GroupHelper $r3;
        com.android.server.notification.NotificationManagerService$9 $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(17694743);

        r0.<com.android.server.notification.NotificationManagerService: int mAutoGroupAtCount> = $i0;

        $r3 = new com.android.server.notification.GroupHelper;

        $i1 = r0.<com.android.server.notification.NotificationManagerService: int mAutoGroupAtCount>;

        $r4 = new com.android.server.notification.NotificationManagerService$9;

        specialinvoke $r4.<com.android.server.notification.NotificationManagerService$9: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        specialinvoke $r3.<com.android.server.notification.GroupHelper: void <init>(int,com.android.server.notification.GroupHelper$Callback)>($i1, $r4);

        return $r3;
    }

    private java.lang.String getHistoryText(android.content.Context, android.app.Notification)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.app.Notification r1;
        android.os.Bundle $r2, $r3, $r6;
        android.app.Notification$Style $r4, $r5, $r7, $r11;
        boolean $z0, $z1, $z2;
        android.app.Notification$MessagingStyle $r8;
        int $i0, $i1, $i2;
        java.lang.Object $r9;
        android.app.Notification$MessagingStyle$Message $r10;
        android.app.Notification$BigTextStyle $r12;
        android.content.Context r13;
        java.lang.CharSequence r14, r15, r17;
        android.app.Notification$Builder r16;
        java.util.List r18;
        java.lang.String r19;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r13 := @parameter0: android.content.Context;

        r1 := @parameter1: android.app.Notification;

        r14 = null;

        $r2 = r1.<android.app.Notification: android.os.Bundle extras>;

        if $r2 == null goto label3;

        $r3 = r1.<android.app.Notification: android.os.Bundle extras>;

        r15 = virtualinvoke $r3.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.text");

        r16 = staticinvoke <android.app.Notification$Builder: android.app.Notification$Builder recoverBuilder(android.content.Context,android.app.Notification)>(r13, r1);

        $r4 = virtualinvoke r16.<android.app.Notification$Builder: android.app.Notification$Style getStyle()>();

        $z0 = $r4 instanceof android.app.Notification$BigTextStyle;

        if $z0 == 0 goto label1;

        $r11 = virtualinvoke r16.<android.app.Notification$Builder: android.app.Notification$Style getStyle()>();

        $r12 = (android.app.Notification$BigTextStyle) $r11;

        r17 = virtualinvoke $r12.<android.app.Notification$BigTextStyle: java.lang.CharSequence getBigText()>();

        goto label2;

     label1:
        r17 = r15;

        $r5 = virtualinvoke r16.<android.app.Notification$Builder: android.app.Notification$Style getStyle()>();

        $z1 = $r5 instanceof android.app.Notification$MessagingStyle;

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke r16.<android.app.Notification$Builder: android.app.Notification$Style getStyle()>();

        $r8 = (android.app.Notification$MessagingStyle) $r7;

        r18 = virtualinvoke $r8.<android.app.Notification$MessagingStyle: java.util.List getMessages()>();

        r17 = r15;

        if r18 == null goto label2;

        r17 = r15;

        $i0 = interfaceinvoke r18.<java.util.List: int size()>();

        if $i0 <= 0 goto label2;

        $i1 = interfaceinvoke r18.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r9 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>($i2);

        $r10 = (android.app.Notification$MessagingStyle$Message) $r9;

        r17 = virtualinvoke $r10.<android.app.Notification$MessagingStyle$Message: java.lang.CharSequence getText()>();

     label2:
        r14 = r17;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r17);

        if $z2 == 0 goto label3;

        $r6 = r1.<android.app.Notification: android.os.Bundle extras>;

        r14 = virtualinvoke $r6.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.text");

     label3:
        if r14 != null goto label4;

        r19 = null;

        goto label5;

     label4:
        r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r14);

     label5:
        return r19;
    }

    private java.lang.String getHistoryTitle(android.app.Notification)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.CharSequence r1, r8;
        android.os.Bundle $r2, $r5, $r6;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        android.app.Notification r7;
        java.lang.String r9;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r7 := @parameter0: android.app.Notification;

        r8 = null;

        $r2 = r7.<android.app.Notification: android.os.Bundle extras>;

        if $r2 == null goto label1;

        $r5 = r7.<android.app.Notification: android.os.Bundle extras>;

        r1 = virtualinvoke $r5.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.title");

        r8 = r1;

        if r1 != null goto label1;

        $r6 = r7.<android.app.Notification: android.os.Bundle extras>;

        r8 = virtualinvoke $r6.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.title.big");

     label1:
        if r8 != null goto label2;

        $r3 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        r9 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17040710);

        goto label3;

     label2:
        r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r8);

     label3:
        return r9;
    }

    static long[] getLongArray(android.content.res.Resources, int, int, long[])
    {
        int $i0, $i1, i3, i4, i5, i6;
        long $l2;
        android.content.res.Resources r0;
        long[] r1, r3;
        int[] r2;

        r0 := @parameter0: android.content.res.Resources;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        r1 := @parameter3: long[];

        r2 = virtualinvoke r0.<android.content.res.Resources: int[] getIntArray(int)>(i3);

        if r2 != null goto label1;

        return r1;

     label1:
        $i0 = lengthof r2;

        if $i0 <= i4 goto label2;

        i5 = i4;

        goto label3;

     label2:
        i5 = lengthof r2;

     label3:
        r3 = newarray (long)[i5];

        i6 = 0;

     label4:
        if i6 >= i5 goto label5;

        $i1 = r2[i6];

        $l2 = (long) $i1;

        r3[i6] = $l2;

        i6 = i6 + 1;

        goto label4;

     label5:
        return r3;
    }

    private int getRealUserId(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        if i0 != -1 goto label1;

        i0 = 0;

        goto label1;

     label1:
        return i0;
    }

    private java.util.ArrayList getSuppressors()
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.Iterator r2;
        java.util.ArrayList $r3;
        android.util.SparseArray $r4, $r5;
        int $i0, i1;
        java.lang.Object $r6, $r8;
        android.util.ArraySet $r7;
        boolean $z0;
        android.content.ComponentName $r9;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        $i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label4;

        $r5 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r7 = (android.util.ArraySet) $r6;

        r2 = virtualinvoke $r7.<android.util.ArraySet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.content.ComponentName) $r8;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        goto label2;

     label3:
        i1 = i1 + -1;

        goto label1;

     label4:
        return $r3;
    }

    private com.android.server.notification.toast.ToastRecord getToastRecord(int, int, java.lang.String, android.os.IBinder, java.lang.CharSequence, android.app.ITransientNotification, int, android.os.Binder, int, android.app.ITransientNotificationCallback)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2, i3;
        java.lang.String r1;
        android.os.IBinder r2;
        java.lang.CharSequence r3;
        android.app.ITransientNotification r4;
        android.os.Binder r5;
        android.app.ITransientNotificationCallback r6;
        com.android.server.notification.toast.CustomToastRecord $r7;
        com.android.server.notification.toast.TextToastRecord $r8;
        com.android.server.statusbar.StatusBarManagerInternal $r9;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.IBinder;

        r3 := @parameter4: java.lang.CharSequence;

        r4 := @parameter5: android.app.ITransientNotification;

        i2 := @parameter6: int;

        r5 := @parameter7: android.os.Binder;

        i3 := @parameter8: int;

        r6 := @parameter9: android.app.ITransientNotificationCallback;

        if r4 != null goto label1;

        $r8 = new com.android.server.notification.toast.TextToastRecord;

        $r9 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.statusbar.StatusBarManagerInternal mStatusBar>;

        specialinvoke $r8.<com.android.server.notification.toast.TextToastRecord: void <init>(com.android.server.notification.NotificationManagerService,com.android.server.statusbar.StatusBarManagerInternal,int,int,java.lang.String,android.os.IBinder,java.lang.CharSequence,int,android.os.Binder,int,android.app.ITransientNotificationCallback)>(r0, $r9, i0, i1, r1, r2, r3, i2, r5, i3, r6);

        return $r8;

     label1:
        $r7 = new com.android.server.notification.toast.CustomToastRecord;

        specialinvoke $r7.<com.android.server.notification.toast.CustomToastRecord: void <init>(com.android.server.notification.NotificationManagerService,int,int,java.lang.String,android.os.IBinder,android.app.ITransientNotification,int,android.os.Binder,int)>(r0, i0, i1, r1, r2, r4, i2, r5, i3);

        return $r7;
    }

    private void grantUriPermission(android.os.IBinder, android.net.Uri, int, java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.net.Uri r1, $r6;
        int i0, i1, $i3, $i4;
        java.lang.String r2, $r3, $r4, $r13;
        long l2;
        boolean $z0;
        android.app.IUriGrantsManager $r5;
        java.lang.Throwable $r7, $r8;
        android.os.RemoteException $r14;
        android.os.IBinder r15;
        java.lang.StringBuilder r18;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r15 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        if r1 == null goto label11;

        $r3 = "content";

        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label01;

        goto label11;

     label01:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r5 = r0.<com.android.server.notification.NotificationManagerService: android.app.IUriGrantsManager mUgm>;

        $r6 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r1);

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i4 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r1, $i3);

        interfaceinvoke $r5.<android.app.IUriGrantsManager: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>(r15, i0, r2, $r6, 1, $i4, i1);

     label03:
        goto label10;

     label04:
        $r7 := @caughtexception;

        goto label08;

     label05:
        $r8 := @caughtexception;

     label06:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot grant uri access; ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not own ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r13);

     label07:
        goto label10;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r7;

     label09:
        $r14 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label11:
        return;

        catch android.os.RemoteException from label02 to label03 with label09;
        catch java.lang.SecurityException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
    }

    private void handleDurationReached(com.android.server.notification.toast.ToastRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        boolean $z0;
        android.os.IBinder $r1, $r8;
        java.lang.String $r2, $r5, $r10;
        java.lang.StringBuilder $r3;
        java.lang.Throwable $r11;
        com.android.server.notification.toast.ToastRecord r12;
        java.util.ArrayList r14;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r12 := @parameter0: com.android.server.notification.toast.ToastRecord;

        $z0 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout pkg=");

        $r5 = r12.<com.android.server.notification.toast.ToastRecord: java.lang.String pkg>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token=");

        $r8 = r12.<com.android.server.notification.toast.ToastRecord: android.os.IBinder token>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r10);

     label1:
        r14 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        entermonitor r14;

     label2:
        $r2 = r12.<com.android.server.notification.toast.ToastRecord: java.lang.String pkg>;

        $r1 = r12.<com.android.server.notification.toast.ToastRecord: android.os.IBinder token>;

        i0 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: int indexOfToastLocked(java.lang.String,android.os.IBinder)>($r2, $r1);

     label3:
        if i0 < 0 goto label5;

     label4:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelToastLocked(int)>(i0);

     label5:
        exitmonitor r14;

     label6:
        return;

     label7:
        $r11 := @caughtexception;

     label8:
        exitmonitor r14;

     label9:
        throw $r11;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void handleGroupedNotificationLocked(com.android.server.notification.NotificationRecord, com.android.server.notification.NotificationRecord, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1, r2, r22;
        int i0, i1, $i3, $i4;
        java.lang.String r3, $r11, $r15, r20, r23;
        boolean z0, $z1, $z2, $z3, $z4, z5;
        android.util.ArrayMap $r5, $r7;
        java.lang.Object $r8;
        java.lang.StringBuilder $r9;
        android.service.notification.StatusBarNotification $r16, $r17, r18;
        android.app.Notification r19, r21;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        r2 := @parameter1: com.android.server.notification.NotificationRecord;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r18 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r19 = virtualinvoke r18.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $z1 = virtualinvoke r19.<android.app.Notification: boolean isGroupSummary()>();

        if $z1 == 0 goto label01;

        $z4 = virtualinvoke r18.<android.service.notification.StatusBarNotification: boolean isAppGroup()>();

        if $z4 != 0 goto label01;

        $i3 = r19.<android.app.Notification: int flags>;

        $i4 = $i3 & -513;

        r19.<android.app.Notification: int flags> = $i4;

     label01:
        r3 = virtualinvoke r18.<android.service.notification.StatusBarNotification: java.lang.String getGroupKey()>();

        z0 = virtualinvoke r19.<android.app.Notification: boolean isGroupSummary()>();

        r20 = null;

        if r2 == null goto label02;

        $r17 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r21 = virtualinvoke $r17.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        goto label03;

     label02:
        r21 = null;

     label03:
        if r2 == null goto label04;

        $r16 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r20 = virtualinvoke $r16.<android.service.notification.StatusBarNotification: java.lang.String getGroupKey()>();

     label04:
        if r2 == null goto label05;

        $z3 = virtualinvoke r21.<android.app.Notification: boolean isGroupSummary()>();

        if $z3 == 0 goto label05;

        z5 = 1;

        goto label06;

     label05:
        z5 = 0;

     label06:
        if z5 == 0 goto label09;

        $r7 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mSummaryByGroupKey>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r20);

        r22 = (com.android.server.notification.NotificationRecord) $r8;

        if r22 == r2 goto label09;

        if r22 == null goto label07;

        r23 = virtualinvoke r22.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        goto label08;

     label07:
        r23 = "<null>";

     label08:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed summary didn\'t match old notification: old=");

        $r11 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", removed=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r15);

     label09:
        if z0 == 0 goto label10;

        $r5 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mSummaryByGroupKey>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r1);

        goto label10;

     label10:
        if z5 == 0 goto label12;

        if z0 == 0 goto label11;

        $z2 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 != 0 goto label12;

     label11:
        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelGroupChildrenLocked(com.android.server.notification.NotificationRecord,int,int,java.lang.String,boolean,com.android.server.notification.NotificationManagerService$FlagChecker,int)>(r2, i0, i1, null, 0, null, 8);

     label12:
        return;
    }

    private void handleKillTokenTimeout(com.android.server.notification.toast.ToastRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean $z0;
        int $i0;
        android.os.Binder $r1, $r4;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        com.android.server.notification.toast.ToastRecord r8;
        java.util.ArrayList r10;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r8 := @parameter0: com.android.server.notification.toast.ToastRecord;

        $z0 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Kill Token Timeout token=");

        $r4 = r8.<com.android.server.notification.toast.ToastRecord: android.os.Binder windowToken>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r6);

     label1:
        r10 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        entermonitor r10;

     label2:
        $r1 = r8.<com.android.server.notification.toast.ToastRecord: android.os.Binder windowToken>;

        $i0 = r8.<com.android.server.notification.toast.ToastRecord: int displayId>;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void finishWindowTokenLocked(android.os.IBinder,int)>($r1, $i0);

        exitmonitor r10;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r10;

     label6:
        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void handleListenerHintsChanged(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyListenerHintsChangedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void handleListenerInterruptionFilterChanged(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyInterruptionFilterChanged(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void handleRankingReconsideration(android.os.Message)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.Object r1, $r3, $r4, $r7;
        com.android.server.notification.NotificationRecord r2;
        boolean z0, $z2, $z3, $z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;
        android.util.ArrayMap $r5;
        java.lang.String $r6;
        java.util.ArrayList $r8;
        com.android.server.notification.RankingHelper $r9;
        int $i0, i3, i4, i5;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r10;
        long $l1;
        java.lang.Throwable $r11, $r12, $r13, r16;
        android.os.Message r14;
        com.android.server.notification.RankingReconsideration r15;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r14 := @parameter0: android.os.Message;

        $r3 = r14.<android.os.Message: java.lang.Object obj>;

        $z2 = $r3 instanceof com.android.server.notification.RankingReconsideration;

        if $z2 != 0 goto label01;

        return;

     label01:
        $r4 = r14.<android.os.Message: java.lang.Object obj>;

        r15 = (com.android.server.notification.RankingReconsideration) $r4;

        virtualinvoke r15.<com.android.server.notification.RankingReconsideration: void run()>();

        r1 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label02:
        $r5 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r6 = virtualinvoke r15.<com.android.server.notification.RankingReconsideration: java.lang.String getKey()>();

        $r7 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        r2 = (com.android.server.notification.NotificationRecord) $r7;

     label03:
        if r2 != null goto label07;

     label04:
        exitmonitor r1;

     label05:
        return;

     label06:
        $r12 := @caughtexception;

        r16 = $r12;

        goto label32;

     label07:
        i3 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: int findNotificationRecordIndexLocked(com.android.server.notification.NotificationRecord)>(r2);

        z0 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: boolean isIntercepted()>();

        i4 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: int getPackageVisibilityOverride()>();

        z5 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: boolean isInterruptive()>();

        virtualinvoke r15.<com.android.server.notification.RankingReconsideration: void applyChangesLocked(com.android.server.notification.NotificationRecord)>(r2);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void applyZenModeLocked(com.android.server.notification.NotificationRecord)>(r2);

        $r9 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        $r8 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        virtualinvoke $r9.<com.android.server.notification.RankingHelper: void sort(java.util.ArrayList)>($r8);

        i5 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: int findNotificationRecordIndexLocked(com.android.server.notification.NotificationRecord)>(r2);

     label08:
        if i3 == i5 goto label09;

        z6 = 1;

        goto label10;

     label09:
        z6 = 0;

     label10:
        $z3 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: boolean isIntercepted()>();

        if z0 == $z3 goto label12;

     label11:
        z7 = 1;

        goto label13;

     label12:
        z7 = 0;

     label13:
        $i0 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: int getPackageVisibilityOverride()>();

        if i4 == $i0 goto label15;

     label14:
        z8 = 1;

        goto label16;

     label15:
        z8 = 0;

     label16:
        z9 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: boolean canBubble()>();

     label17:
        if z9 == 0 goto label20;

     label18:
        z10 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: boolean isInterruptive()>();

     label19:
        if z5 == z10 goto label20;

        z11 = 1;

        goto label21;

     label20:
        z11 = 0;

     label21:
        z12 = 1;

        if z6 != 0 goto label23;

        z12 = 1;

        if z7 != 0 goto label23;

        z12 = 1;

        if z8 != 0 goto label23;

        if z11 == 0 goto label22;

        z12 = 1;

        goto label23;

     label22:
        z12 = 0;

     label23:
        if z0 == 0 goto label28;

     label24:
        z13 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: boolean isIntercepted()>();

     label25:
        if z13 != 0 goto label28;

     label26:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $z4 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: boolean isNewEnoughForAlerting(long)>($l1);

        if $z4 == 0 goto label28;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: int buzzBeepBlinkLocked(com.android.server.notification.NotificationRecord)>(r2);

     label27:
        goto label28;

     label28:
        exitmonitor r1;

     label29:
        if z12 == 0 goto label30;

        $r10 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r10.<com.android.server.notification.NotificationManagerService$WorkerHandler: void scheduleSendRankingUpdate()>();

     label30:
        return;

     label31:
        $r13 := @caughtexception;

        r16 = $r13;

     label32:
        exitmonitor r1;

     label33:
        throw r16;

     label34:
        $r11 := @caughtexception;

        r16 = $r11;

        goto label32;

        catch java.lang.Throwable from label02 to label03 with label31;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label31;
        catch java.lang.Throwable from label10 to label11 with label31;
        catch java.lang.Throwable from label13 to label14 with label31;
        catch java.lang.Throwable from label16 to label17 with label31;
        catch java.lang.Throwable from label18 to label19 with label06;
        catch java.lang.Throwable from label24 to label25 with label31;
        catch java.lang.Throwable from label26 to label27 with label34;
        catch java.lang.Throwable from label28 to label29 with label34;
        catch java.lang.Throwable from label32 to label33 with label34;
    }

    private void handleSendRankingUpdate()
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.Object r1;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyRankingUpdateLocked(java.util.List)>(null);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private boolean hasAutoGroupSummaryLocked(android.service.notification.StatusBarNotification)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.service.notification.StatusBarNotification r1;
        android.util.ArrayMap r2, $r3;
        int $i0;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        java.lang.String $r6;
        boolean $z0, z1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.service.notification.StatusBarNotification;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mAutobundledSummaries>;

        $i0 = virtualinvoke r1.<android.service.notification.StatusBarNotification: int getUserId()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.util.ArrayMap) $r5;

        if r2 == null goto label1;

        $r6 = virtualinvoke r1.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z0 = virtualinvoke r2.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private boolean isBlocked(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        java.lang.String r2, $r7;
        int i0, $i1, $i2;
        android.service.notification.StatusBarNotification $r3, $r4;
        com.android.server.notification.PreferencesHelper $r5, $r8;
        android.app.NotificationChannel $r6;
        boolean $z0, z1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $r3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r2 = virtualinvoke $r3.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r4 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        i0 = virtualinvoke $r4.<android.service.notification.StatusBarNotification: int getUid()>();

        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r6 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.app.NotificationChannel getChannel()>();

        $r7 = virtualinvoke $r6.<android.app.NotificationChannel: java.lang.String getGroup()>();

        $z0 = virtualinvoke $r5.<com.android.server.notification.PreferencesHelper: boolean isGroupBlocked(java.lang.String,int,java.lang.String)>(r2, i0, $r7);

        if $z0 != 0 goto label2;

        $r8 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i1 = virtualinvoke $r8.<com.android.server.notification.PreferencesHelper: int getImportance(java.lang.String,int)>(r2, i0);

        if $i1 == 0 goto label2;

        $i2 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getImportance()>();

        if $i2 != 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    private boolean isCallerAndroid(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r2;
        int i0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isUidSystemOrPhone(int)>(i0);

        if $z0 == 0 goto label1;

        if r1 == null goto label1;

        $r2 = "android";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private boolean isCallerIsSystemOrSysemUiOrShell()
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 2000 goto label2;

        if i0 != 0 goto label1;

        goto label2;

     label1:
        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isCallerIsSystemOrSystemUi()>();

        return $z0;

     label2:
        return 1;
    }

    private boolean isCallerIsSystemOrSystemUi()
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0, z1;
        android.content.Context $r1;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        z0 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isCallerSystemOrPhone()>();

        z1 = 1;

        if z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $i0 = virtualinvoke $r1.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.STATUS_BAR_SERVICE");

        if $i0 != 0 goto label2;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;
    }

    private boolean isCallerSameApp(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r2 := @parameter0: java.lang.String;

     label1:
        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSameApp(java.lang.String)>(r2);

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    private boolean isCallerSameApp(java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSameApp(java.lang.String,int,int)>(r2, i0, i1);

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    private boolean isCritical(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $i0 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getCriticality()>();

        if $i0 >= 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isInCall()
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        boolean $z0;
        android.media.AudioManager $r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $z0 = r0.<com.android.server.notification.NotificationManagerService: boolean mInCallStateOffHook>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        i0 = virtualinvoke $r1.<android.media.AudioManager: int getMode()>();

        if i0 == 2 goto label3;

        if i0 != 3 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    private boolean isLoopingRingtoneNotification(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        android.media.AudioAttributes $r2;
        int $i0, $i1, $i2;
        android.app.Notification $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.media.AudioAttributes getAudioAttributes()>();

        $i0 = virtualinvoke $r2.<android.media.AudioAttributes: int getUsage()>();

        if $i0 != 6 goto label1;

        $r3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $i1 = $r3.<android.app.Notification: int flags>;

        $i2 = $i1 & 4;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isNotificationForCurrentUser(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        long l0;
        int i1, $i2, $i3, $i4;
        com.android.server.notification.ManagedServices$UserProfiles $r1;
        boolean $z0, z1;
        java.lang.Throwable $r2;
        com.android.server.notification.NotificationRecord r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r3 := @parameter0: com.android.server.notification.NotificationRecord;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        i1 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        $i2 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: int getUserId()>();

        if $i2 == -1 goto label4;

        $i3 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: int getUserId()>();

        if $i3 == i1 goto label4;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles>;

        $i4 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: int getUserId()>();

        $z0 = virtualinvoke $r1.<com.android.server.notification.ManagedServices$UserProfiles: boolean isCurrentProfile(int)>($i4);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

        goto label5;

     label4:
        z1 = 1;

     label5:
        return z1;

     label6:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
    }

    private boolean isPackageSuspendedForUser(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        long l0;
        boolean z0;
        android.content.pm.IPackageManager $r1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3, $r4;
        java.lang.String r5;
        int i1, i2;
        java.lang.SecurityException r9;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r5 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

     label1:
        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager mPackageManager>;

        z0 = interfaceinvoke $r1.<android.content.pm.IPackageManager: boolean isPackageSuspendedForUser(java.lang.String,int)>(r5, i2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r4 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label5:
        $r2 := @caughtexception;

     label6:
        r9 = new java.lang.SecurityException;

        specialinvoke r9.<java.lang.SecurityException: void <init>(java.lang.String)>("Could not talk to package manager service");

        throw r9;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
    }

    private boolean isVisibleToListener(android.service.notification.StatusBarNotification, com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.service.notification.StatusBarNotification r1;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.service.notification.StatusBarNotification;

        r2 := @parameter1: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        $i0 = virtualinvoke r1.<android.service.notification.StatusBarNotification: int getUserId()>();

        $z0 = virtualinvoke r2.<com.android.server.notification.ManagedServices$ManagedServiceInfo: boolean enabledAndUserMatches(int)>($i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    private void keepProcessAliveForToastIfNeededLocked(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, $i2, i3, i4, i5;
        android.app.IActivityManager r1;
        java.lang.Object $r2;
        com.android.server.notification.toast.ToastRecord $r3;
        android.os.RemoteException $r4;
        java.util.ArrayList r5;
        android.os.IBinder r6;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i3 = 0;

        r5 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i1 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i4 = 0;

     label1:
        if i4 >= i1 goto label3;

        i5 = i3;

        $r2 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r3 = (com.android.server.notification.toast.ToastRecord) $r2;

        $i2 = $r3.<com.android.server.notification.toast.ToastRecord: int pid>;

        if $i2 != i0 goto label2;

        i5 = i3 + 1;

     label2:
        i4 = i4 + 1;

        i3 = i5;

        goto label1;

     label3:
        r1 = r0.<com.android.server.notification.NotificationManagerService: android.app.IActivityManager mAm>;

        r6 = r0.<com.android.server.notification.NotificationManagerService: android.os.IBinder mForegroundToken>;

     label4:
        if i3 <= 0 goto label5;

        z0 = 1;

        goto label6;

     label5:
        z0 = 0;

     label6:
        interfaceinvoke r1.<android.app.IActivityManager: void setProcessImportant(android.os.IBinder,int,boolean,java.lang.String)>(r6, i0, z0, "toast");

     label7:
        goto label9;

     label8:
        $r4 := @caughtexception;

     label9:
        return;

        catch android.os.RemoteException from label3 to label4 with label8;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    private android.service.notification.NotificationRankingUpdate makeRankingUpdateLocked(com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        int i0, i1, i2, i3, i4, i5, i7;
        com.android.server.notification.NotificationRecord r3;
        java.lang.String r4, r25;
        boolean z0, z1, z2, $z3, z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.CharSequence r6;
        android.app.NotificationChannel r7;
        java.util.ArrayList r8, r9, $r10, $r11, $r16, $r26, $r27;
        long l6;
        android.service.notification.NotificationRankingUpdate $r12;
        android.service.notification.NotificationListenerService$Ranking[] $r13, $r15;
        java.lang.Object[] $r14;
        java.lang.Object $r17;
        android.service.notification.StatusBarNotification $r18, $r19, $r21;
        android.service.notification.NotificationListenerService$Ranking $r20;
        android.net.Uri $r22;
        long[] $r23;
        android.content.pm.ShortcutInfo $r28;
        android.app.Notification $r29;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        $r10 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        i7 = 0;

     label1:
        z5 = 0;

        if i7 >= i0 goto label6;

        $r16 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r3 = (com.android.server.notification.NotificationRecord) $r17;

        $r18 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $z3 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isVisibleToListener(android.service.notification.StatusBarNotification,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($r18, r1);

        if $z3 != 0 goto label2;

        goto label5;

     label2:
        $r19 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r4 = virtualinvoke $r19.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        $r20 = new android.service.notification.NotificationListenerService$Ranking;

        specialinvoke $r20.<android.service.notification.NotificationListenerService$Ranking: void <init>()>();

        i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        z0 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: boolean isIntercepted()>();

        i2 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: int getPackageVisibilityOverride()>();

        i3 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: int getSuppressedVisualEffects()>();

        i4 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: int getImportance()>();

        r6 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: java.lang.CharSequence getImportanceExplanation()>();

        $r21 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r25 = virtualinvoke $r21.<android.service.notification.StatusBarNotification: java.lang.String getOverrideGroupKey()>();

        r7 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: android.app.NotificationChannel getChannel()>();

        r8 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: java.util.ArrayList getPeopleOverride()>();

        r9 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: java.util.ArrayList getSnoozeCriteria()>();

        z1 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: boolean canShowBadge()>();

        i5 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: int getUserSentiment()>();

        z2 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: boolean isHidden()>();

        l6 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: long getLastAudiblyAlertedMs()>();

        $r22 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: android.net.Uri getSound()>();

        if $r22 != null goto label3;

        $r23 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: long[] getVibration()>();

        if $r23 == null goto label4;

     label3:
        z5 = 1;

     label4:
        $z6 = z0 ^ 1;

        $r26 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: java.util.ArrayList getSystemGeneratedSmartActions()>();

        $r27 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: java.util.ArrayList getSmartReplies()>();

        $z7 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: boolean canBubble()>();

        $z8 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: boolean isInterruptive()>();

        $z9 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: boolean isConversation()>();

        $r28 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: android.content.pm.ShortcutInfo getShortcutInfo()>();

        $r29 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $z10 = virtualinvoke $r29.<android.app.Notification: boolean isBubbleNotification()>();

        virtualinvoke $r20.<android.service.notification.NotificationListenerService$Ranking: void populate(java.lang.String,int,boolean,int,int,int,java.lang.CharSequence,java.lang.String,android.app.NotificationChannel,java.util.ArrayList,java.util.ArrayList,boolean,int,boolean,long,boolean,java.util.ArrayList,java.util.ArrayList,boolean,boolean,boolean,android.content.pm.ShortcutInfo,boolean)>(r4, i1, $z6, i2, i3, i4, r6, r25, r7, r8, r9, z1, i5, z2, l6, z5, $r26, $r27, $z7, $z8, $z9, $r28, $z10);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label5:
        i7 = i7 + 1;

        goto label1;

     label6:
        $r12 = new android.service.notification.NotificationRankingUpdate;

        $r13 = newarray (android.service.notification.NotificationListenerService$Ranking)[0];

        $r14 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        $r15 = (android.service.notification.NotificationListenerService$Ranking[]) $r14;

        specialinvoke $r12.<android.service.notification.NotificationRankingUpdate: void <init>(android.service.notification.NotificationListenerService$Ranking[])>($r15);

        return $r12;
    }

    private void maybeNotifyChannelGroupOwner(java.lang.String, int, android.app.NotificationChannelGroup, android.app.NotificationChannelGroup)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i1;
        android.app.NotificationChannelGroup r1, r11;
        android.content.Intent r2, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, r10;
        android.os.UserHandle $r8;
        java.lang.Throwable $r9;
        android.content.Context r12;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r10 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r11 := @parameter2: android.app.NotificationChannelGroup;

        r1 := @parameter3: android.app.NotificationChannelGroup;

     label1:
        $z0 = virtualinvoke r11.<android.app.NotificationChannelGroup: boolean isBlocked()>();

        $z1 = virtualinvoke r1.<android.app.NotificationChannelGroup: boolean isBlocked()>();

        if $z0 == $z1 goto label2;

        r12 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("android.app.action.NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED");

        $r3 = virtualinvoke r1.<android.app.NotificationChannelGroup: java.lang.String getId()>();

        $r4 = virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.app.extra.NOTIFICATION_CHANNEL_GROUP_ID", $r3);

        $z2 = virtualinvoke r1.<android.app.NotificationChannelGroup: boolean isBlocked()>();

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.app.extra.BLOCKED_STATE", $z2);

        $r6 = virtualinvoke $r5.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r7 = virtualinvoke $r6.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r10);

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r8 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i1);

        virtualinvoke r12.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r7, $r8, null);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Can\'t notify app about group change", $r9);

     label4:
        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    private void maybeNotifyChannelOwner(java.lang.String, int, android.app.NotificationChannel, android.app.NotificationChannel)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.app.NotificationChannel r1, r9;
        java.lang.String $r2, r8;
        android.content.Intent $r3, $r4, $r5, r11, r12;
        android.os.UserHandle $r6;
        java.lang.Throwable $r7;
        android.content.Context r10;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r9 := @parameter2: android.app.NotificationChannel;

        r1 := @parameter3: android.app.NotificationChannel;

     label1:
        $i1 = virtualinvoke r9.<android.app.NotificationChannel: int getImportance()>();

        if $i1 != 0 goto label2;

        $i6 = virtualinvoke r1.<android.app.NotificationChannel: int getImportance()>();

        if $i6 != 0 goto label3;

     label2:
        $i2 = virtualinvoke r9.<android.app.NotificationChannel: int getImportance()>();

        if $i2 == 0 goto label7;

        $i3 = virtualinvoke r1.<android.app.NotificationChannel: int getImportance()>();

        if $i3 != 0 goto label7;

     label3:
        r10 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        r11 = new android.content.Intent;

        specialinvoke r11.<android.content.Intent: void <init>(java.lang.String)>("android.app.action.NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED");

        $r2 = virtualinvoke r1.<android.app.NotificationChannel: java.lang.String getId()>();

        r12 = virtualinvoke r11.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.app.extra.NOTIFICATION_CHANNEL_ID", $r2);

        $i4 = virtualinvoke r1.<android.app.NotificationChannel: int getImportance()>();

        if $i4 != 0 goto label5;

     label4:
        z0 = 1;

        goto label6;

     label5:
        z0 = 0;

     label6:
        $r3 = virtualinvoke r12.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.app.extra.BLOCKED_STATE", z0);

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r8);

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r6 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i5);

        virtualinvoke r10.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r5, $r6, null);

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Can\'t notify app about channel change", $r7);

     label9:
        return;

        catch java.lang.SecurityException from label1 to label2 with label8;
        catch java.lang.SecurityException from label2 to label3 with label8;
        catch java.lang.SecurityException from label3 to label4 with label8;
        catch java.lang.SecurityException from label6 to label7 with label8;
    }

    private boolean notificationMatchesCurrentProfiles(com.android.server.notification.NotificationRecord, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        int i0, $i1;
        boolean $z0, $z1, z2;
        com.android.server.notification.ManagedServices$UserProfiles $r2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean notificationMatchesUserId(com.android.server.notification.NotificationRecord,int)>(r1, i0);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles>;

        $i1 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getUserId()>();

        $z1 = virtualinvoke $r2.<com.android.server.notification.ManagedServices$UserProfiles: boolean isCurrentProfile(int)>($i1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    private boolean notificationMatchesUserId(com.android.server.notification.NotificationRecord, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        i0 := @parameter1: int;

        if i0 == -1 goto label2;

        $i1 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getUserId()>();

        if $i1 == -1 goto label2;

        $i2 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getUserId()>();

        if $i2 != i0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private void onConversationRemovedInternal(java.lang.String, int, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r9, r10;
        int i0, $i1, $i2, $i3;
        java.util.Iterator r2;
        com.android.server.notification.NotificationHistoryManager $r5;
        com.android.server.notification.PreferencesHelper $r6;
        java.util.List $r7;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r9 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSystem()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>(r9);

        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationHistoryManager mHistoryManager>;

        virtualinvoke $r5.<com.android.server.notification.NotificationHistoryManager: void deleteConversation(java.lang.String,int,java.lang.String)>(r1, i0, r9);

        $r6 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r7 = virtualinvoke $r6.<com.android.server.notification.PreferencesHelper: java.util.List deleteConversation(java.lang.String,int,java.lang.String)>(r1, i0, r9);

        r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r8;

        $i1 = <com.android.server.notification.NotificationManagerService: int MY_UID>;

        $i2 = <com.android.server.notification.NotificationManagerService: int MY_PID>;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelAllNotificationsInt(int,int,java.lang.String,java.lang.String,int,int,boolean,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($i1, $i2, r1, r10, 0, 0, 1, $i3, 17, null);

        goto label1;

     label2:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    private boolean playSound(com.android.server.notification.NotificationRecord, android.net.Uri)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.net.Uri r1;
        long l0;
        android.media.IRingtonePlayer r2;
        java.lang.StringBuilder r3;
        android.app.Notification $r4;
        int $i1, $i2, $i3, $i4;
        android.media.AudioManager $r5, $r6, $r8;
        boolean $z0, $z1, z2;
        android.media.AudioAttributes $r7, $r11, $r15;
        android.service.notification.StatusBarNotification $r9;
        android.os.UserHandle $r10;
        java.lang.String $r17;
        android.os.RemoteException $r18;
        java.lang.Throwable $r19;
        com.android.server.notification.NotificationRecord r20;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r20 := @parameter0: com.android.server.notification.NotificationRecord;

        r1 := @parameter1: android.net.Uri;

        $r4 = virtualinvoke r20.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $i1 = $r4.<android.app.Notification: int flags>;

        $i2 = $i1 & 4;

        if $i2 == 0 goto label01;

        z2 = 1;

        goto label02;

     label01:
        z2 = 0;

     label02:
        $r5 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        $z0 = virtualinvoke $r5.<android.media.AudioManager: boolean isAudioFocusExclusive()>();

        if $z0 != 0 goto label12;

        $r6 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        $r7 = virtualinvoke r20.<com.android.server.notification.NotificationRecord: android.media.AudioAttributes getAudioAttributes()>();

        $i3 = staticinvoke <android.media.AudioAttributes: int toLegacyStreamType(android.media.AudioAttributes)>($r7);

        $i4 = virtualinvoke $r6.<android.media.AudioManager: int getStreamVolume(int)>($i3);

        if $i4 == 0 goto label12;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r8 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        r2 = virtualinvoke $r8.<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()>();

     label04:
        if r2 == null goto label08;

     label05:
        $z1 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z1 == 0 goto label06;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Playing sound ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with attributes ");

        $r15 = virtualinvoke r20.<com.android.server.notification.NotificationRecord: android.media.AudioAttributes getAudioAttributes()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r17);

     label06:
        $r9 = virtualinvoke r20.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r10 = virtualinvoke $r9.<android.service.notification.StatusBarNotification: android.os.UserHandle getUser()>();

        $r11 = virtualinvoke r20.<com.android.server.notification.NotificationRecord: android.media.AudioAttributes getAudioAttributes()>();

        interfaceinvoke r2.<android.media.IRingtonePlayer: void playAsync(android.net.Uri,android.os.UserHandle,boolean,android.media.AudioAttributes)>(r1, $r10, z2, $r11);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label08:
        goto label11;

     label09:
        $r19 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r19;

     label10:
        $r18 := @caughtexception;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label12:
        return 0;

        catch android.os.RemoteException from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch android.os.RemoteException from label06 to label07 with label10;
        catch java.lang.Throwable from label06 to label07 with label09;
    }

    private boolean playVibration(com.android.server.notification.NotificationRecord, long[], boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0, z1;
        long l0;
        android.os.VibrationEffect r1;
        java.lang.Thread r2;
        android.app.Notification $r3;
        int $i1, $i2, $i3;
        android.os.Vibrator $r4;
        android.service.notification.StatusBarNotification $r5, $r6;
        java.lang.String $r7, $r11, $r13;
        android.media.AudioAttributes $r8;
        java.lang.Throwable $r9, $r14;
        com.android.server.notification.NotificationRecord r15;
        long[] r16;
        byte b5;
        com.android.server.notification._$$Lambda$NotificationManagerService$BDavS_Sg4m_dKO3ZgtuCsFeqqms r17;
        java.lang.StringBuilder r20;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r15 := @parameter0: com.android.server.notification.NotificationRecord;

        r16 := @parameter1: long[];

        z0 := @parameter2: boolean;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r3 = virtualinvoke r15.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $i1 = $r3.<android.app.Notification: int flags>;

        $i2 = $i1 & 4;

        if $i2 == 0 goto label03;

     label02:
        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        if z1 == 0 goto label05;

        b5 = 0;

        goto label06;

     label05:
        b5 = -1;

     label06:
        r1 = staticinvoke <android.os.VibrationEffect: android.os.VibrationEffect createWaveform(long[],int)>(r16, b5);

     label07:
        if z0 == 0 goto label10;

     label08:
        r2 = new java.lang.Thread;

        r17 = new com.android.server.notification._$$Lambda$NotificationManagerService$BDavS_Sg4m_dKO3ZgtuCsFeqqms;

        specialinvoke r17.<com.android.server.notification._$$Lambda$NotificationManagerService$BDavS_Sg4m_dKO3ZgtuCsFeqqms: void <init>(com.android.server.notification.NotificationManagerService,com.android.server.notification.NotificationRecord,android.os.VibrationEffect)>(r0, r15, r1);

        specialinvoke r2.<java.lang.Thread: void <init>(java.lang.Runnable)>(r17);

        virtualinvoke r2.<java.lang.Thread: void start()>();

     label09:
        goto label11;

     label10:
        $r4 = r0.<com.android.server.notification.NotificationManagerService: android.os.Vibrator mVibrator>;

        $r5 = virtualinvoke r15.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i3 = virtualinvoke $r5.<android.service.notification.StatusBarNotification: int getUid()>();

        $r6 = virtualinvoke r15.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r7 = virtualinvoke $r6.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r8 = virtualinvoke r15.<com.android.server.notification.NotificationRecord: android.media.AudioAttributes getAudioAttributes()>();

        virtualinvoke $r4.<android.os.Vibrator: void vibrate(int,java.lang.String,android.os.VibrationEffect,java.lang.String,android.media.AudioAttributes)>($i3, $r7, r1, "Notification", $r8);

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label12:
        $r14 := @caughtexception;

        goto label16;

     label13:
        $r9 := @caughtexception;

     label14:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error creating vibration waveform with pattern: ");

        $r11 = staticinvoke <java.util.Arrays: java.lang.String toString(long[])>(r16);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r13);

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r14;

        catch java.lang.IllegalArgumentException from label01 to label02 with label13;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.IllegalArgumentException from label06 to label07 with label13;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label12;
    }

    private int pullNotificationStates(int, java.util.List)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        java.util.List r1;
        com.android.server.notification.ZenModeHelper $r2;
        com.android.server.notification.PreferencesHelper $r3, $r4, $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        if i0 == 10084 goto label5;

        tableswitch(i0)
        {
            case 10071: goto label4;
            case 10072: goto label3;
            case 10073: goto label2;
            default: goto label1;
        };

     label1:
        goto label6;

     label2:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r3.<com.android.server.notification.PreferencesHelper: void pullPackageChannelGroupPreferencesStats(java.util.List)>(r1);

        goto label6;

     label3:
        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: void pullPackageChannelPreferencesStats(java.util.List)>(r1);

        goto label6;

     label4:
        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r5.<com.android.server.notification.PreferencesHelper: void pullPackagePreferencesStats(java.util.List)>(r1);

        goto label6;

     label5:
        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r2.<com.android.server.notification.ZenModeHelper: void pullRules(java.util.List)>(r1);

     label6:
        return 0;
    }

    private void recordCallerLocked(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        com.android.server.notification.ZenModeHelper $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $z0 = virtualinvoke $r2.<com.android.server.notification.ZenModeHelper: boolean isCall(com.android.server.notification.NotificationRecord)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r3.<com.android.server.notification.ZenModeHelper: void recordCaller(com.android.server.notification.NotificationRecord)>(r1);

     label1:
        return;
    }

    private void registerDeviceConfigChange()
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification._$$Lambda$NotificationManagerService$NFdAeB_4Fj_ZP4GXkIVrEH_Cxj8 $r1;
        android.os.HandlerExecutor $r2;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r3;
        android.provider.DeviceConfig$OnPropertiesChangedListener $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = new com.android.server.notification._$$Lambda$NotificationManagerService$NFdAeB_4Fj_ZP4GXkIVrEH_Cxj8;

        specialinvoke $r1.<com.android.server.notification._$$Lambda$NotificationManagerService$NFdAeB_4Fj_ZP4GXkIVrEH_Cxj8: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: android.provider.DeviceConfig$OnPropertiesChangedListener mDeviceConfigChangedListener> = $r1;

        $r2 = new android.os.HandlerExecutor;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        specialinvoke $r2.<android.os.HandlerExecutor: void <init>(android.os.Handler)>($r3);

        $r4 = r0.<com.android.server.notification.NotificationManagerService: android.provider.DeviceConfig$OnPropertiesChangedListener mDeviceConfigChangedListener>;

        staticinvoke <android.provider.DeviceConfig: void addOnPropertiesChangedListener(java.lang.String,java.util.concurrent.Executor,android.provider.DeviceConfig$OnPropertiesChangedListener)>("systemui", $r2, $r4);

        return;
    }

    private void registerNotificationPreferencesPullers()
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$StatsPullAtomCallbackImpl $r1, $r2, $r5, $r8, $r13;
        java.util.concurrent.Executor $r3, $r6, $r9, $r12;
        android.app.StatsManager $r4, $r7, $r10, $r11;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = new com.android.server.notification.NotificationManagerService$StatsPullAtomCallbackImpl;

        specialinvoke $r1.<com.android.server.notification.NotificationManagerService$StatsPullAtomCallbackImpl: void <init>(com.android.server.notification.NotificationManagerService,com.android.server.notification.NotificationManagerService$1)>(r0, null);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$StatsPullAtomCallbackImpl mPullAtomCallback> = $r1;

        $r4 = r0.<com.android.server.notification.NotificationManagerService: android.app.StatsManager mStatsManager>;

        $r3 = <com.android.internal.util.ConcurrentUtils: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$StatsPullAtomCallbackImpl mPullAtomCallback>;

        virtualinvoke $r4.<android.app.StatsManager: void setPullAtomCallback(int,android.app.StatsManager$PullAtomMetadata,java.util.concurrent.Executor,android.app.StatsManager$StatsPullAtomCallback)>(10071, null, $r3, $r2);

        $r7 = r0.<com.android.server.notification.NotificationManagerService: android.app.StatsManager mStatsManager>;

        $r6 = <com.android.internal.util.ConcurrentUtils: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$StatsPullAtomCallbackImpl mPullAtomCallback>;

        virtualinvoke $r7.<android.app.StatsManager: void setPullAtomCallback(int,android.app.StatsManager$PullAtomMetadata,java.util.concurrent.Executor,android.app.StatsManager$StatsPullAtomCallback)>(10072, null, $r6, $r5);

        $r10 = r0.<com.android.server.notification.NotificationManagerService: android.app.StatsManager mStatsManager>;

        $r9 = <com.android.internal.util.ConcurrentUtils: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        $r8 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$StatsPullAtomCallbackImpl mPullAtomCallback>;

        virtualinvoke $r10.<android.app.StatsManager: void setPullAtomCallback(int,android.app.StatsManager$PullAtomMetadata,java.util.concurrent.Executor,android.app.StatsManager$StatsPullAtomCallback)>(10073, null, $r9, $r8);

        $r11 = r0.<com.android.server.notification.NotificationManagerService: android.app.StatsManager mStatsManager>;

        $r12 = staticinvoke <com.android.internal.os.BackgroundThread: java.util.concurrent.Executor getExecutor()>();

        $r13 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$StatsPullAtomCallbackImpl mPullAtomCallback>;

        virtualinvoke $r11.<android.app.StatsManager: void setPullAtomCallback(int,android.app.StatsManager$PullAtomMetadata,java.util.concurrent.Executor,android.app.StatsManager$StatsPullAtomCallback)>(10084, null, $r12, $r13);

        return;
    }

    private boolean removeDisabledHints(com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean removeDisabledHints(com.android.server.notification.ManagedServices$ManagedServiceInfo,int)>(r1, 0);

        return $z0;
    }

    private boolean removeDisabledHints(com.android.server.notification.ManagedServices$ManagedServiceInfo, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        int i0, i1, $i2, $i3, i4;
        android.util.ArraySet r2;
        android.util.SparseArray $r3, $r4, $r5;
        java.lang.Object $r6;
        android.content.ComponentName $r7;
        boolean $z0, z1, z2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        i0 := @parameter1: int;

        z1 = 0;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        $i2 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i4 = $i2 - 1;

     label1:
        if i4 < 0 goto label4;

        $r4 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        i1 = virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i4);

        $r5 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r2 = (android.util.ArraySet) $r6;

        if i0 == 0 goto label2;

        z2 = z1;

        $i3 = i1 & i0;

        if $i3 != i1 goto label3;

     label2:
        $r7 = r1.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        $z0 = virtualinvoke r2.<android.util.ArraySet: boolean remove(java.lang.Object)>($r7);

        z2 = z1 | $z0;

     label3:
        i4 = i4 + -1;

        z1 = z2;

        goto label1;

     label4:
        return z1;
    }

    private boolean removeFromNotificationListsLocked(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1, r10, r13;
        java.util.ArrayList $r2, $r4, $r5, $r11;
        java.lang.String $r3, $r8, $r12;
        android.util.ArrayMap $r6;
        android.service.notification.StatusBarNotification $r7;
        boolean z2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        z2 = 0;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        r10 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord findNotificationByListLocked(java.util.ArrayList,java.lang.String)>($r2, $r3);

        if r10 == null goto label1;

        $r5 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r10);

        $r6 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r7 = virtualinvoke r10.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r8 = virtualinvoke $r7.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r8);

        z2 = 1;

     label1:
        $r11 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        $r12 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        r13 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord findNotificationByListLocked(java.util.ArrayList,java.lang.String)>($r11, $r12);

        if r13 == null goto label2;

        $r4 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r13);

        goto label1;

     label2:
        return z2;
    }

    private boolean removeRemoteView(java.lang.String, java.lang.String, int, android.widget.RemoteViews)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r2, $r13, $r22;
        int i0, i1, $i2, $i4, $i6;
        com.android.server.notification.NotificationUsageStats $r3;
        java.lang.StringBuilder $r4, $r14;
        android.widget.RemoteViews r23;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r23 := @parameter3: android.widget.RemoteViews;

        if r23 != null goto label1;

        return 0;

     label1:
        i1 = virtualinvoke r23.<android.widget.RemoteViews: int estimateMemoryUsage()>();

        $i2 = r0.<com.android.server.notification.NotificationManagerService: int mWarnRemoteViewsSizeBytes>;

        if i1 <= $i2 goto label2;

        $i4 = r0.<com.android.server.notification.NotificationManagerService: int mStripRemoteViewsSizeBytes>;

        if i1 >= $i4 goto label2;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteViews too large on pkg: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tag: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" this might be stripped in a future release");

        $r22 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r22);

     label2:
        $i6 = r0.<com.android.server.notification.NotificationManagerService: int mStripRemoteViewsSizeBytes>;

        if i1 < $i6 goto label3;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        virtualinvoke $r3.<com.android.server.notification.NotificationUsageStats: void registerImageRemoved(java.lang.String)>(r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed too large RemoteViews (");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes) on pkg: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tag: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r13);

        return 1;

     label3:
        return 0;
    }

    private void revokeUriPermission(android.os.IBinder, android.net.Uri, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.net.Uri r1, $r5;
        int i0;
        long l1;
        java.lang.String $r2, $r3;
        boolean $z0;
        com.android.server.uri.UriGrantsManagerInternal $r4;
        java.lang.Throwable $r6;
        android.os.IBinder r7;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        if r1 == null goto label5;

        $r2 = "content";

        $r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        goto label5;

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        $r5 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r1);

        interfaceinvoke $r4.<com.android.server.uri.UriGrantsManagerInternal: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>(r7, $r5, 1, i0);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label4:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private static boolean safeBoolean(java.lang.String, boolean)
    {
        java.lang.String r0;
        boolean z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z1 == 0 goto label1;

        return z0;

     label1:
        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r0);

        return $z2;
    }

    private void scheduleDurationReachedLocked(com.android.server.notification.toast.ToastRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.toast.ToastRecord r1;
        android.os.Message r2;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r3, $r4, $r6;
        int $i0, i3;
        android.view.accessibility.AccessibilityManager $r5;
        long $l1;
        short s2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.toast.ToastRecord;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$WorkerHandler: void removeCallbacksAndMessages(java.lang.Object)>(r1);

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>($r4, 2, r1);

        $i0 = virtualinvoke r1.<com.android.server.notification.toast.ToastRecord: int getDuration()>();

        if $i0 != 1 goto label1;

        s2 = 3500;

        goto label2;

     label1:
        s2 = 2000;

     label2:
        $r5 = r0.<com.android.server.notification.NotificationManagerService: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        i3 = virtualinvoke $r5.<android.view.accessibility.AccessibilityManager: int getRecommendedTimeoutMillis(int,int)>(s2, 2);

        $r6 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $l1 = (long) i3;

        virtualinvoke $r6.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, $l1);

        return;
    }

    private void scheduleInterruptionFilterChanged(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r1, $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r1.<com.android.server.notification.NotificationManagerService$WorkerHandler: void removeMessages(int)>(6);

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r3 = virtualinvoke $r2.<com.android.server.notification.NotificationManagerService$WorkerHandler: android.os.Message obtainMessage(int,int,int)>(6, i0, 0);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void scheduleKillTokenTimeout(com.android.server.notification.toast.ToastRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r1, $r2, $r3;
        com.android.server.notification.toast.ToastRecord r4;
        android.os.Message r5;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r4 := @parameter0: com.android.server.notification.toast.ToastRecord;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r1.<com.android.server.notification.NotificationManagerService$WorkerHandler: void removeCallbacksAndMessages(java.lang.Object)>(r4);

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        r5 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>($r2, 7, r4);

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean sendMessageDelayed(android.os.Message,long)>(r5, 11000L);

        return;
    }

    private void scheduleListenerHintsChanged(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r1, $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r1.<com.android.server.notification.NotificationManagerService$WorkerHandler: void removeMessages(int)>(5);

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r3 = virtualinvoke $r2.<com.android.server.notification.NotificationManagerService$WorkerHandler: android.os.Message obtainMessage(int,int,int)>(5, i0, 0);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void sendRegisteredOnlyBroadcast(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.Intent $r2, $r4;
        android.content.Context $r3, $r12;
        android.os.UserHandle $r5, $r13;
        com.android.server.notification.ConditionProviders $r7;
        java.util.Set $r8;
        boolean $z0;
        java.lang.Object $r9;
        java.lang.String $r10, r14;
        java.util.Iterator r15;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r14 := @parameter0: java.lang.String;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>(r14);

        $r3 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r4 = virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r4, $r5, null);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setFlags(int)>(0);

        $r7 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        $r8 = virtualinvoke $r7.<com.android.server.notification.ConditionProviders: java.util.Set getAllowedPackages()>();

        r15 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.String) $r9;

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r10);

        $r12 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r13 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r12.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r2, $r13);

        goto label1;

     label2:
        return;
    }

    private void updateEffectsSuppressorLocked()
    {
        com.android.server.notification.NotificationManagerService r0;
        long l0, $l1;
        java.util.ArrayList r1;
        com.android.server.notification.ZenModeHelper $r2, $r4;
        byte $b2;
        java.util.List $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        l0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: long calculateSuppressedEffects()>();

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $l1 = virtualinvoke $r2.<com.android.server.notification.ZenModeHelper: long getSuppressedEffects()>();

        $b2 = l0 cmp $l1;

        if $b2 != 0 goto label1;

        return;

     label1:
        r1 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList getSuppressors()>();

        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.List mEffectsSuppressors>;

        staticinvoke <com.android.server.notification.ZenLog: void traceEffectsSuppressorChanged(java.util.List,java.util.List,long)>($r3, r1, l0);

        r0.<com.android.server.notification.NotificationManagerService: java.util.List mEffectsSuppressors> = r1;

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r4.<com.android.server.notification.ZenModeHelper: void setSuppressedEffects(long)>(l0);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void sendRegisteredOnlyBroadcast(java.lang.String)>("android.os.action.ACTION_EFFECTS_SUPPRESSOR_CHANGED");

        return;
    }

    private void updateInterruptionFilterLocked()
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i1;
        com.android.server.notification.ZenModeHelper $r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        i0 = virtualinvoke $r1.<com.android.server.notification.ZenModeHelper: int getZenModeListenerInterruptionFilter()>();

        $i1 = r0.<com.android.server.notification.NotificationManagerService: int mInterruptionFilter>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<com.android.server.notification.NotificationManagerService: int mInterruptionFilter> = i0;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void scheduleInterruptionFilterChanged(int)>(i0);

        return;
    }

    private void updateListenerHintsLocked()
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, $i2;
        java.util.List $r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: int calculateHints()>();

        i1 = r0.<com.android.server.notification.NotificationManagerService: int mListenerHints>;

        if i0 != i1 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.notification.NotificationManagerService: java.util.List mEffectsSuppressors>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        staticinvoke <com.android.server.notification.ZenLog: void traceListenerHintsChanged(int,int,int)>(i1, i0, $i2);

        r0.<com.android.server.notification.NotificationManagerService: int mListenerHints> = i0;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void scheduleListenerHintsChanged(int)>(i0);

        return;
    }

    private void updateNotificationBubbleFlags(com.android.server.notification.NotificationRecord, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0;
        android.app.Notification $r1;
        int $i0, $i1, $i2;
        com.android.server.notification.NotificationRecord r2;
        android.app.Notification$BubbleMetadata r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r2 := @parameter0: com.android.server.notification.NotificationRecord;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        r3 = virtualinvoke $r1.<android.app.Notification: android.app.Notification$BubbleMetadata getBubbleMetadata()>();

        if z0 != 0 goto label1;

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<android.app.Notification$BubbleMetadata: int getFlags()>();

        $i1 = $i0 & -2;

        $i2 = $i1 & -3;

        virtualinvoke r3.<android.app.Notification$BubbleMetadata: void setFlags(int)>($i2);

     label1:
        return;
    }

    private void updateNotificationChannelInt(java.lang.String, int, android.app.NotificationChannel, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r3, $r6, $r8, $r12;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean z0, $z1;
        com.android.server.notification.PreferencesHelper $r2, $r11, $r14;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r4;
        android.os.UserHandle $r5;
        com.android.server.notification.ManagedServices$UserProfiles $r7;
        android.app.NotificationChannel r9, r13, r15;
        android.util.IntArray r10;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r9 := @parameter2: android.app.NotificationChannel;

        z0 := @parameter3: boolean;

        $i3 = virtualinvoke r9.<android.app.NotificationChannel: int getImportance()>();

        if $i3 != 0 goto label2;

        $i4 = <com.android.server.notification.NotificationManagerService: int MY_UID>;

        $i5 = <com.android.server.notification.NotificationManagerService: int MY_PID>;

        $r6 = virtualinvoke r9.<android.app.NotificationChannel: java.lang.String getId()>();

        $i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelAllNotificationsInt(int,int,java.lang.String,java.lang.String,int,int,boolean,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($i4, $i5, r1, $r6, 0, 0, 1, $i6, 17, null);

        $z1 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isUidSystemOrPhone(int)>(i0);

        if $z1 == 0 goto label2;

        $r7 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles>;

        r10 = virtualinvoke $r7.<com.android.server.notification.ManagedServices$UserProfiles: android.util.IntArray getCurrentProfileIds()>();

        i1 = virtualinvoke r10.<android.util.IntArray: int size()>();

        i9 = 0;

     label1:
        if i9 >= i1 goto label2;

        i2 = virtualinvoke r10.<android.util.IntArray: int get(int)>(i9);

        $i7 = <com.android.server.notification.NotificationManagerService: int MY_UID>;

        $i8 = <com.android.server.notification.NotificationManagerService: int MY_PID>;

        $r8 = virtualinvoke r9.<android.app.NotificationChannel: java.lang.String getId()>();

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelAllNotificationsInt(int,int,java.lang.String,java.lang.String,int,int,boolean,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($i7, $i8, r1, $r8, 0, 0, 1, i2, 17, null);

        i9 = i9 + 1;

        goto label1;

     label2:
        $r11 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r12 = virtualinvoke r9.<android.app.NotificationChannel: java.lang.String getId()>();

        r13 = virtualinvoke $r11.<com.android.server.notification.PreferencesHelper: android.app.NotificationChannel getNotificationChannel(java.lang.String,int,java.lang.String,boolean)>(r1, i0, $r12, 1);

        $r14 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r14.<com.android.server.notification.PreferencesHelper: void updateNotificationChannel(java.lang.String,int,android.app.NotificationChannel,boolean)>(r1, i0, r9, 1);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void maybeNotifyChannelOwner(java.lang.String,int,android.app.NotificationChannel,android.app.NotificationChannel)>(r1, i0, r13, r9);

        if z0 != 0 goto label3;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r3 = virtualinvoke r9.<android.app.NotificationChannel: java.lang.String getId()>();

        r15 = virtualinvoke $r2.<com.android.server.notification.PreferencesHelper: android.app.NotificationChannel getNotificationChannel(java.lang.String,int,java.lang.String,boolean)>(r1, i0, $r3, 0);

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        $r5 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyNotificationChannelChanged(java.lang.String,android.os.UserHandle,android.app.NotificationChannel,int)>(r1, $r5, r15, 2);

     label3:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    private void updateNotificationPulse()
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void updateLightsLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void writePolicyXml(java.io.OutputStream, boolean, int) throws java.io.IOException
    {
        com.android.server.notification.NotificationManagerService r0;
        java.io.OutputStream r1;
        boolean z0;
        int i0;
        com.android.internal.util.FastXmlSerializer $r3;
        java.nio.charset.Charset $r4;
        java.lang.String $r5, $r8;
        java.lang.Boolean $r6;
        com.android.server.notification.ZenModeHelper $r10;
        com.android.server.notification.PreferencesHelper $r11;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r12;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r13;
        com.android.server.notification.SnoozeHelper $r14;
        com.android.server.notification.ConditionProviders $r15;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r3 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r3.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r5 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, $r5);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r6);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "notification-policy");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r8);

        $r10 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r10.<com.android.server.notification.ZenModeHelper: void writeXml(org.xmlpull.v1.XmlSerializer,boolean,java.lang.Integer,int)>($r3, z0, null, i0);

        $r11 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r11.<com.android.server.notification.PreferencesHelper: void writeXml(org.xmlpull.v1.XmlSerializer,boolean,int)>($r3, z0, i0);

        $r12 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r12.<com.android.server.notification.NotificationManagerService$NotificationListeners: void writeXml(org.xmlpull.v1.XmlSerializer,boolean,int)>($r3, z0, i0);

        $r13 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        virtualinvoke $r13.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void writeXml(org.xmlpull.v1.XmlSerializer,boolean,int)>($r3, z0, i0);

        $r14 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper>;

        virtualinvoke $r14.<com.android.server.notification.SnoozeHelper: void writeXml(org.xmlpull.v1.XmlSerializer)>($r3);

        $r15 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        virtualinvoke $r15.<com.android.server.notification.ConditionProviders: void writeXml(org.xmlpull.v1.XmlSerializer,boolean,int)>($r3, z0, i0);

        if z0 == 0 goto label1;

        if i0 != 0 goto label2;

     label1:
        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void writeSecureNotificationsPolicy(org.xmlpull.v1.XmlSerializer)>($r3);

     label2:
        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "notification-policy");

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    private void writeSecureNotificationsPolicy(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.notification.NotificationManagerService r0;
        org.xmlpull.v1.XmlSerializer r1;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "allow-secure-notifications-on-lockscreen");

        $z0 = r0.<com.android.server.notification.NotificationManagerService: boolean mLockScreenAllowSecureNotifications>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "allow-secure-notifications-on-lockscreen");

        return;
    }

    void addAutogroupKeyLocked(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r6;
        com.android.server.notification.NotificationRecord r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.service.notification.StatusBarNotification $r5;
        com.android.server.notification.RankingHandler $r7;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.notification.NotificationRecord) $r4;

        if r2 != null goto label1;

        return;

     label1:
        $r5 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r6 = virtualinvoke $r5.<android.service.notification.StatusBarNotification: java.lang.String getOverrideGroupKey()>();

        if $r6 != null goto label2;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void addAutoGroupAdjustment(com.android.server.notification.NotificationRecord,java.lang.String)>(r2, "ranker_group");

        staticinvoke <com.android.server.EventLogTags: void writeNotificationAutogrouped(java.lang.String)>(r1);

        $r7 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHandler mRankingHandler>;

        interfaceinvoke $r7.<com.android.server.notification.RankingHandler: void requestSort()>();

     label2:
        return;
    }

    void addEnqueuedNotification(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    void addNotification(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        java.util.ArrayList $r2;
        android.util.ArrayMap $r3, $r8;
        android.service.notification.StatusBarNotification $r4, $r7;
        java.lang.String $r5, $r9;
        boolean $z1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r4 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r5 = virtualinvoke $r4.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        $r7 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $z1 = virtualinvoke $r7.<android.service.notification.StatusBarNotification: boolean isGroup()>();

        if $z1 == 0 goto label1;

        $r8 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mSummaryByGroupKey>;

        $r9 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getGroupKey()>();

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);

     label1:
        return;
    }

    protected void allowDefaultApprovedServices(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i1, $i2, i3, i4;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r1;
        com.android.server.notification.ConditionProviders $r2;
        java.lang.Object $r3, $r5;
        java.lang.String $r4;
        android.content.ComponentName $r6;
        android.util.ArraySet r7, r8;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        r7 = virtualinvoke $r1.<com.android.server.notification.NotificationManagerService$NotificationListeners: android.util.ArraySet getDefaultComponents()>();

        i3 = 0;

     label1:
        $i1 = virtualinvoke r7.<android.util.ArraySet: int size()>();

        if i3 >= $i1 goto label2;

        $r5 = virtualinvoke r7.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        $r6 = (android.content.ComponentName) $r5;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void allowNotificationListener(int,android.content.ComponentName)>(i0, $r6);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        r8 = virtualinvoke $r2.<com.android.server.notification.ConditionProviders: android.util.ArraySet getDefaultPackages()>();

        i4 = 0;

     label3:
        $i2 = virtualinvoke r8.<android.util.ArraySet: int size()>();

        if i4 >= $i2 goto label4;

        $r3 = virtualinvoke r8.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        $r4 = (java.lang.String) $r3;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void allowDndPackage(java.lang.String)>($r4);

        i4 = i4 + 1;

        goto label3;

     label4:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void setDefaultAssistantForUser(int)>(i0);

        return;
    }

    int buzzBeepBlinkLocked(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        android.app.Notification r2, $r20;
        java.lang.String r3, $r9, $r12, $r15, $r18, $r23, $r26, $r30, $r36, $r37, $r38;
        android.net.Uri r4, $r34;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, z21, z22, z23, z24, z25, $z27, z28, z29, $z30, z31, z32, z33, z34, z35, z36, z37, z39, z40, z41, $z42, z43;
        android.service.notification.StatusBarNotification $r5, $r6, $r19, $r29, $r35;
        int $i0, $i1, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i17, i18, i19, i20, i21, i22, i23;
        java.lang.StringBuilder $r7, $r13, $r21;
        java.util.ArrayList $r27, $r41;
        android.media.AudioManager $r28, $r31, $r32, $r40;
        android.media.AudioAttributes $r33;
        long[] r39;
        com.android.server.lights.LogicalLight r42;
        android.metrics.LogMaker $r46, $r47, $r48, $r49;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $z1 = r0.<com.android.server.notification.NotificationManagerService: boolean mIsAutomotive>;

        if $z1 == 0 goto label01;

        $z20 = r0.<com.android.server.notification.NotificationManagerService: boolean mNotificationEffectsEnabledForAutomotive>;

        if $z20 != 0 goto label01;

        return 0;

     label01:
        $r5 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r2 = virtualinvoke $r5.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        r3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $z2 = r0.<com.android.server.notification.NotificationManagerService: boolean mIsAutomotive>;

        if $z2 == 0 goto label03;

        $i14 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getImportance()>();

        if $i14 <= 3 goto label02;

        z21 = 1;

        goto label05;

     label02:
        z21 = 0;

        goto label05;

     label03:
        $i0 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getImportance()>();

        if $i0 < 3 goto label04;

        z21 = 1;

        goto label05;

     label04:
        z21 = 0;

     label05:
        if r3 == null goto label06;

        $r38 = r0.<com.android.server.notification.NotificationManagerService: java.lang.String mSoundNotificationKey>;

        $z19 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r38);

        if $z19 == 0 goto label06;

        z22 = 1;

        goto label07;

     label06:
        z22 = 0;

     label07:
        if r3 == null goto label08;

        $r37 = r0.<com.android.server.notification.NotificationManagerService: java.lang.String mVibrateNotificationKey>;

        $z18 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r37);

        if $z18 == 0 goto label08;

        z23 = 1;

        goto label09;

     label08:
        z23 = 0;

     label09:
        z24 = 0;

        z25 = 0;

        $z27 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean isIntercepted()>();

        if $z27 == 0 goto label10;

        $i12 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getSuppressedVisualEffects()>();

        $i13 = $i12 & 32;

        if $i13 == 0 goto label10;

        z28 = 1;

        goto label11;

     label10:
        z28 = 0;

     label11:
        z29 = 0;

        $z30 = r1.<com.android.server.notification.NotificationRecord: boolean isUpdate>;

        if $z30 != 0 goto label12;

        z29 = 0;

        $i11 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getImportance()>();

        if $i11 <= 1 goto label12;

        z29 = 0;

        if z28 != 0 goto label12;

        $r35 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r36 = virtualinvoke $r35.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void sendAccessibilityEvent(android.app.Notification,java.lang.CharSequence)>(r2, $r36);

        z29 = 1;

     label12:
        if z21 == 0 goto label33;

        $z11 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isNotificationForCurrentUser(com.android.server.notification.NotificationRecord)>(r1);

        if $z11 == 0 goto label33;

        $z12 = r0.<com.android.server.notification.NotificationManagerService: boolean mSystemReady>;

        if $z12 == 0 goto label32;

        $r28 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        if $r28 == null goto label32;

        r4 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.net.Uri getSound()>();

        if r4 == null goto label13;

        $r34 = <android.net.Uri: android.net.Uri EMPTY>;

        $z17 = virtualinvoke $r34.<android.net.Uri: boolean equals(java.lang.Object)>(r4);

        if $z17 != 0 goto label13;

        z25 = 1;

        goto label14;

     label13:
        z25 = 0;

     label14:
        r39 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: long[] getVibration()>();

        if r39 != null goto label15;

        if z25 == 0 goto label15;

        $r31 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        $i8 = virtualinvoke $r31.<android.media.AudioManager: int getRingerModeInternal()>();

        if $i8 != 1 goto label15;

        $r32 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        $r33 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.media.AudioAttributes getAudioAttributes()>();

        $i9 = staticinvoke <android.media.AudioAttributes: int toLegacyStreamType(android.media.AudioAttributes)>($r33);

        $i10 = virtualinvoke $r32.<android.media.AudioManager: int getStreamVolume(int)>($i9);

        if $i10 != 0 goto label15;

        r39 = r0.<com.android.server.notification.NotificationManagerService: long[] mFallbackVibrationPattern>;

        goto label15;

     label15:
        if r39 == null goto label16;

        z31 = 1;

        goto label17;

     label16:
        z31 = 0;

     label17:
        z24 = z31;

        if z25 != 0 goto label19;

        if z31 == 0 goto label18;

        goto label19;

     label18:
        z32 = 0;

        goto label20;

     label19:
        z32 = 1;

     label20:
        if z32 == 0 goto label30;

        $z13 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean shouldMuteNotificationLocked(com.android.server.notification.NotificationRecord)>(r1);

        if $z13 != 0 goto label30;

        if z29 != 0 goto label21;

        $r29 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r30 = virtualinvoke $r29.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void sendAccessibilityEvent(android.app.Notification,java.lang.CharSequence)>(r2, $r30);

        goto label21;

     label21:
        $z14 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z14 == 0 goto label22;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", "Interrupting!");

     label22:
        if z25 == 0 goto label25;

        $z16 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isInCall()>();

        if $z16 == 0 goto label23;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void playInCallNotification()>();

        z33 = 1;

        goto label24;

     label23:
        z33 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean playSound(com.android.server.notification.NotificationRecord,android.net.Uri)>(r1, r4);

     label24:
        z34 = z33;

        if z33 == 0 goto label26;

        r0.<com.android.server.notification.NotificationManagerService: java.lang.String mSoundNotificationKey> = r3;

        z34 = z33;

        goto label26;

     label25:
        z34 = 0;

     label26:
        $r40 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        $i15 = virtualinvoke $r40.<android.media.AudioManager: int getRingerModeInternal()>();

        if $i15 != 0 goto label27;

        z35 = 1;

        goto label28;

     label27:
        z35 = 0;

     label28:
        z36 = 0;

        $z15 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isInCall()>();

        if $z15 != 0 goto label29;

        z36 = 0;

        if z24 == 0 goto label29;

        z36 = 0;

        if z35 != 0 goto label29;

        z37 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean playVibration(com.android.server.notification.NotificationRecord,long[],boolean)>(r1, r39, z25);

        z36 = z37;

        if z37 == 0 goto label29;

        r0.<com.android.server.notification.NotificationManagerService: java.lang.String mVibrateNotificationKey> = r3;

        z36 = z37;

     label29:
        z39 = z34;

        z40 = z36;

        goto label34;

     label30:
        $i5 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getFlags()>();

        $i6 = $i5 & 4;

        if $i6 == 0 goto label31;

        z25 = 0;

        z40 = 0;

        z39 = 0;

        goto label34;

     label31:
        z40 = 0;

        z39 = 0;

        goto label34;

     label32:
        goto label33;

     label33:
        z40 = 0;

        z39 = 0;

     label34:
        if z22 == 0 goto label35;

        if z25 != 0 goto label35;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void clearSoundLocked()>();

     label35:
        if z23 == 0 goto label36;

        if z24 != 0 goto label36;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void clearVibrateLocked()>();

     label36:
        $r41 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        z41 = virtualinvoke $r41.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        $z42 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean canShowLightsLocked(com.android.server.notification.NotificationRecord,boolean)>(r1, z21);

        if $z42 == 0 goto label38;

        $r27 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        virtualinvoke $r27.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void updateLightsLocked()>();

        $z10 = r0.<com.android.server.notification.NotificationManagerService: boolean mUseAttentionLight>;

        if $z10 == 0 goto label37;

        r42 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.LogicalLight mAttentionLight>;

        if r42 == null goto label37;

        virtualinvoke r42.<com.android.server.lights.LogicalLight: void pulse()>();

     label37:
        i17 = 1;

        goto label40;

     label38:
        if z41 == 0 goto label39;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void updateLightsLocked()>();

     label39:
        i17 = 0;

     label40:
        if z39 == 0 goto label41;

        i18 = 2;

        goto label42;

     label41:
        i18 = 0;

     label42:
        if i17 == 0 goto label43;

        i19 = 4;

        goto label44;

     label43:
        i19 = 0;

     label44:
        i21 = (int) z40;

        $i1 = i21 | i18;

        i20 = $i1 | i19;

        if i20 <= 0 goto label49;

        $r6 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $z3 = virtualinvoke $r6.<android.service.notification.StatusBarNotification: boolean isGroup()>();

        if $z3 == 0 goto label46;

        $r19 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r20 = virtualinvoke $r19.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $z7 = virtualinvoke $r20.<android.app.Notification: boolean isGroupSummary()>();

        if $z7 == 0 goto label46;

        $z8 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z8 == 0 goto label45;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r23 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not interruptive: summary");

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r26);

        goto label48;

     label45:
        goto label48;

     label46:
        $z4 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean canBubble()>();

        if $z4 == 0 goto label47;

        $z6 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z6 == 0 goto label48;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r15 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not interruptive: bubble");

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r18);

        goto label48;

     label47:
        virtualinvoke r1.<com.android.server.notification.NotificationRecord: void setInterruptive(boolean)>(1);

        $z5 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z5 == 0 goto label48;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r9 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is interruptive: alerted");

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r12);

     label48:
        $r46 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.metrics.LogMaker getLogMaker()>();

        $r47 = virtualinvoke $r46.<android.metrics.LogMaker: android.metrics.LogMaker setCategory(int)>(199);

        $r48 = virtualinvoke $r47.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(1);

        $r49 = virtualinvoke $r48.<android.metrics.LogMaker: android.metrics.LogMaker setSubtype(int)>(i20);

        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.metrics.LogMaker)>($r49);

        i22 = (int) z40;

        i23 = (int) z39;

        staticinvoke <com.android.server.EventLogTags: void writeNotificationAlert(java.lang.String,int,int,int)>(r3, i22, i23, i17);

        goto label49;

     label49:
        if z40 != 0 goto label51;

        if z39 == 0 goto label50;

        goto label51;

     label50:
        z43 = 0;

        goto label52;

     label51:
        z43 = 1;

     label52:
        virtualinvoke r1.<com.android.server.notification.NotificationRecord: void setAudiblyAlerted(boolean)>(z43);

        return i20;
    }

    protected int calculateSuppressedVisualEffects(android.app.NotificationManager$Policy, android.app.NotificationManager$Policy, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.app.NotificationManager$Policy r1, r2;
        int[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i26, i27, i28, i29;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.app.NotificationManager$Policy;

        r2 := @parameter1: android.app.NotificationManager$Policy;

        i22 := @parameter2: int;

        $i1 = r1.<android.app.NotificationManager$Policy: int suppressedVisualEffects>;

        if $i1 != -1 goto label01;

        $i21 = r1.<android.app.NotificationManager$Policy: int suppressedVisualEffects>;

        return $i21;

     label01:
        r3 = newarray (int)[7];

        r3[0] = 4;

        r3[1] = 8;

        r3[2] = 16;

        r3[3] = 32;

        r3[4] = 64;

        r3[5] = 128;

        r3[6] = 256;

        i0 = r1.<android.app.NotificationManager$Policy: int suppressedVisualEffects>;

        if i22 >= 28 goto label05;

        i23 = 0;

        i24 = i0;

     label02:
        $i12 = lengthof r3;

        if i23 >= $i12 goto label03;

        $i16 = r3[i23];

        $i20 = i24 & $i16;

        $i18 = r2.<android.app.NotificationManager$Policy: int suppressedVisualEffects>;

        $i17 = r3[i23];

        $i19 = $i18 & $i17;

        i24 = $i20 | $i19;

        i23 = i23 + 1;

        goto label02;

     label03:
        i25 = i24;

        $i13 = i24 & 1;

        if $i13 == 0 goto label04;

        $i15 = i24 | 8;

        i25 = $i15 | 4;

     label04:
        i26 = i25;

        $i14 = i25 & 2;

        if $i14 == 0 goto label11;

        i26 = i25 | 16;

        goto label11;

     label05:
        z0 = 1;

        $i2 = i0 - 2;

        $i3 = $i2 - 1;

        if $i3 <= 0 goto label06;

        goto label07;

     label06:
        z0 = 0;

     label07:
        if z0 == 0 goto label09;

        i27 = i0 & -4;

        i28 = i27;

        $i8 = i27 & 16;

        if $i8 == 0 goto label08;

        i28 = i27 | 2;

     label08:
        i26 = i28;

        $i9 = i28 & 8;

        if $i9 == 0 goto label11;

        i26 = i28;

        $i10 = i28 & 4;

        if $i10 == 0 goto label11;

        i26 = i28;

        $i11 = i28 & 128;

        if $i11 == 0 goto label11;

        i26 = i28 | 1;

        goto label11;

     label09:
        i29 = i0;

        $i4 = i0 & 1;

        if $i4 == 0 goto label10;

        $i6 = i0 | 8;

        $i7 = $i6 | 4;

        i29 = $i7 | 128;

     label10:
        i26 = i29;

        $i5 = i29 & 2;

        if $i5 == 0 goto label11;

        i26 = i29 | 16;

     label11:
        return i26;
    }

    boolean canShowLightsLocked(com.android.server.notification.NotificationRecord, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.app.Notification r2, $r5;
        com.android.server.notification.NotificationRecord$Light $r3;
        int $i0, $i1, $i2, $i3;
        android.service.notification.StatusBarNotification $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        z0 := @parameter1: boolean;

        $z1 = r0.<com.android.server.notification.NotificationManagerService: boolean mHasLight>;

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $z2 = r0.<com.android.server.notification.NotificationManagerService: boolean mNotificationPulseEnabled>;

        if $z2 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: com.android.server.notification.NotificationRecord$Light getLight()>();

        if $r3 != null goto label3;

        return 0;

     label3:
        if z0 != 0 goto label4;

        return 0;

     label4:
        $i0 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getSuppressedVisualEffects()>();

        $i1 = $i0 & 8;

        if $i1 == 0 goto label5;

        return 0;

     label5:
        r2 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $z3 = r1.<com.android.server.notification.NotificationRecord: boolean isUpdate>;

        if $z3 == 0 goto label6;

        $i2 = r2.<android.app.Notification: int flags>;

        $i3 = $i2 & 8;

        if $i3 == 0 goto label6;

        return 0;

     label6:
        $r4 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $z4 = virtualinvoke $r4.<android.service.notification.StatusBarNotification: boolean isGroup()>();

        if $z4 == 0 goto label7;

        $r5 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $z7 = virtualinvoke $r5.<android.app.Notification: boolean suppressAlertingDueToGrouping()>();

        if $z7 == 0 goto label7;

        return 0;

     label7:
        $z5 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isInCall()>();

        if $z5 != 0 goto label9;

        $z6 = r0.<com.android.server.notification.NotificationManagerService: boolean mScreenOn>;

        if $z6 == 0 goto label8;

        goto label9;

     label8:
        return 1;

     label9:
        return 0;
    }

    boolean canUseManagedServices(java.lang.String, java.lang.Integer, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.Integer r1;
        java.lang.String r2, r5;
        int i0, $i1;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        boolean z2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Integer;

        r2 := @parameter2: java.lang.String;

        z2 = 1;

        if r2 == null goto label5;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager mPackageManager>;

        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        i0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int checkPermission(java.lang.String,java.lang.String,int)>(r2, r5, $i1);

     label2:
        z2 = 1;

        if i0 == 0 goto label3;

        z2 = 0;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "can\'t talk to pm", $r4);

        z2 = 1;

     label5:
        return z2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    void cancelAllLocked(int, int, int, int, com.android.server.notification.ManagedServices$ManagedServiceInfo, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2, i3;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        boolean z0;
        com.android.server.notification.NotificationManagerService$16 $r2;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        z0 := @parameter5: boolean;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r2 = new com.android.server.notification.NotificationManagerService$16;

        specialinvoke $r2.<com.android.server.notification.NotificationManagerService$16: void <init>(com.android.server.notification.NotificationManagerService,com.android.server.notification.ManagedServices$ManagedServiceInfo,int,int,int,int,boolean)>(r0, r1, i0, i1, i2, i3, z0);

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    void cancelAllNotificationsInt(int, int, java.lang.String, java.lang.String, int, int, boolean, int, int, com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String r1, r2;
        boolean z0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r3;
        com.android.server.notification.NotificationManagerService$15 $r4;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        z0 := @parameter6: boolean;

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        r3 := @parameter9: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r4 = new com.android.server.notification.NotificationManagerService$15;

        specialinvoke $r4.<com.android.server.notification.NotificationManagerService$15: void <init>(com.android.server.notification.NotificationManagerService,com.android.server.notification.ManagedServices$ManagedServiceInfo,int,int,java.lang.String,int,int,int,int,boolean,java.lang.String)>(r0, r3, i0, i1, r1, i4, i2, i3, i5, z0, r2);

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    void cancelNotification(int, int, java.lang.String, java.lang.String, int, int, int, boolean, int, int, int, int, com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8;
        java.lang.String r1, r2;
        boolean z0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r3;
        com.android.server.notification.NotificationManagerService$CancelNotificationRunnable $r4;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        z0 := @parameter7: boolean;

        i5 := @parameter8: int;

        i6 := @parameter9: int;

        i7 := @parameter10: int;

        i8 := @parameter11: int;

        r3 := @parameter12: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r4 = new com.android.server.notification.NotificationManagerService$CancelNotificationRunnable;

        specialinvoke $r4.<com.android.server.notification.NotificationManagerService$CancelNotificationRunnable: void <init>(com.android.server.notification.NotificationManagerService,int,int,java.lang.String,java.lang.String,int,int,int,boolean,int,int,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>(r0, i0, i1, r1, r2, i2, i3, i4, z0, i5, i6, i7, i8, r3);

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$WorkerHandler: void scheduleCancelNotification(com.android.server.notification.NotificationManagerService$CancelNotificationRunnable)>($r4);

        return;
    }

    void cancelNotification(int, int, java.lang.String, java.lang.String, int, int, int, boolean, int, int, com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2, i3, i4, i5, i6;
        java.lang.String r1, r2;
        boolean z0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        z0 := @parameter7: boolean;

        i5 := @parameter8: int;

        i6 := @parameter9: int;

        r3 := @parameter10: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelNotification(int,int,java.lang.String,java.lang.String,int,int,int,boolean,int,int,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>(i0, i1, r1, r2, i2, i3, i4, z0, i5, i6, -1, -1, r3);

        return;
    }

    void cancelNotificationInternal(java.lang.String, java.lang.String, int, int, java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r4, $r10, $r19, r21, r22;
        int i0, i1, i2, i4, i5, i6;
        java.lang.Object r2;
        boolean $z0, $z1, $z2;
        android.service.notification.StatusBarNotification $r3;
        java.lang.StringBuilder $r11, r26;
        java.lang.Throwable $r20;
        com.android.server.notification.NotificationRecord r24;
        java.lang.SecurityException r25;
        short s7;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r21 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i4 := @parameter2: int;

        i0 := @parameter3: int;

        r22 := @parameter4: java.lang.String;

        i1 := @parameter5: int;

        i5 := @parameter6: int;

        i6 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i0, i4, i5, 1, 0, "cancelNotificationWithTag", r21);

        i2 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: int resolveNotificationUid(java.lang.String,java.lang.String,int,int)>(r1, r21, i4, i6);

        if i2 != -1 goto label01;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" trying to cancel notification for nonexistent pkg ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in user ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r19 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r19);

        return;

     label01:
        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r21, r1);

        if $z0 != 0 goto label12;

        r2 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r2;

     label02:
        r24 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord findNotificationLocked(java.lang.String,java.lang.String,int,int)>(r21, r22, i1, i6);

     label03:
        if r24 == null goto label07;

     label04:
        $r3 = virtualinvoke r24.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r4 = virtualinvoke $r3.<android.service.notification.StatusBarNotification: java.lang.String getOpPkg()>();

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, $r4);

        if $z2 == 0 goto label06;

     label05:
        goto label07;

     label06:
        r25 = new java.lang.SecurityException;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission to cancel a notification they did not post ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);

        throw r25;

     label07:
        exitmonitor r2;

     label08:
        goto label12;

     label09:
        $r20 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r20;

     label12:
        $z1 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isCallingUidSystem()>();

        if $z1 == 0 goto label13;

        s7 = 0;

        goto label14;

     label13:
        s7 = 1088;

     label14:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelNotification(int,int,java.lang.String,java.lang.String,int,int,int,boolean,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>(i2, i0, r21, r22, i1, 0, s7, 0, i6, 8, null);

        return;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void cancelToastLocked(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i1, $i2, $i3;
        com.android.server.notification.toast.ToastRecord r1, r2;
        java.util.ArrayList $r3, $r5, $r9;
        java.lang.Object $r4, $r6;
        android.os.Binder $r7;
        com.android.server.wm.WindowManagerInternal $r8;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.notification.toast.ToastRecord) $r4;

        virtualinvoke r1.<com.android.server.notification.toast.ToastRecord: void hide()>();

        $r5 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        r2 = (com.android.server.notification.toast.ToastRecord) $r6;

        $r8 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $r7 = r2.<com.android.server.notification.toast.ToastRecord: android.os.Binder windowToken>;

        $i1 = r2.<com.android.server.notification.toast.ToastRecord: int displayId>;

        virtualinvoke $r8.<com.android.server.wm.WindowManagerInternal: void removeWindowToken(android.os.IBinder,boolean,int)>($r7, 0, $i1);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void scheduleKillTokenTimeout(com.android.server.notification.toast.ToastRecord)>(r2);

        $i2 = r1.<com.android.server.notification.toast.ToastRecord: int pid>;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void keepProcessAliveForToastIfNeededLocked(int)>($i2);

        $r9 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $i3 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label1;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void showNextToastLocked()>();

     label1:
        return;
    }

    void clearNotifications()
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList r1, $r3, $r4;
        android.util.ArrayMap $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        $r4 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        virtualinvoke $r5.<android.util.ArrayMap: void clear()>();

        $r6 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mSummaryByGroupKey>;

        virtualinvoke $r6.<android.util.ArrayMap: void clear()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void clearSoundLocked()
    {
        com.android.server.notification.NotificationManagerService r0;
        long l0;
        android.media.AudioManager $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;
        android.media.IRingtonePlayer r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r0.<com.android.server.notification.NotificationManagerService: java.lang.String mSoundNotificationKey> = null;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        r4 = virtualinvoke $r1.<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()>();

     label2:
        if r4 == null goto label7;

     label3:
        interfaceinvoke r4.<android.media.IRingtonePlayer: void stopAsync()>();

     label4:
        goto label7;

     label5:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r2;

     label6:
        $r3 := @caughtexception;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    void clearVibrateLocked()
    {
        com.android.server.notification.NotificationManagerService r0;
        long l0;
        android.os.Vibrator $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r0.<com.android.server.notification.NotificationManagerService: java.lang.String mVibrateNotificationKey> = null;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.notification.NotificationManagerService: android.os.Vibrator mVibrator>;

        virtualinvoke $r2.<android.os.Vibrator: void cancel()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int correctCategory(int, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = i0 & i1;

        if $i3 == 0 goto label1;

        $i6 = i2 & i1;

        if $i6 != 0 goto label1;

        i7 = i0 & i1;

        goto label2;

     label1:
        i7 = i0;

        $i4 = i0 & i1;

        if $i4 != 0 goto label2;

        i7 = i0;

        $i5 = i2 & i1;

        if $i5 == 0 goto label2;

        i7 = i0 | i1;

     label2:
        return i7;
    }

    void dumpImpl(java.io.PrintWriter, com.android.server.notification.NotificationManagerService$DumpFilter)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$DumpFilter r1;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15;
        java.util.Iterator r2, r104;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, $z18, $z19;
        com.android.server.notification.ZenModeHelper $r3;
        com.android.server.notification.NotificationUsageStats $r4;
        java.lang.Object $r5, $r6, $r8, $r17, $r30, $r31, $r37, $r40, $r42, $r78, $r82, r89;
        java.lang.String $r9, $r12, $r14, $r16, $r28, $r45, $r49, $r52, $r55, $r57, $r59, $r61, $r63, $r66, $r68, $r70, $r73, $r76, $r79, $r101, $r102;
        android.util.ArrayMap $r15, $r113;
        android.content.Context $r18, $r38;
        com.android.server.notification.RankingHelper $r19;
        com.android.server.notification.PreferencesHelper $r20;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r21;
        android.util.SparseArray $r22, $r24, $r29;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r23;
        java.util.ArrayList $r34, $r36, $r46, $r77, $r80, $r81, r87;
        com.android.server.notification.SnoozeHelper $r35;
        android.service.notification.StatusBarNotification $r39, r105;
        android.util.Pair $r41;
        float $f0;
        com.android.server.notification.toast.ToastRecord $r83;
        java.lang.Throwable $r84, $r85;
        java.io.PrintWriter r86;
        java.lang.StringBuilder r90, r91, r92, r93, r94, r95, r96, r97, r98, r99, r106, r109, r117;
        com.android.server.notification.NotificationManagerService$Archive $r100, $r103;
        com.android.server.notification.NotificationRecord r107, r116;
        android.util.ArraySet r110;
        android.content.ComponentName r111;
        com.android.server.notification.ConditionProviders $r112;
        java.util.Set $r114;
        java.util.Map$Entry r115;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r86 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.server.notification.NotificationManagerService$DumpFilter;

        virtualinvoke r86.<java.io.PrintWriter: void print(java.lang.String)>("Current Notification Manager state");

        $z0 = r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean filtered>;

        if $z0 == 0 goto label01;

        virtualinvoke r86.<java.io.PrintWriter: void print(java.lang.String)>(" (filtered to ");

        virtualinvoke r86.<java.io.PrintWriter: void print(java.lang.Object)>(r1);

        virtualinvoke r86.<java.io.PrintWriter: void print(java.lang.String)>(")");

     label01:
        virtualinvoke r86.<java.io.PrintWriter: void println(char)>(58);

        $z1 = r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean filtered>;

        if $z1 == 0 goto label02;

        $z16 = r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean zen>;

        if $z16 == 0 goto label02;

        z17 = 1;

        goto label03;

     label02:
        z17 = 0;

     label03:
        if z17 != 0 goto label17;

        r87 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        entermonitor r87;

     label04:
        $r80 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i6 = virtualinvoke $r80.<java.util.ArrayList: int size()>();

     label05:
        if i6 <= 0 goto label12;

     label06:
        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("  Toast Queue:");

     label07:
        i7 = 0;

     label08:
        if i7 >= i6 goto label11;

     label09:
        $r81 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r82 = virtualinvoke $r81.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r83 = (com.android.server.notification.toast.ToastRecord) $r82;

        virtualinvoke $r83.<com.android.server.notification.toast.ToastRecord: void dump(java.io.PrintWriter,java.lang.String,com.android.server.notification.NotificationManagerService$DumpFilter)>(r86, "    ", r1);

     label10:
        i7 = i7 + 1;

        goto label08;

     label11:
        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("  ");

     label12:
        exitmonitor r87;

     label13:
        goto label17;

     label14:
        $r84 := @caughtexception;

     label15:
        exitmonitor r87;

     label16:
        throw $r84;

     label17:
        r89 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r89;

        if z17 != 0 goto label56;

     label18:
        $z4 = r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean normalPriority>;

        if $z4 != 0 goto label19;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void dumpNotificationRecords(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(r86, r1);

     label19:
        $z5 = r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean filtered>;

        if $z5 != 0 goto label31;

        $r46 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        i8 = virtualinvoke $r46.<java.util.ArrayList: int size()>();

     label20:
        if i8 <= 0 goto label30;

     label21:
        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("  Lights List:");

     label22:
        i9 = 0;

     label23:
        if i9 >= i8 goto label29;

        $i5 = i8 - 1;

        if i9 != $i5 goto label26;

     label24:
        virtualinvoke r86.<java.io.PrintWriter: void print(java.lang.String)>("  > ");

     label25:
        goto label27;

     label26:
        virtualinvoke r86.<java.io.PrintWriter: void print(java.lang.String)>("    ");

     label27:
        $r77 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        $r78 = virtualinvoke $r77.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r79 = (java.lang.String) $r78;

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>($r79);

     label28:
        i9 = i9 + 1;

        goto label23;

     label29:
        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("  ");

     label30:
        r90 = new java.lang.StringBuilder;

        specialinvoke r90.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mUseAttentionLight=");

        $z11 = r0.<com.android.server.notification.NotificationManagerService: boolean mUseAttentionLight>;

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        $r49 = virtualinvoke r90.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>($r49);

        r91 = new java.lang.StringBuilder;

        specialinvoke r91.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHasLight=");

        $z12 = r0.<com.android.server.notification.NotificationManagerService: boolean mHasLight>;

        virtualinvoke r91.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        $r52 = virtualinvoke r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>($r52);

        r92 = new java.lang.StringBuilder;

        specialinvoke r92.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mNotificationPulseEnabled=");

        $z13 = r0.<com.android.server.notification.NotificationManagerService: boolean mNotificationPulseEnabled>;

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        $r55 = virtualinvoke r92.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>($r55);

        r93 = new java.lang.StringBuilder;

        specialinvoke r93.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSoundNotificationKey=");

        $r57 = r0.<com.android.server.notification.NotificationManagerService: java.lang.String mSoundNotificationKey>;

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke r93.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>($r59);

        r94 = new java.lang.StringBuilder;

        specialinvoke r94.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mVibrateNotificationKey=");

        $r61 = r0.<com.android.server.notification.NotificationManagerService: java.lang.String mVibrateNotificationKey>;

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke r94.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>($r63);

        r95 = new java.lang.StringBuilder;

        specialinvoke r95.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDisableNotificationEffects=");

        $z14 = r0.<com.android.server.notification.NotificationManagerService: boolean mDisableNotificationEffects>;

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z14);

        $r66 = virtualinvoke r95.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>($r66);

        r96 = new java.lang.StringBuilder;

        specialinvoke r96.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCallState=");

        $i4 = r0.<com.android.server.notification.NotificationManagerService: int mCallState>;

        $r68 = staticinvoke <com.android.server.notification.NotificationManagerService: java.lang.String callStateToString(int)>($i4);

        virtualinvoke r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r70 = virtualinvoke r96.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>($r70);

        r97 = new java.lang.StringBuilder;

        specialinvoke r97.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSystemReady=");

        $z15 = r0.<com.android.server.notification.NotificationManagerService: boolean mSystemReady>;

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z15);

        $r73 = virtualinvoke r97.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>($r73);

        r98 = new java.lang.StringBuilder;

        specialinvoke r98.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mMaxPackageEnqueueRate=");

        $f0 = r0.<com.android.server.notification.NotificationManagerService: float mMaxPackageEnqueueRate>;

        virtualinvoke r98.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r76 = virtualinvoke r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>($r76);

     label31:
        r99 = new java.lang.StringBuilder;

        specialinvoke r99.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mArchive=");

        $r100 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$Archive mArchive>;

        $r101 = virtualinvoke $r100.<com.android.server.notification.NotificationManagerService$Archive: java.lang.String toString()>();

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        $r102 = virtualinvoke r99.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>($r102);

        $r103 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$Archive mArchive>;

        r104 = virtualinvoke $r103.<com.android.server.notification.NotificationManagerService$Archive: java.util.Iterator descendingIterator()>();

     label32:
        i10 = 0;

     label33:
        $z18 = interfaceinvoke r104.<java.util.Iterator: boolean hasNext()>();

        if $z18 == 0 goto label42;

        $r40 = interfaceinvoke r104.<java.util.Iterator: java.lang.Object next()>();

        $r41 = (android.util.Pair) $r40;

        $r42 = $r41.<android.util.Pair: java.lang.Object first>;

        r105 = (android.service.notification.StatusBarNotification) $r42;

     label34:
        if r1 == null goto label37;

     label35:
        $z10 = virtualinvoke r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean matches(android.service.notification.StatusBarNotification)>(r105);

        if $z10 != 0 goto label37;

     label36:
        goto label33;

     label37:
        r106 = new java.lang.StringBuilder;

        specialinvoke r106.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        virtualinvoke r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r105);

        $r45 = virtualinvoke r106.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>($r45);

     label38:
        i10 = i10 + 1;

        if i10 < 5 goto label41;

     label39:
        $z9 = interfaceinvoke r104.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label42;

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("    ...");

     label40:
        goto label42;

     label41:
        goto label33;

     label42:
        if z17 != 0 goto label56;

     label43:
        $r34 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        i11 = virtualinvoke $r34.<java.util.ArrayList: int size()>();

     label44:
        if i11 <= 0 goto label53;

     label45:
        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("  Enqueued Notification List:");

     label46:
        i12 = 0;

     label47:
        if i12 >= i11 goto label52;

     label48:
        $r36 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        $r37 = virtualinvoke $r36.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r107 = (com.android.server.notification.NotificationRecord) $r37;

        $z6 = r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean filtered>;

        if $z6 == 0 goto label50;

        $r39 = virtualinvoke r107.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $z8 = virtualinvoke r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean matches(android.service.notification.StatusBarNotification)>($r39);

        if $z8 != 0 goto label50;

     label49:
        goto label51;

     label50:
        $r38 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $z7 = r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean redact>;

        virtualinvoke r107.<com.android.server.notification.NotificationRecord: void dump(java.io.PrintWriter,java.lang.String,android.content.Context,boolean)>(r86, "    ", $r38, $z7);

     label51:
        i12 = i12 + 1;

        goto label47;

     label52:
        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("  ");

     label53:
        $r35 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper>;

        virtualinvoke $r35.<com.android.server.notification.SnoozeHelper: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(r86, r1);

     label54:
        goto label56;

     label55:
        $r85 := @caughtexception;

        goto label83;

     label56:
        if z17 != 0 goto label73;

     label57:
        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("\n  Ranking Config:");

        $r19 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        virtualinvoke $r19.<com.android.server.notification.RankingHelper: void dump(java.io.PrintWriter,java.lang.String,com.android.server.notification.NotificationManagerService$DumpFilter)>(r86, "    ", r1);

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("\n Notification Preferences:");

        $r20 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r20.<com.android.server.notification.PreferencesHelper: void dump(java.io.PrintWriter,java.lang.String,com.android.server.notification.NotificationManagerService$DumpFilter)>(r86, "    ", r1);

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("\n  Notification listeners:");

        $r21 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r21.<com.android.server.notification.NotificationManagerService$NotificationListeners: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(r86, r1);

        virtualinvoke r86.<java.io.PrintWriter: void print(java.lang.String)>("    mListenerHints: ");

        $i3 = r0.<com.android.server.notification.NotificationManagerService: int mListenerHints>;

        virtualinvoke r86.<java.io.PrintWriter: void println(int)>($i3);

        virtualinvoke r86.<java.io.PrintWriter: void print(java.lang.String)>("    mListenersDisablingEffects: (");

        $r22 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        i0 = virtualinvoke $r22.<android.util.SparseArray: int size()>();

     label58:
        i13 = 0;

     label59:
        if i13 >= i0 goto label72;

     label60:
        $r24 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        i14 = virtualinvoke $r24.<android.util.SparseArray: int keyAt(int)>(i13);

     label61:
        if i13 <= 0 goto label63;

     label62:
        virtualinvoke r86.<java.io.PrintWriter: void print(char)>(59);

     label63:
        r109 = new java.lang.StringBuilder;

        specialinvoke r109.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hint[");

        virtualinvoke r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        virtualinvoke r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]:");

        $r28 = virtualinvoke r109.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r86.<java.io.PrintWriter: void print(java.lang.String)>($r28);

        $r29 = r0.<com.android.server.notification.NotificationManagerService: android.util.SparseArray mListenersDisablingEffects>;

        $r30 = virtualinvoke $r29.<android.util.SparseArray: java.lang.Object valueAt(int)>(i13);

        r110 = (android.util.ArraySet) $r30;

        i1 = virtualinvoke r110.<android.util.ArraySet: int size()>();

     label64:
        i15 = 0;

     label65:
        if i15 >= i1 goto label71;

        if i15 <= 0 goto label67;

     label66:
        virtualinvoke r86.<java.io.PrintWriter: void print(char)>(44);

     label67:
        $r31 = virtualinvoke r110.<android.util.ArraySet: java.lang.Object valueAt(int)>(i15);

        r111 = (android.content.ComponentName) $r31;

     label68:
        if r111 == null goto label70;

     label69:
        virtualinvoke r86.<java.io.PrintWriter: void print(java.lang.Object)>(r111);

     label70:
        i15 = i15 + 1;

        goto label65;

     label71:
        i13 = i13 + 1;

        goto label59;

     label72:
        virtualinvoke r86.<java.io.PrintWriter: void println(char)>(41);

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("\n  Notification assistant services:");

        $r23 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        virtualinvoke $r23.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(r86, r1);

     label73:
        $z2 = r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean filtered>;

        if $z2 == 0 goto label75;

     label74:
        if z17 == 0 goto label76;

     label75:
        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("\n  Zen Mode:");

        virtualinvoke r86.<java.io.PrintWriter: void print(java.lang.String)>("    mInterruptionFilter=");

        $i2 = r0.<com.android.server.notification.NotificationManagerService: int mInterruptionFilter>;

        virtualinvoke r86.<java.io.PrintWriter: void println(int)>($i2);

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r3.<com.android.server.notification.ZenModeHelper: void dump(java.io.PrintWriter,java.lang.String)>(r86, "    ");

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("\n  Zen Log:");

        staticinvoke <com.android.server.notification.ZenLog: void dump(java.io.PrintWriter,java.lang.String)>(r86, "    ");

     label76:
        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("\n  Condition providers:");

        $r112 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        virtualinvoke $r112.<com.android.server.notification.ConditionProviders: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(r86, r1);

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("\n  Group summaries:");

        $r113 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mSummaryByGroupKey>;

        $r114 = virtualinvoke $r113.<android.util.ArrayMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r114.<java.util.Set: java.util.Iterator iterator()>();

     label77:
        $z19 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z19 == 0 goto label79;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r115 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r115.<java.util.Map$Entry: java.lang.Object getValue()>();

        r116 = (com.android.server.notification.NotificationRecord) $r6;

        r117 = new java.lang.StringBuilder;

        specialinvoke r117.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r8 = interfaceinvoke r115.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r12 = virtualinvoke r116.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r117.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r15 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r16 = virtualinvoke r116.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $r17 = virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r16);

        if $r17 == r116 goto label78;

        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("!!!!!!LEAK: Record not found in mNotificationsByKey.");

        $r18 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $z3 = r1.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean redact>;

        virtualinvoke r116.<com.android.server.notification.NotificationRecord: void dump(java.io.PrintWriter,java.lang.String,android.content.Context,boolean)>(r86, "      ", $r18, $z3);

     label78:
        goto label77;

     label79:
        if z17 != 0 goto label81;

     label80:
        virtualinvoke r86.<java.io.PrintWriter: void println(java.lang.String)>("\n  Usage Stats:");

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        virtualinvoke $r4.<com.android.server.notification.NotificationUsageStats: void dump(java.io.PrintWriter,java.lang.String,com.android.server.notification.NotificationManagerService$DumpFilter)>(r86, "    ", r1);

     label81:
        exitmonitor r89;

     label82:
        return;

     label83:
        exitmonitor r89;

     label84:
        throw $r85;

        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label55;
        catch java.lang.Throwable from label19 to label20 with label55;
        catch java.lang.Throwable from label21 to label22 with label55;
        catch java.lang.Throwable from label24 to label25 with label55;
        catch java.lang.Throwable from label26 to label27 with label55;
        catch java.lang.Throwable from label27 to label28 with label55;
        catch java.lang.Throwable from label29 to label30 with label55;
        catch java.lang.Throwable from label30 to label31 with label55;
        catch java.lang.Throwable from label31 to label32 with label55;
        catch java.lang.Throwable from label33 to label34 with label55;
        catch java.lang.Throwable from label35 to label36 with label55;
        catch java.lang.Throwable from label37 to label38 with label55;
        catch java.lang.Throwable from label39 to label40 with label55;
        catch java.lang.Throwable from label43 to label44 with label55;
        catch java.lang.Throwable from label45 to label46 with label55;
        catch java.lang.Throwable from label48 to label49 with label55;
        catch java.lang.Throwable from label50 to label51 with label55;
        catch java.lang.Throwable from label52 to label53 with label55;
        catch java.lang.Throwable from label53 to label54 with label55;
        catch java.lang.Throwable from label57 to label58 with label55;
        catch java.lang.Throwable from label60 to label61 with label55;
        catch java.lang.Throwable from label62 to label63 with label55;
        catch java.lang.Throwable from label63 to label64 with label55;
        catch java.lang.Throwable from label66 to label67 with label55;
        catch java.lang.Throwable from label67 to label68 with label55;
        catch java.lang.Throwable from label69 to label70 with label55;
        catch java.lang.Throwable from label72 to label73 with label55;
        catch java.lang.Throwable from label73 to label74 with label55;
        catch java.lang.Throwable from label75 to label76 with label55;
        catch java.lang.Throwable from label76 to label77 with label55;
        catch java.lang.Throwable from label77 to label78 with label55;
        catch java.lang.Throwable from label80 to label81 with label55;
        catch java.lang.Throwable from label81 to label82 with label55;
        catch java.lang.Throwable from label83 to label84 with label55;
    }

    void enqueueNotificationInternal(java.lang.String, java.lang.String, int, int, java.lang.String, int, android.app.Notification, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r2, r3;
        int i0, i1, i2, i3;
        android.app.Notification r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        i2 := @parameter5: int;

        r4 := @parameter6: android.app.Notification;

        i3 := @parameter7: int;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void enqueueNotificationInternal(java.lang.String,java.lang.String,int,int,java.lang.String,int,android.app.Notification,int,boolean)>(r1, r2, i0, i1, r3, i2, r4, i3, 0);

        return;
    }

    void enqueueNotificationInternal(java.lang.String, java.lang.String, int, int, java.lang.String, int, android.app.Notification, int, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2, i3, $i5, $i6, $i8, $i9, $i10, $i11, $i13, i16, i17, i18, i20, i22;
        android.app.Notification r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z9, z10, z11, z12, $z13, $z14, z15, z16;
        java.lang.StringBuilder $r2, $r11, $r43, $r53, $r76, $r86;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10, $r21, $r28, $r45, $r48, $r49, $r50, $r52, $r74, $r82, $r84, $r93, r96, r97, r98, r102, r103, $r115;
        java.lang.SecurityException $r20;
        com.android.server.notification.NotificationUsageStats $r22;
        android.service.notification.StatusBarNotification $r23, $r114;
        long $l4, l19, l21;
        com.android.server.notification.NotificationRecord $r24;
        android.content.Context $r25;
        com.android.server.notification.PreferencesHelper $r26, $r51, $r75, $r104, $r112, $r113;
        java.util.Set $r27;
        android.util.ArraySet $r29, $r32, $r36;
        com.android.server.notification.NotificationManagerService$EnqueueNotificationRunnable $r30;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r31;
        java.lang.Object $r33, $r34, $r37;
        com.android.server.DeviceIdleInternal $r35;
        android.content.IIntentSender $r38, $r40;
        android.os.IBinder $r39, $r41;
        com.android.server.notification.ShortcutHelper $r42, r109;
        android.app.Notification$TvExtender $r83, $r85;
        java.lang.Throwable $r94;
        java.lang.Exception $r95;
        android.os.UserHandle r100;
        android.app.NotificationChannel r105;
        android.content.pm.ShortcutInfo r110;
        android.app.ActivityManagerInternal r116;
        android.app.PendingIntent r117;
        android.app.ActivityManager $r118;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r96 := @parameter0: java.lang.String;

        r97 := @parameter1: java.lang.String;

        i16 := @parameter2: int;

        i17 := @parameter3: int;

        r98 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        r1 := @parameter6: android.app.Notification;

        i1 := @parameter7: int;

        z10 := @parameter8: boolean;

        $z0 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z0 == 0 goto label01;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enqueueNotificationInternal: pkg=");

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r96);

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notification=");

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r93 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r93);

     label01:
        if r96 == null goto label36;

        if r1 == null goto label36;

        i2 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i17, i16, i1, 1, 0, "enqueueNotification", r96);

        r100 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i2);

        i3 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: int resolveNotificationUid(java.lang.String,java.lang.String,int,int)>(r97, r96, i16, i2);

        if i3 == -1 goto label35;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkRestrictedCategories(android.app.Notification)>(r1);

     label02:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void fixNotification(android.app.Notification,java.lang.String,java.lang.String,int,int)>(r1, r96, r98, i0, i2);

     label03:
        $r22 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        virtualinvoke $r22.<com.android.server.notification.NotificationUsageStats: void registerEnqueuedByApp(java.lang.String)>(r96);

        $r23 = new android.service.notification.StatusBarNotification;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r23.<android.service.notification.StatusBarNotification: void <init>(java.lang.String,java.lang.String,int,java.lang.String,int,int,android.app.Notification,android.os.UserHandle,java.lang.String,long)>(r96, r97, i0, r98, i3, i17, r1, r100, null, $l4);

        r102 = virtualinvoke r1.<android.app.Notification: java.lang.String getChannelId()>();

        $z1 = r0.<com.android.server.notification.NotificationManagerService: boolean mIsTelevision>;

        if $z1 == 0 goto label04;

        $r83 = new android.app.Notification$TvExtender;

        specialinvoke $r83.<android.app.Notification$TvExtender: void <init>(android.app.Notification)>(r1);

        $r84 = virtualinvoke $r83.<android.app.Notification$TvExtender: java.lang.String getChannelId()>();

        if $r84 == null goto label04;

        $r85 = new android.app.Notification$TvExtender;

        specialinvoke $r85.<android.app.Notification$TvExtender: void <init>(android.app.Notification)>(r1);

        r102 = virtualinvoke $r85.<android.app.Notification$TvExtender: java.lang.String getChannelId()>();

        goto label04;

     label04:
        r103 = virtualinvoke $r23.<android.service.notification.StatusBarNotification: java.lang.String getShortcutId()>();

        $r104 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        r105 = virtualinvoke $r104.<com.android.server.notification.PreferencesHelper: android.app.NotificationChannel getConversationNotificationChannel(java.lang.String,int,java.lang.String,java.lang.String,boolean,boolean)>(r96, i3, r102, r103, 1, 0);

        if r105 != null goto label08;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Channel found for pkg=");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r96);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", channelId=");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r102);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id=");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tag=");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r98);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", opPkg=");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r97);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callingUid=");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userId=");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", incomingUserId=");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", notificationUid=");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", notification=");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r74 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r74);

        $r75 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $i13 = virtualinvoke $r75.<com.android.server.notification.PreferencesHelper: int getImportance(java.lang.String,int)>(r96, i3);

        if $i13 != 0 goto label05;

        z11 = 1;

        goto label06;

     label05:
        z11 = 0;

     label06:
        if z11 != 0 goto label07;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Developer warning for package \"");

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r96);

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\nFailed to post notification on channel \"");

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r102);

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\nSee log for more details");

        $r82 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void doChannelWarningToast(java.lang.CharSequence)>($r82);

        goto label07;

     label07:
        return;

     label08:
        $r24 = new com.android.server.notification.NotificationRecord;

        $r25 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        specialinvoke $r24.<com.android.server.notification.NotificationRecord: void <init>(android.content.Context,android.service.notification.StatusBarNotification,android.app.NotificationChannel)>($r25, $r23, r105);

        $r26 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $z2 = virtualinvoke $r26.<com.android.server.notification.PreferencesHelper: boolean getIsAppImportanceLocked(java.lang.String,int)>(r96, i16);

        virtualinvoke $r24.<com.android.server.notification.NotificationRecord: void setIsAppImportanceLocked(boolean)>($z2);

        virtualinvoke $r24.<com.android.server.notification.NotificationRecord: void setPostSilently(boolean)>(z10);

        virtualinvoke $r24.<com.android.server.notification.NotificationRecord: void setFlagBubbleRemoved(boolean)>(0);

        $r27 = r0.<com.android.server.notification.NotificationManagerService: java.util.Set mMsgPkgsAllowedAsConvos>;

        $z3 = interfaceinvoke $r27.<java.util.Set: boolean contains(java.lang.Object)>(r96);

        virtualinvoke $r24.<com.android.server.notification.NotificationRecord: void setPkgAllowedAsConvo(boolean)>($z3);

        $i5 = r1.<android.app.Notification: int flags>;

        $i6 = $i5 & 64;

        if $i6 == 0 goto label17;

        z12 = virtualinvoke r105.<android.app.NotificationChannel: boolean isFgServiceShown()>();

        $i8 = virtualinvoke r105.<android.app.NotificationChannel: int getUserLockedFields()>();

        $i9 = $i8 & 4;

        if $i9 == 0 goto label09;

        if z12 != 0 goto label10;

     label09:
        $i10 = virtualinvoke $r24.<com.android.server.notification.NotificationRecord: int getImportance()>();

        if $i10 == 1 goto label13;

        $i11 = virtualinvoke $r24.<com.android.server.notification.NotificationRecord: int getImportance()>();

        if $i11 != 0 goto label10;

        goto label13;

     label10:
        if z12 != 0 goto label12;

        $z8 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r102);

        if $z8 != 0 goto label12;

        $r52 = "miscellaneous";

        $z9 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>(r102);

        if $z9 != 0 goto label11;

        virtualinvoke r105.<android.app.NotificationChannel: void setFgServiceShown(boolean)>(1);

        virtualinvoke $r24.<com.android.server.notification.NotificationRecord: void updateNotificationChannel(android.app.NotificationChannel)>(r105);

        goto label17;

     label11:
        goto label17;

     label12:
        goto label17;

     label13:
        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r102);

        if $z6 != 0 goto label16;

        $r50 = "miscellaneous";

        $z7 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(r102);

        if $z7 == 0 goto label14;

        goto label16;

     label14:
        virtualinvoke r105.<android.app.NotificationChannel: void setImportance(int)>(2);

        virtualinvoke $r24.<com.android.server.notification.NotificationRecord: void setSystemImportance(int)>(2);

        if z12 != 0 goto label15;

        virtualinvoke r105.<android.app.NotificationChannel: void unlockFields(int)>(4);

        virtualinvoke r105.<android.app.NotificationChannel: void setFgServiceShown(boolean)>(1);

        goto label15;

     label15:
        $r51 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r51.<com.android.server.notification.PreferencesHelper: void updateNotificationChannel(java.lang.String,int,android.app.NotificationChannel,boolean)>(r96, i3, r105, 0);

        virtualinvoke $r24.<com.android.server.notification.NotificationRecord: void updateNotificationChannel(android.app.NotificationChannel)>(r105);

        goto label17;

     label16:
        virtualinvoke $r24.<com.android.server.notification.NotificationRecord: void setSystemImportance(int)>(2);

        goto label17;

     label17:
        r109 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ShortcutHelper mShortcutHelper>;

        if r109 == null goto label18;

        $r49 = virtualinvoke r1.<android.app.Notification: java.lang.String getShortcutId()>();

        r110 = virtualinvoke r109.<com.android.server.notification.ShortcutHelper: android.content.pm.ShortcutInfo getValidShortcutInfo(java.lang.String,java.lang.String,android.os.UserHandle)>($r49, r96, r100);

        goto label19;

     label18:
        r110 = null;

     label19:
        $r28 = virtualinvoke r1.<android.app.Notification: java.lang.String getShortcutId()>();

        if $r28 == null goto label20;

        if r110 != null goto label20;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notification ");

        $r45 = virtualinvoke $r24.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" added an invalid shortcut");

        $r48 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r48);

     label20:
        virtualinvoke $r24.<com.android.server.notification.NotificationRecord: void setShortcutInfo(android.content.pm.ShortcutInfo)>(r110);

        $r112 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $z13 = virtualinvoke $r112.<com.android.server.notification.PreferencesHelper: boolean hasSentValidMsg(java.lang.String,int)>(r96, i3);

        virtualinvoke $r24.<com.android.server.notification.NotificationRecord: void setHasSentValidMsg(boolean)>($z13);

        $r113 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $z14 = virtualinvoke $r113.<com.android.server.notification.PreferencesHelper: boolean hasUserDemotedInvalidMsgApp(java.lang.String,int)>(r96, i3);

        virtualinvoke $r24.<com.android.server.notification.NotificationRecord: void userDemotedAppFromConvoSpace(boolean)>($z14);

        $r114 = virtualinvoke $r24.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r115 = virtualinvoke $r114.<android.service.notification.StatusBarNotification: java.lang.String getOverrideGroupKey()>();

        if $r115 == null goto label21;

        z15 = 1;

        goto label22;

     label21:
        z15 = 0;

     label22:
        $z4 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean checkDisqualifyingFeatures(int,int,int,java.lang.String,com.android.server.notification.NotificationRecord,boolean)>(i2, i3, i0, r98, $r24, z15);

        if $z4 != 0 goto label23;

        return;

     label23:
        if r110 == null goto label24;

        $r42 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ShortcutHelper mShortcutHelper>;

        virtualinvoke $r42.<com.android.server.notification.ShortcutHelper: void cacheShortcut(android.content.pm.ShortcutInfo,android.os.UserHandle)>(r110, r100);

     label24:
        $r29 = r1.<android.app.Notification: android.util.ArraySet allPendingIntents>;

        if $r29 == null goto label28;

        $r32 = r1.<android.app.Notification: android.util.ArraySet allPendingIntents>;

        i18 = virtualinvoke $r32.<android.util.ArraySet: int size()>();

        if i18 <= 0 goto label28;

        $r33 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        r116 = (android.app.ActivityManagerInternal) $r33;

        $r34 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/DeviceIdleInternal;");

        $r35 = (com.android.server.DeviceIdleInternal) $r34;

        l19 = interfaceinvoke $r35.<com.android.server.DeviceIdleInternal: long getNotificationWhitelistDuration()>();

        i20 = 0;

     label25:
        if i20 >= i18 goto label27;

        $r36 = r1.<android.app.Notification: android.util.ArraySet allPendingIntents>;

        $r37 = virtualinvoke $r36.<android.util.ArraySet: java.lang.Object valueAt(int)>(i20);

        r117 = (android.app.PendingIntent) $r37;

        if r117 == null goto label26;

        $r38 = virtualinvoke r117.<android.app.PendingIntent: android.content.IIntentSender getTarget()>();

        $r39 = <com.android.server.notification.NotificationManagerService: android.os.IBinder WHITELIST_TOKEN>;

        virtualinvoke r116.<android.app.ActivityManagerInternal: void setPendingIntentWhitelistDuration(android.content.IIntentSender,android.os.IBinder,long)>($r38, $r39, l19);

        $r40 = virtualinvoke r117.<android.app.PendingIntent: android.content.IIntentSender getTarget()>();

        $r41 = <com.android.server.notification.NotificationManagerService: android.os.IBinder WHITELIST_TOKEN>;

        virtualinvoke r116.<android.app.ActivityManagerInternal: void setPendingIntentAllowBgActivityStarts(android.content.IIntentSender,android.os.IBinder,int)>($r40, $r41, 7);

        goto label26;

     label26:
        i20 = i20 + 1;

        goto label25;

     label27:
        goto label28;

     label28:
        l21 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label29:
        $r118 = r0.<com.android.server.notification.NotificationManagerService: android.app.ActivityManager mActivityManager>;

        i22 = virtualinvoke $r118.<android.app.ActivityManager: int getPackageImportance(java.lang.String)>(r96);

     label30:
        if i22 != 100 goto label31;

        z16 = 1;

        goto label32;

     label31:
        z16 = 0;

     label32:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l21);

        $r31 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r30 = new com.android.server.notification.NotificationManagerService$EnqueueNotificationRunnable;

        specialinvoke $r30.<com.android.server.notification.NotificationManagerService$EnqueueNotificationRunnable: void <init>(com.android.server.notification.NotificationManagerService,int,com.android.server.notification.NotificationRecord,boolean)>(r0, i2, $r24, z16);

        virtualinvoke $r31.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r30);

        return;

     label33:
        $r94 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l21);

        throw $r94;

     label34:
        $r95 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Cannot fix notification", $r95);

        return;

     label35:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r97);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" trying to post for invalid pkg ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r96);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in user ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = new java.lang.SecurityException;

        $r21 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.SecurityException: void <init>(java.lang.String)>($r21);

        throw $r20;

     label36:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null not allowed: pkg=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r96);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notification=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

        catch java.lang.Exception from label02 to label03 with label34;
        catch java.lang.Throwable from label29 to label30 with label33;
    }

    java.util.List findCurrentAndSnoozedGroupNotificationsLocked(java.lang.String, java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r2;
        int i0;
        java.util.ArrayList r3;
        com.android.server.notification.SnoozeHelper $r4;
        java.lang.Integer $r5;
        java.util.List $r6;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r3 = virtualinvoke $r4.<com.android.server.notification.SnoozeHelper: java.util.ArrayList getNotifications(java.lang.String,java.lang.String,java.lang.Integer)>(r1, r2, $r5);

        $r6 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: java.util.List findGroupNotificationsLocked(java.lang.String,java.lang.String,int)>(r1, r2, i0);

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        return r3;
    }

    java.util.List findGroupNotificationsLocked(java.lang.String, java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r2;
        int i0;
        java.util.ArrayList $r4, $r5, $r7;
        java.util.List $r6, $r8;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r6 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: java.util.List findGroupNotificationByListLocked(java.util.ArrayList,java.lang.String,java.lang.String,int)>($r5, r1, r2, i0);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        $r7 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        $r8 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: java.util.List findGroupNotificationByListLocked(java.util.ArrayList,java.lang.String,java.lang.String,int)>($r7, r1, r2, i0);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        return $r4;
    }

    com.android.server.notification.NotificationRecord findNotificationLocked(java.lang.String, java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r5;
        int i0, i1;
        com.android.server.notification.NotificationRecord r2, r6;
        java.util.ArrayList $r3, $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        r2 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord findNotificationByListLocked(java.util.ArrayList,java.lang.String,java.lang.String,int,int)>($r3, r5, r1, i0, i1);

        if r2 == null goto label1;

        return r2;

     label1:
        $r4 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        r6 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord findNotificationByListLocked(java.util.ArrayList,java.lang.String,java.lang.String,int,int)>($r4, r5, r1, i0, i1);

        if r6 == null goto label2;

        return r6;

     label2:
        return null;
    }

    void finishWindowTokenLocked(android.os.IBinder, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.IBinder r1;
        int i0;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r2;
        com.android.server.wm.WindowManagerInternal $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r2.<com.android.server.notification.NotificationManagerService$WorkerHandler: void removeCallbacksAndMessages(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerInternal: void removeWindowToken(android.os.IBinder,boolean,int)>(r1, 1, i0);

        return;
    }

    protected void fixNotification(android.app.Notification, java.lang.String, java.lang.String, int, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        com.android.server.notification.NotificationManagerService r0;
        android.app.Notification r1;
        java.lang.String r2, r3, $r11;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, i9;
        android.content.pm.PackageManager $r4, $r6, r12;
        android.app.PendingIntent $r5;
        java.lang.StringBuilder $r7;
        android.content.pm.ApplicationInfo r13;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.app.Notification;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i9 := @parameter4: int;

        r12 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.PackageManager mPackageManagerClient>;

        if i9 != -1 goto label1;

        i9 = 0;

        goto label1;

     label1:
        r13 = virtualinvoke r12.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,int)>(r2, 268435456, i9);

        staticinvoke <android.app.Notification: void addFieldsFromContext(android.content.pm.ApplicationInfo,android.app.Notification)>(r13, r1);

        $r4 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.PackageManager mPackageManagerClient>;

        $i1 = virtualinvoke $r4.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.USE_COLORIZED_NOTIFICATIONS", r2);

        if $i1 != 0 goto label2;

        $i7 = r1.<android.app.Notification: int flags>;

        $i8 = $i7 | 2048;

        r1.<android.app.Notification: int flags> = $i8;

        goto label3;

     label2:
        $i2 = r1.<android.app.Notification: int flags>;

        $i3 = $i2 & -2049;

        r1.<android.app.Notification: int flags> = $i3;

     label3:
        $r5 = r1.<android.app.Notification: android.app.PendingIntent fullScreenIntent>;

        if $r5 == null goto label4;

        $i4 = r13.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i4 < 29 goto label4;

        $r6 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.PackageManager mPackageManagerClient>;

        $i5 = virtualinvoke $r6.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.USE_FULL_SCREEN_INTENT", r2);

        if $i5 == 0 goto label4;

        r1.<android.app.Notification: android.app.PendingIntent fullScreenIntent> = null;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Use of fullScreenIntent requires the USE_FULL_SCREEN_INTENT permission");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r11);

     label4:
        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkRemoteViews(java.lang.String,java.lang.String,int,android.app.Notification)>(r2, r3, i0, r1);

        return;
    }

    android.content.ComponentName getApprovedAssistant(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        android.content.ComponentName $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSystemOrShell()>();

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        $r2 = virtualinvoke $r1.<com.android.server.notification.NotificationManagerService$NotificationAssistants: java.util.List getAllowedComponents(int)>(i0);

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.lang.Object firstOrNull(java.util.List)>($r2);

        $r4 = (android.content.ComponentName) $r3;

        return $r4;
    }

    android.app.INotificationManager getBinderService()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.IBinder $r1;
        android.app.INotificationManager $r2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.os.IBinder mService>;

        $r2 = staticinvoke <android.app.INotificationManager$Stub: android.app.INotificationManager asInterface(android.os.IBinder)>($r1);

        return $r2;
    }

    protected android.companion.ICompanionDeviceManager getCompanionManager()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.IBinder $r1;
        android.companion.ICompanionDeviceManager $r2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("companiondevice");

        $r2 = staticinvoke <android.companion.ICompanionDeviceManager$Stub: android.companion.ICompanionDeviceManager asInterface(android.os.IBinder)>($r1);

        return $r2;
    }

    com.android.internal.logging.InstanceId getGroupInstanceId(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        android.service.notification.StatusBarNotification $r3;
        com.android.internal.logging.InstanceId $r4;
        java.lang.String r5;
        com.android.server.notification.NotificationRecord r6;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r5 := @parameter0: java.lang.String;

        if r5 != null goto label1;

        return null;

     label1:
        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mSummaryByGroupKey>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.notification.NotificationRecord) $r2;

        if r6 != null goto label2;

        return null;

     label2:
        $r3 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r4 = virtualinvoke $r3.<android.service.notification.StatusBarNotification: com.android.internal.logging.InstanceId getInstanceId()>();

        return $r4;
    }

    com.android.server.notification.NotificationManagerInternal getInternalService()
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerInternal $r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerInternal mInternalService>;

        return $r1;
    }

    protected int getNotificationCountLocked(java.lang.String, int, int, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r8, $r13, $r17, r18;
        int i0, i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i10, i11;
        com.android.server.notification.NotificationRecord r2, r19;
        java.util.ArrayList $r3, $r4, $r5, $r10;
        java.lang.Object $r6, $r11;
        android.service.notification.StatusBarNotification $r7, $r9, $r12, $r14, $r15, $r16;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i5 := @parameter2: int;

        r18 := @parameter3: java.lang.String;

        i6 = 0;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i7 = 0;

     label1:
        if i7 >= i1 goto label4;

        $r10 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r2 = (com.android.server.notification.NotificationRecord) $r11;

        i8 = i6;

        $r12 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r13 = virtualinvoke $r12.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        i8 = i6;

        $r14 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i3 = virtualinvoke $r14.<android.service.notification.StatusBarNotification: int getUserId()>();

        if $i3 != i0 goto label3;

        $r15 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i4 = virtualinvoke $r15.<android.service.notification.StatusBarNotification: int getId()>();

        if $i4 != i5 goto label2;

        $r16 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r17 = virtualinvoke $r16.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r17, r18);

        if $z2 == 0 goto label2;

        i8 = i6;

        goto label3;

     label2:
        i8 = i6 + 1;

     label3:
        i7 = i7 + 1;

        i6 = i8;

        goto label1;

     label4:
        $r4 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        i9 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i10 = 0;

     label5:
        if i10 >= i9 goto label7;

        $r5 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r19 = (com.android.server.notification.NotificationRecord) $r6;

        i11 = i6;

        $r7 = virtualinvoke r19.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r8 = virtualinvoke $r7.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label6;

        i11 = i6;

        $r9 = virtualinvoke r19.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i2 = virtualinvoke $r9.<android.service.notification.StatusBarNotification: int getUserId()>();

        if $i2 != i0 goto label6;

        i11 = i6 + 1;

     label6:
        i10 = i10 + 1;

        i6 = i11;

        goto label5;

     label7:
        return i6;
    }

    com.android.server.notification.NotificationRecord getNotificationRecord(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        com.android.server.notification.NotificationRecord $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.android.server.notification.NotificationRecord) $r3;

        return $r4;
    }

    int getNotificationRecordCount()
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.Object r1, $r8;
        com.android.server.notification.NotificationRecord r2;
        java.util.ArrayList $r3, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        android.util.ArrayMap $r4, $r5, $r9;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r10;
        android.service.notification.StatusBarNotification $r11;
        android.app.Notification $r12;
        java.lang.Throwable $r13;
        java.util.Iterator r14;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $i1 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        $i2 = $i0 + $i1;

        $r5 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mSummaryByGroupKey>;

        $i3 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        $i4 = $i2 + $i3;

        $r6 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mEnqueuedNotifications>;

        $i5 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i6 = $i4 + $i5;

        $r7 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        r14 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r8 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.notification.NotificationRecord) $r8;

     label03:
        i7 = i6;

     label04:
        $r9 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r10 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $z1 = virtualinvoke $r9.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r10);

        if $z1 == 0 goto label06;

     label05:
        i7 = i6 - 1;

     label06:
        i6 = i7;

     label07:
        $r11 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $z2 = virtualinvoke $r11.<android.service.notification.StatusBarNotification: boolean isGroup()>();

        if $z2 == 0 goto label11;

     label08:
        i6 = i7;

     label09:
        $r12 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $z3 = virtualinvoke $r12.<android.app.Notification: boolean isGroupSummary()>();

        if $z3 == 0 goto label11;

     label10:
        i6 = i7 - 1;

     label11:
        goto label02;

     label12:
        exitmonitor r1;

     label13:
        return i6;

     label14:
        $r13 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    com.android.server.notification.ShortcutHelper getShortcutHelper()
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ShortcutHelper $r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ShortcutHelper mShortcutHelper>;

        return $r1;
    }

    protected java.lang.String[] getStringArrayResource(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.String[] $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i0);

        return $r3;
    }

    void handleOnPackageChanged(boolean, int, java.lang.String[], int[])
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0, z1, $z2;
        java.lang.String[] r1;
        int[] r2;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        java.lang.String r3;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r4;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r5;
        com.android.server.notification.ConditionProviders $r6;
        com.android.server.notification.PreferencesHelper $r7;
        com.android.server.notification.NotificationHistoryManager $r8;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        z0 := @parameter0: boolean;

        i5 := @parameter1: int;

        r1 := @parameter2: java.lang.String[];

        r2 := @parameter3: int[];

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationListeners: void onPackagesChanged(boolean,java.lang.String[],int[])>(z0, r1, r2);

        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void onPackagesChanged(boolean,java.lang.String[],int[])>(z0, r1, r2);

        $r6 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        virtualinvoke $r6.<com.android.server.notification.ConditionProviders: void onPackagesChanged(boolean,java.lang.String[],int[])>(z0, r1, r2);

        $r7 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        z1 = virtualinvoke $r7.<com.android.server.notification.PreferencesHelper: boolean onPackagesChanged(boolean,int,java.lang.String[],int[])>(z0, i5, r1, r2);

        if z0 == 0 goto label2;

        $i3 = lengthof r1;

        $i2 = lengthof r2;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        r3 = r1[i6];

        i1 = r2[i6];

        $r8 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationHistoryManager mHistoryManager>;

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        virtualinvoke $r8.<com.android.server.notification.NotificationHistoryManager: void onPackageRemoved(int,java.lang.String)>($i4, r3);

        i6 = i6 + 1;

        goto label1;

     label2:
        $z2 = z0 | z1;

        if $z2 == 0 goto label3;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

     label3:
        return;
    }

    void handleRankingSort()
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.Object r1, $r19, $r20, $r23, $r25, $r27, $r29, $r31, $r33, $r38, r63, r64;
        int[] r2, r12;
        boolean[] r3, r4, r5;
        java.util.ArrayList r6, r7, r8, r9, r10, r11, $r15, $r16, $r18, $r28, $r30, $r35, $r36, $r37, $r43, $r44, $r47, $r48, r53, r54, r55;
        com.android.server.notification.RankingHelper $r14, $r17, $r49;
        java.lang.String $r21, $r26, $r39, $r42, r62;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z16, $z17, $z18;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i14;
        android.app.Notification $r22, $r40;
        android.app.NotificationChannel $r24, $r41;
        java.lang.Integer $r32, $r34, $r45, $r46;
        java.lang.Throwable $r50, $r51, r57;
        com.android.server.notification.NotificationRecord r56, r61;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r65;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r14 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        if $r14 != null goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label02:
        $r15 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i11 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        r53 = new java.util.ArrayList;

        specialinvoke r53.<java.util.ArrayList: void <init>(int)>(i11);

        r2 = newarray (int)[i11];

        r3 = newarray (boolean)[i11];

        r4 = newarray (boolean)[i11];

        r5 = newarray (boolean)[i11];

        r6 = new java.util.ArrayList;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>(i11);

        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>(i11);

        r8 = new java.util.ArrayList;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>(i11);

        r9 = new java.util.ArrayList;

        specialinvoke r9.<java.util.ArrayList: void <init>(int)>(i11);

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>(int)>(i11);

        r11 = new java.util.ArrayList;

        specialinvoke r11.<java.util.ArrayList: void <init>(int)>(i11);

        r54 = new java.util.ArrayList;

        specialinvoke r54.<java.util.ArrayList: void <init>(int)>(i11);

        r55 = new java.util.ArrayList;

        specialinvoke r55.<java.util.ArrayList: void <init>(int)>(i11);

     label03:
        r12 = newarray (int)[i11];

     label04:
        i12 = 0;

     label05:
        if i12 >= i11 goto label11;

     label06:
        $r37 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r38 = virtualinvoke $r37.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r56 = (com.android.server.notification.NotificationRecord) $r38;

     label07:
        $r39 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke r53.<java.util.ArrayList: boolean add(java.lang.Object)>($r39);

        $i7 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: int getPackageVisibilityOverride()>();

        r2[i12] = $i7;

        $z16 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: boolean canShowBadge()>();

        r3[i12] = $z16;

        $z17 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: boolean canBubble()>();

        r4[i12] = $z17;

        $r40 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $z18 = virtualinvoke $r40.<android.app.Notification: boolean isBubbleNotification()>();

        r5[i12] = $z18;

        $r41 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: android.app.NotificationChannel getChannel()>();

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r41);

        $r42 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: java.lang.String getGroupKey()>();

        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r42);

        $r43 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: java.util.ArrayList getPeopleOverride()>();

        virtualinvoke r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r43);

        $r44 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: java.util.ArrayList getSnoozeCriteria()>();

        virtualinvoke r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r44);

        $i8 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: int getUserSentiment()>();

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r45);

        $i9 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: int getSuppressedVisualEffects()>();

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        virtualinvoke r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r46);

        $r47 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: java.util.ArrayList getSystemGeneratedSmartActions()>();

        virtualinvoke r54.<java.util.ArrayList: boolean add(java.lang.Object)>($r47);

        $r48 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: java.util.ArrayList getSmartReplies()>();

        virtualinvoke r55.<java.util.ArrayList: boolean add(java.lang.Object)>($r48);

        $i10 = virtualinvoke r56.<com.android.server.notification.NotificationRecord: int getImportance()>();

        r12[i12] = $i10;

     label08:
        $r49 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        virtualinvoke $r49.<com.android.server.notification.RankingHelper: void extractSignals(com.android.server.notification.NotificationRecord)>(r56);

     label09:
        i12 = i12 + 1;

        goto label05;

     label10:
        $r51 := @caughtexception;

        r57 = $r51;

        goto label25;

     label11:
        $r17 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        $r16 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        virtualinvoke $r17.<com.android.server.notification.RankingHelper: void sort(java.util.ArrayList)>($r16);

     label12:
        i14 = 0;

     label13:
        if i14 >= i11 goto label22;

     label14:
        $r18 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r61 = (com.android.server.notification.NotificationRecord) $r19;

        $r20 = virtualinvoke r53.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r62 = (java.lang.String) $r20;

     label15:
        $r21 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $z0 = virtualinvoke r62.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z0 == 0 goto label20;

        $i1 = r2[i14];

        $i2 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: int getPackageVisibilityOverride()>();

        if $i1 != $i2 goto label20;

        $z1 = r3[i14];

        $z2 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: boolean canShowBadge()>();

        if $z1 != $z2 goto label20;

        $z3 = r4[i14];

        $z4 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: boolean canBubble()>();

        if $z3 != $z4 goto label20;

        $z5 = r5[i14];

        $r22 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $z6 = virtualinvoke $r22.<android.app.Notification: boolean isBubbleNotification()>();

        if $z5 != $z6 goto label20;

        $r23 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $r24 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: android.app.NotificationChannel getChannel()>();

        $z7 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r23, $r24);

        if $z7 == 0 goto label20;

        $r25 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $r26 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: java.lang.String getGroupKey()>();

        $z8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r25, $r26);

        if $z8 == 0 goto label20;

        $r27 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $r28 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: java.util.ArrayList getPeopleOverride()>();

        $z9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r27, $r28);

        if $z9 == 0 goto label20;

        $r29 = virtualinvoke r9.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $r30 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: java.util.ArrayList getSnoozeCriteria()>();

        $z10 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r29, $r30);

        if $z10 == 0 goto label20;

        $r31 = virtualinvoke r10.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $i3 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: int getUserSentiment()>();

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $z11 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r31, $r32);

        if $z11 == 0 goto label20;

        $r33 = virtualinvoke r11.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $i4 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: int getSuppressedVisualEffects()>();

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $z12 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r33, $r34);

        if $z12 == 0 goto label20;

        r63 = virtualinvoke r54.<java.util.ArrayList: java.lang.Object get(int)>(i14);

     label16:
        $r35 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: java.util.ArrayList getSystemGeneratedSmartActions()>();

        $z13 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r63, $r35);

        if $z13 == 0 goto label20;

        r64 = virtualinvoke r55.<java.util.ArrayList: java.lang.Object get(int)>(i14);

     label17:
        $r36 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: java.util.ArrayList getSmartReplies()>();

        $z14 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r64, $r36);

        if $z14 == 0 goto label20;

        $i5 = r12[i14];

        $i6 = virtualinvoke r61.<com.android.server.notification.NotificationRecord: int getImportance()>();

        if $i5 == $i6 goto label19;

     label18:
        goto label20;

     label19:
        i14 = i14 + 1;

        goto label13;

     label20:
        $r65 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r65.<com.android.server.notification.NotificationManagerService$WorkerHandler: void scheduleSendRankingUpdate()>();

        exitmonitor r1;

     label21:
        return;

     label22:
        exitmonitor r1;

     label23:
        return;

     label24:
        $r50 := @caughtexception;

        r57 = $r50;

     label25:
        exitmonitor r1;

     label26:
        throw r57;

        catch java.lang.Throwable from label02 to label03 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label06 to label07 with label24;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch java.lang.Throwable from label11 to label12 with label24;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    protected void handleSavePolicyFile()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.Handler $r1, $r3;
        com.android.server.notification.NotificationManagerService$SavePolicyFileRunnable $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = staticinvoke <com.android.server.IoThread: android.os.Handler getHandler()>();

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$SavePolicyFileRunnable mSavePolicyFile>;

        $z0 = virtualinvoke $r1.<android.os.Handler: boolean hasCallbacks(java.lang.Runnable)>($r2);

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <com.android.server.IoThread: android.os.Handler getHandler()>();

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$SavePolicyFileRunnable mSavePolicyFile>;

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    boolean hasCompanionDevice(com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        long l0;
        boolean z0;
        java.lang.StringBuilder r2;
        android.companion.ICompanionDeviceManager $r3, $r4, $r6, $r9;
        android.content.ComponentName $r5;
        java.lang.String $r7, $r13;
        int $i1;
        java.util.List $r8;
        java.lang.Exception $r10;
        android.os.RemoteException $r14;
        java.lang.Throwable $r15, $r16;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r17;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r17 := @parameter0: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.companion.ICompanionDeviceManager mCompanionManager>;

        if $r3 != null goto label01;

        $r9 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.companion.ICompanionDeviceManager getCompanionManager()>();

        r0.<com.android.server.notification.NotificationManagerService: android.companion.ICompanionDeviceManager mCompanionManager> = $r9;

     label01:
        $r4 = r0.<com.android.server.notification.NotificationManagerService: android.companion.ICompanionDeviceManager mCompanionManager>;

        if $r4 != null goto label02;

        return 0;

     label02:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r6 = r0.<com.android.server.notification.NotificationManagerService: android.companion.ICompanionDeviceManager mCompanionManager>;

        $r5 = r17.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        $r7 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getPackageName()>();

        $i1 = r17.<com.android.server.notification.ManagedServices$ManagedServiceInfo: int userid>;

        $r8 = interfaceinvoke $r6.<android.companion.ICompanionDeviceManager: java.util.List getAssociations(java.lang.String,int)>($r7, $i1);

        z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.util.Collection)>($r8);

     label04:
        if z0 != 0 goto label05;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label05:
        goto label15;

     label06:
        $r15 := @caughtexception;

        goto label13;

     label07:
        $r10 := @caughtexception;

     label08:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot verify listener ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r13 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", $r13, $r10);

     label09:
        goto label15;

     label10:
        $r14 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Cannot reach companion device service", $r14);

     label12:
        goto label15;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r15;

     label14:
        $r16 := @caughtexception;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

        catch java.lang.SecurityException from label03 to label04 with label14;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
    }

    protected void hideNotificationsForPackages(java.lang.String[])
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.Object r1, $r7;
        java.util.ArrayList r2, $r4, $r6;
        int i0, i1;
        com.android.server.notification.NotificationRecord r3;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r5;
        android.service.notification.StatusBarNotification $r8;
        java.lang.String $r9;
        boolean $z0;
        java.lang.Throwable $r10;
        java.lang.String[] r11;
        java.util.List r12;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r11 := @parameter0: java.lang.String[];

        r1 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label01:
        r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r11);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r6 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.notification.NotificationRecord) $r7;

        $r8 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r9 = virtualinvoke $r8.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z0 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>($r9);

        if $z0 == 0 goto label05;

        virtualinvoke r3.<com.android.server.notification.NotificationRecord: void setHidden(boolean)>(1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyHiddenLocked(java.util.List)>(r2);

        exitmonitor r1;

     label07:
        return;

     label08:
        $r10 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    int indexOfNotificationLocked(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r6;
        int i0, i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.notification.NotificationRecord $r5;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.notification.NotificationRecord) $r4;

        $r6 = virtualinvoke $r5.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    int indexOfToastLocked(java.lang.String, android.os.IBinder)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r6;
        android.os.IBinder r2, $r7;
        java.util.ArrayList r3;
        int i0, i1;
        com.android.server.notification.toast.ToastRecord r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.notification.toast.ToastRecord) $r5;

        $r6 = r4.<com.android.server.notification.toast.ToastRecord: java.lang.String pkg>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r7 = r4.<com.android.server.notification.toast.ToastRecord: android.os.IBinder token>;

        if $r7 != r2 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    void init(com.android.server.notification.NotificationManagerService$WorkerHandler, com.android.server.notification.RankingHandler, android.content.pm.IPackageManager, android.content.pm.PackageManager, com.android.server.lights.LightsManager, com.android.server.notification.NotificationManagerService$NotificationListeners, com.android.server.notification.NotificationManagerService$NotificationAssistants, com.android.server.notification.ConditionProviders, android.companion.ICompanionDeviceManager, com.android.server.notification.SnoozeHelper, com.android.server.notification.NotificationUsageStats, android.util.AtomicFile, android.app.ActivityManager, com.android.server.notification.GroupHelper, android.app.IActivityManager, com.android.server.wm.ActivityTaskManagerInternal, android.app.usage.UsageStatsManagerInternal, android.app.admin.DevicePolicyManagerInternal, android.app.IUriGrantsManager, com.android.server.uri.UriGrantsManagerInternal, android.app.AppOpsManager, android.os.UserManager, com.android.server.notification.NotificationHistoryManager, android.app.StatsManager, android.telephony.TelephonyManager)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.pm.IPackageManager r1;
        android.content.pm.PackageManager r2, $r55, $r92, $r93, $r103;
        com.android.server.lights.LightsManager r3;
        com.android.server.notification.NotificationManagerService$NotificationListeners r4;
        com.android.server.notification.NotificationManagerService$NotificationAssistants r5;
        com.android.server.notification.ConditionProviders r6, $r50;
        android.companion.ICompanionDeviceManager r7;
        com.android.server.notification.SnoozeHelper r8;
        com.android.server.notification.NotificationUsageStats r9, $r62;
        android.util.AtomicFile r10;
        android.app.ActivityManager r11;
        com.android.server.notification.GroupHelper r12;
        android.app.IActivityManager r13;
        com.android.server.wm.ActivityTaskManagerInternal r14;
        android.app.usage.UsageStatsManagerInternal r15;
        android.app.admin.DevicePolicyManagerInternal r16;
        android.app.IUriGrantsManager r17;
        com.android.server.uri.UriGrantsManagerInternal r18;
        android.app.AppOpsManager r19, $r59;
        android.os.UserManager r20;
        com.android.server.notification.NotificationHistoryManager r21;
        android.app.StatsManager r22;
        android.telephony.TelephonyManager r23;
        android.content.res.Resources r24, $r106, $r110, $r113, $r115;
        android.content.Context $r25, $r26, $r28, $r31, $r34, $r46, $r53, $r61, $r82, $r87, $r105, $r109, $r112, $r114;
        android.content.ContentResolver $r27, $r83;
        float $f0, $f1;
        java.lang.Object $r29, $r32, $r35, $r67;
        android.view.accessibility.AccessibilityManager $r30;
        android.os.Vibrator $r33;
        android.app.AlarmManager $r36;
        android.os.IBinder $r37, $r39;
        android.os.IDeviceIdleController $r38;
        com.android.internal.compat.IPlatformCompat $r40;
        android.os.Handler $r41;
        com.android.server.UiThread $r42;
        android.os.Looper $r43, $r48;
        com.android.internal.logging.MetricsLogger $r44;
        com.android.server.notification.ZenModeHelper $r45, $r57, $r63, $r84, $r85, $r108;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r47, $r90, r96;
        com.android.server.notification.SysUiStatsEvent$BuilderFactory $r49, $r58;
        com.android.server.notification.NotificationManagerService$7 $r51;
        com.android.server.notification.PreferencesHelper $r52, $r64, $r104;
        com.android.server.notification.NotificationChannelLoggerImpl $r54;
        com.android.server.notification.RankingHandler $r56, $r65, r97;
        com.android.server.notification.RankingHelper $r60;
        com.android.server.notification._$$Lambda$V4J7df5A6vhSIuw7Ym9xgkfahto $r66;
        com.android.server.lights.LogicalLight $r68, $r69;
        long[] $r70, $r71;
        java.lang.StringBuilder $r72;
        java.lang.String $r74, $r76;
        android.net.Uri $r77;
        android.media.AudioAttributes$Builder $r78, $r79, $r80;
        android.media.AudioAttributes $r81;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.server.notification.ManagedServices$UserProfiles $r86;
        com.android.server.notification.NotificationManagerService$8 $r88;
        com.android.server.notification.NotificationManagerService$SettingsObserver $r89;
        com.android.server.notification.NotificationManagerService$Archive $r91;
        com.android.server.notification.NotificationDelegate $r94;
        android.content.res.Resources$NotFoundException $r95;
        java.lang.String[] r98, $r107, $r111, $r116;
        com.android.server.statusbar.StatusBarManagerInternal r101;
        java.util.Set $r117;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r96 := @parameter0: com.android.server.notification.NotificationManagerService$WorkerHandler;

        r97 := @parameter1: com.android.server.notification.RankingHandler;

        r1 := @parameter2: android.content.pm.IPackageManager;

        r2 := @parameter3: android.content.pm.PackageManager;

        r3 := @parameter4: com.android.server.lights.LightsManager;

        r4 := @parameter5: com.android.server.notification.NotificationManagerService$NotificationListeners;

        r5 := @parameter6: com.android.server.notification.NotificationManagerService$NotificationAssistants;

        r6 := @parameter7: com.android.server.notification.ConditionProviders;

        r7 := @parameter8: android.companion.ICompanionDeviceManager;

        r8 := @parameter9: com.android.server.notification.SnoozeHelper;

        r9 := @parameter10: com.android.server.notification.NotificationUsageStats;

        r10 := @parameter11: android.util.AtomicFile;

        r11 := @parameter12: android.app.ActivityManager;

        r12 := @parameter13: com.android.server.notification.GroupHelper;

        r13 := @parameter14: android.app.IActivityManager;

        r14 := @parameter15: com.android.server.wm.ActivityTaskManagerInternal;

        r15 := @parameter16: android.app.usage.UsageStatsManagerInternal;

        r16 := @parameter17: android.app.admin.DevicePolicyManagerInternal;

        r17 := @parameter18: android.app.IUriGrantsManager;

        r18 := @parameter19: com.android.server.uri.UriGrantsManagerInternal;

        r19 := @parameter20: android.app.AppOpsManager;

        r20 := @parameter21: android.os.UserManager;

        r21 := @parameter22: com.android.server.notification.NotificationHistoryManager;

        r22 := @parameter23: android.app.StatsManager;

        r23 := @parameter24: android.telephony.TelephonyManager;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler> = r96;

        $r25 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        r24 = virtualinvoke $r25.<android.content.Context: android.content.res.Resources getResources()>();

        $r26 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r27 = virtualinvoke $r26.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $f0 = staticinvoke <android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String,float)>($r27, "max_notification_enqueue_rate", 5.0F);

        r0.<com.android.server.notification.NotificationManagerService: float mMaxPackageEnqueueRate> = $f0;

        $r28 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r29 = virtualinvoke $r28.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r30 = (android.view.accessibility.AccessibilityManager) $r29;

        r0.<com.android.server.notification.NotificationManagerService: android.view.accessibility.AccessibilityManager mAccessibilityManager> = $r30;

        r0.<com.android.server.notification.NotificationManagerService: android.app.IActivityManager mAm> = r13;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtm> = r14;

        r0.<com.android.server.notification.NotificationManagerService: android.app.IUriGrantsManager mUgm> = r17;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal> = r18;

        r0.<com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager mPackageManager> = r1;

        r0.<com.android.server.notification.NotificationManagerService: android.content.pm.PackageManager mPackageManagerClient> = r2;

        r0.<com.android.server.notification.NotificationManagerService: android.app.AppOpsManager mAppOps> = r19;

        $r31 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r32 = virtualinvoke $r31.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        $r33 = (android.os.Vibrator) $r32;

        r0.<com.android.server.notification.NotificationManagerService: android.os.Vibrator mVibrator> = $r33;

        r0.<com.android.server.notification.NotificationManagerService: android.app.usage.UsageStatsManagerInternal mAppUsageStats> = r15;

        $r34 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r35 = virtualinvoke $r34.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r36 = (android.app.AlarmManager) $r35;

        r0.<com.android.server.notification.NotificationManagerService: android.app.AlarmManager mAlarmManager> = $r36;

        r0.<com.android.server.notification.NotificationManagerService: android.companion.ICompanionDeviceManager mCompanionManager> = r7;

        r0.<com.android.server.notification.NotificationManagerService: android.app.ActivityManager mActivityManager> = r11;

        $r37 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("deviceidle");

        $r38 = staticinvoke <android.os.IDeviceIdleController$Stub: android.os.IDeviceIdleController asInterface(android.os.IBinder)>($r37);

        r0.<com.android.server.notification.NotificationManagerService: android.os.IDeviceIdleController mDeviceIdleController> = $r38;

        r0.<com.android.server.notification.NotificationManagerService: android.app.admin.DevicePolicyManagerInternal mDpm> = r16;

        r0.<com.android.server.notification.NotificationManagerService: android.os.UserManager mUm> = r20;

        $r39 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("platform_compat");

        $r40 = staticinvoke <com.android.internal.compat.IPlatformCompat$Stub: com.android.internal.compat.IPlatformCompat asInterface(android.os.IBinder)>($r39);

        r0.<com.android.server.notification.NotificationManagerService: com.android.internal.compat.IPlatformCompat mPlatformCompat> = $r40;

        $r41 = new android.os.Handler;

        $r42 = staticinvoke <com.android.server.UiThread: com.android.server.UiThread get()>();

        $r43 = virtualinvoke $r42.<com.android.server.UiThread: android.os.Looper getLooper()>();

        specialinvoke $r41.<android.os.Handler: void <init>(android.os.Looper)>($r43);

        r0.<com.android.server.notification.NotificationManagerService: android.os.Handler mUiHandler> = $r41;

     label1:
        r98 = virtualinvoke r24.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236062);

     label2:
        goto label4;

     label3:
        $r95 := @caughtexception;

        r98 = newarray (java.lang.String)[0];

     label4:
        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats> = r9;

        $r44 = new com.android.internal.logging.MetricsLogger;

        specialinvoke $r44.<com.android.internal.logging.MetricsLogger: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: com.android.internal.logging.MetricsLogger mMetricsLogger> = $r44;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHandler mRankingHandler> = r97;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders> = r6;

        $r45 = new com.android.server.notification.ZenModeHelper;

        $r46 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r47 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r48 = virtualinvoke $r47.<com.android.server.notification.NotificationManagerService$WorkerHandler: android.os.Looper getLooper()>();

        $r50 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        $r49 = new com.android.server.notification.SysUiStatsEvent$BuilderFactory;

        specialinvoke $r49.<com.android.server.notification.SysUiStatsEvent$BuilderFactory: void <init>()>();

        specialinvoke $r45.<com.android.server.notification.ZenModeHelper: void <init>(android.content.Context,android.os.Looper,com.android.server.notification.ConditionProviders,com.android.server.notification.SysUiStatsEvent$BuilderFactory)>($r46, $r48, $r50, $r49);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper> = $r45;

        $r51 = new com.android.server.notification.NotificationManagerService$7;

        specialinvoke $r51.<com.android.server.notification.NotificationManagerService$7: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        virtualinvoke $r45.<com.android.server.notification.ZenModeHelper: void addCallback(com.android.server.notification.ZenModeHelper$Callback)>($r51);

        $r52 = new com.android.server.notification.PreferencesHelper;

        $r53 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r55 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.PackageManager mPackageManagerClient>;

        $r56 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHandler mRankingHandler>;

        $r57 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $r54 = new com.android.server.notification.NotificationChannelLoggerImpl;

        specialinvoke $r54.<com.android.server.notification.NotificationChannelLoggerImpl: void <init>()>();

        $r59 = r0.<com.android.server.notification.NotificationManagerService: android.app.AppOpsManager mAppOps>;

        $r58 = new com.android.server.notification.SysUiStatsEvent$BuilderFactory;

        specialinvoke $r58.<com.android.server.notification.SysUiStatsEvent$BuilderFactory: void <init>()>();

        specialinvoke $r52.<com.android.server.notification.PreferencesHelper: void <init>(android.content.Context,android.content.pm.PackageManager,com.android.server.notification.RankingHandler,com.android.server.notification.ZenModeHelper,com.android.server.notification.NotificationChannelLogger,android.app.AppOpsManager,com.android.server.notification.SysUiStatsEvent$BuilderFactory)>($r53, $r55, $r56, $r57, $r54, $r59, $r58);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper> = $r52;

        $r60 = new com.android.server.notification.RankingHelper;

        $r61 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r65 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHandler mRankingHandler>;

        $r64 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r63 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $r62 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        specialinvoke $r60.<com.android.server.notification.RankingHelper: void <init>(android.content.Context,com.android.server.notification.RankingHandler,com.android.server.notification.RankingConfig,com.android.server.notification.ZenModeHelper,com.android.server.notification.NotificationUsageStats,java.lang.String[])>($r61, $r65, $r64, $r63, $r62, r98);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper> = $r60;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper> = r8;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.GroupHelper mGroupHelper> = r12;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationHistoryManager mHistoryManager> = r21;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners> = r4;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants> = r5;

        $r66 = new com.android.server.notification._$$Lambda$V4J7df5A6vhSIuw7Ym9xgkfahto;

        specialinvoke $r66.<com.android.server.notification._$$Lambda$V4J7df5A6vhSIuw7Ym9xgkfahto: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: com.android.internal.util.function.TriPredicate mAllowedManagedServicePackages> = $r66;

        r0.<com.android.server.notification.NotificationManagerService: android.util.AtomicFile mPolicyFile> = r10;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void loadPolicyFile()>();

        $r67 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: java.lang.Object getLocalService(java.lang.Class)>(class "Lcom/android/server/statusbar/StatusBarManagerInternal;");

        r101 = (com.android.server.statusbar.StatusBarManagerInternal) $r67;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.statusbar.StatusBarManagerInternal mStatusBar> = r101;

        if r101 == null goto label5;

        $r94 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationDelegate mNotificationDelegate>;

        interfaceinvoke r101.<com.android.server.statusbar.StatusBarManagerInternal: void setNotificationDelegate(com.android.server.notification.NotificationDelegate)>($r94);

     label5:
        $r68 = virtualinvoke r3.<com.android.server.lights.LightsManager: com.android.server.lights.LogicalLight getLight(int)>(4);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.LogicalLight mNotificationLight> = $r68;

        $r69 = virtualinvoke r3.<com.android.server.lights.LightsManager: com.android.server.lights.LogicalLight getLight(int)>(5);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.LogicalLight mAttentionLight> = $r69;

        $r70 = <com.android.server.notification.NotificationManagerService: long[] DEFAULT_VIBRATE_PATTERN>;

        $r71 = staticinvoke <com.android.server.notification.NotificationManagerService: long[] getLongArray(android.content.res.Resources,int,int,long[])>(r24, 17236060, 17, $r70);

        r0.<com.android.server.notification.NotificationManagerService: long[] mFallbackVibrationPattern> = $r71;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file://");

        $r74 = virtualinvoke r24.<android.content.res.Resources: java.lang.String getString(int)>(17039905);

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        $r77 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r76);

        r0.<com.android.server.notification.NotificationManagerService: android.net.Uri mInCallNotificationUri> = $r77;

        $r78 = new android.media.AudioAttributes$Builder;

        specialinvoke $r78.<android.media.AudioAttributes$Builder: void <init>()>();

        $r79 = virtualinvoke $r78.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>(4);

        $r80 = virtualinvoke $r79.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(2);

        $r81 = virtualinvoke $r80.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        r0.<com.android.server.notification.NotificationManagerService: android.media.AudioAttributes mInCallNotificationAudioAttributes> = $r81;

        $f1 = virtualinvoke r24.<android.content.res.Resources: float getFloat(int)>(17105062);

        r0.<com.android.server.notification.NotificationManagerService: float mInCallNotificationVolume> = $f1;

        $z0 = virtualinvoke r24.<android.content.res.Resources: boolean getBoolean(int)>(17891568);

        r0.<com.android.server.notification.NotificationManagerService: boolean mUseAttentionLight> = $z0;

        $z1 = virtualinvoke r24.<android.content.res.Resources: boolean getBoolean(int)>(17891475);

        r0.<com.android.server.notification.NotificationManagerService: boolean mHasLight> = $z1;

        $r82 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r83 = virtualinvoke $r82.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r83, "device_provisioned", 0);

        if $i0 != 0 goto label6;

        r0.<com.android.server.notification.NotificationManagerService: boolean mDisableNotificationEffects> = 1;

     label6:
        $r84 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r84.<com.android.server.notification.ZenModeHelper: void initZenMode()>();

        $r85 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $i1 = virtualinvoke $r85.<com.android.server.notification.ZenModeHelper: int getZenModeListenerInterruptionFilter()>();

        r0.<com.android.server.notification.NotificationManagerService: int mInterruptionFilter> = $i1;

        $r86 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles>;

        $r87 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        virtualinvoke $r86.<com.android.server.notification.ManagedServices$UserProfiles: void updateCache(android.content.Context)>($r87);

        $r88 = new com.android.server.notification.NotificationManagerService$8;

        specialinvoke $r88.<com.android.server.notification.NotificationManagerService$8: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        virtualinvoke r23.<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>($r88, 32);

        $r89 = new com.android.server.notification.NotificationManagerService$SettingsObserver;

        $r90 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        specialinvoke $r89.<com.android.server.notification.NotificationManagerService$SettingsObserver: void <init>(com.android.server.notification.NotificationManagerService,android.os.Handler)>(r0, $r90);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$SettingsObserver mSettingsObserver> = $r89;

        $r91 = new com.android.server.notification.NotificationManagerService$Archive;

        $i2 = virtualinvoke r24.<android.content.res.Resources: int getInteger(int)>(17694863);

        specialinvoke $r91.<com.android.server.notification.NotificationManagerService$Archive: void <init>(int)>($i2);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$Archive mArchive> = $r91;

        $r92 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.PackageManager mPackageManagerClient>;

        $z2 = virtualinvoke $r92.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.leanback");

        if $z2 != 0 goto label8;

        $r93 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.PackageManager mPackageManagerClient>;

        $z3 = virtualinvoke $r93.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.type.television");

        if $z3 == 0 goto label7;

        goto label8;

     label7:
        z4 = 0;

        goto label9;

     label8:
        z4 = 1;

     label9:
        r0.<com.android.server.notification.NotificationManagerService: boolean mIsTelevision> = z4;

        $r103 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.PackageManager mPackageManagerClient>;

        $z5 = virtualinvoke $r103.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String,int)>("android.hardware.type.automotive", 0);

        r0.<com.android.server.notification.NotificationManagerService: boolean mIsAutomotive> = $z5;

        $z6 = virtualinvoke r24.<android.content.res.Resources: boolean getBoolean(int)>(17891451);

        r0.<com.android.server.notification.NotificationManagerService: boolean mNotificationEffectsEnabledForAutomotive> = $z6;

        $r104 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r105 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r106 = virtualinvoke $r105.<android.content.Context: android.content.res.Resources getResources()>();

        $r107 = virtualinvoke $r106.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236059);

        virtualinvoke $r104.<com.android.server.notification.PreferencesHelper: void lockChannelsForOEM(java.lang.String[])>($r107);

        $r108 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $r109 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r110 = virtualinvoke $r109.<android.content.Context: android.content.res.Resources getResources()>();

        $r111 = virtualinvoke $r110.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236065);

        virtualinvoke $r108.<com.android.server.notification.ZenModeHelper: void setPriorityOnlyDndExemptPackages(java.lang.String[])>($r111);

        $r112 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r113 = virtualinvoke $r112.<android.content.Context: android.content.res.Resources getResources()>();

        $i3 = virtualinvoke $r113.<android.content.res.Resources: int getInteger(int)>(17694865);

        r0.<com.android.server.notification.NotificationManagerService: int mWarnRemoteViewsSizeBytes> = $i3;

        $r114 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r115 = virtualinvoke $r114.<android.content.Context: android.content.res.Resources getResources()>();

        $i4 = virtualinvoke $r115.<android.content.res.Resources: int getInteger(int)>(17694864);

        r0.<com.android.server.notification.NotificationManagerService: int mStripRemoteViewsSizeBytes> = $i4;

        $r116 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: java.lang.String[] getStringArrayResource(int)>(17236061);

        $r117 = staticinvoke <java.util.Set: java.util.Set of(java.lang.Object[])>($r116);

        r0.<com.android.server.notification.NotificationManagerService: java.util.Set mMsgPkgsAllowedAsConvos> = $r117;

        r0.<com.android.server.notification.NotificationManagerService: android.app.StatsManager mStatsManager> = r22;

        return;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    protected boolean isBlocked(com.android.server.notification.NotificationRecord, com.android.server.notification.NotificationUsageStats)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        com.android.server.notification.NotificationUsageStats r2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        r2 := @parameter1: com.android.server.notification.NotificationUsageStats;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isBlocked(com.android.server.notification.NotificationRecord)>(r1);

        if $z0 == 0 goto label2;

        $z1 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", "Suppressing notification from package by user request.");

     label1:
        virtualinvoke r2.<com.android.server.notification.NotificationUsageStats: void registerBlocked(com.android.server.notification.NotificationRecord)>(r1);

        return 1;

     label2:
        return 0;
    }

    boolean isCallerInstantApp(int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2;
        java.lang.StringBuilder r1, $r12, r22;
        boolean $z0, $z1;
        android.content.pm.IPackageManager $r2, $r7;
        java.lang.String $r5, $r10, $r16, r18;
        android.app.AppOpsManager $r6;
        android.os.RemoteException $r11;
        java.lang.SecurityException $r15, r20, r21;
        java.lang.String[] r17;
        android.content.pm.ApplicationInfo r19;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isUidSystemOrPhone(int)>(i0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        i2 = i1;

        if i1 != -1 goto label2;

        i2 = 0;

     label2:
        $r2 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager mPackageManager>;

        r17 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

     label3:
        if r17 == null goto label8;

        r18 = r17[0];

     label4:
        $r6 = r0.<com.android.server.notification.NotificationManagerService: android.app.AppOpsManager mAppOps>;

        virtualinvoke $r6.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>(i0, r18);

        $r7 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager mPackageManager>;

        r19 = interfaceinvoke $r7.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r18, 0, i2);

     label5:
        if r19 == null goto label7;

     label6:
        $z1 = virtualinvoke r19.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

        return $z1;

     label7:
        r20 = new java.lang.SecurityException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);

        throw r20;

     label8:
        r21 = new java.lang.SecurityException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown uid ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.lang.SecurityException: void <init>(java.lang.String)>($r5);

        throw r21;

     label9:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown uid ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = new java.lang.SecurityException;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r11);

        throw $r15;

        catch android.os.RemoteException from label2 to label3 with label9;
        catch android.os.RemoteException from label4 to label5 with label9;
        catch android.os.RemoteException from label6 to label7 with label9;
        catch android.os.RemoteException from label7 to label8 with label9;
        catch android.os.RemoteException from label8 to label9 with label9;
    }

    protected boolean isCallerSystemOrPhone()
    {
        com.android.server.notification.NotificationManagerService r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isUidSystemOrPhone(int)>($i0);

        return $z0;
    }

    protected boolean isCallingUidSystem()
    {
        com.android.server.notification.NotificationManagerService r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 != 1000 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isPackagePausedOrSuspended(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        android.content.pm.PackageManagerInternal r2;
        java.lang.Object $r3;
        android.os.UserHandle $r4;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        r2 = (android.content.pm.PackageManagerInternal) $r3;

        $r4 = staticinvoke <android.os.Binder: android.os.UserHandle getCallingUserHandle()>();

        $i1 = virtualinvoke $r4.<android.os.UserHandle: int getIdentifier()>();

        $i2 = virtualinvoke r2.<android.content.pm.PackageManagerInternal: int getDistractingPackageRestrictions(java.lang.String,int)>(r1, $i1);

        $i3 = $i2 & 2;

        if $i3 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isPackageSuspendedForUser(java.lang.String,int)>(r1, i0);

        $z1 = z2 | $z0;

        return $z1;
    }

    protected boolean isUidSystemOrPhone(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if i1 == 1000 goto label2;

        if i1 == 1001 goto label2;

        if i0 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    protected boolean isVisuallyInterruptive(com.android.server.notification.NotificationRecord, com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.app.Notification r1, $r14, $r116, r129;
        android.service.notification.StatusBarNotification $r2, $r3, $r4, $r13, $r115;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        android.os.Bundle $r5, $r12, $r15, $r17, $r19, $r21;
        java.lang.StringBuilder $r6, $r35, $r41, $r47, $r53, $r59, $r67, $r75, $r81, $r89, $r97, $r103, $r109, $r117, r146, r147;
        java.lang.String $r8, $r11, $r26, $r29, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r64, $r66, $r72, $r74, $r77, $r80, $r86, $r88, $r94, $r96, $r99, $r102, $r105, $r108, $r111, $r114, $r119, $r122, r131, r132, r136, r137;
        int $i1, $i2, $i9, $i11, $i14, $i16;
        java.lang.Object $r16, $r18, $r20, $r22;
        android.content.Context $r23, $r24;
        java.lang.Object[] $r61, $r69, $r83, $r91;
        java.lang.Class $r62, $r70, $r84, $r92;
        java.lang.Integer $r63, $r71, $r85, $r93;
        java.lang.Exception $r123;
        com.android.server.notification.NotificationRecord r124, r125;
        android.app.Notification$Builder r144, r145;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r124 := @parameter0: com.android.server.notification.NotificationRecord;

        r125 := @parameter1: com.android.server.notification.NotificationRecord;

        $r2 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $z0 = virtualinvoke $r2.<android.service.notification.StatusBarNotification: boolean isGroup()>();

        if $z0 == 0 goto label02;

        $r115 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r116 = virtualinvoke $r115.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $z20 = virtualinvoke $r116.<android.app.Notification: boolean isGroupSummary()>();

        if $z20 == 0 goto label02;

        $z21 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z21 == 0 goto label01;

        $r117 = new java.lang.StringBuilder;

        specialinvoke $r117.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r119 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r119);

        virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not interruptive: summary");

        $r122 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r122);

     label01:
        return 0;

     label02:
        if r124 != null goto label04;

        $z19 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z19 == 0 goto label03;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r111 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is interruptive: new notification");

        $r114 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r114);

     label03:
        return 1;

     label04:
        if r125 != null goto label06;

        $z18 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z18 == 0 goto label05;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r105 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not interruptive: null");

        $r108 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r108);

     label05:
        return 0;

     label06:
        $r3 = virtualinvoke r124.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r1 = virtualinvoke $r3.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $r4 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r129 = virtualinvoke $r4.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $r5 = r1.<android.app.Notification: android.os.Bundle extras>;

        if $r5 == null goto label26;

        $r12 = r129.<android.app.Notification: android.os.Bundle extras>;

        if $r12 != null goto label07;

        goto label26;

     label07:
        $r13 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r14 = virtualinvoke $r13.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $i1 = $r14.<android.app.Notification: int flags>;

        $i2 = $i1 & 64;

        if $i2 == 0 goto label09;

        $z17 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z17 == 0 goto label08;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r99 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99);

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not interruptive: foreground service");

        $r102 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r102);

     label08:
        return 0;

     label09:
        $r15 = r1.<android.app.Notification: android.os.Bundle extras>;

        $r16 = virtualinvoke $r15.<android.os.Bundle: java.lang.Object get(java.lang.String)>("android.title");

        r131 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r16);

        $r17 = r129.<android.app.Notification: android.os.Bundle extras>;

        $r18 = virtualinvoke $r17.<android.os.Bundle: java.lang.Object get(java.lang.String)>("android.title");

        r132 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r18);

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r131, r132);

        if $z2 != 0 goto label11;

        $z16 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z16 == 0 goto label10;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r77 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is interruptive: changed title");

        $r80 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r80);

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r83 = newarray (java.lang.Object)[3];

        $r83[0] = r131;

        $r84 = virtualinvoke r131.<java.lang.Object: java.lang.Class getClass()>();

        $r83[1] = $r84;

        $i14 = virtualinvoke r131.<java.lang.String: int hashCode()>();

        $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r83[2] = $r85;

        $r86 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   old title: %s (%s@0x%08x)", $r83);

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r88 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r88);

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r91 = newarray (java.lang.Object)[3];

        $r91[0] = r132;

        $r92 = virtualinvoke r132.<java.lang.Object: java.lang.Class getClass()>();

        $r91[1] = $r92;

        $i16 = virtualinvoke r132.<java.lang.String: int hashCode()>();

        $r93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        $r91[2] = $r93;

        $r94 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   new title: %s (%s@0x%08x)", $r91);

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);

        $r96 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r96);

     label10:
        return 1;

     label11:
        $r19 = r1.<android.app.Notification: android.os.Bundle extras>;

        $r20 = virtualinvoke $r19.<android.os.Bundle: java.lang.Object get(java.lang.String)>("android.text");

        r136 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);

        $r21 = r129.<android.app.Notification: android.os.Bundle extras>;

        $r22 = virtualinvoke $r21.<android.os.Bundle: java.lang.Object get(java.lang.String)>("android.text");

        r137 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r22);

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r136, r137);

        if $z3 != 0 goto label13;

        $z15 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z15 == 0 goto label12;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r55 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is interruptive: changed text");

        $r58 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r58);

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r61 = newarray (java.lang.Object)[3];

        $r61[0] = r136;

        $r62 = virtualinvoke r136.<java.lang.Object: java.lang.Class getClass()>();

        $r61[1] = $r62;

        $i9 = virtualinvoke r136.<java.lang.String: int hashCode()>();

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r61[2] = $r63;

        $r64 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   old text: %s (%s@0x%08x)", $r61);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r66);

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r69 = newarray (java.lang.Object)[3];

        $r69[0] = r137;

        $r70 = virtualinvoke r137.<java.lang.Object: java.lang.Class getClass()>();

        $r69[1] = $r70;

        $i11 = virtualinvoke r137.<java.lang.String: int hashCode()>();

        $r71 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r69[2] = $r71;

        $r72 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   new text: %s (%s@0x%08x)", $r69);

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r74);

     label12:
        return 1;

     label13:
        $z4 = virtualinvoke r1.<android.app.Notification: boolean hasCompletedProgress()>();

        $z5 = virtualinvoke r129.<android.app.Notification: boolean hasCompletedProgress()>();

        if $z4 == $z5 goto label15;

        $z14 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z14 == 0 goto label14;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r49 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is interruptive: completed progress");

        $r52 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r52);

     label14:
        return 1;

     label15:
        $z6 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: boolean canBubble()>();

        if $z6 == 0 goto label17;

        $z13 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z13 == 0 goto label16;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r43 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not interruptive: bubble");

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r46);

     label16:
        return 0;

     label17:
        $z7 = staticinvoke <android.app.Notification: boolean areActionsVisiblyDifferent(android.app.Notification,android.app.Notification)>(r1, r129);

        if $z7 == 0 goto label19;

        $z12 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z12 == 0 goto label18;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r37 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is interruptive: changed actions");

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r40);

     label18:
        return 1;

     label19:
        $r23 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        r144 = staticinvoke <android.app.Notification$Builder: android.app.Notification$Builder recoverBuilder(android.content.Context,android.app.Notification)>($r23, r1);

        $r24 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        r145 = staticinvoke <android.app.Notification$Builder: android.app.Notification$Builder recoverBuilder(android.content.Context,android.app.Notification)>($r24, r129);

        $z8 = staticinvoke <android.app.Notification: boolean areStyledNotificationsVisiblyDifferent(android.app.Notification$Builder,android.app.Notification$Builder)>(r144, r145);

        if $z8 == 0 goto label21;

        $z11 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z11 == 0 goto label20;

        r146 = new java.lang.StringBuilder;

        specialinvoke r146.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r31 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is interruptive: styles differ");

        $r34 = virtualinvoke r146.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r34);

     label20:
        return 1;

     label21:
        $z9 = staticinvoke <android.app.Notification: boolean areRemoteViewsChanged(android.app.Notification$Builder,android.app.Notification$Builder)>(r144, r145);

        if $z9 == 0 goto label23;

        $z10 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z10 == 0 goto label22;

        r147 = new java.lang.StringBuilder;

        specialinvoke r147.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r26 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is interruptive: remoteviews differ");

        $r29 = virtualinvoke r147.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r29);

     label22:
        return 1;

     label23:
        goto label25;

     label24:
        $r123 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "error recovering builder", $r123);

     label25:
        return 0;

     label26:
        $z1 = <com.android.server.notification.NotificationManagerService: boolean DEBUG_INTERRUPTIVENESS>;

        if $z1 == 0 goto label27;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERRUPTIVENESS: ");

        $r8 = virtualinvoke r125.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not interruptive: no extras");

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r11);

     label27:
        return 0;

        catch java.lang.Exception from label19 to label20 with label24;
        catch java.lang.Exception from label21 to label22 with label24;
    }

    public void keepProcessAliveForToastIfNeeded(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        java.util.ArrayList r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void keepProcessAliveForToastIfNeededLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$doChannelWarningToast$4$NotificationManagerService(java.lang.CharSequence) throws java.lang.Exception
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.CharSequence r1;
        android.content.Context $r2, $r4;
        android.content.ContentResolver $r3;
        int $i0, i1;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r5;
        android.os.Looper $r6;
        android.widget.Toast $r7;
        boolean z0, z1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.CharSequence;

        z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        $r2 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i1 = (int) z0;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "show_notification_channel_warnings", i1);

        if $i0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if z1 == 0 goto label3;

        $r4 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r6 = virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$WorkerHandler: android.os.Looper getLooper()>();

        $r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,android.os.Looper,java.lang.CharSequence,int)>($r4, $r6, r1, 0);

        virtualinvoke $r7.<android.widget.Toast: void show()>();

     label3:
        return;
    }

    public void lambda$onStart$0$NotificationManagerService(int, com.android.server.notification.NotificationRecord, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i1, $i2, $i3;
        boolean z0, $z1;
        java.lang.StringBuilder r1;
        android.service.notification.StatusBarNotification $r2, $r4, $r6, $r7, $r8, $r10, $r11;
        java.lang.String $r3, $r5, $r9, $r14, $r16;
        android.app.Notification $r12;
        java.lang.Exception $r17;
        com.android.server.notification.NotificationRecord r18;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        r18 := @parameter1: com.android.server.notification.NotificationRecord;

        z0 := @parameter2: boolean;

     label1:
        $z1 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z1 == 0 goto label2;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reposting ");

        $r14 = virtualinvoke r18.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r16);

     label2:
        $r2 = virtualinvoke r18.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r3 = virtualinvoke $r2.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r4 = virtualinvoke r18.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r5 = virtualinvoke $r4.<android.service.notification.StatusBarNotification: java.lang.String getOpPkg()>();

        $r6 = virtualinvoke r18.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i1 = virtualinvoke $r6.<android.service.notification.StatusBarNotification: int getUid()>();

        $r7 = virtualinvoke r18.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i2 = virtualinvoke $r7.<android.service.notification.StatusBarNotification: int getInitialPid()>();

        $r8 = virtualinvoke r18.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r9 = virtualinvoke $r8.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        $r10 = virtualinvoke r18.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i3 = virtualinvoke $r10.<android.service.notification.StatusBarNotification: int getId()>();

        $r11 = virtualinvoke r18.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r12 = virtualinvoke $r11.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void enqueueNotificationInternal(java.lang.String,java.lang.String,int,int,java.lang.String,int,android.app.Notification,int,boolean)>($r3, $r5, $i1, $i2, $r9, $i3, $r12, i0, 1);

     label3:
        goto label5;

     label4:
        $r17 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Cannot un-snooze notification", $r17);

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void lambda$onStopUser$3$NotificationManagerService(android.content.pm.UserInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        int $i0;
        com.android.server.notification.NotificationHistoryManager $r1;
        java.lang.Throwable $r2;
        android.content.pm.UserInfo r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r3 := @parameter0: android.content.pm.UserInfo;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(524288L, "notifHistoryStopUser");

     label1:
        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationHistoryManager mHistoryManager>;

        $i0 = r3.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r1.<com.android.server.notification.NotificationHistoryManager: void onUserStopped(int)>($i0);

     label2:
        staticinvoke <android.os.Trace: void traceEnd(long)>(524288L);

        return;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(524288L);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void lambda$onUnlockUser$2$NotificationManagerService(android.content.pm.UserInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        int $i0;
        com.android.server.notification.NotificationHistoryManager $r1;
        java.lang.Throwable $r2;
        android.content.pm.UserInfo r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r3 := @parameter0: android.content.pm.UserInfo;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(524288L, "notifHistoryUnlockUser");

     label1:
        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationHistoryManager mHistoryManager>;

        $i0 = r3.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r1.<com.android.server.notification.NotificationHistoryManager: void onUserUnlocked(int)>($i0);

     label2:
        staticinvoke <android.os.Trace: void traceEnd(long)>(524288L);

        return;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(524288L);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void lambda$playVibration$5$NotificationManagerService(com.android.server.notification.NotificationRecord, android.os.VibrationEffect)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i3;
        long l1;
        android.media.AudioManager $r1;
        android.media.AudioAttributes $r2, $r14;
        boolean $z0;
        android.util.ArrayMap $r3;
        java.lang.String $r4, $r7, $r9, $r13, $r19;
        java.lang.Object $r5, r26;
        android.os.Vibrator $r10;
        android.service.notification.StatusBarNotification $r11, $r12;
        java.lang.StringBuilder $r15, r27;
        java.lang.Throwable $r20, $r21;
        com.android.server.notification.NotificationRecord r22;
        android.os.VibrationEffect r23;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r22 := @parameter0: com.android.server.notification.NotificationRecord;

        r23 := @parameter1: android.os.VibrationEffect;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        $r2 = virtualinvoke r22.<com.android.server.notification.NotificationRecord: android.media.AudioAttributes getAudioAttributes()>();

        i0 = virtualinvoke $r1.<android.media.AudioManager: int getFocusRampTimeMs(int,android.media.AudioAttributes)>(3, $r2);

        $z0 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z0 == 0 goto label01;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delaying vibration by ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r19);

     label01:
        l1 = (long) i0;

     label02:
        staticinvoke <java.lang.Thread: void sleep(long)>(l1);

     label03:
        goto label05;

     label04:
        $r21 := @caughtexception;

        goto label03;

     label05:
        r26 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r26;

     label06:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r4 = virtualinvoke r22.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        if $r5 == null goto label08;

        $r10 = r0.<com.android.server.notification.NotificationManagerService: android.os.Vibrator mVibrator>;

        $r11 = virtualinvoke r22.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i3 = virtualinvoke $r11.<android.service.notification.StatusBarNotification: int getUid()>();

        $r12 = virtualinvoke r22.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r13 = virtualinvoke $r12.<android.service.notification.StatusBarNotification: java.lang.String getOpPkg()>();

        $r14 = virtualinvoke r22.<com.android.server.notification.NotificationRecord: android.media.AudioAttributes getAudioAttributes()>();

        virtualinvoke $r10.<android.os.Vibrator: void vibrate(int,java.lang.String,android.os.VibrationEffect,java.lang.String,android.media.AudioAttributes)>($i3, $r13, r23, "Notification (delayed)", $r14);

     label07:
        goto label09;

     label08:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No vibration for canceled notification : ");

        $r7 = virtualinvoke r22.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r9);

     label09:
        exitmonitor r26;

     label10:
        return;

     label11:
        $r20 := @caughtexception;

     label12:
        exitmonitor r26;

     label13:
        throw $r20;

        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void lambda$registerDeviceConfigChange$1$NotificationManagerService(android.provider.DeviceConfig$Properties)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.provider.DeviceConfig$Properties r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;
        java.util.Set $r4;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r5, $r6;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.provider.DeviceConfig$Properties;

        $r2 = "systemui";

        $r3 = virtualinvoke r1.<android.provider.DeviceConfig$Properties: java.lang.String getNamespace()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r1.<android.provider.DeviceConfig$Properties: java.util.Set getKeyset()>();

        $z1 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>("nas_default_service");

        if $z1 == 0 goto label2;

        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void allowAdjustmentType(java.lang.String)>("key_importance");

        $r6 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        virtualinvoke $r6.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void resetDefaultAssistantsIfNecessary()>();

     label2:
        return;
    }

    void loadDefaultApprovedServices(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r1;
        com.android.server.notification.ConditionProviders $r2;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r1.<com.android.server.notification.NotificationManagerService$NotificationListeners: void loadDefaultsFromConfig()>();

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        virtualinvoke $r2.<com.android.server.notification.ConditionProviders: void loadDefaultsFromConfig()>();

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void loadDefaultsFromConfig()>();

        return;
    }

    protected void loadPolicyFile()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.util.AtomicFile r1, $r2;
        boolean $z0;
        java.lang.Throwable $r3, $r4, $r5, $r6, $r7, $r8;
        java.io.FileInputStream r9, r10, r11, r12, r13, r14;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $z0 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", "loadPolicyFile");

     label01:
        r1 = r0.<com.android.server.notification.NotificationManagerService: android.util.AtomicFile mPolicyFile>;

        entermonitor r1;

        r9 = null;

        r10 = null;

        r11 = null;

        r12 = null;

        r13 = null;

     label02:
        $r2 = r0.<com.android.server.notification.NotificationManagerService: android.util.AtomicFile mPolicyFile>;

        r14 = virtualinvoke $r2.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label03:
        r13 = r14;

        r9 = r14;

        r10 = r14;

        r11 = r14;

        r12 = r14;

     label04:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void readPolicyXml(java.io.InputStream,boolean,int)>(r14, 0, -1);

     label05:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r14);

     label06:
        goto label23;

     label07:
        $r7 := @caughtexception;

        goto label25;

     label08:
        $r6 := @caughtexception;

        r13 = r9;

     label09:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Unable to parse notification policy", $r6);

     label10:
        r14 = r9;

        goto label05;

     label11:
        $r8 := @caughtexception;

        r13 = r10;

     label12:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Unable to parse notification policy", $r8);

     label13:
        r14 = r10;

        goto label05;

     label14:
        $r4 := @caughtexception;

        r13 = r11;

     label15:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Unable to read notification policy", $r4);

     label16:
        r14 = r11;

        goto label05;

     label17:
        $r5 := @caughtexception;

        r13 = r12;

     label18:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void loadDefaultApprovedServices(int)>(0);

     label19:
        r13 = r12;

     label20:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void allowDefaultApprovedServices(int)>(0);

     label21:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

     label22:
        goto label06;

     label23:
        exitmonitor r1;

     label24:
        return;

     label25:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r13);

     label26:
        throw $r7;

     label27:
        $r3 := @caughtexception;

     label28:
        exitmonitor r1;

     label29:
        throw $r3;

        catch java.io.FileNotFoundException from label02 to label03 with label17;
        catch java.io.IOException from label02 to label03 with label14;
        catch java.lang.NumberFormatException from label02 to label03 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.io.FileNotFoundException from label04 to label05 with label17;
        catch java.io.IOException from label04 to label05 with label14;
        catch java.lang.NumberFormatException from label04 to label05 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
        catch java.lang.Throwable from label15 to label16 with label07;
        catch java.lang.Throwable from label18 to label19 with label07;
        catch java.lang.Throwable from label20 to label21 with label07;
        catch java.lang.Throwable from label21 to label22 with label27;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label26 to label27 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    void logSmartSuggestionsVisible(com.android.server.notification.NotificationRecord, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        android.metrics.LogMaker r2, $r3, $r4, $r6, $r8, $r10, $r12;
        boolean $z0, $z1, $z2;
        java.lang.Integer $r5, $r7, $r9, $r11, $r13;
        com.android.internal.logging.MetricsLogger $r14;
        com.android.server.notification.NotificationRecordLogger$NotificationEvent $r15;
        com.android.server.notification.NotificationRecordLogger $r16;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getNumSmartRepliesAdded()>();

        if $i1 > 0 goto label1;

        $i4 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getNumSmartActionsAdded()>();

        if $i4 <= 0 goto label2;

     label1:
        $z0 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean hasSeenSmartReplies()>();

        if $z0 != 0 goto label2;

        virtualinvoke r1.<com.android.server.notification.NotificationRecord: void setSeenSmartReplies(boolean)>(1);

        $r3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.metrics.LogMaker getLogMaker()>();

        $r4 = virtualinvoke $r3.<android.metrics.LogMaker: android.metrics.LogMaker setCategory(int)>(1382);

        $i2 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getNumSmartRepliesAdded()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6 = virtualinvoke $r4.<android.metrics.LogMaker: android.metrics.LogMaker addTaggedData(int,java.lang.Object)>(1384, $r5);

        $i3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getNumSmartActionsAdded()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r8 = virtualinvoke $r6.<android.metrics.LogMaker: android.metrics.LogMaker addTaggedData(int,java.lang.Object)>(1599, $r7);

        $z1 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean getSuggestionsGeneratedByAssistant()>();

        i5 = (int) $z1;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r10 = virtualinvoke $r8.<android.metrics.LogMaker: android.metrics.LogMaker addTaggedData(int,java.lang.Object)>(1600, $r9);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r12 = virtualinvoke $r10.<android.metrics.LogMaker: android.metrics.LogMaker addTaggedData(int,java.lang.Object)>(1629, $r11);

        $z2 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean getEditChoicesBeforeSending()>();

        i6 = (int) $z2;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        r2 = virtualinvoke $r12.<android.metrics.LogMaker: android.metrics.LogMaker addTaggedData(int,java.lang.Object)>(1647, $r13);

        $r14 = r0.<com.android.server.notification.NotificationManagerService: com.android.internal.logging.MetricsLogger mMetricsLogger>;

        virtualinvoke $r14.<com.android.internal.logging.MetricsLogger: void write(android.metrics.LogMaker)>(r2);

        $r16 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecordLogger mNotificationRecordLogger>;

        $r15 = <com.android.server.notification.NotificationRecordLogger$NotificationEvent: com.android.server.notification.NotificationRecordLogger$NotificationEvent NOTIFICATION_SMART_REPLY_VISIBLE>;

        interfaceinvoke $r16.<com.android.server.notification.NotificationRecordLogger: void log(com.android.internal.logging.UiEventLogger$UiEventEnum,com.android.server.notification.NotificationRecord)>($r15, r1);

     label2:
        return;
    }

    protected void maybeRecordInterruptionLocked(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationHistoryManager r1;
        android.app.NotificationHistory$HistoricalNotification$Builder r2, $r11, $r13, $r15, $r18, $r22, $r23, $r26, $r32, $r35;
        boolean $z0, $z1;
        android.app.usage.UsageStatsManagerInternal $r3;
        android.service.notification.StatusBarNotification $r4, $r8, $r9, $r12, $r14, $r27;
        java.lang.String $r5, $r7, $r10, $r17, $r21, $r25, $r31;
        android.app.NotificationChannel $r6, $r16, $r19;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r20;
        long $l4;
        android.app.Notification $r24, $r30, $r33;
        android.content.Context $r28, $r29;
        android.graphics.drawable.Icon $r34;
        android.app.NotificationHistory$HistoricalNotification $r36;
        java.lang.Throwable $r37;
        com.android.server.notification.NotificationRecord r38;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r38 := @parameter0: com.android.server.notification.NotificationRecord;

        $z0 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: boolean isInterruptive()>();

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: boolean hasRecordedInterruption()>();

        if $z1 != 0 goto label4;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.app.usage.UsageStatsManagerInternal mAppUsageStats>;

        $r4 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r5 = virtualinvoke $r4.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r6 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: android.app.NotificationChannel getChannel()>();

        $r7 = virtualinvoke $r6.<android.app.NotificationChannel: java.lang.String getId()>();

        $r8 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i0 = virtualinvoke $r8.<android.service.notification.StatusBarNotification: int getUserId()>();

        $i1 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: int getRealUserId(int)>($i0);

        virtualinvoke $r3.<android.app.usage.UsageStatsManagerInternal: void reportInterruptiveNotification(java.lang.String,java.lang.String,int)>($r5, $r7, $i1);

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(524288L, "notifHistoryAddItem");

     label1:
        r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationHistoryManager mHistoryManager>;

        r2 = new android.app.NotificationHistory$HistoricalNotification$Builder;

        specialinvoke r2.<android.app.NotificationHistory$HistoricalNotification$Builder: void <init>()>();

        $r9 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r10 = virtualinvoke $r9.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r11 = virtualinvoke r2.<android.app.NotificationHistory$HistoricalNotification$Builder: android.app.NotificationHistory$HistoricalNotification$Builder setPackage(java.lang.String)>($r10);

        $r12 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i2 = virtualinvoke $r12.<android.service.notification.StatusBarNotification: int getUid()>();

        $r13 = virtualinvoke $r11.<android.app.NotificationHistory$HistoricalNotification$Builder: android.app.NotificationHistory$HistoricalNotification$Builder setUid(int)>($i2);

        $r14 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i3 = virtualinvoke $r14.<android.service.notification.StatusBarNotification: int getNormalizedUserId()>();

        $r15 = virtualinvoke $r13.<android.app.NotificationHistory$HistoricalNotification$Builder: android.app.NotificationHistory$HistoricalNotification$Builder setUserId(int)>($i3);

        $r16 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: android.app.NotificationChannel getChannel()>();

        $r17 = virtualinvoke $r16.<android.app.NotificationChannel: java.lang.String getId()>();

        $r18 = virtualinvoke $r15.<android.app.NotificationHistory$HistoricalNotification$Builder: android.app.NotificationHistory$HistoricalNotification$Builder setChannelId(java.lang.String)>($r17);

        $r19 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: android.app.NotificationChannel getChannel()>();

        $r20 = virtualinvoke $r19.<android.app.NotificationChannel: java.lang.CharSequence getName()>();

        $r21 = interfaceinvoke $r20.<java.lang.CharSequence: java.lang.String toString()>();

        $r22 = virtualinvoke $r18.<android.app.NotificationHistory$HistoricalNotification$Builder: android.app.NotificationHistory$HistoricalNotification$Builder setChannelName(java.lang.String)>($r21);

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r23 = virtualinvoke $r22.<android.app.NotificationHistory$HistoricalNotification$Builder: android.app.NotificationHistory$HistoricalNotification$Builder setPostedTimeMs(long)>($l4);

        $r24 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $r25 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: java.lang.String getHistoryTitle(android.app.Notification)>($r24);

        $r26 = virtualinvoke $r23.<android.app.NotificationHistory$HistoricalNotification$Builder: android.app.NotificationHistory$HistoricalNotification$Builder setTitle(java.lang.String)>($r25);

        $r27 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r28 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r29 = virtualinvoke $r27.<android.service.notification.StatusBarNotification: android.content.Context getPackageContext(android.content.Context)>($r28);

        $r30 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $r31 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: java.lang.String getHistoryText(android.content.Context,android.app.Notification)>($r29, $r30);

        $r32 = virtualinvoke $r26.<android.app.NotificationHistory$HistoricalNotification$Builder: android.app.NotificationHistory$HistoricalNotification$Builder setText(java.lang.String)>($r31);

        $r33 = virtualinvoke r38.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $r34 = virtualinvoke $r33.<android.app.Notification: android.graphics.drawable.Icon getSmallIcon()>();

        $r35 = virtualinvoke $r32.<android.app.NotificationHistory$HistoricalNotification$Builder: android.app.NotificationHistory$HistoricalNotification$Builder setIcon(android.graphics.drawable.Icon)>($r34);

        $r36 = virtualinvoke $r35.<android.app.NotificationHistory$HistoricalNotification$Builder: android.app.NotificationHistory$HistoricalNotification build()>();

        virtualinvoke r1.<com.android.server.notification.NotificationHistoryManager: void addNotification(android.app.NotificationHistory$HistoricalNotification)>($r36);

     label2:
        staticinvoke <android.os.Trace: void traceEnd(long)>(524288L);

        virtualinvoke r38.<com.android.server.notification.NotificationRecord: void setRecordedInterruption(boolean)>(1);

        goto label4;

     label3:
        $r37 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(524288L);

        throw $r37;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void maybeRegisterMessageSent(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        boolean $z0, $z1, $z2;
        android.content.pm.ShortcutInfo $r2;
        com.android.server.notification.PreferencesHelper $r3, $r6;
        android.service.notification.StatusBarNotification $r4, $r7;
        java.lang.String $r5, $r8;
        int $i0, $i1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $z0 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean isConversation()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.content.pm.ShortcutInfo getShortcutInfo()>();

        if $r2 == null goto label1;

        $r6 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r7 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r8 = virtualinvoke $r7.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $i1 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getUid()>();

        $z2 = virtualinvoke $r6.<com.android.server.notification.PreferencesHelper: boolean setValidMessageSent(java.lang.String,int)>($r8, $i1);

        if $z2 == 0 goto label2;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        goto label2;

     label1:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $r4 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r5 = virtualinvoke $r4.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $i0 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getUid()>();

        $z1 = virtualinvoke $r3.<com.android.server.notification.PreferencesHelper: boolean setInvalidMessageSent(java.lang.String,int)>($r5, $i0);

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

     label2:
        return;
    }

    public void onBootPhase(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        com.android.server.notification.SnoozeHelper $r1;
        long $l1;
        com.android.server.notification.NotificationManagerService$SettingsObserver $r2;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r3;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r4;
        com.android.server.notification.ConditionProviders $r5;
        com.android.server.notification.NotificationHistoryManager $r6;
        android.content.Context $r7, $r16, $r20, $r23;
        java.lang.Object $r8, $r10, $r12, $r17, $r24, $r27;
        android.media.AudioManager $r9;
        android.media.AudioManagerInternal $r11;
        com.android.server.wm.WindowManagerInternal $r13;
        com.android.server.notification.ZenModeHelper $r14;
        com.android.server.notification.NotificationManagerService$RoleObserver $r15;
        android.app.role.RoleManager $r18;
        android.content.pm.IPackageManager $r19;
        java.util.concurrent.Executor $r21;
        com.android.server.notification.ShortcutHelper $r22, $r31;
        android.content.pm.LauncherApps $r25;
        com.android.server.notification.ShortcutHelper$ShortcutListener $r26;
        android.content.pm.ShortcutServiceInternal $r28;
        com.android.server.notification.RankingHelper $r29;
        com.android.server.notification.NotificationSignalExtractor $r30;
        com.android.server.notification.BubbleExtractor r33;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        if i0 != 500 goto label2;

        r0.<com.android.server.notification.NotificationManagerService: boolean mSystemReady> = 1;

        $r7 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r9 = (android.media.AudioManager) $r8;

        r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager> = $r9;

        $r10 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: java.lang.Object getLocalService(java.lang.Class)>(class "Landroid/media/AudioManagerInternal;");

        $r11 = (android.media.AudioManagerInternal) $r10;

        r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManagerInternal mAudioManagerInternal> = $r11;

        $r12 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/WindowManagerInternal;");

        $r13 = (com.android.server.wm.WindowManagerInternal) $r12;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.wm.WindowManagerInternal mWindowManagerInternal> = $r13;

        $r14 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r14.<com.android.server.notification.ZenModeHelper: void onSystemReady()>();

        $r15 = new com.android.server.notification.NotificationManagerService$RoleObserver;

        $r16 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r17 = virtualinvoke $r16.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/role/RoleManager;");

        $r18 = (android.app.role.RoleManager) $r17;

        $r19 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager mPackageManager>;

        $r20 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r21 = virtualinvoke $r20.<android.content.Context: java.util.concurrent.Executor getMainExecutor()>();

        specialinvoke $r15.<com.android.server.notification.NotificationManagerService$RoleObserver: void <init>(com.android.server.notification.NotificationManagerService,android.app.role.RoleManager,android.content.pm.IPackageManager,java.util.concurrent.Executor)>(r0, $r18, $r19, $r21);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$RoleObserver mRoleObserver> = $r15;

        virtualinvoke $r15.<com.android.server.notification.NotificationManagerService$RoleObserver: void init()>();

        $r22 = new com.android.server.notification.ShortcutHelper;

        $r23 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r24 = virtualinvoke $r23.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("launcherapps");

        $r25 = (android.content.pm.LauncherApps) $r24;

        $r26 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ShortcutHelper$ShortcutListener mShortcutListener>;

        $r27 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: java.lang.Object getLocalService(java.lang.Class)>(class "Landroid/content/pm/ShortcutServiceInternal;");

        $r28 = (android.content.pm.ShortcutServiceInternal) $r27;

        specialinvoke $r22.<com.android.server.notification.ShortcutHelper: void <init>(android.content.pm.LauncherApps,com.android.server.notification.ShortcutHelper$ShortcutListener,android.content.pm.ShortcutServiceInternal)>($r25, $r26, $r28);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ShortcutHelper mShortcutHelper> = $r22;

        $r29 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        $r30 = virtualinvoke $r29.<com.android.server.notification.RankingHelper: com.android.server.notification.NotificationSignalExtractor findExtractor(java.lang.Class)>(class "Lcom/android/server/notification/BubbleExtractor;");

        r33 = (com.android.server.notification.BubbleExtractor) $r30;

        if r33 == null goto label1;

        $r31 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ShortcutHelper mShortcutHelper>;

        virtualinvoke r33.<com.android.server.notification.BubbleExtractor: void setShortcutHelper(com.android.server.notification.ShortcutHelper)>($r31);

     label1:
        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void registerNotificationPreferencesPullers()>();

        goto label4;

     label2:
        if i0 != 600 goto label3;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$SettingsObserver mSettingsObserver>;

        virtualinvoke $r2.<com.android.server.notification.NotificationManagerService$SettingsObserver: void observe()>();

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$NotificationListeners: void onBootPhaseAppsCanStart()>();

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void onBootPhaseAppsCanStart()>();

        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        virtualinvoke $r5.<com.android.server.notification.ConditionProviders: void onBootPhaseAppsCanStart()>();

        $r6 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationHistoryManager mHistoryManager>;

        virtualinvoke $r6.<com.android.server.notification.NotificationHistoryManager: void onBootPhaseAppsCanStart()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void registerDeviceConfigChange()>();

        goto label4;

     label3:
        if i0 != 550 goto label4;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper>;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r1.<com.android.server.notification.SnoozeHelper: void scheduleRepostsForPersistedNotifications(long)>($l1);

     label4:
        return;
    }

    public void onStart()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.pm.IPackageManager r3, $r37, $r42, $r46;
        android.content.pm.PackageManager r4;
        com.android.server.lights.LightsManager r5;
        android.app.ActivityManager r10;
        com.android.server.notification.GroupHelper r11;
        android.app.IActivityManager r12;
        com.android.server.wm.ActivityTaskManagerInternal r13;
        android.app.usage.UsageStatsManagerInternal r14;
        android.app.admin.DevicePolicyManagerInternal r15;
        android.app.IUriGrantsManager r16;
        com.android.server.uri.UriGrantsManagerInternal r17;
        android.app.AppOpsManager r18;
        android.os.UserManager r19;
        android.app.StatsManager r21;
        com.android.server.notification.SnoozeHelper $r22;
        android.content.Context $r23, $r34, $r39, $r44, $r48, $r51, $r57, $r59, $r62, $r63, $r65, $r69, $r74, $r79, $r84, $r90, $r94, $r98;
        com.android.server.notification._$$Lambda$NotificationManagerService$pydsjOZodJQYqLnk_bBKjwKfMTw $r24;
        com.android.server.notification.ManagedServices$UserProfiles $r25, $r41, $r45;
        java.io.File $r26, $r27, $r50;
        android.os.HandlerThread $r28, $r32;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r29;
        android.os.Looper $r30, $r33;
        com.android.server.notification.NotificationManagerService$RankingHandlerWorker $r31;
        java.lang.Object $r35, $r40, $r52, $r53, $r54, $r55, $r56, $r58, $r60, $r64, $r66;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r36;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r38;
        com.android.server.notification.ConditionProviders $r43;
        com.android.server.notification.NotificationUsageStats $r47;
        android.util.AtomicFile $r49;
        com.android.server.notification.NotificationHistoryManager $r61;
        android.telephony.TelephonyManager $r67;
        android.content.IntentFilter $r68, $r73, $r78, $r83, $r88, $r93, $r97;
        android.os.UserHandle $r70, $r75, $r80, $r85;
        android.content.BroadcastReceiver $r71, $r76, $r81, $r86, $r91, $r95, $r99;
        java.lang.String $r89;
        android.os.IBinder $r101;
        com.android.server.notification.NotificationManagerInternal $r102;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r22 = new com.android.server.notification.SnoozeHelper;

        $r23 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r24 = new com.android.server.notification._$$Lambda$NotificationManagerService$pydsjOZodJQYqLnk_bBKjwKfMTw;

        specialinvoke $r24.<com.android.server.notification._$$Lambda$NotificationManagerService$pydsjOZodJQYqLnk_bBKjwKfMTw: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        $r25 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles>;

        specialinvoke $r22.<com.android.server.notification.SnoozeHelper: void <init>(android.content.Context,com.android.server.notification.SnoozeHelper$Callback,com.android.server.notification.ManagedServices$UserProfiles)>($r23, $r24, $r25);

        $r26 = new java.io.File;

        $r27 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r26.<java.io.File: void <init>(java.io.File,java.lang.String)>($r27, "system");

        $r28 = r0.<com.android.server.notification.NotificationManagerService: android.os.HandlerThread mRankingThread>;

        virtualinvoke $r28.<android.os.HandlerThread: void start()>();

        $r29 = new com.android.server.notification.NotificationManagerService$WorkerHandler;

        $r30 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        specialinvoke $r29.<com.android.server.notification.NotificationManagerService$WorkerHandler: void <init>(com.android.server.notification.NotificationManagerService,android.os.Looper)>(r0, $r30);

        $r31 = new com.android.server.notification.NotificationManagerService$RankingHandlerWorker;

        $r32 = r0.<com.android.server.notification.NotificationManagerService: android.os.HandlerThread mRankingThread>;

        $r33 = virtualinvoke $r32.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r31.<com.android.server.notification.NotificationManagerService$RankingHandlerWorker: void <init>(com.android.server.notification.NotificationManagerService,android.os.Looper)>(r0, $r33);

        r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r34 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        r4 = virtualinvoke $r34.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r35 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: java.lang.Object getLocalService(java.lang.Class)>(class "Lcom/android/server/lights/LightsManager;");

        r5 = (com.android.server.lights.LightsManager) $r35;

        $r36 = new com.android.server.notification.NotificationManagerService$NotificationListeners;

        $r37 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        specialinvoke $r36.<com.android.server.notification.NotificationManagerService$NotificationListeners: void <init>(com.android.server.notification.NotificationManagerService,android.content.pm.IPackageManager)>(r0, $r37);

        $r38 = new com.android.server.notification.NotificationManagerService$NotificationAssistants;

        $r39 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r40 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        $r41 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles>;

        $r42 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        specialinvoke $r38.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void <init>(com.android.server.notification.NotificationManagerService,android.content.Context,java.lang.Object,com.android.server.notification.ManagedServices$UserProfiles,android.content.pm.IPackageManager)>(r0, $r39, $r40, $r41, $r42);

        $r43 = new com.android.server.notification.ConditionProviders;

        $r44 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r45 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles>;

        $r46 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        specialinvoke $r43.<com.android.server.notification.ConditionProviders: void <init>(android.content.Context,com.android.server.notification.ManagedServices$UserProfiles,android.content.pm.IPackageManager)>($r44, $r45, $r46);

        $r47 = new com.android.server.notification.NotificationUsageStats;

        $r48 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        specialinvoke $r47.<com.android.server.notification.NotificationUsageStats: void <init>(android.content.Context)>($r48);

        $r49 = new android.util.AtomicFile;

        $r50 = new java.io.File;

        specialinvoke $r50.<java.io.File: void <init>(java.io.File,java.lang.String)>($r26, "notification_policy.xml");

        specialinvoke $r49.<android.util.AtomicFile: void <init>(java.io.File,java.lang.String)>($r50, "notification-policy");

        $r51 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r52 = virtualinvoke $r51.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        r10 = (android.app.ActivityManager) $r52;

        r11 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.GroupHelper getGroupHelper()>();

        r12 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r53 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/ActivityTaskManagerInternal;");

        r13 = (com.android.server.wm.ActivityTaskManagerInternal) $r53;

        $r54 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/usage/UsageStatsManagerInternal;");

        r14 = (android.app.usage.UsageStatsManagerInternal) $r54;

        $r55 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/admin/DevicePolicyManagerInternal;");

        r15 = (android.app.admin.DevicePolicyManagerInternal) $r55;

        r16 = staticinvoke <android.app.UriGrantsManager: android.app.IUriGrantsManager getService()>();

        $r56 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/uri/UriGrantsManagerInternal;");

        r17 = (com.android.server.uri.UriGrantsManagerInternal) $r56;

        $r57 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r58 = virtualinvoke $r57.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        r18 = (android.app.AppOpsManager) $r58;

        $r59 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r60 = virtualinvoke $r59.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/UserManager;");

        r19 = (android.os.UserManager) $r60;

        $r61 = new com.android.server.notification.NotificationHistoryManager;

        $r62 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        specialinvoke $r61.<com.android.server.notification.NotificationHistoryManager: void <init>(android.content.Context,android.os.Handler)>($r62, $r29);

        $r63 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r64 = virtualinvoke $r63.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("stats");

        r21 = (android.app.StatsManager) $r64;

        r0.<com.android.server.notification.NotificationManagerService: android.app.StatsManager mStatsManager> = r21;

        $r65 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r66 = virtualinvoke $r65.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telephony/TelephonyManager;");

        $r67 = (android.telephony.TelephonyManager) $r66;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void init(com.android.server.notification.NotificationManagerService$WorkerHandler,com.android.server.notification.RankingHandler,android.content.pm.IPackageManager,android.content.pm.PackageManager,com.android.server.lights.LightsManager,com.android.server.notification.NotificationManagerService$NotificationListeners,com.android.server.notification.NotificationManagerService$NotificationAssistants,com.android.server.notification.ConditionProviders,android.companion.ICompanionDeviceManager,com.android.server.notification.SnoozeHelper,com.android.server.notification.NotificationUsageStats,android.util.AtomicFile,android.app.ActivityManager,com.android.server.notification.GroupHelper,android.app.IActivityManager,com.android.server.wm.ActivityTaskManagerInternal,android.app.usage.UsageStatsManagerInternal,android.app.admin.DevicePolicyManagerInternal,android.app.IUriGrantsManager,com.android.server.uri.UriGrantsManagerInternal,android.app.AppOpsManager,android.os.UserManager,com.android.server.notification.NotificationHistoryManager,android.app.StatsManager,android.telephony.TelephonyManager)>($r29, $r31, r3, r4, r5, $r36, $r38, $r43, null, $r22, $r47, $r49, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, $r61, r21, $r67);

        $r68 = new android.content.IntentFilter;

        specialinvoke $r68.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r68.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke $r68.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        virtualinvoke $r68.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PHONE_STATE");

        virtualinvoke $r68.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_PRESENT");

        virtualinvoke $r68.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_STOPPED");

        virtualinvoke $r68.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_SWITCHED");

        virtualinvoke $r68.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_ADDED");

        virtualinvoke $r68.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_REMOVED");

        virtualinvoke $r68.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_UNLOCKED");

        virtualinvoke $r68.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.MANAGED_PROFILE_UNAVAILABLE");

        $r69 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r71 = r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mIntentReceiver>;

        $r70 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r69.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r71, $r70, $r68, null, null);

        $r73 = new android.content.IntentFilter;

        specialinvoke $r73.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r73.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke $r73.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke $r73.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_CHANGED");

        virtualinvoke $r73.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_RESTARTED");

        virtualinvoke $r73.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.QUERY_PACKAGE_RESTART");

        virtualinvoke $r73.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r74 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r76 = r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mPackageIntentReceiver>;

        $r75 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r74.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r76, $r75, $r73, null, null);

        $r78 = new android.content.IntentFilter;

        specialinvoke $r78.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r78.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGES_SUSPENDED");

        virtualinvoke $r78.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGES_UNSUSPENDED");

        virtualinvoke $r78.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DISTRACTING_PACKAGES_CHANGED");

        $r79 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r81 = r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mPackageIntentReceiver>;

        $r80 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r79.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r81, $r80, $r78, null, null);

        $r83 = new android.content.IntentFilter;

        specialinvoke $r83.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE");

        $r84 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r86 = r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mPackageIntentReceiver>;

        $r85 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r84.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r86, $r85, $r83, null, null);

        $r88 = new android.content.IntentFilter;

        $r89 = <com.android.server.notification.NotificationManagerService: java.lang.String ACTION_NOTIFICATION_TIMEOUT>;

        specialinvoke $r88.<android.content.IntentFilter: void <init>(java.lang.String)>($r89);

        virtualinvoke $r88.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("timeout");

        $r90 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r91 = r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mNotificationTimeoutReceiver>;

        virtualinvoke $r90.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r91, $r88);

        $r93 = new android.content.IntentFilter;

        specialinvoke $r93.<android.content.IntentFilter: void <init>(java.lang.String)>("android.os.action.SETTING_RESTORED");

        $r94 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r95 = r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mRestoreReceiver>;

        virtualinvoke $r94.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r95, $r93);

        $r97 = new android.content.IntentFilter;

        specialinvoke $r97.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.LOCALE_CHANGED");

        $r98 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r99 = r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mLocaleChangeReceiver>;

        virtualinvoke $r98.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r99, $r97);

        $r101 = r0.<com.android.server.notification.NotificationManagerService: android.os.IBinder mService>;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void publishBinderService(java.lang.String,android.os.IBinder,boolean,int)>("notification", $r101, 0, 5);

        $r102 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerInternal mInternalService>;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void publishLocalService(java.lang.Class,java.lang.Object)>(class "Lcom/android/server/notification/NotificationManagerInternal;", $r102);

        return;
    }

    public void onStopUser(android.content.pm.UserInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.pm.UserInfo r1;
        com.android.server.notification._$$Lambda$NotificationManagerService$cVvNajwVr5sFISXC5NXOu3pYhPo $r2;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.content.pm.UserInfo;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r2 = new com.android.server.notification._$$Lambda$NotificationManagerService$cVvNajwVr5sFISXC5NXOu3pYhPo;

        specialinvoke $r2.<com.android.server.notification._$$Lambda$NotificationManagerService$cVvNajwVr5sFISXC5NXOu3pYhPo: void <init>(com.android.server.notification.NotificationManagerService,android.content.pm.UserInfo)>(r0, r1);

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void onUnlockUser(android.content.pm.UserInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.pm.UserInfo r1;
        com.android.server.notification._$$Lambda$NotificationManagerService$OZL_lzotNQk7U4Yu1gYgeIoj6do $r2;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.content.pm.UserInfo;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r2 = new com.android.server.notification._$$Lambda$NotificationManagerService$OZL_lzotNQk7U4Yu1gYgeIoj6do;

        specialinvoke $r2.<com.android.server.notification._$$Lambda$NotificationManagerService$OZL_lzotNQk7U4Yu1gYgeIoj6do: void <init>(com.android.server.notification.NotificationManagerService,android.content.pm.UserInfo)>(r0, r1);

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    protected void playInCallNotification()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.media.AudioManager $r1;
        int $i0, $i1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        com.android.server.notification.NotificationManagerService$13 $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        $i0 = virtualinvoke $r1.<android.media.AudioManager: int getRingerModeInternal()>();

        if $i0 != 2 goto label1;

        $r2 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "in_call_notification_enabled", 1);

        if $i1 == 0 goto label1;

        $r4 = new com.android.server.notification.NotificationManagerService$13;

        specialinvoke $r4.<com.android.server.notification.NotificationManagerService$13: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$13: void start()>();

     label1:
        return;
    }

    void readPolicyXml(java.io.InputStream, boolean, int) throws org.xmlpull.v1.XmlPullParserException, java.lang.NumberFormatException, java.io.IOException
    {
        com.android.server.notification.NotificationManagerService r0;
        java.io.InputStream r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, $z10, $z11, z12, $z13;
        int i0, i1;
        org.xmlpull.v1.XmlPullParser r2;
        java.nio.charset.Charset $r3;
        java.lang.String $r4, $r9, $r10, $r11, $r12, $r15, $r16, $r19, $r20, $r21, $r22, $r23, $r36, $r37, $r38, $r39;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r5, $r7, $r13, $r28;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r6, $r30, $r34;
        com.android.server.notification.ConditionProviders $r8, $r17, $r26;
        com.android.server.notification.ManagedServices$Config $r14, $r18, $r35;
        com.android.server.notification.SnoozeHelper $r24;
        long $l2;
        com.android.internal.util.function.TriPredicate $r25, $r27, $r29;
        com.android.server.notification.PreferencesHelper $r31;
        com.android.server.notification.ZenModeHelper $r32;
        android.os.UserManager $r33;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, $r4);

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "notification-policy");

        z8 = 0;

        if z0 == 0 goto label01;

        $r33 = r0.<com.android.server.notification.NotificationManagerService: android.os.UserManager mUm>;

        $z7 = virtualinvoke $r33.<android.os.UserManager: boolean isManagedProfile(int)>(i0);

        if $z7 == 0 goto label01;

        z9 = 1;

        goto label02;

     label01:
        z9 = 0;

     label02:
        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label03:
        $z10 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r2, i1);

        if $z10 == 0 goto label14;

        $r9 = "zen";

        $r10 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label04;

        $r32 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r32.<com.android.server.notification.ZenModeHelper: void readXml(org.xmlpull.v1.XmlPullParser,boolean,int)>(r2, z0, i0);

        goto label05;

     label04:
        $r11 = "ranking";

        $r12 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 == 0 goto label05;

        $r31 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        virtualinvoke $r31.<com.android.server.notification.PreferencesHelper: void readXml(org.xmlpull.v1.XmlPullParser,boolean,int)>(r2, z0, i0);

     label05:
        $r34 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        $r35 = virtualinvoke $r34.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$Config getConfig()>();

        $r36 = $r35.<com.android.server.notification.ManagedServices$Config: java.lang.String xmlTag>;

        $r37 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z11 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r37);

        if $z11 == 0 goto label07;

        if z9 == 0 goto label06;

        goto label03;

     label06:
        $r30 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        $r29 = r0.<com.android.server.notification.NotificationManagerService: com.android.internal.util.function.TriPredicate mAllowedManagedServicePackages>;

        virtualinvoke $r30.<com.android.server.notification.NotificationManagerService$NotificationListeners: void readXml(org.xmlpull.v1.XmlPullParser,com.android.internal.util.function.TriPredicate,boolean,int)>(r2, $r29, z0, i0);

        z12 = 1;

        goto label12;

     label07:
        $r13 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        $r14 = virtualinvoke $r13.<com.android.server.notification.NotificationManagerService$NotificationAssistants: com.android.server.notification.ManagedServices$Config getConfig()>();

        $r15 = $r14.<com.android.server.notification.ManagedServices$Config: java.lang.String xmlTag>;

        $r16 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z3 == 0 goto label09;

        if z9 == 0 goto label08;

        goto label03;

     label08:
        $r28 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        $r27 = r0.<com.android.server.notification.NotificationManagerService: com.android.internal.util.function.TriPredicate mAllowedManagedServicePackages>;

        virtualinvoke $r28.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void readXml(org.xmlpull.v1.XmlPullParser,com.android.internal.util.function.TriPredicate,boolean,int)>(r2, $r27, z0, i0);

        z12 = 1;

        goto label12;

     label09:
        $r17 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        $r18 = virtualinvoke $r17.<com.android.server.notification.ConditionProviders: com.android.server.notification.ManagedServices$Config getConfig()>();

        $r19 = $r18.<com.android.server.notification.ManagedServices$Config: java.lang.String xmlTag>;

        $r20 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z4 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z4 == 0 goto label11;

        if z9 == 0 goto label10;

        goto label03;

     label10:
        $r26 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        $r25 = r0.<com.android.server.notification.NotificationManagerService: com.android.internal.util.function.TriPredicate mAllowedManagedServicePackages>;

        virtualinvoke $r26.<com.android.server.notification.ConditionProviders: void readXml(org.xmlpull.v1.XmlPullParser,com.android.internal.util.function.TriPredicate,boolean,int)>(r2, $r25, z0, i0);

        z12 = 1;

        goto label12;

     label11:
        z12 = z8;

        $r21 = "snoozed-notifications";

        $r22 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z5 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z5 == 0 goto label12;

        $r24 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper>;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r24.<com.android.server.notification.SnoozeHelper: void readXml(org.xmlpull.v1.XmlPullParser,long)>(r2, $l2);

        z12 = z8;

     label12:
        z8 = z12;

        $r38 = "allow-secure-notifications-on-lockscreen";

        $r39 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z13 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>($r39);

        if $z13 == 0 goto label03;

        if z0 == 0 goto label13;

        if i0 == 0 goto label13;

        z8 = z12;

        goto label03;

     label13:
        $r23 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $z6 = staticinvoke <com.android.server.notification.NotificationManagerService: boolean safeBoolean(java.lang.String,boolean)>($r23, 1);

        r0.<com.android.server.notification.NotificationManagerService: boolean mLockScreenAllowSecureNotifications> = $z6;

        z8 = z12;

        goto label03;

     label14:
        if z8 != 0 goto label15;

        $r6 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r6.<com.android.server.notification.NotificationManagerService$NotificationListeners: void migrateToXml()>();

        $r7 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        virtualinvoke $r7.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void migrateToXml()>();

        $r8 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        virtualinvoke $r8.<com.android.server.notification.ConditionProviders: void migrateToXml()>();

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

     label15:
        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void resetDefaultAssistantsIfNecessary()>();

        return;
    }

    void removeAutogroupKeyLocked(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r6;
        com.android.server.notification.NotificationRecord r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.service.notification.StatusBarNotification $r5;
        com.android.server.notification.RankingHandler $r7;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.notification.NotificationRecord) $r4;

        if r2 != null goto label1;

        return;

     label1:
        $r5 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r6 = virtualinvoke $r5.<android.service.notification.StatusBarNotification: java.lang.String getOverrideGroupKey()>();

        if $r6 == null goto label2;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void addAutoGroupAdjustment(com.android.server.notification.NotificationRecord,java.lang.String)>(r2, null);

        staticinvoke <com.android.server.EventLogTags: void writeNotificationUnautogrouped(java.lang.String)>(r1);

        $r7 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHandler mRankingHandler>;

        interfaceinvoke $r7.<com.android.server.notification.RankingHandler: void requestSort()>();

     label2:
        return;
    }

    protected void reportSeen(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        boolean $z0;
        android.app.usage.UsageStatsManagerInternal $r2;
        android.service.notification.StatusBarNotification $r3, $r5;
        java.lang.String $r4;
        int $i0, $i1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $z0 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean isProxied()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: android.app.usage.UsageStatsManagerInternal mAppUsageStats>;

        $r3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r4 = virtualinvoke $r3.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r5 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i0 = virtualinvoke $r5.<android.service.notification.StatusBarNotification: int getUserId()>();

        $i1 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: int getRealUserId(int)>($i0);

        virtualinvoke $r2.<android.app.usage.UsageStatsManagerInternal: void reportEvent(java.lang.String,int,int)>($r4, $i1, 10);

     label1:
        return;
    }

    protected void reportUserInteraction(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        android.app.usage.UsageStatsManagerInternal $r2;
        android.service.notification.StatusBarNotification $r3, $r5;
        java.lang.String $r4;
        int $i0, $i1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: android.app.usage.UsageStatsManagerInternal mAppUsageStats>;

        $r3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r4 = virtualinvoke $r3.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r5 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $i0 = virtualinvoke $r5.<android.service.notification.StatusBarNotification: int getUserId()>();

        $i1 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: int getRealUserId(int)>($i0);

        virtualinvoke $r2.<android.app.usage.UsageStatsManagerInternal: void reportEvent(java.lang.String,int,int)>($r4, $i1, 7);

        return;
    }

    void resetAssistantUserSet(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSystemOrShell()>();

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        virtualinvoke $r1.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void setUserSet(int,boolean)>(i0, 0);

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    int resolveNotificationUid(java.lang.String, java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r2, $r15;
        int i0, i2, i3, i4;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.content.pm.PackageManager $r3;
        com.android.server.notification.PreferencesHelper $r4;
        java.lang.StringBuilder $r5;
        java.lang.SecurityException $r14;
        android.content.pm.PackageManager$NameNotFoundException $r16;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        i3 = i2;

        if i2 != -1 goto label1;

        i3 = 0;

     label1:
        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isCallerSameApp(java.lang.String,int,int)>(r2, i0, i3);

        if $z0 == 0 goto label3;

        $z3 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, r2);

        if $z3 != 0 goto label2;

        $z4 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isCallerSameApp(java.lang.String,int,int)>(r1, i0, i3);

        if $z4 == 0 goto label3;

     label2:
        return i0;

     label3:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.content.pm.PackageManager mPackageManagerClient>;

        i4 = virtualinvoke $r3.<android.content.pm.PackageManager: int getPackageUidAsUser(java.lang.String,int)>(r2, i3);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        i4 = -1;

     label6:
        $z1 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isCallerAndroid(java.lang.String,int)>(r1, i0);

        if $z1 != 0 goto label8;

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper>;

        $z2 = virtualinvoke $r4.<com.android.server.notification.PreferencesHelper: boolean isDelegateAllowed(java.lang.String,int,java.lang.String,int)>(r2, i4, r1, i0);

        if $z2 == 0 goto label7;

        goto label8;

     label7:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot post for pkg ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in user ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r14 = new java.lang.SecurityException;

        $r15 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.SecurityException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label8:
        return i4;

        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }

    void scheduleTimeoutLocked(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        android.app.PendingIntent r2;
        android.app.Notification $r3, $r17;
        long $l0, $l2, $l3, $l4;
        byte $b1;
        android.content.Context $r4;
        android.content.Intent $r5, $r12, $r13, $r15;
        java.lang.String $r6, $r9, $r14;
        android.net.Uri$Builder $r7, $r8, $r10;
        android.net.Uri $r11;
        android.app.AlarmManager $r16;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $r3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $l0 = virtualinvoke $r3.<android.app.Notification: long getTimeoutAfter()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $r4 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r5 = new android.content.Intent;

        $r6 = <com.android.server.notification.NotificationManagerService: java.lang.String ACTION_NOTIFICATION_TIMEOUT>;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>($r6);

        $r7 = new android.net.Uri$Builder;

        specialinvoke $r7.<android.net.Uri$Builder: void <init>()>();

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("timeout");

        $r9 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $r10 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<android.net.Uri$Builder: android.net.Uri build()>();

        $r12 = virtualinvoke $r5.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r11);

        $r13 = virtualinvoke $r12.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r14 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $r15 = virtualinvoke $r13.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("key", $r14);

        r2 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r4, 1, $r15, 134217728);

        $r16 = r0.<com.android.server.notification.NotificationManagerService: android.app.AlarmManager mAlarmManager>;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r17 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $l3 = virtualinvoke $r17.<android.app.Notification: long getTimeoutAfter()>();

        $l4 = $l2 + $l3;

        virtualinvoke $r16.<android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>(2, $l4, r2);

     label1:
        return;
    }

    void sendAccessibilityEvent(android.app.Notification, java.lang.CharSequence)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.CharSequence r1, r9;
        android.view.accessibility.AccessibilityEvent r2;
        android.view.accessibility.AccessibilityManager $r3, $r6;
        boolean $z0, $z1;
        java.lang.Class $r4;
        java.lang.String $r5;
        java.util.List $r7;
        android.app.Notification r8;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r8 := @parameter0: android.app.Notification;

        r1 := @parameter1: java.lang.CharSequence;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        $z0 = virtualinvoke $r3.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r2 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(64);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>(r1);

        $r4 = class "Landroid/app/Notification;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r5);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setParcelableData(android.os.Parcelable)>(r8);

        r9 = r8.<android.app.Notification: java.lang.CharSequence tickerText>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z1 != 0 goto label2;

        $r7 = virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r9);

     label2:
        $r6 = r0.<com.android.server.notification.NotificationManagerService: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        virtualinvoke $r6.<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r2);

        return;
    }

    void setAccessibilityManager(android.view.accessibility.AccessibilityManager)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.view.accessibility.AccessibilityManager r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.view.accessibility.AccessibilityManager;

        r0.<com.android.server.notification.NotificationManagerService: android.view.accessibility.AccessibilityManager mAccessibilityManager> = r1;

        return;
    }

    void setAudioManager(android.media.AudioManager)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.media.AudioManager r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.media.AudioManager;

        r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager> = r1;

        return;
    }

    protected void setDefaultAssistantForUser(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i1, i2, i3, $i4;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r1, $r4;
        java.lang.Object $r2, $r5;
        android.content.ComponentName $r3, $r6;
        boolean $z0, $z1;
        java.lang.String r7;
        android.util.ArraySet r8, r9;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        r7 = staticinvoke <android.provider.DeviceConfig: java.lang.String getProperty(java.lang.String,java.lang.String)>("systemui", "nas_default_service");

        if r7 == null goto label3;

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        r8 = virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationAssistants: android.util.ArraySet queryPackageForServices(java.lang.String,int,int)>(r7, 786432, i0);

        i2 = 0;

     label1:
        $i1 = virtualinvoke r8.<android.util.ArraySet: int size()>();

        if i2 >= $i1 goto label3;

        $r5 = virtualinvoke r8.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        $r6 = (android.content.ComponentName) $r5;

        $z1 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean allowAssistant(int,android.content.ComponentName)>(i0, $r6);

        if $z1 == 0 goto label2;

        return;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        r9 = virtualinvoke $r1.<com.android.server.notification.NotificationManagerService$NotificationAssistants: android.util.ArraySet getDefaultComponents()>();

        i3 = 0;

     label4:
        $i4 = virtualinvoke r9.<android.util.ArraySet: int size()>();

        if i3 >= $i4 goto label6;

        $r2 = virtualinvoke r9.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        $r3 = (android.content.ComponentName) $r2;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean allowAssistant(int,android.content.ComponentName)>(i0, $r3);

        if $z0 == 0 goto label5;

        return;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        return;
    }

    void setFallbackVibrationPattern(long[])
    {
        com.android.server.notification.NotificationManagerService r0;
        long[] r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: long[];

        r0.<com.android.server.notification.NotificationManagerService: long[] mFallbackVibrationPattern> = r1;

        return;
    }

    void setHandler(com.android.server.notification.NotificationManagerService$WorkerHandler)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$WorkerHandler r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationManagerService$WorkerHandler;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler> = r1;

        return;
    }

    void setHints(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        r0.<com.android.server.notification.NotificationManagerService: int mListenerHints> = i0;

        return;
    }

    void setIsAutomotive(boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        z0 := @parameter0: boolean;

        r0.<com.android.server.notification.NotificationManagerService: boolean mIsAutomotive> = z0;

        return;
    }

    void setIsTelevision(boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        z0 := @parameter0: boolean;

        r0.<com.android.server.notification.NotificationManagerService: boolean mIsTelevision> = z0;

        return;
    }

    void setLights(com.android.server.lights.LogicalLight)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.lights.LogicalLight r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.lights.LogicalLight;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.LogicalLight mNotificationLight> = r1;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.LogicalLight mAttentionLight> = r1;

        r0.<com.android.server.notification.NotificationManagerService: boolean mNotificationPulseEnabled> = 1;

        return;
    }

    protected void setNotificationAssistantAccessGrantedForUserInternal(android.content.ComponentName, int, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.ComponentName r1, r2;
        boolean z0, $z1, $z2;
        android.os.UserManager $r3;
        java.lang.Object $r4, $r23;
        android.content.pm.UserInfo $r5;
        com.android.server.notification.ConditionProviders $r6;
        java.lang.String $r7, $r9, $r12, $r17, $r20;
        com.android.server.notification.NotificationManagerService$NotificationAssistants $r8, $r19, $r21;
        android.content.Context $r10;
        android.content.Intent $r11, $r13, $r14;
        android.os.UserHandle $r15;
        com.android.internal.util.function.TriPredicate $r16;
        java.lang.Integer $r18;
        java.util.List $r22, r24;
        int i0, i1;
        java.util.Iterator r25;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.os.UserManager mUm>;

        r24 = virtualinvoke $r3.<android.os.UserManager: java.util.List getEnabledProfiles(int)>(i0);

        if r24 == null goto label5;

        r25 = interfaceinvoke r24.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r4 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.content.pm.UserInfo) $r4;

        i1 = $r5.<android.content.pm.UserInfo: int id>;

        if r1 != null goto label2;

        $r21 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        $r22 = virtualinvoke $r21.<com.android.server.notification.NotificationManagerService$NotificationAssistants: java.util.List getAllowedComponents(int)>(i1);

        $r23 = staticinvoke <com.android.internal.util.CollectionUtils: java.lang.Object firstOrNull(java.util.List)>($r22);

        r2 = (android.content.ComponentName) $r23;

        if r2 == null goto label1;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void setNotificationAssistantAccessGrantedForUserInternal(android.content.ComponentName,int,boolean)>(r2, i1, 0);

        goto label1;

     label2:
        if z0 == 0 goto label3;

        $r16 = r0.<com.android.server.notification.NotificationManagerService: com.android.internal.util.function.TriPredicate mAllowedManagedServicePackages>;

        $r17 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r19 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        $r20 = virtualinvoke $r19.<com.android.server.notification.NotificationManagerService$NotificationAssistants: java.lang.String getRequiredPermission()>();

        $z1 = interfaceinvoke $r16.<com.android.internal.util.function.TriPredicate: boolean test(java.lang.Object,java.lang.Object,java.lang.Object)>($r17, $r18, $r20);

        if $z1 == 0 goto label4;

     label3:
        $r6 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        $r7 = virtualinvoke r1.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke $r6.<com.android.server.notification.ConditionProviders: void setPackageOrComponentEnabled(java.lang.String,int,boolean,boolean)>($r7, i1, 0, z0);

        $r8 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationAssistants mAssistants>;

        $r9 = virtualinvoke r1.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke $r8.<com.android.server.notification.NotificationManagerService$NotificationAssistants: void setPackageOrComponentEnabled(java.lang.String,int,boolean,boolean)>($r9, i1, 1, z0);

        $r10 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.app.action.NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED");

        $r12 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r13 = virtualinvoke $r11.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r15 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i1);

        virtualinvoke $r10.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r14, $r15, null);

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

     label4:
        goto label1;

     label5:
        return;
    }

    void setNotificationEffectsEnabledForAutomotive(boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        z0 := @parameter0: boolean;

        r0.<com.android.server.notification.NotificationManagerService: boolean mNotificationEffectsEnabledForAutomotive> = z0;

        return;
    }

    void setPackageManager(android.content.pm.IPackageManager)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.pm.IPackageManager r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.content.pm.IPackageManager;

        r0.<com.android.server.notification.NotificationManagerService: android.content.pm.IPackageManager mPackageManager> = r1;

        return;
    }

    void setPreferencesHelper(com.android.server.notification.PreferencesHelper)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.PreferencesHelper r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.PreferencesHelper;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.PreferencesHelper mPreferencesHelper> = r1;

        return;
    }

    void setRankingHelper(com.android.server.notification.RankingHelper)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.RankingHelper r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.RankingHelper;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper> = r1;

        return;
    }

    void setScreenOn(boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        z0 := @parameter0: boolean;

        r0.<com.android.server.notification.NotificationManagerService: boolean mScreenOn> = z0;

        return;
    }

    void setShortcutHelper(com.android.server.notification.ShortcutHelper)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ShortcutHelper r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.ShortcutHelper;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ShortcutHelper mShortcutHelper> = r1;

        return;
    }

    void setSystemReady(boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        z0 := @parameter0: boolean;

        r0.<com.android.server.notification.NotificationManagerService: boolean mSystemReady> = z0;

        return;
    }

    void setUsageStats(com.android.server.notification.NotificationUsageStats)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationUsageStats r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationUsageStats;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats> = r1;

        return;
    }

    void setVibrator(android.os.Vibrator)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.Vibrator r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.os.Vibrator;

        r0.<com.android.server.notification.NotificationManagerService: android.os.Vibrator mVibrator> = r1;

        return;
    }

    void setZenHelper(com.android.server.notification.ZenModeHelper)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ZenModeHelper r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.ZenModeHelper;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper> = r1;

        return;
    }

    boolean shouldMuteNotificationLocked(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1, $r9, $r13;
        java.lang.String r2, $r6, $r10, $r16, $r18, r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.service.notification.StatusBarNotification $r3, $r4;
        com.android.server.notification.NotificationUsageStats $r5;
        android.util.ArrayMap $r7, $r11;
        java.lang.Object $r8, $r12;
        java.lang.StringBuilder $r14;
        int $i1, $i2;
        android.app.Notification r19;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        r19 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $z0 = r1.<com.android.server.notification.NotificationRecord: boolean isUpdate>;

        if $z0 == 0 goto label1;

        $i1 = r19.<android.app.Notification: int flags>;

        $i2 = $i1 & 8;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean shouldPostSilently()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        r2 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: java.lang.String disableNotificationEffects(com.android.server.notification.NotificationRecord)>(r1);

        if r2 == null goto label3;

        staticinvoke <com.android.server.notification.ZenLog: void traceDisableEffects(com.android.server.notification.NotificationRecord,java.lang.String)>(r1, r2);

        return 1;

     label3:
        $z2 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean isIntercepted()>();

        if $z2 == 0 goto label4;

        return 1;

     label4:
        $r3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $z3 = virtualinvoke $r3.<android.service.notification.StatusBarNotification: boolean isGroup()>();

        if $z3 == 0 goto label5;

        $z7 = virtualinvoke r19.<android.app.Notification: boolean suppressAlertingDueToGrouping()>();

        if $z7 == 0 goto label5;

        return 1;

     label5:
        $r4 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r20 = virtualinvoke $r4.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        $z4 = virtualinvoke $r5.<com.android.server.notification.NotificationUsageStats: boolean isAlertRateLimited(java.lang.String)>(r20);

        if $z4 == 0 goto label6;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Muting recently noisy ");

        $r16 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r18);

        return 1;

     label6:
        $r7 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r6 = r0.<com.android.server.notification.NotificationManagerService: java.lang.String mSoundNotificationKey>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        $r9 = (com.android.server.notification.NotificationRecord) $r8;

        $z5 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isLoopingRingtoneNotification(com.android.server.notification.NotificationRecord)>($r9);

        if $z5 != 0 goto label8;

        $r11 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r10 = r0.<com.android.server.notification.NotificationManagerService: java.lang.String mVibrateNotificationKey>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r10);

        $r13 = (com.android.server.notification.NotificationRecord) $r12;

        $z6 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isLoopingRingtoneNotification(com.android.server.notification.NotificationRecord)>($r13);

        if $z6 == 0 goto label7;

        goto label8;

     label7:
        return 0;

     label8:
        return 1;
    }

    void showNextToastLocked()
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i1;
        java.util.ArrayList $r1, $r3, $r4, $r5, $r7;
        java.lang.Object $r2, $r6;
        boolean $z0;
        com.android.server.notification.toast.ToastRecord r9;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r9 = (com.android.server.notification.toast.ToastRecord) $r2;

     label1:
        if r9 == null goto label6;

        $z0 = virtualinvoke r9.<com.android.server.notification.toast.ToastRecord: boolean show()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void scheduleDurationReachedLocked(com.android.server.notification.toast.ToastRecord)>(r9);

        return;

     label2:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int indexOf(java.lang.Object)>(r9);

        if i0 < 0 goto label3;

        $r7 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label3:
        $r4 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label4;

        $r5 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r9 = (com.android.server.notification.toast.ToastRecord) $r6;

        goto label5;

     label4:
        r9 = null;

     label5:
        goto label1;

     label6:
        return;
    }

    protected void simulatePackageDistractionBroadcast(int, java.lang.String[])
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        android.os.Bundle $r2;
        android.content.Intent $r3;
        android.content.BroadcastReceiver $r5;
        android.content.Context $r6;
        java.lang.String[] r7;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String[];

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSystemOrShell()>();

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        virtualinvoke $r2.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>("android.intent.extra.changed_package_list", r7);

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("android.intent.extra.distraction_restrictions", i0);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DISTRACTING_PACKAGES_CHANGED");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>($r2);

        $r5 = r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mPackageIntentReceiver>;

        $r6 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        virtualinvoke $r5.<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>($r6, $r3);

        return;
    }

    protected void simulatePackageSuspendBroadcast(boolean, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0;
        android.os.Bundle $r2;
        java.lang.String[] $r3;
        android.content.Intent $r4;
        android.content.BroadcastReceiver $r6;
        android.content.Context $r7;
        java.lang.String r8, r9;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        z0 := @parameter0: boolean;

        r8 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void checkCallerIsSystemOrShell()>();

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = r8;

        virtualinvoke $r2.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>("android.intent.extra.changed_package_list", $r3);

        if z0 == 0 goto label1;

        r9 = "android.intent.action.PACKAGES_SUSPENDED";

        goto label2;

     label1:
        r9 = "android.intent.action.PACKAGES_UNSUSPENDED";

     label2:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>(r9);

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>($r2);

        $r6 = r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mPackageIntentReceiver>;

        $r7 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        virtualinvoke $r6.<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>($r7, $r4);

        return;
    }

    void snoozeNotificationInt(java.lang.String, long, java.lang.String, com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r2, $r8, r10;
        long l0;
        android.content.ComponentName $r3;
        byte $b1;
        boolean $z0;
        com.android.server.notification.NotificationManagerService$SnoozeNotificationRunnable $r4;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r5;
        java.lang.Object[] $r6;
        java.lang.Long $r7;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r9;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r2 := @parameter2: java.lang.String;

        r9 := @parameter3: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        if r9 != null goto label1;

        r10 = null;

        goto label2;

     label1:
        $r3 = r9.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        r10 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String toShortString()>();

     label2:
        $b1 = l0 cmp 0L;

        if $b1 > 0 goto label3;

        if r2 == null goto label4;

     label3:
        if r1 != null goto label5;

     label4:
        return;

     label5:
        $z0 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z0 == 0 goto label6;

        $r6 = newarray (java.lang.Object)[4];

        $r6[0] = r1;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r6[1] = $r7;

        $r6[2] = r2;

        $r6[3] = r10;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("snooze event(%s, %d, %s, %s)", $r6);

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r8);

     label6:
        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r4 = new com.android.server.notification.NotificationManagerService$SnoozeNotificationRunnable;

        specialinvoke $r4.<com.android.server.notification.NotificationManagerService$SnoozeNotificationRunnable: void <init>(com.android.server.notification.NotificationManagerService,java.lang.String,long,java.lang.String)>(r0, r1, l0, r2);

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    protected void unhideNotificationsForPackages(java.lang.String[])
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.Object r1, $r7;
        java.util.ArrayList r2, $r4, $r6;
        int i0, i1;
        com.android.server.notification.NotificationRecord r3;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r5;
        android.service.notification.StatusBarNotification $r8;
        java.lang.String $r9;
        boolean $z0;
        java.lang.Throwable $r10;
        java.lang.String[] r11;
        java.util.List r12;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r11 := @parameter0: java.lang.String[];

        r1 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Object mNotificationLock>;

        entermonitor r1;

     label01:
        r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r11);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r6 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.notification.NotificationRecord) $r7;

        $r8 = virtualinvoke r3.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r9 = virtualinvoke $r8.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z0 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>($r9);

        if $z0 == 0 goto label05;

        virtualinvoke r3.<com.android.server.notification.NotificationRecord: void setHidden(boolean)>(0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyUnhiddenLocked(java.util.List)>(r2);

        exitmonitor r1;

     label07:
        return;

     label08:
        $r10 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void unregisterDeviceConfigChange()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.provider.DeviceConfig$OnPropertiesChangedListener r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 = r0.<com.android.server.notification.NotificationManagerService: android.provider.DeviceConfig$OnPropertiesChangedListener mDeviceConfigChangedListener>;

        if r1 == null goto label1;

        staticinvoke <android.provider.DeviceConfig: void removeOnPropertiesChangedListener(android.provider.DeviceConfig$OnPropertiesChangedListener)>(r1);

     label1:
        return;
    }

    void unsnoozeNotificationInt(java.lang.String, com.android.server.notification.ManagedServices$ManagedServiceInfo, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r5, r7;
        boolean z0, $z1;
        android.content.ComponentName $r2;
        com.android.server.notification.SnoozeHelper $r3;
        java.lang.Object[] $r4;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r6;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        z0 := @parameter2: boolean;

        if r6 != null goto label1;

        r7 = null;

        goto label2;

     label1:
        $r2 = r6.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        r7 = virtualinvoke $r2.<android.content.ComponentName: java.lang.String toShortString()>();

     label2:
        $z1 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z1 == 0 goto label3;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r1;

        $r4[1] = r7;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("unsnooze event(%s, %s)", $r4);

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r5);

     label3:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.SnoozeHelper mSnoozeHelper>;

        virtualinvoke $r3.<com.android.server.notification.SnoozeHelper: void repost(java.lang.String,boolean)>(r1, z0);

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    protected void updateAutobundledSummaryFlags(int, java.lang.String, boolean, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0, z1;
        android.util.ArrayMap $r1, $r5, r16;
        java.lang.Integer $r2;
        java.lang.Object $r3, $r4, $r6;
        android.service.notification.StatusBarNotification $r7, $r9, $r10, $r14;
        android.app.Notification $r8, $r11, r19, r20;
        com.android.server.notification.NotificationManagerService$EnqueueNotificationRunnable $r12;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r13;
        java.lang.String r15, r17;
        com.android.server.notification.NotificationRecord r18;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        r15 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mAutobundledSummaries>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r2);

        r16 = (android.util.ArrayMap) $r3;

        if r16 != null goto label1;

        return;

     label1:
        $r4 = virtualinvoke r16.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r15);

        r17 = (java.lang.String) $r4;

        if r17 != null goto label2;

        return;

     label2:
        $r5 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r17);

        r18 = (com.android.server.notification.NotificationRecord) $r6;

        if r18 != null goto label3;

        return;

     label3:
        $r7 = virtualinvoke r18.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r8 = virtualinvoke $r7.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        i1 = $r8.<android.app.Notification: int flags>;

        if z0 == 0 goto label4;

        $r14 = virtualinvoke r18.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r19 = virtualinvoke $r14.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $i5 = r19.<android.app.Notification: int flags>;

        $i6 = $i5 | 2;

        r19.<android.app.Notification: int flags> = $i6;

        goto label5;

     label4:
        $r9 = virtualinvoke r18.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        r20 = virtualinvoke $r9.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $i2 = r20.<android.app.Notification: int flags>;

        $i3 = $i2 & -3;

        r20.<android.app.Notification: int flags> = $i3;

     label5:
        $r10 = virtualinvoke r18.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification getSbn()>();

        $r11 = virtualinvoke $r10.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $i4 = $r11.<android.app.Notification: int flags>;

        if $i4 == i1 goto label6;

        $r13 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r12 = new com.android.server.notification.NotificationManagerService$EnqueueNotificationRunnable;

        specialinvoke $r12.<com.android.server.notification.NotificationManagerService$EnqueueNotificationRunnable: void <init>(com.android.server.notification.NotificationManagerService,int,com.android.server.notification.NotificationRecord,boolean)>(r0, i0, r18, z1);

        virtualinvoke $r13.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r12);

     label6:
        return;
    }

    void updateLightsLocked()
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r12;
        com.android.server.lights.LogicalLight $r3, $r4, $r17;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.ArrayList $r5, $r13, r15;
        java.lang.Object $r6, $r8;
        android.util.ArrayMap $r7;
        java.lang.StringBuilder $r9;
        com.android.server.notification.NotificationRecord r14;
        com.android.server.notification.NotificationRecord$Light r16;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.LogicalLight mNotificationLight>;

        if $r3 != null goto label1;

        return;

     label1:
        r14 = null;

     label2:
        if r14 != null goto label4;

        $r5 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        $z3 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z3 != 0 goto label4;

        r15 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        $i3 = virtualinvoke r15.<java.util.ArrayList: int size()>();

        $i4 = $i3 - 1;

        $r6 = virtualinvoke r15.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        r1 = (java.lang.String) $r6;

        $r7 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r14 = (com.android.server.notification.NotificationRecord) $r8;

        if r14 != null goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LED Notification does not exist: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtfStack(java.lang.String,java.lang.String)>("NotificationService", $r12);

        $r13 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        virtualinvoke $r13.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label3:
        goto label2;

     label4:
        if r14 == null goto label6;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isInCall()>();

        if $z0 != 0 goto label6;

        $z1 = r0.<com.android.server.notification.NotificationManagerService: boolean mScreenOn>;

        if $z1 == 0 goto label5;

        goto label6;

     label5:
        r16 = virtualinvoke r14.<com.android.server.notification.NotificationRecord: com.android.server.notification.NotificationRecord$Light getLight()>();

        if r16 == null goto label7;

        $z2 = r0.<com.android.server.notification.NotificationManagerService: boolean mNotificationPulseEnabled>;

        if $z2 == 0 goto label7;

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.LogicalLight mNotificationLight>;

        $i2 = r16.<com.android.server.notification.NotificationRecord$Light: int color>;

        $i1 = r16.<com.android.server.notification.NotificationRecord$Light: int onMs>;

        $i0 = r16.<com.android.server.notification.NotificationRecord$Light: int offMs>;

        virtualinvoke $r4.<com.android.server.lights.LogicalLight: void setFlashing(int,int,int,int)>($i2, 1, $i1, $i0);

        goto label7;

     label6:
        $r17 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.LogicalLight mNotificationLight>;

        virtualinvoke $r17.<com.android.server.lights.LogicalLight: void turnOff()>();

     label7:
        return;
    }

    void updateUriPermissions(com.android.server.notification.NotificationRecord, com.android.server.notification.NotificationRecord, java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1, r2;
        android.net.Uri r3, r28;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        java.lang.Object $r4, $r7;
        java.lang.StringBuilder $r5, $r8, $r10, $r12, $r14;
        java.lang.String $r6, $r9, $r11, $r13, $r15, r16, r17;
        android.util.ArraySet r19, r20;
        android.os.IBinder r21, r22, r23;
        com.android.server.uri.UriGrantsManagerInternal r25;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        r2 := @parameter1: com.android.server.notification.NotificationRecord;

        r16 := @parameter2: java.lang.String;

        i8 := @parameter3: int;

        if r1 == null goto label01;

        r17 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        goto label02;

     label01:
        r17 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

     label02:
        $z0 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z0 == 0 goto label03;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": updating permissions");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r15);

     label03:
        r19 = null;

        if r1 == null goto label04;

        r20 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.util.ArraySet getGrantableUris()>();

        goto label05;

     label04:
        r20 = null;

     label05:
        if r2 == null goto label06;

        r19 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: android.util.ArraySet getGrantableUris()>();

     label06:
        if r20 != null goto label07;

        if r19 != null goto label07;

        return;

     label07:
        r21 = null;

        if r1 == null goto label08;

        r21 = r1.<com.android.server.notification.NotificationRecord: android.os.IBinder permissionOwner>;

     label08:
        r22 = r21;

        if r2 == null goto label09;

        r22 = r21;

        if r21 != null goto label09;

        r22 = r2.<com.android.server.notification.NotificationRecord: android.os.IBinder permissionOwner>;

     label09:
        r23 = r22;

        if r20 == null goto label11;

        r23 = r22;

        if r22 != null goto label11;

        $z4 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z4 == 0 goto label10;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": creating owner");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r13);

     label10:
        r25 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOTIF:");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r23 = interfaceinvoke r25.<com.android.server.uri.UriGrantsManagerInternal: android.os.IBinder newUriPermissionOwner(java.lang.String)>($r11);

     label11:
        if r20 != null goto label12;

        if r23 == null goto label12;

        $i6 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: int getUid()>();

        $i7 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i6);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void destroyPermissionOwner(android.os.IBinder,int,java.lang.String)>(r23, $i7, r17);

        r23 = null;

        goto label12;

     label12:
        if r20 == null goto label16;

        if r23 == null goto label16;

        i9 = 0;

     label13:
        $i4 = virtualinvoke r20.<android.util.ArraySet: int size()>();

        if i9 >= $i4 goto label16;

        $r7 = virtualinvoke r20.<android.util.ArraySet: java.lang.Object valueAt(int)>(i9);

        r3 = (android.net.Uri) $r7;

        if r19 == null goto label14;

        $z3 = virtualinvoke r19.<android.util.ArraySet: boolean contains(java.lang.Object)>(r3);

        if $z3 != 0 goto label15;

     label14:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": granting ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r9);

        $i5 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getUid()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void grantUriPermission(android.os.IBinder,android.net.Uri,int,java.lang.String,int)>(r23, r3, $i5, r16, i8);

     label15:
        i9 = i9 + 1;

        goto label13;

     label16:
        if r19 == null goto label21;

        if r23 == null goto label21;

        i10 = 0;

     label17:
        $i0 = virtualinvoke r19.<android.util.ArraySet: int size()>();

        if i10 >= $i0 goto label21;

        $r4 = virtualinvoke r19.<android.util.ArraySet: java.lang.Object valueAt(int)>(i10);

        r28 = (android.net.Uri) $r4;

        if r20 == null goto label18;

        $z2 = virtualinvoke r20.<android.util.ArraySet: boolean contains(java.lang.Object)>(r28);

        if $z2 != 0 goto label20;

     label18:
        $z1 = <com.android.server.notification.NotificationManagerService: boolean DBG>;

        if $z1 == 0 goto label19;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": revoking ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", $r6);

     label19:
        $i1 = virtualinvoke r2.<com.android.server.notification.NotificationRecord: int getUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $i3 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r28, $i2);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void revokeUriPermission(android.os.IBinder,android.net.Uri,int)>(r23, r28, $i3);

     label20:
        i10 = i10 + 1;

        goto label17;

     label21:
        if r1 == null goto label22;

        r1.<com.android.server.notification.NotificationRecord: android.os.IBinder permissionOwner> = r23;

     label22:
        return;
    }
}
