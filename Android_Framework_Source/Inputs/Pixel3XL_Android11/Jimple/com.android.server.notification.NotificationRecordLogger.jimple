public interface  com.android.server.notification.NotificationRecordLogger extends java.lang.Object
{

    public static int getLoggingImportance(com.android.server.notification.NotificationRecord)
    {
        int i0, $i1;
        com.android.server.notification.NotificationRecord r0;
        android.app.NotificationChannel r1;

        r0 := @parameter0: com.android.server.notification.NotificationRecord;

        i0 = virtualinvoke r0.<com.android.server.notification.NotificationRecord: int getImportance()>();

        r1 = virtualinvoke r0.<com.android.server.notification.NotificationRecord: android.app.NotificationChannel getChannel()>();

        if r1 != null goto label1;

        return i0;

     label1:
        $i1 = staticinvoke <com.android.server.notification.NotificationChannelLogger: int getLoggingImportance(android.app.NotificationChannel,int)>(r1, i0);

        return $i1;
    }

    public abstract void log(com.android.internal.logging.UiEventLogger$UiEventEnum);

    public abstract void log(com.android.internal.logging.UiEventLogger$UiEventEnum, com.android.server.notification.NotificationRecord);

    public void logNotificationCancelled(com.android.server.notification.NotificationRecord, int, int)
    {
        com.android.server.notification.NotificationRecordLogger r0;
        com.android.server.notification.NotificationRecord r1;
        int i0, i1;
        com.android.server.notification.NotificationRecordLogger$NotificationCancelledEvent $r2;

        r0 := @this: com.android.server.notification.NotificationRecordLogger;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <com.android.server.notification.NotificationRecordLogger$NotificationCancelledEvent: com.android.server.notification.NotificationRecordLogger$NotificationCancelledEvent fromCancelReason(int,int)>(i0, i1);

        interfaceinvoke r0.<com.android.server.notification.NotificationRecordLogger: void log(com.android.internal.logging.UiEventLogger$UiEventEnum,com.android.server.notification.NotificationRecord)>($r2, r1);

        return;
    }

    public void logNotificationVisibility(com.android.server.notification.NotificationRecord, boolean)
    {
        com.android.server.notification.NotificationRecordLogger r0;
        com.android.server.notification.NotificationRecord r1;
        boolean z0;
        com.android.server.notification.NotificationRecordLogger$NotificationEvent $r2;

        r0 := @this: com.android.server.notification.NotificationRecordLogger;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.android.server.notification.NotificationRecordLogger$NotificationEvent: com.android.server.notification.NotificationRecordLogger$NotificationEvent fromVisibility(boolean)>(z0);

        interfaceinvoke r0.<com.android.server.notification.NotificationRecordLogger: void log(com.android.internal.logging.UiEventLogger$UiEventEnum,com.android.server.notification.NotificationRecord)>($r2, r1);

        return;
    }

    public abstract void maybeLogNotificationPosted(com.android.server.notification.NotificationRecord, com.android.server.notification.NotificationRecord, int, int, com.android.internal.logging.InstanceId);
}
