class com.android.server.notification.ScheduleConditionProvider$1 extends android.content.BroadcastReceiver
{
    final com.android.server.notification.ScheduleConditionProvider this$0;

    void <init>(com.android.server.notification.ScheduleConditionProvider)
    {
        com.android.server.notification.ScheduleConditionProvider$1 r0;
        com.android.server.notification.ScheduleConditionProvider r1;

        r0 := @this: com.android.server.notification.ScheduleConditionProvider$1;

        r1 := @parameter0: com.android.server.notification.ScheduleConditionProvider;

        r0.<com.android.server.notification.ScheduleConditionProvider$1: com.android.server.notification.ScheduleConditionProvider this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.notification.ScheduleConditionProvider$1 r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r2, $r16, $r18;
        com.android.server.notification.ScheduleConditionProvider $r3, $r4, $r5, $r9;
        android.util.ArrayMap $r6, $r10, r23;
        java.util.Set $r7;
        java.lang.Object $r8, $r11;
        java.util.Calendar $r12;
        java.util.TimeZone $r13;
        java.lang.StringBuilder $r14;
        java.lang.Throwable $r19;
        android.content.Context r20;
        android.content.Intent r21;
        java.util.Iterator r24;
        android.net.Uri r25;
        android.service.notification.ScheduleCalendar r26;

        r0 := @this: com.android.server.notification.ScheduleConditionProvider$1;

        r20 := @parameter0: android.content.Context;

        r21 := @parameter1: android.content.Intent;

        $z0 = <com.android.server.notification.ScheduleConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onReceive ");

        $r16 = virtualinvoke r21.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConditionProviders.SCP", $r18);

     label01:
        $r1 = "android.intent.action.TIMEZONE_CHANGED";

        $r2 = virtualinvoke r21.<android.content.Intent: java.lang.String getAction()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label12;

        $r4 = r0.<com.android.server.notification.ScheduleConditionProvider$1: com.android.server.notification.ScheduleConditionProvider this$0>;

        r23 = staticinvoke <com.android.server.notification.ScheduleConditionProvider: android.util.ArrayMap access$000(com.android.server.notification.ScheduleConditionProvider)>($r4);

        entermonitor r23;

     label02:
        $r5 = r0.<com.android.server.notification.ScheduleConditionProvider$1: com.android.server.notification.ScheduleConditionProvider this$0>;

        $r6 = staticinvoke <com.android.server.notification.ScheduleConditionProvider: android.util.ArrayMap access$000(com.android.server.notification.ScheduleConditionProvider)>($r5);

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.util.Set keySet()>();

        r24 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r8 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (android.net.Uri) $r8;

        $r9 = r0.<com.android.server.notification.ScheduleConditionProvider$1: com.android.server.notification.ScheduleConditionProvider this$0>;

        $r10 = staticinvoke <com.android.server.notification.ScheduleConditionProvider: android.util.ArrayMap access$000(com.android.server.notification.ScheduleConditionProvider)>($r9);

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r25);

        r26 = (android.service.notification.ScheduleCalendar) $r11;

     label04:
        if r26 == null goto label06;

     label05:
        $r12 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r13 = virtualinvoke $r12.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        virtualinvoke r26.<android.service.notification.ScheduleCalendar: void setTimeZone(java.util.TimeZone)>($r13);

     label06:
        goto label03;

     label07:
        exitmonitor r23;

     label08:
        goto label12;

     label09:
        $r19 := @caughtexception;

     label10:
        exitmonitor r23;

     label11:
        throw $r19;

     label12:
        $r3 = r0.<com.android.server.notification.ScheduleConditionProvider$1: com.android.server.notification.ScheduleConditionProvider this$0>;

        staticinvoke <com.android.server.notification.ScheduleConditionProvider: void access$100(com.android.server.notification.ScheduleConditionProvider)>($r3);

        return;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }
}
