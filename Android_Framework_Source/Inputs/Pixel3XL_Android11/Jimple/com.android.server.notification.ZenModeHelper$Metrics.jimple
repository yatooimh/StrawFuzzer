final class com.android.server.notification.ZenModeHelper$Metrics extends com.android.server.notification.ZenModeHelper$Callback
{
    private static final java.lang.String COUNTER_MODE_PREFIX;
    private static final java.lang.String COUNTER_RULE;
    private static final java.lang.String COUNTER_TYPE_PREFIX;
    private static final int DND_OFF;
    private static final int DND_ON_AUTOMATIC;
    private static final int DND_ON_MANUAL;
    private static final long MINIMUM_LOG_PERIOD_MS;
    private long mModeLogTimeMs;
    private int mNumZenRules;
    private int mPreviousZenMode;
    private int mPreviousZenType;
    private long mRuleCountLogTime;
    private long mTypeLogTimeMs;
    final com.android.server.notification.ZenModeHelper this$0;

    private void <init>(com.android.server.notification.ZenModeHelper)
    {
        com.android.server.notification.ZenModeHelper$Metrics r0;
        com.android.server.notification.ZenModeHelper r1;

        r0 := @this: com.android.server.notification.ZenModeHelper$Metrics;

        r1 := @parameter0: com.android.server.notification.ZenModeHelper;

        r0.<com.android.server.notification.ZenModeHelper$Metrics: com.android.server.notification.ZenModeHelper this$0> = r1;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper$Callback: void <init>()>();

        r0.<com.android.server.notification.ZenModeHelper$Metrics: int mPreviousZenMode> = -1;

        r0.<com.android.server.notification.ZenModeHelper$Metrics: long mModeLogTimeMs> = 0L;

        r0.<com.android.server.notification.ZenModeHelper$Metrics: int mNumZenRules> = -1;

        r0.<com.android.server.notification.ZenModeHelper$Metrics: long mRuleCountLogTime> = 0L;

        r0.<com.android.server.notification.ZenModeHelper$Metrics: int mPreviousZenType> = -1;

        r0.<com.android.server.notification.ZenModeHelper$Metrics: long mTypeLogTimeMs> = 0L;

        return;
    }

    void <init>(com.android.server.notification.ZenModeHelper, com.android.server.notification.ZenModeHelper$1)
    {
        com.android.server.notification.ZenModeHelper$Metrics r0;
        com.android.server.notification.ZenModeHelper r1;
        com.android.server.notification.ZenModeHelper$1 r2;

        r0 := @this: com.android.server.notification.ZenModeHelper$Metrics;

        r1 := @parameter0: com.android.server.notification.ZenModeHelper;

        r2 := @parameter1: com.android.server.notification.ZenModeHelper$1;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper$Metrics: void <init>(com.android.server.notification.ZenModeHelper)>(r1);

        return;
    }

    static void access$1200(com.android.server.notification.ZenModeHelper$Metrics)
    {
        com.android.server.notification.ZenModeHelper$Metrics r0;

        r0 := @parameter0: com.android.server.notification.ZenModeHelper$Metrics;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper$Metrics: void emit()>();

        return;
    }

    private void emit()
    {
        com.android.server.notification.ZenModeHelper$Metrics r0;
        com.android.server.notification.ZenModeHelper $r1;
        com.android.server.notification.ZenModeHelper$H $r2;

        r0 := @this: com.android.server.notification.ZenModeHelper$Metrics;

        $r1 = r0.<com.android.server.notification.ZenModeHelper$Metrics: com.android.server.notification.ZenModeHelper this$0>;

        $r2 = staticinvoke <com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$H access$900(com.android.server.notification.ZenModeHelper)>($r1);

        staticinvoke <com.android.server.notification.ZenModeHelper$H: void access$200(com.android.server.notification.ZenModeHelper$H)>($r2);

        specialinvoke r0.<com.android.server.notification.ZenModeHelper$Metrics: void emitZenMode()>();

        specialinvoke r0.<com.android.server.notification.ZenModeHelper$Metrics: void emitRules()>();

        specialinvoke r0.<com.android.server.notification.ZenModeHelper$Metrics: void emitDndType()>();

        return;
    }

    private void emitDndType()
    {
        com.android.server.notification.ZenModeHelper$Metrics r0;
        long l0, l1, $l3;
        android.service.notification.ZenModeConfig r1, $r6;
        java.lang.StringBuilder r2;
        com.android.server.notification.ZenModeHelper $r3, $r4, $r5, $r8;
        android.service.notification.ZenModeConfig$ZenRule $r7;
        int $i4, $i5, $i6, i8, $i10;
        java.lang.String $r11;
        byte $b7, b9;
        java.lang.Throwable $r12;
        boolean z0;
        android.content.Context r13;

        r0 := @this: com.android.server.notification.ZenModeHelper$Metrics;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = r0.<com.android.server.notification.ZenModeHelper$Metrics: long mTypeLogTimeMs>;

        l1 = l0 - $l3;

        $r3 = r0.<com.android.server.notification.ZenModeHelper$Metrics: com.android.server.notification.ZenModeHelper this$0>;

        r1 = $r3.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.notification.ZenModeHelper$Metrics: com.android.server.notification.ZenModeHelper this$0>;

        i8 = $r4.<com.android.server.notification.ZenModeHelper: int mZenMode>;

     label02:
        if i8 == 0 goto label03;

        z0 = 1;

        goto label04;

     label03:
        z0 = 0;

     label04:
        if z0 != 0 goto label05;

        b9 = 0;

        goto label08;

     label05:
        $r5 = r0.<com.android.server.notification.ZenModeHelper$Metrics: com.android.server.notification.ZenModeHelper this$0>;

        $r6 = $r5.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r7 = $r6.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        if $r7 == null goto label07;

     label06:
        b9 = 1;

        goto label08;

     label07:
        b9 = 2;

     label08:
        $i10 = r0.<com.android.server.notification.ZenModeHelper$Metrics: int mPreviousZenType>;

        if b9 != $i10 goto label10;

     label09:
        $b7 = l1 cmp 60000L;

        if $b7 <= 0 goto label12;

     label10:
        $i4 = r0.<com.android.server.notification.ZenModeHelper$Metrics: int mPreviousZenType>;

        if $i4 == -1 goto label11;

        $r8 = r0.<com.android.server.notification.ZenModeHelper$Metrics: com.android.server.notification.ZenModeHelper this$0>;

        r13 = staticinvoke <com.android.server.notification.ZenModeHelper: android.content.Context access$700(com.android.server.notification.ZenModeHelper)>($r8);

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dnd_type_");

        $i5 = r0.<com.android.server.notification.ZenModeHelper$Metrics: int mPreviousZenType>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i6 = (int) l1;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>(r13, $r11, $i6);

     label11:
        r0.<com.android.server.notification.ZenModeHelper$Metrics: long mTypeLogTimeMs> = l0;

        r0.<com.android.server.notification.ZenModeHelper$Metrics: int mPreviousZenType> = b9;

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r12 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    private void emitRules()
    {
        com.android.server.notification.ZenModeHelper$Metrics r0;
        long l0, $l2, $l3;
        android.service.notification.ZenModeConfig r1, $r5;
        int i1, $i4, $i5, $i6, $i7;
        com.android.server.notification.ZenModeHelper $r3, $r4, $r7;
        android.util.ArrayMap $r6;
        android.content.Context $r8;
        byte $b8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.notification.ZenModeHelper$Metrics;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = r0.<com.android.server.notification.ZenModeHelper$Metrics: long mRuleCountLogTime>;

        l0 = $l2 - $l3;

        $r3 = r0.<com.android.server.notification.ZenModeHelper$Metrics: com.android.server.notification.ZenModeHelper this$0>;

        r1 = $r3.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.notification.ZenModeHelper$Metrics: com.android.server.notification.ZenModeHelper this$0>;

        $r5 = $r4.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r6 = $r5.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        i1 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        $i4 = r0.<com.android.server.notification.ZenModeHelper$Metrics: int mNumZenRules>;

        if $i4 != i1 goto label3;

     label2:
        $b8 = l0 cmp 60000L;

        if $b8 <= 0 goto label5;

     label3:
        $i5 = r0.<com.android.server.notification.ZenModeHelper$Metrics: int mNumZenRules>;

        if $i5 == -1 goto label4;

        $r7 = r0.<com.android.server.notification.ZenModeHelper$Metrics: com.android.server.notification.ZenModeHelper this$0>;

        $r8 = staticinvoke <com.android.server.notification.ZenModeHelper: android.content.Context access$700(com.android.server.notification.ZenModeHelper)>($r7);

        $i6 = r0.<com.android.server.notification.ZenModeHelper$Metrics: int mNumZenRules>;

        $i7 = i1 - $i6;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r8, "dnd_rule_count", $i7);

     label4:
        r0.<com.android.server.notification.ZenModeHelper$Metrics: int mNumZenRules> = i1;

        r0.<com.android.server.notification.ZenModeHelper$Metrics: long mRuleCountLogTime> = l0;

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void emitZenMode()
    {
        com.android.server.notification.ZenModeHelper$Metrics r0;
        long l0, l1, $l2;
        android.content.Context r1;
        com.android.server.notification.ZenModeHelper $r3, $r4, $r5;
        int $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;
        byte $b9;

        r0 := @this: com.android.server.notification.ZenModeHelper$Metrics;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<com.android.server.notification.ZenModeHelper$Metrics: long mModeLogTimeMs>;

        l1 = l0 - $l2;

        $i4 = r0.<com.android.server.notification.ZenModeHelper$Metrics: int mPreviousZenMode>;

        $r3 = r0.<com.android.server.notification.ZenModeHelper$Metrics: com.android.server.notification.ZenModeHelper this$0>;

        $i3 = $r3.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        if $i4 != $i3 goto label1;

        $b9 = l1 cmp 60000L;

        if $b9 <= 0 goto label3;

     label1:
        $i5 = r0.<com.android.server.notification.ZenModeHelper$Metrics: int mPreviousZenMode>;

        if $i5 == -1 goto label2;

        $r5 = r0.<com.android.server.notification.ZenModeHelper$Metrics: com.android.server.notification.ZenModeHelper this$0>;

        r1 = staticinvoke <com.android.server.notification.ZenModeHelper: android.content.Context access$700(com.android.server.notification.ZenModeHelper)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dnd_mode_");

        $i7 = r0.<com.android.server.notification.ZenModeHelper$Metrics: int mPreviousZenMode>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $i8 = (int) l1;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>(r1, $r9, $i8);

     label2:
        $r4 = r0.<com.android.server.notification.ZenModeHelper$Metrics: com.android.server.notification.ZenModeHelper this$0>;

        $i6 = $r4.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        r0.<com.android.server.notification.ZenModeHelper$Metrics: int mPreviousZenMode> = $i6;

        r0.<com.android.server.notification.ZenModeHelper$Metrics: long mModeLogTimeMs> = l0;

     label3:
        return;
    }

    void onConfigChanged()
    {
        com.android.server.notification.ZenModeHelper$Metrics r0;

        r0 := @this: com.android.server.notification.ZenModeHelper$Metrics;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper$Metrics: void emit()>();

        return;
    }

    void onZenModeChanged()
    {
        com.android.server.notification.ZenModeHelper$Metrics r0;

        r0 := @this: com.android.server.notification.ZenModeHelper$Metrics;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper$Metrics: void emit()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.notification.ZenModeHelper$Metrics: long MINIMUM_LOG_PERIOD_MS> = 60000L;

        <com.android.server.notification.ZenModeHelper$Metrics: int DND_ON_MANUAL> = 1;

        <com.android.server.notification.ZenModeHelper$Metrics: int DND_ON_AUTOMATIC> = 2;

        <com.android.server.notification.ZenModeHelper$Metrics: int DND_OFF> = 0;

        <com.android.server.notification.ZenModeHelper$Metrics: java.lang.String COUNTER_TYPE_PREFIX> = "dnd_type_";

        <com.android.server.notification.ZenModeHelper$Metrics: java.lang.String COUNTER_RULE> = "dnd_rule_count";

        <com.android.server.notification.ZenModeHelper$Metrics: java.lang.String COUNTER_MODE_PREFIX> = "dnd_mode_";

        return;
    }
}
