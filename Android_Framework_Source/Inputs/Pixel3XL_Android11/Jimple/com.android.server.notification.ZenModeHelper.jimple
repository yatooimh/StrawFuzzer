public class com.android.server.notification.ZenModeHelper extends java.lang.Object
{
    static final boolean DEBUG;
    private static final int RULE_INSTANCE_GRACE_PERIOD;
    public static final long SUPPRESSED_EFFECT_ALL;
    public static final long SUPPRESSED_EFFECT_CALLS;
    public static final long SUPPRESSED_EFFECT_NOTIFICATIONS;
    static final java.lang.String TAG;
    private final android.app.AppOpsManager mAppOps;
    protected android.media.AudioManagerInternal mAudioManager;
    private final java.util.ArrayList mCallbacks;
    protected final com.android.server.notification.ZenModeConditions mConditions;
    protected android.service.notification.ZenModeConfig mConfig;
    final android.util.SparseArray mConfigs;
    protected android.app.NotificationManager$Policy mConsolidatedPolicy;
    private final android.content.Context mContext;
    protected android.service.notification.ZenModeConfig mDefaultConfig;
    private final com.android.server.notification.ZenModeFiltering mFiltering;
    private final com.android.server.notification.ZenModeHelper$H mHandler;
    protected boolean mIsBootComplete;
    private final com.android.server.notification.ZenModeHelper$Metrics mMetrics;
    protected final android.app.NotificationManager mNotificationManager;
    protected android.content.pm.PackageManager mPm;
    private java.lang.String[] mPriorityOnlyDndExemptPackages;
    protected final com.android.server.notification.ZenModeHelper$RingerModeDelegate mRingerModeDelegate;
    private final com.android.server.notification.ManagedServices$Config mServiceConfig;
    private final com.android.server.notification.ZenModeHelper$SettingsObserver mSettingsObserver;
    private final com.android.server.notification.SysUiStatsEvent$BuilderFactory mStatsEventBuilderFactory;
    private long mSuppressedEffects;
    private int mUser;
    protected int mZenMode;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.notification.ZenModeHelper: java.lang.String TAG> = "ZenModeHelper";

        <com.android.server.notification.ZenModeHelper: long SUPPRESSED_EFFECT_NOTIFICATIONS> = 1L;

        <com.android.server.notification.ZenModeHelper: long SUPPRESSED_EFFECT_CALLS> = 2L;

        <com.android.server.notification.ZenModeHelper: long SUPPRESSED_EFFECT_ALL> = 3L;

        <com.android.server.notification.ZenModeHelper: int RULE_INSTANCE_GRACE_PERIOD> = 259200000;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ZenModeHelper", 3);

        <com.android.server.notification.ZenModeHelper: boolean DEBUG> = $z0;

        return;
    }

    public void <init>(android.content.Context, android.os.Looper, com.android.server.notification.ConditionProviders, com.android.server.notification.SysUiStatsEvent$BuilderFactory)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.os.Looper r1;
        com.android.server.notification.ConditionProviders r2;
        com.android.server.notification.SysUiStatsEvent$BuilderFactory r3;
        java.util.ArrayList $r4;
        com.android.server.notification.ZenModeHelper$RingerModeDelegate $r5;
        android.util.SparseArray $r6, $r18;
        com.android.server.notification.ZenModeHelper$Metrics $r7, $r9;
        com.android.server.notification.ZenModeHelper$H $r8, $r22;
        java.lang.Object $r10, $r12;
        android.app.AppOpsManager $r11;
        android.app.NotificationManager $r13;
        android.content.Context $r14, $r24, r27;
        android.content.res.Resources $r15;
        android.service.notification.ZenModeConfig $r16, $r17, $r19, r28;
        android.app.NotificationManager$Policy $r20;
        com.android.server.notification.ZenModeHelper$SettingsObserver $r21;
        com.android.server.notification.ZenModeFiltering $r23;
        com.android.server.notification.ZenModeConditions $r25;
        com.android.server.notification.ManagedServices$Config $r26;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r27 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Looper;

        r2 := @parameter2: com.android.server.notification.ConditionProviders;

        r3 := @parameter3: com.android.server.notification.SysUiStatsEvent$BuilderFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.notification.ZenModeHelper: java.util.ArrayList mCallbacks> = $r4;

        $r5 = new com.android.server.notification.ZenModeHelper$RingerModeDelegate;

        specialinvoke $r5.<com.android.server.notification.ZenModeHelper$RingerModeDelegate: void <init>(com.android.server.notification.ZenModeHelper)>(r0);

        r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$RingerModeDelegate mRingerModeDelegate> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs> = $r6;

        $r7 = new com.android.server.notification.ZenModeHelper$Metrics;

        specialinvoke $r7.<com.android.server.notification.ZenModeHelper$Metrics: void <init>(com.android.server.notification.ZenModeHelper,com.android.server.notification.ZenModeHelper$1)>(r0, null);

        r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$Metrics mMetrics> = $r7;

        r0.<com.android.server.notification.ZenModeHelper: int mUser> = 0;

        r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext> = r27;

        $r8 = new com.android.server.notification.ZenModeHelper$H;

        specialinvoke $r8.<com.android.server.notification.ZenModeHelper$H: void <init>(com.android.server.notification.ZenModeHelper,android.os.Looper,com.android.server.notification.ZenModeHelper$1)>(r0, r1, null);

        r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$H mHandler> = $r8;

        $r9 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$Metrics mMetrics>;

        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void addCallback(com.android.server.notification.ZenModeHelper$Callback)>($r9);

        $r10 = virtualinvoke r27.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r11 = (android.app.AppOpsManager) $r10;

        r0.<com.android.server.notification.ZenModeHelper: android.app.AppOpsManager mAppOps> = $r11;

        $r12 = virtualinvoke r27.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/NotificationManager;");

        $r13 = (android.app.NotificationManager) $r12;

        r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager mNotificationManager> = $r13;

        $r14 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        $r16 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig readDefaultConfig(android.content.res.Resources)>($r15);

        r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mDefaultConfig> = $r16;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void updateDefaultAutomaticRuleNames()>();

        $r17 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mDefaultConfig>;

        r28 = virtualinvoke $r17.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>();

        r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig> = r28;

        $r18 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        virtualinvoke $r18.<android.util.SparseArray: void put(int,java.lang.Object)>(0, r28);

        $r19 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r20 = virtualinvoke $r19.<android.service.notification.ZenModeConfig: android.app.NotificationManager$Policy toNotificationPolicy()>();

        r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy> = $r20;

        $r21 = new com.android.server.notification.ZenModeHelper$SettingsObserver;

        $r22 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$H mHandler>;

        specialinvoke $r21.<com.android.server.notification.ZenModeHelper$SettingsObserver: void <init>(com.android.server.notification.ZenModeHelper,android.os.Handler)>(r0, $r22);

        r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$SettingsObserver mSettingsObserver> = $r21;

        virtualinvoke $r21.<com.android.server.notification.ZenModeHelper$SettingsObserver: void observe()>();

        $r23 = new com.android.server.notification.ZenModeFiltering;

        $r24 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        specialinvoke $r23.<com.android.server.notification.ZenModeFiltering: void <init>(android.content.Context)>($r24);

        r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeFiltering mFiltering> = $r23;

        $r25 = new com.android.server.notification.ZenModeConditions;

        specialinvoke $r25.<com.android.server.notification.ZenModeConditions: void <init>(com.android.server.notification.ZenModeHelper,com.android.server.notification.ConditionProviders)>(r0, r2);

        r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeConditions mConditions> = $r25;

        $r26 = virtualinvoke r2.<com.android.server.notification.ConditionProviders: com.android.server.notification.ManagedServices$Config getConfig()>();

        r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ManagedServices$Config mServiceConfig> = $r26;

        r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.SysUiStatsEvent$BuilderFactory mStatsEventBuilderFactory> = r3;

        return;
    }

    static void access$1000(com.android.server.notification.ZenModeHelper)
    {
        com.android.server.notification.ZenModeHelper r0;

        r0 := @parameter0: com.android.server.notification.ZenModeHelper;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void dispatchOnZenModeChanged()>();

        return;
    }

    static com.android.server.notification.ZenModeHelper$Metrics access$1100(com.android.server.notification.ZenModeHelper)
    {
        com.android.server.notification.ZenModeHelper r0;
        com.android.server.notification.ZenModeHelper$Metrics $r1;

        r0 := @parameter0: com.android.server.notification.ZenModeHelper;

        $r1 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$Metrics mMetrics>;

        return $r1;
    }

    static void access$1300(com.android.server.notification.ZenModeHelper, android.service.notification.ZenModeConfig, java.lang.String, android.content.ComponentName, boolean)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1;
        java.lang.String r2;
        android.content.ComponentName r3;
        boolean z0;

        r0 := @parameter0: com.android.server.notification.ZenModeHelper;

        r1 := @parameter1: android.service.notification.ZenModeConfig;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.content.ComponentName;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void applyConfig(android.service.notification.ZenModeConfig,java.lang.String,android.content.ComponentName,boolean)>(r1, r2, r3, z0);

        return;
    }

    static void access$500(com.android.server.notification.ZenModeHelper, java.lang.Integer)
    {
        com.android.server.notification.ZenModeHelper r0;
        java.lang.Integer r1;

        r0 := @parameter0: com.android.server.notification.ZenModeHelper;

        r1 := @parameter1: java.lang.Integer;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void setPreviousRingerModeSetting(java.lang.Integer)>(r1);

        return;
    }

    static void access$600(com.android.server.notification.ZenModeHelper, int, android.net.Uri, java.lang.String, java.lang.String, boolean)
    {
        com.android.server.notification.ZenModeHelper r0;
        int i0;
        android.net.Uri r1;
        java.lang.String r2, r3;
        boolean z0;

        r0 := @parameter0: com.android.server.notification.ZenModeHelper;

        i0 := @parameter1: int;

        r1 := @parameter2: android.net.Uri;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void setManualZenMode(int,android.net.Uri,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, r3, z0);

        return;
    }

    static android.content.Context access$700(com.android.server.notification.ZenModeHelper)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.notification.ZenModeHelper;

        $r1 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        return $r1;
    }

    static int access$800(com.android.server.notification.ZenModeHelper)
    {
        com.android.server.notification.ZenModeHelper r0;
        int $i0;

        r0 := @parameter0: com.android.server.notification.ZenModeHelper;

        $i0 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: int getZenModeSetting()>();

        return $i0;
    }

    static com.android.server.notification.ZenModeHelper$H access$900(com.android.server.notification.ZenModeHelper)
    {
        com.android.server.notification.ZenModeHelper r0;
        com.android.server.notification.ZenModeHelper$H $r1;

        r0 := @parameter0: com.android.server.notification.ZenModeHelper;

        $r1 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$H mHandler>;

        return $r1;
    }

    private void applyConfig(android.service.notification.ZenModeConfig, java.lang.String, android.content.ComponentName, boolean)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1;
        java.lang.String r2, r4;
        android.content.ComponentName r3;
        boolean z0;
        int $i0;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        com.android.server.notification.ZenModeConditions $r7;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: android.service.notification.ZenModeConfig;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        z0 := @parameter3: boolean;

        $i0 = virtualinvoke r1.<android.service.notification.ZenModeConfig: int hashCode()>();

        r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r6, "zen_mode_config_etag", r4);

        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void evaluateZenMode(java.lang.String,boolean)>(r2, z0);

        $r7 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeConditions mConditions>;

        virtualinvoke $r7.<com.android.server.notification.ZenModeConditions: void evaluateConfig(android.service.notification.ZenModeConfig,android.content.ComponentName,boolean)>(r1, r3, 1);

        return;
    }

    private void applyCustomPolicy(android.service.notification.ZenPolicy, android.service.notification.ZenModeConfig$ZenRule)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenPolicy r1, $r3, $r8, $r11;
        android.service.notification.ZenModeConfig$ZenRule r2;
        int $i0, $i1;
        android.service.notification.ZenPolicy$Builder $r4, $r5, $r6, $r7, $r9, $r10;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: android.service.notification.ZenPolicy;

        r2 := @parameter1: android.service.notification.ZenModeConfig$ZenRule;

        $i0 = r2.<android.service.notification.ZenModeConfig$ZenRule: int zenMode>;

        if $i0 != 2 goto label1;

        $r9 = new android.service.notification.ZenPolicy$Builder;

        specialinvoke $r9.<android.service.notification.ZenPolicy$Builder: void <init>()>();

        $r10 = virtualinvoke $r9.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder disallowAllSounds()>();

        $r11 = virtualinvoke $r10.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy build()>();

        virtualinvoke r1.<android.service.notification.ZenPolicy: void apply(android.service.notification.ZenPolicy)>($r11);

        goto label3;

     label1:
        $i1 = r2.<android.service.notification.ZenModeConfig$ZenRule: int zenMode>;

        if $i1 != 3 goto label2;

        $r4 = new android.service.notification.ZenPolicy$Builder;

        specialinvoke $r4.<android.service.notification.ZenPolicy$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder disallowAllSounds()>();

        $r6 = virtualinvoke $r5.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowAlarms(boolean)>(1);

        $r7 = virtualinvoke $r6.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowMedia(boolean)>(1);

        $r8 = virtualinvoke $r7.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy build()>();

        virtualinvoke r1.<android.service.notification.ZenPolicy: void apply(android.service.notification.ZenPolicy)>($r8);

        goto label3;

     label2:
        $r3 = r2.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.ZenPolicy zenPolicy>;

        virtualinvoke r1.<android.service.notification.ZenPolicy: void apply(android.service.notification.ZenPolicy)>($r3);

     label3:
        return;
    }

    private void cleanUpZenRules()
    {
        com.android.server.notification.ZenModeHelper r0;
        long l0, l1, $l3;
        android.service.notification.ZenModeConfig r1, $r2, r17;
        android.util.ArrayMap $r3, $r4, $r5, $r6, $r15;
        int $i2, i5;
        java.lang.Object $r7, $r8;
        byte $b4;
        java.lang.String $r9, $r10;
        android.content.pm.PackageManager $r11;
        java.lang.Throwable $r13;
        android.content.pm.PackageManager$NameNotFoundException $r14;
        android.service.notification.ZenModeConfig$ZenRule r18;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        r17 = virtualinvoke $r2.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>();

        $r3 = r17.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        if $r3 == null goto label10;

        $r4 = r17.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $i2 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        i5 = $i2 - 1;

     label02:
        if i5 < 0 goto label10;

     label03:
        $r6 = r17.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r5 = r17.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r7 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i5);

        $r8 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r7);

        r18 = (android.service.notification.ZenModeConfig$ZenRule) $r8;

        l1 = r18.<android.service.notification.ZenModeConfig$ZenRule: long creationTime>;

     label04:
        $l3 = l0 - l1;

        $b4 = 259200000L cmp $l3;

        if $b4 >= 0 goto label09;

     label05:
        $r9 = r18.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String pkg>;

        if $r9 == null goto label06;

        $r11 = r0.<com.android.server.notification.ZenModeHelper: android.content.pm.PackageManager mPm>;

        $r10 = r18.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String pkg>;

        virtualinvoke $r11.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r10, 4194304);

     label06:
        goto label09;

     label07:
        $r14 := @caughtexception;

     label08:
        $r15 = r17.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i5);

     label09:
        i5 = i5 + -1;

        goto label02;

     label10:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,android.content.ComponentName,java.lang.String)>(r17, null, "cleanUpZenRules");

     label11:
        exitmonitor r1;

     label12:
        return;

     label13:
        $r13 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private int computeZenMode()
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1, $r3, $r5, $r13;
        java.util.Iterator r2;
        android.service.notification.ZenModeConfig$ZenRule $r4, $r14, r16;
        android.util.ArrayMap $r6;
        java.util.Collection $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        android.content.Context $r9, $r11;
        android.content.ContentResolver $r10, $r12;
        java.lang.Throwable $r15;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        if r1 != null goto label01;

        return 0;

     label01:
        entermonitor r1;

     label02:
        $r3 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r4 = $r3.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        if $r4 == null goto label04;

        $r13 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r14 = $r13.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        i4 = $r14.<android.service.notification.ZenModeConfig$ZenRule: int zenMode>;

        exitmonitor r1;

     label03:
        return i4;

     label04:
        i5 = 0;

     label05:
        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r6 = $r5.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r16 = (android.service.notification.ZenModeConfig$ZenRule) $r8;

     label07:
        i6 = i5;

     label08:
        $z1 = virtualinvoke r16.<android.service.notification.ZenModeConfig$ZenRule: boolean isAutomaticActive()>();

        if $z1 == 0 goto label12;

     label09:
        i6 = i5;

     label10:
        $i0 = r16.<android.service.notification.ZenModeConfig$ZenRule: int zenMode>;

        $i1 = staticinvoke <com.android.server.notification.ZenModeHelper: int zenSeverity(int)>($i0);

        $i2 = staticinvoke <com.android.server.notification.ZenModeHelper: int zenSeverity(int)>(i5);

        if $i1 <= $i2 goto label12;

        $r9 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i3 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r10, "zen_settings_suggestion_viewed", 1);

        if $i3 != 0 goto label11;

        $r11 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r12, "show_zen_settings_suggestion", 1);

     label11:
        i6 = r16.<android.service.notification.ZenModeConfig$ZenRule: int zenMode>;

     label12:
        i5 = i6;

        goto label06;

     label13:
        exitmonitor r1;

     label14:
        return i5;

     label15:
        $r15 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r15;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    private void dispatchOnAutomaticRuleStatusChanged(int, java.lang.String, java.lang.String, int)
    {
        com.android.server.notification.ZenModeHelper r0;
        int i0, i1;
        java.lang.String r1, r2;
        java.util.Iterator r3;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.android.server.notification.ZenModeHelper$Callback $r6;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        $r4 = r0.<com.android.server.notification.ZenModeHelper: java.util.ArrayList mCallbacks>;

        r3 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.notification.ZenModeHelper$Callback) $r5;

        virtualinvoke $r6.<com.android.server.notification.ZenModeHelper$Callback: void onAutomaticRuleStatusChanged(int,java.lang.String,java.lang.String,int)>(i0, r1, r2, i1);

        goto label1;

     label2:
        return;
    }

    private void dispatchOnConfigChanged()
    {
        com.android.server.notification.ZenModeHelper r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.server.notification.ZenModeHelper$Callback $r4;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $r2 = r0.<com.android.server.notification.ZenModeHelper: java.util.ArrayList mCallbacks>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.notification.ZenModeHelper$Callback) $r3;

        virtualinvoke $r4.<com.android.server.notification.ZenModeHelper$Callback: void onConfigChanged()>();

        goto label1;

     label2:
        return;
    }

    private void dispatchOnConsolidatedPolicyChanged()
    {
        com.android.server.notification.ZenModeHelper r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.server.notification.ZenModeHelper$Callback $r4;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $r2 = r0.<com.android.server.notification.ZenModeHelper: java.util.ArrayList mCallbacks>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.notification.ZenModeHelper$Callback) $r3;

        virtualinvoke $r4.<com.android.server.notification.ZenModeHelper$Callback: void onConsolidatedPolicyChanged()>();

        goto label1;

     label2:
        return;
    }

    private void dispatchOnPolicyChanged()
    {
        com.android.server.notification.ZenModeHelper r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.server.notification.ZenModeHelper$Callback $r4;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $r2 = r0.<com.android.server.notification.ZenModeHelper: java.util.ArrayList mCallbacks>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.notification.ZenModeHelper$Callback) $r3;

        virtualinvoke $r4.<com.android.server.notification.ZenModeHelper$Callback: void onPolicyChanged()>();

        goto label1;

     label2:
        return;
    }

    private void dispatchOnZenModeChanged()
    {
        com.android.server.notification.ZenModeHelper r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.server.notification.ZenModeHelper$Callback $r4;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $r2 = r0.<com.android.server.notification.ZenModeHelper: java.util.ArrayList mCallbacks>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.notification.ZenModeHelper$Callback) $r3;

        virtualinvoke $r4.<com.android.server.notification.ZenModeHelper$Callback: void onZenModeChanged()>();

        goto label1;

     label2:
        return;
    }

    private static void dump(java.io.PrintWriter, java.lang.String, java.lang.String, android.service.notification.ZenModeConfig)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r8, $r11, $r13, r25, r26;
        android.service.notification.ZenModeConfig r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object[] $r3, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.Boolean $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r14, $r15;
        java.lang.Integer $r18;
        android.service.notification.ZenModeConfig$ZenRule $r20;
        android.util.ArrayMap $r21, $r22, $r23;
        java.lang.Object $r24;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r25 := @parameter2: java.lang.String;

        r2 := @parameter3: android.service.notification.ZenModeConfig;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r25);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(61);

        if r2 != null goto label1;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.Object)>(r2);

        return;

     label1:
        $r3 = newarray (java.lang.Object)[12];

        $z0 = r2.<android.service.notification.ZenModeConfig: boolean allowAlarms>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3[0] = $r4;

        $z1 = r2.<android.service.notification.ZenModeConfig: boolean allowMedia>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r3[1] = $r5;

        $z2 = r2.<android.service.notification.ZenModeConfig: boolean allowSystem>;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r3[2] = $r6;

        $z3 = r2.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $r3[3] = $r7;

        $i1 = r2.<android.service.notification.ZenModeConfig: int allowCallsFrom>;

        $r8 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.String sourceToString(int)>($i1);

        $r3[4] = $r8;

        $z4 = r2.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $r3[5] = $r9;

        $z5 = r2.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        $r3[6] = $r10;

        $i2 = r2.<android.service.notification.ZenModeConfig: int allowMessagesFrom>;

        $r11 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.String sourceToString(int)>($i2);

        $r3[7] = $r11;

        $z6 = r2.<android.service.notification.ZenModeConfig: boolean allowConversations>;

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        $r3[8] = $r12;

        $i3 = r2.<android.service.notification.ZenModeConfig: int allowConversationsFrom>;

        $r13 = staticinvoke <android.service.notification.ZenPolicy: java.lang.String conversationTypeToString(int)>($i3);

        $r3[9] = $r13;

        $z7 = r2.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);

        $r3[10] = $r14;

        $z8 = r2.<android.service.notification.ZenModeConfig: boolean allowReminders>;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8);

        $r3[11] = $r15;

        virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("allow(alarms=%b,media=%b,system=%b,calls=%b,callsFrom=%s,repeatCallers=%b,messages=%b,messagesFrom=%s,conversations=%b,conversationsFrom=%s,events=%b,reminders=%b)\n", $r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $r17 = newarray (java.lang.Object)[1];

        $i4 = r2.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r17[0] = $r18;

        virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("  disallow(visualEffects=%s)\n", $r17);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("  manualRule=");

        $r20 = r2.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.Object)>($r20);

        $r21 = r2.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $z9 = virtualinvoke $r21.<android.util.ArrayMap: boolean isEmpty()>();

        if $z9 == 0 goto label2;

        return;

     label2:
        $r22 = r2.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        i0 = virtualinvoke $r22.<android.util.ArrayMap: int size()>();

        i5 = 0;

     label3:
        if i5 >= i0 goto label6;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        if i5 != 0 goto label4;

        r26 = "  automaticRules=";

        goto label5;

     label4:
        r26 = "                 ";

     label5:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        $r23 = r2.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r24 = virtualinvoke $r23.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.Object)>($r24);

        i5 = i5 + 1;

        goto label3;

     label6:
        return;
    }

    private android.service.notification.ZenModeConfig$ZenRule findMatchingRule(android.service.notification.ZenModeConfig, android.net.Uri, android.service.notification.Condition)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.net.Uri r1;
        android.service.notification.Condition r2;
        java.util.Iterator r3;
        android.service.notification.ZenModeConfig$ZenRule $r4, $r8, r10;
        boolean $z0, $z1, $z2;
        android.util.ArrayMap $r5;
        java.util.Collection $r6;
        java.lang.Object $r7;
        android.service.notification.ZenModeConfig r9;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r9 := @parameter0: android.service.notification.ZenModeConfig;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.service.notification.Condition;

        $r4 = r9.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        $z0 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: boolean ruleMatches(android.net.Uri,android.service.notification.Condition,android.service.notification.ZenModeConfig$ZenRule)>(r1, r2, $r4);

        if $z0 == 0 goto label1;

        $r8 = r9.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        return $r8;

     label1:
        $r5 = r9.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r10 = (android.service.notification.ZenModeConfig$ZenRule) $r7;

        $z2 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: boolean ruleMatches(android.net.Uri,android.service.notification.Condition,android.service.notification.ZenModeConfig$ZenRule)>(r1, r2, r10);

        if $z2 == 0 goto label3;

        return r10;

     label3:
        goto label2;

     label4:
        return null;
    }

    private android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.content.Intent $r2;
        android.content.pm.PackageManager $r4;
        int $i0, $i1;
        java.lang.Object $r5;
        android.content.pm.ResolveInfo $r6;
        android.content.pm.ActivityInfo $r7;
        android.content.ComponentName r8;
        java.util.List r9;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r8 := @parameter0: android.content.ComponentName;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r8);

        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.content.pm.PackageManager mPm>;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r9 = virtualinvoke $r4.<android.content.pm.PackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>($r2, 129, $i0);

        if r9 == null goto label1;

        $i1 = interfaceinvoke r9.<java.util.List: int size()>();

        if $i1 >= 0 goto label1;

        $r5 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (android.content.pm.ResolveInfo) $r5;

        $r7 = $r6.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        return $r7;

     label1:
        return null;
    }

    private static android.app.NotificationManager$Policy getNotificationPolicy(android.service.notification.ZenModeConfig)
    {
        android.service.notification.ZenModeConfig r0;
        android.app.NotificationManager$Policy r1;

        r0 := @parameter0: android.service.notification.ZenModeConfig;

        if r0 != null goto label1;

        r1 = null;

        goto label2;

     label1:
        r1 = virtualinvoke r0.<android.service.notification.ZenModeConfig: android.app.NotificationManager$Policy toNotificationPolicy()>();

     label2:
        return r1;
    }

    private int getPreviousRingerModeSetting()
    {
        com.android.server.notification.ZenModeHelper r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $r1 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "zen_mode_ringer_level", 2);

        return $i0;
    }

    private android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName)
    {
        com.android.server.notification.ZenModeHelper r0;
        int i0, $i1, i2;
        android.content.Intent $r1;
        android.content.pm.PackageManager $r3;
        java.lang.Object $r4;
        android.content.pm.ResolveInfo $r5;
        com.android.server.notification.ManagedServices$Config $r6;
        java.lang.String $r7, $r8;
        boolean $z0;
        android.content.ComponentName r9;
        java.util.List r11;
        android.content.pm.ServiceInfo r12;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r9 := @parameter0: android.content.ComponentName;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>()>();

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r9);

        $r3 = r0.<com.android.server.notification.ZenModeHelper: android.content.pm.PackageManager mPm>;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r11 = virtualinvoke $r3.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r1, 132, $i1);

        if r11 == null goto label3;

        i2 = 0;

        i0 = interfaceinvoke r11.<java.util.List: int size()>();

     label1:
        if i2 >= i0 goto label3;

        $r4 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(i2);

        $r5 = (android.content.pm.ResolveInfo) $r4;

        r12 = $r5.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r6 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ManagedServices$Config mServiceConfig>;

        $r8 = $r6.<com.android.server.notification.ManagedServices$Config: java.lang.String bindPermission>;

        $r7 = r12.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        return r12;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return null;
    }

    private int getZenModeSetting()
    {
        com.android.server.notification.ZenModeHelper r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $r1 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "zen_mode", 0);

        return $i0;
    }

    private boolean isSystemRule(android.app.AutomaticZenRule)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.app.AutomaticZenRule r1;
        android.content.ComponentName $r2, $r4;
        java.lang.String $r3, $r5;
        boolean $z0, z1;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: android.app.AutomaticZenRule;

        $r2 = virtualinvoke r1.<android.app.AutomaticZenRule: android.content.ComponentName getOwner()>();

        if $r2 == null goto label1;

        $r3 = "android";

        $r4 = virtualinvoke r1.<android.app.AutomaticZenRule: android.content.ComponentName getOwner()>();

        $r5 = virtualinvoke $r4.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private void loadConfigForUser(int, java.lang.String)
    {
        com.android.server.notification.ZenModeHelper r0;
        int i0, $i1;
        boolean $z0, $z2;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        android.service.notification.ZenModeConfig $r3, r17, r18, r20;
        java.lang.StringBuilder $r4, $r9;
        java.lang.String $r8, $r13, r15;
        java.lang.Throwable $r14;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        i0 := @parameter0: int;

        r15 := @parameter1: java.lang.String;

        $i1 = r0.<com.android.server.notification.ZenModeHelper: int mUser>;

        if $i1 == i0 goto label10;

        if i0 >= 0 goto label01;

        goto label10;

     label01:
        r0.<com.android.server.notification.ZenModeHelper: int mUser> = i0;

        $z0 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z0 == 0 goto label02;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ZenModeHelper", $r13);

     label02:
        $r1 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r17 = (android.service.notification.ZenModeConfig) $r2;

        r18 = r17;

        if r17 != null goto label04;

        $z2 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z2 == 0 goto label03;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" generating default config for user ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ZenModeHelper", $r8);

     label03:
        $r3 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mDefaultConfig>;

        r18 = virtualinvoke $r3.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>();

        r18.<android.service.notification.ZenModeConfig: int user> = i0;

     label04:
        r20 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r20;

     label05:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,android.content.ComponentName,java.lang.String)>(r18, null, r15);

        exitmonitor r20;

     label06:
        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void cleanUpZenRules()>();

        return;

     label07:
        $r14 := @caughtexception;

     label08:
        exitmonitor r20;

     label09:
        throw $r14;

     label10:
        return;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    private void populateZenRule(android.app.AutomaticZenRule, android.service.notification.ZenModeConfig$ZenRule, boolean)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.app.AutomaticZenRule r1;
        android.service.notification.ZenModeConfig$ZenRule r2;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String $r3, $r6, r12;
        android.net.Uri $r4;
        android.service.notification.ZenPolicy $r5;
        int $i0, $i1;
        long $l2;
        android.content.ComponentName $r7, $r8, $r9, $r10, $r11;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: android.app.AutomaticZenRule;

        r2 := @parameter1: android.service.notification.ZenModeConfig$ZenRule;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label3;

        $r6 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.String newRuleId()>();

        r2.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String id> = $r6;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r2.<android.service.notification.ZenModeConfig$ZenRule: long creationTime> = $l2;

        $r7 = virtualinvoke r1.<android.app.AutomaticZenRule: android.content.ComponentName getOwner()>();

        r2.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName component> = $r7;

        $r8 = virtualinvoke r1.<android.app.AutomaticZenRule: android.content.ComponentName getConfigurationActivity()>();

        r2.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName configurationActivity> = $r8;

        $r9 = r2.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName component>;

        if $r9 == null goto label1;

        $r11 = r2.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName component>;

        r12 = virtualinvoke $r11.<android.content.ComponentName: java.lang.String getPackageName()>();

        goto label2;

     label1:
        $r10 = r2.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName configurationActivity>;

        r12 = virtualinvoke $r10.<android.content.ComponentName: java.lang.String getPackageName()>();

     label2:
        r2.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String pkg> = r12;

     label3:
        $z3 = r2.<android.service.notification.ZenModeConfig$ZenRule: boolean enabled>;

        $z4 = virtualinvoke r1.<android.app.AutomaticZenRule: boolean isEnabled()>();

        if $z3 == $z4 goto label4;

        r2.<android.service.notification.ZenModeConfig$ZenRule: boolean snoozing> = 0;

     label4:
        $r3 = virtualinvoke r1.<android.app.AutomaticZenRule: java.lang.String getName()>();

        r2.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name> = $r3;

        r2.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.Condition condition> = null;

        $r4 = virtualinvoke r1.<android.app.AutomaticZenRule: android.net.Uri getConditionId()>();

        r2.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId> = $r4;

        $z1 = virtualinvoke r1.<android.app.AutomaticZenRule: boolean isEnabled()>();

        r2.<android.service.notification.ZenModeConfig$ZenRule: boolean enabled> = $z1;

        $z2 = virtualinvoke r1.<android.app.AutomaticZenRule: boolean isModified()>();

        r2.<android.service.notification.ZenModeConfig$ZenRule: boolean modified> = $z2;

        $r5 = virtualinvoke r1.<android.app.AutomaticZenRule: android.service.notification.ZenPolicy getZenPolicy()>();

        r2.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.ZenPolicy zenPolicy> = $r5;

        $i0 = virtualinvoke r1.<android.app.AutomaticZenRule: int getInterruptionFilter()>();

        $i1 = staticinvoke <android.app.NotificationManager: int zenModeFromInterruptionFilter(int,int)>($i0, 0);

        r2.<android.service.notification.ZenModeConfig$ZenRule: int zenMode> = $i1;

        return;
    }

    private android.service.notification.ZenModeConfig readDefaultConfig(android.content.res.Resources)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1, $r2;
        int $i0;
        java.lang.Throwable $r3;
        java.lang.Exception $r4;
        android.content.res.Resources r5;
        android.content.res.XmlResourceParser r6, r7, r8;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r5 := @parameter0: android.content.res.Resources;

        r6 = null;

        r7 = null;

     label01:
        r8 = virtualinvoke r5.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(18284552);

     label02:
        r7 = r8;

        r6 = r8;

     label03:
        $i0 = interfaceinvoke r8.<android.content.res.XmlResourceParser: int next()>();

        if $i0 == 1 goto label08;

     label04:
        r7 = r8;

        r6 = r8;

     label05:
        r1 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig readXml(org.xmlpull.v1.XmlPullParser)>(r8);

     label06:
        if r1 == null goto label07;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r8);

        return r1;

     label07:
        goto label02;

     label08:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r8);

        goto label13;

     label09:
        $r3 := @caughtexception;

        goto label14;

     label10:
        $r4 := @caughtexception;

        r7 = r6;

     label11:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ZenModeHelper", "Error reading default zen mode config from resource", $r4);

     label12:
        r8 = r6;

        goto label08;

     label13:
        $r2 = new android.service.notification.ZenModeConfig;

        specialinvoke $r2.<android.service.notification.ZenModeConfig: void <init>()>();

        return $r2;

     label14:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r7);

        throw $r3;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
    }

    private boolean ruleMatches(android.net.Uri, android.service.notification.Condition, android.service.notification.ZenModeConfig$ZenRule)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.net.Uri r1, $r4, $r5;
        android.service.notification.Condition r2, $r6;
        android.service.notification.ZenModeConfig$ZenRule r3;
        boolean $z0, $z1;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.service.notification.Condition;

        r3 := @parameter2: android.service.notification.ZenModeConfig$ZenRule;

        if r1 == null goto label4;

        if r3 == null goto label4;

        $r4 = r3.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        if $r4 != null goto label1;

        goto label4;

     label1:
        $r5 = r3.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        $z0 = virtualinvoke $r5.<android.net.Uri: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r6 = r3.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.Condition condition>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r2, $r6);

        if $z1 == 0 goto label3;

        return 0;

     label3:
        return 1;

     label4:
        return 0;
    }

    private void ruleToProto(int, android.service.notification.ZenModeConfig$ZenRule, java.util.List)
    {
        com.android.server.notification.ZenModeHelper r0;
        int i0, $i1;
        android.service.notification.ZenModeConfig$ZenRule r1;
        java.util.List r2, $r4;
        boolean $z0, $z1, $z2;
        java.lang.String $r5, $r6, $r7, r21, r22, r23, r24;
        com.android.server.notification.SysUiStatsEvent$BuilderFactory $r8;
        com.android.server.notification.SysUiStatsEvent$Builder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, r25;
        android.service.notification.ZenPolicy $r17, $r20;
        android.util.StatsEvent $r19;
        short s2;
        byte[] r26;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.service.notification.ZenModeConfig$ZenRule;

        r2 := @parameter2: java.util.List;

        r21 = r1.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String id>;

        if r21 != null goto label1;

        r22 = "";

        goto label2;

     label1:
        r22 = r1.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String id>;

     label2:
        r23 = r22;

        $r4 = <android.service.notification.ZenModeConfig: java.util.List DEFAULT_RULE_IDS>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r22);

        if $z0 != 0 goto label3;

        r23 = "";

     label3:
        $r5 = r1.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String pkg>;

        if $r5 != null goto label4;

        r24 = "";

        goto label5;

     label4:
        r24 = r1.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String pkg>;

     label5:
        $r6 = r1.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String enabler>;

        if $r6 == null goto label6;

        r24 = r1.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String enabler>;

        r23 = "MANUAL_RULE";

     label6:
        $r7 = "android";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z1 == 0 goto label7;

        s2 = 1000;

        goto label8;

     label7:
        s2 = 0;

     label8:
        $r8 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.SysUiStatsEvent$BuilderFactory mStatsEventBuilderFactory>;

        $r9 = virtualinvoke $r8.<com.android.server.notification.SysUiStatsEvent$BuilderFactory: com.android.server.notification.SysUiStatsEvent$Builder newBuilder()>();

        $r10 = virtualinvoke $r9.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder setAtomId(int)>(10084);

        $r11 = virtualinvoke $r10.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeInt(int)>(i0);

        $z2 = r1.<android.service.notification.ZenModeConfig$ZenRule: boolean enabled>;

        $r12 = virtualinvoke $r11.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeBoolean(boolean)>($z2);

        $r13 = virtualinvoke $r12.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeBoolean(boolean)>(0);

        $i1 = r1.<android.service.notification.ZenModeConfig$ZenRule: int zenMode>;

        $r14 = virtualinvoke $r13.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeInt(int)>($i1);

        $r15 = virtualinvoke $r14.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeString(java.lang.String)>(r23);

        $r16 = virtualinvoke $r15.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeInt(int)>(s2);

        r25 = virtualinvoke $r16.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder addBooleanAnnotation(byte,boolean)>(1, 1);

        r26 = newarray (byte)[0];

        $r17 = r1.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.ZenPolicy zenPolicy>;

        if $r17 == null goto label9;

        $r20 = r1.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.ZenPolicy zenPolicy>;

        r26 = virtualinvoke $r20.<android.service.notification.ZenPolicy: byte[] toProto()>();

     label9:
        virtualinvoke r25.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeByteArray(byte[])>(r26);

        $r19 = virtualinvoke r25.<com.android.server.notification.SysUiStatsEvent$Builder: android.util.StatsEvent build()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r19);

        return;
    }

    private void setAutomaticZenRuleStateLocked(android.service.notification.ZenModeConfig, android.service.notification.ZenModeConfig$ZenRule, android.service.notification.Condition)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1;
        android.service.notification.ZenModeConfig$ZenRule r2;
        android.service.notification.Condition r3;
        android.content.ComponentName $r4;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: android.service.notification.ZenModeConfig;

        r2 := @parameter1: android.service.notification.ZenModeConfig$ZenRule;

        r3 := @parameter2: android.service.notification.Condition;

        if r2 != null goto label1;

        return;

     label1:
        r2.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.Condition condition> = r3;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: boolean updateSnoozing(android.service.notification.ZenModeConfig$ZenRule)>(r2);

        $r4 = r2.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName component>;

        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,android.content.ComponentName,java.lang.String)>(r1, $r4, "conditionChanged");

        return;
    }

    private boolean setConfigLocked(android.service.notification.ZenModeConfig, java.lang.String, android.content.ComponentName, boolean)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.content.ComponentName r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;
        long l0;
        java.lang.String r2, $r5, $r19, r23;
        int $i2, $i3, $i4, $i6, $i7;
        com.android.server.notification.ZenModeConditions $r6;
        android.util.SparseArray $r7, $r16;
        android.service.notification.ZenModeConfig $r8, $r9, $r12, r22;
        android.app.NotificationManager$Policy $r10, $r11;
        com.android.server.notification.ZenModeHelper$H $r13;
        java.lang.Throwable $r20, $r21, r26;
        java.lang.StringBuilder r24, r25, r29;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r22 := @parameter0: android.service.notification.ZenModeConfig;

        r23 := @parameter1: java.lang.String;

        r1 := @parameter2: android.content.ComponentName;

        z0 := @parameter3: boolean;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r22 == null goto label16;

     label01:
        $z1 = virtualinvoke r22.<android.service.notification.ZenModeConfig: boolean isValid()>();

        if $z1 != 0 goto label03;

     label02:
        goto label16;

     label03:
        $i3 = r22.<android.service.notification.ZenModeConfig: int user>;

        $i2 = r0.<com.android.server.notification.ZenModeHelper: int mUser>;

        if $i3 == $i2 goto label05;

        $r16 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        $i6 = r22.<android.service.notification.ZenModeConfig: int user>;

        virtualinvoke $r16.<android.util.SparseArray: void put(int,java.lang.Object)>($i6, r22);

        $z5 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z5 == 0 goto label04;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setConfigLocked: store config for user ");

        $i7 = r22.<android.service.notification.ZenModeConfig: int user>;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r19 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ZenModeHelper", $r19);

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label05:
        $r6 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeConditions mConditions>;

        virtualinvoke $r6.<com.android.server.notification.ZenModeConditions: void evaluateConfig(android.service.notification.ZenModeConfig,android.content.ComponentName,boolean)>(r22, null, 0);

        $r7 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        $i4 = r22.<android.service.notification.ZenModeConfig: int user>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>($i4, r22);

        $z2 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z2 == 0 goto label06;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setConfigLocked reason=");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        r2 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        r26 = new java.lang.Throwable;

        specialinvoke r26.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ZenModeHelper", r2, r26);

     label06:
        $r8 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        staticinvoke <com.android.server.notification.ZenLog: void traceConfig(java.lang.String,android.service.notification.ZenModeConfig,android.service.notification.ZenModeConfig)>(r23, $r8, r22);

        $r9 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r10 = staticinvoke <com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy getNotificationPolicy(android.service.notification.ZenModeConfig)>($r9);

        $r11 = staticinvoke <com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy getNotificationPolicy(android.service.notification.ZenModeConfig)>(r22);

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r11);

        if $z3 != 0 goto label08;

     label07:
        z6 = 1;

        goto label09;

     label08:
        z6 = 0;

     label09:
        $r12 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $z4 = virtualinvoke r22.<android.service.notification.ZenModeConfig: boolean equals(java.lang.Object)>($r12);

        if $z4 != 0 goto label10;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void dispatchOnConfigChanged()>();

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void updateConsolidatedPolicy(java.lang.String)>(r23);

     label10:
        if z6 == 0 goto label12;

     label11:
        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void dispatchOnPolicyChanged()>();

     label12:
        r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig> = r22;

        $r13 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$H mHandler>;

        staticinvoke <com.android.server.notification.ZenModeHelper$H: void access$300(com.android.server.notification.ZenModeHelper$H,android.service.notification.ZenModeConfig,java.lang.String,android.content.ComponentName,boolean)>($r13, r22, r23, r1, z0);

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label14:
        $r20 := @caughtexception;

        goto label20;

     label15:
        $r21 := @caughtexception;

        goto label18;

     label16:
        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid config in setConfigLocked; ");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r5 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ZenModeHelper", $r5);

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label18:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ZenModeHelper", "Invalid rule in config", $r21);

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label20:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r20;

        catch java.lang.SecurityException from label01 to label02 with label15;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.SecurityException from label03 to label04 with label15;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.SecurityException from label05 to label06 with label15;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.SecurityException from label06 to label07 with label15;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.SecurityException from label09 to label10 with label15;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.SecurityException from label11 to label12 with label15;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.SecurityException from label12 to label13 with label15;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.SecurityException from label16 to label17 with label15;
        catch java.lang.Throwable from label16 to label17 with label14;
        catch java.lang.Throwable from label18 to label19 with label14;
    }

    private void setManualZenMode(int, android.net.Uri, java.lang.String, java.lang.String, boolean)
    {
        com.android.server.notification.ZenModeHelper r0;
        int i0;
        java.lang.String r1, $r10, $r18, r21;
        boolean z0, $z1, $z2, $z4, $z5;
        android.service.notification.ZenModeConfig r2, $r4, $r5, r23;
        android.service.notification.ZenModeConfig$ZenRule r3, r25;
        android.util.ArrayMap $r6;
        java.util.Collection $r7;
        java.lang.Object $r8;
        java.lang.Throwable $r19;
        android.net.Uri r20;
        java.lang.StringBuilder r22;
        java.util.Iterator r24;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        i0 := @parameter0: int;

        r20 := @parameter1: android.net.Uri;

        r1 := @parameter2: java.lang.String;

        r21 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r2 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r2;

     label01:
        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        if $r4 != null goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        $z1 = staticinvoke <android.provider.Settings$Global: boolean isValidZenMode(int)>(i0);

        if $z1 != 0 goto label05;

        exitmonitor r2;

     label04:
        return;

     label05:
        $z2 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z2 == 0 goto label06;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setManualZenMode ");

        $r10 = staticinvoke <android.provider.Settings$Global: java.lang.String zenModeToString(int)>(i0);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" conditionId=");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reason=");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" setRingerMode=");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r18 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ZenModeHelper", $r18);

     label06:
        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        r23 = virtualinvoke $r5.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>();

     label07:
        if i0 != 0 goto label12;

     label08:
        r23.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule> = null;

        $r6 = r23.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.util.Collection values()>();

        r24 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r8 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (android.service.notification.ZenModeConfig$ZenRule) $r8;

        $z5 = virtualinvoke r25.<android.service.notification.ZenModeConfig$ZenRule: boolean isAutomaticActive()>();

        if $z5 == 0 goto label10;

        r25.<android.service.notification.ZenModeConfig$ZenRule: boolean snoozing> = 1;

     label10:
        goto label09;

     label11:
        goto label13;

     label12:
        r3 = new android.service.notification.ZenModeConfig$ZenRule;

        specialinvoke r3.<android.service.notification.ZenModeConfig$ZenRule: void <init>()>();

        r3.<android.service.notification.ZenModeConfig$ZenRule: boolean enabled> = 1;

        r3.<android.service.notification.ZenModeConfig$ZenRule: int zenMode> = i0;

        r3.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId> = r20;

        r3.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String enabler> = r21;

        r23.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule> = r3;

     label13:
        specialinvoke r0.<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,java.lang.String,android.content.ComponentName,boolean)>(r23, r1, null, z0);

        exitmonitor r2;

     label14:
        return;

     label15:
        $r19 := @caughtexception;

     label16:
        exitmonitor r2;

     label17:
        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    private void setPreviousRingerModeSetting(java.lang.Integer)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.content.ContentResolver r1;
        android.content.Context $r2;
        int $i0;
        java.lang.Integer r3;
        java.lang.String r4;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r3 := @parameter0: java.lang.Integer;

        $r2 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if r3 != null goto label1;

        r4 = null;

        goto label2;

     label1:
        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

     label2:
        staticinvoke <android.provider.Settings$Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>(r1, "zen_mode_ringer_level", r4);

        return;
    }

    private void showZenUpgradeNotification(int)
    {
        com.android.server.notification.ZenModeHelper r0;
        boolean z0, z1, z5;
        android.content.Context $r1, $r5, $r7, $r9, $r11;
        android.content.pm.PackageManager $r2;
        android.app.NotificationManager $r3;
        android.app.Notification $r4;
        android.content.ContentResolver $r6, $r8, $r10, $r12;
        int $i0, $i1, i2;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        i2 := @parameter0: int;

        $r1 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        z0 = virtualinvoke $r2.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.type.watch");

        z1 = r0.<com.android.server.notification.ZenModeHelper: boolean mIsBootComplete>;

        if z1 == 0 goto label1;

        if i2 == 0 goto label1;

        if z0 != 0 goto label1;

        $r9 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r10, "show_zen_upgrade_notification", 0);

        if $i0 == 0 goto label1;

        $r11 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r12, "zen_settings_updated", 0);

        if $i1 == 1 goto label1;

        z5 = 1;

        goto label2;

     label1:
        z5 = 0;

     label2:
        if z0 == 0 goto label3;

        $r7 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r8, "show_zen_upgrade_notification", 0);

     label3:
        if z5 == 0 goto label4;

        $r3 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager mNotificationManager>;

        $r4 = virtualinvoke r0.<com.android.server.notification.ZenModeHelper: android.app.Notification createZenUpgradeNotification()>();

        virtualinvoke $r3.<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>("ZenModeHelper", 48, $r4);

        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r6, "show_zen_upgrade_notification", 0);

     label4:
        return;
    }

    private void updateConsolidatedPolicy(java.lang.String)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1, $r4, $r6, $r9, $r13;
        java.util.Iterator r2;
        android.service.notification.ZenModeConfig$ZenRule r3, $r5, $r14;
        android.util.ArrayMap $r7;
        java.util.Collection $r8;
        android.app.NotificationManager$Policy $r10, $r11, r18;
        boolean $z0, $z1, $z2;
        java.lang.Object $r12;
        java.lang.Throwable $r15;
        java.lang.String r16;
        android.service.notification.ZenPolicy r17;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r16 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        if r1 != null goto label01;

        return;

     label01:
        entermonitor r1;

     label02:
        r17 = new android.service.notification.ZenPolicy;

        specialinvoke r17.<android.service.notification.ZenPolicy: void <init>()>();

        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r5 = $r4.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        if $r5 == null goto label03;

        $r13 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r14 = $r13.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void applyCustomPolicy(android.service.notification.ZenPolicy,android.service.notification.ZenModeConfig$ZenRule)>(r17, $r14);

     label03:
        $r6 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r7 = $r6.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.service.notification.ZenModeConfig$ZenRule) $r12;

        $z1 = virtualinvoke r3.<android.service.notification.ZenModeConfig$ZenRule: boolean isAutomaticActive()>();

        if $z1 == 0 goto label05;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void applyCustomPolicy(android.service.notification.ZenPolicy,android.service.notification.ZenModeConfig$ZenRule)>(r17, r3);

     label05:
        goto label04;

     label06:
        $r9 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        r18 = virtualinvoke $r9.<android.service.notification.ZenModeConfig: android.app.NotificationManager$Policy toNotificationPolicy(android.service.notification.ZenPolicy)>(r17);

        $r10 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r10, r18);

        if $z0 != 0 goto label07;

        r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy> = r18;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void dispatchOnConsolidatedPolicyChanged()>();

        $r11 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        staticinvoke <com.android.server.notification.ZenLog: void traceSetConsolidatedZenPolicy(android.app.NotificationManager$Policy,java.lang.String)>($r11, r16);

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r15 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r15;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void updateDefaultAutomaticRuleNames()
    {
        com.android.server.notification.ZenModeHelper r0;
        java.util.Iterator r1;
        android.service.notification.ZenModeConfig$ZenRule r2;
        android.service.notification.ZenModeConfig $r3;
        android.util.ArrayMap $r4;
        java.util.Collection $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6;
        java.lang.String $r7, $r8, $r9, $r10, $r13, $r16;
        android.content.Context $r11, $r14;
        android.content.res.Resources $r12, $r15;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $r3 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mDefaultConfig>;

        $r4 = $r3.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.service.notification.ZenModeConfig$ZenRule) $r6;

        $r8 = "EVENTS_DEFAULT_RULE";

        $r7 = r2.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String id>;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $r14 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        $r16 = virtualinvoke $r15.<android.content.res.Resources: java.lang.String getString(int)>(17041504);

        r2.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name> = $r16;

        goto label3;

     label2:
        $r10 = "EVERY_NIGHT_DEFAULT_RULE";

        $r9 = r2.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String id>;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label3;

        $r11 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.res.Resources getResources()>();

        $r13 = virtualinvoke $r12.<android.content.res.Resources: java.lang.String getString(int)>(17041505);

        r2.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name> = $r13;

     label3:
        goto label1;

     label4:
        return;
    }

    private void updateRingerModeAffectedStreams()
    {
        com.android.server.notification.ZenModeHelper r0;
        android.media.AudioManagerInternal r1;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 = r0.<com.android.server.notification.ZenModeHelper: android.media.AudioManagerInternal mAudioManager>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.media.AudioManagerInternal: void updateRingerModeAffectedStreamsInternal()>();

     label1:
        return;
    }

    private boolean updateSnoozing(android.service.notification.ZenModeConfig$ZenRule)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig$ZenRule r1;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3;
        android.net.Uri $r5;
        java.lang.String $r7;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: android.service.notification.ZenModeConfig$ZenRule;

        if r1 == null goto label2;

        $z0 = r1.<android.service.notification.ZenModeConfig$ZenRule: boolean snoozing>;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r1.<android.service.notification.ZenModeConfig$ZenRule: boolean isTrueOrUnknown()>();

        if $z1 != 0 goto label2;

        r1.<android.service.notification.ZenModeConfig$ZenRule: boolean snoozing> = 0;

        $z2 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z2 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Snoozing reset for ");

        $r5 = r1.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ZenModeHelper", $r7);

     label1:
        return 1;

     label2:
        return 0;
    }

    private static int zenSeverity(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        return 0;

     label1:
        return 2;

     label2:
        return 3;

     label3:
        return 1;
    }

    public java.lang.String addAutomaticZenRule(android.app.AutomaticZenRule, java.lang.String)
    {
        com.android.server.notification.ZenModeHelper r0;
        java.lang.String r1, $r4, $r12, r29;
        int i0, i1, $i3, $i4, i5;
        android.service.notification.ZenModeConfig r2, $r3, r25, $r26;
        boolean $z0, $z1, $z2;
        android.util.ArrayMap $r5;
        android.content.ComponentName $r7, $r13, $r16, $r17, $r20;
        java.lang.IllegalArgumentException $r14, $r18;
        android.os.Bundle $r15, $r19;
        java.lang.Throwable $r21;
        android.app.AutomaticZenRule r22;
        android.content.pm.ServiceInfo r23;
        android.content.pm.ComponentInfo r24;
        java.lang.StringBuilder r27;
        android.service.notification.ZenModeConfig$ZenRule r28;
        android.util.AndroidRuntimeException r30, r31;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r22 := @parameter0: android.app.AutomaticZenRule;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: boolean isSystemRule(android.app.AutomaticZenRule)>(r22);

        if $z0 != 0 goto label05;

        $r13 = virtualinvoke r22.<android.app.AutomaticZenRule: android.content.ComponentName getOwner()>();

        r23 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName)>($r13);

        r24 = r23;

        if r23 != null goto label01;

        $r20 = virtualinvoke r22.<android.app.AutomaticZenRule: android.content.ComponentName getConfigurationActivity()>();

        r24 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName)>($r20);

     label01:
        if r24 == null goto label04;

        i5 = -1;

        $r15 = r24.<android.content.pm.PackageItemInfo: android.os.Bundle metaData>;

        if $r15 == null goto label02;

        $r19 = r24.<android.content.pm.PackageItemInfo: android.os.Bundle metaData>;

        i5 = virtualinvoke $r19.<android.os.Bundle: int getInt(java.lang.String,int)>("android.service.zen.automatic.ruleInstanceLimit", -1);

     label02:
        $r16 = virtualinvoke r22.<android.app.AutomaticZenRule: android.content.ComponentName getOwner()>();

        i0 = virtualinvoke r0.<com.android.server.notification.ZenModeHelper: int getCurrentInstanceCount(android.content.ComponentName)>($r16);

        $r17 = virtualinvoke r22.<android.app.AutomaticZenRule: android.content.ComponentName getConfigurationActivity()>();

        i1 = virtualinvoke r0.<com.android.server.notification.ZenModeHelper: int getCurrentInstanceCount(android.content.ComponentName)>($r17);

        if i5 <= 0 goto label05;

        $i3 = i0 + i1;

        $i4 = $i3 + 1;

        if i5 < $i4 goto label03;

        goto label05;

     label03:
        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Rule instance limit exceeded");

        throw $r18;

     label04:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Lacking enabled CPS or config activity");

        throw $r14;

     label05:
        r25 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r25;

     label06:
        $r26 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        if $r26 == null goto label10;

        $z1 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z1 == 0 goto label07;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addAutomaticZenRule rule= ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reason=");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ZenModeHelper", $r12);

     label07:
        $r3 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        r2 = virtualinvoke $r3.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>();

        r28 = new android.service.notification.ZenModeConfig$ZenRule;

        specialinvoke r28.<android.service.notification.ZenModeConfig$ZenRule: void <init>()>();

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void populateZenRule(android.app.AutomaticZenRule,android.service.notification.ZenModeConfig$ZenRule,boolean)>(r22, r28, 1);

        $r5 = r2.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r4 = r28.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String id>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r28);

        $r7 = r28.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName component>;

        $z2 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,java.lang.String,android.content.ComponentName,boolean)>(r2, r1, $r7, 1);

        if $z2 == 0 goto label09;

        r29 = r28.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String id>;

        exitmonitor r25;

     label08:
        return r29;

     label09:
        r30 = new android.util.AndroidRuntimeException;

        specialinvoke r30.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("Could not create rule");

        throw r30;

     label10:
        r31 = new android.util.AndroidRuntimeException;

        specialinvoke r31.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("Could not create rule");

        throw r31;

     label11:
        $r21 := @caughtexception;

     label12:
        exitmonitor r25;

     label13:
        throw $r21;

        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void addCallback(com.android.server.notification.ZenModeHelper$Callback)
    {
        com.android.server.notification.ZenModeHelper r0;
        com.android.server.notification.ZenModeHelper$Callback r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: com.android.server.notification.ZenModeHelper$Callback;

        $r2 = r0.<com.android.server.notification.ZenModeHelper: java.util.ArrayList mCallbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    protected void applyRestrictions()
    {
        com.android.server.notification.ZenModeHelper r0;
        int[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i10, i14;
        android.app.NotificationManager$Policy $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16, z19, z20, z21, z22, z23, z24;
        android.util.SparseIntArray $r3;
        long $l7, $l8, $l11, $l12;
        byte $b9, $b13;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $i3 = r0.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        if $i3 == 0 goto label01;

        z2 = 1;

        goto label02;

     label01:
        z2 = 0;

     label02:
        $i4 = r0.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        if $i4 != 1 goto label03;

        z3 = 1;

        goto label04;

     label03:
        z3 = 0;

     label04:
        $i5 = r0.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        if $i5 != 2 goto label05;

        z4 = 1;

        goto label06;

     label05:
        z4 = 0;

     label06:
        $i6 = r0.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        if $i6 != 3 goto label07;

        z5 = 1;

        goto label08;

     label07:
        z5 = 0;

     label08:
        $r2 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        $z0 = virtualinvoke $r2.<android.app.NotificationManager$Policy: boolean allowCalls()>();

        if $z0 == 0 goto label09;

        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        $i10 = virtualinvoke $r5.<android.app.NotificationManager$Policy: int allowCallsFrom()>();

        if $i10 != 0 goto label09;

        z6 = 1;

        goto label10;

     label09:
        z6 = 0;

     label10:
        $r6 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        z7 = virtualinvoke $r6.<android.app.NotificationManager$Policy: boolean allowRepeatCallers()>();

        $r7 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        z8 = virtualinvoke $r7.<android.app.NotificationManager$Policy: boolean allowSystem()>();

        $r8 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        z9 = virtualinvoke $r8.<android.app.NotificationManager$Policy: boolean allowMedia()>();

        $r9 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        z10 = virtualinvoke $r9.<android.app.NotificationManager$Policy: boolean allowAlarms()>();

        if z2 != 0 goto label12;

        $l7 = r0.<com.android.server.notification.ZenModeHelper: long mSuppressedEffects>;

        $l8 = $l7 & 1L;

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label11;

        goto label12;

     label11:
        z11 = 0;

        goto label13;

     label12:
        z11 = 1;

     label13:
        if z5 != 0 goto label17;

        if z3 == 0 goto label15;

        if z6 != 0 goto label15;

        if z7 == 0 goto label14;

        goto label15;

     label14:
        goto label17;

     label15:
        $l11 = r0.<com.android.server.notification.ZenModeHelper: long mSuppressedEffects>;

        $l12 = $l11 & 2L;

        $b13 = $l12 cmp 0L;

        if $b13 == 0 goto label16;

        goto label17;

     label16:
        z12 = 0;

        goto label18;

     label17:
        z12 = 1;

     label18:
        if z3 == 0 goto label19;

        if z10 != 0 goto label19;

        z13 = 1;

        goto label20;

     label19:
        z13 = 0;

     label20:
        if z3 == 0 goto label21;

        if z9 != 0 goto label21;

        z14 = 1;

        goto label22;

     label21:
        z14 = 0;

     label22:
        if z5 != 0 goto label24;

        if z3 == 0 goto label23;

        if z8 != 0 goto label23;

        goto label24;

     label23:
        z15 = 0;

        goto label25;

     label24:
        z15 = 1;

     label25:
        if z4 != 0 goto label27;

        if z3 == 0 goto label26;

        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        $z1 = staticinvoke <android.service.notification.ZenModeConfig: boolean areAllZenBehaviorSoundsMuted(android.app.NotificationManager$Policy)>($r4);

        if $z1 == 0 goto label26;

        goto label27;

     label26:
        z16 = 0;

        goto label28;

     label27:
        z16 = 1;

     label28:
        r1 = <android.media.AudioAttributes: int[] SDK_USAGES>;

        i0 = lengthof r1;

        i14 = 0;

     label29:
        if i14 >= i0 goto label55;

        i1 = r1[i14];

        $r3 = <android.media.AudioAttributes: android.util.SparseIntArray SUPPRESSIBLE_USAGES>;

        i2 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int)>(i1);

        if i2 != 3 goto label30;

        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyRestrictions(boolean,boolean,int)>(z3, 0, i1);

        goto label54;

     label30:
        if i2 != 1 goto label33;

        z19 = 1;

        if z11 != 0 goto label32;

        if z16 == 0 goto label31;

        z19 = 1;

        goto label32;

     label31:
        z19 = 0;

     label32:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyRestrictions(boolean,boolean,int)>(z3, z19, i1);

        goto label54;

     label33:
        if i2 != 2 goto label37;

        if z12 != 0 goto label35;

        if z16 == 0 goto label34;

        goto label35;

     label34:
        z20 = 0;

        goto label36;

     label35:
        z20 = 1;

     label36:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyRestrictions(boolean,boolean,int)>(z3, z20, i1);

        goto label54;

     label37:
        if i2 != 4 goto label41;

        if z13 != 0 goto label39;

        if z16 == 0 goto label38;

        goto label39;

     label38:
        z21 = 0;

        goto label40;

     label39:
        z21 = 1;

     label40:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyRestrictions(boolean,boolean,int)>(z3, z21, i1);

        goto label54;

     label41:
        if i2 != 5 goto label45;

        if z14 != 0 goto label43;

        if z16 == 0 goto label42;

        goto label43;

     label42:
        z22 = 0;

        goto label44;

     label43:
        z22 = 1;

     label44:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyRestrictions(boolean,boolean,int)>(z3, z22, i1);

        goto label54;

     label45:
        if i2 != 6 goto label53;

        if i1 != 13 goto label49;

        if z15 != 0 goto label47;

        if z16 == 0 goto label46;

        goto label47;

     label46:
        z23 = 0;

        goto label48;

     label47:
        z23 = 1;

     label48:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyRestrictions(boolean,boolean,int,int)>(z3, z23, i1, 28);

        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyRestrictions(boolean,boolean,int,int)>(z3, 0, i1, 3);

        goto label54;

     label49:
        if z15 != 0 goto label51;

        if z16 == 0 goto label50;

        goto label51;

     label50:
        z24 = 0;

        goto label52;

     label51:
        z24 = 1;

     label52:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyRestrictions(boolean,boolean,int)>(z3, z24, i1);

        goto label54;

     label53:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyRestrictions(boolean,boolean,int)>(z3, z16, i1);

     label54:
        i14 = i14 + 1;

        goto label29;

     label55:
        return;
    }

    protected void applyRestrictions(boolean, boolean, int)
    {
        com.android.server.notification.ZenModeHelper r0;
        boolean z0, z1;
        int i0;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyRestrictions(boolean,boolean,int,int)>(z0, z1, i0, 3);

        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyRestrictions(boolean,boolean,int,int)>(z0, z1, i0, 28);

        return;
    }

    protected void applyRestrictions(boolean, boolean, int, int)
    {
        com.android.server.notification.ZenModeHelper r0;
        boolean z0, z1;
        int i0, i1, i3;
        long l2;
        android.app.AppOpsManager r1;
        java.lang.Throwable $r2;
        java.lang.String[] r3;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<com.android.server.notification.ZenModeHelper: android.app.AppOpsManager mAppOps>;

     label2:
        if z0 == 0 goto label5;

     label3:
        r3 = r0.<com.android.server.notification.ZenModeHelper: java.lang.String[] mPriorityOnlyDndExemptPackages>;

     label4:
        goto label6;

     label5:
        r3 = null;

     label6:
        i3 = (int) z1;

        virtualinvoke r1.<android.app.AppOpsManager: void setRestriction(int,int,int,java.lang.String[])>(i1, i0, i3, r3);

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label8:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    protected void applyZenToRingerMode()
    {
        com.android.server.notification.ZenModeHelper r0;
        android.media.AudioManagerInternal r1, $r2;
        int i0, i1, i2;
        java.lang.Integer $r3;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 = r0.<com.android.server.notification.ZenModeHelper: android.media.AudioManagerInternal mAudioManager>;

        if r1 != null goto label1;

        return;

     label1:
        i0 = virtualinvoke r1.<android.media.AudioManagerInternal: int getRingerModeInternal()>();

        i2 = i0;

        i1 = r0.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        if i1 == 0 goto label3;

        if i1 == 2 goto label2;

        if i1 == 3 goto label2;

        goto label4;

     label2:
        if i0 == 0 goto label4;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void setPreviousRingerModeSetting(java.lang.Integer)>($r3);

        i2 = 0;

        goto label4;

     label3:
        if i0 != 0 goto label4;

        i2 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: int getPreviousRingerModeSetting()>();

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void setPreviousRingerModeSetting(java.lang.Integer)>(null);

     label4:
        if i2 == -1 goto label5;

        $r2 = r0.<com.android.server.notification.ZenModeHelper: android.media.AudioManagerInternal mAudioManager>;

        virtualinvoke $r2.<android.media.AudioManagerInternal: void setRingerModeInternal(int,java.lang.String)>(i2, "ZenModeHelper");

     label5:
        return;
    }

    public boolean canManageAutomaticZenRule(android.service.notification.ZenModeConfig$ZenRule)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig$ZenRule r1;
        java.lang.String[] r2;
        int i0, $i1, $i2, i3, i4;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: android.service.notification.ZenModeConfig$ZenRule;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i3 == 0 goto label6;

        if i3 != 1000 goto label1;

        goto label6;

     label1:
        $r3 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $i1 = virtualinvoke $r3.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.MANAGE_NOTIFICATIONS");

        if $i1 != 0 goto label2;

        return 1;

     label2:
        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.content.pm.PackageManager mPm>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r2 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>($i2);

        if r2 == null goto label5;

        i0 = lengthof r2;

        i4 = 0;

     label3:
        if i4 >= i0 goto label5;

        $r6 = r2[i4];

        $r5 = r1.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String pkg>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        return 0;

     label6:
        return 1;
    }

    protected android.app.AutomaticZenRule createAutomaticZenRule(android.service.notification.ZenModeConfig$ZenRule)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig$ZenRule r1;
        android.app.AutomaticZenRule $r2;
        int $i0, $i1;
        java.lang.String $r3;
        android.content.ComponentName $r4, $r5;
        android.net.Uri $r6;
        android.service.notification.ZenPolicy $r7;
        long $l2;
        boolean $z0;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: android.service.notification.ZenModeConfig$ZenRule;

        $r2 = new android.app.AutomaticZenRule;

        $r3 = r1.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

        $r4 = r1.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName component>;

        $r5 = r1.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName configurationActivity>;

        $r6 = r1.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        $r7 = r1.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.ZenPolicy zenPolicy>;

        $i0 = r1.<android.service.notification.ZenModeConfig$ZenRule: int zenMode>;

        $i1 = staticinvoke <android.app.NotificationManager: int zenModeToInterruptionFilter(int)>($i0);

        $z0 = r1.<android.service.notification.ZenModeConfig$ZenRule: boolean enabled>;

        $l2 = r1.<android.service.notification.ZenModeConfig$ZenRule: long creationTime>;

        specialinvoke $r2.<android.app.AutomaticZenRule: void <init>(java.lang.String,android.content.ComponentName,android.content.ComponentName,android.net.Uri,android.service.notification.ZenPolicy,int,boolean,long)>($r3, $r4, $r5, $r6, $r7, $i1, $z0, $l2);

        return $r2;
    }

    protected android.app.Notification createZenUpgradeNotification()
    {
        com.android.server.notification.ZenModeHelper r0;
        android.os.Bundle $r3;
        android.content.Context $r4, $r12, $r15, $r18, $r22, $r26;
        android.content.res.Resources $r5, $r19, $r23;
        java.lang.String $r6, $r11, $r20, $r24;
        android.app.NotificationManager$Policy $r7;
        int $i0, i1, i2, i3;
        boolean $z0;
        android.content.Intent $r8;
        android.app.Notification$Builder $r10, $r13, $r14, $r17, $r21, $r25, $r28, $r29, $r30, $r31, $r33;
        android.graphics.drawable.Icon $r16;
        android.app.PendingIntent $r27;
        android.app.Notification$BigTextStyle $r32;
        android.app.Notification $r34;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(17040248);

        virtualinvoke $r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.substName", $r6);

        i1 = 17041515;

        i2 = 17041514;

        i3 = 17302876;

        $r7 = virtualinvoke r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy getConsolidatedNotificationPolicy()>();

        $i0 = $r7.<android.app.NotificationManager$Policy: int suppressedVisualEffects>;

        $z0 = staticinvoke <android.app.NotificationManager$Policy: boolean areAllVisualEffectsSuppressed(int)>($i0);

        if $z0 == 0 goto label1;

        i1 = 17041517;

        i2 = 17041516;

        i3 = 17302400;

     label1:
        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.settings.ZEN_MODE_ONBOARDING");

        virtualinvoke $r8.<android.content.Intent: android.content.Intent addFlags(int)>(268468224);

        $r10 = new android.app.Notification$Builder;

        $r12 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r11 = <com.android.internal.notification.SystemNotificationChannels: java.lang.String DO_NOT_DISTURB>;

        specialinvoke $r10.<android.app.Notification$Builder: void <init>(android.content.Context,java.lang.String)>($r12, $r11);

        $r13 = virtualinvoke $r10.<android.app.Notification$Builder: android.app.Notification$Builder setAutoCancel(boolean)>(1);

        $r14 = virtualinvoke $r13.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>(17302819);

        $r15 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r16 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(android.content.Context,int)>($r15, i3);

        $r17 = virtualinvoke $r14.<android.app.Notification$Builder: android.app.Notification$Builder setLargeIcon(android.graphics.drawable.Icon)>($r16);

        $r18 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r19 = virtualinvoke $r18.<android.content.Context: android.content.res.Resources getResources()>();

        $r20 = virtualinvoke $r19.<android.content.res.Resources: java.lang.String getString(int)>(i1);

        $r21 = virtualinvoke $r17.<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>($r20);

        $r22 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r23 = virtualinvoke $r22.<android.content.Context: android.content.res.Resources getResources()>();

        $r24 = virtualinvoke $r23.<android.content.res.Resources: java.lang.String getString(int)>(i2);

        $r25 = virtualinvoke $r21.<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>($r24);

        $r26 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r27 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>($r26, 0, $r8, 201326592);

        $r28 = virtualinvoke $r25.<android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>($r27);

        $r29 = virtualinvoke $r28.<android.app.Notification$Builder: android.app.Notification$Builder setAutoCancel(boolean)>(1);

        $r30 = virtualinvoke $r29.<android.app.Notification$Builder: android.app.Notification$Builder setLocalOnly(boolean)>(1);

        $r31 = virtualinvoke $r30.<android.app.Notification$Builder: android.app.Notification$Builder addExtras(android.os.Bundle)>($r3);

        $r32 = new android.app.Notification$BigTextStyle;

        specialinvoke $r32.<android.app.Notification$BigTextStyle: void <init>()>();

        $r33 = virtualinvoke $r31.<android.app.Notification$Builder: android.app.Notification$Builder setStyle(android.app.Notification$Style)>($r32);

        $r34 = virtualinvoke $r33.<android.app.Notification$Builder: android.app.Notification build()>();

        return $r34;
    }

    void dump(android.util.proto.ProtoOutputStream)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1, $r4, $r6, $r9, $r13;
        java.util.Iterator r2;
        android.service.notification.ZenModeConfig$ZenRule r3, $r5, $r14;
        int $i0, $i2;
        android.util.ArrayMap $r7;
        java.util.Collection $r8;
        android.app.NotificationManager$Policy $r10;
        long $l1;
        java.lang.Object $r11;
        boolean $z0, $z1, $z2;
        android.service.notification.Condition $r12;
        java.lang.Throwable $r15;
        android.util.proto.ProtoOutputStream r16;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r16 := @parameter0: android.util.proto.ProtoOutputStream;

        $i0 = r0.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        virtualinvoke r16.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169921L, $i0);

        r1 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r5 = $r4.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        if $r5 == null goto label2;

        $r13 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r14 = $r13.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        virtualinvoke $r14.<android.service.notification.ZenModeConfig$ZenRule: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r16, 2246267895810L);

     label2:
        $r6 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r7 = $r6.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.service.notification.ZenModeConfig$ZenRule) $r11;

        $z0 = r3.<android.service.notification.ZenModeConfig$ZenRule: boolean enabled>;

        if $z0 == 0 goto label4;

        $r12 = r3.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.Condition condition>;

        $i2 = $r12.<android.service.notification.Condition: int state>;

        if $i2 != 1 goto label4;

        $z1 = r3.<android.service.notification.ZenModeConfig$ZenRule: boolean snoozing>;

        if $z1 != 0 goto label4;

        virtualinvoke r3.<android.service.notification.ZenModeConfig$ZenRule: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r16, 2246267895810L);

     label4:
        goto label3;

     label5:
        $r9 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r10 = virtualinvoke $r9.<android.service.notification.ZenModeConfig: android.app.NotificationManager$Policy toNotificationPolicy()>();

        virtualinvoke $r10.<android.app.NotificationManager$Policy: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r16, 1146756268037L);

        $l1 = r0.<com.android.server.notification.ZenModeHelper: long mSuppressedEffects>;

        virtualinvoke r16.<android.util.proto.ProtoOutputStream: void write(long,long)>(1120986464259L, $l1);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r15 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r15;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.notification.ZenModeHelper r0;
        java.lang.String r1, $r2, $r6, $r8, $r18;
        int i0, $i1, $i2, $i4, i5;
        java.lang.StringBuilder $r3, $r13;
        android.app.NotificationManager$Policy $r5;
        android.util.SparseArray $r9, $r15, $r19;
        android.service.notification.ZenModeConfig $r10, $r21, r26;
        long $l3;
        com.android.server.notification.ZenModeFiltering $r11;
        com.android.server.notification.ZenModeConditions $r12;
        java.lang.Object $r20;
        java.lang.Throwable $r22;
        java.io.PrintWriter r23;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r23 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r23.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r23.<java.io.PrintWriter: void print(java.lang.String)>("mZenMode=");

        $i1 = r0.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        $r2 = staticinvoke <android.provider.Settings$Global: java.lang.String zenModeToString(int)>($i1);

        virtualinvoke r23.<java.io.PrintWriter: void println(java.lang.String)>($r2);

        virtualinvoke r23.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mConsolidatedPolicy=");

        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        $r6 = virtualinvoke $r5.<android.app.NotificationManager$Policy: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        i0 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mConfigs[u=");

        $r15 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        $i4 = virtualinvoke $r15.<android.util.SparseArray: int keyAt(int)>(i5);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        $r20 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        $r21 = (android.service.notification.ZenModeConfig) $r20;

        staticinvoke <com.android.server.notification.ZenModeHelper: void dump(java.io.PrintWriter,java.lang.String,java.lang.String,android.service.notification.ZenModeConfig)>(r23, r1, $r18, $r21);

        i5 = i5 + 1;

        goto label1;

     label2:
        virtualinvoke r23.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r23.<java.io.PrintWriter: void print(java.lang.String)>("mUser=");

        $i2 = r0.<com.android.server.notification.ZenModeHelper: int mUser>;

        virtualinvoke r23.<java.io.PrintWriter: void println(int)>($i2);

        r26 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r26;

     label3:
        $r10 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        staticinvoke <com.android.server.notification.ZenModeHelper: void dump(java.io.PrintWriter,java.lang.String,java.lang.String,android.service.notification.ZenModeConfig)>(r23, r1, "mConfig", $r10);

        exitmonitor r26;

     label4:
        virtualinvoke r23.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r23.<java.io.PrintWriter: void print(java.lang.String)>("mSuppressedEffects=");

        $l3 = r0.<com.android.server.notification.ZenModeHelper: long mSuppressedEffects>;

        virtualinvoke r23.<java.io.PrintWriter: void println(long)>($l3);

        $r11 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeFiltering mFiltering>;

        virtualinvoke $r11.<com.android.server.notification.ZenModeFiltering: void dump(java.io.PrintWriter,java.lang.String)>(r23, r1);

        $r12 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeConditions mConditions>;

        virtualinvoke $r12.<com.android.server.notification.ZenModeConditions: void dump(java.io.PrintWriter,java.lang.String)>(r23, r1);

        return;

     label5:
        $r22 := @caughtexception;

     label6:
        exitmonitor r26;

     label7:
        throw $r22;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    protected void evaluateZenMode(java.lang.String, boolean)
    {
        com.android.server.notification.ZenModeHelper r0;
        java.lang.String r1;
        boolean z0, $z1;
        android.app.NotificationManager$Policy r2, $r5;
        int i0, i1, $i2, i4;
        android.service.notification.ZenModeConfig $r3;
        com.android.server.notification.ZenModeHelper$H $r4;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $z1 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ZenModeHelper", "evaluateZenMode");

     label1:
        $r3 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        if $r3 != null goto label2;

        return;

     label2:
        r2 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        if r2 != null goto label3;

        i4 = 0;

        goto label4;

     label3:
        i4 = virtualinvoke r2.<android.app.NotificationManager$Policy: int hashCode()>();

     label4:
        i0 = r0.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        i1 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: int computeZenMode()>();

        staticinvoke <com.android.server.notification.ZenLog: void traceSetZenMode(int,java.lang.String)>(i1, r1);

        r0.<com.android.server.notification.ZenModeHelper: int mZenMode> = i1;

        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void setZenModeSetting(int)>(i1);

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void updateConsolidatedPolicy(java.lang.String)>(r1);

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void updateRingerModeAffectedStreams()>();

        if z0 == 0 goto label6;

        if i1 != i0 goto label5;

        if i1 != 1 goto label6;

        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        $i2 = virtualinvoke $r5.<android.app.NotificationManager$Policy: int hashCode()>();

        if i4 == $i2 goto label6;

     label5:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyZenToRingerMode()>();

     label6:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyRestrictions()>();

        if i1 == i0 goto label7;

        $r4 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$H mHandler>;

        staticinvoke <com.android.server.notification.ZenModeHelper$H: void access$400(com.android.server.notification.ZenModeHelper$H)>($r4);

     label7:
        return;
    }

    public android.app.AutomaticZenRule getAutomaticZenRule(java.lang.String)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1, $r2, $r3;
        android.util.ArrayMap $r4;
        java.lang.Object $r5;
        boolean $z0;
        android.app.AutomaticZenRule $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        android.service.notification.ZenModeConfig$ZenRule r9;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r8 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        if $r2 != null goto label3;

        exitmonitor r1;

     label2:
        return null;

     label3:
        $r3 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r4 = $r3.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (android.service.notification.ZenModeConfig$ZenRule) $r5;

        exitmonitor r1;

     label4:
        if r9 != null goto label5;

        return null;

     label5:
        $z0 = virtualinvoke r0.<com.android.server.notification.ZenModeHelper: boolean canManageAutomaticZenRule(android.service.notification.ZenModeConfig$ZenRule)>(r9);

        if $z0 == 0 goto label6;

        $r6 = virtualinvoke r0.<com.android.server.notification.ZenModeHelper: android.app.AutomaticZenRule createAutomaticZenRule(android.service.notification.ZenModeConfig$ZenRule)>(r9);

        return $r6;

     label6:
        return null;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.service.notification.ZenModeConfig getConfig()
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1, $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        r4 = virtualinvoke $r2.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>();

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.app.NotificationManager$Policy getConsolidatedNotificationPolicy()
    {
        com.android.server.notification.ZenModeHelper r0;
        android.app.NotificationManager$Policy $r1, $r2;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $r1 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        $r2 = virtualinvoke $r1.<android.app.NotificationManager$Policy: android.app.NotificationManager$Policy copy()>();

        return $r2;
    }

    public int getCurrentInstanceCount(android.content.ComponentName)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1, $r4;
        java.util.Iterator r2;
        android.service.notification.ZenModeConfig$ZenRule r3;
        android.util.ArrayMap $r5;
        java.util.Collection $r6;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7;
        android.content.ComponentName $r8, $r9, r11;
        java.lang.Throwable $r10;
        int i0, i1;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r11 := @parameter0: android.content.ComponentName;

        if r11 != null goto label01;

        return 0;

     label01:
        i0 = 0;

        r1 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r1;

     label02:
        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r5 = $r4.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.service.notification.ZenModeConfig$ZenRule) $r7;

        $r8 = r3.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName component>;

        $z1 = virtualinvoke r11.<android.content.ComponentName: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label06;

     label04:
        i1 = i0;

     label05:
        $r9 = r3.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName configurationActivity>;

        $z2 = virtualinvoke r11.<android.content.ComponentName: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label07;

     label06:
        i1 = i0 + 1;

     label07:
        i0 = i1;

        goto label03;

     label08:
        exitmonitor r1;

     label09:
        return i0;

     label10:
        $r10 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public android.os.Looper getLooper()
    {
        com.android.server.notification.ZenModeHelper r0;
        com.android.server.notification.ZenModeHelper$H $r1;
        android.os.Looper $r2;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $r1 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$H mHandler>;

        $r2 = virtualinvoke $r1.<com.android.server.notification.ZenModeHelper$H: android.os.Looper getLooper()>();

        return $r2;
    }

    public android.app.NotificationManager$Policy getNotificationPolicy()
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig $r1;
        android.app.NotificationManager$Policy $r2;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $r1 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r2 = staticinvoke <com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy getNotificationPolicy(android.service.notification.ZenModeConfig)>($r1);

        return $r2;
    }

    public long getSuppressedEffects()
    {
        com.android.server.notification.ZenModeHelper r0;
        long $l0;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $l0 = r0.<com.android.server.notification.ZenModeHelper: long mSuppressedEffects>;

        return $l0;
    }

    public int getZenMode()
    {
        com.android.server.notification.ZenModeHelper r0;
        int $i0;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $i0 = r0.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        return $i0;
    }

    public int getZenModeListenerInterruptionFilter()
    {
        com.android.server.notification.ZenModeHelper r0;
        int $i0, $i1;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $i0 = r0.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        $i1 = staticinvoke <android.app.NotificationManager: int zenModeToInterruptionFilter(int)>($i0);

        return $i1;
    }

    public java.util.List getZenRules()
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1, $r5, $r6;
        java.util.Iterator r2;
        android.service.notification.ZenModeConfig$ZenRule r3;
        java.util.ArrayList $r4;
        android.util.ArrayMap $r7;
        java.util.Collection $r8;
        boolean $z0, $z1;
        java.lang.Object $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        if $r5 != null goto label03;

        exitmonitor r1;

     label02:
        return $r4;

     label03:
        $r6 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r7 = $r6.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.service.notification.ZenModeConfig$ZenRule) $r9;

        $z1 = virtualinvoke r0.<com.android.server.notification.ZenModeHelper: boolean canManageAutomaticZenRule(android.service.notification.ZenModeConfig$ZenRule)>(r3);

        if $z1 == 0 goto label05;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

     label05:
        goto label04;

     label06:
        exitmonitor r1;

     label07:
        return $r4;

     label08:
        $r10 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void initZenMode()
    {
        com.android.server.notification.ZenModeHelper r0;
        boolean $z0;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $z0 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ZenModeHelper", "initZenMode");

     label1:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void evaluateZenMode(java.lang.String,boolean)>("init", 1);

        return;
    }

    public boolean isCall(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.ZenModeHelper r0;
        com.android.server.notification.NotificationRecord r1;
        com.android.server.notification.ZenModeFiltering $r2;
        boolean $z0;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $r2 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeFiltering mFiltering>;

        $z0 = virtualinvoke $r2.<com.android.server.notification.ZenModeFiltering: boolean isCall(com.android.server.notification.NotificationRecord)>(r1);

        return $z0;
    }

    public boolean matchesCallFilter(android.os.UserHandle, android.os.Bundle, com.android.server.notification.ValidateNotificationPeople, int, float)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.os.Bundle r1;
        com.android.server.notification.ValidateNotificationPeople r2;
        int i0, $i1;
        float f0;
        android.service.notification.ZenModeConfig r3;
        boolean z0;
        android.app.NotificationManager$Policy $r4;
        android.content.Context $r5;
        java.lang.Throwable $r6;
        android.os.UserHandle r7;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r7 := @parameter0: android.os.UserHandle;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: com.android.server.notification.ValidateNotificationPeople;

        i0 := @parameter3: int;

        f0 := @parameter4: float;

        r3 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r3;

     label1:
        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $i1 = r0.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        z0 = staticinvoke <com.android.server.notification.ZenModeFiltering: boolean matchesCallFilter(android.content.Context,int,android.app.NotificationManager$Policy,android.os.UserHandle,android.os.Bundle,com.android.server.notification.ValidateNotificationPeople,int,float)>($r5, $i1, $r4, r7, r1, r2, i0, f0);

        exitmonitor r3;

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onSystemReady()
    {
        com.android.server.notification.ZenModeHelper r0;
        android.media.AudioManagerInternal r1;
        boolean $z0;
        java.lang.Object $r2;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        com.android.server.notification.ZenModeHelper$H $r5;
        int $i0;
        com.android.server.notification.ZenModeHelper$RingerModeDelegate $r6;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        $z0 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ZenModeHelper", "onSystemReady");

     label1:
        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/media/AudioManagerInternal;");

        r1 = (android.media.AudioManagerInternal) $r2;

        r0.<com.android.server.notification.ZenModeHelper: android.media.AudioManagerInternal mAudioManager> = r1;

        if r1 == null goto label2;

        $r6 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$RingerModeDelegate mRingerModeDelegate>;

        virtualinvoke r1.<android.media.AudioManagerInternal: void setRingerModeDelegate(android.media.AudioManagerInternal$RingerModeDelegate)>($r6);

     label2:
        $r3 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.notification.ZenModeHelper: android.content.pm.PackageManager mPm> = $r4;

        $r5 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeHelper$H mHandler>;

        staticinvoke <com.android.server.notification.ZenModeHelper$H: void access$200(com.android.server.notification.ZenModeHelper$H)>($r5);

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void cleanUpZenRules()>();

        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void evaluateZenMode(java.lang.String,boolean)>("onSystemReady", 1);

        r0.<com.android.server.notification.ZenModeHelper: boolean mIsBootComplete> = 1;

        $i0 = r0.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void showZenUpgradeNotification(int)>($i0);

        return;
    }

    public void onUserRemoved(int)
    {
        com.android.server.notification.ZenModeHelper r0;
        int i0;
        boolean $z0;
        android.util.SparseArray $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        return;

     label1:
        $z0 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onUserRemoved u=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ZenModeHelper", $r6);

     label2:
        $r2 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>(i0);

        return;
    }

    public void onUserSwitched(int)
    {
        com.android.server.notification.ZenModeHelper r0;
        int i0;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void loadConfigForUser(int,java.lang.String)>(i0, "onUserSwitched");

        return;
    }

    public void onUserUnlocked(int)
    {
        com.android.server.notification.ZenModeHelper r0;
        int i0;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void loadConfigForUser(int,java.lang.String)>(i0, "onUserUnlocked");

        return;
    }

    public void pullRules(java.util.List)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1, r29;
        int i0, i1, i2;
        com.android.server.notification.SysUiStatsEvent$Builder r2, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r19;
        android.util.SparseArray $r3, $r4, $r5;
        java.lang.Object $r6, $r22;
        com.android.server.notification.SysUiStatsEvent$BuilderFactory $r7;
        android.service.notification.ZenModeConfig$ZenRule $r10, $r21, $r23, $r24, $r26;
        boolean $z0, z2, $z3;
        android.service.notification.ZenPolicy $r17;
        byte[] $r18;
        android.util.StatsEvent $r20;
        java.lang.String $r25;
        java.lang.Throwable $r27;
        java.util.List r28;
        android.util.ArrayMap $r30;
        java.util.Collection $r31;
        java.util.Iterator r32;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r28 := @parameter0: java.util.List;

        r1 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label12;

     label04:
        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        i1 = virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i2);

        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r29 = (android.service.notification.ZenModeConfig) $r6;

        $r7 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.SysUiStatsEvent$BuilderFactory mStatsEventBuilderFactory>;

        $r8 = virtualinvoke $r7.<com.android.server.notification.SysUiStatsEvent$BuilderFactory: com.android.server.notification.SysUiStatsEvent$Builder newBuilder()>();

        $r9 = virtualinvoke $r8.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder setAtomId(int)>(10084);

        r2 = virtualinvoke $r9.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeInt(int)>(i1);

        $r10 = r29.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        if $r10 == null goto label06;

     label05:
        z2 = 1;

        goto label07;

     label06:
        z2 = 0;

     label07:
        $r11 = virtualinvoke r2.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeBoolean(boolean)>(z2);

        $z0 = r29.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd>;

        $r12 = virtualinvoke $r11.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeBoolean(boolean)>($z0);

        $r13 = virtualinvoke $r12.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeInt(int)>(-1);

        $r14 = virtualinvoke $r13.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeString(java.lang.String)>("");

        $r15 = virtualinvoke $r14.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeInt(int)>(1000);

        $r16 = virtualinvoke $r15.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder addBooleanAnnotation(byte,boolean)>(1, 1);

        $r17 = virtualinvoke r29.<android.service.notification.ZenModeConfig: android.service.notification.ZenPolicy toZenPolicy()>();

        $r18 = virtualinvoke $r17.<android.service.notification.ZenPolicy: byte[] toProto()>();

        $r19 = virtualinvoke $r16.<com.android.server.notification.SysUiStatsEvent$Builder: com.android.server.notification.SysUiStatsEvent$Builder writeByteArray(byte[])>($r18);

        $r20 = virtualinvoke $r19.<com.android.server.notification.SysUiStatsEvent$Builder: android.util.StatsEvent build()>();

        interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r21 = r29.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        if $r21 == null goto label08;

        $r24 = r29.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        $r25 = $r24.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String enabler>;

        if $r25 == null goto label08;

        $r26 = r29.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void ruleToProto(int,android.service.notification.ZenModeConfig$ZenRule,java.util.List)>(i1, $r26, r28);

     label08:
        $r30 = r29.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r31 = virtualinvoke $r30.<android.util.ArrayMap: java.util.Collection values()>();

        r32 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r22 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (android.service.notification.ZenModeConfig$ZenRule) $r22;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void ruleToProto(int,android.service.notification.ZenModeConfig$ZenRule,java.util.List)>(i1, $r23, r28);

     label10:
        goto label09;

     label11:
        i2 = i2 + 1;

        goto label03;

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r27 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r27;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void readXml(org.xmlpull.v1.XmlPullParser, boolean, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.notification.ZenModeHelper r0;
        boolean z0, z2, $z4, $z7, $z8, $z9, z10, z11, $z12;
        android.service.notification.ZenModeConfig r1, $r9, r32;
        long l0;
        java.util.List $r2;
        android.util.ArrayMap $r3, $r8, $r10, $r17, $r19, $r20, r25;
        int $i2, $i4, $i5, i6;
        android.content.Context $r4, $r6;
        android.content.ContentResolver $r5, $r7;
        java.util.Collection $r11, $r21;
        java.lang.StringBuilder $r12;
        java.lang.Object $r15, $r22;
        java.lang.String $r16, r31;
        java.lang.Throwable $r23;
        org.xmlpull.v1.XmlPullParser r24;
        java.util.Iterator r26, r28;
        android.service.notification.ZenModeConfig$ZenRule r27, r29;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r24 := @parameter0: org.xmlpull.v1.XmlPullParser;

        z0 := @parameter1: boolean;

        i6 := @parameter2: int;

        r1 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig readXml(org.xmlpull.v1.XmlPullParser)>(r24);

        if r1 == null goto label19;

        if z0 == 0 goto label01;

        r1.<android.service.notification.ZenModeConfig: int user> = i6;

        r1.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule> = null;

     label01:
        z10 = 1;

        $r3 = r1.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r2 = <android.service.notification.ZenModeConfig: java.util.List DEFAULT_RULE_IDS>;

        z2 = virtualinvoke $r3.<android.util.ArrayMap: boolean containsAll(java.util.Collection)>($r2);

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r25 = r1.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        z11 = 1;

        if r25 == null goto label04;

        z11 = 1;

        $r19 = r1.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $i5 = virtualinvoke $r19.<android.util.ArrayMap: int size()>();

        if $i5 <= 0 goto label04;

        $r20 = r1.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r21 = virtualinvoke $r20.<android.util.ArrayMap: java.util.Collection values()>();

        r26 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        z11 = z10;

        $z7 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label04;

        $r22 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r27 = (android.service.notification.ZenModeConfig$ZenRule) $r22;

        if z0 == 0 goto label03;

        r27.<android.service.notification.ZenModeConfig$ZenRule: boolean snoozing> = 0;

        r27.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.Condition condition> = null;

        r27.<android.service.notification.ZenModeConfig$ZenRule: long creationTime> = l0;

     label03:
        $z8 = r27.<android.service.notification.ZenModeConfig$ZenRule: boolean enabled>;

        $z9 = $z8 ^ 1;

        z10 = z10 & $z9;

        goto label02;

     label04:
        if z2 != 0 goto label08;

        if z11 == 0 goto label08;

        if z0 != 0 goto label05;

        $i4 = r1.<android.service.notification.ZenModeConfig: int version>;

        if $i4 >= 8 goto label08;

     label05:
        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r1.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules> = $r8;

        $r9 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mDefaultConfig>;

        $r10 = $r9.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.util.Collection values()>();

        r28 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z12 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label07;

        $r15 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (android.service.notification.ZenModeConfig$ZenRule) $r15;

        $r17 = r1.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r16 = r29.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String id>;

        virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r29);

        goto label06;

     label07:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readXml");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reset to default rules");

        r31 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label09;

     label08:
        r31 = "readXml";

     label09:
        if i6 != -1 goto label10;

        i6 = 0;

        goto label10;

     label10:
        $i2 = r1.<android.service.notification.ZenModeConfig: int version>;

        if $i2 >= 8 goto label11;

        $r6 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r7, "show_zen_upgrade_notification", 1, i6);

        goto label12;

     label11:
        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r5, "zen_settings_updated", 1, i6);

     label12:
        $z4 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z4 == 0 goto label13;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ZenModeHelper", r31);

     label13:
        r32 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r32;

     label14:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,android.content.ComponentName,java.lang.String)>(r1, null, r31);

        exitmonitor r32;

     label15:
        goto label19;

     label16:
        $r23 := @caughtexception;

     label17:
        exitmonitor r32;

     label18:
        throw $r23;

     label19:
        return;

        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void recordCaller(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.ZenModeHelper r0;
        com.android.server.notification.NotificationRecord r1;
        com.android.server.notification.ZenModeFiltering $r2;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $r2 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeFiltering mFiltering>;

        virtualinvoke $r2.<com.android.server.notification.ZenModeFiltering: void recordCall(com.android.server.notification.NotificationRecord)>(r1);

        return;
    }

    public boolean removeAutomaticZenRule(java.lang.String, java.lang.String)
    {
        com.android.server.notification.ZenModeHelper r0;
        java.lang.String r1, $r13, $r18, r20;
        android.service.notification.ZenModeConfig r2, r3, $r6, $r7, $r12;
        android.service.notification.ZenModeConfig$ZenRule r4;
        java.lang.StringBuilder r5;
        boolean z0, $z1, $z2;
        android.util.ArrayMap $r8, $r10;
        java.lang.Object $r9;
        int $i0;
        java.lang.Throwable $r19;
        java.lang.SecurityException r21;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r20 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r2;

     label01:
        $r6 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        if $r6 != null goto label03;

        exitmonitor r2;

     label02:
        return 0;

     label03:
        $r7 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        r3 = virtualinvoke $r7.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>();

        $r8 = r3.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r20);

        r4 = (android.service.notification.ZenModeConfig$ZenRule) $r9;

     label04:
        if r4 != null goto label07;

     label05:
        exitmonitor r2;

     label06:
        return 0;

     label07:
        $z1 = virtualinvoke r0.<com.android.server.notification.ZenModeHelper: boolean canManageAutomaticZenRule(android.service.notification.ZenModeConfig$ZenRule)>(r4);

        if $z1 == 0 goto label10;

        $r10 = r3.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r20);

        $z2 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z2 == 0 goto label08;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeZenRule zenRule=");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reason=");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ZenModeHelper", $r18);

     label08:
        $r12 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $i0 = $r12.<android.service.notification.ZenModeConfig: int user>;

        $r13 = r4.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String pkg>;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void dispatchOnAutomaticRuleStatusChanged(int,java.lang.String,java.lang.String,int)>($i0, $r13, r20, 3);

        z0 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,java.lang.String,android.content.ComponentName,boolean)>(r3, r1, null, 1);

        exitmonitor r2;

     label09:
        return z0;

     label10:
        r21 = new java.lang.SecurityException;

        specialinvoke r21.<java.lang.SecurityException: void <init>(java.lang.String)>("Cannot delete rules not owned by your condition provider");

        throw r21;

     label11:
        $r19 := @caughtexception;

     label12:
        exitmonitor r2;

     label13:
        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public boolean removeAutomaticZenRules(java.lang.String, java.lang.String)
    {
        com.android.server.notification.ZenModeHelper r0;
        java.lang.String r1, $r12, r16;
        android.service.notification.ZenModeConfig r2, r3, $r5, $r6;
        android.service.notification.ZenModeConfig$ZenRule r4;
        boolean z0, $z1, $z2;
        android.util.ArrayMap $r7, $r8, $r9, $r13;
        int $i0, i1;
        java.lang.Object $r10, $r11;
        java.lang.Throwable $r15;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r16 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r2;

     label01:
        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        if $r5 != null goto label03;

        exitmonitor r2;

     label02:
        return 0;

     label03:
        $r6 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        r3 = virtualinvoke $r6.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>();

        $r7 = r3.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $i0 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

        i1 = $i0 - 1;

     label04:
        if i1 < 0 goto label07;

     label05:
        $r9 = r3.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r8 = r3.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r10 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r11 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r10);

        r4 = (android.service.notification.ZenModeConfig$ZenRule) $r11;

        $r12 = r4.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String pkg>;

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z1 == 0 goto label06;

        $z2 = virtualinvoke r0.<com.android.server.notification.ZenModeHelper: boolean canManageAutomaticZenRule(android.service.notification.ZenModeConfig$ZenRule)>(r4);

        if $z2 == 0 goto label06;

        $r13 = r3.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i1);

     label06:
        i1 = i1 + -1;

        goto label04;

     label07:
        z0 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,java.lang.String,android.content.ComponentName,boolean)>(r3, r1, null, 1);

        exitmonitor r2;

     label08:
        return z0;

     label09:
        $r15 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void removeCallback(com.android.server.notification.ZenModeHelper$Callback)
    {
        com.android.server.notification.ZenModeHelper r0;
        com.android.server.notification.ZenModeHelper$Callback r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: com.android.server.notification.ZenModeHelper$Callback;

        $r2 = r0.<com.android.server.notification.ZenModeHelper: java.util.ArrayList mCallbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void requestFromListener(android.content.ComponentName, int)
    {
        com.android.server.notification.ZenModeHelper r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r7, r8;
        android.content.ComponentName r6;
        int i0, i1;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r6 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 = staticinvoke <android.app.NotificationManager: int zenModeFromInterruptionFilter(int,int)>(i0, -1);

        if i1 == -1 goto label5;

        if r6 == null goto label1;

        r7 = virtualinvoke r6.<android.content.ComponentName: java.lang.String getPackageName()>();

        goto label2;

     label1:
        r7 = null;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("listener:");

        if r6 == null goto label3;

        r8 = virtualinvoke r6.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        goto label4;

     label3:
        r8 = null;

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void setManualZenMode(int,android.net.Uri,java.lang.String,java.lang.String)>(i1, null, r7, $r5);

     label5:
        return;
    }

    public void setAutomaticZenRuleState(android.net.Uri, android.service.notification.Condition)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.Condition r1;
        android.service.notification.ZenModeConfig r2, r3, $r4, $r5;
        android.service.notification.ZenModeConfig$ZenRule $r6;
        java.lang.Throwable $r7;
        android.net.Uri r8;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r8 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.service.notification.Condition;

        r2 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        if $r4 != null goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        r3 = virtualinvoke $r5.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>();

     label4:
        $r6 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig$ZenRule findMatchingRule(android.service.notification.ZenModeConfig,android.net.Uri,android.service.notification.Condition)>(r3, r8, r1);

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void setAutomaticZenRuleStateLocked(android.service.notification.ZenModeConfig,android.service.notification.ZenModeConfig$ZenRule,android.service.notification.Condition)>(r3, $r6, r1);

        exitmonitor r2;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void setAutomaticZenRuleState(java.lang.String, android.service.notification.Condition)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.Condition r1;
        android.service.notification.ZenModeConfig r2, r3, $r4, $r5;
        android.util.ArrayMap $r6;
        java.lang.Object $r7;
        android.service.notification.ZenModeConfig$ZenRule $r8;
        java.lang.Throwable $r9;
        java.lang.String r10;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: android.service.notification.Condition;

        r2 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        if $r4 != null goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        r3 = virtualinvoke $r5.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>();

        $r6 = r3.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r10);

        $r8 = (android.service.notification.ZenModeConfig$ZenRule) $r7;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void setAutomaticZenRuleStateLocked(android.service.notification.ZenModeConfig,android.service.notification.ZenModeConfig$ZenRule,android.service.notification.Condition)>(r3, $r8, r1);

        exitmonitor r2;

     label4:
        return;

     label5:
        $r9 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void setConfig(android.service.notification.ZenModeConfig, android.content.ComponentName, java.lang.String)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.content.ComponentName r1;
        java.lang.String r2;
        android.service.notification.ZenModeConfig r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r5 := @parameter0: android.service.notification.ZenModeConfig;

        r1 := @parameter1: android.content.ComponentName;

        r2 := @parameter2: java.lang.String;

        r3 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r3;

     label1:
        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,android.content.ComponentName,java.lang.String)>(r5, r1, r2);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean setConfigLocked(android.service.notification.ZenModeConfig, android.content.ComponentName, java.lang.String)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1;
        android.content.ComponentName r2;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: android.service.notification.ZenModeConfig;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,java.lang.String,android.content.ComponentName,boolean)>(r1, r3, r2, 1);

        return $z0;
    }

    public void setManualZenMode(int, android.net.Uri, java.lang.String, java.lang.String)
    {
        com.android.server.notification.ZenModeHelper r0;
        int i0;
        android.net.Uri r1;
        java.lang.String r2, r3;
        android.content.Context $r4;
        android.content.ContentResolver $r5;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void setManualZenMode(int,android.net.Uri,java.lang.String,java.lang.String,boolean)>(i0, r1, r3, r2, 1);

        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r5, "show_zen_settings_suggestion", 0);

        return;
    }

    public void setNotificationPolicy(android.app.NotificationManager$Policy)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1, r2, $r3;
        java.lang.Throwable $r4;
        android.app.NotificationManager$Policy r5;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r5 := @parameter0: android.app.NotificationManager$Policy;

        if r5 == null goto label8;

        r1 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        if r1 != null goto label1;

        goto label8;

     label1:
        entermonitor r1;

     label2:
        $r3 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        r2 = virtualinvoke $r3.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>();

        virtualinvoke r2.<android.service.notification.ZenModeConfig: void applyNotificationPolicy(android.app.NotificationManager$Policy)>(r5);

        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,android.content.ComponentName,java.lang.String)>(r2, null, "setNotificationPolicy");

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r4;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    void setPriorityOnlyDndExemptPackages(java.lang.String[])
    {
        com.android.server.notification.ZenModeHelper r0;
        java.lang.String[] r1;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r1 := @parameter0: java.lang.String[];

        r0.<com.android.server.notification.ZenModeHelper: java.lang.String[] mPriorityOnlyDndExemptPackages> = r1;

        return;
    }

    public void setSuppressedEffects(long)
    {
        com.android.server.notification.ZenModeHelper r0;
        long l0, $l1;
        byte $b2;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.server.notification.ZenModeHelper: long mSuppressedEffects>;

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label1;

        return;

     label1:
        r0.<com.android.server.notification.ZenModeHelper: long mSuppressedEffects> = l0;

        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: void applyRestrictions()>();

        return;
    }

    protected void setZenModeSetting(int)
    {
        com.android.server.notification.ZenModeHelper r0;
        int i0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.notification.ZenModeHelper: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r2, "zen_mode", i0);

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void showZenUpgradeNotification(int)>(i0);

        return;
    }

    public boolean shouldIntercept(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.service.notification.ZenModeConfig r1;
        boolean z0;
        android.app.NotificationManager$Policy $r2;
        int $i0;
        com.android.server.notification.ZenModeFiltering $r3;
        java.lang.Throwable $r4;
        com.android.server.notification.NotificationRecord r5;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r5 := @parameter0: com.android.server.notification.NotificationRecord;

        r1 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.notification.ZenModeHelper: com.android.server.notification.ZenModeFiltering mFiltering>;

        $i0 = r0.<com.android.server.notification.ZenModeHelper: int mZenMode>;

        $r2 = r0.<com.android.server.notification.ZenModeHelper: android.app.NotificationManager$Policy mConsolidatedPolicy>;

        z0 = virtualinvoke $r3.<com.android.server.notification.ZenModeFiltering: boolean shouldIntercept(int,android.app.NotificationManager$Policy,com.android.server.notification.NotificationRecord)>($i0, $r2, r5);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String toString()
    {
        com.android.server.notification.ZenModeHelper r0;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        return "ZenModeHelper";
    }

    public boolean updateAutomaticZenRule(java.lang.String, android.app.AutomaticZenRule, java.lang.String)
    {
        com.android.server.notification.ZenModeHelper r0;
        android.app.AutomaticZenRule r1;
        java.lang.String r2, $r15, r17, r19;
        android.service.notification.ZenModeConfig r3, r4, $r6, $r7, $r10;
        android.service.notification.ZenModeConfig$ZenRule r5;
        int i0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.util.ArrayMap $r8;
        java.lang.Object $r9;
        java.lang.Throwable $r16;
        java.lang.StringBuilder r18;
        byte b2;
        android.content.ComponentName $r20;
        java.lang.SecurityException r21;
        java.lang.IllegalArgumentException r22;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r17 := @parameter0: java.lang.String;

        r1 := @parameter1: android.app.AutomaticZenRule;

        r2 := @parameter2: java.lang.String;

        r3 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        entermonitor r3;

     label01:
        $r6 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        if $r6 != null goto label03;

        exitmonitor r3;

     label02:
        return 0;

     label03:
        $z1 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z1 == 0 goto label04;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateAutomaticZenRule zenRule=");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reason=");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ZenModeHelper", $r15);

     label04:
        $r7 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        r4 = virtualinvoke $r7.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>();

     label05:
        if r17 == null goto label15;

     label06:
        $r8 = r4.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r17);

        r5 = (android.service.notification.ZenModeConfig$ZenRule) $r9;

     label07:
        if r5 == null goto label14;

     label08:
        $z2 = virtualinvoke r0.<com.android.server.notification.ZenModeHelper: boolean canManageAutomaticZenRule(android.service.notification.ZenModeConfig$ZenRule)>(r5);

        if $z2 == 0 goto label14;

        $z3 = r5.<android.service.notification.ZenModeConfig$ZenRule: boolean enabled>;

        $z4 = virtualinvoke r1.<android.app.AutomaticZenRule: boolean isEnabled()>();

        if $z3 == $z4 goto label12;

        $r10 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        i0 = $r10.<android.service.notification.ZenModeConfig: int user>;

        r19 = r5.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String pkg>;

        $z5 = virtualinvoke r1.<android.app.AutomaticZenRule: boolean isEnabled()>();

        if $z5 == 0 goto label10;

     label09:
        b2 = 1;

        goto label11;

     label10:
        b2 = 2;

     label11:
        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void dispatchOnAutomaticRuleStatusChanged(int,java.lang.String,java.lang.String,int)>(i0, r19, r17, b2);

     label12:
        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void populateZenRule(android.app.AutomaticZenRule,android.service.notification.ZenModeConfig$ZenRule,boolean)>(r1, r5, 0);

        $r20 = r5.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName component>;

        z0 = specialinvoke r0.<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,java.lang.String,android.content.ComponentName,boolean)>(r4, r2, $r20, 1);

        exitmonitor r3;

     label13:
        return z0;

     label14:
        r21 = new java.lang.SecurityException;

        specialinvoke r21.<java.lang.SecurityException: void <init>(java.lang.String)>("Cannot update rules not owned by your condition provider");

        throw r21;

     label15:
        r22 = new java.lang.IllegalArgumentException;

        specialinvoke r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Rule doesn\'t exist");

        throw r22;

     label16:
        $r16 := @caughtexception;

     label17:
        exitmonitor r3;

     label18:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    protected void updateDefaultZenRules()
    {
        com.android.server.notification.ZenModeHelper r0;
        java.util.Iterator r1;
        android.service.notification.ZenModeConfig$ZenRule r2, r3;
        android.service.notification.ZenModeConfig $r5, $r9;
        android.util.ArrayMap $r6, $r11;
        java.util.Collection $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r8, $r12;
        java.lang.String $r10, $r13, $r14, $r15, $r16, $r20, $r23, $r25;
        android.app.AutomaticZenRule $r17;
        java.lang.StringBuilder $r18;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        specialinvoke r0.<com.android.server.notification.ZenModeHelper: void updateDefaultAutomaticRuleNames()>();

        $r5 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mDefaultConfig>;

        $r6 = $r5.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.service.notification.ZenModeConfig$ZenRule) $r8;

        $r9 = r0.<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig mConfig>;

        $r11 = $r9.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r10 = r2.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String id>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r10);

        r3 = (android.service.notification.ZenModeConfig$ZenRule) $r12;

        if r3 == null goto label3;

        $z1 = r3.<android.service.notification.ZenModeConfig$ZenRule: boolean modified>;

        if $z1 != 0 goto label3;

        $z2 = r3.<android.service.notification.ZenModeConfig$ZenRule: boolean enabled>;

        if $z2 != 0 goto label3;

        $r14 = r2.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

        $r13 = r3.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke r0.<com.android.server.notification.ZenModeHelper: boolean canManageAutomaticZenRule(android.service.notification.ZenModeConfig$ZenRule)>(r3);

        if $z4 == 0 goto label3;

        $z5 = <com.android.server.notification.ZenModeHelper: boolean DEBUG>;

        if $z5 == 0 goto label2;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Locale change - updating default zen rule name from ");

        $r20 = r3.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r23 = r2.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ZenModeHelper", $r25);

     label2:
        $r15 = r2.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

        r3.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name> = $r15;

        $r16 = r2.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String id>;

        $r17 = virtualinvoke r0.<com.android.server.notification.ZenModeHelper: android.app.AutomaticZenRule createAutomaticZenRule(android.service.notification.ZenModeConfig$ZenRule)>(r3);

        virtualinvoke r0.<com.android.server.notification.ZenModeHelper: boolean updateAutomaticZenRule(java.lang.String,android.app.AutomaticZenRule,java.lang.String)>($r16, $r17, "locale changed");

     label3:
        goto label1;

     label4:
        return;
    }

    public void writeXml(org.xmlpull.v1.XmlSerializer, boolean, java.lang.Integer, int) throws java.io.IOException
    {
        com.android.server.notification.ZenModeHelper r0;
        boolean z0;
        java.lang.Integer r1;
        int i0, i1, $i2, i3;
        android.util.SparseArray r2, $r3, $r4, $r7;
        java.lang.Object $r5;
        android.service.notification.ZenModeConfig $r6;
        java.lang.Throwable $r8;
        org.xmlpull.v1.XmlSerializer r9;

        r0 := @this: com.android.server.notification.ZenModeHelper;

        r9 := @parameter0: org.xmlpull.v1.XmlSerializer;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.Integer;

        i0 := @parameter3: int;

        r2 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        entermonitor r2;

     label01:
        $r3 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i1 goto label08;

        if z0 == 0 goto label06;

     label04:
        $r7 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        $i2 = virtualinvoke $r7.<android.util.SparseArray: int keyAt(int)>(i3);

        if $i2 == i0 goto label06;

     label05:
        goto label07;

     label06:
        $r4 = r0.<com.android.server.notification.ZenModeHelper: android.util.SparseArray mConfigs>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r6 = (android.service.notification.ZenModeConfig) $r5;

        virtualinvoke $r6.<android.service.notification.ZenModeConfig: void writeXml(org.xmlpull.v1.XmlSerializer,java.lang.Integer)>(r9, r1);

     label07:
        i3 = i3 + 1;

        goto label03;

     label08:
        exitmonitor r2;

     label09:
        return;

     label10:
        $r8 := @caughtexception;

     label11:
        exitmonitor r2;

     label12:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }
}
