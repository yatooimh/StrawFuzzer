class com.android.server.oemlock.OemLockService$2 extends android.service.oemlock.IOemLockService$Stub
{
    final com.android.server.oemlock.OemLockService this$0;

    void <init>(com.android.server.oemlock.OemLockService)
    {
        com.android.server.oemlock.OemLockService$2 r0;
        com.android.server.oemlock.OemLockService r1;

        r0 := @this: com.android.server.oemlock.OemLockService$2;

        r1 := @parameter0: com.android.server.oemlock.OemLockService;

        r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0> = r1;

        specialinvoke r0.<android.service.oemlock.IOemLockService$Stub: void <init>()>();

        return;
    }

    public java.lang.String getLockName()
    {
        com.android.server.oemlock.OemLockService$2 r0;
        long l0;
        com.android.server.oemlock.OemLockService $r1, $r2;
        com.android.server.oemlock.OemLock $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.oemlock.OemLockService$2;

        $r1 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        staticinvoke <com.android.server.oemlock.OemLockService: void access$200(com.android.server.oemlock.OemLockService)>($r1);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        $r3 = staticinvoke <com.android.server.oemlock.OemLockService: com.android.server.oemlock.OemLock access$000(com.android.server.oemlock.OemLockService)>($r2);

        r5 = virtualinvoke $r3.<com.android.server.oemlock.OemLock: java.lang.String getLockName()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r5;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isDeviceOemUnlocked()
    {
        com.android.server.oemlock.OemLockService$2 r0;
        java.lang.String r1;
        com.android.server.oemlock.OemLockService $r2;
        int $i0;
        boolean $z0;
        byte b1;

        r0 := @this: com.android.server.oemlock.OemLockService$2;

        $r2 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        staticinvoke <com.android.server.oemlock.OemLockService: void access$600(com.android.server.oemlock.OemLockService)>($r2);

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.boot.flash.locked");

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if $i0 == 48 goto label2;

     label1:
        goto label3;

     label2:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z0 == 0 goto label1;

        b1 = 0;

        goto label4;

     label3:
        b1 = -1;

     label4:
        if b1 == 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public boolean isOemUnlockAllowed()
    {
        com.android.server.oemlock.OemLockService$2 r0;
        long l0;
        com.android.server.oemlock.OemLockService $r2, $r3, $r5, $r8;
        com.android.server.oemlock.OemLock $r4, $r6;
        boolean $z0, $z1, z2;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.oemlock.OemLockService$2;

        $r2 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        staticinvoke <com.android.server.oemlock.OemLockService: void access$600(com.android.server.oemlock.OemLockService)>($r2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        $r4 = staticinvoke <com.android.server.oemlock.OemLockService: com.android.server.oemlock.OemLock access$000(com.android.server.oemlock.OemLockService)>($r3);

        $z0 = virtualinvoke $r4.<com.android.server.oemlock.OemLock: boolean isOemUnlockAllowedByCarrier()>();

        if $z0 == 0 goto label3;

        $r5 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        $r6 = staticinvoke <com.android.server.oemlock.OemLockService: com.android.server.oemlock.OemLock access$000(com.android.server.oemlock.OemLockService)>($r5);

        $z1 = virtualinvoke $r6.<com.android.server.oemlock.OemLock: boolean isOemUnlockAllowedByDevice()>();

        if $z1 == 0 goto label3;

     label2:
        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        $r8 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        staticinvoke <com.android.server.oemlock.OemLockService: void access$100(com.android.server.oemlock.OemLockService,boolean)>($r8, z2);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z2;

     label6:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public boolean isOemUnlockAllowedByCarrier()
    {
        com.android.server.oemlock.OemLockService$2 r0;
        long l0;
        boolean z0;
        com.android.server.oemlock.OemLockService $r2, $r3;
        com.android.server.oemlock.OemLock $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.oemlock.OemLockService$2;

        $r2 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        staticinvoke <com.android.server.oemlock.OemLockService: void access$200(com.android.server.oemlock.OemLockService)>($r2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        $r4 = staticinvoke <com.android.server.oemlock.OemLockService: com.android.server.oemlock.OemLock access$000(com.android.server.oemlock.OemLockService)>($r3);

        z0 = virtualinvoke $r4.<com.android.server.oemlock.OemLock: boolean isOemUnlockAllowedByCarrier()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isOemUnlockAllowedByUser()
    {
        com.android.server.oemlock.OemLockService$2 r0;
        long l0;
        boolean z0;
        com.android.server.oemlock.OemLockService $r2, $r3;
        com.android.server.oemlock.OemLock $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.oemlock.OemLockService$2;

        $r2 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        staticinvoke <com.android.server.oemlock.OemLockService: void access$400(com.android.server.oemlock.OemLockService)>($r2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        $r4 = staticinvoke <com.android.server.oemlock.OemLockService: com.android.server.oemlock.OemLock access$000(com.android.server.oemlock.OemLockService)>($r3);

        z0 = virtualinvoke $r4.<com.android.server.oemlock.OemLock: boolean isOemUnlockAllowedByDevice()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setOemUnlockAllowedByCarrier(boolean, byte[])
    {
        com.android.server.oemlock.OemLockService$2 r0;
        boolean z0;
        long l0;
        com.android.server.oemlock.OemLockService $r1, $r2, $r3;
        com.android.server.oemlock.OemLock $r4;
        java.lang.Throwable $r5;
        byte[] r6;

        r0 := @this: com.android.server.oemlock.OemLockService$2;

        z0 := @parameter0: boolean;

        r6 := @parameter1: byte[];

        $r1 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        staticinvoke <com.android.server.oemlock.OemLockService: void access$200(com.android.server.oemlock.OemLockService)>($r1);

        $r2 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        staticinvoke <com.android.server.oemlock.OemLockService: void access$300(com.android.server.oemlock.OemLockService)>($r2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        $r4 = staticinvoke <com.android.server.oemlock.OemLockService: com.android.server.oemlock.OemLock access$000(com.android.server.oemlock.OemLockService)>($r3);

        virtualinvoke $r4.<com.android.server.oemlock.OemLock: void setOemUnlockAllowedByCarrier(boolean,byte[])>(z0, r6);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setOemUnlockAllowedByUser(boolean)
    {
        com.android.server.oemlock.OemLockService$2 r0;
        boolean z0, $z1, $z2, $z3;
        long l0;
        com.android.server.oemlock.OemLockService $r1, $r2, $r3, $r4, $r6, $r8;
        com.android.server.oemlock.OemLock $r5, $r7;
        java.lang.Throwable $r9;
        java.lang.SecurityException r10, r11;

        r0 := @this: com.android.server.oemlock.OemLockService$2;

        z0 := @parameter0: boolean;

        $z1 = staticinvoke <android.app.ActivityManager: boolean isUserAMonkey()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        staticinvoke <com.android.server.oemlock.OemLockService: void access$400(com.android.server.oemlock.OemLockService)>($r1);

        $r2 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        staticinvoke <com.android.server.oemlock.OemLockService: void access$300(com.android.server.oemlock.OemLockService)>($r2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r3 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        $z2 = staticinvoke <com.android.server.oemlock.OemLockService: boolean access$500(com.android.server.oemlock.OemLockService)>($r3);

        if $z2 == 0 goto label5;

        $r4 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        $r5 = staticinvoke <com.android.server.oemlock.OemLockService: com.android.server.oemlock.OemLock access$000(com.android.server.oemlock.OemLockService)>($r4);

        $z3 = virtualinvoke $r5.<com.android.server.oemlock.OemLock: boolean isOemUnlockAllowedByCarrier()>();

        if $z3 == 0 goto label4;

        $r6 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        $r7 = staticinvoke <com.android.server.oemlock.OemLockService: com.android.server.oemlock.OemLock access$000(com.android.server.oemlock.OemLockService)>($r6);

        virtualinvoke $r7.<com.android.server.oemlock.OemLock: void setOemUnlockAllowedByDevice(boolean)>(z0);

        $r8 = r0.<com.android.server.oemlock.OemLockService$2: com.android.server.oemlock.OemLockService this$0>;

        staticinvoke <com.android.server.oemlock.OemLockService: void access$100(com.android.server.oemlock.OemLockService,boolean)>($r8, z0);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        r10 = new java.lang.SecurityException;

        specialinvoke r10.<java.lang.SecurityException: void <init>(java.lang.String)>("Carrier does not allow OEM unlock");

        throw r10;

     label5:
        r11 = new java.lang.SecurityException;

        specialinvoke r11.<java.lang.SecurityException: void <init>(java.lang.String)>("Admin does not allow OEM unlock");

        throw r11;

     label6:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }
}
