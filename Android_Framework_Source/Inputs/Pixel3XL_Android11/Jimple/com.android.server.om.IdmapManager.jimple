final class com.android.server.om.IdmapManager extends java.lang.Object
{
    private static final boolean VENDOR_IS_Q_OR_LATER;
    private final com.android.server.om.IdmapDaemon mIdmapDaemon;
    private final com.android.server.om.OverlayableInfoCallback mOverlayableCallback;

    static void <clinit>()
    {
        int i0;
        java.lang.Throwable $r0;
        java.lang.String r1;
        boolean z0;

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.vndk.version", "29");

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        if i0 < 29 goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        goto label6;

     label5:
        $r0 := @caughtexception;

        z0 = 1;

     label6:
        <com.android.server.om.IdmapManager: boolean VENDOR_IS_Q_OR_LATER> = z0;

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
    }

    void <init>(com.android.server.om.IdmapDaemon, com.android.server.om.OverlayableInfoCallback)
    {
        com.android.server.om.IdmapManager r0;
        com.android.server.om.IdmapDaemon r1;
        com.android.server.om.OverlayableInfoCallback r2;

        r0 := @this: com.android.server.om.IdmapManager;

        r1 := @parameter0: com.android.server.om.IdmapDaemon;

        r2 := @parameter1: com.android.server.om.OverlayableInfoCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.om.IdmapManager: com.android.server.om.OverlayableInfoCallback mOverlayableCallback> = r2;

        r0.<com.android.server.om.IdmapManager: com.android.server.om.IdmapDaemon mIdmapDaemon> = r1;

        return;
    }

    private int calculateFulfilledPolicies(android.content.pm.PackageInfo, android.content.pm.PackageInfo, int)
    {
        com.android.server.om.IdmapManager r0;
        android.content.pm.PackageInfo r1, r2;
        int i0;
        android.content.pm.ApplicationInfo r3;
        java.lang.String $r4, $r5;
        com.android.server.om.OverlayableInfoCallback $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        short $s1, $s2, $s3, $s4, $s5, s6, s7;

        r0 := @this: com.android.server.om.IdmapManager;

        r1 := @parameter0: android.content.pm.PackageInfo;

        r2 := @parameter1: android.content.pm.PackageInfo;

        i0 := @parameter2: int;

        r3 = r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        s6 = 1;

        $r6 = r0.<com.android.server.om.IdmapManager: com.android.server.om.OverlayableInfoCallback mOverlayableCallback>;

        $r5 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r4 = r2.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z0 = interfaceinvoke $r6.<com.android.server.om.OverlayableInfoCallback: boolean signaturesMatching(java.lang.String,java.lang.String,int)>($r5, $r4, i0);

        if $z0 == 0 goto label1;

        s6 = 1 | 16;

     label1:
        s7 = s6;

        $z1 = specialinvoke r0.<com.android.server.om.IdmapManager: boolean matchesActorSignature(android.content.pm.PackageInfo,android.content.pm.PackageInfo,int)>(r1, r2, i0);

        if $z1 == 0 goto label2;

        s7 = s6 | 128;

     label2:
        $z2 = virtualinvoke r3.<android.content.pm.ApplicationInfo: boolean isVendor()>();

        if $z2 == 0 goto label3;

        $s5 = s7 | 4;

        return $s5;

     label3:
        $z3 = virtualinvoke r3.<android.content.pm.ApplicationInfo: boolean isProduct()>();

        if $z3 == 0 goto label4;

        $s4 = s7 | 8;

        return $s4;

     label4:
        $z4 = virtualinvoke r3.<android.content.pm.ApplicationInfo: boolean isOdm()>();

        if $z4 == 0 goto label5;

        $s3 = s7 | 32;

        return $s3;

     label5:
        $z5 = virtualinvoke r3.<android.content.pm.ApplicationInfo: boolean isOem()>();

        if $z5 == 0 goto label6;

        $s2 = s7 | 64;

        return $s2;

     label6:
        $z6 = virtualinvoke r3.<android.content.pm.ApplicationInfo: boolean isSystemApp()>();

        if $z6 != 0 goto label8;

        $z7 = virtualinvoke r3.<android.content.pm.ApplicationInfo: boolean isSystemExt()>();

        if $z7 == 0 goto label7;

        goto label8;

     label7:
        return s7;

     label8:
        $s1 = s7 | 2;

        return $s1;
    }

    private boolean enforceOverlayable(android.content.pm.PackageInfo)
    {
        com.android.server.om.IdmapManager r0;
        int i0;
        boolean $z0, $z1, $z2, $z3, z4;
        android.content.pm.PackageInfo r1;
        android.content.pm.ApplicationInfo r2;

        r0 := @this: com.android.server.om.IdmapManager;

        r1 := @parameter0: android.content.pm.PackageInfo;

        r2 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i0 = r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        z4 = 1;

        if i0 < 29 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r2.<android.content.pm.ApplicationInfo: boolean isVendor()>();

        if $z0 == 0 goto label2;

        $z3 = <com.android.server.om.IdmapManager: boolean VENDOR_IS_Q_OR_LATER>;

        return $z3;

     label2:
        $z1 = virtualinvoke r2.<android.content.pm.ApplicationInfo: boolean isSystemApp()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r2.<android.content.pm.ApplicationInfo: boolean isSignedWithPlatformKey()>();

        if $z2 != 0 goto label3;

        goto label4;

     label3:
        z4 = 0;

     label4:
        return z4;
    }

    private boolean matchesActorSignature(android.content.pm.PackageInfo, android.content.pm.PackageInfo, int)
    {
        com.android.server.om.IdmapManager r0;
        android.content.pm.PackageInfo r1, r14;
        int i0;
        java.lang.String r2, $r3, $r5, $r7, $r11, r16;
        boolean z0;
        com.android.server.om.OverlayableInfoCallback $r4, $r6, $r12;
        java.util.Map $r8;
        android.util.Pair $r9;
        java.lang.Object $r10;
        java.lang.Throwable $r13;
        android.content.om.OverlayableInfo r15;

        r0 := @this: com.android.server.om.IdmapManager;

        r14 := @parameter0: android.content.pm.PackageInfo;

        r1 := @parameter1: android.content.pm.PackageInfo;

        i0 := @parameter2: int;

        r2 = r1.<android.content.pm.PackageInfo: java.lang.String targetOverlayableName>;

        if r2 == null goto label7;

     label1:
        $r4 = r0.<com.android.server.om.IdmapManager: com.android.server.om.OverlayableInfoCallback mOverlayableCallback>;

        $r3 = r14.<android.content.pm.PackageInfo: java.lang.String packageName>;

        r15 = interfaceinvoke $r4.<com.android.server.om.OverlayableInfoCallback: android.content.om.OverlayableInfo getOverlayableForTarget(java.lang.String,java.lang.String,int)>($r3, r2, i0);

     label2:
        if r15 == null goto label5;

     label3:
        $r5 = r15.<android.content.om.OverlayableInfo: java.lang.String actor>;

        if $r5 == null goto label5;

        $r7 = r15.<android.content.om.OverlayableInfo: java.lang.String actor>;

        $r6 = r0.<com.android.server.om.IdmapManager: com.android.server.om.OverlayableInfoCallback mOverlayableCallback>;

        $r8 = interfaceinvoke $r6.<com.android.server.om.OverlayableInfoCallback: java.util.Map getNamedActors()>();

        $r9 = staticinvoke <com.android.server.om.OverlayActorEnforcer: android.util.Pair getPackageNameForActor(java.lang.String,java.util.Map)>($r7, $r8);

        $r10 = $r9.<android.util.Pair: java.lang.Object first>;

        r16 = (java.lang.String) $r10;

        $r12 = r0.<com.android.server.om.IdmapManager: com.android.server.om.OverlayableInfoCallback mOverlayableCallback>;

        $r11 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        z0 = interfaceinvoke $r12.<com.android.server.om.OverlayableInfoCallback: boolean signaturesMatching(java.lang.String,java.lang.String,int)>(r16, $r11, i0);

     label4:
        if z0 == 0 goto label5;

        return 1;

     label5:
        goto label7;

     label6:
        $r13 := @caughtexception;

     label7:
        return 0;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
    }

    boolean createIdmap(android.content.pm.PackageInfo, android.content.pm.PackageInfo, int)
    {
        com.android.server.om.IdmapManager r0;
        int i0, i1;
        java.lang.String r1, r2, $r13, $r15, r20;
        boolean z0, $z1, z2;
        android.content.pm.ApplicationInfo $r3, $r4;
        com.android.server.om.IdmapDaemon $r5, r19;
        java.lang.Exception $r6, $r16, r21;
        java.lang.StringBuilder $r7;
        android.content.pm.PackageInfo r17, r18;

        r0 := @this: com.android.server.om.IdmapManager;

        r17 := @parameter0: android.content.pm.PackageInfo;

        r18 := @parameter1: android.content.pm.PackageInfo;

        i0 := @parameter2: int;

        $r3 = r17.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r1 = virtualinvoke $r3.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        $r4 = r18.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r2 = virtualinvoke $r4.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        z2 = 0;

     label1:
        i1 = specialinvoke r0.<com.android.server.om.IdmapManager: int calculateFulfilledPolicies(android.content.pm.PackageInfo,android.content.pm.PackageInfo,int)>(r17, r18, i0);

        z0 = specialinvoke r0.<com.android.server.om.IdmapManager: boolean enforceOverlayable(android.content.pm.PackageInfo)>(r18);

        $r5 = r0.<com.android.server.om.IdmapManager: com.android.server.om.IdmapDaemon mIdmapDaemon>;

        $z1 = virtualinvoke $r5.<com.android.server.om.IdmapDaemon: boolean verifyIdmap(java.lang.String,java.lang.String,int,boolean,int)>(r1, r2, i1, z0, i0);

        if $z1 == 0 goto label3;

     label2:
        return 0;

     label3:
        r19 = r0.<com.android.server.om.IdmapManager: com.android.server.om.IdmapDaemon mIdmapDaemon>;

     label4:
        r20 = virtualinvoke r19.<com.android.server.om.IdmapDaemon: java.lang.String createIdmap(java.lang.String,java.lang.String,int,boolean,int)>(r1, r2, i1, z0, i0);

     label5:
        if r20 == null goto label6;

        z2 = 1;

     label6:
        return z2;

     label7:
        $r6 := @caughtexception;

        r21 = $r6;

        goto label9;

     label8:
        $r16 := @caughtexception;

        r21 = $r16;

     label9:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to generate idmap for ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = virtualinvoke r21.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("OverlayManager", $r15);

        return 0;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label4 to label5 with label7;
    }

    boolean idmapExists(android.content.om.OverlayInfo)
    {
        com.android.server.om.IdmapManager r0;
        android.content.om.OverlayInfo r1;
        int $i0;
        java.lang.String $r2;
        com.android.server.om.IdmapDaemon $r3;
        boolean $z0;

        r0 := @this: com.android.server.om.IdmapManager;

        r1 := @parameter0: android.content.om.OverlayInfo;

        $r3 = r0.<com.android.server.om.IdmapManager: com.android.server.om.IdmapDaemon mIdmapDaemon>;

        $r2 = r1.<android.content.om.OverlayInfo: java.lang.String baseCodePath>;

        $i0 = r1.<android.content.om.OverlayInfo: int userId>;

        $z0 = virtualinvoke $r3.<com.android.server.om.IdmapDaemon: boolean idmapExists(java.lang.String,int)>($r2, $i0);

        return $z0;
    }

    boolean idmapExists(android.content.pm.PackageInfo, int)
    {
        com.android.server.om.IdmapManager r0;
        android.content.pm.PackageInfo r1;
        int i0;
        android.content.pm.ApplicationInfo $r2;
        com.android.server.om.IdmapDaemon $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.android.server.om.IdmapManager;

        r1 := @parameter0: android.content.pm.PackageInfo;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.om.IdmapManager: com.android.server.om.IdmapDaemon mIdmapDaemon>;

        $r2 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = virtualinvoke $r2.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        $z0 = virtualinvoke $r3.<com.android.server.om.IdmapDaemon: boolean idmapExists(java.lang.String,int)>($r4, i0);

        return $z0;
    }

    boolean removeIdmap(android.content.om.OverlayInfo, int)
    {
        com.android.server.om.IdmapManager r0;
        android.content.om.OverlayInfo r1;
        int i0;
        boolean z0;
        java.lang.String $r4, $r9, $r12, $r14;
        com.android.server.om.IdmapDaemon $r5;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: com.android.server.om.IdmapManager;

        r1 := @parameter0: android.content.om.OverlayInfo;

        i0 := @parameter1: int;

     label1:
        $r5 = r0.<com.android.server.om.IdmapManager: com.android.server.om.IdmapDaemon mIdmapDaemon>;

        $r4 = r1.<android.content.om.OverlayInfo: java.lang.String baseCodePath>;

        z0 = virtualinvoke $r5.<com.android.server.om.IdmapDaemon: boolean removeIdmap(java.lang.String,int)>($r4, i0);

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to remove idmap for ");

        $r9 = r1.<android.content.om.OverlayInfo: java.lang.String baseCodePath>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("OverlayManager", $r14);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
