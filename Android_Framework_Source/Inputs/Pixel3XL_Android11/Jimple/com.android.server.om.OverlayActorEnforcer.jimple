public class com.android.server.om.OverlayActorEnforcer extends java.lang.Object
{
    private static final boolean DEBUG_REASON;
    private final com.android.server.om.OverlayableInfoCallback mOverlayableCallback;

    public void <init>(com.android.server.om.OverlayableInfoCallback)
    {
        com.android.server.om.OverlayActorEnforcer r0;
        com.android.server.om.OverlayableInfoCallback r1;

        r0 := @this: com.android.server.om.OverlayActorEnforcer;

        r1 := @parameter0: com.android.server.om.OverlayableInfoCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.om.OverlayActorEnforcer: com.android.server.om.OverlayableInfoCallback mOverlayableCallback> = r1;

        return;
    }

    static android.util.Pair getPackageNameForActor(java.lang.String, java.util.Map)
    {
        android.net.Uri r0;
        java.lang.String r1, $r2, $r5, $r8, r18, r22;
        boolean $z0, $z1, $z2;
        com.android.server.om.OverlayActorEnforcer$ActorState $r3, $r10, $r12, $r14, $r16;
        android.util.Pair $r4, $r11, $r13, $r15, $r17;
        int $i0;
        java.lang.Object $r6, $r7, $r9;
        java.util.Map r19, r21;
        java.util.List r20;

        r18 := @parameter0: java.lang.String;

        r19 := @parameter1: java.util.Map;

        r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r18);

        r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        r20 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $r2 = "overlay";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label5;

        $i0 = staticinvoke <com.android.internal.util.CollectionUtils: int size(java.util.Collection)>(r20);

        if $i0 == 1 goto label1;

        goto label5;

     label1:
        $z1 = interfaceinvoke r19.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r16 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState NO_NAMED_ACTORS>;

        $r17 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(null, $r16);

        return $r17;

     label2:
        $r5 = virtualinvoke r0.<android.net.Uri: java.lang.String getAuthority()>();

        $r6 = interfaceinvoke r19.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r21 = (java.util.Map) $r6;

        if r21 != null goto label3;

        $r14 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState MISSING_NAMESPACE>;

        $r15 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(null, $r14);

        return $r15;

     label3:
        $r7 = interfaceinvoke r20.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (java.lang.String) $r7;

        $r9 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r22 = (java.lang.String) $r9;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r22);

        if $z2 == 0 goto label4;

        $r12 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState MISSING_ACTOR_NAME>;

        $r13 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(null, $r12);

        return $r13;

     label4:
        $r10 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState ALLOWED>;

        $r11 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r22, $r10);

        return $r11;

     label5:
        $r3 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState INVALID_OVERLAYABLE_ACTOR_NAME>;

        $r4 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(null, $r3);

        return $r4;
    }

    private com.android.server.om.OverlayActorEnforcer$ActorState isAllowedActor(java.lang.String, android.content.om.OverlayInfo, int, int)
    {
        com.android.server.om.OverlayActorEnforcer r0;
        int i0, i1;
        java.lang.String[] r1;
        java.lang.String r2, r30, r32, r39, r44;
        com.android.server.om.OverlayActorEnforcer$ActorState $r3, $r9, $r12, $r13, $r14, $r15, $r16, $r18, $r21, $r22, $r25, $r27, $r29, r33, r34, r36, r40, r43;
        com.android.server.om.OverlayableInfoCallback $r4, $r5, $r6, $r11, $r17, $r19, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Map $r7;
        java.lang.Object $r8, $r10;
        java.lang.Throwable $r23, $r24, $r26, $r28;
        android.content.om.OverlayInfo r31;
        android.content.om.OverlayableInfo r38;
        android.util.Pair r42;
        android.content.pm.PackageInfo r45;
        android.content.pm.ApplicationInfo r46;

        r0 := @this: com.android.server.om.OverlayActorEnforcer;

        r30 := @parameter0: java.lang.String;

        r31 := @parameter1: android.content.om.OverlayInfo;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if i0 == 0 goto label24;

        if i0 == 1000 goto label24;

        $r4 = r0.<com.android.server.om.OverlayActorEnforcer: com.android.server.om.OverlayableInfoCallback mOverlayableCallback>;

        r1 = interfaceinvoke $r4.<com.android.server.om.OverlayableInfoCallback: java.lang.String[] getPackagesForUid(int)>(i0);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z0 == 0 goto label01;

        $r22 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState NO_PACKAGES_FOR_UID>;

        return $r22;

     label01:
        r2 = r31.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r1, r2);

        if $z1 == 0 goto label02;

        $r21 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState ALLOWED>;

        return $r21;

     label02:
        r32 = r31.<android.content.om.OverlayInfo: java.lang.String targetOverlayableName>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r32);

        if $z2 == 0 goto label11;

     label03:
        $r19 = r0.<com.android.server.om.OverlayActorEnforcer: com.android.server.om.OverlayableInfoCallback mOverlayableCallback>;

        $z7 = interfaceinvoke $r19.<com.android.server.om.OverlayableInfoCallback: boolean doesTargetDefineOverlayable(java.lang.String,int)>(r2, i1);

        if $z7 == 0 goto label05;

        r33 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState MISSING_TARGET_OVERLAYABLE_NAME>;

     label04:
        return r33;

     label05:
        $r20 = r0.<com.android.server.om.OverlayActorEnforcer: com.android.server.om.OverlayableInfoCallback mOverlayableCallback>;

        interfaceinvoke $r20.<com.android.server.om.OverlayableInfoCallback: void enforcePermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_OVERLAY_PACKAGES", r30);

        r34 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState ALLOWED>;

     label06:
        return r34;

     label07:
        $r23 := @caughtexception;

     label08:
        r36 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState MISSING_LEGACY_PERMISSION>;

     label09:
        return r36;

     label10:
        $r24 := @caughtexception;

        $r25 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState ERROR_READING_OVERLAYABLE>;

        return $r25;

     label11:
        $r5 = r0.<com.android.server.om.OverlayActorEnforcer: com.android.server.om.OverlayableInfoCallback mOverlayableCallback>;

        r38 = interfaceinvoke $r5.<com.android.server.om.OverlayableInfoCallback: android.content.om.OverlayableInfo getOverlayableForTarget(java.lang.String,java.lang.String,int)>(r2, r32, i1);

     label12:
        if r38 != null goto label13;

        $r18 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState MISSING_OVERLAYABLE>;

        return $r18;

     label13:
        r39 = r38.<android.content.om.OverlayableInfo: java.lang.String actor>;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r39);

        if $z3 == 0 goto label17;

     label14:
        $r17 = r0.<com.android.server.om.OverlayActorEnforcer: com.android.server.om.OverlayableInfoCallback mOverlayableCallback>;

        interfaceinvoke $r17.<com.android.server.om.OverlayableInfoCallback: void enforcePermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_OVERLAY_PACKAGES", r30);

        r40 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState ALLOWED>;

     label15:
        return r40;

     label16:
        $r26 := @caughtexception;

        $r27 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState MISSING_LEGACY_PERMISSION>;

        return $r27;

     label17:
        $r6 = r0.<com.android.server.om.OverlayActorEnforcer: com.android.server.om.OverlayableInfoCallback mOverlayableCallback>;

        $r7 = interfaceinvoke $r6.<com.android.server.om.OverlayableInfoCallback: java.util.Map getNamedActors()>();

        r42 = staticinvoke <com.android.server.om.OverlayActorEnforcer: android.util.Pair getPackageNameForActor(java.lang.String,java.util.Map)>(r39, $r7);

        $r8 = r42.<android.util.Pair: java.lang.Object second>;

        r43 = (com.android.server.om.OverlayActorEnforcer$ActorState) $r8;

        $r9 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState ALLOWED>;

        if r43 == $r9 goto label18;

        return r43;

     label18:
        $r10 = r42.<android.util.Pair: java.lang.Object first>;

        r44 = (java.lang.String) $r10;

        $r11 = r0.<com.android.server.om.OverlayActorEnforcer: com.android.server.om.OverlayableInfoCallback mOverlayableCallback>;

        r45 = interfaceinvoke $r11.<com.android.server.om.OverlayableInfoCallback: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r44, i1);

        if r45 != null goto label19;

        $r16 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState MISSING_APP_INFO>;

        return $r16;

     label19:
        r46 = r45.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if r46 != null goto label20;

        $r15 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState MISSING_APP_INFO>;

        return $r15;

     label20:
        $z4 = virtualinvoke r46.<android.content.pm.ApplicationInfo: boolean isSystemApp()>();

        if $z4 != 0 goto label21;

        $z6 = virtualinvoke r46.<android.content.pm.ApplicationInfo: boolean isUpdatedSystemApp()>();

        if $z6 != 0 goto label21;

        $r14 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState ACTOR_NOT_PREINSTALLED>;

        return $r14;

     label21:
        $z5 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r1, r44);

        if $z5 == 0 goto label22;

        $r13 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState ALLOWED>;

        return $r13;

     label22:
        $r12 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState INVALID_ACTOR>;

        return $r12;

     label23:
        $r28 := @caughtexception;

        $r29 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState UNABLE_TO_GET_TARGET>;

        return $r29;

     label24:
        $r3 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState ALLOWED>;

        return $r3;

        catch java.io.IOException from label03 to label04 with label10;
        catch java.lang.SecurityException from label05 to label06 with label07;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.IOException from label11 to label12 with label23;
        catch java.lang.SecurityException from label14 to label15 with label16;
    }

    void enforceActor(android.content.om.OverlayInfo, java.lang.String, int, int) throws java.lang.SecurityException
    {
        com.android.server.om.OverlayActorEnforcer r0;
        android.content.om.OverlayInfo r1;
        int i0, i1;
        java.lang.String r2, $r16, $r20, r21, r22;
        com.android.server.om.OverlayActorEnforcer$ActorState $r4, $r5;
        java.lang.StringBuilder $r6, $r12;
        boolean $z0;
        java.lang.SecurityException $r19;

        r0 := @this: com.android.server.om.OverlayActorEnforcer;

        r1 := @parameter0: android.content.om.OverlayInfo;

        r21 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r4 = specialinvoke r0.<com.android.server.om.OverlayActorEnforcer: com.android.server.om.OverlayActorEnforcer$ActorState isAllowedActor(java.lang.String,android.content.om.OverlayInfo,int,int)>(r21, r1, i0, i1);

        $r5 = <com.android.server.om.OverlayActorEnforcer$ActorState: com.android.server.om.OverlayActorEnforcer$ActorState ALLOWED>;

        if $r4 != $r5 goto label1;

        return;

     label1:
        r2 = r1.<android.content.om.OverlayInfo: java.lang.String targetOverlayableName>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UID");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed to call ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        r22 = "";

        goto label3;

     label2:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        r22 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r16 = r1.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r19 = new java.lang.SecurityException;

        $r20 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.SecurityException: void <init>(java.lang.String)>($r20);

        throw $r19;
    }

    public static void <clinit>()
    {
        <com.android.server.om.OverlayActorEnforcer: boolean DEBUG_REASON> = 0;

        return;
    }
}
