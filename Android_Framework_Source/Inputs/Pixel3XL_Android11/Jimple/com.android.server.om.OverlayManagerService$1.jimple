class com.android.server.om.OverlayManagerService$1 extends android.content.om.IOverlayManager$Stub
{
    final com.android.server.om.OverlayManagerService this$0;

    void <init>(com.android.server.om.OverlayManagerService)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        com.android.server.om.OverlayManagerService r1;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r1 := @parameter0: com.android.server.om.OverlayManagerService;

        r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0> = r1;

        specialinvoke r0.<android.content.om.IOverlayManager$Stub: void <init>()>();

        return;
    }

    private void enforceActor(java.lang.String, java.lang.String, int) throws java.lang.SecurityException
    {
        com.android.server.om.OverlayManagerService$1 r0;
        java.lang.String r1, $r9, r12;
        int i0, i1;
        android.content.om.OverlayInfo r2;
        com.android.server.om.OverlayManagerService $r3, $r10;
        com.android.server.om.OverlayManagerServiceImpl $r4;
        java.lang.StringBuilder $r5;
        java.lang.IllegalArgumentException $r8;
        com.android.server.om.OverlayActorEnforcer $r11;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r1 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r4 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerServiceImpl access$600(com.android.server.om.OverlayManagerService)>($r3);

        r2 = virtualinvoke $r4.<com.android.server.om.OverlayManagerServiceImpl: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>(r1, i0);

        if r2 == null goto label1;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r10 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r11 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayActorEnforcer access$800(com.android.server.om.OverlayManagerService)>($r10);

        virtualinvoke $r11.<com.android.server.om.OverlayActorEnforcer: void enforceActor(android.content.om.OverlayInfo,java.lang.String,int,int)>(r2, r12, i1, i0);

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to retrieve overlay information for ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    private void enforceDumpPermission(java.lang.String)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        java.lang.String r1;
        com.android.server.om.OverlayManagerService $r2;
        android.content.Context $r3;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.om.OverlayManagerService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", r1);

        return;
    }

    private int handleIncomingUser(int, java.lang.String)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        int i0, $i1, $i2, $i3;
        java.lang.String r1;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i1, $i2, i0, 0, 1, r1, null);

        return $i3;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.om.OverlayManagerService$1 r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r6, $r7, $r8, $r9, $r14, $r15, $r19, $r21, r29, $r30, $r35;
        com.android.server.om.DumpState $r3;
        int $i1, $i2, $i3, $i4, $i6, $i7, i8, i9, $i10;
        com.android.server.om.OverlayManagerService $r4, $r31, $r33;
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        char $c5;
        java.lang.StringBuilder $r10, $r17;
        java.lang.Throwable $r16, $r22;
        java.io.FileDescriptor r23;
        java.lang.String[] r24;
        byte b11;
        java.lang.Object r32;
        com.android.server.om.OverlayManagerServiceImpl $r34;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r23 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r24 := @parameter2: java.lang.String[];

        $r3 = new com.android.server.om.DumpState;

        specialinvoke $r3.<com.android.server.om.DumpState: void <init>()>();

        virtualinvoke $r3.<com.android.server.om.DumpState: void setUserId(int)>(-1);

        i8 = 0;

     label01:
        $i1 = lengthof r24;

        if i8 >= $i1 goto label10;

        r2 = r24[i8];

        if r2 == null goto label10;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i4 <= 0 goto label10;

        $c5 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        if $c5 == 45 goto label02;

        goto label10;

     label02:
        i8 = i8 + 1;

        $r7 = "-h";

        $z10 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z10 == 0 goto label03;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("dump [-h] [--verbose] [--user USER_ID] [[FIELD] PACKAGE]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Print debugging information about the overlay manager.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  With optional parameter PACKAGE, limit output to the specified");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  package. With optional parameter FIELD, limit output to");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  the value of that SettingsItem field. Field names are");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  case insensitive and out.println the m prefix can be omitted,");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  so the following are equivalent: mState, mstate, State, state.");

        return;

     label03:
        $r8 = "--user";

        $z11 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z11 == 0 goto label07;

        $i6 = lengthof r24;

        if i8 < $i6 goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: user missing argument");

        return;

     label04:
        $r15 = r24[i8];

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        virtualinvoke $r3.<com.android.server.om.DumpState: void setUserId(int)>($i7);

     label05:
        i8 = i8 + 1;

        goto label09;

     label06:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: user argument is not a number: ");

        $r19 = r24[i8];

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        return;

     label07:
        $r9 = "--verbose";

        $z12 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z12 == 0 goto label08;

        virtualinvoke $r3.<com.android.server.om.DumpState: void setVerbose(boolean)>(1);

        goto label09;

     label08:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown argument: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; use -h for help");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

     label09:
        goto label01;

     label10:
        i9 = i8;

        $i10 = lengthof r24;

        if i8 >= $i10 goto label25;

        r29 = r24[i8];

        i9 = i8 + 1;

        $i3 = virtualinvoke r29.<java.lang.String: int hashCode()>();

        lookupswitch($i3)
        {
            case -1750736508: goto label21;
            case -1248283232: goto label20;
            case -1165461084: goto label19;
            case -836029914: goto label18;
            case -831052100: goto label17;
            case 50511102: goto label16;
            case 109757585: goto label15;
            case 440941271: goto label14;
            case 909712337: goto label13;
            case 1693907299: goto label12;
            default: goto label11;
        };

     label11:
        b11 = -1;

        goto label22;

     label12:
        $z0 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("basecodepath");

        if $z0 == 0 goto label11;

        b11 = 4;

        goto label22;

     label13:
        $z1 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("packagename");

        if $z1 == 0 goto label11;

        b11 = 0;

        goto label22;

     label14:
        $z2 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("isenabled");

        if $z2 == 0 goto label11;

        b11 = 6;

        goto label22;

     label15:
        $z3 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("state");

        if $z3 == 0 goto label11;

        b11 = 5;

        goto label22;

     label16:
        $z4 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("category");

        if $z4 == 0 goto label11;

        b11 = 9;

        goto label22;

     label17:
        $z5 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("ismutable");

        if $z5 == 0 goto label11;

        b11 = 7;

        goto label22;

     label18:
        $z6 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("userid");

        if $z6 == 0 goto label11;

        b11 = 1;

        goto label22;

     label19:
        $z7 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("priority");

        if $z7 == 0 goto label11;

        b11 = 8;

        goto label22;

     label20:
        $z8 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("targetpackagename");

        if $z8 == 0 goto label11;

        b11 = 2;

        goto label22;

     label21:
        $z9 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("targetoverlayablename");

        if $z9 == 0 goto label11;

        b11 = 3;

     label22:
        tableswitch(b11)
        {
            case 0: goto label24;
            case 1: goto label24;
            case 2: goto label24;
            case 3: goto label24;
            case 4: goto label24;
            case 5: goto label24;
            case 6: goto label24;
            case 7: goto label24;
            case 8: goto label24;
            case 9: goto label24;
            default: goto label23;
        };

     label23:
        virtualinvoke $r3.<com.android.server.om.DumpState: void setPackageName(java.lang.String)>(r29);

        goto label25;

     label24:
        virtualinvoke $r3.<com.android.server.om.DumpState: void setField(java.lang.String)>(r29);

     label25:
        $r30 = virtualinvoke $r3.<com.android.server.om.DumpState: java.lang.String getPackageName()>();

        if $r30 != null goto label26;

        $i2 = lengthof r24;

        if i9 >= $i2 goto label26;

        $r6 = r24[i9];

        virtualinvoke $r3.<com.android.server.om.DumpState: void setPackageName(java.lang.String)>($r6);

     label26:
        specialinvoke r0.<com.android.server.om.OverlayManagerService$1: void enforceDumpPermission(java.lang.String)>("dump");

        $r31 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        r32 = staticinvoke <com.android.server.om.OverlayManagerService: java.lang.Object access$400(com.android.server.om.OverlayManagerService)>($r31);

        entermonitor r32;

     label27:
        $r33 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r34 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerServiceImpl access$600(com.android.server.om.OverlayManagerService)>($r33);

        virtualinvoke $r34.<com.android.server.om.OverlayManagerServiceImpl: void dump(java.io.PrintWriter,com.android.server.om.DumpState)>(r1, $r3);

        $r35 = virtualinvoke $r3.<com.android.server.om.DumpState: java.lang.String getPackageName()>();

        if $r35 != null goto label28;

        $r4 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r5 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl access$500(com.android.server.om.OverlayManagerService)>($r4);

        virtualinvoke $r5.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: void dump(java.io.PrintWriter,com.android.server.om.DumpState)>(r1, $r3);

     label28:
        exitmonitor r32;

     label29:
        return;

     label30:
        $r22 := @caughtexception;

     label31:
        exitmonitor r32;

     label32:
        throw $r22;

        catch java.lang.NumberFormatException from label04 to label05 with label06;
        catch java.lang.Throwable from label27 to label28 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    public java.util.Map getAllOverlays(int)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        java.lang.String $r3;
        com.android.server.om.OverlayManagerService $r4, $r5;
        com.android.server.om.OverlayManagerServiceImpl $r6;
        java.lang.Throwable $r7, $r8;
        int i0, i1;
        java.lang.StringBuilder r9;
        java.lang.Object r10;
        java.util.Map r11;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        i0 := @parameter0: int;

     label1:
        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OMS#getAllOverlays ");

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(67108864L, $r3);

        i1 = specialinvoke r0.<com.android.server.om.OverlayManagerService$1: int handleIncomingUser(int,java.lang.String)>(i0, "getAllOverlays");

        $r4 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        r10 = staticinvoke <com.android.server.om.OverlayManagerService: java.lang.Object access$400(com.android.server.om.OverlayManagerService)>($r4);

        entermonitor r10;

     label2:
        $r5 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r6 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerServiceImpl access$600(com.android.server.om.OverlayManagerService)>($r5);

        r11 = virtualinvoke $r6.<com.android.server.om.OverlayManagerServiceImpl: java.util.Map getOverlaysForUser(int)>(i1);

        exitmonitor r10;

     label3:
        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        return r11;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r10;

     label6:
        throw $r8;

     label7:
        $r7 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public java.lang.String[] getDefaultOverlayPackages()
    {
        com.android.server.om.OverlayManagerService$1 r0;
        long l0;
        com.android.server.om.OverlayManagerService $r1, $r3, $r4;
        android.content.Context $r2;
        com.android.server.om.OverlayManagerServiceImpl $r5;
        java.lang.Throwable $r6, $r7, $r8;
        java.lang.Object r9;
        java.lang.String[] r10;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(67108864L, "OMS#getDefaultOverlayPackages");

        $r1 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.om.OverlayManagerService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MODIFY_THEME_OVERLAY", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r3 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        r9 = staticinvoke <com.android.server.om.OverlayManagerService: java.lang.Object access$400(com.android.server.om.OverlayManagerService)>($r3);

        entermonitor r9;

     label03:
        $r4 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r5 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerServiceImpl access$600(com.android.server.om.OverlayManagerService)>($r4);

        r10 = virtualinvoke $r5.<com.android.server.om.OverlayManagerServiceImpl: java.lang.String[] getDefaultOverlayPackages()>();

        exitmonitor r9;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label05:
        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        return r10;

     label06:
        $r6 := @caughtexception;

     label07:
        exitmonitor r9;

     label08:
        throw $r6;

     label09:
        $r7 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label11:
        throw $r7;

     label12:
        $r8 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    public android.content.om.OverlayInfo getOverlayInfo(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        java.lang.String $r3, r9;
        com.android.server.om.OverlayManagerService $r4, $r5;
        com.android.server.om.OverlayManagerServiceImpl $r6;
        java.lang.Throwable $r7, $r8;
        int i0, i1;
        java.lang.StringBuilder r10;
        java.lang.Object r11;
        android.content.om.OverlayInfo r12;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r9 != null goto label1;

        return null;

     label1:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OMS#getOverlayInfo ");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r3 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(67108864L, $r3);

        i1 = specialinvoke r0.<com.android.server.om.OverlayManagerService$1: int handleIncomingUser(int,java.lang.String)>(i0, "getOverlayInfo");

        $r4 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        r11 = staticinvoke <com.android.server.om.OverlayManagerService: java.lang.Object access$400(com.android.server.om.OverlayManagerService)>($r4);

        entermonitor r11;

     label2:
        $r5 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r6 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerServiceImpl access$600(com.android.server.om.OverlayManagerService)>($r5);

        r12 = virtualinvoke $r6.<com.android.server.om.OverlayManagerServiceImpl: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>(r9, i1);

        exitmonitor r11;

     label3:
        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        return r12;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r11;

     label6:
        throw $r8;

     label7:
        $r7 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public java.util.List getOverlayInfosForTarget(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        java.lang.String $r3, r10;
        com.android.server.om.OverlayManagerService $r4, $r5;
        com.android.server.om.OverlayManagerServiceImpl $r6;
        java.util.List $r7, r13;
        java.lang.Throwable $r8, $r9;
        int i0, i1;
        java.lang.StringBuilder r11;
        java.lang.Object r12;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r10 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r10 != null goto label1;

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r7;

     label1:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OMS#getOverlayInfosForTarget ");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r3 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(67108864L, $r3);

        i1 = specialinvoke r0.<com.android.server.om.OverlayManagerService$1: int handleIncomingUser(int,java.lang.String)>(i0, "getOverlayInfosForTarget");

        $r4 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        r12 = staticinvoke <com.android.server.om.OverlayManagerService: java.lang.Object access$400(com.android.server.om.OverlayManagerService)>($r4);

        entermonitor r12;

     label2:
        $r5 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r6 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerServiceImpl access$600(com.android.server.om.OverlayManagerService)>($r5);

        r13 = virtualinvoke $r6.<com.android.server.om.OverlayManagerServiceImpl: java.util.List getOverlayInfosForTarget(java.lang.String,int)>(r10, i1);

        exitmonitor r12;

     label3:
        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        return r13;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r12;

     label6:
        throw $r9;

     label7:
        $r8 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void invalidateCachesForOverlay(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        long l0;
        java.lang.Object r1;
        com.android.server.om.OverlayManagerService $r2, $r3;
        com.android.server.om.OverlayManagerServiceImpl $r4;
        java.lang.Throwable $r5, $r6;
        java.lang.String r7;
        int i1, i2;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r7 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        if r7 != null goto label1;

        return;

     label1:
        i2 = specialinvoke r0.<com.android.server.om.OverlayManagerService$1: int handleIncomingUser(int,java.lang.String)>(i1, "invalidateCachesForOverlay");

        specialinvoke r0.<com.android.server.om.OverlayManagerService$1: void enforceActor(java.lang.String,java.lang.String,int)>(r7, "invalidateCachesForOverlay", i2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r2 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        r1 = staticinvoke <com.android.server.om.OverlayManagerService: java.lang.Object access$400(com.android.server.om.OverlayManagerService)>($r2);

        entermonitor r1;

     label3:
        $r3 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r4 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerServiceImpl access$600(com.android.server.om.OverlayManagerService)>($r3);

        virtualinvoke $r4.<com.android.server.om.OverlayManagerServiceImpl: void removeIdmapForOverlay(java.lang.String,int)>(r7, i2);

        exitmonitor r1;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r5;

     label8:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label7 to label8 with label8;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        android.os.ShellCallback r5;
        android.os.ResultReceiver r6;
        com.android.server.om.OverlayManagerShellCommand $r7;
        com.android.server.om.OverlayManagerService $r8;
        android.content.Context $r9;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.FileDescriptor;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.ShellCallback;

        r6 := @parameter5: android.os.ResultReceiver;

        $r7 = new com.android.server.om.OverlayManagerShellCommand;

        $r8 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r9 = virtualinvoke $r8.<com.android.server.om.OverlayManagerService: android.content.Context getContext()>();

        specialinvoke $r7.<com.android.server.om.OverlayManagerShellCommand: void <init>(android.content.Context,android.content.om.IOverlayManager)>($r9, r0);

        virtualinvoke $r7.<com.android.server.om.OverlayManagerShellCommand: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, r1, r2, r3, r4, r5, r6);

        return;
    }

    public boolean setEnabled(java.lang.String, boolean, int)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        long l0;
        java.lang.String $r5, r12;
        com.android.server.om.OverlayManagerService $r6, $r7;
        com.android.server.om.OverlayManagerServiceImpl $r8;
        java.lang.Throwable $r9, $r10, $r11;
        boolean z0, z1;
        int i1, i2;
        java.lang.StringBuilder r13;
        java.lang.Object r14;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r12 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        if r12 != null goto label01;

        return 0;

     label01:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OMS#setEnabled ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r5 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(67108864L, $r5);

        i2 = specialinvoke r0.<com.android.server.om.OverlayManagerService$1: int handleIncomingUser(int,java.lang.String)>(i1, "setEnabled");

        specialinvoke r0.<com.android.server.om.OverlayManagerService$1: void enforceActor(java.lang.String,java.lang.String,int)>(r12, "setEnabled", i2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r6 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        r14 = staticinvoke <com.android.server.om.OverlayManagerService: java.lang.Object access$400(com.android.server.om.OverlayManagerService)>($r6);

        entermonitor r14;

     label03:
        $r7 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r8 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerServiceImpl access$600(com.android.server.om.OverlayManagerService)>($r7);

        z1 = virtualinvoke $r8.<com.android.server.om.OverlayManagerServiceImpl: boolean setEnabled(java.lang.String,boolean,int)>(r12, z0, i2);

        exitmonitor r14;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label05:
        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        return z1;

     label06:
        $r10 := @caughtexception;

     label07:
        exitmonitor r14;

     label08:
        throw $r10;

     label09:
        $r9 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label11:
        throw $r9;

     label12:
        $r11 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    public boolean setEnabledExclusive(java.lang.String, boolean, int)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        long l0;
        java.lang.String $r5, r12;
        com.android.server.om.OverlayManagerService $r6, $r7;
        com.android.server.om.OverlayManagerServiceImpl $r8;
        java.lang.Throwable $r9, $r10, $r11;
        boolean z0, z1;
        int i1, i2;
        java.lang.StringBuilder r13;
        java.lang.Object r14;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r12 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        if r12 == null goto label13;

        if z0 != 0 goto label01;

        goto label13;

     label01:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OMS#setEnabledExclusive ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r5 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(67108864L, $r5);

        i2 = specialinvoke r0.<com.android.server.om.OverlayManagerService$1: int handleIncomingUser(int,java.lang.String)>(i1, "setEnabledExclusive");

        specialinvoke r0.<com.android.server.om.OverlayManagerService$1: void enforceActor(java.lang.String,java.lang.String,int)>(r12, "setEnabledExclusive", i2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r6 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        r14 = staticinvoke <com.android.server.om.OverlayManagerService: java.lang.Object access$400(com.android.server.om.OverlayManagerService)>($r6);

        entermonitor r14;

     label03:
        $r7 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r8 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerServiceImpl access$600(com.android.server.om.OverlayManagerService)>($r7);

        z1 = virtualinvoke $r8.<com.android.server.om.OverlayManagerServiceImpl: boolean setEnabledExclusive(java.lang.String,boolean,int)>(r12, 0, i2);

        exitmonitor r14;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label05:
        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        return z1;

     label06:
        $r9 := @caughtexception;

     label07:
        exitmonitor r14;

     label08:
        throw $r9;

     label09:
        $r10 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label11:
        throw $r10;

     label12:
        $r11 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        throw $r11;

     label13:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    public boolean setEnabledExclusiveInCategory(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        long l0;
        boolean z0;
        java.lang.String $r3, r10;
        com.android.server.om.OverlayManagerService $r4, $r5;
        com.android.server.om.OverlayManagerServiceImpl $r6;
        java.lang.Throwable $r7, $r8, $r9;
        int i1, i2;
        java.lang.StringBuilder r11;
        java.lang.Object r12;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r10 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        if r10 != null goto label01;

        return 0;

     label01:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OMS#setEnabledExclusiveInCategory ");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r3 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(67108864L, $r3);

        i2 = specialinvoke r0.<com.android.server.om.OverlayManagerService$1: int handleIncomingUser(int,java.lang.String)>(i1, "setEnabledExclusiveInCategory");

        specialinvoke r0.<com.android.server.om.OverlayManagerService$1: void enforceActor(java.lang.String,java.lang.String,int)>(r10, "setEnabledExclusiveInCategory", i2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r4 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        r12 = staticinvoke <com.android.server.om.OverlayManagerService: java.lang.Object access$400(com.android.server.om.OverlayManagerService)>($r4);

        entermonitor r12;

     label03:
        $r5 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r6 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerServiceImpl access$600(com.android.server.om.OverlayManagerService)>($r5);

        z0 = virtualinvoke $r6.<com.android.server.om.OverlayManagerServiceImpl: boolean setEnabledExclusive(java.lang.String,boolean,int)>(r10, 1, i2);

        exitmonitor r12;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label05:
        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        return z0;

     label06:
        $r7 := @caughtexception;

     label07:
        exitmonitor r12;

     label08:
        throw $r7;

     label09:
        $r8 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label11:
        throw $r8;

     label12:
        $r9 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    public boolean setHighestPriority(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        long l0;
        boolean z0;
        java.lang.String $r3, r10;
        com.android.server.om.OverlayManagerService $r4, $r5;
        com.android.server.om.OverlayManagerServiceImpl $r6;
        java.lang.Throwable $r7, $r8, $r9;
        int i1, i2;
        java.lang.StringBuilder r11;
        java.lang.Object r12;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r10 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        if r10 != null goto label01;

        return 0;

     label01:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OMS#setHighestPriority ");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r3 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(67108864L, $r3);

        i2 = specialinvoke r0.<com.android.server.om.OverlayManagerService$1: int handleIncomingUser(int,java.lang.String)>(i1, "setHighestPriority");

        specialinvoke r0.<com.android.server.om.OverlayManagerService$1: void enforceActor(java.lang.String,java.lang.String,int)>(r10, "setHighestPriority", i2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r4 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        r12 = staticinvoke <com.android.server.om.OverlayManagerService: java.lang.Object access$400(com.android.server.om.OverlayManagerService)>($r4);

        entermonitor r12;

     label03:
        $r5 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r6 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerServiceImpl access$600(com.android.server.om.OverlayManagerService)>($r5);

        z0 = virtualinvoke $r6.<com.android.server.om.OverlayManagerServiceImpl: boolean setHighestPriority(java.lang.String,int)>(r10, i2);

        exitmonitor r12;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label05:
        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        return z0;

     label06:
        $r7 := @caughtexception;

     label07:
        exitmonitor r12;

     label08:
        throw $r7;

     label09:
        $r8 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label11:
        throw $r8;

     label12:
        $r9 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    public boolean setLowestPriority(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        long l0;
        boolean z0;
        java.lang.String $r3, r10;
        com.android.server.om.OverlayManagerService $r4, $r5;
        com.android.server.om.OverlayManagerServiceImpl $r6;
        java.lang.Throwable $r7, $r8, $r9;
        int i1, i2;
        java.lang.StringBuilder r11;
        java.lang.Object r12;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r10 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        if r10 != null goto label01;

        return 0;

     label01:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OMS#setLowestPriority ");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r3 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(67108864L, $r3);

        i2 = specialinvoke r0.<com.android.server.om.OverlayManagerService$1: int handleIncomingUser(int,java.lang.String)>(i1, "setLowestPriority");

        specialinvoke r0.<com.android.server.om.OverlayManagerService$1: void enforceActor(java.lang.String,java.lang.String,int)>(r10, "setLowestPriority", i2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r4 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        r12 = staticinvoke <com.android.server.om.OverlayManagerService: java.lang.Object access$400(com.android.server.om.OverlayManagerService)>($r4);

        entermonitor r12;

     label03:
        $r5 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r6 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerServiceImpl access$600(com.android.server.om.OverlayManagerService)>($r5);

        z0 = virtualinvoke $r6.<com.android.server.om.OverlayManagerServiceImpl: boolean setLowestPriority(java.lang.String,int)>(r10, i2);

        exitmonitor r12;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label05:
        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        return z0;

     label06:
        $r7 := @caughtexception;

     label07:
        exitmonitor r12;

     label08:
        throw $r7;

     label09:
        $r8 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label11:
        throw $r8;

     label12:
        $r9 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    public boolean setPriority(java.lang.String, java.lang.String, int)
    {
        com.android.server.om.OverlayManagerService$1 r0;
        java.lang.String r1, $r6, r13;
        long l0;
        boolean z0;
        com.android.server.om.OverlayManagerService $r7, $r8;
        com.android.server.om.OverlayManagerServiceImpl $r9;
        java.lang.Throwable $r10, $r11, $r12;
        int i1, i2;
        java.lang.StringBuilder r14;
        java.lang.Object r15;

        r0 := @this: com.android.server.om.OverlayManagerService$1;

        r13 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        if r13 == null goto label13;

        if r1 != null goto label01;

        goto label13;

     label01:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OMS#setPriority ");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(67108864L, $r6);

        i2 = specialinvoke r0.<com.android.server.om.OverlayManagerService$1: int handleIncomingUser(int,java.lang.String)>(i1, "setPriority");

        specialinvoke r0.<com.android.server.om.OverlayManagerService$1: void enforceActor(java.lang.String,java.lang.String,int)>(r13, "setPriority", i2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r7 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        r15 = staticinvoke <com.android.server.om.OverlayManagerService: java.lang.Object access$400(com.android.server.om.OverlayManagerService)>($r7);

        entermonitor r15;

     label03:
        $r8 = r0.<com.android.server.om.OverlayManagerService$1: com.android.server.om.OverlayManagerService this$0>;

        $r9 = staticinvoke <com.android.server.om.OverlayManagerService: com.android.server.om.OverlayManagerServiceImpl access$600(com.android.server.om.OverlayManagerService)>($r8);

        z0 = virtualinvoke $r9.<com.android.server.om.OverlayManagerServiceImpl: boolean setPriority(java.lang.String,java.lang.String,int)>(r13, r1, i2);

        exitmonitor r15;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label05:
        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        return z0;

     label06:
        $r12 := @caughtexception;

     label07:
        exitmonitor r15;

     label08:
        throw $r12;

     label09:
        $r10 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label11:
        throw $r10;

     label12:
        $r11 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(67108864L);

        throw $r11;

     label13:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
    }
}
