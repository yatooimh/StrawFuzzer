final class com.android.server.om.OverlayManagerService$PackageManagerHelperImpl extends java.lang.Object implements com.android.server.om.PackageManagerHelper, com.android.server.om.OverlayableInfoCallback
{
    private static final java.lang.String TAB1;
    private static final java.lang.String TAB2;
    private final android.util.SparseArray mCache;
    private final android.content.Context mContext;
    private final android.content.pm.IPackageManager mPackageManager;
    private final android.content.pm.PackageManagerInternal mPackageManagerInternal;

    void <init>(android.content.Context)
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        android.content.Context r1;
        android.util.SparseArray $r2;
        android.content.pm.IPackageManager $r3;
        java.lang.Object $r4;
        android.content.pm.PackageManagerInternal $r5;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache> = $r2;

        r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.content.Context mContext> = r1;

        $r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.content.pm.IPackageManager mPackageManager> = $r3;

        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r5 = (android.content.pm.PackageManagerInternal) $r4;

        r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.content.pm.PackageManagerInternal mPackageManagerInternal> = $r5;

        return;
    }

    public void cachePackageInfo(java.lang.String, int, android.content.pm.PackageInfo)
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        java.lang.String r1;
        int i0;
        android.content.pm.PackageInfo r2;
        java.util.HashMap r3, $r7, r9;
        android.util.SparseArray $r4, $r8;
        java.lang.Object $r5;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.PackageInfo;

        $r4 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (java.util.HashMap) $r5;

        r9 = r3;

        if r3 != null goto label1;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r9 = $r7;

        $r8 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r7);

     label1:
        virtualinvoke r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public boolean doesTargetDefineOverlayable(java.lang.String, int) throws java.io.IOException
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        int i0;
        boolean z0;
        java.io.IOException $r1;
        android.content.pm.ApplicationInfo $r2;
        java.lang.Throwable $r3, $r4, $r5;
        java.lang.String r6, r8;
        android.content.pm.PackageInfo r7;
        android.content.res.ApkAssets r9, r10;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r7 = virtualinvoke r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r6, i0);

        if r7 == null goto label14;

        $r2 = r7.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r8 = virtualinvoke $r2.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        r9 = null;

     label01:
        r10 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadFromPath(java.lang.String)>(r8);

     label02:
        r9 = r10;

     label03:
        z0 = virtualinvoke r10.<android.content.res.ApkAssets: boolean definesOverlayable()>();

     label04:
        if r10 == null goto label08;

     label05:
        virtualinvoke r10.<android.content.res.ApkAssets: void close()>();

     label06:
        goto label08;

     label07:
        $r3 := @caughtexception;

     label08:
        return z0;

     label09:
        $r5 := @caughtexception;

        if r9 == null goto label13;

     label10:
        virtualinvoke r9.<android.content.res.ApkAssets: void close()>();

     label11:
        goto label13;

     label12:
        $r4 := @caughtexception;

     label13:
        throw $r5;

     label14:
        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Unable to get target package");

        throw $r1;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public void dump(java.io.PrintWriter, com.android.server.om.DumpState)
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        java.io.PrintWriter r1;
        int i0, $i1, $i2, i3, i4, i5, i6, i7, i8;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        boolean $z0, $z1;
        android.util.SparseArray $r4, $r5, $r6, $r11, $r25, $r31, $r32;
        java.lang.StringBuilder $r7, $r16, $r26;
        java.lang.String $r10, $r19, $r24, $r30;
        java.lang.Object $r12, $r15, $r18, $r22, $r33;
        java.util.HashMap $r13, $r34;
        java.util.Set $r14;
        com.android.server.om.DumpState r35;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        r1 := @parameter0: java.io.PrintWriter;

        r35 := @parameter1: com.android.server.om.DumpState;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("PackageInfo cache");

        $z0 = virtualinvoke r35.<com.android.server.om.DumpState: boolean isVerbose()>();

        if $z0 != 0 goto label3;

        i3 = 0;

        $r25 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache>;

        i4 = virtualinvoke $r25.<android.util.SparseArray: int size()>();

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        $r31 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache>;

        i0 = virtualinvoke $r31.<android.util.SparseArray: int keyAt(int)>(i5);

        $r32 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache>;

        $r33 = virtualinvoke $r32.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r34 = (java.util.HashMap) $r33;

        $i2 = virtualinvoke $r34.<java.util.HashMap: int size()>();

        i3 = i3 + $i2;

        i5 = i5 + 1;

        goto label1;

     label2:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" package(s)");

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r30);

        return;

     label3:
        $r4 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if $i1 != 0 goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    <empty>");

        return;

     label4:
        $r5 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache>;

        i6 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i7 = 0;

     label5:
        if i7 >= i6 goto label8;

        $r6 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache>;

        i8 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i7);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    User ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache>;

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>(i8);

        $r13 = (java.util.HashMap) $r12;

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r15 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        ");

        $r18 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (java.lang.String) $r18;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r22 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        goto label6;

     label7:
        i7 = i7 + 1;

        goto label5;

     label8:
        return;
    }

    public void enforcePermission(java.lang.String, java.lang.String) throws java.lang.SecurityException
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        java.lang.String r1, r2;
        android.content.Context $r3;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void forgetAllPackageInfos(int)
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        int i0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache>;

        virtualinvoke $r1.<android.util.SparseArray: void delete(int)>(i0);

        return;
    }

    public void forgetPackageInfo(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        java.lang.String r1;
        int i0;
        java.util.HashMap r2;
        android.util.SparseArray $r3, $r6;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (java.util.HashMap) $r4;

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $z0 = virtualinvoke r2.<java.util.HashMap: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r6 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache>;

        virtualinvoke $r6.<android.util.SparseArray: void delete(int)>(i0);

     label2:
        return;
    }

    public android.content.pm.PackageInfo getCachedPackageInfo(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        int i0;
        java.util.HashMap r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3, $r4;
        java.lang.String r5;
        android.content.pm.PackageInfo r6;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.util.SparseArray mCache>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (java.util.HashMap) $r3;

        if r1 != null goto label1;

        r6 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (android.content.pm.PackageInfo) $r4;

     label2:
        return r6;
    }

    public java.util.Map getNamedActors()
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        com.android.server.SystemConfig $r1;
        java.util.Map $r2;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        $r1 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        $r2 = virtualinvoke $r1.<com.android.server.SystemConfig: java.util.Map getNamedActors()>();

        return $r2;
    }

    public java.util.List getOverlayPackages(int)
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        int i0;
        java.util.List r1;
        java.util.Iterator r2;
        android.content.pm.PackageInfo r3;
        android.content.pm.PackageManagerInternal $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.content.pm.PackageManagerInternal mPackageManagerInternal>;

        r1 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: java.util.List getOverlayPackages(int)>(i0);

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.pm.PackageInfo) $r5;

        $r6 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: void cachePackageInfo(java.lang.String,int,android.content.pm.PackageInfo)>($r6, i0, r3);

        goto label1;

     label2:
        return r1;
    }

    public android.content.om.OverlayableInfo getOverlayableForTarget(java.lang.String, java.lang.String, int) throws java.io.IOException
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        int i0;
        java.io.IOException $r1;
        android.content.pm.ApplicationInfo $r2;
        java.lang.Throwable $r3, $r4, $r5;
        java.lang.String r6, r7, r9;
        android.content.pm.PackageInfo r8;
        android.content.res.ApkAssets r10, r11;
        android.content.om.OverlayableInfo r12;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r8 = virtualinvoke r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r6, i0);

        if r8 == null goto label14;

        $r2 = r8.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r9 = virtualinvoke $r2.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        r10 = null;

     label01:
        r11 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadFromPath(java.lang.String)>(r9);

     label02:
        r10 = r11;

     label03:
        r12 = virtualinvoke r11.<android.content.res.ApkAssets: android.content.om.OverlayableInfo getOverlayableInfo(java.lang.String)>(r7);

     label04:
        if r11 == null goto label08;

     label05:
        virtualinvoke r11.<android.content.res.ApkAssets: void close()>();

     label06:
        goto label08;

     label07:
        $r4 := @caughtexception;

     label08:
        return r12;

     label09:
        $r5 := @caughtexception;

        if r10 == null goto label13;

     label10:
        virtualinvoke r10.<android.content.res.ApkAssets: void close()>();

     label11:
        goto label13;

     label12:
        $r3 := @caughtexception;

     label13:
        throw $r5;

     label14:
        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Unable to get target package");

        throw $r1;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public android.content.pm.PackageInfo getPackageInfo(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        java.lang.String r1;
        int i0;
        android.content.pm.PackageInfo $r2;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,boolean)>(r1, i0, 1);

        return $r2;
    }

    public android.content.pm.PackageInfo getPackageInfo(java.lang.String, int, boolean)
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        int i0;
        boolean z0;
        android.content.pm.IPackageManager $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;
        android.content.pm.PackageInfo r4, r5;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        r4 = virtualinvoke r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.content.pm.PackageInfo getCachedPackageInfo(java.lang.String,int)>(r3, i0);

        if r4 == null goto label1;

        return r4;

     label1:
        $r1 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.content.pm.IPackageManager mPackageManager>;

        r5 = interfaceinvoke $r1.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r3, 0, i0);

     label2:
        if z0 == 0 goto label4;

        if r5 == null goto label4;

     label3:
        virtualinvoke r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: void cachePackageInfo(java.lang.String,int,android.content.pm.PackageInfo)>(r3, i0, r5);

     label4:
        return r5;

     label5:
        $r2 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public java.lang.String[] getPackagesForUid(int)
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        int i0;
        android.content.pm.IPackageManager $r1;
        android.os.RemoteException $r2;
        java.lang.String[] r3;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.content.pm.IPackageManager mPackageManager>;

        r3 = interfaceinvoke $r1.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean signaturesMatching(java.lang.String, java.lang.String, int)
    {
        com.android.server.om.OverlayManagerService$PackageManagerHelperImpl r0;
        java.lang.String r1, r4;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;
        int i0, i1;
        boolean z0;

        r0 := @this: com.android.server.om.OverlayManagerService$PackageManagerHelperImpl;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 = 0;

     label1:
        $r2 = r0.<com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: android.content.pm.IPackageManager mPackageManager>;

        i1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: int checkSignatures(java.lang.String,java.lang.String)>(r4, r1);

     label2:
        if i1 != 0 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public static void <clinit>()
    {
        <com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: java.lang.String TAB2> = "        ";

        <com.android.server.om.OverlayManagerService$PackageManagerHelperImpl: java.lang.String TAB1> = "    ";

        return;
    }
}
