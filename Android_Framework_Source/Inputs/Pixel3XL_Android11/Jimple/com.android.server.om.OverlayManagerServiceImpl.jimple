final class com.android.server.om.OverlayManagerServiceImpl extends java.lang.Object
{
    private static final int FLAG_OVERLAY_IS_BEING_REPLACED;
    private static final int FLAG_TARGET_IS_BEING_REPLACED;
    private final java.lang.String[] mDefaultOverlays;
    private final com.android.server.om.IdmapManager mIdmapManager;
    private final com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener;
    private final com.android.internal.content.om.OverlayConfig mOverlayConfig;
    private final com.android.server.om.PackageManagerHelper mPackageManager;
    private final com.android.server.om.OverlayManagerSettings mSettings;

    void <init>(com.android.server.om.PackageManagerHelper, com.android.server.om.IdmapManager, com.android.server.om.OverlayManagerSettings, com.android.internal.content.om.OverlayConfig, java.lang.String[], com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        com.android.server.om.PackageManagerHelper r1;
        com.android.server.om.IdmapManager r2;
        com.android.server.om.OverlayManagerSettings r3;
        com.android.internal.content.om.OverlayConfig r4;
        java.lang.String[] r5;
        com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener r6;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: com.android.server.om.PackageManagerHelper;

        r2 := @parameter1: com.android.server.om.IdmapManager;

        r3 := @parameter2: com.android.server.om.OverlayManagerSettings;

        r4 := @parameter3: com.android.internal.content.om.OverlayConfig;

        r5 := @parameter4: java.lang.String[];

        r6 := @parameter5: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager> = r1;

        r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.IdmapManager mIdmapManager> = r2;

        r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings> = r3;

        r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.internal.content.om.OverlayConfig mOverlayConfig> = r4;

        r0.<com.android.server.om.OverlayManagerServiceImpl: java.lang.String[] mDefaultOverlays> = r5;

        r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener> = r6;

        return;
    }

    private int calculateNewState(android.content.pm.PackageInfo, android.content.pm.PackageInfo, int, int) throws com.android.server.om.OverlayManagerSettings$BadKeyException
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        android.content.pm.PackageInfo r1, r2;
        int i0, $i1, $i2, i3;
        com.android.server.om.IdmapManager $r3;
        boolean $z0, $z1;
        java.lang.String $r4;
        com.android.server.om.OverlayManagerSettings $r5;
        byte b4;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: android.content.pm.PackageInfo;

        r2 := @parameter1: android.content.pm.PackageInfo;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        return 4;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        return 5;

     label2:
        if r1 != null goto label3;

        return 0;

     label3:
        $r3 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.IdmapManager mIdmapManager>;

        $z0 = virtualinvoke $r3.<com.android.server.om.IdmapManager: boolean idmapExists(android.content.pm.PackageInfo,int)>(r2, i3);

        if $z0 != 0 goto label4;

        return 1;

     label4:
        $r5 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r4 = r2.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r5.<com.android.server.om.OverlayManagerSettings: boolean getEnabled(java.lang.String,int)>($r4, i3);

        if $z1 == 0 goto label5;

        b4 = 3;

        goto label6;

     label5:
        b4 = 2;

     label6:
        return b4;
    }

    private int getPackageConfiguredPriority(java.lang.String)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1;
        com.android.internal.content.om.OverlayConfig $r2;
        int $i0;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.internal.content.om.OverlayConfig mOverlayConfig>;

        $i0 = virtualinvoke $r2.<com.android.internal.content.om.OverlayConfig: int getPriority(java.lang.String)>(r1);

        return $i0;
    }

    private boolean isPackageConfiguredEnabled(java.lang.String)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1;
        com.android.internal.content.om.OverlayConfig $r2;
        boolean $z0;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.internal.content.om.OverlayConfig mOverlayConfig>;

        $z0 = virtualinvoke $r2.<com.android.internal.content.om.OverlayConfig: boolean isEnabled(java.lang.String)>(r1);

        return $z0;
    }

    private boolean isPackageConfiguredMutable(java.lang.String)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1;
        com.android.internal.content.om.OverlayConfig $r2;
        boolean $z0;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.internal.content.om.OverlayConfig mOverlayConfig>;

        $z0 = virtualinvoke $r2.<com.android.internal.content.om.OverlayConfig: boolean isMutable(java.lang.String)>(r1);

        return $z0;
    }

    private boolean mustReinitializeOverlay(android.content.pm.PackageInfo, android.content.om.OverlayInfo)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        android.content.pm.PackageInfo r1;
        android.content.om.OverlayInfo r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: android.content.pm.PackageInfo;

        r2 := @parameter1: android.content.om.OverlayInfo;

        if r2 != null goto label1;

        return 1;

     label1:
        $r4 = r1.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        $r3 = r2.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label2;

        return 1;

     label2:
        $r6 = r1.<android.content.pm.PackageInfo: java.lang.String targetOverlayableName>;

        $r5 = r2.<android.content.om.OverlayInfo: java.lang.String targetOverlayableName>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 != 0 goto label3;

        return 1;

     label3:
        $r7 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        z0 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean isPackageConfiguredMutable(java.lang.String)>($r7);

        $z3 = r2.<android.content.om.OverlayInfo: boolean isMutable>;

        if z0 == $z3 goto label4;

        return 1;

     label4:
        if z0 != 0 goto label5;

        $r8 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z4 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean isPackageConfiguredEnabled(java.lang.String)>($r8);

        $z5 = virtualinvoke r2.<android.content.om.OverlayInfo: boolean isEnabled()>();

        if $z4 == $z5 goto label5;

        return 1;

     label5:
        return 0;
    }

    private void removeIdmapIfPossible(android.content.om.OverlayInfo)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        android.content.om.OverlayInfo r1, r9;
        int[] r2;
        int i0, i1, $i2, i3;
        boolean z0, $z1;
        com.android.server.om.IdmapManager $r3, $r5;
        com.android.server.om.OverlayManagerSettings $r4, $r7;
        java.lang.String $r6;
        com.android.server.om.OverlayManagerSettings$BadKeyException $r8;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: android.content.om.OverlayInfo;

        $r3 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.IdmapManager mIdmapManager>;

        $z1 = virtualinvoke $r3.<com.android.server.om.IdmapManager: boolean idmapExists(android.content.om.OverlayInfo)>(r1);

        if $z1 != 0 goto label01;

        return;

     label01:
        $r4 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        r2 = virtualinvoke $r4.<com.android.server.om.OverlayManagerSettings: int[] getUsers()>();

        i0 = lengthof r2;

        i3 = 0;

     label02:
        if i3 >= i0 goto label10;

        i1 = r2[i3];

     label03:
        $r7 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r6 = r1.<android.content.om.OverlayInfo: java.lang.String packageName>;

        r9 = virtualinvoke $r7.<com.android.server.om.OverlayManagerSettings: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>($r6, i1);

     label04:
        if r9 == null goto label07;

     label05:
        z0 = virtualinvoke r9.<android.content.om.OverlayInfo: boolean isEnabled()>();

     label06:
        if z0 == 0 goto label07;

        return;

     label07:
        goto label09;

     label08:
        $r8 := @caughtexception;

     label09:
        i3 = i3 + 1;

        goto label02;

     label10:
        $r5 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.IdmapManager mIdmapManager>;

        $i2 = r1.<android.content.om.OverlayInfo: int userId>;

        virtualinvoke $r5.<com.android.server.om.IdmapManager: boolean removeIdmap(android.content.om.OverlayInfo,int)>(r1, $i2);

        return;

        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label03 to label04 with label08;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label05 to label06 with label08;
    }

    private void updateAndRefreshOverlaysForTarget(java.lang.String, int, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1, $r8, $r11, $r13, $r15, $r18, $r19, $r22;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10;
        com.android.server.om.OverlayManagerSettings $r2, $r5, $r20, $r23;
        com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener $r3;
        java.util.ArrayList $r4;
        java.util.List $r6, r24;
        com.android.server.om.PackageManagerHelper $r7, $r16;
        java.lang.Object $r9, $r10, $r12, $r14;
        android.content.pm.PackageInfo $r17, r33;
        com.android.server.om.OverlayManagerSettings$BadKeyException $r21;
        java.util.Iterator r25, r29, r31;
        android.content.om.OverlayInfo r26, r30, r32;
        android.content.pm.ApplicationInfo r34;
        java.lang.String[] r35;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i6 := @parameter2: int;

        $r2 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        r24 = virtualinvoke $r2.<com.android.server.om.OverlayManagerSettings: java.util.List getOverlaysForTarget(java.lang.String,int)>(r1, i0);

        z9 = 0;

        r25 = interfaceinvoke r24.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r14 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        r26 = (android.content.om.OverlayInfo) $r14;

        $r16 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        $r15 = r26.<android.content.om.OverlayInfo: java.lang.String packageName>;

        $r17 = interfaceinvoke $r16.<com.android.server.om.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r15, i0);

        if $r17 != null goto label02;

        $r20 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r19 = r26.<android.content.om.OverlayInfo: java.lang.String packageName>;

        $i5 = r26.<android.content.om.OverlayInfo: int userId>;

        $z7 = virtualinvoke $r20.<com.android.server.om.OverlayManagerSettings: boolean remove(java.lang.String,int)>($r19, $i5);

        z9 = z9 | $z7;

        specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: void removeIdmapIfPossible(android.content.om.OverlayInfo)>(r26);

        goto label05;

     label02:
        $r18 = r26.<android.content.om.OverlayInfo: java.lang.String packageName>;

        z0 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean updateState(java.lang.String,java.lang.String,int,int)>(r1, $r18, i0, i6);

     label03:
        z9 = z9 | z0;

        goto label05;

     label04:
        $r21 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OverlayManager", "failed to update settings", $r21);

        $r23 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r22 = r26.<android.content.om.OverlayInfo: java.lang.String packageName>;

        $z8 = virtualinvoke $r23.<com.android.server.om.OverlayManagerSettings: boolean remove(java.lang.String,int)>($r22, i0);

        z9 = z9 | $z8;

     label05:
        goto label01;

     label06:
        z10 = z9;

        if z9 != 0 goto label20;

        $r4 = new java.util.ArrayList;

        $i1 = interfaceinvoke r24.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1);

        $r5 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r6 = virtualinvoke $r5.<com.android.server.om.OverlayManagerSettings: java.util.List getOverlaysForTarget(java.lang.String,int)>("android", i0);

        r29 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r12 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r30 = (android.content.om.OverlayInfo) $r12;

        $z6 = virtualinvoke r30.<android.content.om.OverlayInfo: boolean isEnabled()>();

        if $z6 == 0 goto label08;

        $r13 = r30.<android.content.om.OverlayInfo: java.lang.String baseCodePath>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r13);

     label08:
        goto label07;

     label09:
        r31 = interfaceinvoke r24.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z3 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r10 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (android.content.om.OverlayInfo) $r10;

        $z5 = virtualinvoke r32.<android.content.om.OverlayInfo: boolean isEnabled()>();

        if $z5 == 0 goto label11;

        $r11 = r32.<android.content.om.OverlayInfo: java.lang.String baseCodePath>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r11);

     label11:
        goto label10;

     label12:
        $r7 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        r33 = interfaceinvoke $r7.<com.android.server.om.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, i0);

        if r33 != null goto label13;

        r34 = null;

        goto label14;

     label13:
        r34 = r33.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label14:
        if r34 != null goto label15;

        r35 = null;

        goto label16;

     label15:
        r35 = r34.<android.content.pm.ApplicationInfo: java.lang.String[] resourceDirs>;

     label16:
        $i2 = staticinvoke <com.android.internal.util.ArrayUtils: int size(java.lang.Object[])>(r35);

        $i3 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i2 == $i3 goto label17;

        z10 = 1;

        goto label20;

     label17:
        z10 = z9;

        if r35 == null goto label20;

        i7 = 0;

     label18:
        z10 = z9;

        $i4 = lengthof r35;

        if i7 >= $i4 goto label20;

        $r8 = r35[i7];

        $r9 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i7);

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z4 != 0 goto label19;

        z10 = 1;

        goto label20;

     label19:
        i7 = i7 + 1;

        goto label18;

     label20:
        if z10 == 0 goto label21;

        $r3 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener>;

        interfaceinvoke $r3.<com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener: void onOverlaysChanged(java.lang.String,int)>(r1, i0);

     label21:
        return;

        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label02 to label03 with label04;
    }

    private boolean updateState(java.lang.String, java.lang.String, int, int) throws com.android.server.om.OverlayManagerSettings$BadKeyException
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1, r2, $r11, $r12, $r14;
        int i0, i1, i2, i3;
        android.content.pm.PackageInfo r3, r4;
        com.android.server.om.PackageManagerHelper $r5, $r6;
        com.android.server.om.OverlayManagerSettings $r7, $r8, $r10, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z8, z9, z10;
        android.content.pm.ApplicationInfo $r9;
        com.android.server.om.IdmapManager $r15;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        $r5 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        r3 = interfaceinvoke $r5.<com.android.server.om.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, i0);

        $r6 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        r4 = interfaceinvoke $r6.<com.android.server.om.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r2, i0);

        z8 = 0;

        if r3 == null goto label2;

        z8 = 0;

        if r4 == null goto label2;

        $r14 = "android";

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label1;

        z8 = 0;

        $z6 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean isPackageConfiguredMutable(java.lang.String)>(r2);

        if $z6 == 0 goto label2;

     label1:
        $r15 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.IdmapManager mIdmapManager>;

        $z5 = virtualinvoke $r15.<com.android.server.om.IdmapManager: boolean createIdmap(android.content.pm.PackageInfo,android.content.pm.PackageInfo,int)>(r3, r4, i0);

        z8 = 0 | $z5;

     label2:
        z9 = z8;

        if r4 == null goto label3;

        $r10 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r9 = r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = virtualinvoke $r9.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        $z1 = virtualinvoke $r10.<com.android.server.om.OverlayManagerSettings: boolean setBaseCodePath(java.lang.String,int,java.lang.String)>(r2, i0, $r11);

        $z2 = z8 | $z1;

        $r13 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r12 = r4.<android.content.pm.PackageInfo: java.lang.String overlayCategory>;

        $z3 = virtualinvoke $r13.<com.android.server.om.OverlayManagerSettings: boolean setCategory(java.lang.String,int,java.lang.String)>(r2, i0, $r12);

        z9 = $z2 | $z3;

     label3:
        $r7 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        i1 = virtualinvoke $r7.<com.android.server.om.OverlayManagerSettings: int getState(java.lang.String,int)>(r2, i0);

        i3 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: int calculateNewState(android.content.pm.PackageInfo,android.content.pm.PackageInfo,int,int)>(r3, r4, i0, i2);

        z10 = z9;

        if i1 == i3 goto label4;

        $r8 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $z0 = virtualinvoke $r8.<com.android.server.om.OverlayManagerSettings: boolean setState(java.lang.String,int,int)>(r2, i0, i3);

        z10 = z9 | $z0;

     label4:
        return z10;
    }

    void dump(java.io.PrintWriter, com.android.server.om.DumpState)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.io.PrintWriter r1;
        com.android.server.om.OverlayManagerSettings $r2;
        java.lang.String $r3, $r7, $r9;
        java.lang.StringBuilder $r4;
        java.lang.String[] $r6;
        com.android.server.om.DumpState r10;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.io.PrintWriter;

        r10 := @parameter1: com.android.server.om.DumpState;

        $r2 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        virtualinvoke $r2.<com.android.server.om.OverlayManagerSettings: void dump(java.io.PrintWriter,com.android.server.om.DumpState)>(r1, r10);

        $r3 = virtualinvoke r10.<com.android.server.om.DumpState: java.lang.String getPackageName()>();

        if $r3 != null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Default overlays: ");

        $r6 = r0.<com.android.server.om.OverlayManagerServiceImpl: java.lang.String[] mDefaultOverlays>;

        $r7 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>(";", $r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

     label1:
        return;
    }

    java.lang.String[] getDefaultOverlayPackages()
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String[] $r1;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        $r1 = r0.<com.android.server.om.OverlayManagerServiceImpl: java.lang.String[] mDefaultOverlays>;

        return $r1;
    }

    java.util.List getEnabledOverlayPackageNames(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.util.List r1;
        int i0, $i1, i2, i3;
        android.content.om.OverlayInfo r2;
        com.android.server.om.OverlayManagerSettings $r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.String $r6, r7;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r7 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        $r3 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        r1 = virtualinvoke $r3.<com.android.server.om.OverlayManagerSettings: java.util.List getOverlaysForTarget(java.lang.String,int)>(r7, i2);

        $r4 = new java.util.ArrayList;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1);

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r2 = (android.content.om.OverlayInfo) $r5;

        $z0 = virtualinvoke r2.<android.content.om.OverlayInfo: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $r6 = r2.<android.content.om.OverlayInfo: java.lang.String packageName>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return $r4;
    }

    android.content.om.OverlayInfo getOverlayInfo(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        int i0;
        com.android.server.om.OverlayManagerSettings $r1;
        com.android.server.om.OverlayManagerSettings$BadKeyException $r2;
        java.lang.String r3;
        android.content.om.OverlayInfo r4;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        r4 = virtualinvoke $r1.<com.android.server.om.OverlayManagerSettings: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>(r3, i0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        return null;

        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label1 to label2 with label3;
    }

    java.util.List getOverlayInfosForTarget(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1;
        int i0;
        com.android.server.om.OverlayManagerSettings $r2;
        java.util.List $r3;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r3 = virtualinvoke $r2.<com.android.server.om.OverlayManagerSettings: java.util.List getOverlaysForTarget(java.lang.String,int)>(r1, i0);

        return $r3;
    }

    java.util.Map getOverlaysForUser(int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        int i0;
        com.android.server.om.OverlayManagerSettings $r1;
        android.util.ArrayMap $r2;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r2 = virtualinvoke $r1.<com.android.server.om.OverlayManagerSettings: android.util.ArrayMap getOverlaysForUser(int)>(i0);

        return $r2;
    }

    void onOverlayPackageAdded(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r19;
        int i0, $i1;
        com.android.server.om.PackageManagerHelper $r2;
        android.content.pm.ApplicationInfo $r3;
        com.android.server.om.OverlayManagerSettings $r4, $r21;
        boolean $z0, $z1, $z2;
        com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener $r14;
        java.lang.StringBuilder $r15;
        com.android.server.om.OverlayManagerSettings$BadKeyException $r20;
        android.content.pm.PackageInfo r22;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        r22 = interfaceinvoke $r2.<com.android.server.om.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, i0);

        if r22 != null goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("overlay package ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was added, but couldn\'t be found");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("OverlayManager", $r19);

        virtualinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: void onOverlayPackageRemoved(java.lang.String,int)>(r1, i0);

        return;

     label1:
        $r4 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r5 = r22.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        $r6 = r22.<android.content.pm.PackageInfo: java.lang.String targetOverlayableName>;

        $r3 = r22.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r7 = virtualinvoke $r3.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        $r8 = r22.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z0 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean isPackageConfiguredMutable(java.lang.String)>($r8);

        $r9 = r22.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z1 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean isPackageConfiguredEnabled(java.lang.String)>($r9);

        $r10 = r22.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $i1 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: int getPackageConfiguredPriority(java.lang.String)>($r10);

        $r11 = r22.<android.content.pm.PackageInfo: java.lang.String overlayCategory>;

        virtualinvoke $r4.<com.android.server.om.OverlayManagerSettings: void init(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int,java.lang.String)>(r1, i0, $r5, $r6, $r7, $z0, $z1, $i1, $r11);

     label2:
        $r12 = r22.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        $z2 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean updateState(java.lang.String,java.lang.String,int,int)>($r12, r1, i0, 0);

        if $z2 == 0 goto label3;

        $r14 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener>;

        $r13 = r22.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        interfaceinvoke $r14.<com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener: void onOverlaysChanged(java.lang.String,int)>($r13, i0);

     label3:
        goto label5;

     label4:
        $r20 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OverlayManager", "failed to update settings", $r20);

        $r21 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        virtualinvoke $r21.<com.android.server.om.OverlayManagerSettings: boolean remove(java.lang.String,int)>(r1, i0);

     label5:
        return;

        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label2 to label3 with label4;
    }

    void onOverlayPackageChanged(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        int i0;
        android.content.om.OverlayInfo r1;
        com.android.server.om.OverlayManagerSettings $r2;
        java.lang.String $r3, $r4, r7;
        boolean $z0;
        com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener $r5;
        com.android.server.om.OverlayManagerSettings$BadKeyException $r6;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r2 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        r1 = virtualinvoke $r2.<com.android.server.om.OverlayManagerSettings: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>(r7, i0);

        $r3 = r1.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        $z0 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean updateState(java.lang.String,java.lang.String,int,int)>($r3, r7, i0, 0);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener>;

        $r4 = r1.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        interfaceinvoke $r5.<com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener: void onOverlaysChanged(java.lang.String,int)>($r4, i0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OverlayManager", "failed to update settings", $r6);

     label4:
        return;

        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label1 to label2 with label3;
    }

    void onOverlayPackageRemoved(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        int i0;
        android.content.om.OverlayInfo r1;
        com.android.server.om.OverlayManagerSettings $r2, $r3;
        boolean $z0;
        java.lang.String $r4, r7;
        com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener $r5;
        com.android.server.om.OverlayManagerSettings$BadKeyException $r6;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r2 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        r1 = virtualinvoke $r2.<com.android.server.om.OverlayManagerSettings: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>(r7, i0);

        $r3 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $z0 = virtualinvoke $r3.<com.android.server.om.OverlayManagerSettings: boolean remove(java.lang.String,int)>(r7, i0);

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: void removeIdmapIfPossible(android.content.om.OverlayInfo)>(r1);

        $r5 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener>;

        $r4 = r1.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        interfaceinvoke $r5.<com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener: void onOverlaysChanged(java.lang.String,int)>($r4, i0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OverlayManager", "failed to remove overlay", $r6);

     label4:
        return;

        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label1 to label2 with label3;
    }

    void onOverlayPackageReplaced(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        int i0, $i3;
        android.content.om.OverlayInfo r1;
        com.android.server.om.PackageManagerHelper $r2;
        com.android.server.om.OverlayManagerSettings $r3, $r19;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r4, $r6, $r7, $r8, $r14, r16, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28;
        com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener $r5, $r9;
        java.lang.StringBuilder $r10;
        com.android.server.om.OverlayManagerSettings$BadKeyException $r15;
        android.content.pm.PackageInfo r17;
        android.content.pm.ApplicationInfo $r22;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r16 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        r17 = interfaceinvoke $r2.<com.android.server.om.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r16, i0);

        if r17 != null goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("overlay package ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was replaced, but couldn\'t be found");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("OverlayManager", $r14);

        virtualinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: void onOverlayPackageRemoved(java.lang.String,int)>(r16, i0);

        return;

     label1:
        $r3 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        r1 = virtualinvoke $r3.<com.android.server.om.OverlayManagerSettings: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>(r16, i0);

        $z0 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean mustReinitializeOverlay(android.content.pm.PackageInfo,android.content.om.OverlayInfo)>(r17, r1);

        if $z0 == 0 goto label5;

     label2:
        if r1 == null goto label4;

     label3:
        $r7 = r1.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        $r6 = r17.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label4;

        $r9 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener>;

        $r8 = r17.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        interfaceinvoke $r9.<com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener: void onOverlaysChanged(java.lang.String,int)>($r8, i0);

     label4:
        $r19 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r20 = r17.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        $r21 = r17.<android.content.pm.PackageInfo: java.lang.String targetOverlayableName>;

        $r22 = r17.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r23 = virtualinvoke $r22.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        $r24 = r17.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z2 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean isPackageConfiguredMutable(java.lang.String)>($r24);

        $r25 = r17.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z3 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean isPackageConfiguredEnabled(java.lang.String)>($r25);

        $r26 = r17.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $i3 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: int getPackageConfiguredPriority(java.lang.String)>($r26);

        $r27 = r17.<android.content.pm.PackageInfo: java.lang.String overlayCategory>;

        virtualinvoke $r19.<com.android.server.om.OverlayManagerSettings: void init(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int,java.lang.String)>(r16, i0, $r20, $r21, $r23, $z2, $z3, $i3, $r27);

     label5:
        $r28 = r17.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        $z4 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean updateState(java.lang.String,java.lang.String,int,int)>($r28, r16, i0, 0);

        if $z4 == 0 goto label6;

        $r5 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener>;

        $r4 = r17.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        interfaceinvoke $r5.<com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener: void onOverlaysChanged(java.lang.String,int)>($r4, i0);

     label6:
        goto label8;

     label7:
        $r15 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OverlayManager", "failed to update settings", $r15);

     label8:
        return;

        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label1 to label2 with label7;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label3 to label4 with label7;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label4 to label5 with label7;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label5 to label6 with label7;
    }

    void onOverlayPackageReplacing(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        int i0;
        android.content.om.OverlayInfo r1;
        com.android.server.om.OverlayManagerSettings $r2;
        java.lang.String $r3, $r4, r7;
        boolean $z0;
        com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener $r5;
        com.android.server.om.OverlayManagerSettings$BadKeyException $r6;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r2 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        r1 = virtualinvoke $r2.<com.android.server.om.OverlayManagerSettings: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>(r7, i0);

        $r3 = r1.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        $z0 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean updateState(java.lang.String,java.lang.String,int,int)>($r3, r7, i0, 2);

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: void removeIdmapIfPossible(android.content.om.OverlayInfo)>(r1);

        $r5 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener>;

        $r4 = r1.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        interfaceinvoke $r5.<com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener: void onOverlaysChanged(java.lang.String,int)>($r4, i0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OverlayManager", "failed to update settings", $r6);

     label4:
        return;

        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label1 to label2 with label3;
    }

    void onTargetPackageAdded(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: void updateAndRefreshOverlaysForTarget(java.lang.String,int,int)>(r1, i0, 0);

        return;
    }

    void onTargetPackageChanged(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: void updateAndRefreshOverlaysForTarget(java.lang.String,int,int)>(r1, i0, 0);

        return;
    }

    void onTargetPackageRemoved(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: void updateAndRefreshOverlaysForTarget(java.lang.String,int,int)>(r1, i0, 0);

        return;
    }

    void onTargetPackageReplaced(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: void updateAndRefreshOverlaysForTarget(java.lang.String,int,int)>(r1, i0, 0);

        return;
    }

    void onTargetPackageReplacing(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: void updateAndRefreshOverlaysForTarget(java.lang.String,int,int)>(r1, i0, 0);

        return;
    }

    void onUserRemoved(int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        int i0;
        com.android.server.om.OverlayManagerSettings $r1;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        virtualinvoke $r1.<com.android.server.om.OverlayManagerSettings: boolean removeUser(int)>(i0);

        return;
    }

    void removeIdmapForOverlay(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1;
        int i0;
        com.android.server.om.OverlayManagerSettings $r2;
        android.content.om.OverlayInfo $r3;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r3 = virtualinvoke $r2.<com.android.server.om.OverlayManagerSettings: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>(r1, i0);

        specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: void removeIdmapIfPossible(android.content.om.OverlayInfo)>($r3);

        return;
    }

    boolean setEnabled(java.lang.String, boolean, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0;
        android.content.om.OverlayInfo r1;
        com.android.server.om.PackageManagerHelper $r2;
        android.content.pm.PackageInfo $r3;
        com.android.server.om.OverlayManagerSettings $r4, $r5;
        java.lang.String $r6, $r7, $r8, r11;
        com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener $r9;
        com.android.server.om.OverlayManagerSettings$BadKeyException $r10;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r11 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r2 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        $r3 = interfaceinvoke $r2.<com.android.server.om.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r11, i0);

        if $r3 != null goto label1;

        return 0;

     label1:
        $r4 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        r1 = virtualinvoke $r4.<com.android.server.om.OverlayManagerSettings: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>(r11, i0);

        $z1 = r1.<android.content.om.OverlayInfo: boolean isMutable>;

        if $z1 != 0 goto label3;

     label2:
        return 0;

     label3:
        $r5 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $z2 = virtualinvoke $r5.<com.android.server.om.OverlayManagerSettings: boolean setEnabled(java.lang.String,int,boolean)>(r11, i0, z0);

        $r7 = r1.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        $r6 = r1.<android.content.om.OverlayInfo: java.lang.String packageName>;

        $z3 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean updateState(java.lang.String,java.lang.String,int,int)>($r7, $r6, i0, 0);

        $z4 = $z2 | $z3;

        if $z4 == 0 goto label4;

        $r9 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener>;

        $r8 = r1.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        interfaceinvoke $r9.<com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener: void onOverlaysChanged(java.lang.String,int)>($r8, i0);

     label4:
        return 1;

     label5:
        $r10 := @caughtexception;

        return 0;

        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label1 to label2 with label5;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label3 to label4 with label5;
    }

    boolean setEnabledExclusive(java.lang.String, boolean, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12;
        int i0, $i1, i2;
        android.content.om.OverlayInfo r1, r4;
        java.lang.String r2, r5, $r15, $r16, r19;
        java.util.List r3;
        android.content.pm.PackageInfo r6, $r8;
        com.android.server.om.PackageManagerHelper $r7, $r13;
        com.android.server.om.OverlayManagerSettings $r9, $r10, $r14, $r17;
        com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener $r11;
        java.lang.Object $r12;
        com.android.server.om.OverlayManagerSettings$BadKeyException $r18;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r19 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r7 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        $r8 = interfaceinvoke $r7.<com.android.server.om.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r19, i0);

        if $r8 != null goto label01;

        return 0;

     label01:
        $r9 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        r1 = virtualinvoke $r9.<com.android.server.om.OverlayManagerSettings: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>(r19, i0);

        r2 = r1.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        r3 = virtualinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: java.util.List getOverlayInfosForTarget(java.lang.String,int)>(r2, i0);

     label02:
        z12 = 0;

     label03:
        interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label04:
        i2 = 0;

     label05:
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if i2 >= $i1 goto label16;

        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (android.content.om.OverlayInfo) $r12;

        r5 = r4.<android.content.om.OverlayInfo: java.lang.String packageName>;

        $r13 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        r6 = interfaceinvoke $r13.<com.android.server.om.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r5, i0);

     label06:
        if r6 != null goto label09;

     label07:
        $r17 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $z11 = virtualinvoke $r17.<com.android.server.om.OverlayManagerSettings: boolean remove(java.lang.String,int)>(r5, i0);

        z12 = z12 | $z11;

     label08:
        goto label15;

     label09:
        $z6 = r4.<android.content.om.OverlayInfo: boolean isMutable>;

        if $z6 != 0 goto label11;

     label10:
        goto label15;

     label11:
        if z0 == 0 goto label14;

     label12:
        $r16 = r6.<android.content.pm.PackageInfo: java.lang.String overlayCategory>;

        $r15 = r1.<android.content.om.OverlayInfo: java.lang.String category>;

        $z10 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z10 != 0 goto label14;

     label13:
        goto label15;

     label14:
        $r14 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $z7 = virtualinvoke $r14.<com.android.server.om.OverlayManagerSettings: boolean setEnabled(java.lang.String,int,boolean)>(r5, i0, 0);

        $z8 = z12 | $z7;

        $z9 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean updateState(java.lang.String,java.lang.String,int,int)>(r2, r5, i0, 0);

        z12 = $z8 | $z9;

     label15:
        i2 = i2 + 1;

        goto label05;

     label16:
        $r10 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $z2 = virtualinvoke $r10.<com.android.server.om.OverlayManagerSettings: boolean setEnabled(java.lang.String,int,boolean)>(r19, i0, 1);

        $z3 = z12 | $z2;

        $z4 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean updateState(java.lang.String,java.lang.String,int,int)>(r2, r19, i0, 0);

        $z5 = $z3 | $z4;

        if $z5 == 0 goto label17;

        $r11 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener>;

        interfaceinvoke $r11.<com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener: void onOverlaysChanged(java.lang.String,int)>(r2, i0);

     label17:
        return 1;

     label18:
        $r18 := @caughtexception;

        return 0;

        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label01 to label02 with label18;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label03 to label04 with label18;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label05 to label06 with label18;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label07 to label08 with label18;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label09 to label10 with label18;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label12 to label13 with label18;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label14 to label15 with label18;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label16 to label17 with label18;
    }

    boolean setHighestPriority(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1, $r5;
        int i0;
        android.content.pm.PackageInfo r2;
        boolean $z0, $z1;
        com.android.server.om.PackageManagerHelper $r3;
        com.android.server.om.OverlayManagerSettings $r4;
        com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener $r6;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean isPackageConfiguredMutable(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        r2 = interfaceinvoke $r3.<com.android.server.om.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, i0);

        if r2 != null goto label2;

        return 0;

     label2:
        $r4 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $z1 = virtualinvoke $r4.<com.android.server.om.OverlayManagerSettings: boolean setHighestPriority(java.lang.String,int)>(r1, i0);

        if $z1 == 0 goto label3;

        $r6 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener>;

        $r5 = r2.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        interfaceinvoke $r6.<com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener: void onOverlaysChanged(java.lang.String,int)>($r5, i0);

     label3:
        return 1;
    }

    boolean setLowestPriority(java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1, $r5;
        int i0;
        android.content.pm.PackageInfo r2;
        boolean $z0, $z1;
        com.android.server.om.PackageManagerHelper $r3;
        com.android.server.om.OverlayManagerSettings $r4;
        com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener $r6;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean isPackageConfiguredMutable(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        r2 = interfaceinvoke $r3.<com.android.server.om.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, i0);

        if r2 != null goto label2;

        return 0;

     label2:
        $r4 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $z1 = virtualinvoke $r4.<com.android.server.om.OverlayManagerSettings: boolean setLowestPriority(java.lang.String,int)>(r1, i0);

        if $z1 == 0 goto label3;

        $r6 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener>;

        $r5 = r2.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        interfaceinvoke $r6.<com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener: void onOverlaysChanged(java.lang.String,int)>($r5, i0);

     label3:
        return 1;
    }

    boolean setPriority(java.lang.String, java.lang.String, int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        java.lang.String r1, r2, $r6;
        int i0;
        android.content.pm.PackageInfo r3;
        boolean $z0, $z1;
        com.android.server.om.PackageManagerHelper $r4;
        com.android.server.om.OverlayManagerSettings $r5;
        com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener $r7;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean isPackageConfiguredMutable(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        r3 = interfaceinvoke $r4.<com.android.server.om.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, i0);

        if r3 != null goto label2;

        return 0;

     label2:
        $r5 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $z1 = virtualinvoke $r5.<com.android.server.om.OverlayManagerSettings: boolean setPriority(java.lang.String,java.lang.String,int)>(r1, r2, i0);

        if $z1 == 0 goto label3;

        $r7 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener mListener>;

        $r6 = r3.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        interfaceinvoke $r7.<com.android.server.om.OverlayManagerServiceImpl$OverlayChangeListener: void onOverlaysChanged(java.lang.String,int)>($r6, i0);

     label3:
        return 1;
    }

    java.util.ArrayList updateOverlaysForUser(int)
    {
        com.android.server.om.OverlayManagerServiceImpl r0;
        int i0, i1, $i3, $i4, i7, i8, i9, i10, i11, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23;
        android.util.ArraySet $r3, $r7;
        com.android.server.om.OverlayManagerSettings $r4, $r8, $r10, $r36, $r44, $r47, $r62, r95;
        android.util.ArrayMap $r5, r73, r87;
        com.android.server.om.PackageManagerHelper $r6, $r28;
        boolean $z0, $z1, $z3, $z5, $z11, $z13, $z14;
        java.util.ArrayList $r9;
        java.lang.String $r11, $r15, $r18, $r22, $r23, $r26, $r31, $r32, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r58, $r61, $r80, r85, r92, r96, r97, r98, $r102;
        java.lang.Object $r24, $r25, $r27, $r30, $r34, $r38, $r40, $r56, $r57;
        android.content.pm.PackageInfo $r29, r78, r82;
        android.content.pm.ApplicationInfo $r46;
        com.android.server.om.OverlayManagerSettings$BadKeyException $r60, $r63, $r68, $r69, $r70, $r71, $r72, r99;
        java.util.List r75, r77, r88;
        android.content.om.OverlayInfo r76, r79, r81, r89, r93;
        java.util.Iterator r84;
        java.lang.String[] r90;
        java.lang.StringBuilder r94, $r100;

        r0 := @this: com.android.server.om.OverlayManagerServiceImpl;

        i0 := @parameter0: int;

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        $r4 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        r73 = virtualinvoke $r4.<com.android.server.om.OverlayManagerSettings: android.util.ArrayMap getOverlaysForUser(int)>(i0);

        i7 = virtualinvoke r73.<android.util.ArrayMap: int size()>();

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>(int)>(i7);

        i8 = 0;

     label01:
        if i8 >= i7 goto label04;

        $r56 = virtualinvoke r73.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        r75 = (java.util.List) $r56;

        i9 = interfaceinvoke r75.<java.util.List: int size()>();

        i10 = 0;

     label02:
        if i10 >= i9 goto label03;

        $r57 = interfaceinvoke r75.<java.util.List: java.lang.Object get(int)>(i10);

        r76 = (android.content.om.OverlayInfo) $r57;

        $r58 = r76.<android.content.om.OverlayInfo: java.lang.String packageName>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r58, r76);

        i10 = i10 + 1;

        goto label02;

     label03:
        i8 = i8 + 1;

        goto label01;

     label04:
        $r6 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        r77 = interfaceinvoke $r6.<com.android.server.om.PackageManagerHelper: java.util.List getOverlayPackages(int)>(i0);

        i11 = interfaceinvoke r77.<java.util.List: int size()>();

        i14 = 0;

     label05:
        if i14 >= i11 goto label09;

        $r38 = interfaceinvoke r77.<java.util.List: java.lang.Object get(int)>(i14);

        r78 = (android.content.pm.PackageInfo) $r38;

        $r39 = r78.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r40 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r39);

        r79 = (android.content.om.OverlayInfo) $r40;

        $r41 = r78.<android.content.pm.PackageInfo: java.lang.String packageName>;

        i15 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: int getPackageConfiguredPriority(java.lang.String)>($r41);

        $z11 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean mustReinitializeOverlay(android.content.pm.PackageInfo,android.content.om.OverlayInfo)>(r78, r79);

        if $z11 == 0 goto label07;

        if r79 == null goto label06;

        $r55 = r79.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r55);

     label06:
        $r47 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r48 = r78.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r49 = r78.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        $r50 = r78.<android.content.pm.PackageInfo: java.lang.String targetOverlayableName>;

        $r46 = r78.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r51 = virtualinvoke $r46.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        $r52 = r78.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z13 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean isPackageConfiguredMutable(java.lang.String)>($r52);

        $r53 = r78.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z14 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean isPackageConfiguredEnabled(java.lang.String)>($r53);

        $r54 = r78.<android.content.pm.PackageInfo: java.lang.String overlayCategory>;

        virtualinvoke $r47.<com.android.server.om.OverlayManagerSettings: void init(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int,java.lang.String)>($r48, i0, $r49, $r50, $r51, $z13, $z14, i15, $r54);

        goto label08;

     label07:
        $i4 = r79.<android.content.om.OverlayInfo: int priority>;

        if i15 == $i4 goto label08;

        $r44 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r43 = r78.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke $r44.<com.android.server.om.OverlayManagerSettings: void setPriority(java.lang.String,int,int)>($r43, i0, i15);

        $r45 = r79.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r45);

     label08:
        $r80 = r78.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r80);

        i14 = i14 + 1;

        goto label05;

     label09:
        i16 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        i17 = 0;

     label10:
        if i17 >= i16 goto label11;

        $r34 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i17);

        r81 = (android.content.om.OverlayInfo) $r34;

        $r36 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r35 = r81.<android.content.om.OverlayInfo: java.lang.String packageName>;

        $i3 = r81.<android.content.om.OverlayInfo: int userId>;

        virtualinvoke $r36.<com.android.server.om.OverlayManagerSettings: boolean remove(java.lang.String,int)>($r35, $i3);

        specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: void removeIdmapIfPossible(android.content.om.OverlayInfo)>(r81);

        $r37 = r81.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r37);

        i17 = i17 + 1;

        goto label10;

     label11:
        i18 = 0;

     label12:
        if i18 >= i11 goto label17;

        $r30 = interfaceinvoke r77.<java.util.List: java.lang.Object get(int)>(i18);

        r82 = (android.content.pm.PackageInfo) $r30;

     label13:
        $r32 = r82.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        $r31 = r82.<android.content.pm.PackageInfo: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean updateState(java.lang.String,java.lang.String,int,int)>($r32, $r31, i0, 0);

     label14:
        goto label16;

     label15:
        $r60 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OverlayManager", "failed to update settings", $r60);

        $r62 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        $r61 = r82.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke $r62.<com.android.server.om.OverlayManagerSettings: boolean remove(java.lang.String,int)>($r61, i0);

     label16:
        $r33 = r82.<android.content.pm.PackageInfo: java.lang.String overlayTarget>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r33);

        i18 = i18 + 1;

        goto label12;

     label17:
        r84 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke r84.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r27 = interfaceinvoke r84.<java.util.Iterator: java.lang.Object next()>();

        r85 = (java.lang.String) $r27;

        $r28 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.PackageManagerHelper mPackageManager>;

        $r29 = interfaceinvoke $r28.<com.android.server.om.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r85, i0);

        if $r29 != null goto label19;

        interfaceinvoke r84.<java.util.Iterator: void remove()>();

     label19:
        goto label18;

     label20:
        $r7 = new android.util.ArraySet;

        specialinvoke $r7.<android.util.ArraySet: void <init>()>();

        $r8 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        r87 = virtualinvoke $r8.<com.android.server.om.OverlayManagerSettings: android.util.ArrayMap getOverlaysForUser(int)>(i0);

        i1 = virtualinvoke r87.<android.util.ArrayMap: int size()>();

        i19 = 0;

     label21:
        if i19 >= i1 goto label27;

        $r24 = virtualinvoke r87.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i19);

        r88 = (java.util.List) $r24;

        if r88 == null goto label22;

        i20 = interfaceinvoke r88.<java.util.List: int size()>();

        goto label23;

     label22:
        i20 = 0;

     label23:
        i21 = 0;

     label24:
        if i21 >= i20 goto label26;

        $r25 = interfaceinvoke r88.<java.util.List: java.lang.Object get(int)>(i21);

        r89 = (android.content.om.OverlayInfo) $r25;

        $z5 = virtualinvoke r89.<android.content.om.OverlayInfo: boolean isEnabled()>();

        if $z5 == 0 goto label25;

        $r26 = r89.<android.content.om.OverlayInfo: java.lang.String category>;

        virtualinvoke $r7.<android.util.ArraySet: boolean add(java.lang.Object)>($r26);

        goto label25;

     label25:
        i21 = i21 + 1;

        goto label24;

     label26:
        i19 = i19 + 1;

        goto label21;

     label27:
        r90 = r0.<com.android.server.om.OverlayManagerServiceImpl: java.lang.String[] mDefaultOverlays>;

        i22 = lengthof r90;

        i23 = 0;

     label28:
        if i23 >= i22 goto label46;

        r92 = r90[i23];

     label29:
        $r10 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

        r93 = virtualinvoke $r10.<com.android.server.om.OverlayManagerSettings: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>(r92, i0);

        $r11 = r93.<android.content.om.OverlayInfo: java.lang.String category>;

        $z1 = virtualinvoke $r7.<android.util.ArraySet: boolean contains(java.lang.Object)>($r11);

        if $z1 != 0 goto label42;

        r94 = new java.lang.StringBuilder;

        specialinvoke r94.<java.lang.StringBuilder: void <init>()>();

     label30:
        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Enabling default overlay \'");

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r92);

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for target \'");

        $r15 = r93.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in category \'");

        $r18 = r93.<android.content.om.OverlayInfo: java.lang.String category>;

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

     label31:
        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for user ");

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke r94.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("OverlayManager", $r22);

        r95 = r0.<com.android.server.om.OverlayManagerServiceImpl: com.android.server.om.OverlayManagerSettings mSettings>;

     label32:
        r96 = r93.<android.content.om.OverlayInfo: java.lang.String packageName>;

     label33:
        virtualinvoke r95.<com.android.server.om.OverlayManagerSettings: boolean setEnabled(java.lang.String,int,boolean)>(r96, i0, 1);

        r97 = r93.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        r98 = r93.<android.content.om.OverlayInfo: java.lang.String packageName>;

     label34:
        $z3 = specialinvoke r0.<com.android.server.om.OverlayManagerServiceImpl: boolean updateState(java.lang.String,java.lang.String,int,int)>(r97, r98, i0, 0);

        if $z3 == 0 goto label42;

        $r23 = r93.<android.content.om.OverlayInfo: java.lang.String targetPackageName>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r23);

     label35:
        goto label42;

     label36:
        $r63 := @caughtexception;

        r99 = $r63;

        goto label44;

     label37:
        $r70 := @caughtexception;

        r99 = $r70;

        goto label44;

     label38:
        $r69 := @caughtexception;

        r99 = $r69;

        goto label40;

     label39:
        $r71 := @caughtexception;

        r99 = $r71;

     label40:
        goto label44;

     label41:
        $r68 := @caughtexception;

        r99 = $r68;

        goto label44;

     label42:
        goto label45;

     label43:
        $r72 := @caughtexception;

        r99 = $r72;

     label44:
        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set default overlay \'");

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r92);

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for user ");

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OverlayManager", $r102, r99);

     label45:
        i23 = i23 + 1;

        goto label28;

     label46:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        return $r9;

        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label13 to label14 with label15;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label29 to label30 with label43;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label30 to label31 with label41;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label31 to label32 with label39;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label32 to label33 with label38;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label33 to label34 with label37;
        catch com.android.server.om.OverlayManagerSettings$BadKeyException from label34 to label35 with label36;
    }

    public static void <clinit>()
    {
        <com.android.server.om.OverlayManagerServiceImpl: int FLAG_TARGET_IS_BEING_REPLACED> = 1;

        <com.android.server.om.OverlayManagerServiceImpl: int FLAG_OVERLAY_IS_BEING_REPLACED> = 2;

        return;
    }
}
