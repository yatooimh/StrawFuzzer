final class com.android.server.om.OverlayManagerSettings$Serializer extends java.lang.Object
{
    private static final java.lang.String ATTR_BASE_CODE_PATH;
    private static final java.lang.String ATTR_CATEGORY;
    private static final java.lang.String ATTR_IS_ENABLED;
    private static final java.lang.String ATTR_IS_STATIC;
    private static final java.lang.String ATTR_PACKAGE_NAME;
    private static final java.lang.String ATTR_PRIORITY;
    private static final java.lang.String ATTR_STATE;
    private static final java.lang.String ATTR_TARGET_OVERLAYABLE_NAME;
    private static final java.lang.String ATTR_TARGET_PACKAGE_NAME;
    private static final java.lang.String ATTR_USER_ID;
    private static final java.lang.String ATTR_VERSION;
    static final int CURRENT_VERSION;
    private static final java.lang.String TAG_ITEM;
    private static final java.lang.String TAG_OVERLAYS;

    void <init>()
    {
        com.android.server.om.OverlayManagerSettings$Serializer r0;

        r0 := @this: com.android.server.om.OverlayManagerSettings$Serializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void persist(java.util.ArrayList, java.io.OutputStream) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        java.util.ArrayList r0;
        java.io.OutputStream r1;
        int i0, i1;
        com.android.internal.util.FastXmlSerializer $r3;
        java.lang.Boolean $r4;
        java.lang.Object $r7;
        com.android.server.om.OverlayManagerSettings$SettingsItem $r8;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.io.OutputStream;

        $r3 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r3.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        virtualinvoke $r3.<com.android.internal.util.FastXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, "utf-8");

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r3.<com.android.internal.util.FastXmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r4);

        virtualinvoke $r3.<com.android.internal.util.FastXmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        virtualinvoke $r3.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "overlays");

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>($r3, "version", 4);

        i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r7 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (com.android.server.om.OverlayManagerSettings$SettingsItem) $r7;

        staticinvoke <com.android.server.om.OverlayManagerSettings$Serializer: void persistRow(com.android.internal.util.FastXmlSerializer,com.android.server.om.OverlayManagerSettings$SettingsItem)>($r3, $r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r3.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "overlays");

        virtualinvoke $r3.<com.android.internal.util.FastXmlSerializer: void endDocument()>();

        return;
    }

    private static void persistRow(com.android.internal.util.FastXmlSerializer, com.android.server.om.OverlayManagerSettings$SettingsItem) throws java.io.IOException
    {
        com.android.internal.util.FastXmlSerializer r0;
        com.android.server.om.OverlayManagerSettings$SettingsItem r1;
        java.lang.String $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter1: com.android.server.om.OverlayManagerSettings$SettingsItem;

        virtualinvoke r0.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $r3 = staticinvoke <com.android.server.om.OverlayManagerSettings$SettingsItem: java.lang.String access$1200(com.android.server.om.OverlayManagerSettings$SettingsItem)>(r1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r0, "packageName", $r3);

        $i0 = staticinvoke <com.android.server.om.OverlayManagerSettings$SettingsItem: int access$1700(com.android.server.om.OverlayManagerSettings$SettingsItem)>(r1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r0, "userId", $i0);

        $r4 = staticinvoke <com.android.server.om.OverlayManagerSettings$SettingsItem: java.lang.String access$1800(com.android.server.om.OverlayManagerSettings$SettingsItem)>(r1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r0, "targetPackageName", $r4);

        $r5 = staticinvoke <com.android.server.om.OverlayManagerSettings$SettingsItem: java.lang.String access$1900(com.android.server.om.OverlayManagerSettings$SettingsItem)>(r1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r0, "targetOverlayableName", $r5);

        $r6 = staticinvoke <com.android.server.om.OverlayManagerSettings$SettingsItem: java.lang.String access$2000(com.android.server.om.OverlayManagerSettings$SettingsItem)>(r1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r0, "baseCodePath", $r6);

        $i1 = staticinvoke <com.android.server.om.OverlayManagerSettings$SettingsItem: int access$2100(com.android.server.om.OverlayManagerSettings$SettingsItem)>(r1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r0, "state", $i1);

        $z0 = staticinvoke <com.android.server.om.OverlayManagerSettings$SettingsItem: boolean access$2200(com.android.server.om.OverlayManagerSettings$SettingsItem)>(r1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeBooleanAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,boolean)>(r0, "isEnabled", $z0);

        $z1 = staticinvoke <com.android.server.om.OverlayManagerSettings$SettingsItem: boolean access$2300(com.android.server.om.OverlayManagerSettings$SettingsItem)>(r1);

        $z2 = $z1 ^ 1;

        staticinvoke <com.android.internal.util.XmlUtils: void writeBooleanAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,boolean)>(r0, "isStatic", $z2);

        $i2 = staticinvoke <com.android.server.om.OverlayManagerSettings$SettingsItem: int access$1000(com.android.server.om.OverlayManagerSettings$SettingsItem)>(r1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r0, "priority", $i2);

        $r7 = staticinvoke <com.android.server.om.OverlayManagerSettings$SettingsItem: java.lang.String access$1600(com.android.server.om.OverlayManagerSettings$SettingsItem)>(r1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r0, "category", $r7);

        virtualinvoke r0.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        return;
    }

    public static void restore(java.util.ArrayList, java.io.InputStream) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, $i1, $i2, i3;
        java.lang.String r1;
        java.io.InputStreamReader $r2;
        boolean $z0, $z2;
        com.android.server.om.OverlayManagerSettings$SettingsItem $r3;
        java.lang.Throwable $r4, $r5;
        java.util.ArrayList r6;
        java.io.InputStream r7;
        byte b4;

        r6 := @parameter0: java.util.ArrayList;

        r7 := @parameter1: java.io.InputStream;

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r7);

     label01:
        virtualinvoke r6.<java.util.ArrayList: void clear()>();

        r0 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>($r2);

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "overlays");

        i3 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "version");

     label02:
        if i3 == 4 goto label04;

     label03:
        staticinvoke <com.android.server.om.OverlayManagerSettings$Serializer: void upgrade(int)>(i3);

     label04:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label05:
        $z2 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r0, i0);

        if $z2 == 0 goto label14;

        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label06:
        b4 = -1;

     label07:
        $i1 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if $i1 == 3242771 goto label09;

     label08:
        goto label11;

     label09:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label08;

     label10:
        b4 = 0;

     label11:
        if b4 == 0 goto label12;

        goto label13;

     label12:
        $i2 = i0 + 1;

        $r3 = staticinvoke <com.android.server.om.OverlayManagerSettings$Serializer: com.android.server.om.OverlayManagerSettings$SettingsItem restoreRow(org.xmlpull.v1.XmlPullParser,int)>(r0, $i2);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label13:
        goto label05;

     label14:
        virtualinvoke $r2.<java.io.InputStreamReader: void close()>();

        return;

     label15:
        $r4 := @caughtexception;

     label16:
        virtualinvoke $r2.<java.io.InputStreamReader: void close()>();

     label17:
        goto label19;

     label18:
        $r5 := @caughtexception;

        virtualinvoke $r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r5);

     label19:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    private static com.android.server.om.OverlayManagerSettings$SettingsItem restoreRow(org.xmlpull.v1.XmlPullParser, int) throws java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, $i1, $i2, $i3;
        com.android.server.om.OverlayManagerSettings$SettingsItem $r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        $r1 = new com.android.server.om.OverlayManagerSettings$SettingsItem;

        $r2 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "packageName");

        $i1 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "userId");

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "targetPackageName");

        $r4 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "targetOverlayableName");

        $r5 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "baseCodePath");

        $i2 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "state");

        $z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "isEnabled");

        $z1 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "isStatic");

        $z2 = $z1 ^ 1;

        $i3 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "priority");

        $r6 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "category");

        specialinvoke $r1.<com.android.server.om.OverlayManagerSettings$SettingsItem: void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean,int,java.lang.String)>($r2, $i1, $r3, $r4, $r5, $i2, $z0, $z2, $i3, $r6);

        return $r1;
    }

    private static void upgrade(int) throws org.xmlpull.v1.XmlPullParserException
    {
        int i0;
        java.lang.String $r7, $r12;
        java.lang.StringBuilder r13, r15;
        org.xmlpull.v1.XmlPullParserException r14, r16;
        java.lang.Throwable r17, r18;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        if i0 == 2 goto label2;

        if i0 != 3 goto label1;

        return;

     label1:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unrecognized version ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r14 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r7);

        r17 = (java.lang.Throwable) r14;

        throw r17;

     label2:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("old version ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ignoring");

        r16 = new org.xmlpull.v1.XmlPullParserException;

        $r12 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        r18 = (java.lang.Throwable) r16;

        throw r18;
    }

    public static void <clinit>()
    {
        <com.android.server.om.OverlayManagerSettings$Serializer: java.lang.String TAG_OVERLAYS> = "overlays";

        <com.android.server.om.OverlayManagerSettings$Serializer: java.lang.String TAG_ITEM> = "item";

        <com.android.server.om.OverlayManagerSettings$Serializer: int CURRENT_VERSION> = 4;

        <com.android.server.om.OverlayManagerSettings$Serializer: java.lang.String ATTR_VERSION> = "version";

        <com.android.server.om.OverlayManagerSettings$Serializer: java.lang.String ATTR_USER_ID> = "userId";

        <com.android.server.om.OverlayManagerSettings$Serializer: java.lang.String ATTR_TARGET_PACKAGE_NAME> = "targetPackageName";

        <com.android.server.om.OverlayManagerSettings$Serializer: java.lang.String ATTR_TARGET_OVERLAYABLE_NAME> = "targetOverlayableName";

        <com.android.server.om.OverlayManagerSettings$Serializer: java.lang.String ATTR_STATE> = "state";

        <com.android.server.om.OverlayManagerSettings$Serializer: java.lang.String ATTR_PRIORITY> = "priority";

        <com.android.server.om.OverlayManagerSettings$Serializer: java.lang.String ATTR_PACKAGE_NAME> = "packageName";

        <com.android.server.om.OverlayManagerSettings$Serializer: java.lang.String ATTR_IS_STATIC> = "isStatic";

        <com.android.server.om.OverlayManagerSettings$Serializer: java.lang.String ATTR_IS_ENABLED> = "isEnabled";

        <com.android.server.om.OverlayManagerSettings$Serializer: java.lang.String ATTR_CATEGORY> = "category";

        <com.android.server.om.OverlayManagerSettings$Serializer: java.lang.String ATTR_BASE_CODE_PATH> = "baseCodePath";

        return;
    }
}
