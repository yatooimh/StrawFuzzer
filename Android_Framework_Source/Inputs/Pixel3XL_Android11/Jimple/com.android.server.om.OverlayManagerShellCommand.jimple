final class com.android.server.om.OverlayManagerShellCommand extends android.os.ShellCommand
{
    private final android.content.Context mContext;
    private final android.content.om.IOverlayManager mInterface;

    void <init>(android.content.Context, android.content.om.IOverlayManager)
    {
        com.android.server.om.OverlayManagerShellCommand r0;
        android.content.Context r1;
        android.content.om.IOverlayManager r2;

        r0 := @this: com.android.server.om.OverlayManagerShellCommand;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.om.IOverlayManager;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        r0.<com.android.server.om.OverlayManagerShellCommand: android.content.Context mContext> = r1;

        r0.<com.android.server.om.OverlayManagerShellCommand: android.content.om.IOverlayManager mInterface> = r2;

        return;
    }

    private void printListOverlay(java.io.PrintWriter, android.content.om.OverlayInfo)
    {
        com.android.server.om.OverlayManagerShellCommand r0;
        java.io.PrintWriter r1;
        android.content.om.OverlayInfo r2;
        int i0;
        java.lang.String r3, $r5, $r6;
        java.lang.Object[] $r4;

        r0 := @this: com.android.server.om.OverlayManagerShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: android.content.om.OverlayInfo;

        i0 = r2.<android.content.om.OverlayInfo: int state>;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        if i0 == 6 goto label1;

        r3 = "---";

        goto label3;

     label1:
        r3 = "[x]";

        goto label3;

     label2:
        r3 = "[ ]";

     label3:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r3;

        $r5 = r2.<android.content.om.OverlayInfo: java.lang.String packageName>;

        $r4[1] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s", $r4);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        return;
    }

    private int runEnableDisable(boolean) throws android.os.RemoteException
    {
        com.android.server.om.OverlayManagerShellCommand r0;
        boolean z0, $z1, $z2, $z3;
        java.lang.String r1, $r4, $r8, r10;
        android.content.om.IOverlayManager $r3;
        int $i0, i1, i3;
        java.lang.StringBuilder $r5;
        java.io.PrintWriter r9;
        byte b2;

        r0 := @this: com.android.server.om.OverlayManagerShellCommand;

        z0 := @parameter0: boolean;

        r9 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        i1 = 0;

     label1:
        r1 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextOption()>();

        if r1 == null goto label6;

        b2 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if $i0 == 1333469547 goto label3;

     label2:
        goto label4;

     label3:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z3 == 0 goto label2;

        b2 = 0;

     label4:
        if b2 == 0 goto label5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return 1;

     label5:
        $r4 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextArgRequired()>();

        i1 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r4);

        goto label1;

     label6:
        r10 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextArgRequired()>();

        $r3 = r0.<com.android.server.om.OverlayManagerShellCommand: android.content.om.IOverlayManager mInterface>;

        $z1 = interfaceinvoke $r3.<android.content.om.IOverlayManager: boolean setEnabled(java.lang.String,boolean,int)>(r10, z0, i1);

        $z2 = 1 ^ $z1;

        i3 = (int) $z2;

        return i3;
    }

    private int runEnableExclusive() throws android.os.RemoteException
    {
        com.android.server.om.OverlayManagerShellCommand r0;
        java.io.PrintWriter r1;
        int i0, i1, i3, i4;
        android.content.om.IOverlayManager $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        java.lang.String $r5, $r9, r10, r11;
        java.lang.StringBuilder $r6;
        byte b2;

        r0 := @this: com.android.server.om.OverlayManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        i1 = 0;

        z6 = 0;

     label01:
        r10 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextOption()>();

        if r10 == null goto label09;

        b2 = -1;

        i0 = virtualinvoke r10.<java.lang.String: int hashCode()>();

        if i0 == 66265758 goto label04;

        if i0 == 1333469547 goto label03;

     label02:
        goto label05;

     label03:
        $z5 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z5 == 0 goto label02;

        b2 = 0;

        goto label05;

     label04:
        $z4 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("--category");

        if $z4 == 0 goto label02;

        b2 = 1;

     label05:
        if b2 == 0 goto label07;

        if b2 == 1 goto label06;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        return 1;

     label06:
        z6 = 1;

        goto label08;

     label07:
        $r5 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextArgRequired()>();

        i1 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r5);

     label08:
        goto label01;

     label09:
        r11 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextArgRequired()>();

        if z6 == 0 goto label10;

        $r4 = r0.<com.android.server.om.OverlayManagerShellCommand: android.content.om.IOverlayManager mInterface>;

        $z2 = interfaceinvoke $r4.<android.content.om.IOverlayManager: boolean setEnabledExclusiveInCategory(java.lang.String,int)>(r11, i1);

        $z3 = 1 ^ $z2;

        i3 = (int) $z3;

        return i3;

     label10:
        $r3 = r0.<com.android.server.om.OverlayManagerShellCommand: android.content.om.IOverlayManager mInterface>;

        $z0 = interfaceinvoke $r3.<android.content.om.IOverlayManager: boolean setEnabledExclusive(java.lang.String,boolean,int)>(r11, 1, i1);

        $z1 = 1 ^ $z0;

        i4 = (int) $z1;

        return i4;
    }

    private int runList() throws android.os.RemoteException
    {
        com.android.server.om.OverlayManagerShellCommand r0;
        android.content.om.IOverlayManager $r1, $r7, $r10;
        java.util.Set $r2;
        boolean $z0, $z1, $z2;
        java.lang.Object $r3, $r4, $r5, $r8;
        android.content.om.OverlayInfo $r6, $r9, r22;
        int $i0, i1, i4, i5, i6, i7;
        java.lang.String $r11, $r15, r18, r20, r25;
        java.lang.StringBuilder $r12;
        java.io.PrintWriter r16, r17;
        byte b3;
        java.util.List r21, r26;
        java.util.Map r23;
        java.util.Iterator r24;

        r0 := @this: com.android.server.om.OverlayManagerShellCommand;

        r16 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r17 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        i1 = 0;

     label01:
        r18 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextOption()>();

        if r18 == null goto label07;

        $i0 = virtualinvoke r18.<java.lang.String: int hashCode()>();

        if $i0 == 1333469547 goto label03;

     label02:
        goto label04;

     label03:
        $z2 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z2 == 0 goto label02;

        b3 = 0;

        goto label05;

     label04:
        b3 = -1;

     label05:
        if b3 == 0 goto label06;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r17.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        return 1;

     label06:
        $r11 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextArgRequired()>();

        i1 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r11);

        goto label01;

     label07:
        r20 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextArg()>();

        if r20 == null goto label12;

        $r7 = r0.<com.android.server.om.OverlayManagerShellCommand: android.content.om.IOverlayManager mInterface>;

        r21 = interfaceinvoke $r7.<android.content.om.IOverlayManager: java.util.List getOverlayInfosForTarget(java.lang.String,int)>(r20, i1);

        $z1 = interfaceinvoke r21.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label09;

        $r10 = r0.<com.android.server.om.OverlayManagerShellCommand: android.content.om.IOverlayManager mInterface>;

        r22 = interfaceinvoke $r10.<android.content.om.IOverlayManager: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>(r20, i1);

        if r22 == null goto label08;

        specialinvoke r0.<com.android.server.om.OverlayManagerShellCommand: void printListOverlay(java.io.PrintWriter,android.content.om.OverlayInfo)>(r16, r22);

     label08:
        return 0;

     label09:
        virtualinvoke r16.<java.io.PrintWriter: void println(java.lang.String)>(r20);

        i4 = interfaceinvoke r21.<java.util.List: int size()>();

        i5 = 0;

     label10:
        if i5 >= i4 goto label11;

        $r8 = interfaceinvoke r21.<java.util.List: java.lang.Object get(int)>(i5);

        $r9 = (android.content.om.OverlayInfo) $r8;

        specialinvoke r0.<com.android.server.om.OverlayManagerShellCommand: void printListOverlay(java.io.PrintWriter,android.content.om.OverlayInfo)>(r16, $r9);

        i5 = i5 + 1;

        goto label10;

     label11:
        return 0;

     label12:
        $r1 = r0.<com.android.server.om.OverlayManagerShellCommand: android.content.om.IOverlayManager mInterface>;

        r23 = interfaceinvoke $r1.<android.content.om.IOverlayManager: java.util.Map getAllOverlays(int)>(i1);

        $r2 = interfaceinvoke r23.<java.util.Map: java.util.Set keySet()>();

        r24 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r3 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.lang.String) $r3;

        virtualinvoke r16.<java.io.PrintWriter: void println(java.lang.String)>(r25);

        $r4 = interfaceinvoke r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r25);

        r26 = (java.util.List) $r4;

        i6 = interfaceinvoke r26.<java.util.List: int size()>();

        i7 = 0;

     label14:
        if i7 >= i6 goto label15;

        $r5 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(i7);

        $r6 = (android.content.om.OverlayInfo) $r5;

        specialinvoke r0.<com.android.server.om.OverlayManagerShellCommand: void printListOverlay(java.io.PrintWriter,android.content.om.OverlayInfo)>(r16, $r6);

        i7 = i7 + 1;

        goto label14;

     label15:
        virtualinvoke r16.<java.io.PrintWriter: void println()>();

        goto label13;

     label16:
        return 0;
    }

    private int runLookup() throws android.os.RemoteException
    {
        com.android.server.om.OverlayManagerShellCommand r0;
        java.io.PrintWriter r1, r2;
        boolean z0, $z1, $z2;
        java.lang.String r3, $r4, $r5, $r10, $r23, $r25, $r27, r28, r36, r41, r42, $r50;
        android.content.Context $r6;
        android.content.res.Resources$NotFoundException $r11, $r15, $r16, $r24, r46;
        java.lang.Throwable $r14, $r17, $r18, r39;
        android.content.pm.PackageManager$NameNotFoundException $r19;
        java.lang.StringBuilder $r20, r38, r49;
        java.lang.CharSequence $r26, r35, r37;
        java.util.regex.Pattern r29;
        java.util.regex.Matcher r30;
        android.content.pm.PackageManager r31;
        android.content.res.Resources r32;
        android.content.res.AssetManager r33;
        android.util.TypedValue r34, r45;
        int i0, i1, $i2;
        android.content.res.TypedArray r43;

        r0 := @this: com.android.server.om.OverlayManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r2 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r4 = "--verbose";

        $r5 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextOption()>();

        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        r28 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextArgRequired()>();

        r3 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextArgRequired()>();

        r29 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(.*?):(.*?)/(.*?)");

        r30 = virtualinvoke r29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3);

        $z1 = virtualinvoke r30.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label01;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Error: bad resource name, doesn\'t match package:type/name");

        return 1;

     label01:
        $r6 = r0.<com.android.server.om.OverlayManagerShellCommand: android.content.Context mContext>;

        r31 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        if r31 != null goto label02;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Error: failed to get package manager");

        return 1;

     label02:
        r32 = virtualinvoke r31.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>(r28);

     label03:
        r33 = virtualinvoke r32.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

     label04:
        virtualinvoke r33.<android.content.res.AssetManager: void setResourceResolutionLoggingEnabled(boolean)>(1);

     label05:
        r34 = new android.util.TypedValue;

        specialinvoke r34.<android.util.TypedValue: void <init>()>();

        virtualinvoke r32.<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)>(r3, r34, 0);

        r35 = virtualinvoke r34.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        r36 = virtualinvoke r33.<android.content.res.AssetManager: java.lang.String getLastResourceResolution()>();

        virtualinvoke r32.<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)>(r3, r34, 1);

        r37 = virtualinvoke r34.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

     label06:
        if z0 == 0 goto label08;

     label07:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r36);

     label08:
        $z2 = virtualinvoke r35.<java.lang.Object: boolean equals(java.lang.Object)>(r37);

        if $z2 == 0 goto label10;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r35);

     label09:
        goto label11;

     label10:
        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r37);

        $r10 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

     label11:
        virtualinvoke r33.<android.content.res.AssetManager: void setResourceResolutionLoggingEnabled(boolean)>(0);

        return 0;

     label12:
        $r18 := @caughtexception;

        r39 = $r18;

        goto label34;

     label13:
        $r24 := @caughtexception;

     label14:
        r41 = virtualinvoke r30.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r42 = virtualinvoke r30.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r25 = virtualinvoke r30.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        i0 = virtualinvoke r32.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r25, r42, r41);

     label15:
        if i0 == 0 goto label27;

     label16:
        r43 = virtualinvoke r32.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(i0);

     label17:
        if z0 == 0 goto label21;

     label18:
        $r27 = virtualinvoke r33.<android.content.res.AssetManager: java.lang.String getLastResourceResolution()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

     label19:
        goto label21;

     label20:
        $r11 := @caughtexception;

        goto label30;

     label21:
        r45 = new android.util.TypedValue;

        specialinvoke r45.<android.util.TypedValue: void <init>()>();

     label22:
        i1 = 0;

     label23:
        $i2 = virtualinvoke r43.<android.content.res.TypedArray: int length()>();

        if i1 >= $i2 goto label25;

        virtualinvoke r43.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>(i1, r45);

        $r26 = virtualinvoke r45.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r26);

     label24:
        i1 = i1 + 1;

        goto label23;

     label25:
        virtualinvoke r43.<android.content.res.TypedArray: void recycle()>();

     label26:
        virtualinvoke r33.<android.content.res.AssetManager: void setResourceResolutionLoggingEnabled(boolean)>(0);

        return 0;

     label27:
        r46 = new android.content.res.Resources$NotFoundException;

        specialinvoke r46.<android.content.res.Resources$NotFoundException: void <init>()>();

        throw r46;

     label28:
        $r15 := @caughtexception;

        goto label30;

     label29:
        $r16 := @caughtexception;

     label30:
        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: failed to get the resource ");

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r50 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r50);

     label31:
        virtualinvoke r33.<android.content.res.AssetManager: void setResourceResolutionLoggingEnabled(boolean)>(0);

        return 1;

     label32:
        $r17 := @caughtexception;

        r39 = $r17;

        goto label34;

     label33:
        $r14 := @caughtexception;

        r39 = $r14;

     label34:
        virtualinvoke r33.<android.content.res.AssetManager: void setResourceResolutionLoggingEnabled(boolean)>(0);

        throw r39;

     label35:
        $r19 := @caughtexception;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: failed to get resources for package ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        return 1;

        catch android.content.pm.PackageManager$NameNotFoundException from label02 to label03 with label35;
        catch java.lang.Throwable from label04 to label05 with label33;
        catch android.content.res.Resources$NotFoundException from label05 to label06 with label13;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch android.content.res.Resources$NotFoundException from label07 to label08 with label13;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch android.content.res.Resources$NotFoundException from label08 to label09 with label13;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch android.content.res.Resources$NotFoundException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch android.content.res.Resources$NotFoundException from label14 to label15 with label29;
        catch java.lang.Throwable from label14 to label15 with label33;
        catch android.content.res.Resources$NotFoundException from label16 to label17 with label29;
        catch java.lang.Throwable from label16 to label17 with label33;
        catch android.content.res.Resources$NotFoundException from label18 to label19 with label20;
        catch java.lang.Throwable from label18 to label19 with label12;
        catch android.content.res.Resources$NotFoundException from label21 to label22 with label29;
        catch java.lang.Throwable from label21 to label22 with label33;
        catch android.content.res.Resources$NotFoundException from label23 to label24 with label28;
        catch java.lang.Throwable from label23 to label24 with label32;
        catch android.content.res.Resources$NotFoundException from label25 to label26 with label28;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch android.content.res.Resources$NotFoundException from label27 to label28 with label28;
        catch java.lang.Throwable from label27 to label28 with label32;
        catch java.lang.Throwable from label30 to label31 with label32;
    }

    private int runSetPriority() throws android.os.RemoteException
    {
        com.android.server.om.OverlayManagerShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String $r2, $r3, $r7, $r11, r12, r14, r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.content.om.IOverlayManager $r4, $r5, $r6;
        int $i0, i1, i3, i4, i5;
        java.lang.StringBuilder $r8;
        byte b2;

        r0 := @this: com.android.server.om.OverlayManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        i1 = 0;

     label1:
        r12 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextOption()>();

        if r12 == null goto label6;

        b2 = -1;

        $i0 = virtualinvoke r12.<java.lang.String: int hashCode()>();

        if $i0 == 1333469547 goto label3;

     label2:
        goto label4;

     label3:
        $z8 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z8 == 0 goto label2;

        b2 = 0;

     label4:
        if b2 == 0 goto label5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        return 1;

     label5:
        $r7 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextArgRequired()>();

        i1 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r7);

        goto label1;

     label6:
        r14 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextArgRequired()>();

        r15 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.lang.String getNextArgRequired()>();

        $r2 = "highest";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z0 == 0 goto label7;

        $r6 = r0.<com.android.server.om.OverlayManagerShellCommand: android.content.om.IOverlayManager mInterface>;

        $z6 = interfaceinvoke $r6.<android.content.om.IOverlayManager: boolean setHighestPriority(java.lang.String,int)>(r14, i1);

        $z7 = 1 ^ $z6;

        i3 = (int) $z7;

        return i3;

     label7:
        $r3 = "lowest";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z1 == 0 goto label8;

        $r5 = r0.<com.android.server.om.OverlayManagerShellCommand: android.content.om.IOverlayManager mInterface>;

        $z4 = interfaceinvoke $r5.<android.content.om.IOverlayManager: boolean setLowestPriority(java.lang.String,int)>(r14, i1);

        $z5 = 1 ^ $z4;

        i4 = (int) $z5;

        return i4;

     label8:
        $r4 = r0.<com.android.server.om.OverlayManagerShellCommand: android.content.om.IOverlayManager mInterface>;

        $z2 = interfaceinvoke $r4.<android.content.om.IOverlayManager: boolean setPriority(java.lang.String,java.lang.String,int)>(r14, r15, i1);

        $z3 = 1 ^ $z2;

        i5 = (int) $z3;

        return i5;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.om.OverlayManagerShellCommand r0;
        java.io.PrintWriter r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.os.RemoteException $r2;
        java.lang.String $r6, $r10, $r12, r13;
        java.lang.Throwable $r7;
        byte b8;
        java.lang.StringBuilder r18, r19;
        java.lang.IllegalArgumentException r20;

        r0 := @this: com.android.server.om.OverlayManagerShellCommand;

        r13 := @parameter0: java.lang.String;

        if r13 != null goto label01;

        $i7 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: int handleDefaultCommands(java.lang.String)>(r13);

        return $i7;

     label01:
        r1 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

     label02:
        $i0 = virtualinvoke r13.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1361113425: goto label14;
            case -1298848381: goto label12;
            case -1097094790: goto label10;
            case -794624300: goto label08;
            case 3322014: goto label06;
            case 1671308008: goto label04;
            default: goto label03;
        };

     label03:
        goto label16;

     label04:
        $z0 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("disable");

        if $z0 == 0 goto label03;

     label05:
        b8 = 2;

        goto label17;

     label06:
        $z1 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z1 == 0 goto label03;

     label07:
        b8 = 0;

        goto label17;

     label08:
        $z2 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("enable-exclusive");

        if $z2 == 0 goto label03;

     label09:
        b8 = 3;

        goto label17;

     label10:
        $z3 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("lookup");

        if $z3 == 0 goto label03;

     label11:
        b8 = 5;

        goto label17;

     label12:
        $z4 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("enable");

        if $z4 == 0 goto label03;

     label13:
        b8 = 1;

        goto label17;

     label14:
        $z5 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("set-priority");

        if $z5 == 0 goto label03;

     label15:
        b8 = 4;

        goto label17;

     label16:
        b8 = -1;

     label17:
        if b8 == 0 goto label24;

        if b8 == 1 goto label23;

        if b8 == 2 goto label22;

        if b8 == 3 goto label21;

        if b8 == 4 goto label20;

        if b8 == 5 goto label19;

     label18:
        $i6 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: int handleDefaultCommands(java.lang.String)>(r13);

        return $i6;

     label19:
        $i5 = specialinvoke r0.<com.android.server.om.OverlayManagerShellCommand: int runLookup()>();

        return $i5;

     label20:
        $i4 = specialinvoke r0.<com.android.server.om.OverlayManagerShellCommand: int runSetPriority()>();

        return $i4;

     label21:
        $i3 = specialinvoke r0.<com.android.server.om.OverlayManagerShellCommand: int runEnableExclusive()>();

        return $i3;

     label22:
        $i2 = specialinvoke r0.<com.android.server.om.OverlayManagerShellCommand: int runEnableDisable(boolean)>(0);

        return $i2;

     label23:
        $i1 = specialinvoke r0.<com.android.server.om.OverlayManagerShellCommand: int runEnableDisable(boolean)>(1);

        return $i1;

     label24:
        i9 = specialinvoke r0.<com.android.server.om.OverlayManagerShellCommand: int runList()>();

     label25:
        return i9;

     label26:
        $r2 := @caughtexception;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote exception: ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        goto label28;

     label27:
        $r7 := @caughtexception;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        r20 = (java.lang.IllegalArgumentException) $r7;

        $r10 = virtualinvoke r20.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

     label28:
        return -1;

        catch java.lang.IllegalArgumentException from label02 to label03 with label27;
        catch android.os.RemoteException from label02 to label03 with label26;
        catch java.lang.IllegalArgumentException from label04 to label05 with label27;
        catch android.os.RemoteException from label04 to label05 with label26;
        catch java.lang.IllegalArgumentException from label06 to label07 with label27;
        catch android.os.RemoteException from label06 to label07 with label26;
        catch java.lang.IllegalArgumentException from label08 to label09 with label27;
        catch android.os.RemoteException from label08 to label09 with label26;
        catch java.lang.IllegalArgumentException from label10 to label11 with label27;
        catch android.os.RemoteException from label10 to label11 with label26;
        catch java.lang.IllegalArgumentException from label12 to label13 with label27;
        catch android.os.RemoteException from label12 to label13 with label26;
        catch java.lang.IllegalArgumentException from label14 to label15 with label27;
        catch android.os.RemoteException from label14 to label15 with label26;
        catch java.lang.IllegalArgumentException from label18 to label19 with label27;
        catch android.os.RemoteException from label18 to label19 with label26;
        catch java.lang.IllegalArgumentException from label19 to label20 with label27;
        catch android.os.RemoteException from label19 to label20 with label26;
        catch java.lang.IllegalArgumentException from label20 to label21 with label27;
        catch android.os.RemoteException from label20 to label21 with label26;
        catch java.lang.IllegalArgumentException from label21 to label22 with label27;
        catch android.os.RemoteException from label21 to label22 with label26;
        catch java.lang.IllegalArgumentException from label22 to label23 with label27;
        catch android.os.RemoteException from label22 to label23 with label26;
        catch java.lang.IllegalArgumentException from label23 to label24 with label27;
        catch android.os.RemoteException from label23 to label24 with label26;
        catch java.lang.IllegalArgumentException from label24 to label25 with label27;
        catch android.os.RemoteException from label24 to label25 with label26;
    }

    public void onHelp()
    {
        com.android.server.om.OverlayManagerShellCommand r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.om.OverlayManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.om.OverlayManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Overlay manager (overlay) commands:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  dump [--verbose] [--user USER_ID] [[FIELD] PACKAGE]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print debugging information about the overlay manager.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    With optional parameter PACKAGE, limit output to the specified");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    package. With optional parameter FIELD, limit output to");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    the value of that SettingsItem field. Field names are");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    case insensitive and out.println the m prefix can be omitted,");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    so the following are equivalent: mState, mstate, State, state.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  list [--user USER_ID] [PACKAGE]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print information about target and overlay packages.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Overlay packages are printed in priority order. With optional");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    parameter PACKAGE, limit output to the specified package.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  enable [--user USER_ID] PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Enable overlay package PACKAGE.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  disable [--user USER_ID] PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Disable overlay package PACKAGE.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  enable-exclusive [--user USER_ID] [--category] PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Enable overlay package PACKAGE and disable all other overlays for");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    its target package. If the --category option is given, only disables");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    other overlays in the same category.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-priority [--user USER_ID] PACKAGE PARENT|lowest|highest");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Change the priority of the overlay PACKAGE to be just higher than");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    the priority of PACKAGE_PARENT If PARENT is the special keyword");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    \'lowest\', change priority of PACKAGE to the lowest priority.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    If PARENT is the special keyword \'highest\', change priority of");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    PACKAGE to the highest priority.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  lookup [--verbose] PACKAGE-TO-LOAD PACKAGE:TYPE/NAME");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Load a package and print the value of a given resource");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    applying the current configuration and enabled overlays.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    For a more fine-grained alernative, use \'idmap2 lookup\'.");

        return;
    }
}
