class com.android.server.om.OverlayReferenceMapper$1 extends java.lang.Object implements com.android.server.om.OverlayReferenceMapper$Provider
{
    final com.android.server.om.OverlayReferenceMapper this$0;

    void <init>(com.android.server.om.OverlayReferenceMapper)
    {
        com.android.server.om.OverlayReferenceMapper$1 r0;
        com.android.server.om.OverlayReferenceMapper r1;

        r0 := @this: com.android.server.om.OverlayReferenceMapper$1;

        r1 := @parameter0: com.android.server.om.OverlayReferenceMapper;

        r0.<com.android.server.om.OverlayReferenceMapper$1: com.android.server.om.OverlayReferenceMapper this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getActorPkg(java.lang.String)
    {
        com.android.server.om.OverlayReferenceMapper$1 r0;
        java.lang.String r1, $r6;
        java.util.Map r2;
        com.android.server.SystemConfig $r3;
        android.util.Pair $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.om.OverlayReferenceMapper$1;

        r1 := @parameter0: java.lang.String;

        $r3 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        r2 = virtualinvoke $r3.<com.android.server.SystemConfig: java.util.Map getNamedActors()>();

        $r4 = staticinvoke <com.android.server.om.OverlayActorEnforcer: android.util.Pair getPackageNameForActor(java.lang.String,java.util.Map)>(r1, r2);

        $r5 = $r4.<android.util.Pair: java.lang.Object first>;

        $r6 = (java.lang.String) $r5;

        return $r6;
    }

    public java.util.Map getTargetToOverlayables(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.om.OverlayReferenceMapper$1 r0;
        java.lang.String r1, r9;
        boolean $z0;
        java.util.HashMap $r4;
        java.util.HashSet $r5;
        java.util.Map $r7;
        com.android.server.pm.parsing.pkg.AndroidPackage r8;

        r0 := @this: com.android.server.om.OverlayReferenceMapper$1;

        r8 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        r1 = interfaceinvoke r8.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getOverlayTarget()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r7;

     label1:
        r9 = interfaceinvoke r8.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getOverlayTargetName()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r9);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

        return $r4;
    }
}
