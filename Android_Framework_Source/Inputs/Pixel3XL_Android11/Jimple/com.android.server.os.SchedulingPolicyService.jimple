public class com.android.server.os.SchedulingPolicyService extends android.os.ISchedulingPolicyService$Stub
{
    private static final java.lang.String[] MEDIA_PROCESS_NAMES;
    private static final int PRIORITY_MAX;
    private static final int PRIORITY_MIN;
    private static final java.lang.String TAG;
    private int mBoostedPid;
    private android.os.IBinder mClient;
    private final android.os.IBinder$DeathRecipient mDeathRecipient;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.android.server.os.SchedulingPolicyService: java.lang.String TAG> = "SchedulingPolicyService";

        <com.android.server.os.SchedulingPolicyService: int PRIORITY_MIN> = 1;

        <com.android.server.os.SchedulingPolicyService: int PRIORITY_MAX> = 3;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "media.swcodec";

        <com.android.server.os.SchedulingPolicyService: java.lang.String[] MEDIA_PROCESS_NAMES> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.server.os.SchedulingPolicyService r0;
        com.android.server.os.SchedulingPolicyService$1 $r1;
        com.android.server.os._$$Lambda$SchedulingPolicyService$ao2OiSvvlyzmJ0li0c0nhHy_IDk $r2;

        r0 := @this: com.android.server.os.SchedulingPolicyService;

        specialinvoke r0.<android.os.ISchedulingPolicyService$Stub: void <init>()>();

        $r1 = new com.android.server.os.SchedulingPolicyService$1;

        specialinvoke $r1.<com.android.server.os.SchedulingPolicyService$1: void <init>(com.android.server.os.SchedulingPolicyService)>(r0);

        r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder$DeathRecipient mDeathRecipient> = $r1;

        r0.<com.android.server.os.SchedulingPolicyService: int mBoostedPid> = -1;

        $r2 = new com.android.server.os._$$Lambda$SchedulingPolicyService$ao2OiSvvlyzmJ0li0c0nhHy_IDk;

        specialinvoke $r2.<com.android.server.os._$$Lambda$SchedulingPolicyService$ao2OiSvvlyzmJ0li0c0nhHy_IDk: void <init>(com.android.server.os.SchedulingPolicyService)>(r0);

        staticinvoke <com.android.server.SystemServerInitThreadPool: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.String)>($r2, "SchedulingPolicyService.<init>");

        return;
    }

    private int disableCpusetBoost(int)
    {
        com.android.server.os.SchedulingPolicyService r0;
        int i0, i1;
        java.lang.String $r4, $r11;
        android.os.IBinder$DeathRecipient $r5;
        java.lang.Exception $r6, $r13;
        java.lang.StringBuilder $r7, r17;
        java.lang.Throwable $r12;
        android.os.IBinder r14;

        r0 := @this: com.android.server.os.SchedulingPolicyService;

        i0 := @parameter0: int;

        i1 = r0.<com.android.server.os.SchedulingPolicyService: int mBoostedPid>;

        r0.<com.android.server.os.SchedulingPolicyService: int mBoostedPid> = -1;

        r14 = r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder mClient>;

        if r14 == null goto label06;

     label01:
        $r5 = r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke r14.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

     label02:
        goto label05;

     label03:
        $r12 := @caughtexception;

        r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder mClient> = null;

        throw $r12;

     label04:
        $r13 := @caughtexception;

     label05:
        r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder mClient> = null;

     label06:
        if i1 != i0 goto label10;

     label07:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Moving ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" back to group default");

        $r4 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SchedulingPolicyService", $r4);

        staticinvoke <android.os.Process: void setProcessGroup(int,int)>(i0, -1);

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t move pid ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" back to group default");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SchedulingPolicyService", $r11);

     label10:
        return 0;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private int enableCpusetBoost(int, android.os.IBinder)
    {
        com.android.server.os.SchedulingPolicyService r0;
        int i0, $i1;
        android.os.IBinder$DeathRecipient $r6, $r14, $r20;
        java.lang.Exception $r7, $r8, $r9;
        java.lang.StringBuilder $r10, r21;
        java.lang.String $r13, $r22;
        java.lang.Throwable $r15;
        android.os.IBinder r16, r17;

        r0 := @this: com.android.server.os.SchedulingPolicyService;

        i0 := @parameter0: int;

        r16 := @parameter1: android.os.IBinder;

        $i1 = r0.<com.android.server.os.SchedulingPolicyService: int mBoostedPid>;

        if $i1 != i0 goto label01;

        return 0;

     label01:
        r0.<com.android.server.os.SchedulingPolicyService: int mBoostedPid> = -1;

        r17 = r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder mClient>;

        if r17 == null goto label07;

     label02:
        $r6 = r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke r17.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r6, 0);

     label03:
        goto label06;

     label04:
        $r15 := @caughtexception;

        r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder mClient> = null;

        throw $r15;

     label05:
        $r8 := @caughtexception;

     label06:
        r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder mClient> = null;

     label07:
        $r20 = r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke r16.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r20, 0);

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Moving ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to group ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(5);

        $r22 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SchedulingPolicyService", $r22);

        staticinvoke <android.os.Process: void setProcessGroup(int,int)>(i0, 5);

        r0.<com.android.server.os.SchedulingPolicyService: int mBoostedPid> = i0;

        r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder mClient> = r16;

     label08:
        return 0;

     label09:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed enableCpusetBoost: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SchedulingPolicyService", $r13);

     label10:
        $r14 = r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke r16.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r14, 0);

     label11:
        goto label13;

     label12:
        $r7 := @caughtexception;

     label13:
        return -1;

        catch java.lang.Exception from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    private boolean isPermitted()
    {
        com.android.server.os.SchedulingPolicyService r0;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.os.SchedulingPolicyService;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Process: int myPid()>();

        if $i1 != $i2 goto label1;

        return 1;

     label1:
        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 1002 goto label2;

        if i0 == 1041 goto label2;

        if i0 == 1047 goto label2;

        return 0;

     label2:
        return 1;
    }

    public void lambda$new$0$SchedulingPolicyService()
    {
        com.android.server.os.SchedulingPolicyService r0;
        android.os.IBinder$DeathRecipient r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String[] $r2;
        java.lang.Throwable $r3;
        int[] r4;

        r0 := @this: com.android.server.os.SchedulingPolicyService;

        r1 = r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder$DeathRecipient mDeathRecipient>;

        entermonitor r1;

     label1:
        $i0 = r0.<com.android.server.os.SchedulingPolicyService: int mBoostedPid>;

        if $i0 != -1 goto label4;

        $r2 = <com.android.server.os.SchedulingPolicyService: java.lang.String[] MEDIA_PROCESS_NAMES>;

        r4 = staticinvoke <android.os.Process: int[] getPidsForCommands(java.lang.String[])>($r2);

     label2:
        if r4 == null goto label4;

     label3:
        $i1 = lengthof r4;

        if $i1 != 1 goto label4;

        $i2 = r4[0];

        r0.<com.android.server.os.SchedulingPolicyService: int mBoostedPid> = $i2;

        $i3 = r4[0];

        specialinvoke r0.<com.android.server.os.SchedulingPolicyService: int disableCpusetBoost(int)>($i3);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int requestCpusetBoost(boolean, android.os.IBinder)
    {
        com.android.server.os.SchedulingPolicyService r0;
        boolean z0;
        int[] r1;
        android.os.IBinder$DeathRecipient r2;
        int $i0, $i1, $i3, $i4, $i5, $i6, i7, i8;
        java.lang.String[] $r3;
        java.lang.Throwable $r4;
        android.os.IBinder r5;

        r0 := @this: com.android.server.os.SchedulingPolicyService;

        z0 := @parameter0: boolean;

        r5 := @parameter1: android.os.IBinder;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 == $i1 goto label01;

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i6 == 1013 goto label01;

        return -1;

     label01:
        $r3 = <com.android.server.os.SchedulingPolicyService: java.lang.String[] MEDIA_PROCESS_NAMES>;

        r1 = staticinvoke <android.os.Process: int[] getPidsForCommands(java.lang.String[])>($r3);

        if r1 == null goto label10;

        $i3 = lengthof r1;

        if $i3 == 1 goto label02;

        goto label10;

     label02:
        r2 = r0.<com.android.server.os.SchedulingPolicyService: android.os.IBinder$DeathRecipient mDeathRecipient>;

        entermonitor r2;

        if z0 == 0 goto label05;

     label03:
        $i5 = r1[0];

        i7 = specialinvoke r0.<com.android.server.os.SchedulingPolicyService: int enableCpusetBoost(int,android.os.IBinder)>($i5, r5);

        exitmonitor r2;

     label04:
        return i7;

     label05:
        $i4 = r1[0];

        i8 = specialinvoke r0.<com.android.server.os.SchedulingPolicyService: int disableCpusetBoost(int)>($i4);

        exitmonitor r2;

     label06:
        return i8;

     label07:
        $r4 := @caughtexception;

     label08:
        exitmonitor r2;

     label09:
        throw $r4;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SchedulingPolicyService", "requestCpusetBoost: can\'t find media.codec process");

        return -1;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public int requestPriority(int, int, int, boolean)
    {
        com.android.server.os.SchedulingPolicyService r0;
        int i0, i1, $i2, $i3, i6;
        boolean z0, $z1;
        java.lang.RuntimeException $r1, $r6;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r5, $r10;
        byte b7;

        r0 := @this: com.android.server.os.SchedulingPolicyService;

        i6 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $z1 = specialinvoke r0.<com.android.server.os.SchedulingPolicyService: boolean isPermitted()>();

        if $z1 == 0 goto label9;

        if i1 < 1 goto label9;

        if i1 > 3 goto label9;

        $i2 = staticinvoke <android.os.Process: int getThreadGroupLeader(int)>(i0);

        if $i2 == i6 goto label1;

        goto label9;

     label1:
        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i3 == 1002 goto label6;

        if z0 != 0 goto label2;

        b7 = 4;

        goto label3;

     label2:
        b7 = 6;

     label3:
        staticinvoke <android.os.Process: void setThreadGroup(int,int)>(i0, b7);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed setThreadGroup: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SchedulingPolicyService", $r10);

        return -1;

     label6:
        staticinvoke <android.os.Process: void setThreadScheduler(int,int,int)>(i0, 1073741825, i1);

     label7:
        return 0;

     label8:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed setThreadScheduler: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SchedulingPolicyService", $r5);

        return -1;

     label9:
        return -1;

        catch java.lang.RuntimeException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label6 to label7 with label8;
    }
}
