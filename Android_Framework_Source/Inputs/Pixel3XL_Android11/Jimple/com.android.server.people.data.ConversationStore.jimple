class com.android.server.people.data.ConversationStore extends java.lang.Object
{
    private static final java.lang.String CONVERSATIONS_FILE_NAME;
    private static final int CONVERSATION_INFOS_END_TOKEN;
    private static final java.lang.String TAG;
    private final java.util.Map mContactUriToShortcutIdMap;
    private final java.util.Map mConversationInfoMap;
    private com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter mConversationInfosProtoDiskReadWriter;
    private final java.util.Map mLocusIdToShortcutIdMap;
    private final java.util.Map mNotifChannelIdToShortcutIdMap;
    private final java.io.File mPackageDir;
    private final java.util.Map mPhoneNumberToShortcutIdMap;
    private final java.util.concurrent.ScheduledExecutorService mScheduledExecutorService;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.people.data.ConversationStore: int CONVERSATION_INFOS_END_TOKEN> = -1;

        <com.android.server.people.data.ConversationStore: java.lang.String CONVERSATIONS_FILE_NAME> = "conversations";

        $r0 = class "Lcom/android/server/people/data/ConversationStore;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.people.data.ConversationStore: java.lang.String TAG> = $r1;

        return;
    }

    void <init>(java.io.File, java.util.concurrent.ScheduledExecutorService)
    {
        com.android.server.people.data.ConversationStore r0;
        java.io.File r1;
        java.util.concurrent.ScheduledExecutorService r2;
        android.util.ArrayMap $r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.server.people.data.ConversationStore;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.util.concurrent.ScheduledExecutorService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.people.data.ConversationStore: java.util.Map mConversationInfoMap> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.people.data.ConversationStore: java.util.Map mLocusIdToShortcutIdMap> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.people.data.ConversationStore: java.util.Map mContactUriToShortcutIdMap> = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.people.data.ConversationStore: java.util.Map mPhoneNumberToShortcutIdMap> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.people.data.ConversationStore: java.util.Map mNotifChannelIdToShortcutIdMap> = $r7;

        r0.<com.android.server.people.data.ConversationStore: java.util.concurrent.ScheduledExecutorService mScheduledExecutorService> = r2;

        r0.<com.android.server.people.data.ConversationStore: java.io.File mPackageDir> = r1;

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.people.data.ConversationStore: java.lang.String TAG>;

        return $r0;
    }

    private com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter getConversationInfosProtoDiskReadWriter()
    {
        com.android.server.people.data.ConversationStore r0;
        java.lang.String r1, $r12, $r14;
        java.io.File $r3, $r8, $r11;
        boolean $z0;
        com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter $r4, $r5, $r6;
        java.util.concurrent.ScheduledExecutorService $r7;
        java.lang.StringBuilder $r9;

        r0 := @this: com.android.server.people.data.ConversationStore;

        $r3 = r0.<com.android.server.people.data.ConversationStore: java.io.File mPackageDir>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        r1 = <com.android.server.people.data.ConversationStore: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package data directory does not exist: ");

        $r11 = r0.<com.android.server.people.data.ConversationStore: java.io.File mPackageDir>;

        $r12 = virtualinvoke $r11.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r1, $r14);

        return null;

     label1:
        $r4 = r0.<com.android.server.people.data.ConversationStore: com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter mConversationInfosProtoDiskReadWriter>;

        if $r4 != null goto label2;

        $r6 = new com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter;

        $r8 = r0.<com.android.server.people.data.ConversationStore: java.io.File mPackageDir>;

        $r7 = r0.<com.android.server.people.data.ConversationStore: java.util.concurrent.ScheduledExecutorService mScheduledExecutorService>;

        specialinvoke $r6.<com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter: void <init>(java.io.File,java.lang.String,java.util.concurrent.ScheduledExecutorService)>($r8, "conversations", $r7);

        r0.<com.android.server.people.data.ConversationStore: com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter mConversationInfosProtoDiskReadWriter> = $r6;

     label2:
        $r5 = r0.<com.android.server.people.data.ConversationStore: com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter mConversationInfosProtoDiskReadWriter>;

        return $r5;
    }

    private void scheduleUpdateConversationsOnDisk()
    {
        com.android.server.people.data.ConversationStore r0;
        java.util.ArrayList r1;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.lang.Throwable $r4;
        com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter r5;

        r0 := @this: com.android.server.people.data.ConversationStore;

        entermonitor r0;

     label1:
        r5 = specialinvoke r0.<com.android.server.people.data.ConversationStore: com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter getConversationInfosProtoDiskReadWriter()>();

     label2:
        if r5 == null goto label4;

     label3:
        r1 = new java.util.ArrayList;

        $r2 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mConversationInfoMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        specialinvoke r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        virtualinvoke r5.<com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter: void scheduleConversationsSave(java.util.List)>(r1);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void updateConversationsInMemory(com.android.server.people.data.ConversationInfo)
    {
        com.android.server.people.data.ConversationStore r0;
        java.util.Map $r1, $r4, $r7, $r10, $r13;
        java.lang.String $r2, $r5, $r8, $r11, $r14, r20, r21;
        java.lang.Throwable $r16;
        com.android.server.people.data.ConversationInfo r17;
        android.content.LocusId r18;
        android.net.Uri r19;

        r0 := @this: com.android.server.people.data.ConversationStore;

        r17 := @parameter0: com.android.server.people.data.ConversationInfo;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mConversationInfoMap>;

        $r2 = virtualinvoke r17.<com.android.server.people.data.ConversationInfo: java.lang.String getShortcutId()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r17);

        r18 = virtualinvoke r17.<com.android.server.people.data.ConversationInfo: android.content.LocusId getLocusId()>();

     label02:
        if r18 == null goto label04;

     label03:
        $r13 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mLocusIdToShortcutIdMap>;

        $r14 = virtualinvoke r17.<com.android.server.people.data.ConversationInfo: java.lang.String getShortcutId()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r14);

     label04:
        r19 = virtualinvoke r17.<com.android.server.people.data.ConversationInfo: android.net.Uri getContactUri()>();

     label05:
        if r19 == null goto label07;

     label06:
        $r10 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mContactUriToShortcutIdMap>;

        $r11 = virtualinvoke r17.<com.android.server.people.data.ConversationInfo: java.lang.String getShortcutId()>();

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r19, $r11);

     label07:
        r20 = virtualinvoke r17.<com.android.server.people.data.ConversationInfo: java.lang.String getContactPhoneNumber()>();

     label08:
        if r20 == null goto label10;

     label09:
        $r7 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mPhoneNumberToShortcutIdMap>;

        $r8 = virtualinvoke r17.<com.android.server.people.data.ConversationInfo: java.lang.String getShortcutId()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, $r8);

     label10:
        r21 = virtualinvoke r17.<com.android.server.people.data.ConversationInfo: java.lang.String getNotificationChannelId()>();

     label11:
        if r21 == null goto label13;

     label12:
        $r4 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mNotifChannelIdToShortcutIdMap>;

        $r5 = virtualinvoke r17.<com.android.server.people.data.ConversationInfo: java.lang.String getShortcutId()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r21, $r5);

     label13:
        exitmonitor r0;

        return;

     label14:
        $r16 := @caughtexception;

        exitmonitor r0;

        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    void addOrUpdate(com.android.server.people.data.ConversationInfo)
    {
        com.android.server.people.data.ConversationStore r0;
        java.lang.Throwable $r1;
        com.android.server.people.data.ConversationInfo r2;

        r0 := @this: com.android.server.people.data.ConversationStore;

        r2 := @parameter0: com.android.server.people.data.ConversationInfo;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.people.data.ConversationStore: void updateConversationsInMemory(com.android.server.people.data.ConversationInfo)>(r2);

        specialinvoke r0.<com.android.server.people.data.ConversationStore: void scheduleUpdateConversationsOnDisk()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    com.android.server.people.data.ConversationInfo deleteConversation(java.lang.String)
    {
        com.android.server.people.data.ConversationStore r0;
        java.util.Map $r1, $r3, $r5, $r7, $r9;
        java.lang.Object $r2;
        java.lang.Throwable $r11;
        java.lang.String r12, r16, r17;
        com.android.server.people.data.ConversationInfo r13;
        android.content.LocusId r14;
        android.net.Uri r15;

        r0 := @this: com.android.server.people.data.ConversationStore;

        r12 := @parameter0: java.lang.String;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mConversationInfoMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r12);

        r13 = (com.android.server.people.data.ConversationInfo) $r2;

     label02:
        if r13 != null goto label03;

        exitmonitor r0;

        return null;

     label03:
        r14 = virtualinvoke r13.<com.android.server.people.data.ConversationInfo: android.content.LocusId getLocusId()>();

     label04:
        if r14 == null goto label06;

     label05:
        $r9 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mLocusIdToShortcutIdMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r14);

     label06:
        r15 = virtualinvoke r13.<com.android.server.people.data.ConversationInfo: android.net.Uri getContactUri()>();

     label07:
        if r15 == null goto label09;

     label08:
        $r7 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mContactUriToShortcutIdMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r15);

     label09:
        r16 = virtualinvoke r13.<com.android.server.people.data.ConversationInfo: java.lang.String getContactPhoneNumber()>();

     label10:
        if r16 == null goto label12;

     label11:
        $r5 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mPhoneNumberToShortcutIdMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r16);

     label12:
        r17 = virtualinvoke r13.<com.android.server.people.data.ConversationInfo: java.lang.String getNotificationChannelId()>();

     label13:
        if r17 == null goto label15;

     label14:
        $r3 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mNotifChannelIdToShortcutIdMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r17);

     label15:
        specialinvoke r0.<com.android.server.people.data.ConversationStore: void scheduleUpdateConversationsOnDisk()>();

     label16:
        exitmonitor r0;

        return r13;

     label17:
        $r11 := @caughtexception;

        exitmonitor r0;

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    void forAllConversations(java.util.function.Consumer)
    {
        com.android.server.people.data.ConversationStore r0;
        java.util.Iterator r1;
        java.util.Map $r2;
        java.util.Collection $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.server.people.data.ConversationInfo $r5;
        java.lang.Throwable $r6;
        java.util.function.Consumer r7;

        r0 := @this: com.android.server.people.data.ConversationStore;

        r7 := @parameter0: java.util.function.Consumer;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mConversationInfoMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        r1 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.server.people.data.ConversationInfo) $r4;

        interfaceinvoke r7.<java.util.function.Consumer: void accept(java.lang.Object)>($r5);

     label3:
        goto label2;

     label4:
        exitmonitor r0;

        return;

     label5:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
    }

    byte[] getBackupPayload()
    {
        com.android.server.people.data.ConversationStore r0;
        java.io.ByteArrayOutputStream r1;
        java.io.DataOutputStream r2;
        byte[] r3, r15;
        java.util.Map $r4;
        java.util.Collection $r5;
        java.lang.Object $r6;
        com.android.server.people.data.ConversationInfo $r7;
        int $i0;
        java.lang.Throwable $r8, $r9, $r11;
        java.lang.String $r10, $r12;
        java.util.Iterator r13;
        boolean $z0;

        r0 := @this: com.android.server.people.data.ConversationStore;

        entermonitor r0;

     label01:
        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = new java.io.DataOutputStream;

        specialinvoke r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);

        $r4 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mConversationInfoMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        r13 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r6 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.android.server.people.data.ConversationInfo) $r6;

        r3 = virtualinvoke $r7.<com.android.server.people.data.ConversationInfo: byte[] getBackupPayload()>();

     label03:
        if r3 != null goto label04;

        goto label02;

     label04:
        $i0 = lengthof r3;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>(r3);

     label05:
        goto label02;

     label06:
        $r11 := @caughtexception;

     label07:
        $r12 = <com.android.server.people.data.ConversationStore: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r12, "Failed to write conversation info to backup payload.", $r11);

     label08:
        exitmonitor r0;

        return null;

     label09:
        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>(-1);

     label10:
        r15 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label11:
        exitmonitor r0;

        return r15;

     label12:
        $r9 := @caughtexception;

     label13:
        $r10 = <com.android.server.people.data.ConversationStore: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r10, "Failed to write conversation infos end token to backup payload.", $r9);

     label14:
        exitmonitor r0;

        return null;

     label15:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.io.IOException from label09 to label10 with label12;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    com.android.server.people.data.ConversationInfo getConversation(java.lang.String)
    {
        com.android.server.people.data.ConversationStore r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;
        com.android.server.people.data.ConversationInfo r5;

        r0 := @this: com.android.server.people.data.ConversationStore;

        r4 := @parameter0: java.lang.String;

        entermonitor r0;

        if r4 == null goto label4;

     label1:
        $r1 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mConversationInfoMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.people.data.ConversationInfo) $r2;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label4:
        r5 = null;

     label5:
        exitmonitor r0;

        return r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    com.android.server.people.data.ConversationInfo getConversationByContactUri(android.net.Uri)
    {
        com.android.server.people.data.ConversationStore r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        android.net.Uri r5;
        com.android.server.people.data.ConversationInfo r6;

        r0 := @this: com.android.server.people.data.ConversationStore;

        r5 := @parameter0: android.net.Uri;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mContactUriToShortcutIdMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r3 = (java.lang.String) $r2;

        r6 = virtualinvoke r0.<com.android.server.people.data.ConversationStore: com.android.server.people.data.ConversationInfo getConversation(java.lang.String)>($r3);

     label2:
        exitmonitor r0;

        return r6;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    com.android.server.people.data.ConversationInfo getConversationByLocusId(android.content.LocusId)
    {
        com.android.server.people.data.ConversationStore r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        android.content.LocusId r5;
        com.android.server.people.data.ConversationInfo r6;

        r0 := @this: com.android.server.people.data.ConversationStore;

        r5 := @parameter0: android.content.LocusId;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mLocusIdToShortcutIdMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r3 = (java.lang.String) $r2;

        r6 = virtualinvoke r0.<com.android.server.people.data.ConversationStore: com.android.server.people.data.ConversationInfo getConversation(java.lang.String)>($r3);

     label2:
        exitmonitor r0;

        return r6;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    com.android.server.people.data.ConversationInfo getConversationByNotificationChannelId(java.lang.String)
    {
        com.android.server.people.data.ConversationStore r0;
        java.lang.String r1, $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.android.server.people.data.ConversationInfo $r5;

        r0 := @this: com.android.server.people.data.ConversationStore;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mNotifChannelIdToShortcutIdMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke r0.<com.android.server.people.data.ConversationStore: com.android.server.people.data.ConversationInfo getConversation(java.lang.String)>($r4);

        return $r5;
    }

    com.android.server.people.data.ConversationInfo getConversationByPhoneNumber(java.lang.String)
    {
        com.android.server.people.data.ConversationStore r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String $r3, r5;
        java.lang.Throwable $r4;
        com.android.server.people.data.ConversationInfo r6;

        r0 := @this: com.android.server.people.data.ConversationStore;

        r5 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mPhoneNumberToShortcutIdMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r3 = (java.lang.String) $r2;

        r6 = virtualinvoke r0.<com.android.server.people.data.ConversationStore: com.android.server.people.data.ConversationInfo getConversation(java.lang.String)>($r3);

     label2:
        exitmonitor r0;

        return r6;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void loadConversationsFromDisk()
    {
        com.android.server.people.data.ConversationStore r0;
        java.lang.Object $r1, $r2;
        boolean $z0;
        com.android.server.people.data.ConversationInfo $r3;
        java.lang.Throwable $r4;
        com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter r5;
        java.util.List r6;
        java.util.Iterator r7;

        r0 := @this: com.android.server.people.data.ConversationStore;

        entermonitor r0;

     label1:
        r5 = specialinvoke r0.<com.android.server.people.data.ConversationStore: com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter getConversationInfosProtoDiskReadWriter()>();

     label2:
        if r5 != null goto label3;

        exitmonitor r0;

        return;

     label3:
        $r1 = virtualinvoke r5.<com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter: java.lang.Object read(java.lang.String)>("conversations");

        r6 = (java.util.List) $r1;

     label4:
        if r6 != null goto label5;

        exitmonitor r0;

        return;

     label5:
        r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r2 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.android.server.people.data.ConversationInfo) $r2;

        specialinvoke r0.<com.android.server.people.data.ConversationStore: void updateConversationsInMemory(com.android.server.people.data.ConversationInfo)>($r3);

     label7:
        goto label6;

     label8:
        exitmonitor r0;

        return;

     label9:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    void onDestroy()
    {
        com.android.server.people.data.ConversationStore r0;
        java.util.Map $r1, $r2, $r3, $r4, $r5;
        java.lang.Throwable $r6;
        com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter r7;

        r0 := @this: com.android.server.people.data.ConversationStore;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mConversationInfoMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mContactUriToShortcutIdMap>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        $r3 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mLocusIdToShortcutIdMap>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        $r4 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mNotifChannelIdToShortcutIdMap>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        $r5 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mPhoneNumberToShortcutIdMap>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

        r7 = specialinvoke r0.<com.android.server.people.data.ConversationStore: com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter getConversationInfosProtoDiskReadWriter()>();

     label2:
        if r7 == null goto label4;

     label3:
        virtualinvoke r7.<com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter: void deleteConversationsFile()>();

     label4:
        exitmonitor r0;

        return;

     label5:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    void restore(byte[])
    {
        com.android.server.people.data.ConversationStore r0;
        java.io.DataInputStream r1;
        java.io.ByteArrayInputStream r2;
        java.lang.Throwable $r3, $r5;
        java.lang.String $r4;
        byte[] r6, r7;
        int i1;
        com.android.server.people.data.ConversationInfo r8;

        r0 := @this: com.android.server.people.data.ConversationStore;

        r6 := @parameter0: byte[];

        entermonitor r0;

     label01:
        r1 = new java.io.DataInputStream;

        r2 = new java.io.ByteArrayInputStream;

        specialinvoke r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r6);

        specialinvoke r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2);

     label02:
        i1 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

     label03:
        if i1 == -1 goto label09;

     label04:
        r7 = newarray (byte)[i1];

        virtualinvoke r1.<java.io.DataInputStream: void readFully(byte[],int,int)>(r7, 0, i1);

        r8 = staticinvoke <com.android.server.people.data.ConversationInfo: com.android.server.people.data.ConversationInfo readFromBackupPayload(byte[])>(r7);

     label05:
        if r8 == null goto label07;

     label06:
        virtualinvoke r0.<com.android.server.people.data.ConversationStore: void addOrUpdate(com.android.server.people.data.ConversationInfo)>(r8);

     label07:
        i1 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

     label08:
        goto label03;

     label09:
        goto label12;

     label10:
        $r3 := @caughtexception;

     label11:
        $r4 = <com.android.server.people.data.ConversationStore: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Failed to read conversation info from payload.", $r3);

     label12:
        exitmonitor r0;

        return;

     label13:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.io.IOException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.io.IOException from label04 to label05 with label10;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.io.IOException from label07 to label08 with label10;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    void saveConversationsToDisk()
    {
        com.android.server.people.data.ConversationStore r0;
        com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter r1;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.lang.Throwable $r4;
        java.util.ArrayList r5;

        r0 := @this: com.android.server.people.data.ConversationStore;

        entermonitor r0;

     label1:
        r1 = specialinvoke r0.<com.android.server.people.data.ConversationStore: com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter getConversationInfosProtoDiskReadWriter()>();

     label2:
        if r1 == null goto label4;

     label3:
        r5 = new java.util.ArrayList;

        $r2 = r0.<com.android.server.people.data.ConversationStore: java.util.Map mConversationInfoMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        specialinvoke r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        virtualinvoke r1.<com.android.server.people.data.ConversationStore$ConversationInfosProtoDiskReadWriter: void saveConversationsImmediately(java.util.List)>(r5);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
