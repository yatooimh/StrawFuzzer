public class com.android.server.people.data.DataMaintenanceService extends android.app.job.JobService
{
    private static final int BASE_JOB_ID;
    private static final long JOB_RUN_INTERVAL;
    private android.os.CancellationSignal mSignal;

    static void <clinit>()
    {
        java.util.concurrent.TimeUnit $r0;
        long $l0;

        <com.android.server.people.data.DataMaintenanceService: int BASE_JOB_ID> = 204561367;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(24L);

        <com.android.server.people.data.DataMaintenanceService: long JOB_RUN_INTERVAL> = $l0;

        return;
    }

    public void <init>()
    {
        com.android.server.people.data.DataMaintenanceService r0;

        r0 := @this: com.android.server.people.data.DataMaintenanceService;

        specialinvoke r0.<android.app.job.JobService: void <init>()>();

        return;
    }

    static void cancelJob(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, $i1;
        java.lang.Object $r1;
        android.app.job.JobScheduler $r2;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/job/JobScheduler;");

        $r2 = (android.app.job.JobScheduler) $r1;

        $i1 = staticinvoke <com.android.server.people.data.DataMaintenanceService: int getJobId(int)>(i0);

        virtualinvoke $r2.<android.app.job.JobScheduler: void cancel(int)>($i1);

        return;
    }

    private static int getJobId(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = 204561367 + i0;

        return $i1;
    }

    private static int getUserId(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 - 204561367;

        return $i1;
    }

    static void scheduleJob(android.content.Context, int)
    {
        android.content.Context r0;
        android.app.job.JobScheduler r1;
        java.lang.Object $r2;
        android.app.job.JobInfo $r3, $r8;
        android.app.job.JobInfo$Builder $r4, $r6, $r7;
        android.content.ComponentName $r5;
        long $l0;
        int i2, i3;

        r0 := @parameter0: android.content.Context;

        i2 := @parameter1: int;

        i3 = staticinvoke <com.android.server.people.data.DataMaintenanceService: int getJobId(int)>(i2);

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/job/JobScheduler;");

        r1 = (android.app.job.JobScheduler) $r2;

        $r3 = virtualinvoke r1.<android.app.job.JobScheduler: android.app.job.JobInfo getPendingJob(int)>(i3);

        if $r3 != null goto label1;

        $r4 = new android.app.job.JobInfo$Builder;

        $r5 = new android.content.ComponentName;

        specialinvoke $r5.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/android/server/people/data/DataMaintenanceService;");

        specialinvoke $r4.<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>(i3, $r5);

        $r6 = virtualinvoke $r4.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresDeviceIdle(boolean)>(1);

        $l0 = <com.android.server.people.data.DataMaintenanceService: long JOB_RUN_INTERVAL>;

        $r7 = virtualinvoke $r6.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPeriodic(long)>($l0);

        $r8 = virtualinvoke $r7.<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>();

        virtualinvoke r1.<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>($r8);

     label1:
        return;
    }

    public void lambda$onStartJob$0$DataMaintenanceService(int, android.app.job.JobParameters)
    {
        com.android.server.people.data.DataMaintenanceService r0;
        int i0;
        android.app.job.JobParameters r1;
        java.lang.Object $r2;
        android.os.CancellationSignal $r3, $r5;
        com.android.server.people.PeopleServiceInternal $r4;
        boolean $z0;

        r0 := @this: com.android.server.people.data.DataMaintenanceService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.job.JobParameters;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/people/PeopleServiceInternal;");

        $r4 = (com.android.server.people.PeopleServiceInternal) $r2;

        $r3 = r0.<com.android.server.people.data.DataMaintenanceService: android.os.CancellationSignal mSignal>;

        virtualinvoke $r4.<com.android.server.people.PeopleServiceInternal: void pruneDataForUser(int,android.os.CancellationSignal)>(i0, $r3);

        $r5 = r0.<com.android.server.people.data.DataMaintenanceService: android.os.CancellationSignal mSignal>;

        $z0 = virtualinvoke $r5.<android.os.CancellationSignal: boolean isCanceled()>();

        virtualinvoke r0.<com.android.server.people.data.DataMaintenanceService: void jobFinished(android.app.job.JobParameters,boolean)>(r1, $z0);

        return;
    }

    public boolean onStartJob(android.app.job.JobParameters)
    {
        com.android.server.people.data.DataMaintenanceService r0;
        android.app.job.JobParameters r1;
        int i0, $i1;
        android.os.CancellationSignal $r2;
        java.lang.Thread $r3;
        com.android.server.people.data._$$Lambda$DataMaintenanceService$pZUzfdXzCXsv1D_xTvqArhV_TxI $r4;

        r0 := @this: com.android.server.people.data.DataMaintenanceService;

        r1 := @parameter0: android.app.job.JobParameters;

        $i1 = virtualinvoke r1.<android.app.job.JobParameters: int getJobId()>();

        i0 = staticinvoke <com.android.server.people.data.DataMaintenanceService: int getUserId(int)>($i1);

        $r2 = new android.os.CancellationSignal;

        specialinvoke $r2.<android.os.CancellationSignal: void <init>()>();

        r0.<com.android.server.people.data.DataMaintenanceService: android.os.CancellationSignal mSignal> = $r2;

        $r3 = new java.lang.Thread;

        $r4 = new com.android.server.people.data._$$Lambda$DataMaintenanceService$pZUzfdXzCXsv1D_xTvqArhV_TxI;

        specialinvoke $r4.<com.android.server.people.data._$$Lambda$DataMaintenanceService$pZUzfdXzCXsv1D_xTvqArhV_TxI: void <init>(com.android.server.people.data.DataMaintenanceService,int,android.app.job.JobParameters)>(r0, i0, r1);

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4);

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        return 1;
    }

    public boolean onStopJob(android.app.job.JobParameters)
    {
        com.android.server.people.data.DataMaintenanceService r0;
        android.app.job.JobParameters r1;
        android.os.CancellationSignal r2;

        r0 := @this: com.android.server.people.data.DataMaintenanceService;

        r1 := @parameter0: android.app.job.JobParameters;

        r2 = r0.<com.android.server.people.data.DataMaintenanceService: android.os.CancellationSignal mSignal>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.os.CancellationSignal: void cancel()>();

     label1:
        return 0;
    }
}
