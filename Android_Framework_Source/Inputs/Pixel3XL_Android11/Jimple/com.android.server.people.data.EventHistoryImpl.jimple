class com.android.server.people.data.EventHistoryImpl extends java.lang.Object implements com.android.server.people.data.EventHistory
{
    private static final java.lang.String EVENTS_DIR;
    private static final java.lang.String INDEXES_DIR;
    private static final long MAX_EVENTS_AGE;
    private static final long PRUNE_OLD_EVENTS_DELAY;
    private final android.util.SparseArray mEventIndexArray;
    private final com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter mEventIndexesProtoDiskReadWriter;
    private final com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter mEventsProtoDiskReadWriter;
    private final com.android.server.people.data.EventHistoryImpl$Injector mInjector;
    private long mLastPruneTime;
    private final com.android.server.people.data.EventList mRecentEvents;
    private final java.io.File mRootDir;
    private final java.util.concurrent.ScheduledExecutorService mScheduledExecutorService;

    void <init>(com.android.server.people.data.EventHistoryImpl$Injector, java.io.File, java.util.concurrent.ScheduledExecutorService)
    {
        com.android.server.people.data.EventHistoryImpl r0;
        com.android.server.people.data.EventHistoryImpl$Injector r1;
        java.io.File r2, $r7, $r8, $r11, $r12;
        java.util.concurrent.ScheduledExecutorService r3, $r9;
        android.util.SparseArray $r4;
        com.android.server.people.data.EventList $r5;
        long $l0;
        com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter $r6;
        com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter $r10;

        r0 := @this: com.android.server.people.data.EventHistoryImpl;

        r1 := @parameter0: com.android.server.people.data.EventHistoryImpl$Injector;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.util.concurrent.ScheduledExecutorService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.people.data.EventHistoryImpl: android.util.SparseArray mEventIndexArray> = $r4;

        $r5 = new com.android.server.people.data.EventList;

        specialinvoke $r5.<com.android.server.people.data.EventList: void <init>()>();

        r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventList mRecentEvents> = $r5;

        r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$Injector mInjector> = r1;

        r0.<com.android.server.people.data.EventHistoryImpl: java.util.concurrent.ScheduledExecutorService mScheduledExecutorService> = r3;

        $l0 = virtualinvoke r1.<com.android.server.people.data.EventHistoryImpl$Injector: long currentTimeMillis()>();

        r0.<com.android.server.people.data.EventHistoryImpl: long mLastPruneTime> = $l0;

        r0.<com.android.server.people.data.EventHistoryImpl: java.io.File mRootDir> = r2;

        $r6 = new com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter;

        $r7 = new java.io.File;

        $r8 = r0.<com.android.server.people.data.EventHistoryImpl: java.io.File mRootDir>;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, "events");

        $r9 = r0.<com.android.server.people.data.EventHistoryImpl: java.util.concurrent.ScheduledExecutorService mScheduledExecutorService>;

        specialinvoke $r6.<com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter: void <init>(java.io.File,java.util.concurrent.ScheduledExecutorService)>($r7, $r9);

        r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter mEventsProtoDiskReadWriter> = $r6;

        $r10 = new com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter;

        $r11 = new java.io.File;

        $r12 = r0.<com.android.server.people.data.EventHistoryImpl: java.io.File mRootDir>;

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, "indexes");

        specialinvoke $r10.<com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter: void <init>(java.io.File,java.util.concurrent.ScheduledExecutorService)>($r11, r3);

        r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter mEventIndexesProtoDiskReadWriter> = $r10;

        return;
    }

    void <init>(java.io.File, java.util.concurrent.ScheduledExecutorService)
    {
        com.android.server.people.data.EventHistoryImpl r0;
        java.io.File r1;
        java.util.concurrent.ScheduledExecutorService r2;
        com.android.server.people.data.EventHistoryImpl$Injector $r3;

        r0 := @this: com.android.server.people.data.EventHistoryImpl;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.util.concurrent.ScheduledExecutorService;

        $r3 = new com.android.server.people.data.EventHistoryImpl$Injector;

        specialinvoke $r3.<com.android.server.people.data.EventHistoryImpl$Injector: void <init>()>();

        specialinvoke r0.<com.android.server.people.data.EventHistoryImpl: void <init>(com.android.server.people.data.EventHistoryImpl$Injector,java.io.File,java.util.concurrent.ScheduledExecutorService)>($r3, r1, r2);

        return;
    }

    private void addEventInMemory(com.android.server.people.data.Event)
    {
        com.android.server.people.data.EventHistoryImpl r0;
        com.android.server.people.data.EventIndex r1, r9;
        android.util.SparseArray $r2, $r6;
        int $i0, $i2;
        java.lang.Object $r3;
        long $l1;
        com.android.server.people.data.EventList $r4;
        com.android.server.people.data.EventHistoryImpl$Injector $r5;
        java.lang.Throwable $r7;
        com.android.server.people.data.Event r8;

        r0 := @this: com.android.server.people.data.EventHistoryImpl;

        r8 := @parameter0: com.android.server.people.data.Event;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.people.data.EventHistoryImpl: android.util.SparseArray mEventIndexArray>;

        $i0 = virtualinvoke r8.<com.android.server.people.data.Event: int getType()>();

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r1 = (com.android.server.people.data.EventIndex) $r3;

     label2:
        r9 = r1;

        if r1 != null goto label4;

     label3:
        $r5 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$Injector mInjector>;

        r9 = virtualinvoke $r5.<com.android.server.people.data.EventHistoryImpl$Injector: com.android.server.people.data.EventIndex createEventIndex()>();

        $r6 = r0.<com.android.server.people.data.EventHistoryImpl: android.util.SparseArray mEventIndexArray>;

        $i2 = virtualinvoke r8.<com.android.server.people.data.Event: int getType()>();

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, r9);

     label4:
        $l1 = virtualinvoke r8.<com.android.server.people.data.Event: long getTimestamp()>();

        virtualinvoke r9.<com.android.server.people.data.EventIndex: void addEvent(long)>($l1);

        $r4 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventList mRecentEvents>;

        virtualinvoke $r4.<com.android.server.people.data.EventList: void add(com.android.server.people.data.Event)>(r8);

     label5:
        exitmonitor r0;

        return;

     label6:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    static java.util.Map eventHistoriesImplFromDisk(com.android.server.people.data.EventHistoryImpl$Injector, java.io.File, java.util.concurrent.ScheduledExecutorService)
    {
        com.android.server.people.data.EventHistoryImpl$Injector r0;
        java.util.concurrent.ScheduledExecutorService r1;
        java.io.File[] r3, r13;
        int i0, $i1, i2;
        com.android.server.people.data.'-$$Lambda$k1LMnpJLlrYtcSsQvSbPW-daMgg' $r5;
        com.android.server.people.data.'-$$Lambda$EventHistoryImpl$rFfD-2ROorI4gYAR7KD7YcJ5fUg' $r6;
        java.lang.String $r8, $r9;
        java.io.File r11, r12;
        android.util.ArrayMap r15;
        com.android.server.people.data.EventHistoryImpl r16;
        java.io.FileFilter r17;
        java.io.FilenameFilter r18;

        r0 := @parameter0: com.android.server.people.data.EventHistoryImpl$Injector;

        r11 := @parameter1: java.io.File;

        r1 := @parameter2: java.util.concurrent.ScheduledExecutorService;

        r15 = new android.util.ArrayMap;

        specialinvoke r15.<android.util.ArrayMap: void <init>()>();

        $r5 = <com.android.server.people.data._$$Lambda$k1LMnpJLlrYtcSsQvSbPW_daMgg: com.android.server.people.data.'-$$Lambda$k1LMnpJLlrYtcSsQvSbPW-daMgg' INSTANCE>;

        r17 = (java.io.FileFilter) $r5;

        r3 = virtualinvoke r11.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>(r17);

        if r3 != null goto label1;

        return r15;

     label1:
        i0 = lengthof r3;

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        r12 = r3[i2];

        $r6 = <com.android.server.people.data._$$Lambda$EventHistoryImpl$rFfD_2ROorI4gYAR7KD7YcJ5fUg: com.android.server.people.data.'-$$Lambda$EventHistoryImpl$rFfD-2ROorI4gYAR7KD7YcJ5fUg' INSTANCE>;

        r18 = (java.io.FilenameFilter) $r6;

        r13 = virtualinvoke r12.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>(r18);

        if r13 == null goto label3;

        $i1 = lengthof r13;

        if $i1 != 2 goto label3;

        r16 = new com.android.server.people.data.EventHistoryImpl;

        specialinvoke r16.<com.android.server.people.data.EventHistoryImpl: void <init>(com.android.server.people.data.EventHistoryImpl$Injector,java.io.File,java.util.concurrent.ScheduledExecutorService)>(r0, r12, r1);

        virtualinvoke r16.<com.android.server.people.data.EventHistoryImpl: void loadFromDisk()>();

        $r8 = virtualinvoke r12.<java.io.File: java.lang.String getName()>();

        $r9 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r8);

        interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r16);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return r15;
    }

    static java.util.Map eventHistoriesImplFromDisk(java.io.File, java.util.concurrent.ScheduledExecutorService)
    {
        java.io.File r0;
        java.util.concurrent.ScheduledExecutorService r1;
        com.android.server.people.data.EventHistoryImpl$Injector $r2;
        java.util.Map $r3;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.util.concurrent.ScheduledExecutorService;

        $r2 = new com.android.server.people.data.EventHistoryImpl$Injector;

        specialinvoke $r2.<com.android.server.people.data.EventHistoryImpl$Injector: void <init>()>();

        $r3 = staticinvoke <com.android.server.people.data.EventHistoryImpl: java.util.Map eventHistoriesImplFromDisk(com.android.server.people.data.EventHistoryImpl$Injector,java.io.File,java.util.concurrent.ScheduledExecutorService)>($r2, r0, r1);

        return $r3;
    }

    static boolean lambda$eventHistoriesImplFromDisk$0(java.io.File, java.lang.String)
    {
        java.io.File r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1, z2;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.lang.String;

        $r2 = "events";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r3 = "indexes";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    void addEvent(com.android.server.people.data.Event)
    {
        com.android.server.people.data.EventHistoryImpl r0;
        com.android.server.people.data.EventList $r1;
        com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter $r2;
        android.util.SparseArray $r3;
        com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter $r4;
        java.lang.Throwable $r5;
        com.android.server.people.data.Event r6;

        r0 := @this: com.android.server.people.data.EventHistoryImpl;

        r6 := @parameter0: com.android.server.people.data.Event;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.server.people.data.EventHistoryImpl: void pruneOldEvents()>();

        specialinvoke r0.<com.android.server.people.data.EventHistoryImpl: void addEventInMemory(com.android.server.people.data.Event)>(r6);

        $r2 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter mEventsProtoDiskReadWriter>;

        $r1 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventList mRecentEvents>;

        virtualinvoke $r2.<com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter: void scheduleEventsSave(com.android.server.people.data.EventList)>($r1);

        $r4 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter mEventIndexesProtoDiskReadWriter>;

        $r3 = r0.<com.android.server.people.data.EventHistoryImpl: android.util.SparseArray mEventIndexArray>;

        virtualinvoke $r4.<com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter: void scheduleIndexesSave(android.util.SparseArray)>($r3);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public com.android.server.people.data.EventIndex getEventIndex(int)
    {
        com.android.server.people.data.EventHistoryImpl r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        com.android.server.people.data.EventHistoryImpl$Injector $r3;
        com.android.server.people.data.EventIndex $r4, r6, r7;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.people.data.EventHistoryImpl;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.people.data.EventHistoryImpl: android.util.SparseArray mEventIndexArray>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (com.android.server.people.data.EventIndex) $r2;

     label2:
        if r6 == null goto label5;

     label3:
        $r4 = new com.android.server.people.data.EventIndex;

        specialinvoke $r4.<com.android.server.people.data.EventIndex: void <init>(com.android.server.people.data.EventIndex)>(r6);

        r7 = $r4;

     label4:
        goto label6;

     label5:
        $r3 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$Injector mInjector>;

        r7 = virtualinvoke $r3.<com.android.server.people.data.EventHistoryImpl$Injector: com.android.server.people.data.EventIndex createEventIndex()>();

     label6:
        exitmonitor r0;

        return r7;

     label7:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public com.android.server.people.data.EventIndex getEventIndex(java.util.Set)
    {
        com.android.server.people.data.EventHistoryImpl r0;
        java.util.Iterator r1;
        int i0;
        com.android.server.people.data.EventIndex r2, r10, r11;
        com.android.server.people.data.EventHistoryImpl$Injector $r3;
        boolean $z0;
        java.lang.Object $r4, $r7;
        java.lang.Integer $r5;
        android.util.SparseArray $r6;
        java.lang.Throwable $r8;
        java.util.Set r9;

        r0 := @this: com.android.server.people.data.EventHistoryImpl;

        r9 := @parameter0: java.util.Set;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$Injector mInjector>;

        r10 = virtualinvoke $r3.<com.android.server.people.data.EventHistoryImpl$Injector: com.android.server.people.data.EventIndex createEventIndex()>();

        r1 = interfaceinvoke r9.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Integer) $r4;

        i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $r6 = r0.<com.android.server.people.data.EventHistoryImpl: android.util.SparseArray mEventIndexArray>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.people.data.EventIndex) $r7;

     label3:
        r11 = r10;

        if r2 == null goto label5;

     label4:
        r11 = staticinvoke <com.android.server.people.data.EventIndex: com.android.server.people.data.EventIndex combine(com.android.server.people.data.EventIndex,com.android.server.people.data.EventIndex)>(r10, r2);

     label5:
        r10 = r11;

        goto label2;

     label6:
        exitmonitor r0;

        return r10;

     label7:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void lambda$loadFromDisk$1$EventHistoryImpl()
    {
        com.android.server.people.data.EventHistoryImpl r0;
        com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter $r1;
        com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter $r2;
        int $i0, $i1, i4;
        android.util.SparseArray $r3, r11;
        java.lang.Object $r4;
        com.android.server.people.data.EventIndex $r5;
        com.android.server.people.data.EventHistoryImpl$Injector $r6;
        long $l2, $l3;
        com.android.server.people.data.EventList $r7, r10;
        java.util.List $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.people.data.EventHistoryImpl;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter mEventsProtoDiskReadWriter>;

        r10 = virtualinvoke $r1.<com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter: com.android.server.people.data.EventList loadRecentEventsFromDisk()>();

     label02:
        if r10 == null goto label04;

     label03:
        $r6 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$Injector mInjector>;

        $l2 = virtualinvoke $r6.<com.android.server.people.data.EventHistoryImpl$Injector: long currentTimeMillis()>();

        $l3 = $l2 - 14400000L;

        virtualinvoke r10.<com.android.server.people.data.EventList: void removeOldEvents(long)>($l3);

        $r7 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventList mRecentEvents>;

        $r8 = virtualinvoke r10.<com.android.server.people.data.EventList: java.util.List getAllEvents()>();

        virtualinvoke $r7.<com.android.server.people.data.EventList: void addAll(java.util.List)>($r8);

     label04:
        $r2 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter mEventIndexesProtoDiskReadWriter>;

        r11 = virtualinvoke $r2.<com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter: android.util.SparseArray loadIndexesFromDisk()>();

     label05:
        if r11 == null goto label08;

        i4 = 0;

     label06:
        $i0 = virtualinvoke r11.<android.util.SparseArray: int size()>();

        if i4 >= $i0 goto label08;

        $r3 = r0.<com.android.server.people.data.EventHistoryImpl: android.util.SparseArray mEventIndexArray>;

        $i1 = virtualinvoke r11.<android.util.SparseArray: int keyAt(int)>(i4);

        $r4 = virtualinvoke r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r5 = (com.android.server.people.data.EventIndex) $r4;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, $r5);

     label07:
        i4 = i4 + 1;

        goto label06;

     label08:
        exitmonitor r0;

     label09:
        return;

     label10:
        $r9 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void loadFromDisk()
    {
        com.android.server.people.data.EventHistoryImpl r0;
        com.android.server.people.data._$$Lambda$EventHistoryImpl$YDpe35eL4N0P69OowfcOM7MovRs r1;
        java.lang.Throwable $r2;
        java.util.concurrent.ScheduledExecutorService r3;

        r0 := @this: com.android.server.people.data.EventHistoryImpl;

        entermonitor r0;

     label1:
        r3 = r0.<com.android.server.people.data.EventHistoryImpl: java.util.concurrent.ScheduledExecutorService mScheduledExecutorService>;

        r1 = new com.android.server.people.data._$$Lambda$EventHistoryImpl$YDpe35eL4N0P69OowfcOM7MovRs;

        specialinvoke r1.<com.android.server.people.data._$$Lambda$EventHistoryImpl$YDpe35eL4N0P69OowfcOM7MovRs: void <init>(com.android.server.people.data.EventHistoryImpl)>(r0);

        interfaceinvoke r3.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>(r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void onDestroy()
    {
        com.android.server.people.data.EventHistoryImpl r0;
        android.util.SparseArray $r2;
        com.android.server.people.data.EventList $r3;
        com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter $r4;
        com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter $r5;
        java.io.File $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.people.data.EventHistoryImpl;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.people.data.EventHistoryImpl: android.util.SparseArray mEventIndexArray>;

        virtualinvoke $r2.<android.util.SparseArray: void clear()>();

        $r3 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventList mRecentEvents>;

        virtualinvoke $r3.<com.android.server.people.data.EventList: void clear()>();

        $r4 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter mEventsProtoDiskReadWriter>;

        virtualinvoke $r4.<com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter: void deleteRecentEventsFile()>();

        $r5 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter mEventIndexesProtoDiskReadWriter>;

        virtualinvoke $r5.<com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter: void deleteIndexesFile()>();

        $r6 = r0.<com.android.server.people.data.EventHistoryImpl: java.io.File mRootDir>;

        staticinvoke <android.os.FileUtils: boolean deleteContentsAndDir(java.io.File)>($r6);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void pruneOldEvents()
    {
        com.android.server.people.data.EventHistoryImpl r0;
        long l0, $l1, $l2, $l4;
        com.android.server.people.data.EventHistoryImpl$Injector $r2;
        byte $b3;
        com.android.server.people.data.EventList $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.people.data.EventHistoryImpl;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$Injector mInjector>;

        l0 = virtualinvoke $r2.<com.android.server.people.data.EventHistoryImpl$Injector: long currentTimeMillis()>();

        $l1 = r0.<com.android.server.people.data.EventHistoryImpl: long mLastPruneTime>;

        $l2 = l0 - $l1;

        $b3 = $l2 cmp 900000L;

        if $b3 <= 0 goto label2;

        $r3 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventList mRecentEvents>;

        $l4 = l0 - 14400000L;

        virtualinvoke $r3.<com.android.server.people.data.EventList: void removeOldEvents(long)>($l4);

        r0.<com.android.server.people.data.EventHistoryImpl: long mLastPruneTime> = l0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.List queryEvents(java.util.Set, long, long)
    {
        com.android.server.people.data.EventHistoryImpl r0;
        long l0, l1;
        com.android.server.people.data.EventList $r1;
        java.lang.Throwable $r2;
        java.util.Set r3;
        java.util.List r4;

        r0 := @this: com.android.server.people.data.EventHistoryImpl;

        r3 := @parameter0: java.util.Set;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventList mRecentEvents>;

        r4 = virtualinvoke $r1.<com.android.server.people.data.EventList: java.util.List queryEvents(java.util.Set,long,long)>(r3, l0, l1);

     label2:
        exitmonitor r0;

        return r4;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void saveToDisk()
    {
        com.android.server.people.data.EventHistoryImpl r0;
        com.android.server.people.data.EventList $r2;
        com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter $r3;
        android.util.SparseArray $r4;
        com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.people.data.EventHistoryImpl;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter mEventsProtoDiskReadWriter>;

        $r2 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventList mRecentEvents>;

        virtualinvoke $r3.<com.android.server.people.data.EventHistoryImpl$EventsProtoDiskReadWriter: void saveEventsImmediately(com.android.server.people.data.EventList)>($r2);

        $r5 = r0.<com.android.server.people.data.EventHistoryImpl: com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter mEventIndexesProtoDiskReadWriter>;

        $r4 = r0.<com.android.server.people.data.EventHistoryImpl: android.util.SparseArray mEventIndexArray>;

        virtualinvoke $r5.<com.android.server.people.data.EventHistoryImpl$EventIndexesProtoDiskReadWriter: void saveIndexesImmediately(android.util.SparseArray)>($r4);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.people.data.EventHistoryImpl: long PRUNE_OLD_EVENTS_DELAY> = 900000L;

        <com.android.server.people.data.EventHistoryImpl: long MAX_EVENTS_AGE> = 14400000L;

        <com.android.server.people.data.EventHistoryImpl: java.lang.String INDEXES_DIR> = "indexes";

        <com.android.server.people.data.EventHistoryImpl: java.lang.String EVENTS_DIR> = "events";

        return;
    }
}
