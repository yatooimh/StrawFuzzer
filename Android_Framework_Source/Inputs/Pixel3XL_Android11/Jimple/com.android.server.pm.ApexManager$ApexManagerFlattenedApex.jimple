final class com.android.server.pm.ApexManager$ApexManagerFlattenedApex extends com.android.server.pm.ApexManager
{

    private void <init>()
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        specialinvoke r0.<com.android.server.pm.ApexManager: void <init>()>();

        return;
    }

    void <init>(com.android.server.pm.ApexManager$1)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        com.android.server.pm.ApexManager$1 r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        r1 := @parameter0: com.android.server.pm.ApexManager$1;

        specialinvoke r0.<com.android.server.pm.ApexManager$ApexManagerFlattenedApex: void <init>()>();

        return;
    }

    boolean abortStagedSession(int) throws com.android.server.pm.PackageManagerException
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public boolean destroyCeSnapshotsNotSpecified(int, int[])
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        int i0;
        int[] r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        return 1;
    }

    public boolean destroyDeSnapshots(int)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        java.io.PrintWriter r1;
        java.lang.String r2;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public java.util.List getActiveApexInfos()
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        java.lang.String[] r2;
        java.io.File[] r3;
        int i0, i1, i2, i3;
        java.lang.String r4, $r6, $r9;
        java.util.ArrayList $r5;
        boolean $z0, $z1, $z2, $z4;
        com.android.server.pm.ApexManager$ActiveApexInfo $r7;
        java.io.File $r8, r10, r11;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r10 = staticinvoke <android.os.Environment: java.io.File getApexDirectory()>();

        r2 = newarray (java.lang.String)[2];

        r2[0] = "com.android.art.release";

        r2[1] = "com.android.art.debug";

        $z0 = virtualinvoke r10.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label6;

        r3 = virtualinvoke r10.<java.io.File: java.io.File[] listFiles()>();

        if r3 == null goto label6;

        i0 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

        r11 = r3[i2];

        $z1 = virtualinvoke r11.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label5;

        $r6 = virtualinvoke r11.<java.io.File: java.lang.String getName()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("@");

        if $z2 != 0 goto label5;

        i1 = lengthof r2;

        i3 = 0;

     label2:
        if i3 >= i1 goto label4;

        r4 = r2[i3];

        $r9 = virtualinvoke r11.<java.io.File: java.lang.String getName()>();

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 == 0 goto label3;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $r7 = new com.android.server.pm.ApexManager$ActiveApexInfo;

        $r8 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r7.<com.android.server.pm.ApexManager$ActiveApexInfo: void <init>(java.io.File,java.io.File,com.android.server.pm.ApexManager$1)>(r11, $r8, null);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return $r5;
    }

    public java.lang.String getActiveApexPackageNameContainingPackage(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        com.android.server.pm.parsing.pkg.AndroidPackage r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        r1 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        return null;
    }

    java.util.List getActivePackages()
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        java.util.List $r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r1;
    }

    public java.lang.String getApexModuleNameForPackageName(java.lang.String)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    java.util.List getApksInApex(java.lang.String)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        java.lang.String r1;
        java.util.List $r2;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;
    }

    java.util.List getFactoryPackages()
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        java.util.List $r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r1;
    }

    java.util.List getInactivePackages()
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        java.util.List $r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r1;
    }

    public android.content.pm.PackageInfo getPackageInfo(java.lang.String, int)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return null;
    }

    android.apex.ApexSessionInfo getStagedSessionInfo(int)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    boolean isApexPackage(java.lang.String)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    boolean isApexSupported()
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        return 0;
    }

    boolean isApkInApexInstallSuccess(java.lang.String)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        r1 := @parameter0: java.lang.String;

        return 1;
    }

    void markStagedSessionReady(int)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    void markStagedSessionSuccessful(int)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    void registerApkInApex(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        com.android.server.pm.parsing.pkg.AndroidPackage r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        r1 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        return;
    }

    void reportErrorWithApkInApex(java.lang.String)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public boolean restoreCeData(int, int, java.lang.String)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        int i0, i1;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    boolean revertActiveSessions()
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    void scanApexPackagesTraced(com.android.server.pm.parsing.PackageParser2, java.util.concurrent.ExecutorService)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        com.android.server.pm.parsing.PackageParser2 r1;
        java.util.concurrent.ExecutorService r2;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        r1 := @parameter0: com.android.server.pm.parsing.PackageParser2;

        r2 := @parameter1: java.util.concurrent.ExecutorService;

        return;
    }

    public long snapshotCeData(int, int, java.lang.String)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        int i0, i1;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    android.apex.ApexInfoList submitStagedSession(android.apex.ApexSessionParams) throws com.android.server.pm.PackageManagerException
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        android.apex.ApexSessionParams r1;
        com.android.server.pm.PackageManagerException $r2;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        r1 := @parameter0: android.apex.ApexSessionParams;

        $r2 = new com.android.server.pm.PackageManagerException;

        specialinvoke $r2.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-110, "Device doesn\'t support updating APEX");

        throw $r2;
    }

    boolean uninstallApex(java.lang.String)
    {
        com.android.server.pm.ApexManager$ApexManagerFlattenedApex r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.server.pm.ApexManager$ApexManagerFlattenedApex;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }
}
