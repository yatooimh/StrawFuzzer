class com.android.server.pm.AppsFilter$FeatureConfigImpl extends java.lang.Object implements com.android.server.pm.AppsFilter$FeatureConfig, com.android.server.compat.CompatChange$ChangeListener
{
    private static final java.lang.String FILTERING_ENABLED_NAME;
    private com.android.server.pm.AppsFilter mAppsFilter;
    private final android.util.ArraySet mDisabledPackages;
    private volatile boolean mFeatureEnabled;
    private final com.android.server.pm.PackageManagerService$Injector mInjector;
    private android.util.SparseBooleanArray mLoggingEnabled;
    private final android.content.pm.PackageManagerInternal mPmInternal;

    private void <init>(android.content.pm.PackageManagerInternal, com.android.server.pm.PackageManagerService$Injector)
    {
        com.android.server.pm.AppsFilter$FeatureConfigImpl r0;
        android.content.pm.PackageManagerInternal r1;
        com.android.server.pm.PackageManagerService$Injector r2;
        android.util.ArraySet $r3;

        r0 := @this: com.android.server.pm.AppsFilter$FeatureConfigImpl;

        r1 := @parameter0: android.content.pm.PackageManagerInternal;

        r2 := @parameter1: com.android.server.pm.PackageManagerService$Injector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: boolean mFeatureEnabled> = 1;

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.ArraySet mDisabledPackages> = $r3;

        r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.SparseBooleanArray mLoggingEnabled> = null;

        r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.content.pm.PackageManagerInternal mPmInternal> = r1;

        r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: com.android.server.pm.PackageManagerService$Injector mInjector> = r2;

        return;
    }

    void <init>(android.content.pm.PackageManagerInternal, com.android.server.pm.PackageManagerService$Injector, com.android.server.pm.AppsFilter$1)
    {
        com.android.server.pm.AppsFilter$FeatureConfigImpl r0;
        android.content.pm.PackageManagerInternal r1;
        com.android.server.pm.PackageManagerService$Injector r2;
        com.android.server.pm.AppsFilter$1 r3;

        r0 := @this: com.android.server.pm.AppsFilter$FeatureConfigImpl;

        r1 := @parameter0: android.content.pm.PackageManagerInternal;

        r2 := @parameter1: com.android.server.pm.PackageManagerService$Injector;

        r3 := @parameter2: com.android.server.pm.AppsFilter$1;

        specialinvoke r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: void <init>(android.content.pm.PackageManagerInternal,com.android.server.pm.PackageManagerService$Injector)>(r1, r2);

        return;
    }

    private void updateEnabledState(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.AppsFilter$FeatureConfigImpl r0;
        com.android.server.pm.parsing.pkg.AndroidPackage r1;
        com.android.server.pm.PackageManagerService$Injector $r2;
        com.android.server.compat.PlatformCompat $r3;
        android.content.pm.ApplicationInfo $r4;
        boolean $z0;
        android.util.ArraySet $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: com.android.server.pm.AppsFilter$FeatureConfigImpl;

        r1 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        $r2 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: com.android.server.pm.PackageManagerService$Injector mInjector>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector: com.android.server.compat.PlatformCompat getCompatibility()>();

        $r4 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: android.content.pm.ApplicationInfo toAppInfoWithoutState()>();

        $z0 = virtualinvoke $r3.<com.android.server.compat.PlatformCompat: boolean isChangeEnabledInternal(long,android.content.pm.ApplicationInfo)>(135549675L, $r4);

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.ArraySet mDisabledPackages>;

        $r8 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        virtualinvoke $r7.<android.util.ArraySet: boolean remove(java.lang.Object)>($r8);

        goto label2;

     label1:
        $r5 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.ArraySet mDisabledPackages>;

        $r6 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        virtualinvoke $r5.<android.util.ArraySet: boolean add(java.lang.Object)>($r6);

     label2:
        return;
    }

    public void enableLogging(int, boolean)
    {
        com.android.server.pm.AppsFilter$FeatureConfigImpl r0;
        boolean z0;
        android.util.SparseBooleanArray r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, i1, i2;

        r0 := @this: com.android.server.pm.AppsFilter$FeatureConfigImpl;

        i1 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        $r4 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.SparseBooleanArray mLoggingEnabled>;

        if $r4 != null goto label1;

        $r6 = new android.util.SparseBooleanArray;

        specialinvoke $r6.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.SparseBooleanArray mLoggingEnabled> = $r6;

     label1:
        $r5 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.SparseBooleanArray mLoggingEnabled>;

        virtualinvoke $r5.<android.util.SparseBooleanArray: void put(int,boolean)>(i1, 1);

        goto label3;

     label2:
        r1 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.SparseBooleanArray mLoggingEnabled>;

        if r1 == null goto label3;

        i2 = virtualinvoke r1.<android.util.SparseBooleanArray: int indexOfKey(int)>(i1);

        if i2 < 0 goto label3;

        $r2 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.SparseBooleanArray mLoggingEnabled>;

        virtualinvoke $r2.<android.util.SparseBooleanArray: void removeAt(int)>(i2);

        $r3 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.SparseBooleanArray mLoggingEnabled>;

        $i0 = virtualinvoke $r3.<android.util.SparseBooleanArray: int size()>();

        if $i0 != 0 goto label3;

        r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.SparseBooleanArray mLoggingEnabled> = null;

     label3:
        return;
    }

    public boolean isGloballyEnabled()
    {
        com.android.server.pm.AppsFilter$FeatureConfigImpl r0;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.pm.AppsFilter$FeatureConfigImpl;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, "isGloballyEnabled");

     label1:
        z0 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: boolean mFeatureEnabled>;

     label2:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        return z0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isLoggingEnabled(int)
    {
        com.android.server.pm.AppsFilter$FeatureConfigImpl r0;
        int i0, $i1;
        android.util.SparseBooleanArray r1;
        boolean z0;

        r0 := @this: com.android.server.pm.AppsFilter$FeatureConfigImpl;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.SparseBooleanArray mLoggingEnabled>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.util.SparseBooleanArray: int indexOfKey(int)>(i0);

        if $i1 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void lambda$onSystemReady$0$AppsFilter$FeatureConfigImpl(android.provider.DeviceConfig$Properties)
    {
        com.android.server.pm.AppsFilter$FeatureConfigImpl r0;
        java.util.Set $r1;
        boolean $z0, $z1;
        java.lang.Throwable $r2;
        android.provider.DeviceConfig$Properties r3;

        r0 := @this: com.android.server.pm.AppsFilter$FeatureConfigImpl;

        r3 := @parameter0: android.provider.DeviceConfig$Properties;

        $r1 = virtualinvoke r3.<android.provider.DeviceConfig$Properties: java.util.Set getKeyset()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>("package_query_filtering_enabled");

        if $z0 == 0 goto label6;

        entermonitor r0;

     label1:
        $z1 = virtualinvoke r3.<android.provider.DeviceConfig$Properties: boolean getBoolean(java.lang.String,boolean)>("package_query_filtering_enabled", 1);

        r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: boolean mFeatureEnabled> = $z1;

        exitmonitor r0;

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onCompatChange(java.lang.String)
    {
        com.android.server.pm.AppsFilter$FeatureConfigImpl r0;
        java.lang.String r1;
        com.android.server.pm.parsing.pkg.AndroidPackage r2;
        android.content.pm.PackageManagerInternal $r3;
        com.android.server.pm.AppsFilter $r4;

        r0 := @this: com.android.server.pm.AppsFilter$FeatureConfigImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.content.pm.PackageManagerInternal mPmInternal>;

        r2 = virtualinvoke $r3.<android.content.pm.PackageManagerInternal: com.android.server.pm.parsing.pkg.AndroidPackage getPackage(java.lang.String)>(r1);

        if r2 != null goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: void updateEnabledState(com.android.server.pm.parsing.pkg.AndroidPackage)>(r2);

        $r4 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: com.android.server.pm.AppsFilter mAppsFilter>;

        staticinvoke <com.android.server.pm.AppsFilter: void access$000(com.android.server.pm.AppsFilter,java.lang.String)>($r4, r1);

        return;
    }

    public void onSystemReady()
    {
        com.android.server.pm.AppsFilter$FeatureConfigImpl r0;
        boolean $z0;
        java.util.concurrent.Executor $r1;
        com.android.server.pm._$$Lambda$AppsFilter$FeatureConfigImpl$n15whgPRX7bGimHq6_7mgAskIKs $r2;
        com.android.server.pm.PackageManagerService$Injector $r3;
        com.android.server.compat.PlatformCompat $r4;

        r0 := @this: com.android.server.pm.AppsFilter$FeatureConfigImpl;

        $z0 = staticinvoke <android.provider.DeviceConfig: boolean getBoolean(java.lang.String,java.lang.String,boolean)>("package_manager_service", "package_query_filtering_enabled", 1);

        r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: boolean mFeatureEnabled> = $z0;

        $r1 = staticinvoke <com.android.server.FgThread: java.util.concurrent.Executor getExecutor()>();

        $r2 = new com.android.server.pm._$$Lambda$AppsFilter$FeatureConfigImpl$n15whgPRX7bGimHq6_7mgAskIKs;

        specialinvoke $r2.<com.android.server.pm._$$Lambda$AppsFilter$FeatureConfigImpl$n15whgPRX7bGimHq6_7mgAskIKs: void <init>(com.android.server.pm.AppsFilter$FeatureConfigImpl)>(r0);

        staticinvoke <android.provider.DeviceConfig: void addOnPropertiesChangedListener(java.lang.String,java.util.concurrent.Executor,android.provider.DeviceConfig$OnPropertiesChangedListener)>("package_manager_service", $r1, $r2);

        $r3 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: com.android.server.pm.PackageManagerService$Injector mInjector>;

        $r4 = virtualinvoke $r3.<com.android.server.pm.PackageManagerService$Injector: com.android.server.compat.PlatformCompat getCompatibility()>();

        virtualinvoke $r4.<com.android.server.compat.PlatformCompat: boolean registerListener(long,com.android.server.compat.CompatChange$ChangeListener)>(135549675L, r0);

        return;
    }

    public boolean packageIsEnabled(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.AppsFilter$FeatureConfigImpl r0;
        boolean z0, $z1;
        android.util.ArraySet $r1;
        java.lang.String $r2;
        java.lang.Throwable $r3;
        com.android.server.pm.parsing.pkg.AndroidPackage r4;

        r0 := @this: com.android.server.pm.AppsFilter$FeatureConfigImpl;

        r4 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, "packageIsEnabled");

     label1:
        $r1 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.ArraySet mDisabledPackages>;

        $r2 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        z0 = virtualinvoke $r1.<android.util.ArraySet: boolean contains(java.lang.Object)>($r2);

     label2:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        $z1 = z0 ^ 1;

        return $z1;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setAppsFilter(com.android.server.pm.AppsFilter)
    {
        com.android.server.pm.AppsFilter$FeatureConfigImpl r0;
        com.android.server.pm.AppsFilter r1;

        r0 := @this: com.android.server.pm.AppsFilter$FeatureConfigImpl;

        r1 := @parameter0: com.android.server.pm.AppsFilter;

        r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: com.android.server.pm.AppsFilter mAppsFilter> = r1;

        return;
    }

    public void updatePackageState(com.android.server.pm.PackageSetting, boolean)
    {
        com.android.server.pm.AppsFilter$FeatureConfigImpl r0;
        com.android.server.pm.PackageSetting r1;
        boolean z0, $z2, $z3, z4;
        com.android.server.pm.parsing.pkg.AndroidPackage $r2, $r3, $r4, $r7, $r8;
        java.lang.String $r5;
        android.util.ArraySet $r6;
        int $i0;

        r0 := @this: com.android.server.pm.AppsFilter$FeatureConfigImpl;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        z0 := @parameter1: boolean;

        $r2 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        if $r2 == null goto label2;

        if z0 != 0 goto label2;

        $r7 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $z2 = interfaceinvoke $r7.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isTestOnly()>();

        if $z2 != 0 goto label1;

        $r8 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $z3 = interfaceinvoke $r8.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isDebuggable()>();

        if $z3 == 0 goto label2;

     label1:
        z4 = 1;

        goto label3;

     label2:
        z4 = 0;

     label3:
        $i0 = r1.<com.android.server.pm.PackageSetting: int appId>;

        virtualinvoke r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: void enableLogging(int,boolean)>($i0, z4);

        if z0 == 0 goto label4;

        $r6 = r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: android.util.ArraySet mDisabledPackages>;

        $r5 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r6.<android.util.ArraySet: boolean remove(java.lang.Object)>($r5);

        goto label5;

     label4:
        $r3 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        if $r3 == null goto label5;

        $r4 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        specialinvoke r0.<com.android.server.pm.AppsFilter$FeatureConfigImpl: void updateEnabledState(com.android.server.pm.parsing.pkg.AndroidPackage)>($r4);

     label5:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.AppsFilter$FeatureConfigImpl: java.lang.String FILTERING_ENABLED_NAME> = "package_query_filtering_enabled";

        return;
    }
}
