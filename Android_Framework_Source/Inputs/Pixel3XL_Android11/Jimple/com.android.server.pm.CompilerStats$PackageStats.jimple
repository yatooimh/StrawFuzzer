class com.android.server.pm.CompilerStats$PackageStats extends java.lang.Object
{
    private final java.util.Map compileTimePerCodePath;
    private final java.lang.String packageName;

    public void <init>(java.lang.String)
    {
        com.android.server.pm.CompilerStats$PackageStats r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;

        r0 := @this: com.android.server.pm.CompilerStats$PackageStats;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.CompilerStats$PackageStats: java.lang.String packageName> = r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>(int)>(2);

        r0.<com.android.server.pm.CompilerStats$PackageStats: java.util.Map compileTimePerCodePath> = $r2;

        return;
    }

    static java.util.Map access$000(com.android.server.pm.CompilerStats$PackageStats)
    {
        com.android.server.pm.CompilerStats$PackageStats r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.server.pm.CompilerStats$PackageStats;

        $r1 = r0.<com.android.server.pm.CompilerStats$PackageStats: java.util.Map compileTimePerCodePath>;

        return $r1;
    }

    private static java.lang.String getStoredPathFromCodePath(java.lang.String)
    {
        java.lang.String r0, $r1;
        char $c0;
        int $i1, $i2;

        r0 := @parameter0: java.lang.String;

        $c0 = <java.io.File: char separatorChar>;

        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>($c0);

        $i2 = $i1 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        return $r1;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.pm.CompilerStats$PackageStats r0;
        java.util.Map r1, $r5, $r6;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.StringBuilder r4;
        int $i0;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r8, $r10, $r14;
        java.lang.String $r11, $r16;
        java.lang.Throwable $r17;
        com.android.internal.util.IndentingPrintWriter r18;

        r0 := @this: com.android.server.pm.CompilerStats$PackageStats;

        r18 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r1 = r0.<com.android.server.pm.CompilerStats$PackageStats: java.util.Map compileTimePerCodePath>;

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.pm.CompilerStats$PackageStats: java.util.Map compileTimePerCodePath>;

        $i0 = interfaceinvoke $r5.<java.util.Map: int size()>();

        if $i0 != 0 goto label03;

        virtualinvoke r18.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("(No recorded stats)");

     label02:
        goto label06;

     label03:
        $r6 = r0.<com.android.server.pm.CompilerStats$PackageStats: java.util.Map compileTimePerCodePath>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r8;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.String) $r10;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r18.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r16);

     label05:
        goto label04;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r17 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public long getCompileTime(java.lang.String)
    {
        com.android.server.pm.CompilerStats$PackageStats r0;
        long l0;
        java.util.Map $r1, r6;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        java.lang.String r4, r5;
        java.lang.Long r7;

        r0 := @this: com.android.server.pm.CompilerStats$PackageStats;

        r4 := @parameter0: java.lang.String;

        r5 = staticinvoke <com.android.server.pm.CompilerStats$PackageStats: java.lang.String getStoredPathFromCodePath(java.lang.String)>(r4);

        r6 = r0.<com.android.server.pm.CompilerStats$PackageStats: java.util.Map compileTimePerCodePath>;

        entermonitor r6;

     label1:
        $r1 = r0.<com.android.server.pm.CompilerStats$PackageStats: java.util.Map compileTimePerCodePath>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (java.lang.Long) $r2;

     label2:
        if r7 != null goto label5;

     label3:
        exitmonitor r6;

     label4:
        return 0L;

     label5:
        l0 = virtualinvoke r7.<java.lang.Long: long longValue()>();

        exitmonitor r6;

     label6:
        return l0;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r6;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.lang.String getPackageName()
    {
        com.android.server.pm.CompilerStats$PackageStats r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.pm.CompilerStats$PackageStats;

        $r1 = r0.<com.android.server.pm.CompilerStats$PackageStats: java.lang.String packageName>;

        return $r1;
    }

    public void setCompileTime(java.lang.String, long)
    {
        com.android.server.pm.CompilerStats$PackageStats r0;
        long l0;
        byte $b1;
        java.util.Map $r1, $r4, r9;
        java.lang.Long $r2;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.server.pm.CompilerStats$PackageStats;

        r7 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r8 = staticinvoke <com.android.server.pm.CompilerStats$PackageStats: java.lang.String getStoredPathFromCodePath(java.lang.String)>(r7);

        r9 = r0.<com.android.server.pm.CompilerStats$PackageStats: java.util.Map compileTimePerCodePath>;

        entermonitor r9;

        $b1 = l0 cmp 0L;

        if $b1 > 0 goto label3;

     label1:
        $r4 = r0.<com.android.server.pm.CompilerStats$PackageStats: java.util.Map compileTimePerCodePath>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r8);

     label2:
        goto label4;

     label3:
        $r1 = r0.<com.android.server.pm.CompilerStats$PackageStats: java.util.Map compileTimePerCodePath>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r2);

     label4:
        exitmonitor r9;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r9;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
