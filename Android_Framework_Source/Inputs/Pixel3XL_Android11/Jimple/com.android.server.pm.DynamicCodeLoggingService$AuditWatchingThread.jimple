class com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread extends java.lang.Thread
{
    private final android.app.job.JobParameters mParams;
    final com.android.server.pm.DynamicCodeLoggingService this$0;

    void <init>(com.android.server.pm.DynamicCodeLoggingService, android.app.job.JobParameters)
    {
        com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread r0;
        com.android.server.pm.DynamicCodeLoggingService r1;
        android.app.job.JobParameters r2;

        r0 := @this: com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread;

        r1 := @parameter0: com.android.server.pm.DynamicCodeLoggingService;

        r2 := @parameter1: android.app.job.JobParameters;

        r0.<com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread: com.android.server.pm.DynamicCodeLoggingService this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("DynamicCodeLoggingService_AuditWatchingJob");

        r0.<com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread: android.app.job.JobParameters mParams> = r2;

        return;
    }

    private boolean processAuditEvents()
    {
        com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread r0;
        com.android.server.pm.dex.DynamicCodeLogger r1;
        java.util.ArrayList r2;
        int i0, $i1, $i2, $i3, i6;
        java.util.regex.Matcher r3;
        java.lang.String r4, $r8, $r9, $r11, r15, r16;
        com.android.server.pm.DynamicCodeLoggingService $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r6, r14;
        java.util.regex.Pattern $r7;
        java.lang.Exception $r10;
        int[] r12;
        android.util.EventLog$Event r13;

        r0 := @this: com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread;

     label01:
        r12 = newarray (int)[1];

        $i1 = staticinvoke <android.util.EventLog: int getTagCode(java.lang.String)>("auditd");

        r12[0] = $i1;

     label02:
        $i2 = r12[0];

        if $i2 != -1 goto label03;

        return 1;

     label03:
        r1 = staticinvoke <com.android.server.pm.DynamicCodeLoggingService: com.android.server.pm.dex.DynamicCodeLogger access$000()>();

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        staticinvoke <android.util.EventLog: void readEvents(int[],java.util.Collection)>(r12, r2);

     label04:
        i6 = 0;

     label05:
        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        if i6 >= $i3 goto label20;

        $r5 = r0.<com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread: com.android.server.pm.DynamicCodeLoggingService this$0>;

        $z0 = staticinvoke <com.android.server.pm.DynamicCodeLoggingService: boolean access$300(com.android.server.pm.DynamicCodeLoggingService)>($r5);

        if $z0 == 0 goto label07;

        $r9 = staticinvoke <com.android.server.pm.DynamicCodeLoggingService: java.lang.String access$200()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r9, "Stopping AuditWatchingJob run at scheduler request");

     label06:
        return 0;

     label07:
        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i6);

        r13 = (android.util.EventLog$Event) $r6;

        i0 = virtualinvoke r13.<android.util.EventLog$Event: int getUid()>();

        $z1 = staticinvoke <android.os.Process: boolean isApplicationUid(int)>(i0);

        if $z1 != 0 goto label09;

     label08:
        goto label19;

     label09:
        r14 = virtualinvoke r13.<android.util.EventLog$Event: java.lang.Object getData()>();

        $z2 = r14 instanceof java.lang.String;

        if $z2 != 0 goto label11;

     label10:
        goto label19;

     label11:
        r15 = (java.lang.String) r14;

        $z3 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>("type=1400 ");

        if $z3 != 0 goto label13;

     label12:
        goto label19;

     label13:
        $r7 = staticinvoke <com.android.server.pm.DynamicCodeLoggingService: java.util.regex.Pattern access$400()>();

        r3 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r15);

        $z4 = virtualinvoke r3.<java.util.regex.Matcher: boolean matches()>();

        if $z4 != 0 goto label15;

     label14:
        goto label19;

     label15:
        r4 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

     label16:
        r16 = r4;

        if r4 != null goto label18;

     label17:
        $r8 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        r16 = staticinvoke <com.android.server.pm.DynamicCodeLoggingService: java.lang.String access$500(java.lang.String)>($r8);

     label18:
        virtualinvoke r1.<com.android.server.pm.dex.DynamicCodeLogger: void recordNative(int,java.lang.String)>(i0, r16);

     label19:
        i6 = i6 + 1;

        goto label05;

     label20:
        return 1;

     label21:
        $r10 := @caughtexception;

        $r11 = staticinvoke <com.android.server.pm.DynamicCodeLoggingService: java.lang.String access$200()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r11, "AuditWatchingJob failed", $r10);

        return 1;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label09 to label10 with label21;
        catch java.lang.Exception from label11 to label12 with label21;
        catch java.lang.Exception from label13 to label14 with label21;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Exception from label17 to label18 with label21;
        catch java.lang.Exception from label18 to label19 with label21;
    }

    public void run()
    {
        com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread r0;
        boolean $z0;
        android.app.job.JobParameters $r1;
        com.android.server.pm.DynamicCodeLoggingService $r2;

        r0 := @this: com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread;

        $z0 = specialinvoke r0.<com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread: boolean processAuditEvents()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread: com.android.server.pm.DynamicCodeLoggingService this$0>;

        $r1 = r0.<com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread: android.app.job.JobParameters mParams>;

        virtualinvoke $r2.<com.android.server.pm.DynamicCodeLoggingService: void jobFinished(android.app.job.JobParameters,boolean)>($r1, 0);

     label1:
        return;
    }
}
