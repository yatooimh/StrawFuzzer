public class com.android.server.pm.DynamicCodeLoggingService extends android.app.job.JobService
{
    private static final int AUDIT_AVC;
    private static final int AUDIT_WATCHING_JOB_ID;
    private static final long AUDIT_WATCHING_PERIOD_MILLIS;
    private static final java.lang.String AVC_PREFIX;
    private static final boolean DEBUG;
    private static final java.util.regex.Pattern EXECUTE_NATIVE_AUDIT_PATTERN;
    private static final int IDLE_LOGGING_JOB_ID;
    private static final long IDLE_LOGGING_PERIOD_MILLIS;
    private static final java.lang.String TAG;
    private volatile boolean mAuditWatchingStopRequested;
    private volatile boolean mIdleLoggingStopRequested;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.concurrent.TimeUnit $r2, $r3;
        long $l0, $l1;
        java.util.regex.Pattern $r4;

        <com.android.server.pm.DynamicCodeLoggingService: int IDLE_LOGGING_JOB_ID> = 2030028;

        <com.android.server.pm.DynamicCodeLoggingService: boolean DEBUG> = 0;

        <com.android.server.pm.DynamicCodeLoggingService: java.lang.String AVC_PREFIX> = "type=1400 ";

        <com.android.server.pm.DynamicCodeLoggingService: int AUDIT_WATCHING_JOB_ID> = 203142925;

        <com.android.server.pm.DynamicCodeLoggingService: int AUDIT_AVC> = 1400;

        $r0 = class "Lcom/android/server/pm/DynamicCodeLoggingService;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <com.android.server.pm.DynamicCodeLoggingService: java.lang.String TAG> = $r1;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L);

        <com.android.server.pm.DynamicCodeLoggingService: long IDLE_LOGGING_PERIOD_MILLIS> = $l0;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;

        $l1 = virtualinvoke $r3.<java.util.concurrent.TimeUnit: long toMillis(long)>(2L);

        <com.android.server.pm.DynamicCodeLoggingService: long AUDIT_WATCHING_PERIOD_MILLIS> = $l1;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(".*\\bavc: granted \\{ execute(?:_no_trans|) \\} .*\\bpath=(?:\"([^\" ]*)\"|([0-9A-F]+)) .*\\bscontext=u:r:untrusted_app(?:_25|_27)?:.*\\btcontext=u:object_r:app_data_file:.*\\btclass=file\\b.*");

        <com.android.server.pm.DynamicCodeLoggingService: java.util.regex.Pattern EXECUTE_NATIVE_AUDIT_PATTERN> = $r4;

        return;
    }

    public void <init>()
    {
        com.android.server.pm.DynamicCodeLoggingService r0;

        r0 := @this: com.android.server.pm.DynamicCodeLoggingService;

        specialinvoke r0.<android.app.job.JobService: void <init>()>();

        r0.<com.android.server.pm.DynamicCodeLoggingService: boolean mIdleLoggingStopRequested> = 0;

        r0.<com.android.server.pm.DynamicCodeLoggingService: boolean mAuditWatchingStopRequested> = 0;

        return;
    }

    static com.android.server.pm.dex.DynamicCodeLogger access$000()
    {
        com.android.server.pm.dex.DynamicCodeLogger $r0;

        $r0 = staticinvoke <com.android.server.pm.DynamicCodeLoggingService: com.android.server.pm.dex.DynamicCodeLogger getDynamicCodeLogger()>();

        return $r0;
    }

    static boolean access$100(com.android.server.pm.DynamicCodeLoggingService)
    {
        com.android.server.pm.DynamicCodeLoggingService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.DynamicCodeLoggingService;

        $z0 = r0.<com.android.server.pm.DynamicCodeLoggingService: boolean mIdleLoggingStopRequested>;

        return $z0;
    }

    static java.lang.String access$200()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.pm.DynamicCodeLoggingService: java.lang.String TAG>;

        return $r0;
    }

    static boolean access$300(com.android.server.pm.DynamicCodeLoggingService)
    {
        com.android.server.pm.DynamicCodeLoggingService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.DynamicCodeLoggingService;

        $z0 = r0.<com.android.server.pm.DynamicCodeLoggingService: boolean mAuditWatchingStopRequested>;

        return $z0;
    }

    static java.util.regex.Pattern access$400()
    {
        java.util.regex.Pattern $r0;

        $r0 = <com.android.server.pm.DynamicCodeLoggingService: java.util.regex.Pattern EXECUTE_NATIVE_AUDIT_PATTERN>;

        return $r0;
    }

    static java.lang.String access$500(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.server.pm.DynamicCodeLoggingService: java.lang.String unhex(java.lang.String)>(r0);

        return $r1;
    }

    private static com.android.server.pm.dex.DynamicCodeLogger getDynamicCodeLogger()
    {
        android.os.IBinder $r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.dex.DexManager $r2;
        com.android.server.pm.dex.DynamicCodeLogger $r3;

        $r0 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        $r1 = (com.android.server.pm.PackageManagerService) $r0;

        $r2 = virtualinvoke $r1.<com.android.server.pm.PackageManagerService: com.android.server.pm.dex.DexManager getDexManager()>();

        $r3 = virtualinvoke $r2.<com.android.server.pm.dex.DexManager: com.android.server.pm.dex.DynamicCodeLogger getDynamicCodeLogger()>();

        return $r3;
    }

    public static void schedule(android.content.Context)
    {
        android.content.ComponentName $r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        java.lang.Object $r4;
        android.app.job.JobInfo$Builder $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13;
        long $l0, $l2;
        android.app.job.JobInfo $r9, $r14;
        android.content.Context r15;
        android.app.job.JobScheduler r16;

        r15 := @parameter0: android.content.Context;

        $r1 = new android.content.ComponentName;

        $r2 = class "Lcom/android/server/pm/DynamicCodeLoggingService;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", $r3);

        $r4 = virtualinvoke r15.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("jobscheduler");

        r16 = (android.app.job.JobScheduler) $r4;

        $r5 = new android.app.job.JobInfo$Builder;

        specialinvoke $r5.<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>(2030028, $r1);

        $r6 = virtualinvoke $r5.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresDeviceIdle(boolean)>(1);

        $r7 = virtualinvoke $r6.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresCharging(boolean)>(1);

        $l0 = <com.android.server.pm.DynamicCodeLoggingService: long IDLE_LOGGING_PERIOD_MILLIS>;

        $r8 = virtualinvoke $r7.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPeriodic(long)>($l0);

        $r9 = virtualinvoke $r8.<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>();

        virtualinvoke r16.<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>($r9);

        $r10 = new android.app.job.JobInfo$Builder;

        specialinvoke $r10.<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>(203142925, $r1);

        $r11 = virtualinvoke $r10.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresDeviceIdle(boolean)>(1);

        $r12 = virtualinvoke $r11.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresBatteryNotLow(boolean)>(1);

        $l2 = <com.android.server.pm.DynamicCodeLoggingService: long AUDIT_WATCHING_PERIOD_MILLIS>;

        $r13 = virtualinvoke $r12.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPeriodic(long)>($l2);

        $r14 = virtualinvoke $r13.<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>();

        virtualinvoke r16.<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>($r14);

        return;
    }

    private static java.lang.String unhex(java.lang.String)
    {
        java.lang.String r0, $r1;
        int $i0;
        byte[] $r2;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label2;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.String;

        $r2 = staticinvoke <libcore.util.HexEncoding: byte[] decode(java.lang.String,boolean)>(r0, 0);

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);

        return $r1;

     label2:
        return "";
    }

    public boolean onStartJob(android.app.job.JobParameters)
    {
        com.android.server.pm.DynamicCodeLoggingService r0;
        android.app.job.JobParameters r1;
        int i0;
        com.android.server.pm.DynamicCodeLoggingService$IdleLoggingThread $r2;
        com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread $r3;

        r0 := @this: com.android.server.pm.DynamicCodeLoggingService;

        r1 := @parameter0: android.app.job.JobParameters;

        i0 = virtualinvoke r1.<android.app.job.JobParameters: int getJobId()>();

        if i0 == 2030028 goto label2;

        if i0 == 203142925 goto label1;

        return 0;

     label1:
        r0.<com.android.server.pm.DynamicCodeLoggingService: boolean mAuditWatchingStopRequested> = 0;

        $r3 = new com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread;

        specialinvoke $r3.<com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread: void <init>(com.android.server.pm.DynamicCodeLoggingService,android.app.job.JobParameters)>(r0, r1);

        virtualinvoke $r3.<com.android.server.pm.DynamicCodeLoggingService$AuditWatchingThread: void start()>();

        return 1;

     label2:
        r0.<com.android.server.pm.DynamicCodeLoggingService: boolean mIdleLoggingStopRequested> = 0;

        $r2 = new com.android.server.pm.DynamicCodeLoggingService$IdleLoggingThread;

        specialinvoke $r2.<com.android.server.pm.DynamicCodeLoggingService$IdleLoggingThread: void <init>(com.android.server.pm.DynamicCodeLoggingService,android.app.job.JobParameters)>(r0, r1);

        virtualinvoke $r2.<com.android.server.pm.DynamicCodeLoggingService$IdleLoggingThread: void start()>();

        return 1;
    }

    public boolean onStopJob(android.app.job.JobParameters)
    {
        com.android.server.pm.DynamicCodeLoggingService r0;
        android.app.job.JobParameters r1;
        int i0;

        r0 := @this: com.android.server.pm.DynamicCodeLoggingService;

        r1 := @parameter0: android.app.job.JobParameters;

        i0 = virtualinvoke r1.<android.app.job.JobParameters: int getJobId()>();

        if i0 == 2030028 goto label2;

        if i0 == 203142925 goto label1;

        return 0;

     label1:
        r0.<com.android.server.pm.DynamicCodeLoggingService: boolean mAuditWatchingStopRequested> = 1;

        return 1;

     label2:
        r0.<com.android.server.pm.DynamicCodeLoggingService: boolean mIdleLoggingStopRequested> = 1;

        return 1;
    }
}
