final class com.android.server.pm.InstantAppRegistry$CookiePersistence extends android.os.Handler
{
    private static final long PERSIST_COOKIE_DELAY_MILLIS;
    private final android.util.SparseArray mPendingPersistCookies;
    final com.android.server.pm.InstantAppRegistry this$0;

    public void <init>(com.android.server.pm.InstantAppRegistry, android.os.Looper)
    {
        com.android.server.pm.InstantAppRegistry$CookiePersistence r0;
        com.android.server.pm.InstantAppRegistry r1;
        android.os.Looper r2;
        android.util.SparseArray $r3;

        r0 := @this: com.android.server.pm.InstantAppRegistry$CookiePersistence;

        r1 := @parameter0: com.android.server.pm.InstantAppRegistry;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: com.android.server.pm.InstantAppRegistry this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: android.util.SparseArray mPendingPersistCookies> = $r3;

        return;
    }

    private void addPendingPersistCookieLPw(int, com.android.server.pm.parsing.pkg.AndroidPackage, byte[], java.io.File)
    {
        com.android.server.pm.InstantAppRegistry$CookiePersistence r0;
        int i0;
        com.android.server.pm.parsing.pkg.AndroidPackage r1;
        byte[] r2;
        java.io.File r3;
        android.util.SparseArray $r4, $r9;
        java.lang.Object $r5;
        java.lang.String $r6;
        android.util.ArrayMap $r8, r10, r11;
        com.android.internal.os.SomeArgs r12;

        r0 := @this: com.android.server.pm.InstantAppRegistry$CookiePersistence;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.pm.parsing.pkg.AndroidPackage;

        r2 := @parameter2: byte[];

        r3 := @parameter3: java.io.File;

        $r4 = r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: android.util.SparseArray mPendingPersistCookies>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r10 = (android.util.ArrayMap) $r5;

        r11 = r10;

        if r10 != null goto label1;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r11 = $r8;

        $r9 = r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: android.util.SparseArray mPendingPersistCookies>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r8);

     label1:
        r12 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r12.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r2;

        r12.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r3;

        $r6 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        virtualinvoke r11.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r12);

        return;
    }

    private com.android.internal.os.SomeArgs removePendingPersistCookieLPr(com.android.server.pm.parsing.pkg.AndroidPackage, int)
    {
        com.android.server.pm.InstantAppRegistry$CookiePersistence r0;
        int i0;
        android.util.ArrayMap r1;
        android.util.SparseArray $r2, $r6;
        java.lang.Object $r3, $r5;
        java.lang.String $r4;
        boolean $z0;
        com.android.server.pm.parsing.pkg.AndroidPackage r7;
        com.android.internal.os.SomeArgs r8, r9;

        r0 := @this: com.android.server.pm.InstantAppRegistry$CookiePersistence;

        r7 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: android.util.SparseArray mPendingPersistCookies>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.ArrayMap) $r3;

        r8 = null;

        if r1 == null goto label1;

        $r4 = interfaceinvoke r7.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $r5 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r4);

        r9 = (com.android.internal.os.SomeArgs) $r5;

        r8 = r9;

        $z0 = virtualinvoke r1.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: android.util.SparseArray mPendingPersistCookies>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

        r8 = r9;

     label1:
        return r8;
    }

    public void cancelPendingPersistLPw(com.android.server.pm.parsing.pkg.AndroidPackage, int)
    {
        com.android.server.pm.InstantAppRegistry$CookiePersistence r0;
        int i0;
        com.android.server.pm.parsing.pkg.AndroidPackage r1;
        com.android.internal.os.SomeArgs r2;

        r0 := @this: com.android.server.pm.InstantAppRegistry$CookiePersistence;

        r1 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: void removeMessages(int,java.lang.Object)>(i0, r1);

        r2 = specialinvoke r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: com.android.internal.os.SomeArgs removePendingPersistCookieLPr(com.android.server.pm.parsing.pkg.AndroidPackage,int)>(r1, i0);

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

     label1:
        return;
    }

    public byte[] getPendingPersistCookieLPr(com.android.server.pm.parsing.pkg.AndroidPackage, int)
    {
        com.android.server.pm.InstantAppRegistry$CookiePersistence r0;
        int i0;
        android.util.ArrayMap r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3, $r5, $r6;
        java.lang.String $r4;
        byte[] $r7;
        com.android.server.pm.parsing.pkg.AndroidPackage r8;
        com.android.internal.os.SomeArgs r9;

        r0 := @this: com.android.server.pm.InstantAppRegistry$CookiePersistence;

        r8 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: android.util.SparseArray mPendingPersistCookies>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.ArrayMap) $r3;

        if r1 == null goto label1;

        $r4 = interfaceinvoke r8.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $r5 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r9 = (com.android.internal.os.SomeArgs) $r5;

        if r9 == null goto label1;

        $r6 = r9.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r7 = (byte[]) $r6;

        return $r7;

     label1:
        return null;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.pm.InstantAppRegistry$CookiePersistence r0;
        int i0;
        com.android.server.pm.parsing.pkg.AndroidPackage r1;
        byte[] r2;
        java.io.File r3;
        java.lang.Object $r4, $r5, $r6;
        com.android.server.pm.InstantAppRegistry $r7;
        java.lang.String $r8;
        android.os.Message r9;
        com.android.internal.os.SomeArgs r10;

        r0 := @this: com.android.server.pm.InstantAppRegistry$CookiePersistence;

        r9 := @parameter0: android.os.Message;

        i0 = r9.<android.os.Message: int what>;

        $r4 = r9.<android.os.Message: java.lang.Object obj>;

        r1 = (com.android.server.pm.parsing.pkg.AndroidPackage) $r4;

        r10 = specialinvoke r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: com.android.internal.os.SomeArgs removePendingPersistCookieLPr(com.android.server.pm.parsing.pkg.AndroidPackage,int)>(r1, i0);

        if r10 != null goto label1;

        return;

     label1:
        $r5 = r10.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r2 = (byte[]) $r5;

        $r6 = r10.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r3 = (java.io.File) $r6;

        virtualinvoke r10.<com.android.internal.os.SomeArgs: void recycle()>();

        $r7 = r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: com.android.server.pm.InstantAppRegistry this$0>;

        $r8 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        staticinvoke <com.android.server.pm.InstantAppRegistry: void access$200(com.android.server.pm.InstantAppRegistry,byte[],java.lang.String,java.io.File,int)>($r7, r2, $r8, r3, i0);

        return;
    }

    public void schedulePersistLPw(int, com.android.server.pm.parsing.pkg.AndroidPackage, byte[])
    {
        com.android.server.pm.InstantAppRegistry$CookiePersistence r0;
        int i0;
        com.android.server.pm.parsing.pkg.AndroidPackage r1;
        byte[] r2;
        java.io.File r3, r4;
        java.lang.String $r5, $r8, $r10;
        android.content.pm.PackageParser$SigningDetails $r6, $r9;
        android.content.pm.Signature[] $r7;
        boolean $z0, $z2;
        android.os.Message $r11;

        r0 := @this: com.android.server.pm.InstantAppRegistry$CookiePersistence;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.pm.parsing.pkg.AndroidPackage;

        r2 := @parameter2: byte[];

        $r5 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $r6 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: android.content.pm.PackageParser$SigningDetails getSigningDetails()>();

        $r7 = $r6.<android.content.pm.PackageParser$SigningDetails: android.content.pm.Signature[] signatures>;

        $r8 = staticinvoke <android.util.PackageUtils: java.lang.String computeSignaturesSha256Digest(android.content.pm.Signature[])>($r7);

        r3 = staticinvoke <com.android.server.pm.InstantAppRegistry: java.io.File access$000(java.lang.String,java.lang.String,int)>($r5, $r8, i0);

        $r9 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: android.content.pm.PackageParser$SigningDetails getSigningDetails()>();

        $z0 = virtualinvoke $r9.<android.content.pm.PackageParser$SigningDetails: boolean hasSignatures()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("InstantAppRegistry", "Parsed Instant App contains no valid signatures!");

     label1:
        $r10 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        r4 = staticinvoke <com.android.server.pm.InstantAppRegistry: java.io.File access$100(java.lang.String,int)>($r10, i0);

        if r4 == null goto label2;

        $z2 = virtualinvoke r3.<java.io.File: boolean equals(java.lang.Object)>(r4);

        if $z2 != 0 goto label2;

        virtualinvoke r4.<java.io.File: boolean delete()>();

     label2:
        virtualinvoke r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: void cancelPendingPersistLPw(com.android.server.pm.parsing.pkg.AndroidPackage,int)>(r1, i0);

        specialinvoke r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: void addPendingPersistCookieLPw(int,com.android.server.pm.parsing.pkg.AndroidPackage,byte[],java.io.File)>(i0, r1, r2, r3);

        $r11 = virtualinvoke r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: android.os.Message obtainMessage(int,java.lang.Object)>(i0, r1);

        virtualinvoke r0.<com.android.server.pm.InstantAppRegistry$CookiePersistence: boolean sendMessageDelayed(android.os.Message,long)>($r11, 1000L);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.InstantAppRegistry$CookiePersistence: long PERSIST_COOKIE_DELAY_MILLIS> = 1000L;

        return;
    }
}
