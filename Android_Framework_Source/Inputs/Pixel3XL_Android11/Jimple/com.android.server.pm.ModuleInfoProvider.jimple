public class com.android.server.pm.ModuleInfoProvider extends java.lang.Object
{
    private static final java.lang.String MODULE_METADATA_KEY;
    private static final java.lang.String TAG;
    private final com.android.server.pm.ApexManager mApexManager;
    private final android.content.Context mContext;
    private volatile boolean mMetadataLoaded;
    private final java.util.Map mModuleInfo;
    private final android.content.pm.IPackageManager mPackageManager;
    private volatile java.lang.String mPackageName;

    void <init>(android.content.Context, android.content.pm.IPackageManager)
    {
        com.android.server.pm.ModuleInfoProvider r0;
        android.content.Context r1;
        android.content.pm.IPackageManager r2;
        com.android.server.pm.ApexManager $r3;
        android.util.ArrayMap $r4;

        r0 := @this: com.android.server.pm.ModuleInfoProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.IPackageManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.ModuleInfoProvider: android.content.Context mContext> = r1;

        r0.<com.android.server.pm.ModuleInfoProvider: android.content.pm.IPackageManager mPackageManager> = r2;

        $r3 = staticinvoke <com.android.server.pm.ApexManager: com.android.server.pm.ApexManager getInstance()>();

        r0.<com.android.server.pm.ModuleInfoProvider: com.android.server.pm.ApexManager mApexManager> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.ModuleInfoProvider: java.util.Map mModuleInfo> = $r4;

        return;
    }

    public void <init>(android.content.res.XmlResourceParser, android.content.res.Resources, com.android.server.pm.ApexManager)
    {
        com.android.server.pm.ModuleInfoProvider r0;
        android.content.res.XmlResourceParser r1;
        android.content.res.Resources r2;
        com.android.server.pm.ApexManager r3;
        android.util.ArrayMap $r4;

        r0 := @this: com.android.server.pm.ModuleInfoProvider;

        r1 := @parameter0: android.content.res.XmlResourceParser;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: com.android.server.pm.ApexManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.ModuleInfoProvider: android.content.Context mContext> = null;

        r0.<com.android.server.pm.ModuleInfoProvider: android.content.pm.IPackageManager mPackageManager> = null;

        r0.<com.android.server.pm.ModuleInfoProvider: com.android.server.pm.ApexManager mApexManager> = r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.ModuleInfoProvider: java.util.Map mModuleInfo> = $r4;

        specialinvoke r0.<com.android.server.pm.ModuleInfoProvider: void loadModuleMetadata(android.content.res.XmlResourceParser,android.content.res.Resources)>(r1, r2);

        return;
    }

    private void loadModuleMetadata(android.content.res.XmlResourceParser, android.content.res.Resources)
    {
        com.android.server.pm.ModuleInfoProvider r0;
        android.content.res.XmlResourceParser r1;
        java.lang.CharSequence r2;
        java.lang.String r3, $r5, $r6, $r7, $r8, $r13, $r18, $r20;
        boolean z0, $z1;
        android.content.pm.ModuleInfo r4;
        int $i0, $i1;
        com.android.server.pm.ApexManager $r12;
        java.util.Map $r15, $r21, $r23;
        java.lang.Throwable $r22, $r24;
        android.content.res.Resources r25;
        java.lang.StringBuilder r26;

        r0 := @this: com.android.server.pm.ModuleInfoProvider;

        r1 := @parameter0: android.content.res.XmlResourceParser;

        r25 := @parameter1: android.content.res.Resources;

     label01:
        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "module-metadata");

     label02:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r1);

        $i0 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getEventType()>();

        if $i0 != 1 goto label04;

     label03:
        goto label05;

     label04:
        $r5 = "module";

        $r6 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label06;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected metadata element: ");

        $r18 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager.ModuleInfoProvider", $r20);

        $r21 = r0.<com.android.server.pm.ModuleInfoProvider: java.util.Map mModuleInfo>;

        interfaceinvoke $r21.<java.util.Map: void clear()>();

     label05:
        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

        r0.<com.android.server.pm.ModuleInfoProvider: boolean mMetadataLoaded> = 1;

        goto label12;

     label06:
        $r7 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(1);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        r2 = virtualinvoke r25.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i1);

        r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "packageName");

        z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "isHidden");

        r4 = new android.content.pm.ModuleInfo;

        specialinvoke r4.<android.content.pm.ModuleInfo: void <init>()>();

        virtualinvoke r4.<android.content.pm.ModuleInfo: android.content.pm.ModuleInfo setHidden(boolean)>(z0);

        virtualinvoke r4.<android.content.pm.ModuleInfo: android.content.pm.ModuleInfo setPackageName(java.lang.String)>(r3);

        virtualinvoke r4.<android.content.pm.ModuleInfo: android.content.pm.ModuleInfo setName(java.lang.CharSequence)>(r2);

        $r12 = r0.<com.android.server.pm.ModuleInfoProvider: com.android.server.pm.ApexManager mApexManager>;

        $r13 = virtualinvoke $r12.<com.android.server.pm.ApexManager: java.lang.String getApexModuleNameForPackageName(java.lang.String)>(r3);

        virtualinvoke r4.<android.content.pm.ModuleInfo: android.content.pm.ModuleInfo setApexModuleName(java.lang.String)>($r13);

        $r15 = r0.<com.android.server.pm.ModuleInfoProvider: java.util.Map mModuleInfo>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

     label07:
        goto label02;

     label08:
        $r24 := @caughtexception;

        goto label13;

     label09:
        $r22 := @caughtexception;

     label10:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager.ModuleInfoProvider", "Error parsing module metadata", $r22);

        $r23 = r0.<com.android.server.pm.ModuleInfoProvider: java.util.Map mModuleInfo>;

        interfaceinvoke $r23.<java.util.Map: void clear()>();

     label11:
        goto label05;

     label12:
        return;

     label13:
        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

        r0.<com.android.server.pm.ModuleInfoProvider: boolean mMetadataLoaded> = 1;

        throw $r24;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label09;
        catch java.io.IOException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label09;
        catch java.io.IOException from label02 to label03 with label09;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label09;
        catch java.io.IOException from label04 to label05 with label09;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label09;
        catch java.io.IOException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    java.util.List getInstalledModules(int)
    {
        com.android.server.pm.ModuleInfoProvider r0;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1;
        android.content.pm.IPackageManager $r2;
        android.content.pm.ParceledListSlice $r3;
        java.util.ArrayList $r4, $r9;
        java.lang.Object $r5, $r8;
        java.lang.String $r6;
        java.util.Map $r7, $r10;
        java.util.Collection $r11;
        android.os.RemoteException $r12;
        java.util.List $r13, r14;
        java.util.Iterator r16;
        android.content.pm.PackageInfo r17;
        android.content.pm.ModuleInfo r18;

        r0 := @this: com.android.server.pm.ModuleInfoProvider;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.server.pm.ModuleInfoProvider: boolean mMetadataLoaded>;

        if $z0 == 0 goto label7;

        $i1 = 131072 & i0;

        if $i1 == 0 goto label1;

        $r9 = new java.util.ArrayList;

        $r10 = r0.<com.android.server.pm.ModuleInfoProvider: java.util.Map mModuleInfo>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);

        return $r9;

     label1:
        $r2 = r0.<com.android.server.pm.ModuleInfoProvider: android.content.pm.IPackageManager mPackageManager>;

        $i2 = 1073741824 | i0;

        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>($i2, 0);

        r14 = virtualinvoke $r3.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        $r4 = new java.util.ArrayList;

        $i3 = interfaceinvoke r14.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i3);

        r16 = interfaceinvoke r14.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r5 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (android.content.pm.PackageInfo) $r5;

        $r7 = r0.<com.android.server.pm.ModuleInfoProvider: java.util.Map mModuleInfo>;

        $r6 = r17.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r18 = (android.content.pm.ModuleInfo) $r8;

        if r18 == null goto label4;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r18);

     label4:
        goto label3;

     label5:
        return $r4;

     label6:
        $r12 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager.ModuleInfoProvider", "Unable to retrieve all package names", $r12);

        $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r13;

     label7:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Call to getInstalledModules before metadata loaded");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label6;
    }

    android.content.pm.ModuleInfo getModuleInfo(java.lang.String, int)
    {
        com.android.server.pm.ModuleInfoProvider r0;
        java.lang.String r1, $r11;
        int i0, $i1;
        java.util.Iterator r2;
        android.content.pm.ModuleInfo r3, $r7;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r4;
        java.util.Map $r5, $r8;
        java.lang.Object $r6, $r10;
        java.util.Collection $r9;

        r0 := @this: com.android.server.pm.ModuleInfoProvider;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = r0.<com.android.server.pm.ModuleInfoProvider: boolean mMetadataLoaded>;

        if $z0 == 0 goto label5;

        $i1 = i0 & 1;

        if $i1 == 0 goto label4;

        $r8 = r0.<com.android.server.pm.ModuleInfoProvider: java.util.Map mModuleInfo>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>();

        r2 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.pm.ModuleInfo) $r10;

        $r11 = virtualinvoke r3.<android.content.pm.ModuleInfo: java.lang.String getApexModuleName()>();

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;

     label4:
        $r5 = r0.<com.android.server.pm.ModuleInfoProvider: java.util.Map mModuleInfo>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (android.content.pm.ModuleInfo) $r6;

        return $r7;

     label5:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Call to getModuleInfo before metadata loaded");

        throw $r4;
    }

    java.lang.String getPackageName()
    {
        com.android.server.pm.ModuleInfoProvider r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.pm.ModuleInfoProvider;

        $z0 = r0.<com.android.server.pm.ModuleInfoProvider: boolean mMetadataLoaded>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.pm.ModuleInfoProvider: java.lang.String mPackageName>;

        return $r2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Call to getVersion before metadata loaded");

        throw $r1;
    }

    public void systemReady()
    {
        com.android.server.pm.ModuleInfoProvider r0;
        android.content.Context $r1, $r8, $r9;
        android.content.res.Resources $r2, r20;
        java.lang.String $r3, $r4, $r5, $r7, $r16, $r18;
        boolean $z0;
        android.content.pm.IPackageManager $r6;
        android.content.pm.ApplicationInfo $r10;
        android.os.Bundle $r11;
        int $i0;
        android.content.res.XmlResourceParser $r12;
        android.util.AndroidException $r13;
        java.lang.StringBuilder $r14;
        android.content.pm.PackageInfo r19;

        r0 := @this: com.android.server.pm.ModuleInfoProvider;

        $r1 = r0.<com.android.server.pm.ModuleInfoProvider: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17039865);

        r0.<com.android.server.pm.ModuleInfoProvider: java.lang.String mPackageName> = $r3;

        $r4 = r0.<com.android.server.pm.ModuleInfoProvider: java.lang.String mPackageName>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager.ModuleInfoProvider", "No configured module metadata provider.");

        return;

     label1:
        $r6 = r0.<com.android.server.pm.ModuleInfoProvider: android.content.pm.IPackageManager mPackageManager>;

        $r5 = r0.<com.android.server.pm.ModuleInfoProvider: java.lang.String mPackageName>;

        r19 = interfaceinvoke $r6.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>($r5, 128, 0);

        $r8 = r0.<com.android.server.pm.ModuleInfoProvider: android.content.Context mContext>;

        $r7 = r0.<com.android.server.pm.ModuleInfoProvider: java.lang.String mPackageName>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>($r7, 0);

        r20 = virtualinvoke $r9.<android.content.Context: android.content.res.Resources getResources()>();

     label2:
        $r10 = r19.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = $r10.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        $i0 = virtualinvoke $r11.<android.os.Bundle: int getInt(java.lang.String)>("android.content.pm.MODULE_METADATA");

        $r12 = virtualinvoke r20.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0);

        specialinvoke r0.<com.android.server.pm.ModuleInfoProvider: void loadModuleMetadata(android.content.res.XmlResourceParser,android.content.res.Resources)>($r12, r20);

        return;

     label3:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to discover metadata package: ");

        $r16 = r0.<com.android.server.pm.ModuleInfoProvider: java.lang.String mPackageName>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager.ModuleInfoProvider", $r18, $r13);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.ModuleInfoProvider: java.lang.String TAG> = "PackageManager.ModuleInfoProvider";

        <com.android.server.pm.ModuleInfoProvider: java.lang.String MODULE_METADATA_KEY> = "android.content.pm.MODULE_METADATA";

        return;
    }
}
