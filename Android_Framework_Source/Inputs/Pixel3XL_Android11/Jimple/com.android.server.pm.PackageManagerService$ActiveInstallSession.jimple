class com.android.server.pm.PackageManagerService$ActiveInstallSession extends java.lang.Object
{
    private final com.android.server.pm.InstallSource mInstallSource;
    private final int mInstallerUid;
    private final android.content.pm.IPackageInstallObserver2 mObserver;
    private final java.lang.String mPackageName;
    private final int mSessionId;
    private final android.content.pm.PackageInstaller$SessionParams mSessionParams;
    private final android.content.pm.PackageParser$SigningDetails mSigningDetails;
    private final java.io.File mStagedDir;
    private final android.os.UserHandle mUser;

    void <init>(java.lang.String, java.io.File, android.content.pm.IPackageInstallObserver2, int, android.content.pm.PackageInstaller$SessionParams, int, com.android.server.pm.InstallSource, android.os.UserHandle, android.content.pm.PackageParser$SigningDetails)
    {
        com.android.server.pm.PackageManagerService$ActiveInstallSession r0;
        java.lang.String r1;
        java.io.File r2;
        android.content.pm.IPackageInstallObserver2 r3;
        int i0, i1;
        android.content.pm.PackageInstaller$SessionParams r4;
        com.android.server.pm.InstallSource r5, $r9;
        android.os.UserHandle r6;
        android.content.pm.PackageParser$SigningDetails r7;
        java.lang.Object $r8;

        r0 := @this: com.android.server.pm.PackageManagerService$ActiveInstallSession;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: android.content.pm.IPackageInstallObserver2;

        i0 := @parameter3: int;

        r4 := @parameter4: android.content.pm.PackageInstaller$SessionParams;

        i1 := @parameter5: int;

        r5 := @parameter6: com.android.server.pm.InstallSource;

        r6 := @parameter7: android.os.UserHandle;

        r7 := @parameter8: android.content.pm.PackageParser$SigningDetails;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: java.lang.String mPackageName> = r1;

        r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: java.io.File mStagedDir> = r2;

        r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: android.content.pm.IPackageInstallObserver2 mObserver> = r3;

        r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: int mSessionId> = i0;

        r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: android.content.pm.PackageInstaller$SessionParams mSessionParams> = r4;

        r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: int mInstallerUid> = i1;

        $r8 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r9 = (com.android.server.pm.InstallSource) $r8;

        r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: com.android.server.pm.InstallSource mInstallSource> = $r9;

        r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: android.os.UserHandle mUser> = r6;

        r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: android.content.pm.PackageParser$SigningDetails mSigningDetails> = r7;

        return;
    }

    public com.android.server.pm.InstallSource getInstallSource()
    {
        com.android.server.pm.PackageManagerService$ActiveInstallSession r0;
        com.android.server.pm.InstallSource $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$ActiveInstallSession;

        $r1 = r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: com.android.server.pm.InstallSource mInstallSource>;

        return $r1;
    }

    public int getInstallerUid()
    {
        com.android.server.pm.PackageManagerService$ActiveInstallSession r0;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerService$ActiveInstallSession;

        $i0 = r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: int mInstallerUid>;

        return $i0;
    }

    public android.content.pm.IPackageInstallObserver2 getObserver()
    {
        com.android.server.pm.PackageManagerService$ActiveInstallSession r0;
        android.content.pm.IPackageInstallObserver2 $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$ActiveInstallSession;

        $r1 = r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: android.content.pm.IPackageInstallObserver2 mObserver>;

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        com.android.server.pm.PackageManagerService$ActiveInstallSession r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$ActiveInstallSession;

        $r1 = r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: java.lang.String mPackageName>;

        return $r1;
    }

    public int getSessionId()
    {
        com.android.server.pm.PackageManagerService$ActiveInstallSession r0;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerService$ActiveInstallSession;

        $i0 = r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: int mSessionId>;

        return $i0;
    }

    public android.content.pm.PackageInstaller$SessionParams getSessionParams()
    {
        com.android.server.pm.PackageManagerService$ActiveInstallSession r0;
        android.content.pm.PackageInstaller$SessionParams $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$ActiveInstallSession;

        $r1 = r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: android.content.pm.PackageInstaller$SessionParams mSessionParams>;

        return $r1;
    }

    public android.content.pm.PackageParser$SigningDetails getSigningDetails()
    {
        com.android.server.pm.PackageManagerService$ActiveInstallSession r0;
        android.content.pm.PackageParser$SigningDetails $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$ActiveInstallSession;

        $r1 = r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        return $r1;
    }

    public java.io.File getStagedDir()
    {
        com.android.server.pm.PackageManagerService$ActiveInstallSession r0;
        java.io.File $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$ActiveInstallSession;

        $r1 = r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: java.io.File mStagedDir>;

        return $r1;
    }

    public android.os.UserHandle getUser()
    {
        com.android.server.pm.PackageManagerService$ActiveInstallSession r0;
        android.os.UserHandle $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$ActiveInstallSession;

        $r1 = r0.<com.android.server.pm.PackageManagerService$ActiveInstallSession: android.os.UserHandle mUser>;

        return $r1;
    }
}
