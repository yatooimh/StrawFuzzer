public class com.android.server.pm.PackageManagerService$Injector extends java.lang.Object
{
    private final com.android.server.pm.PackageAbiHelper mAbiHelper;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mActivityManagerInternalProducer;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mActivityTaskManagerProducer;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mAppOpsManagerProducer;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mAppsFilterProducer;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mComponentResolverProducer;
    private final android.content.Context mContext;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mDeviceStorageMonitorProducer;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mDisplayManagerProducer;
    private final java.lang.Object mInstallLock;
    private final com.android.server.pm.Installer mInstaller;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mLocalDeviceIdleController;
    private final java.lang.Object mLock;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mNetworkPolicyManagerProducer;
    private com.android.server.pm.PackageManagerService mPackageManager;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mPermissionManagerProducer;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mPermissionPolicyProducer;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mPlatformCompatProducer;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mSettingsProducer;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mStorageManagerInternalProducer;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mStorageManagerProducer;
    private final com.android.server.pm.PackageManagerService$Injector$Singleton mUserManagerProducer;

    void <init>(android.content.Context, java.lang.Object, com.android.server.pm.Installer, java.lang.Object, com.android.server.pm.PackageAbiHelper, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer, com.android.server.pm.PackageManagerService$Injector$Producer)
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        android.content.Context r1;
        java.lang.Object r2, r4;
        com.android.server.pm.Installer r3;
        com.android.server.pm.PackageAbiHelper r5;
        com.android.server.pm.PackageManagerService$Injector$Producer r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: com.android.server.pm.Installer;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: com.android.server.pm.PackageAbiHelper;

        r6 := @parameter5: com.android.server.pm.PackageManagerService$Injector$Producer;

        r7 := @parameter6: com.android.server.pm.PackageManagerService$Injector$Producer;

        r8 := @parameter7: com.android.server.pm.PackageManagerService$Injector$Producer;

        r9 := @parameter8: com.android.server.pm.PackageManagerService$Injector$Producer;

        r10 := @parameter9: com.android.server.pm.PackageManagerService$Injector$Producer;

        r11 := @parameter10: com.android.server.pm.PackageManagerService$Injector$Producer;

        r12 := @parameter11: com.android.server.pm.PackageManagerService$Injector$Producer;

        r13 := @parameter12: com.android.server.pm.PackageManagerService$Injector$Producer;

        r14 := @parameter13: com.android.server.pm.PackageManagerService$Injector$Producer;

        r15 := @parameter14: com.android.server.pm.PackageManagerService$Injector$Producer;

        r16 := @parameter15: com.android.server.pm.PackageManagerService$Injector$Producer;

        r17 := @parameter16: com.android.server.pm.PackageManagerService$Injector$Producer;

        r18 := @parameter17: com.android.server.pm.PackageManagerService$Injector$Producer;

        r19 := @parameter18: com.android.server.pm.PackageManagerService$Injector$Producer;

        r20 := @parameter19: com.android.server.pm.PackageManagerService$Injector$Producer;

        r21 := @parameter20: com.android.server.pm.PackageManagerService$Injector$Producer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService$Injector: android.content.Context mContext> = r1;

        r0.<com.android.server.pm.PackageManagerService$Injector: java.lang.Object mLock> = r2;

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.Installer mInstaller> = r3;

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageAbiHelper mAbiHelper> = r5;

        r0.<com.android.server.pm.PackageManagerService$Injector: java.lang.Object mInstallLock> = r4;

        $r22 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r22.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r6);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mComponentResolverProducer> = $r22;

        $r23 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r23.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r7);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mPermissionManagerProducer> = $r23;

        $r24 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r24.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r8);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mUserManagerProducer> = $r24;

        $r25 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r25.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r9);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mSettingsProducer> = $r25;

        $r26 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r26.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r10);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mActivityTaskManagerProducer> = $r26;

        $r27 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r27.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r11);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mActivityManagerInternalProducer> = $r27;

        $r28 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r28.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r12);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mLocalDeviceIdleController> = $r28;

        $r29 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r29.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r13);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mStorageManagerInternalProducer> = $r29;

        $r30 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r30.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r14);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mNetworkPolicyManagerProducer> = $r30;

        $r31 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r31.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r15);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mPermissionPolicyProducer> = $r31;

        $r32 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r32.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r16);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mDeviceStorageMonitorProducer> = $r32;

        $r33 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r33.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r17);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mDisplayManagerProducer> = $r33;

        $r34 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r34.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r18);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mStorageManagerProducer> = $r34;

        $r35 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r35.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r19);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mAppOpsManagerProducer> = $r35;

        $r36 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r36.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r20);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mAppsFilterProducer> = $r36;

        $r37 = new com.android.server.pm.PackageManagerService$Injector$Singleton;

        specialinvoke $r37.<com.android.server.pm.PackageManagerService$Injector$Singleton: void <init>(com.android.server.pm.PackageManagerService$Injector$Producer)>(r21);

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mPlatformCompatProducer> = $r37;

        return;
    }

    public void bootstrap(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService r1;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager> = r1;

        return;
    }

    public com.android.server.pm.PackageAbiHelper getAbiHelper()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageAbiHelper $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageAbiHelper mAbiHelper>;

        return $r1;
    }

    public android.app.ActivityManagerInternal getActivityManagerInternal()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        android.app.ActivityManagerInternal $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mActivityManagerInternalProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (android.app.ActivityManagerInternal) $r3;

        return $r4;
    }

    public com.android.server.wm.ActivityTaskManagerInternal getActivityTaskManagerInternal()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        com.android.server.wm.ActivityTaskManagerInternal $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mActivityTaskManagerProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (com.android.server.wm.ActivityTaskManagerInternal) $r3;

        return $r4;
    }

    public android.app.AppOpsManager getAppOpsManager()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        android.app.AppOpsManager $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mAppOpsManagerProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (android.app.AppOpsManager) $r3;

        return $r4;
    }

    public com.android.server.pm.AppsFilter getAppsFilter()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        com.android.server.pm.AppsFilter $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mAppsFilterProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (com.android.server.pm.AppsFilter) $r3;

        return $r4;
    }

    public com.android.server.compat.PlatformCompat getCompatibility()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        com.android.server.compat.PlatformCompat $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mPlatformCompatProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (com.android.server.compat.PlatformCompat) $r3;

        return $r4;
    }

    public com.android.server.pm.ComponentResolver getComponentResolver()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        com.android.server.pm.ComponentResolver $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mComponentResolverProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (com.android.server.pm.ComponentResolver) $r3;

        return $r4;
    }

    public android.content.Context getContext()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: android.content.Context mContext>;

        return $r1;
    }

    public com.android.server.storage.DeviceStorageMonitorInternal getDeviceStorageMonitorInternal()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        com.android.server.storage.DeviceStorageMonitorInternal $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mDeviceStorageMonitorProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (com.android.server.storage.DeviceStorageMonitorInternal) $r3;

        return $r4;
    }

    public android.hardware.display.DisplayManager getDisplayManager()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        android.hardware.display.DisplayManager $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mDisplayManagerProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (android.hardware.display.DisplayManager) $r3;

        return $r4;
    }

    public java.lang.Object getInstallLock()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        java.lang.Object $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: java.lang.Object mInstallLock>;

        return $r1;
    }

    public com.android.server.pm.Installer getInstaller()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.Installer $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.Installer mInstaller>;

        return $r1;
    }

    public com.android.server.DeviceIdleInternal getLocalDeviceIdleController()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        com.android.server.DeviceIdleInternal $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mLocalDeviceIdleController>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (com.android.server.DeviceIdleInternal) $r3;

        return $r4;
    }

    public java.lang.Object getLock()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        java.lang.Object $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: java.lang.Object mLock>;

        return $r1;
    }

    public com.android.server.net.NetworkPolicyManagerInternal getNetworkPolicyManagerInternal()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        com.android.server.net.NetworkPolicyManagerInternal $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mNetworkPolicyManagerProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (com.android.server.net.NetworkPolicyManagerInternal) $r3;

        return $r4;
    }

    public com.android.server.pm.permission.PermissionManagerServiceInternal getPermissionManagerServiceInternal()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        com.android.server.pm.permission.PermissionManagerServiceInternal $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mPermissionManagerProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (com.android.server.pm.permission.PermissionManagerServiceInternal) $r3;

        return $r4;
    }

    public com.android.server.policy.PermissionPolicyInternal getPermissionPolicyInternal()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        com.android.server.policy.PermissionPolicyInternal $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mPermissionPolicyProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (com.android.server.policy.PermissionPolicyInternal) $r3;

        return $r4;
    }

    public com.android.server.pm.Settings getSettings()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        com.android.server.pm.Settings $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mSettingsProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (com.android.server.pm.Settings) $r3;

        return $r4;
    }

    public android.os.storage.StorageManager getStorageManager()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        android.os.storage.StorageManager $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mStorageManagerProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (android.os.storage.StorageManager) $r3;

        return $r4;
    }

    public android.os.storage.StorageManagerInternal getStorageManagerInternal()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        android.os.storage.StorageManagerInternal $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mStorageManagerInternalProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (android.os.storage.StorageManagerInternal) $r3;

        return $r4;
    }

    public android.os.UserManagerInternal getUserManagerInternal()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.UserManagerService $r1;
        android.os.UserManagerInternal $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.UserManagerService getUserManagerService()>();

        $r2 = virtualinvoke $r1.<com.android.server.pm.UserManagerService: android.os.UserManagerInternal getInternalForInjectorOnly()>();

        return $r2;
    }

    public com.android.server.pm.UserManagerService getUserManagerService()
    {
        com.android.server.pm.PackageManagerService$Injector r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$Injector$Singleton $r2;
        java.lang.Object $r3;
        com.android.server.pm.UserManagerService $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$Injector;

        $r2 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService$Injector$Singleton mUserManagerProducer>;

        $r1 = r0.<com.android.server.pm.PackageManagerService$Injector: com.android.server.pm.PackageManagerService mPackageManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$Injector$Singleton: java.lang.Object get(com.android.server.pm.PackageManagerService$Injector,com.android.server.pm.PackageManagerService)>(r0, $r1);

        $r4 = (com.android.server.pm.UserManagerService) $r3;

        return $r4;
    }
}
