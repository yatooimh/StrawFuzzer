class com.android.server.pm.PackageManagerService$MoveInstallArgs extends com.android.server.pm.PackageManagerService$InstallArgs
{
    private java.io.File codeFile;
    private java.io.File resourceFile;
    final com.android.server.pm.PackageManagerService this$0;

    void <init>(com.android.server.pm.PackageManagerService, com.android.server.pm.PackageManagerService$InstallParams)
    {
        com.android.server.pm.PackageManagerService$MoveInstallArgs r0;
        com.android.server.pm.PackageManagerService r1;
        com.android.server.pm.PackageManagerService$InstallParams r2;

        r0 := @this: com.android.server.pm.PackageManagerService$MoveInstallArgs;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        r2 := @parameter1: com.android.server.pm.PackageManagerService$InstallParams;

        r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService this$0> = r1;

        specialinvoke r0.<com.android.server.pm.PackageManagerService$InstallArgs: void <init>(com.android.server.pm.PackageManagerService$InstallParams)>(r2);

        return;
    }

    private boolean cleanUp(java.lang.String)
    {
        com.android.server.pm.PackageManagerService$MoveInstallArgs r0;
        int[] r2;
        int i0, i1, i4;
        java.io.File $r4, $r7, $r8;
        com.android.server.pm.PackageManagerService$MoveInfo $r5, $r11, $r22;
        java.lang.String $r6, $r12, $r16, $r23, $r26, r28, r29;
        java.lang.StringBuilder $r9;
        com.android.server.pm.PackageManagerService $r17, $r19, $r20, $r21;
        com.android.server.pm.UserManagerService $r18;
        com.android.server.pm.Installer $r24;
        com.android.server.pm.Installer$InstallerException $r25;
        java.lang.Throwable $r27;
        java.lang.Object r31;

        r0 := @this: com.android.server.pm.PackageManagerService$MoveInstallArgs;

        r28 := @parameter0: java.lang.String;

        $r4 = new java.io.File;

        $r5 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r6 = $r5.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String fromCodePath>;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r6);

        r29 = virtualinvoke $r4.<java.io.File: java.lang.String getName()>();

        $r7 = new java.io.File;

        $r8 = staticinvoke <android.os.Environment: java.io.File getDataAppDirectory(java.lang.String)>(r28);

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, r29);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up ");

        $r11 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r12 = $r11.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String packageName>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("PackageManager", $r16);

        $r17 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService this$0>;

        $r18 = $r17.<com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService mUserManager>;

        r2 = virtualinvoke $r18.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $r19 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService this$0>;

        r31 = $r19.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor r31;

     label01:
        i0 = lengthof r2;

     label02:
        i4 = 0;

     label03:
        if i4 >= i0 goto label09;

        i1 = r2[i4];

     label04:
        $r21 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService this$0>;

        $r24 = $r21.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $r22 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r23 = $r22.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String packageName>;

        virtualinvoke $r24.<com.android.server.pm.Installer: void destroyAppData(java.lang.String,java.lang.String,int,int,long)>(r28, $r23, i1, 131075, 0L);

     label05:
        goto label08;

     label06:
        $r25 := @caughtexception;

     label07:
        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r25);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r26);

     label08:
        i4 = i4 + 1;

        goto label03;

     label09:
        $r20 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r20.<com.android.server.pm.PackageManagerService: void removeCodePathLI(java.io.File)>($r7);

        exitmonitor r31;

     label10:
        return 1;

     label11:
        $r27 := @caughtexception;

     label12:
        exitmonitor r31;

     label13:
        throw $r27;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch com.android.server.pm.Installer$InstallerException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    void cleanUpResourcesLI()
    {
        com.android.server.pm.PackageManagerService$MoveInstallArgs r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$MoveInstallArgs;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    int copyApk()
    {
        com.android.server.pm.PackageManagerService$MoveInstallArgs r0;
        com.android.server.pm.PackageManagerService $r1, $r2;
        com.android.server.pm.PackageManagerService$MoveInfo $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r17, $r20;
        java.lang.String $r10, $r11, $r12, $r13, $r14, $r18, $r21, r26;
        int $i0, $i1;
        com.android.server.pm.Installer $r15, r25;
        java.io.File $r16, $r19, $r22;
        com.android.server.pm.Installer$InstallerException $r23;
        java.lang.Throwable $r24;

        r0 := @this: com.android.server.pm.PackageManagerService$MoveInstallArgs;

        $r1 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService this$0>;

        r25 = $r1.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        entermonitor r25;

     label1:
        $r2 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService this$0>;

        $r15 = $r2.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $r3 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r14 = $r3.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String fromUuid>;

        $r4 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r13 = $r4.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String toUuid>;

        $r5 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r12 = $r5.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String packageName>;

        $r6 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $i1 = $r6.<com.android.server.pm.PackageManagerService$MoveInfo: int appId>;

        $r7 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r11 = $r7.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String seinfo>;

        $r8 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $i0 = $r8.<com.android.server.pm.PackageManagerService$MoveInfo: int targetSdkVersion>;

        $r9 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r10 = $r9.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String fromCodePath>;

        virtualinvoke $r15.<com.android.server.pm.Installer: void moveCompleteApp(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String)>($r14, $r13, $r12, $i1, $r11, $i0, $r10);

     label2:
        exitmonitor r25;

     label3:
        $r16 = new java.io.File;

        $r17 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r18 = $r17.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String fromCodePath>;

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r18);

        r26 = virtualinvoke $r16.<java.io.File: java.lang.String getName()>();

        $r19 = new java.io.File;

        $r20 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r21 = $r20.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String toUuid>;

        $r22 = staticinvoke <android.os.Environment: java.io.File getDataAppDirectory(java.lang.String)>($r21);

        specialinvoke $r19.<java.io.File: void <init>(java.io.File,java.lang.String)>($r22, r26);

        r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: java.io.File codeFile> = $r19;

        r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: java.io.File resourceFile> = $r19;

        return 1;

     label4:
        $r24 := @caughtexception;

        goto label8;

     label5:
        $r23 := @caughtexception;

     label6:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Failed to move app", $r23);

        exitmonitor r25;

     label7:
        return -110;

     label8:
        exitmonitor r25;

     label9:
        throw $r24;

        catch com.android.server.pm.Installer$InstallerException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
        catch java.lang.Throwable from label8 to label9 with label4;
    }

    boolean doPostDeleteLI(boolean)
    {
        com.android.server.pm.PackageManagerService$MoveInstallArgs r0;
        boolean z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$MoveInstallArgs;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    int doPostInstall(int, int)
    {
        com.android.server.pm.PackageManagerService$MoveInstallArgs r0;
        int i0, i1;
        com.android.server.pm.PackageManagerService$MoveInfo $r1, $r3;
        java.lang.String $r2, $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$MoveInstallArgs;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 1 goto label1;

        $r3 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String fromUuid>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: boolean cleanUp(java.lang.String)>($r4);

        goto label2;

     label1:
        $r1 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r2 = $r1.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String toUuid>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: boolean cleanUp(java.lang.String)>($r2);

     label2:
        return i0;
    }

    int doPreInstall(int)
    {
        com.android.server.pm.PackageManagerService$MoveInstallArgs r0;
        int i0;
        com.android.server.pm.PackageManagerService$MoveInfo $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$MoveInstallArgs;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        $r1 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r2 = $r1.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String toUuid>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: boolean cleanUp(java.lang.String)>($r2);

     label1:
        return i0;
    }

    boolean doRename(int, com.android.server.pm.parsing.pkg.ParsedPackage)
    {
        com.android.server.pm.PackageManagerService$MoveInstallArgs r0;
        int i0;
        com.android.server.pm.parsing.pkg.ParsedPackage r1;
        com.android.server.pm.PackageManagerService$MoveInfo $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.pm.PackageManagerService$MoveInstallArgs;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.pm.parsing.pkg.ParsedPackage;

        if i0 == 1 goto label1;

        $r2 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: com.android.server.pm.PackageManagerService$MoveInfo move>;

        $r3 = $r2.<com.android.server.pm.PackageManagerService$MoveInfo: java.lang.String toUuid>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: boolean cleanUp(java.lang.String)>($r3);

        return 0;

     label1:
        return 1;
    }

    java.lang.String getCodePath()
    {
        com.android.server.pm.PackageManagerService$MoveInstallArgs r0;
        java.io.File r1;
        java.lang.String r2;

        r0 := @this: com.android.server.pm.PackageManagerService$MoveInstallArgs;

        r1 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: java.io.File codeFile>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    java.lang.String getResourcePath()
    {
        com.android.server.pm.PackageManagerService$MoveInstallArgs r0;
        java.io.File r1;
        java.lang.String r2;

        r0 := @this: com.android.server.pm.PackageManagerService$MoveInstallArgs;

        r1 = r0.<com.android.server.pm.PackageManagerService$MoveInstallArgs: java.io.File resourceFile>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }
}
