class com.android.server.pm.PackageManagerService$PackageManagerInternalImpl extends android.content.pm.PackageManagerInternal
{
    final com.android.server.pm.PackageManagerService this$0;

    private void <init>(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        com.android.server.pm.PackageManagerService r1;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0> = r1;

        specialinvoke r0.<android.content.pm.PackageManagerInternal: void <init>()>();

        return;
    }

    void <init>(com.android.server.pm.PackageManagerService, com.android.server.pm.PackageManagerService$1)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        com.android.server.pm.PackageManagerService r1;
        com.android.server.pm.PackageManagerService$1 r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        r2 := @parameter1: com.android.server.pm.PackageManagerService$1;

        specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void <init>(com.android.server.pm.PackageManagerService)>(r1);

        return;
    }

    private transient java.lang.String[] filterOnlySystemPackages(java.lang.String[])
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, $i1, i4;
        java.lang.String r2, $r11, $r14;
        java.lang.Object r3;
        java.util.ArrayList $r4;
        java.lang.String[] $r5, $r7, $r16, r18;
        java.lang.Object[] $r6, $r15;
        com.android.server.pm.PackageManagerService $r8;
        boolean $z0;
        java.lang.Throwable $r17;
        com.android.server.pm.parsing.pkg.AndroidPackage r19;
        java.lang.StringBuilder r20, r21;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r18 := @parameter0: java.lang.String[];

        if r18 != null goto label01;

        $r15 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>(class "Ljava/lang/String;");

        $r16 = (java.lang.String[]) $r15;

        return $r16;

     label01:
        $r4 = new java.util.ArrayList;

        $i1 = lengthof r18;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1);

        i0 = lengthof r18;

        i4 = 0;

     label02:
        if i4 >= i0 goto label17;

        r2 = r18[i4];

        $r8 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r3 = $r8.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r3;

        if r2 != null goto label05;

     label03:
        exitmonitor r3;

     label04:
        goto label13;

     label05:
        r19 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.parsing.pkg.AndroidPackage getPackage(java.lang.String)>(r2);

     label06:
        if r19 != null goto label09;

     label07:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find package ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r14);

        exitmonitor r3;

     label08:
        goto label13;

     label09:
        $z0 = interfaceinvoke r19.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSystem()>();

        if $z0 != 0 goto label11;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not system");

        $r11 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r11);

        exitmonitor r3;

     label10:
        goto label13;

     label11:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label12:
        exitmonitor r3;

     label13:
        i4 = i4 + 1;

        goto label02;

     label14:
        $r17 := @caughtexception;

     label15:
        exitmonitor r3;

     label16:
        throw $r17;

     label17:
        $r5 = newarray (java.lang.String)[0];

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (java.lang.String[]) $r6;

        return $r7;

        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    private java.lang.String[] getKnownPackageNamesInternal(int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1;
        com.android.server.pm.PackageManagerService $r1, $r4, $r10, $r14, $r18, $r22, $r26, $r30, $r34, $r36, $r40, $r44, $r48, $r52;
        java.lang.String $r2, $r5, $r11, $r15, $r19, $r23, $r27, $r31, $r35, $r37, $r42, $r45, $r49, $r53;
        boolean $z0;
        java.lang.String[] $r3, $r7, $r8, $r9, $r12, $r13, $r16, $r17, $r20, $r21, $r24, $r25, $r28, $r29, $r32, $r33, $r38, $r39, $r43, $r46, $r47, $r50, $r51, $r54, $r55, $r57, r58;
        java.lang.Object[] $r6, $r56;
        com.android.server.pm.permission.PermissionManagerServiceInternal $r41;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        tableswitch(i0)
        {
            case 0: goto label17;
            case 1: goto label16;
            case 2: goto label15;
            case 3: goto label14;
            case 4: goto label13;
            case 5: goto label12;
            case 6: goto label11;
            case 7: goto label10;
            case 8: goto label09;
            case 9: goto label08;
            case 10: goto label07;
            case 11: goto label06;
            case 12: goto label01;
            case 13: goto label01;
            case 14: goto label05;
            case 15: goto label02;
            default: goto label01;
        };

     label01:
        $r56 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>(class "Ljava/lang/String;");

        $r57 = (java.lang.String[]) $r56;

        return $r57;

     label02:
        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r2 = $r1.<com.android.server.pm.PackageManagerService: java.lang.String mRetailDemoPackage>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label03;

        $r6 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>(class "Ljava/lang/String;");

        r58 = (java.lang.String[]) $r6;

        goto label04;

     label03:
        $r3 = newarray (java.lang.String)[1];

        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: java.lang.String mRetailDemoPackage>;

        $r3[0] = $r5;

        r58 = $r3;

     label04:
        return r58;

     label05:
        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "com.android.companiondevicemanager";

        $r8 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String[] filterOnlySystemPackages(java.lang.String[])>($r7);

        return $r8;

     label06:
        $r9 = newarray (java.lang.String)[1];

        $r10 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r11 = $r10.<com.android.server.pm.PackageManagerService: java.lang.String mAppPredictionServicePackage>;

        $r9[0] = $r11;

        $r12 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String[] filterOnlySystemPackages(java.lang.String[])>($r9);

        return $r12;

     label07:
        $r13 = newarray (java.lang.String)[1];

        $r14 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r15 = $r14.<com.android.server.pm.PackageManagerService: java.lang.String mIncidentReportApproverPackage>;

        $r13[0] = $r15;

        $r16 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String[] filterOnlySystemPackages(java.lang.String[])>($r13);

        return $r16;

     label08:
        $r17 = newarray (java.lang.String)[1];

        $r18 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r19 = $r18.<com.android.server.pm.PackageManagerService: java.lang.String mConfiguratorPackage>;

        $r17[0] = $r19;

        $r20 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String[] filterOnlySystemPackages(java.lang.String[])>($r17);

        return $r20;

     label09:
        $r21 = newarray (java.lang.String)[1];

        $r22 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r23 = $r22.<com.android.server.pm.PackageManagerService: java.lang.String mDocumenterPackage>;

        $r21[0] = $r23;

        $r24 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String[] filterOnlySystemPackages(java.lang.String[])>($r21);

        return $r24;

     label10:
        $r25 = newarray (java.lang.String)[1];

        $r26 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r27 = $r26.<com.android.server.pm.PackageManagerService: java.lang.String mWellbeingPackage>;

        $r25[0] = $r27;

        $r28 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String[] filterOnlySystemPackages(java.lang.String[])>($r25);

        return $r28;

     label11:
        $r29 = newarray (java.lang.String)[1];

        $r30 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r31 = $r30.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredPermissionControllerPackage>;

        $r29[0] = $r31;

        $r32 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String[] filterOnlySystemPackages(java.lang.String[])>($r29);

        return $r32;

     label12:
        $r33 = newarray (java.lang.String)[2];

        $r34 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r35 = $r34.<com.android.server.pm.PackageManagerService: java.lang.String mDefaultTextClassifierPackage>;

        $r33[0] = $r35;

        $r36 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r37 = $r36.<com.android.server.pm.PackageManagerService: java.lang.String mSystemTextClassifierPackageName>;

        $r33[1] = $r37;

        $r38 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String[] filterOnlySystemPackages(java.lang.String[])>($r33);

        return $r38;

     label13:
        $r39 = newarray (java.lang.String)[1];

        $r40 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r41 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.permission.PermissionManagerServiceInternal access$6600(com.android.server.pm.PackageManagerService)>($r40);

        $r42 = virtualinvoke $r41.<com.android.server.pm.permission.PermissionManagerServiceInternal: java.lang.String getDefaultBrowser(int)>(i1);

        $r39[0] = $r42;

        return $r39;

     label14:
        $r43 = newarray (java.lang.String)[1];

        $r44 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r45 = $r44.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage>;

        $r43[0] = $r45;

        $r46 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String[] filterOnlySystemPackages(java.lang.String[])>($r43);

        return $r46;

     label15:
        $r47 = newarray (java.lang.String)[1];

        $r48 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r49 = $r48.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredInstallerPackage>;

        $r47[0] = $r49;

        $r50 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String[] filterOnlySystemPackages(java.lang.String[])>($r47);

        return $r50;

     label16:
        $r51 = newarray (java.lang.String)[1];

        $r52 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r53 = $r52.<com.android.server.pm.PackageManagerService: java.lang.String mSetupWizardPackage>;

        $r51[0] = $r53;

        $r54 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String[] filterOnlySystemPackages(java.lang.String[])>($r51);

        return $r54;

     label17:
        $r55 = newarray (java.lang.String)[1];

        $r55[0] = "android";

        return $r55;
    }

    private android.content.pm.PackageParser$SigningDetails getSigningDetails(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        com.android.server.pm.Settings $r4;
        boolean $z0, $z1;
        com.android.server.pm.PackageSetting $r5;
        com.android.server.pm.PackageSignatures $r6, $r8;
        com.android.server.pm.SharedUserSetting $r7;
        java.lang.Throwable $r9;
        int i0, i1;
        com.android.server.pm.SettingBase r10;
        android.content.pm.PackageParser$SigningDetails r11, r12, r13;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r10 = virtualinvoke $r4.<com.android.server.pm.Settings: com.android.server.pm.SettingBase getSettingLPr(int)>(i1);

     label02:
        if r10 == null goto label07;

     label03:
        $z0 = r10 instanceof com.android.server.pm.SharedUserSetting;

        if $z0 == 0 goto label05;

        $r7 = (com.android.server.pm.SharedUserSetting) r10;

        $r8 = $r7.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        r11 = $r8.<com.android.server.pm.PackageSignatures: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        exitmonitor r1;

     label04:
        return r11;

     label05:
        $z1 = r10 instanceof com.android.server.pm.PackageSetting;

        if $z1 == 0 goto label07;

        $r5 = (com.android.server.pm.PackageSetting) r10;

        $r6 = $r5.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        r12 = $r6.<com.android.server.pm.PackageSignatures: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        exitmonitor r1;

     label06:
        return r12;

     label07:
        r13 = <android.content.pm.PackageParser$SigningDetails: android.content.pm.PackageParser$SigningDetails UNKNOWN>;

        exitmonitor r1;

     label08:
        return r13;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private android.content.pm.PackageParser$SigningDetails getSigningDetails(java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1, $r5;
        com.android.server.pm.PackageManagerService $r2, $r3;
        android.util.ArrayMap $r4;
        java.lang.Throwable $r6;
        java.lang.String r7;
        com.android.server.pm.parsing.pkg.AndroidPackage r8;
        android.content.pm.PackageParser$SigningDetails r9;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r7 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (com.android.server.pm.parsing.pkg.AndroidPackage) $r5;

     label2:
        if r8 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return null;

     label5:
        r9 = interfaceinvoke r8.<com.android.server.pm.parsing.pkg.AndroidPackage: android.content.pm.PackageParser$SigningDetails getSigningDetails()>();

        exitmonitor r1;

     label6:
        return r9;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    static boolean lambda$removeAllNonSystemPackageSuspensions$0(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $r1 = "android";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    static boolean lambda$removeNonSystemPackageSuspensions$1(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $r1 = "android";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public void addIsolatedUid(int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r3, $r4;
        android.util.SparseIntArray $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: android.util.SparseIntArray mIsolatedOwners>;

        virtualinvoke $r5.<android.util.SparseIntArray: void put(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean canAccessComponent(int, android.content.ComponentName, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1;
        java.lang.Object r1, $r8;
        com.android.server.pm.PackageSetting r2;
        com.android.server.pm.PackageManagerService $r3, $r4, $r9;
        com.android.server.pm.Settings $r5;
        android.util.ArrayMap $r6;
        java.lang.String $r7;
        boolean $z0, z1;
        java.lang.Throwable $r10;
        android.content.ComponentName r11;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        r11 := @parameter1: android.content.ComponentName;

        i1 := @parameter2: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r6 = $r5.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r7 = virtualinvoke r11.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r8 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r7);

        r2 = (com.android.server.pm.PackageSetting) $r8;

     label02:
        if r2 == null goto label05;

     label03:
        $r9 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean access$9100(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageSetting,int,android.content.ComponentName,int,int)>($r9, r2, i0, r11, 0, i1);

        if $z0 != 0 goto label05;

     label04:
        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z1;

     label08:
        $r10 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean canAccessInstantApps(int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1;
        com.android.server.pm.PackageManagerService $r1;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean access$9000(com.android.server.pm.PackageManagerService,int,int)>($r1, i0, i1);

        return $z0;
    }

    public void clearBlockUninstallForUser(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r3, $r4, $r6;
        com.android.server.pm.Settings $r5, $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r5.<com.android.server.pm.Settings: void clearBlockUninstallLPw(int)>(i0);

        $r6 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r7 = $r6.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r7.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean compileLayouts(java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1, $r5;
        com.android.server.pm.PackageManagerService $r2, $r3, $r6;
        android.util.ArrayMap $r4;
        com.android.server.pm.dex.ArtManagerService $r7;
        boolean $z0;
        java.lang.Throwable $r8;
        java.lang.String r9;
        com.android.server.pm.parsing.pkg.AndroidPackage r10;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r9 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r9);

        r10 = (com.android.server.pm.parsing.pkg.AndroidPackage) $r5;

     label2:
        if r10 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        exitmonitor r1;

     label6:
        $r6 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r7 = $r6.<com.android.server.pm.PackageManagerService: com.android.server.pm.dex.ArtManagerService mArtManagerService>;

        $z0 = virtualinvoke $r7.<com.android.server.pm.dex.ArtManagerService: boolean compileLayouts(com.android.server.pm.parsing.pkg.AndroidPackage)>(r10);

        return $z0;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean filterAppAccess(com.android.server.pm.parsing.pkg.AndroidPackage, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1;
        java.lang.Object r1;
        boolean z0;
        com.android.server.pm.PackageManagerService $r2, $r4;
        java.lang.String $r3;
        java.lang.Throwable $r5;
        com.android.server.pm.parsing.pkg.AndroidPackage r6;
        com.android.server.pm.PackageSetting r7;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r6 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = interfaceinvoke r6.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        r7 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageSetting getPackageSetting(java.lang.String)>($r3);

        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean access$6100(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageSetting,int,int)>($r4, r7, i0, i1);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean filterAppAccess(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1;
        java.lang.Object r1;
        boolean z0;
        com.android.server.pm.PackageManagerService $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;
        com.android.server.pm.PackageSetting r6;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageSetting getPackageSetting(java.lang.String)>(r5);

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean access$6100(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageSetting,int,int)>($r3, r6, i0, i1);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void finishPackageInstall(int, boolean)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        boolean z0;
        com.android.server.pm.PackageManagerService $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r1.<com.android.server.pm.PackageManagerService: void finishPackageInstall(int,boolean)>(i0, z0);

        return;
    }

    public void flushPackageRestrictions(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        staticinvoke <com.android.server.pm.PackageManagerService: void access$4800(com.android.server.pm.PackageManagerService,int)>($r4, i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void forEachInstalledPackage(java.util.function.Consumer, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.util.function.Consumer r1;
        int i0;
        com.android.server.pm.PackageManagerService $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.util.function.Consumer;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r2.<com.android.server.pm.PackageManagerService: void forEachInstalledPackage(java.util.function.Consumer,int)>(r1, i0);

        return;
    }

    public void forEachPackage(java.util.function.Consumer)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.util.function.Consumer r1;
        com.android.server.pm.PackageManagerService $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r2.<com.android.server.pm.PackageManagerService: void forEachPackage(java.util.function.Consumer)>(r1);

        return;
    }

    public void forEachPackageSetting(java.util.function.Consumer)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1, $r9;
        com.android.server.pm.PackageManagerService $r2, $r3, $r6;
        com.android.server.pm.Settings $r4, $r7;
        android.util.ArrayMap $r5, $r8;
        int $i0, i1;
        com.android.server.pm.PackageSetting $r10;
        java.lang.Throwable $r11;
        java.util.function.Consumer r12;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r12 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

        i1 = 0;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r5 = $r4.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $i0 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        if i1 >= $i0 goto label3;

        $r6 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r7 = $r6.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r8 = $r7.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r10 = (com.android.server.pm.PackageSetting) $r9;

        interfaceinvoke r12.<java.util.function.Consumer: void accept(java.lang.Object)>($r10);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r11 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void freeStorage(java.lang.String, long, int) throws java.io.IOException
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        long l0;
        int i1;
        com.android.server.pm.PackageManagerService $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r2.<com.android.server.pm.PackageManagerService: void freeStorage(java.lang.String,long,int)>(r1, l0, i1);

        return;
    }

    public android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        android.content.ComponentName r1;
        int i0, i1, i2;
        com.android.server.pm.PackageManagerService $r2;
        android.content.pm.ActivityInfo $r3;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo access$7200(com.android.server.pm.PackageManagerService,android.content.ComponentName,int,int,int)>($r2, r1, i0, i1, i2);

        return $r3;
    }

    public java.util.List getApksInApex(java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        com.android.server.pm.PackageManagerService $r2;
        com.android.server.pm.ApexManager $r3;
        java.util.List $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.ApexManager access$8100(com.android.server.pm.PackageManagerService)>($r2);

        $r4 = virtualinvoke $r3.<com.android.server.pm.ApexManager: java.util.List getApksInApex(java.lang.String)>(r1);

        return $r4;
    }

    public int getApplicationEnabledState(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        com.android.server.pm.Settings $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        int i0, i1;
        com.android.server.pm.PackageSetting r7;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r7 = virtualinvoke $r4.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPr(java.lang.String)>(r6);

     label2:
        if r7 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        i1 = virtualinvoke r7.<com.android.server.pm.PackageSetting: int getEnabled(int)>(i0);

        exitmonitor r1;

     label6:
        return i1;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        int i0, i1, i2;
        com.android.server.pm.PackageManagerService $r2;
        android.content.pm.ApplicationInfo $r3;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo access$7100(com.android.server.pm.PackageManagerService,java.lang.String,int,int,int)>($r2, r1, i0, i1, i2);

        return $r3;
    }

    public android.util.SparseArray getAppsWithSharedUserIds()
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        java.lang.Throwable $r4;
        android.util.SparseArray r5;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r5 = staticinvoke <com.android.server.pm.PackageManagerService: android.util.SparseArray access$9300(com.android.server.pm.PackageManagerService)>($r3);

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public long getCeDataInode(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1, $r6;
        long l1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        com.android.server.pm.Settings $r4;
        android.util.ArrayMap $r5;
        java.lang.Throwable $r7;
        java.lang.String r8;
        com.android.server.pm.PackageSetting r9;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r5 = $r4.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (com.android.server.pm.PackageSetting) $r6;

     label2:
        if r9 == null goto label5;

     label3:
        l1 = virtualinvoke r9.<com.android.server.pm.PackageSetting: long getCeDataInode(int)>(i0);

        exitmonitor r1;

     label4:
        return l1;

     label5:
        exitmonitor r1;

     label6:
        return 0L;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.content.ComponentName getDefaultHomeActivity(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        com.android.server.pm.PackageManagerService $r1;
        android.content.ComponentName $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r2 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.ComponentName access$7500(com.android.server.pm.PackageManagerService,int)>($r1, i0);

        return $r2;
    }

    public android.util.ArraySet getDisabledComponents(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        com.android.server.pm.Settings $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        com.android.server.pm.PackageSetting r7;
        android.util.ArraySet r8, r9;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r7 = virtualinvoke $r4.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPr(java.lang.String)>(r6);

     label2:
        if r7 != null goto label5;

     label3:
        r8 = new android.util.ArraySet;

        specialinvoke r8.<android.util.ArraySet: void <init>()>();

        exitmonitor r1;

     label4:
        return r8;

     label5:
        r9 = virtualinvoke r7.<com.android.server.pm.PackageSetting: android.util.ArraySet getDisabledComponents(int)>(i0);

        exitmonitor r1;

     label6:
        return r9;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public com.android.server.pm.PackageSetting getDisabledSystemPackage(java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        com.android.server.pm.Settings $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        com.android.server.pm.PackageSetting r7;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r6 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r7 = virtualinvoke $r4.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>(r6);

        exitmonitor r1;

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String getDisabledSystemPackageName(java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1, r4;
        com.android.server.pm.PackageSetting r2;
        com.android.server.pm.parsing.pkg.AndroidPackage r3;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageSetting getDisabledSystemPackage(java.lang.String)>(r1);

        if r2 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        r3 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

     label2:
        if r3 != null goto label3;

        r4 = null;

        goto label4;

     label3:
        r4 = interfaceinvoke r3.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

     label4:
        return r4;
    }

    public int getDistractingPackageRestrictions(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1, $r6;
        com.android.server.pm.PackageManagerService $r2, $r3;
        com.android.server.pm.Settings $r4;
        android.util.ArrayMap $r5;
        java.lang.Throwable $r7;
        java.lang.String r8;
        int i0, i1;
        com.android.server.pm.PackageSetting r9;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r5 = $r4.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (com.android.server.pm.PackageSetting) $r6;

     label02:
        if r9 == null goto label05;

     label03:
        i1 = virtualinvoke r9.<com.android.server.pm.PackageSetting: int getDistractionFlags(int)>(i0);

     label04:
        goto label06;

     label05:
        i1 = 0;

     label06:
        exitmonitor r1;

     label07:
        return i1;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.util.ArraySet getEnabledComponents(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        com.android.server.pm.Settings $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        com.android.server.pm.PackageSetting r7;
        android.util.ArraySet r8, r9;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r7 = virtualinvoke $r4.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPr(java.lang.String)>(r6);

     label2:
        if r7 != null goto label5;

     label3:
        r8 = new android.util.ArraySet;

        specialinvoke r8.<android.util.ArraySet: void <init>()>();

        exitmonitor r1;

     label4:
        return r8;

     label5:
        r9 = virtualinvoke r7.<com.android.server.pm.PackageSetting: android.util.ArraySet getEnabledComponents(int)>(i0);

        exitmonitor r1;

     label6:
        return r9;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.content.ComponentName getHomeActivitiesAsUser(java.util.List, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.util.List r1;
        int i0;
        com.android.server.pm.PackageManagerService $r2;
        android.content.ComponentName $r3;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService: android.content.ComponentName getHomeActivitiesAsUser(java.util.List,int)>(r1, i0);

        return $r3;
    }

    public java.util.List getInstalledApplications(int, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1, i2;
        com.android.server.pm.PackageManagerService $r1;
        java.util.List $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r2 = staticinvoke <com.android.server.pm.PackageManagerService: java.util.List access$5900(com.android.server.pm.PackageManagerService,int,int,int)>($r1, i0, i1, i2);

        return $r2;
    }

    public java.lang.String getInstantAppPackageName(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        com.android.server.pm.PackageManagerService $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r2 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String access$6000(com.android.server.pm.PackageManagerService,int)>($r1, i0);

        return $r2;
    }

    public java.lang.String[] getKnownPackageNames(int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1;
        com.android.server.pm.PackageManagerService $r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r2 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String[] getKnownPackageNamesInternal(int,int)>(i0, i1);

        $r3 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] access$6500(com.android.server.pm.PackageManagerService,java.lang.String[])>($r1, $r2);

        return $r3;
    }

    public java.util.List getMimeGroup(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1, r2;
        com.android.server.pm.PackageManagerService $r3;
        java.util.List $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = virtualinvoke $r3.<com.android.server.pm.PackageManagerService: java.util.List getMimeGroup(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public java.lang.String getNameForUid(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        com.android.server.pm.PackageManagerService $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.pm.PackageManagerService: java.lang.String getNameForUid(int)>(i0);

        return $r2;
    }

    public java.util.List getOverlayPackages(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r2, $r8;
        java.util.ArrayList $r3;
        com.android.server.pm.PackageManagerService $r4, $r5, $r10;
        android.util.ArrayMap $r6;
        java.util.Collection $r7;
        boolean $z0;
        java.lang.String $r9, $r11;
        com.android.server.pm.PackageSetting $r12;
        java.lang.Throwable $r13;
        java.util.Iterator r14;
        com.android.server.pm.parsing.pkg.AndroidPackage r15;
        android.content.pm.PackageInfo r16;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r2 = $r4.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r5 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r6 = $r5.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.util.Collection values()>();

        r14 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r8 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.android.server.pm.parsing.pkg.AndroidPackage) $r8;

        $r9 = interfaceinvoke r15.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getOverlayTarget()>();

        if $r9 == null goto label05;

        $r10 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r11 = interfaceinvoke r15.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $r12 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageSetting getPackageSetting(java.lang.String)>($r11);

        r16 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo access$8200(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageSetting,int,int)>($r10, $r12, 0, i0);

     label03:
        if r16 == null goto label05;

     label04:
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r16);

     label05:
        goto label02;

     label06:
        exitmonitor r2;

     label07:
        return $r3;

     label08:
        $r13 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public com.android.server.pm.parsing.pkg.AndroidPackage getPackage(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1, $r8;
        java.lang.String[] r2;
        com.android.server.pm.PackageManagerService $r3, $r4, $r5;
        java.lang.String $r6;
        android.util.ArrayMap $r7;
        java.lang.Throwable $r9;
        int i0, i1, i2;
        com.android.server.pm.parsing.pkg.AndroidPackage r10;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r2 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] access$6300(com.android.server.pm.PackageManagerService,int,int)>($r4, i0, 1000);

     label02:
        r10 = null;

        if r2 != null goto label03;

        i1 = 0;

        goto label04;

     label03:
        i1 = lengthof r2;

     label04:
        i2 = 0;

     label05:
        if r10 != null goto label08;

        if i2 >= i1 goto label08;

     label06:
        $r5 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r7 = $r5.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        $r6 = r2[i2];

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        r10 = (com.android.server.pm.parsing.pkg.AndroidPackage) $r8;

     label07:
        i2 = i2 + 1;

        goto label05;

     label08:
        exitmonitor r1;

     label09:
        return r10;

     label10:
        $r9 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public com.android.server.pm.parsing.pkg.AndroidPackage getPackage(java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1, $r6;
        com.android.server.pm.PackageManagerService $r2, $r3, $r4;
        android.util.ArrayMap $r5;
        java.lang.Throwable $r7;
        java.lang.String r8, r9;
        com.android.server.pm.parsing.pkg.AndroidPackage r10;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r8 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r9 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String access$6200(com.android.server.pm.PackageManagerService,java.lang.String,long)>($r3, r8, -1L);

        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r9);

        r10 = (com.android.server.pm.parsing.pkg.AndroidPackage) $r6;

        exitmonitor r1;

     label2:
        return r10;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.pm.PackageInfo getPackageInfo(java.lang.String, int, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        int i0, i1, i2;
        com.android.server.pm.PackageManagerService $r2;
        android.content.pm.PackageInfo $r3;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo access$6900(com.android.server.pm.PackageManagerService,java.lang.String,long,int,int,int)>($r2, r1, -1L, i0, i1, i2);

        return $r3;
    }

    public com.android.server.pm.PackageList getPackageList(android.content.pm.PackageManagerInternal$PackageListObserver)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1, $r11;
        int i0, i1;
        java.util.ArrayList r2;
        com.android.server.pm.PackageList r3;
        com.android.server.pm.PackageManagerService $r4, $r5, $r7, $r9;
        android.util.ArrayMap $r6, $r10;
        android.util.ArraySet $r8;
        java.lang.String $r12;
        java.lang.Throwable $r13;
        android.content.pm.PackageManagerInternal$PackageListObserver r14;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r14 := @parameter0: android.content.pm.PackageManagerInternal$PackageListObserver;

        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r4.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r6 = $r5.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        i0 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>(i0);

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r9 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r10 = $r9.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r12 = (java.lang.String) $r11;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        r3 = new com.android.server.pm.PackageList;

        specialinvoke r3.<com.android.server.pm.PackageList: void <init>(java.util.List,android.content.pm.PackageManagerInternal$PackageListObserver)>(r2, r14);

     label07:
        if r14 == null goto label09;

     label08:
        $r7 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r8 = staticinvoke <com.android.server.pm.PackageManagerService: android.util.ArraySet access$6400(com.android.server.pm.PackageManagerService)>($r7);

        virtualinvoke $r8.<android.util.ArraySet: boolean add(java.lang.Object)>(r3);

     label09:
        exitmonitor r1;

     label10:
        return r3;

     label11:
        $r13 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public com.android.server.pm.PackageSetting getPackageSetting(java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        com.android.server.pm.PackageManagerService $r2;
        com.android.server.pm.PackageSetting $r3;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageSetting getPackageSetting(java.lang.String)>(r1);

        return $r3;
    }

    public int getPackageTargetSdkVersion(java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1;
        int i0;
        com.android.server.pm.PackageManagerService $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r5 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        i0 = staticinvoke <com.android.server.pm.PackageManagerService: int access$8900(com.android.server.pm.PackageManagerService,java.lang.String)>($r3, r5);

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getPackageUid(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        int i0, i1, $i2;
        com.android.server.pm.PackageManagerService $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $i2 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int,int)>(r1, i0, i1);

        return $i2;
    }

    public int getPackageUidInternal(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        int i0, i1, $i2;
        com.android.server.pm.PackageManagerService $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $i2 = staticinvoke <com.android.server.pm.PackageManagerService: int access$7000(com.android.server.pm.PackageManagerService,java.lang.String,int,int,int)>($r2, r1, i0, i1, 1000);

        return $i2;
    }

    public int[] getPermissionGids(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;
        int[] r6;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r6 = virtualinvoke $r3.<com.android.server.pm.PackageManagerService: int[] getPermissionGidsLocked(java.lang.String,int)>(r5, i0);

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.util.ArrayMap getProcessesForUid(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        java.lang.Throwable $r4;
        android.util.ArrayMap r5;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r5 = virtualinvoke $r3.<com.android.server.pm.PackageManagerService: android.util.ArrayMap getProcessesForUidLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String getSetupWizardPackageName()
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        com.android.server.pm.PackageManagerService $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r2 = $r1.<com.android.server.pm.PackageManagerService: java.lang.String mSetupWizardPackage>;

        return $r2;
    }

    public java.lang.String[] getSharedUserPackagesForPackage(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;
        java.lang.String[] r6;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r6 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] access$9400(com.android.server.pm.PackageManagerService,java.lang.String,int)>($r3, r5, i0);

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.pm.SuspendDialogInfo getSuspendedDialogInfo(java.lang.String, java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1, $r6, $r8;
        com.android.server.pm.PackageManagerService $r2, $r3;
        com.android.server.pm.Settings $r4;
        android.util.ArrayMap $r5, $r7;
        boolean $z0;
        java.lang.Throwable $r9;
        java.lang.String r10, r11;
        com.android.server.pm.PackageSetting r12;
        android.content.pm.SuspendDialogInfo r13;
        android.content.pm.PackageUserState r14;
        android.content.pm.PackageUserState$SuspendParams r15;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r10 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r5 = $r4.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r10);

        r12 = (com.android.server.pm.PackageSetting) $r6;

     label02:
        r13 = null;

        if r12 == null goto label08;

     label03:
        r14 = virtualinvoke r12.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i0);

        $z0 = r14.<android.content.pm.PackageUserState: boolean suspended>;

        if $z0 == 0 goto label08;

        $r7 = r14.<android.content.pm.PackageUserState: android.util.ArrayMap suspendParams>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r11);

        r15 = (android.content.pm.PackageUserState$SuspendParams) $r8;

     label04:
        if r15 == null goto label06;

     label05:
        r13 = r15.<android.content.pm.PackageUserState$SuspendParams: android.content.pm.SuspendDialogInfo dialogInfo>;

     label06:
        exitmonitor r1;

     label07:
        return r13;

     label08:
        exitmonitor r1;

     label09:
        return null;

     label10:
        $r9 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public android.os.Bundle getSuspendedPackageLauncherExtras(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1, $r7, $r10;
        android.content.pm.PackageUserState$SuspendParams r2;
        com.android.server.pm.PackageManagerService $r3, $r4;
        com.android.server.pm.Settings $r5;
        android.util.ArrayMap $r6, $r8, $r9;
        boolean $z0;
        int $i0, i1, i2, $i3;
        android.os.PersistableBundle $r11, $r12;
        java.lang.Throwable $r13;
        java.lang.String r14;
        com.android.server.pm.PackageSetting r15;
        android.os.Bundle r16;
        android.content.pm.PackageUserState r17;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r14 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r6 = $r5.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r14);

        r15 = (com.android.server.pm.PackageSetting) $r7;

        r16 = new android.os.Bundle;

        specialinvoke r16.<android.os.Bundle: void <init>()>();

     label02:
        if r15 == null goto label09;

     label03:
        r17 = virtualinvoke r15.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $z0 = r17.<android.content.pm.PackageUserState: boolean suspended>;

        if $z0 == 0 goto label09;

     label04:
        i2 = 0;

     label05:
        $r8 = r17.<android.content.pm.PackageUserState: android.util.ArrayMap suspendParams>;

        $i0 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        if i2 >= $i0 goto label09;

        $r9 = r17.<android.content.pm.PackageUserState: android.util.ArrayMap suspendParams>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r2 = (android.content.pm.PackageUserState$SuspendParams) $r10;

     label06:
        if r2 == null goto label08;

     label07:
        $r11 = r2.<android.content.pm.PackageUserState$SuspendParams: android.os.PersistableBundle launcherExtras>;

        if $r11 == null goto label08;

        $r12 = r2.<android.content.pm.PackageUserState$SuspendParams: android.os.PersistableBundle launcherExtras>;

        virtualinvoke r16.<android.os.Bundle: void putAll(android.os.PersistableBundle)>($r12);

     label08:
        i2 = i2 + 1;

        goto label05;

     label09:
        $i3 = virtualinvoke r16.<android.os.Bundle: int size()>();

        if $i3 <= 0 goto label11;

     label10:
        goto label12;

     label11:
        r16 = null;

     label12:
        exitmonitor r1;

     label13:
        return r16;

     label14:
        $r13 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public java.lang.String getSuspendingPackage(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1, $r7, $r10;
        android.content.pm.PackageUserState r2;
        com.android.server.pm.PackageManagerService $r3, $r4;
        com.android.server.pm.Settings $r5;
        android.util.ArrayMap $r6, $r8, $r9;
        boolean $z0, $z1;
        int $i0, i1, i2;
        java.lang.String $r11, r13, r15;
        java.lang.Throwable $r12;
        com.android.server.pm.PackageSetting r14;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r13 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r6 = $r5.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r14 = (com.android.server.pm.PackageSetting) $r7;

     label02:
        if r14 == null goto label10;

     label03:
        r2 = virtualinvoke r14.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $z0 = r2.<android.content.pm.PackageUserState: boolean suspended>;

        if $z0 == 0 goto label10;

     label04:
        r15 = null;

        i2 = 0;

     label05:
        $r8 = r2.<android.content.pm.PackageUserState: android.util.ArrayMap suspendParams>;

        $i0 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        if i2 >= $i0 goto label08;

        $r9 = r2.<android.content.pm.PackageUserState: android.util.ArrayMap suspendParams>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        r15 = (java.lang.String) $r10;

        $r11 = "android";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z1 == 0 goto label07;

        exitmonitor r1;

     label06:
        return r15;

     label07:
        i2 = i2 + 1;

        goto label05;

     label08:
        exitmonitor r1;

     label09:
        return r15;

     label10:
        exitmonitor r1;

     label11:
        return null;

     label12:
        $r12 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public android.content.ComponentName getSystemUiServiceComponent()
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        com.android.server.pm.PackageManagerService $r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        java.lang.String $r4;
        android.content.ComponentName $r5;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r2 = $r1.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(17039950);

        $r5 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r4);

        return $r5;
    }

    public java.util.List getTargetPackageNames(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r2, $r9;
        com.android.server.pm.parsing.pkg.AndroidPackage r3;
        java.util.ArrayList $r4;
        com.android.server.pm.PackageManagerService $r5, $r6;
        android.util.ArrayMap $r7;
        java.util.Collection $r8;
        boolean $z0;
        java.lang.String $r10, $r11;
        java.lang.Throwable $r12;
        java.util.Iterator r13;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r2 = $r5.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r7 = $r6.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.util.Collection values()>();

        r13 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.pm.parsing.pkg.AndroidPackage) $r9;

        $r10 = interfaceinvoke r3.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getOverlayTarget()>();

        if $r10 != null goto label3;

        $r11 = interfaceinvoke r3.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r11);

     label3:
        goto label2;

     label4:
        exitmonitor r2;

     label5:
        return $r4;

     label6:
        $r12 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int getUidTargetSdkVersion(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        i1 = staticinvoke <com.android.server.pm.PackageManagerService: int access$8800(com.android.server.pm.PackageManagerService,int)>($r4, i0);

        exitmonitor r1;

     label2:
        return i1;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void grantImplicitAccess(int, android.content.Intent, int, int, boolean)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1, i2, i3, $i4;
        boolean z0, $z1;
        java.lang.Object r1;
        com.android.server.pm.parsing.pkg.AndroidPackage r2, $r4;
        com.android.server.pm.PackageManagerService $r3, $r5, $r7, $r9;
        java.lang.String $r6;
        com.android.server.pm.AppsFilter $r8;
        com.android.server.pm.InstantAppRegistry $r10;
        java.lang.Throwable $r11;
        android.content.Intent r12;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        r12 := @parameter1: android.content.Intent;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.parsing.pkg.AndroidPackage getPackage(int)>(i2);

        i3 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, i1);

     label02:
        if r2 == null goto label14;

     label03:
        $r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.parsing.pkg.AndroidPackage getPackage(int)>(i3);

        if $r4 != null goto label05;

     label04:
        goto label14;

     label05:
        $r5 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r6 = interfaceinvoke r2.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean access$7800(com.android.server.pm.PackageManagerService,java.lang.String,int,int)>($r5, $r6, i0, i2);

        if $z1 == 0 goto label11;

     label06:
        if z0 != 0 goto label09;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r9 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r10 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.InstantAppRegistry access$4700(com.android.server.pm.PackageManagerService)>($r9);

        $i4 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i2);

        virtualinvoke $r10.<com.android.server.pm.InstantAppRegistry: void grantInstantAccessLPw(int,android.content.Intent,int,int)>(i0, r12, i1, $i4);

     label10:
        goto label12;

     label11:
        $r7 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r8 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.AppsFilter access$7900(com.android.server.pm.PackageManagerService)>($r7);

        virtualinvoke $r8.<com.android.server.pm.AppsFilter: void grantImplicitAccess(int,int)>(i3, i2);

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        exitmonitor r1;

     label15:
        return;

     label16:
        $r11 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public boolean hasInstantApplicationMetadata(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        com.android.server.pm.PackageManagerService $r2, $r3;
        com.android.server.pm.InstantAppRegistry $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.InstantAppRegistry access$4700(com.android.server.pm.PackageManagerService)>($r3);

        z0 = virtualinvoke $r4.<com.android.server.pm.InstantAppRegistry: boolean hasInstantApplicationMetadataLPr(java.lang.String,int)>(r6, i0);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean hasSignatureCapability(int, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1, i2;
        android.content.pm.PackageParser$SigningDetails r1, r2;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: android.content.pm.PackageParser$SigningDetails getSigningDetails(int)>(i0);

        r2 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: android.content.pm.PackageParser$SigningDetails getSigningDetails(int)>(i1);

        $z0 = virtualinvoke r1.<android.content.pm.PackageParser$SigningDetails: boolean checkCapability(android.content.pm.PackageParser$SigningDetails,int)>(r2, i2);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r2.<android.content.pm.PackageParser$SigningDetails: boolean hasAncestorOrSelf(android.content.pm.PackageParser$SigningDetails)>(r1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public boolean isApexPackage(java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        com.android.server.pm.PackageManagerService $r2;
        com.android.server.pm.ApexManager $r3;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.ApexManager access$8100(com.android.server.pm.PackageManagerService)>($r2);

        $z0 = virtualinvoke $r3.<com.android.server.pm.ApexManager: boolean isApexPackage(java.lang.String)>(r1);

        return $z0;
    }

    public boolean isCallerInstallerOfRecord(com.android.server.pm.parsing.pkg.AndroidPackage, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, $i1;
        java.lang.Object r1, $r9;
        com.android.server.pm.PackageManagerService $r2, $r4;
        java.lang.String $r3, $r7;
        com.android.server.pm.Settings $r5;
        com.android.server.pm.InstallSource $r6;
        android.util.ArrayMap $r8;
        boolean $z0, z1;
        java.lang.Throwable $r10;
        com.android.server.pm.parsing.pkg.AndroidPackage r11;
        com.android.server.pm.PackageSetting r12, r13;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r11 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

        z1 = 0;

        if r11 != null goto label03;

     label01:
        exitmonitor r1;

     label02:
        return 0;

     label03:
        $r3 = interfaceinvoke r11.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        r12 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageSetting getPackageSetting(java.lang.String)>($r3);

     label04:
        if r12 != null goto label07;

     label05:
        exitmonitor r1;

     label06:
        return 0;

     label07:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r8 = $r5.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r6 = r12.<com.android.server.pm.PackageSetting: com.android.server.pm.InstallSource installSource>;

        $r7 = $r6.<com.android.server.pm.InstallSource: java.lang.String installerPackageName>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r7);

        r13 = (com.android.server.pm.PackageSetting) $r9;

     label08:
        if r13 == null goto label11;

     label09:
        $i1 = r13.<com.android.server.pm.PackageSetting: int appId>;

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i1, i0);

        if $z0 == 0 goto label11;

     label10:
        z1 = 1;

        goto label11;

     label11:
        exitmonitor r1;

     label12:
        return z1;

     label13:
        $r10 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public boolean isDataRestoreSafe(android.content.pm.Signature, java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        android.content.pm.Signature r1;
        boolean $z0;
        java.lang.String r2;
        android.content.pm.PackageParser$SigningDetails r3;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: android.content.pm.Signature;

        r2 := @parameter1: java.lang.String;

        r3 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: android.content.pm.PackageParser$SigningDetails getSigningDetails(java.lang.String)>(r2);

        if r3 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r3.<android.content.pm.PackageParser$SigningDetails: boolean hasCertificate(android.content.pm.Signature,int)>(r1, 1);

        return $z0;
    }

    public boolean isDataRestoreSafe(byte[], java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        byte[] r1;
        boolean $z0;
        java.lang.String r2;
        android.content.pm.PackageParser$SigningDetails r3;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        r3 = specialinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: android.content.pm.PackageParser$SigningDetails getSigningDetails(java.lang.String)>(r2);

        if r3 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r3.<android.content.pm.PackageParser$SigningDetails: boolean hasSha256Certificate(byte[],int)>(r1, 1);

        return $z0;
    }

    public boolean isEnabledAndMatches(android.content.pm.parsing.component.ParsedMainComponent, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1;
        java.lang.Object r1;
        com.android.server.pm.parsing.pkg.AndroidPackage r2;
        boolean z0;
        com.android.server.pm.PackageManagerService $r3, $r5;
        java.lang.String $r4;
        com.android.server.pm.Settings $r6;
        java.lang.Throwable $r7;
        android.content.pm.parsing.component.ParsedMainComponent r8;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r8 := @parameter0: android.content.pm.parsing.component.ParsedMainComponent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = virtualinvoke r8.<android.content.pm.parsing.component.ParsedMainComponent: java.lang.String getPackageName()>();

        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.parsing.pkg.AndroidPackage getPackage(java.lang.String)>($r4);

        $r5 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r6 = $r5.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        z0 = virtualinvoke $r6.<com.android.server.pm.Settings: boolean isEnabledAndMatchLPr(com.android.server.pm.parsing.pkg.AndroidPackage,android.content.pm.parsing.component.ParsedMainComponent,int,int)>(r2, r8, i0, i1);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isInstantApp(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        int i0;
        com.android.server.pm.PackageManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $z0 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService: boolean isInstantApp(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public boolean isInstantAppInstallerComponent(android.content.ComponentName)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3, $r5;
        android.content.pm.ActivityInfo $r4, $r6;
        android.content.ComponentName $r7, r9;
        boolean $z0, z1;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r9 := @parameter0: android.content.ComponentName;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mInstantAppInstallerActivity>;

        if $r4 == null goto label3;

        $r5 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r6 = $r5.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mInstantAppInstallerActivity>;

        $r7 = virtualinvoke $r6.<android.content.pm.ActivityInfo: android.content.ComponentName getComponentName()>();

        $z0 = virtualinvoke $r7.<android.content.ComponentName: boolean equals(java.lang.Object)>(r9);

        if $z0 == 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z1;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isOnlyCoreApps()
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        com.android.server.pm.PackageManagerService $r1;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $z0 = virtualinvoke $r1.<com.android.server.pm.PackageManagerService: boolean isOnlyCoreApps()>();

        return $z0;
    }

    public boolean isPackageDataProtected(int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.String r1;
        com.android.server.pm.PackageManagerService $r2;
        com.android.server.pm.ProtectedPackages $r3;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = $r2.<com.android.server.pm.PackageManagerService: com.android.server.pm.ProtectedPackages mProtectedPackages>;

        $z0 = virtualinvoke $r3.<com.android.server.pm.ProtectedPackages: boolean isPackageDataProtected(int,java.lang.String)>(i0, r1);

        return $z0;
    }

    public boolean isPackageEphemeral(int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1, $r6;
        com.android.server.pm.PackageManagerService $r2, $r3;
        com.android.server.pm.Settings $r4;
        android.util.ArrayMap $r5;
        java.lang.Throwable $r7;
        java.lang.String r8;
        com.android.server.pm.PackageSetting r9;
        boolean z0;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r5 = $r4.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (com.android.server.pm.PackageSetting) $r6;

     label02:
        if r9 == null goto label05;

     label03:
        z0 = virtualinvoke r9.<com.android.server.pm.PackageSetting: boolean getInstantApp(int)>(i0);

     label04:
        goto label06;

     label05:
        z0 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z0;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isPackagePersistent(java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1, $r5;
        com.android.server.pm.PackageManagerService $r2, $r3;
        android.util.ArrayMap $r4;
        boolean $z0, $z1, z2;
        java.lang.Throwable $r6;
        java.lang.String r7;
        com.android.server.pm.parsing.pkg.AndroidPackage r8;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r7 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (com.android.server.pm.parsing.pkg.AndroidPackage) $r5;

     label02:
        if r8 == null goto label05;

     label03:
        $z0 = interfaceinvoke r8.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSystem()>();

        if $z0 == 0 goto label05;

        $z1 = interfaceinvoke r8.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isPersistent()>();

        if $z1 == 0 goto label05;

     label04:
        z2 = 1;

        goto label06;

     label05:
        z2 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z2;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isPackageStateProtected(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        int i0;
        com.android.server.pm.PackageManagerService $r2;
        com.android.server.pm.ProtectedPackages $r3;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = $r2.<com.android.server.pm.PackageManagerService: com.android.server.pm.ProtectedPackages mProtectedPackages>;

        $z0 = virtualinvoke $r3.<com.android.server.pm.ProtectedPackages: boolean isPackageStateProtected(int,java.lang.String)>(i0, r1);

        return $z0;
    }

    public boolean isPackageSuspended(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1, $r6;
        com.android.server.pm.PackageManagerService $r2, $r3;
        com.android.server.pm.Settings $r4;
        android.util.ArrayMap $r5;
        java.lang.Throwable $r7;
        java.lang.String r8;
        com.android.server.pm.PackageSetting r9;
        boolean z0;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r5 = $r4.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (com.android.server.pm.PackageSetting) $r6;

     label02:
        if r9 == null goto label05;

     label03:
        z0 = virtualinvoke r9.<com.android.server.pm.PackageSetting: boolean getSuspended(int)>(i0);

     label04:
        goto label06;

     label05:
        z0 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z0;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isPermissionUpgradeNeeded(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        com.android.server.pm.PackageManagerService $r3, $r4;
        com.android.server.pm.Settings $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        z0 = virtualinvoke $r5.<com.android.server.pm.Settings: boolean isPermissionUpgradeNeededLPr(int)>(i0);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isPermissionsReviewRequired(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1, $r5;
        boolean z0;
        com.android.server.pm.PackageManagerService $r2, $r3, $r6;
        android.util.ArrayMap $r4;
        com.android.server.pm.permission.PermissionManagerServiceInternal $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        com.android.server.pm.parsing.pkg.AndroidPackage r10;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r9);

        r10 = (com.android.server.pm.parsing.pkg.AndroidPackage) $r5;

     label2:
        if r10 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        $r6 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r7 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.permission.PermissionManagerServiceInternal access$6600(com.android.server.pm.PackageManagerService)>($r6);

        z0 = virtualinvoke $r7.<com.android.server.pm.permission.PermissionManagerServiceInternal: boolean isPermissionsReviewRequired(com.android.server.pm.parsing.pkg.AndroidPackage,int)>(r10, i0);

        exitmonitor r1;

     label6:
        return z0;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean isPlatformSigned(java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        com.android.server.pm.PackageManagerService $r1, $r6, $r9;
        com.android.server.pm.Settings $r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.content.pm.PackageParser$SigningDetails $r5, $r8, $r11, $r12;
        com.android.server.pm.parsing.pkg.AndroidPackage $r7, $r10, r15;
        boolean $z0, $z1, z2;
        java.lang.String r13;
        com.android.server.pm.PackageSetting r14;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r13 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r2 = $r1.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r3 = $r2.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r14 = (com.android.server.pm.PackageSetting) $r4;

        z2 = 0;

        if r14 != null goto label1;

        return 0;

     label1:
        r15 = r14.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        if r15 != null goto label2;

        return 0;

     label2:
        $r5 = interfaceinvoke r15.<com.android.server.pm.parsing.pkg.AndroidPackage: android.content.pm.PackageParser$SigningDetails getSigningDetails()>();

        $r6 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r7 = $r6.<com.android.server.pm.PackageManagerService: com.android.server.pm.parsing.pkg.AndroidPackage mPlatformPackage>;

        $r8 = interfaceinvoke $r7.<com.android.server.pm.parsing.pkg.AndroidPackage: android.content.pm.PackageParser$SigningDetails getSigningDetails()>();

        $z0 = virtualinvoke $r5.<android.content.pm.PackageParser$SigningDetails: boolean hasAncestorOrSelf(android.content.pm.PackageParser$SigningDetails)>($r8);

        if $z0 != 0 goto label3;

        $r9 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r10 = $r9.<com.android.server.pm.PackageManagerService: com.android.server.pm.parsing.pkg.AndroidPackage mPlatformPackage>;

        $r11 = interfaceinvoke $r10.<com.android.server.pm.parsing.pkg.AndroidPackage: android.content.pm.PackageParser$SigningDetails getSigningDetails()>();

        $r12 = interfaceinvoke r15.<com.android.server.pm.parsing.pkg.AndroidPackage: android.content.pm.PackageParser$SigningDetails getSigningDetails()>();

        $z1 = virtualinvoke $r11.<android.content.pm.PackageParser$SigningDetails: boolean checkCapability(android.content.pm.PackageParser$SigningDetails,int)>($r12, 4);

        if $z1 == 0 goto label4;

     label3:
        z2 = 1;

     label4:
        return z2;
    }

    public boolean isResolveActivityComponent(android.content.pm.ComponentInfo)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        android.content.pm.ComponentInfo r1;
        com.android.server.pm.PackageManagerService $r2, $r6;
        android.content.pm.ActivityInfo $r3, $r7;
        java.lang.String $r4, $r5, $r8, $r9;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: android.content.pm.ComponentInfo;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = $r2.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r5 = $r3.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r4 = r1.<android.content.pm.ComponentInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r7 = $r6.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r9 = $r7.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r8 = r1.<android.content.pm.ComponentInfo: java.lang.String name>;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean isSuspendingAnyPackages(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        int i0;
        com.android.server.pm.PackageManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $z0 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService: boolean isSuspendingAnyPackages(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public boolean isSystemPackage(java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1, $r3;
        com.android.server.pm.PackageManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String access$9600(com.android.server.pm.PackageManagerService,java.lang.String)>($r2, r1);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public void migrateLegacyObbData()
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        com.android.server.pm.PackageManagerService $r2;
        com.android.server.pm.Installer $r3;
        java.lang.Exception $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

     label1:
        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = $r2.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r3.<com.android.server.pm.Installer: boolean migrateLegacyObbData()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.Throwable)>("PackageManager", $r4);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void notifyPackageUse(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        staticinvoke <com.android.server.pm.PackageManagerService: void access$9200(com.android.server.pm.PackageManagerService,java.lang.String,int)>($r3, r5, i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void pruneCachedApksInApex(java.util.List)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r2, $r14, $r17;
        int i0, i1, i2, i3;
        java.util.List r3, r21;
        com.android.server.pm.parsing.pkg.AndroidPackage r4;
        java.io.File r5, $r7, $r10;
        com.android.server.pm.PackageManagerService $r6, $r9, $r11, $r12;
        com.android.server.pm.parsing.PackageCacher $r8;
        com.android.server.pm.ApexManager $r13;
        android.content.pm.PackageInfo $r15;
        java.lang.String $r16, $r18, $r19;
        java.lang.Throwable $r20;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r21 := @parameter0: java.util.List;

        $r6 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r7 = staticinvoke <com.android.server.pm.PackageManagerService: java.io.File access$8000(com.android.server.pm.PackageManagerService)>($r6);

        if $r7 != null goto label01;

        return;

     label01:
        $r8 = new com.android.server.pm.parsing.PackageCacher;

        $r9 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r10 = staticinvoke <com.android.server.pm.PackageManagerService: java.io.File access$8000(com.android.server.pm.PackageManagerService)>($r9);

        specialinvoke $r8.<com.android.server.pm.parsing.PackageCacher: void <init>(java.io.File)>($r10);

        $r11 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r2 = $r11.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r2;

        i2 = 0;

     label02:
        i0 = interfaceinvoke r21.<java.util.List: int size()>();

     label03:
        if i2 >= i0 goto label11;

     label04:
        $r12 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r13 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.ApexManager access$8100(com.android.server.pm.PackageManagerService)>($r12);

        $r14 = interfaceinvoke r21.<java.util.List: java.lang.Object get(int)>(i2);

        $r15 = (android.content.pm.PackageInfo) $r14;

        $r16 = $r15.<android.content.pm.PackageInfo: java.lang.String packageName>;

        r3 = virtualinvoke $r13.<com.android.server.pm.ApexManager: java.util.List getApksInApex(java.lang.String)>($r16);

     label05:
        i3 = 0;

     label06:
        i1 = interfaceinvoke r3.<java.util.List: int size()>();

     label07:
        if i3 >= i1 goto label10;

     label08:
        $r17 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i3);

        $r18 = (java.lang.String) $r17;

        r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.parsing.pkg.AndroidPackage getPackage(java.lang.String)>($r18);

        r5 = new java.io.File;

        $r19 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getCodePath()>();

        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>($r19);

        virtualinvoke $r8.<com.android.server.pm.parsing.PackageCacher: void cleanCachedResult(java.io.File)>(r5);

     label09:
        i3 = i3 + 1;

        goto label07;

     label10:
        i2 = i2 + 1;

        goto label03;

     label11:
        exitmonitor r2;

     label12:
        return;

     label13:
        $r20 := @caughtexception;

     label14:
        exitmonitor r2;

     label15:
        throw $r20;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void pruneInstantApps()
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.InstantAppRegistry $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r2 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.InstantAppRegistry access$4700(com.android.server.pm.PackageManagerService)>($r1);

        virtualinvoke $r2.<com.android.server.pm.InstantAppRegistry: void pruneInstantApps()>();

        return;
    }

    public java.util.List queryIntentActivities(android.content.Intent, java.lang.String, int, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        android.content.Intent r1;
        java.lang.String r2;
        int i0, i1, i2;
        com.android.server.pm.PackageManagerService $r3;
        java.util.List $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = staticinvoke <com.android.server.pm.PackageManagerService: java.util.List access$7300(com.android.server.pm.PackageManagerService,android.content.Intent,java.lang.String,int,int,int,int,boolean,boolean)>($r3, r1, r2, i0, 0, i1, i2, 0, 1);

        return $r4;
    }

    public java.util.List queryIntentServices(android.content.Intent, int, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        android.content.Intent r1;
        int i0, i1, i2;
        java.lang.String r2;
        com.android.server.pm.PackageManagerService $r3, $r6;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        java.util.List $r7;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r5);

        $r6 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r7 = staticinvoke <com.android.server.pm.PackageManagerService: java.util.List access$7400(com.android.server.pm.PackageManagerService,android.content.Intent,java.lang.String,int,int,int,boolean)>($r6, r1, r2, i0, i2, i1, 0);

        return $r7;
    }

    public void removeAllDistractingPackageRestrictions(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        com.android.server.pm.PackageManagerService $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r1.<com.android.server.pm.PackageManagerService: void removeAllDistractingPackageRestrictions(int)>(i0);

        return;
    }

    public void removeAllNonSystemPackageSuspensions(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, $i1;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3, $r6, $r11;
        android.util.ArrayMap $r4, $r7;
        java.util.Set $r5;
        java.lang.String[] $r8, r13;
        java.lang.Object[] $r9;
        com.android.server.pm.'-$$Lambda$PackageManagerService$PackageManagerInternalImpl$sQKOQTvoGzSf6LXboU0G7PAMRNA' $r10;
        java.lang.Throwable $r12;
        java.util.function.Predicate r15;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.util.Set keySet()>();

        $r6 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r7 = $r6.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        $i1 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

        $r8 = newarray (java.lang.String)[$i1];

        $r9 = interfaceinvoke $r5.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        r13 = (java.lang.String[]) $r9;

        exitmonitor r1;

     label2:
        $r11 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r10 = <com.android.server.pm._$$Lambda$PackageManagerService$PackageManagerInternalImpl$sQKOQTvoGzSf6LXboU0G7PAMRNA: com.android.server.pm.'-$$Lambda$PackageManagerService$PackageManagerInternalImpl$sQKOQTvoGzSf6LXboU0G7PAMRNA' INSTANCE>;

        r15 = (java.util.function.Predicate) $r10;

        virtualinvoke $r11.<com.android.server.pm.PackageManagerService: void removeSuspensionsBySuspendingPackage(java.lang.String[],java.util.function.Predicate,int)>(r13, r15, i0);

        return;

     label3:
        $r12 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeDistractingPackageRestrictions(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        int i0;
        java.lang.String[] $r2;
        com.android.server.pm.PackageManagerService $r3;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = r1;

        virtualinvoke $r3.<com.android.server.pm.PackageManagerService: void removeDistractingPackageRestrictions(java.lang.String[],int)>($r2, i0);

        return;
    }

    public void removeIsolatedUid(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r3, $r4;
        android.util.SparseIntArray $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: android.util.SparseIntArray mIsolatedOwners>;

        virtualinvoke $r5.<android.util.SparseIntArray: void delete(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String removeLegacyDefaultBrowserPackageName(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        com.android.server.pm.Settings $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r6 = virtualinvoke $r4.<com.android.server.pm.Settings: java.lang.String removeDefaultBrowserPackageNameLPw(int)>(i0);

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeNonSystemPackageSuspensions(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        int i0;
        com.android.server.pm.PackageManagerService r2;
        com.android.server.pm.'-$$Lambda$PackageManagerService$PackageManagerInternalImpl$JycGJrzHIngCbGMk68UBYZqLVhg' r3;
        java.lang.String[] $r4;
        java.util.function.Predicate r5;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r3 = <com.android.server.pm._$$Lambda$PackageManagerService$PackageManagerInternalImpl$JycGJrzHIngCbGMk68UBYZqLVhg: com.android.server.pm.'-$$Lambda$PackageManagerService$PackageManagerInternalImpl$JycGJrzHIngCbGMk68UBYZqLVhg' INSTANCE>;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r1;

        r5 = (java.util.function.Predicate) r3;

        virtualinvoke r2.<com.android.server.pm.PackageManagerService: void removeSuspensionsBySuspendingPackage(java.lang.String[],java.util.function.Predicate,int)>($r4, r5, i0);

        return;
    }

    public void removePackageListObserver(android.content.pm.PackageManagerInternal$PackageListObserver)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        android.util.ArraySet $r4;
        java.lang.Throwable $r5;
        android.content.pm.PackageManagerInternal$PackageListObserver r6;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r6 := @parameter0: android.content.pm.PackageManagerInternal$PackageListObserver;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = staticinvoke <com.android.server.pm.PackageManagerService: android.util.ArraySet access$6400(com.android.server.pm.PackageManagerService)>($r3);

        virtualinvoke $r4.<android.util.ArraySet: boolean remove(java.lang.Object)>(r6);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void requestInstantAppResolutionPhaseTwo(android.content.pm.AuxiliaryResolveInfo, android.content.Intent, java.lang.String, java.lang.String, java.lang.String, boolean, android.os.Bundle, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        android.content.pm.AuxiliaryResolveInfo r1;
        android.content.Intent r2;
        java.lang.String r3, r4, r5;
        boolean z0;
        android.os.Bundle r6;
        int i0;
        com.android.server.pm.PackageManagerService $r7;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: android.content.pm.AuxiliaryResolveInfo;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        r6 := @parameter6: android.os.Bundle;

        i0 := @parameter7: int;

        $r7 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        staticinvoke <com.android.server.pm.PackageManagerService: void access$7700(com.android.server.pm.PackageManagerService,android.content.pm.AuxiliaryResolveInfo,android.content.Intent,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle,int)>($r7, r1, r2, r3, r4, r5, z0, r6, i0);

        return;
    }

    public android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        int i0, i1;
        com.android.server.pm.PackageManagerService $r2;
        android.content.pm.ProviderInfo $r3;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo access$8700(com.android.server.pm.PackageManagerService,java.lang.String,int,int)>($r2, r1, i0, i1);

        return $r3;
    }

    public android.content.pm.ResolveInfo resolveIntent(android.content.Intent, java.lang.String, int, int, int, boolean, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        android.content.Intent r1;
        java.lang.String r2;
        int i0, i1, i2, i3;
        boolean z0;
        com.android.server.pm.PackageManagerService $r3;
        android.content.pm.ResolveInfo $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        i3 := @parameter6: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo access$8500(com.android.server.pm.PackageManagerService,android.content.Intent,java.lang.String,int,int,int,boolean,int)>($r3, r1, r2, i0, i1, i2, z0, i3);

        return $r4;
    }

    public android.content.pm.ResolveInfo resolveService(android.content.Intent, java.lang.String, int, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        android.content.Intent r1;
        java.lang.String r2;
        int i0, i1, i2;
        com.android.server.pm.PackageManagerService $r3;
        android.content.pm.ResolveInfo $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo access$8600(com.android.server.pm.PackageManagerService,android.content.Intent,java.lang.String,int,int,int)>($r3, r1, r2, i0, i1, i2);

        return $r4;
    }

    public void setDeviceAndProfileOwnerPackages(int, java.lang.String, android.util.SparseArray)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        android.util.SparseArray r2;
        int i0, $i1, i2, i3;
        com.android.server.pm.PackageManagerService $r4;
        com.android.server.pm.ProtectedPackages $r5;
        android.util.ArraySet $r6;
        java.lang.Object $r7;
        java.lang.Integer $r8, $r9;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i2 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.util.SparseArray;

        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: com.android.server.pm.ProtectedPackages mProtectedPackages>;

        virtualinvoke $r5.<com.android.server.pm.ProtectedPackages: void setDeviceAndProfileOwnerPackages(int,java.lang.String,android.util.SparseArray)>(i2, r1, r2);

        $r6 = new android.util.ArraySet;

        specialinvoke $r6.<android.util.ArraySet: void <init>()>();

        if r1 == null goto label1;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke $r6.<android.util.ArraySet: boolean add(java.lang.Object)>($r9);

     label1:
        i0 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        i3 = 0;

     label2:
        if i3 >= i0 goto label4;

        $r7 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        if $r7 == null goto label3;

        $i1 = virtualinvoke r2.<android.util.SparseArray: int keyAt(int)>(i3);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r6.<android.util.ArraySet: boolean add(java.lang.Object)>($r8);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return;
    }

    public void setDeviceOwnerProtectedPackages(java.util.List)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.util.List r1;
        com.android.server.pm.PackageManagerService $r2;
        com.android.server.pm.ProtectedPackages $r3;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = $r2.<com.android.server.pm.PackageManagerService: com.android.server.pm.ProtectedPackages mProtectedPackages>;

        virtualinvoke $r3.<com.android.server.pm.ProtectedPackages: void setDeviceOwnerProtectedPackages(java.util.List)>(r1);

        return;
    }

    public void setEnableRollbackCode(int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1;
        com.android.server.pm.PackageManagerService $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        staticinvoke <com.android.server.pm.PackageManagerService: void access$9500(com.android.server.pm.PackageManagerService,int,int)>($r1, i0, i1);

        return;
    }

    public boolean setEnabledOverlayPackages(int, java.lang.String, java.util.List, java.util.Collection)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1, $i2, i3;
        java.util.Collection r1;
        java.lang.Object r2, $r8, $r13, $r16, $r19, $r24, $r26, $r29;
        android.content.pm.VersionedPackage r3;
        com.android.server.pm.PackageSetting r4, $r14;
        com.android.server.pm.PackageManagerService $r5, $r6, $r10, $r17, $r18, $r20, $r27;
        android.util.ArrayMap $r7, $r12, $r22, $r28;
        java.lang.String $r9, $r23, $r25, $r30, $r31, r33, r38, r44;
        com.android.server.pm.Settings $r11, $r21;
        java.util.List $r15, r34, $r42, r46;
        java.lang.Throwable $r32;
        com.android.server.pm.parsing.pkg.AndroidPackage r35, r39;
        java.util.ArrayList r36, r37;
        java.lang.StringBuilder r40, r48;
        android.util.ArraySet r41;
        java.util.Iterator r43, r47;
        boolean $z0, $z1;
        android.content.pm.SharedLibraryInfo r45;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        r33 := @parameter1: java.lang.String;

        r34 := @parameter2: java.util.List;

        r1 := @parameter3: java.util.Collection;

        $r5 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r2 = $r5.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r6 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r7 = $r6.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r33);

        r35 = (com.android.server.pm.parsing.pkg.AndroidPackage) $r8;

     label02:
        if r33 == null goto label32;

        if r35 != null goto label03;

        goto label32;

     label03:
        r36 = null;

        if r34 == null goto label13;

        r36 = null;

     label04:
        $i2 = interfaceinvoke r34.<java.util.List: int size()>();

        if $i2 <= 0 goto label13;

        i1 = interfaceinvoke r34.<java.util.List: int size()>();

        r37 = new java.util.ArrayList;

        specialinvoke r37.<java.util.ArrayList: void <init>(int)>(i1);

     label05:
        i3 = 0;

     label06:
        r36 = r37;

        if i3 >= i1 goto label13;

     label07:
        $r26 = interfaceinvoke r34.<java.util.List: java.lang.Object get(int)>(i3);

        r38 = (java.lang.String) $r26;

        $r27 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r28 = $r27.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        $r29 = virtualinvoke $r28.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r38);

        r39 = (com.android.server.pm.parsing.pkg.AndroidPackage) $r29;

     label08:
        if r39 != null goto label11;

     label09:
        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to find package ");

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        $r31 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r31);

        exitmonitor r2;

     label10:
        return 0;

     label11:
        $r30 = interfaceinvoke r39.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getBaseCodePath()>();

        virtualinvoke r37.<java.util.ArrayList: boolean add(java.lang.Object)>($r30);

     label12:
        i3 = i3 + 1;

        goto label06;

     label13:
        r41 = null;

     label14:
        $r42 = interfaceinvoke r35.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getLibraryNames()>();

        if $r42 == null goto label27;

        r41 = new android.util.ArraySet;

        specialinvoke r41.<android.util.ArraySet: void <init>()>();

     label15:
        $r15 = interfaceinvoke r35.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getLibraryNames()>();

        r43 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label26;

        $r16 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r44 = (java.lang.String) $r16;

        $r17 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r45 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.pm.SharedLibraryInfo access$8300(com.android.server.pm.PackageManagerService,java.lang.String,long)>($r17, r44, -1L);

     label17:
        if r45 != null goto label18;

        goto label16;

     label18:
        $r18 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r46 = staticinvoke <com.android.server.pm.PackageManagerService: java.util.List access$8400(com.android.server.pm.PackageManagerService,android.content.pm.SharedLibraryInfo,int,int)>($r18, r45, 0, i0);

     label19:
        if r46 != null goto label20;

        goto label16;

     label20:
        r47 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();

     label21:
        $z1 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label25;

        $r19 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.pm.VersionedPackage) $r19;

        $r20 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r21 = $r20.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r22 = $r21.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r23 = virtualinvoke r3.<android.content.pm.VersionedPackage: java.lang.String getPackageName()>();

        $r24 = virtualinvoke $r22.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r23);

        r4 = (com.android.server.pm.PackageSetting) $r24;

     label22:
        if r4 != null goto label23;

        goto label21;

     label23:
        virtualinvoke r4.<com.android.server.pm.PackageSetting: void setOverlayPathsForLibrary(java.lang.String,java.util.List,int)>(r44, r36, i0);

        $r25 = virtualinvoke r3.<android.content.pm.VersionedPackage: java.lang.String getPackageName()>();

        virtualinvoke r41.<android.util.ArraySet: boolean add(java.lang.Object)>($r25);

     label24:
        goto label21;

     label25:
        goto label16;

     label26:
        goto label27;

     label27:
        $r10 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r11 = $r10.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r11.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r33);

        $r14 = (com.android.server.pm.PackageSetting) $r13;

        virtualinvoke $r14.<com.android.server.pm.PackageSetting: void setOverlayPaths(java.util.List,int)>(r36, i0);

        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(r33);

     label28:
        if r41 == null goto label30;

     label29:
        interfaceinvoke r1.<java.util.Collection: boolean addAll(java.util.Collection)>(r41);

     label30:
        exitmonitor r2;

     label31:
        staticinvoke <android.content.pm.PackageManager: void invalidatePackageInfoCache()>();

        return 1;

     label32:
        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to find package ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r9 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r9);

        exitmonitor r2;

     label33:
        return 0;

     label34:
        $r32 := @caughtexception;

     label35:
        exitmonitor r2;

     label36:
        throw $r32;

        catch java.lang.Throwable from label01 to label02 with label34;
        catch java.lang.Throwable from label04 to label05 with label34;
        catch java.lang.Throwable from label07 to label08 with label34;
        catch java.lang.Throwable from label09 to label10 with label34;
        catch java.lang.Throwable from label11 to label12 with label34;
        catch java.lang.Throwable from label14 to label15 with label34;
        catch java.lang.Throwable from label15 to label16 with label34;
        catch java.lang.Throwable from label16 to label17 with label34;
        catch java.lang.Throwable from label18 to label19 with label34;
        catch java.lang.Throwable from label20 to label21 with label34;
        catch java.lang.Throwable from label21 to label22 with label34;
        catch java.lang.Throwable from label23 to label24 with label34;
        catch java.lang.Throwable from label27 to label28 with label34;
        catch java.lang.Throwable from label29 to label30 with label34;
        catch java.lang.Throwable from label30 to label31 with label34;
        catch java.lang.Throwable from label32 to label33 with label34;
        catch java.lang.Throwable from label35 to label36 with label34;
    }

    public void setExternalSourcesPolicy(android.content.pm.PackageManagerInternal$ExternalSourcesPolicy)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        android.content.pm.PackageManagerInternal$ExternalSourcesPolicy r1;
        com.android.server.pm.PackageManagerService $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: android.content.pm.PackageManagerInternal$ExternalSourcesPolicy;

        if r1 == null goto label1;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r2.<com.android.server.pm.PackageManagerService: android.content.pm.PackageManagerInternal$ExternalSourcesPolicy mExternalSourcesPolicy> = r1;

     label1:
        return;
    }

    public void setIntegrityVerificationResult(int, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0, i1;
        android.os.Message r1;
        com.android.server.pm.PackageManagerService $r2, $r5;
        android.os.Handler $r3, $r6;
        java.lang.Integer $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r3 = $r2.<com.android.server.pm.PackageManagerService: android.os.Handler mHandler>;

        r1 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(25);

        r1.<android.os.Message: int arg1> = i0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r1.<android.os.Message: java.lang.Object obj> = $r4;

        $r5 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r6 = $r5.<com.android.server.pm.PackageManagerService: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    public void setKeepUninstalledPackages(java.util.List)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.Object r1, $r8, $r14;
        com.android.server.pm.PackageManagerService $r3, $r4, $r7, $r10, $r12, r21;
        java.util.List $r5, $r11, $r13, r16;
        java.lang.String $r9, r19;
        boolean $z1;
        java.lang.Throwable $r15;
        java.util.ArrayList r17, r18, r20, r22;
        int i0, i1, i2, i3;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r16 := @parameter0: java.util.List;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r16);

        r17 = null;

        r18 = null;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = staticinvoke <com.android.server.pm.PackageManagerService: java.util.List access$6700(com.android.server.pm.PackageManagerService)>($r4);

        if $r5 == null goto label13;

        $r10 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r11 = staticinvoke <com.android.server.pm.PackageManagerService: java.util.List access$6700(com.android.server.pm.PackageManagerService)>($r10);

        i0 = interfaceinvoke $r11.<java.util.List: int size()>();

     label02:
        i1 = 0;

     label03:
        r17 = r18;

        if i1 >= i0 goto label13;

     label04:
        $r12 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r13 = staticinvoke <com.android.server.pm.PackageManagerService: java.util.List access$6700(com.android.server.pm.PackageManagerService)>($r12);

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i1);

        r19 = (java.lang.String) $r14;

     label05:
        if r16 == null goto label08;

     label06:
        $z1 = interfaceinvoke r16.<java.util.List: boolean contains(java.lang.Object)>(r19);

        if $z1 == 0 goto label08;

     label07:
        goto label12;

     label08:
        r20 = r18;

        if r18 != null goto label10;

     label09:
        r20 = new java.util.ArrayList;

        specialinvoke r20.<java.util.ArrayList: void <init>()>();

     label10:
        interfaceinvoke r20.<java.util.List: boolean add(java.lang.Object)>(r19);

     label11:
        r18 = r20;

     label12:
        i1 = i1 + 1;

        goto label03;

     label13:
        r21 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r22 = new java.util.ArrayList;

        specialinvoke r22.<java.util.ArrayList: void <init>(java.util.Collection)>(r16);

        staticinvoke <com.android.server.pm.PackageManagerService: java.util.List access$6702(com.android.server.pm.PackageManagerService,java.util.List)>(r21, r22);

     label14:
        if r17 == null goto label20;

     label15:
        i2 = interfaceinvoke r17.<java.util.List: int size()>();

     label16:
        i3 = 0;

     label17:
        if i3 >= i2 goto label20;

     label18:
        $r7 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r8 = interfaceinvoke r17.<java.util.List: java.lang.Object get(int)>(i3);

        $r9 = (java.lang.String) $r8;

        staticinvoke <com.android.server.pm.PackageManagerService: void access$6800(com.android.server.pm.PackageManagerService,java.lang.String)>($r7, $r9);

     label19:
        i3 = i3 + 1;

        goto label17;

     label20:
        exitmonitor r1;

     label21:
        return;

     label22:
        $r15 := @caughtexception;

     label23:
        exitmonitor r1;

     label24:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    public void setReadExternalStorageEnforced(boolean)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        boolean z0, $z1;
        java.lang.Object r1;
        com.android.server.pm.Settings r2, $r5, $r9, $r11;
        com.android.server.pm.PackageManagerService $r3, $r4, $r7, $r8, $r10;
        java.lang.Boolean $r6, $r12, r14;
        java.lang.Throwable $r13;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r6 = $r5.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        if $r6 == null goto label03;

        $r10 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r11 = $r10.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r11.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        $z1 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != z0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r7 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r2 = $r7.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

     label04:
        if z0 == 0 goto label07;

     label05:
        r14 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label06:
        goto label08;

     label07:
        r14 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label08:
        r2.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced> = r14;

        $r8 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r9 = $r8.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r9.<com.android.server.pm.Settings: void writeLPr()>();

        exitmonitor r1;

     label09:
        return;

     label10:
        $r13 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void setVisibilityLogging(java.lang.String, boolean)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        boolean z0;
        com.android.server.pm.PackageSetting r1;
        com.android.server.pm.PackageManagerService $r2, $r3, $r10;
        com.android.server.pm.Settings $r4;
        java.lang.StringBuilder $r5;
        java.lang.IllegalStateException $r8;
        java.lang.String $r9, r14;
        com.android.server.pm.AppsFilter $r11;
        com.android.server.pm.AppsFilter$FeatureConfig $r12;
        int $i0;
        java.lang.Throwable $r13;
        java.lang.Object r15;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r14 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r15 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r15;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r1 = virtualinvoke $r4.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPr(java.lang.String)>(r14);

        exitmonitor r15;

     label2:
        if r1 == null goto label3;

        $r10 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r11 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.AppsFilter access$7900(com.android.server.pm.PackageManagerService)>($r10);

        $r12 = virtualinvoke $r11.<com.android.server.pm.AppsFilter: com.android.server.pm.AppsFilter$FeatureConfig getFeatureConfig()>();

        $i0 = r1.<com.android.server.pm.PackageSetting: int appId>;

        interfaceinvoke $r12.<com.android.server.pm.AppsFilter$FeatureConfig: void enableLogging(int,boolean)>($i0, z0);

        return;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package found for ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label4:
        $r13 := @caughtexception;

     label5:
        exitmonitor r15;

     label6:
        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void uninstallApex(java.lang.String, long, int, android.content.IntentSender, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1, $r7, $r11, $r18, $r22;
        long l0, $l6, $l8;
        int i1, i2, i3, $i4;
        com.android.server.pm.PackageInstallerService$PackageDeleteObserverAdapter $r2;
        com.android.server.pm.PackageManagerService $r3, $r5;
        android.content.Context $r4;
        byte $b5, $b7;
        android.content.pm.ApplicationInfo $r6;
        boolean $z0;
        java.lang.StringBuilder $r8, $r12, $r19;
        java.lang.SecurityException $r23;
        android.content.IntentSender r24;
        com.android.server.pm.ApexManager r26;
        android.content.pm.PackageInfo r27;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r24 := @parameter3: android.content.IntentSender;

        i2 := @parameter4: int;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i3 == 0 goto label2;

        if i3 != 2000 goto label1;

        goto label2;

     label1:
        $r23 = new java.lang.SecurityException;

        specialinvoke $r23.<java.lang.SecurityException: void <init>(java.lang.String)>("Not allowed to uninstall apexes");

        throw $r23;

     label2:
        $r2 = new com.android.server.pm.PackageInstallerService$PackageDeleteObserverAdapter;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        specialinvoke $r2.<com.android.server.pm.PackageInstallerService$PackageDeleteObserverAdapter: void <init>(android.content.Context,android.content.IntentSender,java.lang.String,boolean,int)>($r4, r24, r1, 0, i1);

        $i4 = i2 & 2;

        if $i4 != 0 goto label3;

        virtualinvoke $r2.<com.android.server.pm.PackageInstallerService$PackageDeleteObserverAdapter: void onPackageDeleted(java.lang.String,int,java.lang.String)>(r1, -5, "Can\'t uninstall an apex for a single user");

        return;

     label3:
        $r5 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r26 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.ApexManager access$8100(com.android.server.pm.PackageManagerService)>($r5);

        r27 = virtualinvoke r26.<com.android.server.pm.ApexManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 1);

        if r27 != null goto label4;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an apex package");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.server.pm.PackageInstallerService$PackageDeleteObserverAdapter: void onPackageDeleted(java.lang.String,int,java.lang.String)>(r1, -5, $r22);

        return;

     label4:
        $b5 = l0 cmp -1L;

        if $b5 == 0 goto label5;

        $l6 = virtualinvoke r27.<android.content.pm.PackageInfo: long getLongVersionCode()>();

        $b7 = $l6 cmp l0;

        if $b7 == 0 goto label5;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Active version ");

        $l8 = virtualinvoke r27.<android.content.pm.PackageInfo: long getLongVersionCode()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not equal to ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.server.pm.PackageInstallerService$PackageDeleteObserverAdapter: void onPackageDeleted(java.lang.String,int,java.lang.String)>(r1, -5, $r18);

        return;

     label5:
        $r6 = r27.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r7 = $r6.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $z0 = virtualinvoke r26.<com.android.server.pm.ApexManager: boolean uninstallApex(java.lang.String)>($r7);

        if $z0 != 0 goto label6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to uninstall apex ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.server.pm.PackageInstallerService$PackageDeleteObserverAdapter: void onPackageDeleted(java.lang.String,int,java.lang.String)>(r1, -5, $r11);

        goto label7;

     label6:
        virtualinvoke $r2.<com.android.server.pm.PackageInstallerService$PackageDeleteObserverAdapter: void onPackageDeleted(java.lang.String,int,java.lang.String)>(r1, 1, null);

     label7:
        return;
    }

    public void unsuspendForSuspendingPackage(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        java.lang.String r1;
        int i0;
        com.android.server.pm.PackageManagerService $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r2.<com.android.server.pm.PackageManagerService: void unsuspendForSuspendingPackage(java.lang.String,int)>(r1, i0);

        return;
    }

    public void updateRuntimePermissionsFingerprint(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r3, $r4;
        com.android.server.pm.Settings $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r5.<com.android.server.pm.Settings: void updateRuntimePermissionsFingerprintLPr(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean userNeedsBadging(int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        com.android.server.pm.PackageManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean access$7600(com.android.server.pm.PackageManagerService,int)>($r4, i0);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean wasPackageEverLaunched(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        com.android.server.pm.PackageManagerService $r2, $r3;
        com.android.server.pm.Settings $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r2.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        z0 = virtualinvoke $r4.<com.android.server.pm.Settings: boolean wasPackageEverLaunchedLPr(java.lang.String,int)>(r6, i0);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void writePermissionSettings(int[], boolean)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        boolean z0, z1;
        java.lang.Object r1;
        int i0, i1, i2;
        com.android.server.pm.Settings r2;
        com.android.server.pm.PackageManagerService $r3, $r4;
        java.lang.Throwable $r5;
        int[] r6;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        r6 := @parameter0: int[];

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        i0 = lengthof r6;

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label09;

        i1 = r6[i2];

     label04:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r2 = $r4.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

     label05:
        if z0 != 0 goto label06;

        z1 = 1;

        goto label07;

     label06:
        z1 = 0;

     label07:
        virtualinvoke r2.<com.android.server.pm.Settings: void writeRuntimePermissionsForUserLPr(int,boolean)>(i1, z1);

     label08:
        i2 = i2 + 1;

        goto label03;

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r5 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void writeSettings(boolean)
    {
        com.android.server.pm.PackageManagerService$PackageManagerInternalImpl r0;
        boolean z0;
        java.lang.Object r1;
        com.android.server.pm.PackageManagerService $r3, $r4, $r6;
        com.android.server.pm.Settings $r5;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.pm.PackageManagerService$PackageManagerInternalImpl;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        r1 = $r3.<com.android.server.pm.PackageManagerService: java.lang.Object mLock>;

        entermonitor r1;

        if z0 == 0 goto label3;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r6.<com.android.server.pm.PackageManagerService: void scheduleWriteSettingsLocked()>();

     label2:
        goto label4;

     label3:
        $r4 = r0.<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: com.android.server.pm.PackageManagerService this$0>;

        $r5 = $r4.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r5.<com.android.server.pm.Settings: void writeLPr()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
