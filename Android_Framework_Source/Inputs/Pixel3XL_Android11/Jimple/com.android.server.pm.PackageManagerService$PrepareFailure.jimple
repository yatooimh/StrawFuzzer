class com.android.server.pm.PackageManagerService$PrepareFailure extends com.android.server.pm.PackageManagerException
{
    public java.lang.String conflictingPackage;
    public java.lang.String conflictingPermission;

    void <init>(int)
    {
        com.android.server.pm.PackageManagerService$PrepareFailure r0;
        int i0;

        r0 := @this: com.android.server.pm.PackageManagerService$PrepareFailure;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(i0, "Failed to prepare for install.");

        return;
    }

    void <init>(int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PrepareFailure r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.PackageManagerService$PrepareFailure;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(i0, r1);

        return;
    }

    void <init>(java.lang.String, java.lang.Exception)
    {
        com.android.server.pm.PackageManagerService$PrepareFailure r0;
        java.lang.String r1, $r4;
        java.lang.Exception r2;
        boolean $z0;
        com.android.server.pm.PackageManagerException $r3;
        android.content.pm.PackageParser$PackageParserException $r5;
        int i0;

        r0 := @this: com.android.server.pm.PackageManagerService$PrepareFailure;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Exception;

        $z0 = r2 instanceof android.content.pm.PackageParser$PackageParserException;

        if $z0 == 0 goto label1;

        $r5 = (android.content.pm.PackageParser$PackageParserException) r2;

        i0 = $r5.<android.content.pm.PackageParser$PackageParserException: int error>;

        goto label2;

     label1:
        $r3 = (com.android.server.pm.PackageManagerException) r2;

        i0 = $r3.<com.android.server.pm.PackageManagerException: int error>;

     label2:
        $r4 = staticinvoke <android.util.ExceptionUtils: java.lang.String getCompleteMessage(java.lang.String,java.lang.Throwable)>(r1, r2);

        specialinvoke r0.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(i0, $r4);

        return;
    }

    com.android.server.pm.PackageManagerService$PrepareFailure conflictsWithExistingPermission(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PrepareFailure r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.server.pm.PackageManagerService$PrepareFailure;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.server.pm.PackageManagerService$PrepareFailure: java.lang.String conflictingPermission> = r1;

        r0.<com.android.server.pm.PackageManagerService$PrepareFailure: java.lang.String conflictingPackage> = r2;

        return r0;
    }
}
