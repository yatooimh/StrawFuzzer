public class com.android.server.pm.PackageManagerService$ScanPartition extends android.content.pm.PackagePartitions$SystemPartition
{
    public final int scanFlag;

    public void <init>(android.content.pm.PackagePartitions$SystemPartition)
    {
        com.android.server.pm.PackageManagerService$ScanPartition r0;
        android.content.pm.PackagePartitions$SystemPartition r1;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerService$ScanPartition;

        r1 := @parameter0: android.content.pm.PackagePartitions$SystemPartition;

        specialinvoke r0.<android.content.pm.PackagePartitions$SystemPartition: void <init>(android.content.pm.PackagePartitions$SystemPartition)>(r1);

        $i0 = staticinvoke <com.android.server.pm.PackageManagerService$ScanPartition: int scanFlagForPartition(android.content.pm.PackagePartitions$SystemPartition)>(r1);

        r0.<com.android.server.pm.PackageManagerService$ScanPartition: int scanFlag> = $i0;

        return;
    }

    public void <init>(java.io.File, com.android.server.pm.PackageManagerService$ScanPartition, int)
    {
        com.android.server.pm.PackageManagerService$ScanPartition r0, r2;
        java.io.File r1;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.pm.PackageManagerService$ScanPartition;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: com.android.server.pm.PackageManagerService$ScanPartition;

        i0 := @parameter2: int;

        specialinvoke r0.<android.content.pm.PackagePartitions$SystemPartition: void <init>(java.io.File,android.content.pm.PackagePartitions$SystemPartition)>(r1, r2);

        $i1 = r2.<com.android.server.pm.PackageManagerService$ScanPartition: int scanFlag>;

        $i2 = $i1 | i0;

        r0.<com.android.server.pm.PackageManagerService$ScanPartition: int scanFlag> = $i2;

        return;
    }

    private static int scanFlagForPartition(android.content.pm.PackagePartitions$SystemPartition)
    {
        android.content.pm.PackagePartitions$SystemPartition r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.io.File $r4;
        java.lang.IllegalStateException $r6;
        java.lang.String $r7;

        r0 := @parameter0: android.content.pm.PackagePartitions$SystemPartition;

        i0 = r0.<android.content.pm.PackagePartitions$SystemPartition: int type>;

        if i0 == 0 goto label6;

        if i0 == 1 goto label5;

        if i0 == 2 goto label4;

        if i0 == 3 goto label3;

        if i0 == 4 goto label2;

        if i0 != 5 goto label1;

        return 2097152;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to determine scan flag for ");

        $r4 = virtualinvoke r0.<android.content.pm.PackagePartitions$SystemPartition: java.io.File getFolder()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label2:
        return 1048576;

     label3:
        return 262144;

     label4:
        return 4194304;

     label5:
        return 524288;

     label6:
        return 0;
    }

    public java.lang.String toString()
    {
        com.android.server.pm.PackageManagerService$ScanPartition r0;
        java.lang.StringBuilder $r2;
        java.io.File $r3;
        java.lang.String $r4, $r8;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerService$ScanPartition;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$ScanPartition: java.io.File getFolder()>();

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = r0.<com.android.server.pm.PackageManagerService$ScanPartition: int scanFlag>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
