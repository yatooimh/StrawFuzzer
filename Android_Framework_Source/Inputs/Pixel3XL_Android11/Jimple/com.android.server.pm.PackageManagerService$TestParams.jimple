public class com.android.server.pm.PackageManagerService$TestParams extends java.lang.Object
{
    public android.util.DisplayMetrics Metrics;
    public com.android.server.pm.ApexManager apexManager;
    public java.lang.String appPredictionServicePackage;
    public com.android.server.pm.dex.ArtManagerService artManagerService;
    public android.util.ArrayMap availableFeatures;
    public java.lang.String configuratorPackage;
    public int defParseFlags;
    public java.lang.String defaultTextClassifierPackage;
    public com.android.server.pm.dex.DexManager dexManager;
    public java.util.List dirsToScanAsSystem;
    public java.lang.String documenterPackage;
    public boolean factoryTest;
    public android.os.Handler handler;
    public com.android.server.ServiceThread handlerThread;
    public java.lang.String incidentReportApproverPackage;
    public android.os.incremental.IncrementalManager incrementalManager;
    public com.android.server.pm.PackageInstallerService installerService;
    public com.android.server.pm.InstantAppRegistry instantAppRegistry;
    public com.android.server.pm.InstantAppResolverConnection instantAppResolverConnection;
    public android.content.ComponentName instantAppResolverSettingsComponent;
    public com.android.server.pm.PackageManagerService$IntentFilterVerifier intentFilterVerifier;
    public android.content.ComponentName intentFilterVerifierComponent;
    public boolean isPreNmr1Upgrade;
    public boolean isPreNupgrade;
    public boolean isPreQupgrade;
    public boolean isUpgrade;
    public com.android.server.pm.ModuleInfoProvider moduleInfoProvider;
    public com.android.server.pm.PackageManagerService$MoveCallbacks moveCallbacks;
    public boolean onlyCore;
    public com.android.internal.content.om.OverlayConfig overlayConfig;
    public com.android.server.pm.PackageDexOptimizer packageDexOptimizer;
    public com.android.server.pm.parsing.PackageParser2$Callback packageParserCallback;
    public android.util.ArrayMap packages;
    public com.android.server.pm.PackageManagerService$PendingPackageBroadcasts pendingPackageBroadcasts;
    public android.permission.IPermissionManager permissionManagerService;
    public android.content.pm.PackageManagerInternal pmInternal;
    public com.android.server.pm.ProcessLoggingHandler processLoggingHandler;
    public com.android.server.pm.ProtectedPackages protectedPackages;
    public java.lang.String requiredInstallerPackage;
    public java.lang.String requiredPermissionControllerPackage;
    public java.lang.String requiredUninstallerPackage;
    public java.lang.String requiredVerifierPackage;
    public android.content.ComponentName resolveComponentName;
    public java.lang.String retailDemoPackage;
    public java.lang.String[] separateProcesses;
    public java.lang.String servicesExtensionPackageName;
    public java.lang.String setupWizardPackage;
    public java.lang.String sharedSystemSharedLibraryPackageName;
    public java.lang.String storageManagerPackage;
    public java.lang.String systemTextClassifierPackage;
    public com.android.server.pm.dex.ViewCompiler viewCompiler;
    public java.lang.String wellbeingPackage;

    public void <init>()
    {
        com.android.server.pm.PackageManagerService$TestParams r0;

        r0 := @this: com.android.server.pm.PackageManagerService$TestParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
