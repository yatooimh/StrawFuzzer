class com.android.server.pm.PackageManagerShellCommand extends android.os.ShellCommand
{
    private static final java.lang.String ART_PROFILE_SNAPSHOT_DEBUG_LOCATION;
    private static final int DEFAULT_WAIT_MS;
    private static final java.lang.String STDIN_PATH;
    private static final java.lang.String TAG;
    boolean mBrief;
    boolean mComponents;
    final android.content.pm.IPackageManager mInterface;
    final android.permission.IPermissionManager mPermissionManager;
    int mQueryFlags;
    private final java.util.WeakHashMap mResourceCache;
    int mTargetUser;

    void <init>(com.android.server.pm.PackageManagerService, android.permission.IPermissionManager)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        com.android.server.pm.PackageManagerService r1;
        android.permission.IPermissionManager r2;
        java.util.WeakHashMap $r3;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        r2 := @parameter1: android.permission.IPermissionManager;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        $r3 = new java.util.WeakHashMap;

        specialinvoke $r3.<java.util.WeakHashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerShellCommand: java.util.WeakHashMap mResourceCache> = $r3;

        r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface> = r1;

        r0.<com.android.server.pm.PackageManagerShellCommand: android.permission.IPermissionManager mPermissionManager> = r2;

        return;
    }

    private static java.lang.String checkAbiArgument(java.lang.String)
    {
        java.lang.String r0, $r2, $r8, $r9;
        int i0, i1;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r1, $r7;
        java.lang.StringBuilder $r3;
        java.lang.String[] r10;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label5;

        $r2 = "-";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        return r0;

     label1:
        r10 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

        i0 = lengthof r10;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r9 = r10[i1];

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        return r0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ABI ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported on this device");

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing ABI argument");

        throw $r1;
    }

    private int displayPackageFilePath(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0, i1, i2;
        java.lang.String r1, $r5, r9;
        android.content.pm.IPackageManager $r2;
        android.content.pm.ApplicationInfo $r3, $r4, $r6, $r8;
        java.lang.String[] $r7, r12;
        boolean $z0;
        android.content.pm.PackageInfo r10;
        java.io.PrintWriter r11;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r9 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r10 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r9, 1073741824, i1);

        if r10 == null goto label3;

        $r3 = r10.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r3 == null goto label3;

        r11 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke r11.<java.io.PrintWriter: void print(java.lang.String)>("package:");

        $r4 = r10.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r5 = $r4.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        virtualinvoke r11.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = r10.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r7 = $r6.<android.content.pm.ApplicationInfo: java.lang.String[] splitSourceDirs>;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r7);

        if $z0 != 0 goto label2;

        $r8 = r10.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r12 = $r8.<android.content.pm.ApplicationInfo: java.lang.String[] splitSourceDirs>;

        i0 = lengthof r12;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r1 = r12[i2];

        virtualinvoke r11.<java.io.PrintWriter: void print(java.lang.String)>("package:");

        virtualinvoke r11.<java.io.PrintWriter: void println(java.lang.String)>(r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return 0;

     label3:
        return 1;
    }

    private int doAbandonSession(int, boolean) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0;
        boolean z0;
        java.io.PrintWriter r1;
        android.content.pm.IPackageManager $r2;
        android.content.pm.IPackageInstaller $r3;
        android.content.pm.IPackageInstallerSession $r4;
        java.lang.Throwable $r5;
        android.content.pm.PackageInstaller$Session r6, r7;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r6 = null;

     label1:
        r7 = new android.content.pm.PackageInstaller$Session;

     label2:
        r6 = null;

     label3:
        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageInstaller: android.content.pm.IPackageInstallerSession openSession(int)>(i0);

        specialinvoke r7.<android.content.pm.PackageInstaller$Session: void <init>(android.content.pm.IPackageInstallerSession)>($r4);

     label4:
        r6 = r7;

     label5:
        virtualinvoke r7.<android.content.pm.PackageInstaller$Session: void abandon()>();

     label6:
        if z0 == 0 goto label8;

        r6 = r7;

     label7:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success");

     label8:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r7);

        return 0;

     label9:
        $r5 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r6);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    private int doAddFiles(int, java.util.ArrayList, long, boolean) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        long l0;
        boolean z0, $z1, $z2, $z3;
        android.content.pm.IPackageInstaller r1;
        android.content.pm.IPackageManager $r2;
        android.content.pm.IPackageInstallerSession $r3;
        com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata $r4;
        byte[] $r5;
        java.lang.String $r6, r20, r22, r23, $r28;
        java.lang.Object $r7, $r8;
        int $i1, i2, i3;
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13, $r14, r24, r25;
        java.util.ArrayList r15;
        android.content.pm.PackageInstaller$Session r16, r17, r18;
        java.util.Iterator r19;
        java.lang.StringBuilder r21, r27;
        java.io.PrintWriter r26, $r29;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i2 := @parameter0: int;

        r15 := @parameter1: java.util.ArrayList;

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        r16 = null;

     label01:
        r17 = new android.content.pm.PackageInstaller$Session;

        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

     label02:
        r16 = null;

        r18 = null;

     label03:
        $r3 = interfaceinvoke r1.<android.content.pm.IPackageInstaller: android.content.pm.IPackageInstallerSession openSession(int)>(i2);

        specialinvoke r17.<android.content.pm.PackageInstaller$Session: void <init>(android.content.pm.IPackageInstallerSession)>($r3);

     label04:
        r16 = r17;

        r18 = r17;

     label05:
        $z1 = virtualinvoke r15.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label24;

     label06:
        r16 = r17;

     label07:
        $r6 = "-";

        $r7 = virtualinvoke r15.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label09;

     label08:
        goto label24;

     label09:
        r16 = r17;

     label10:
        r19 = virtualinvoke r15.<java.util.ArrayList: java.util.Iterator iterator()>();

     label11:
        r16 = r17;

     label12:
        $z3 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label23;

     label13:
        r16 = r17;

     label14:
        $r8 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r8;

     label15:
        r16 = r17;

     label16:
        $i1 = virtualinvoke r20.<java.lang.String: int indexOf(int)>(58);

        if $i1 == -1 goto label20;

     label17:
        r16 = r17;

     label18:
        i3 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int processArgForStdin(java.lang.String,android.content.pm.PackageInstaller$Session)>(r20, r17);

     label19:
        if i3 == 0 goto label22;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r17);

        return 1;

     label20:
        r16 = r17;

     label21:
        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void processArgForLocalFile(java.lang.String,android.content.pm.PackageInstaller$Session)>(r20, r17);

     label22:
        goto label11;

     label23:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r17);

        return 0;

     label24:
        r16 = r17;

     label25:
        r21 = new java.lang.StringBuilder;

     label26:
        r16 = r17;

     label27:
        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

     label28:
        r16 = r17;

     label29:
        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("base.");

     label30:
        if z0 == 0 goto label31;

        r22 = "apex";

        goto label32;

     label31:
        r22 = "apk";

     label32:
        r16 = r17;

     label33:
        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

     label34:
        r16 = r17;

     label35:
        r23 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

     label36:
        r16 = r17;

     label37:
        $r4 = staticinvoke <com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata forStdIn(java.lang.String)>(r23);

        $r5 = virtualinvoke $r4.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: byte[] toByteArray()>();

        virtualinvoke r17.<android.content.pm.PackageInstaller$Session: void addFile(int,java.lang.String,long,byte[],byte[])>(0, r23, l0, $r5, null);

     label38:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r17);

        return 0;

     label39:
        $r14 := @caughtexception;

        r24 = $r14;

        goto label45;

     label40:
        $r12 := @caughtexception;

        r25 = $r12;

        goto label43;

     label41:
        $r9 := @caughtexception;

        r24 = $r9;

        r17 = r18;

        goto label45;

     label42:
        $r13 := @caughtexception;

        r25 = $r13;

     label43:
        goto label61;

     label44:
        $r11 := @caughtexception;

        r24 = $r11;

        r17 = null;

     label45:
        r16 = r17;

     label46:
        r26 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

     label47:
        r16 = r17;

     label48:
        r27 = new java.lang.StringBuilder;

     label49:
        r16 = r17;

     label50:
        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

     label51:
        r16 = r17;

     label52:
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to add file(s), reason: ");

     label53:
        r16 = r17;

     label54:
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

     label55:
        r16 = r17;

     label56:
        $r28 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r26.<java.io.PrintWriter: void println(java.lang.String)>($r28);

     label57:
        r16 = r17;

     label58:
        $r29 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r29.<java.io.PrintWriter: void println(java.lang.String)>("Failure [failed to add file(s)]");

     label59:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r17);

        return 1;

     label60:
        $r10 := @caughtexception;

        r25 = $r10;

     label61:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r16);

        throw r25;

        catch java.lang.IllegalArgumentException from label01 to label02 with label44;
        catch java.lang.Throwable from label01 to label02 with label42;
        catch java.lang.IllegalArgumentException from label03 to label04 with label41;
        catch java.lang.Throwable from label03 to label04 with label40;
        catch java.lang.IllegalArgumentException from label05 to label06 with label41;
        catch java.lang.Throwable from label05 to label06 with label40;
        catch java.lang.IllegalArgumentException from label07 to label08 with label39;
        catch java.lang.Throwable from label07 to label08 with label60;
        catch java.lang.IllegalArgumentException from label10 to label11 with label39;
        catch java.lang.Throwable from label10 to label11 with label60;
        catch java.lang.IllegalArgumentException from label12 to label13 with label39;
        catch java.lang.Throwable from label12 to label13 with label60;
        catch java.lang.IllegalArgumentException from label14 to label15 with label39;
        catch java.lang.Throwable from label14 to label15 with label60;
        catch java.lang.IllegalArgumentException from label16 to label17 with label39;
        catch java.lang.Throwable from label16 to label17 with label60;
        catch java.lang.IllegalArgumentException from label18 to label19 with label39;
        catch java.lang.Throwable from label18 to label19 with label60;
        catch java.lang.IllegalArgumentException from label21 to label22 with label39;
        catch java.lang.Throwable from label21 to label22 with label60;
        catch java.lang.IllegalArgumentException from label25 to label26 with label39;
        catch java.lang.Throwable from label25 to label26 with label60;
        catch java.lang.IllegalArgumentException from label27 to label28 with label39;
        catch java.lang.Throwable from label27 to label28 with label60;
        catch java.lang.IllegalArgumentException from label29 to label30 with label39;
        catch java.lang.Throwable from label29 to label30 with label60;
        catch java.lang.IllegalArgumentException from label33 to label34 with label39;
        catch java.lang.Throwable from label33 to label34 with label60;
        catch java.lang.IllegalArgumentException from label35 to label36 with label39;
        catch java.lang.Throwable from label35 to label36 with label60;
        catch java.lang.IllegalArgumentException from label37 to label38 with label39;
        catch java.lang.Throwable from label37 to label38 with label60;
        catch java.lang.Throwable from label46 to label47 with label60;
        catch java.lang.Throwable from label48 to label49 with label60;
        catch java.lang.Throwable from label50 to label51 with label60;
        catch java.lang.Throwable from label52 to label53 with label60;
        catch java.lang.Throwable from label54 to label55 with label60;
        catch java.lang.Throwable from label56 to label57 with label60;
        catch java.lang.Throwable from label58 to label59 with label60;
    }

    private int doCommitSession(int, boolean) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        boolean z0, z1, z2;
        java.io.PrintWriter r1;
        android.content.pm.IPackageManager $r2;
        android.content.pm.IPackageInstaller $r3;
        android.content.pm.IPackageInstallerSession $r4;
        java.lang.String $r5, $r6, $r10, $r11;
        java.lang.String[] $r7;
        java.lang.Throwable $r8, $r9;
        int i0, i1;
        android.content.pm.PackageInstaller$Session r12, r21;
        android.content.IntentSender $r17;
        android.content.Intent r18;
        java.lang.StringBuilder r22, r24;
        com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver r23;
        java.lang.Exception r25;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r12 = null;

     label01:
        r21 = new android.content.pm.PackageInstaller$Session;

     label02:
        r12 = null;

     label03:
        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageInstaller: android.content.pm.IPackageInstallerSession openSession(int)>(i0);

        specialinvoke r21.<android.content.pm.PackageInstaller$Session: void <init>(android.content.pm.IPackageInstallerSession)>($r4);

     label04:
        r12 = r21;

     label05:
        z1 = virtualinvoke r21.<android.content.pm.PackageInstaller$Session: boolean isMultiPackage()>();

     label06:
        if z1 != 0 goto label23;

        r12 = r21;

     label07:
        z2 = virtualinvoke r21.<android.content.pm.PackageInstaller$Session: boolean isStaged()>();

     label08:
        if z2 != 0 goto label23;

        r12 = r21;

     label09:
        $r7 = virtualinvoke r21.<android.content.pm.PackageInstaller$Session: java.lang.String[] getNames()>();

        staticinvoke <android.content.pm.dex.DexMetadataHelper: void validateDexPaths(java.lang.String[])>($r7);

     label10:
        goto label23;

     label11:
        $r9 := @caughtexception;

        r12 = r21;

     label12:
        r22 = new java.lang.StringBuilder;

     label13:
        r12 = r21;

     label14:
        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

     label15:
        r12 = r21;

     label16:
        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning [Could not validate the dex paths: ");

     label17:
        r12 = r21;

     label18:
        r25 = (java.lang.Exception) $r9;

        $r10 = virtualinvoke r25.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label19:
        r12 = r21;

     label20:
        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label21:
        r12 = r21;

     label22:
        $r11 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

     label23:
        r12 = r21;

     label24:
        r23 = new com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver;

     label25:
        r12 = r21;

     label26:
        specialinvoke r23.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: void <init>(com.android.server.pm.PackageManagerShellCommand$1)>(null);

     label27:
        r12 = r21;

     label28:
        $r17 = virtualinvoke r23.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: android.content.IntentSender getIntentSender()>();

        virtualinvoke r21.<android.content.pm.PackageInstaller$Session: void commit(android.content.IntentSender)>($r17);

     label29:
        r12 = r21;

     label30:
        r18 = virtualinvoke r23.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: android.content.Intent getResult()>();

     label31:
        r12 = r21;

     label32:
        i1 = virtualinvoke r18.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.content.pm.extra.STATUS", 1);

     label33:
        if i1 != 0 goto label36;

        if z0 == 0 goto label48;

        r12 = r21;

     label34:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success");

     label35:
        goto label48;

     label36:
        r12 = r21;

     label37:
        r24 = new java.lang.StringBuilder;

     label38:
        r12 = r21;

     label39:
        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

     label40:
        r12 = r21;

     label41:
        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

     label42:
        r12 = r21;

     label43:
        $r5 = virtualinvoke r18.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android.content.pm.extra.STATUS_MESSAGE");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label44:
        r12 = r21;

     label45:
        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label46:
        r12 = r21;

     label47:
        $r6 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

     label48:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r21);

        return i1;

     label49:
        $r8 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label49;
        catch java.lang.Throwable from label03 to label04 with label49;
        catch java.lang.Throwable from label05 to label06 with label49;
        catch java.lang.Throwable from label07 to label08 with label49;
        catch java.lang.IllegalStateException from label09 to label10 with label11;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label49;
        catch java.lang.Throwable from label12 to label13 with label49;
        catch java.lang.Throwable from label14 to label15 with label49;
        catch java.lang.Throwable from label16 to label17 with label49;
        catch java.lang.Throwable from label18 to label19 with label49;
        catch java.lang.Throwable from label20 to label21 with label49;
        catch java.lang.Throwable from label22 to label23 with label49;
        catch java.lang.Throwable from label24 to label25 with label49;
        catch java.lang.Throwable from label26 to label27 with label49;
        catch java.lang.Throwable from label28 to label29 with label49;
        catch java.lang.Throwable from label30 to label31 with label49;
        catch java.lang.Throwable from label32 to label33 with label49;
        catch java.lang.Throwable from label34 to label35 with label49;
        catch java.lang.Throwable from label37 to label38 with label49;
        catch java.lang.Throwable from label39 to label40 with label49;
        catch java.lang.Throwable from label41 to label42 with label49;
        catch java.lang.Throwable from label43 to label44 with label49;
        catch java.lang.Throwable from label45 to label46 with label49;
        catch java.lang.Throwable from label47 to label48 with label49;
    }

    private int doCreateSession(android.content.pm.PackageInstaller$SessionParams, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        android.content.pm.PackageInstaller$SessionParams r1;
        java.lang.String r2;
        android.content.pm.IPackageManager $r3;
        android.content.pm.IPackageInstaller $r4;
        int $i0, $i1, $i2, i3, i4;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 := @parameter0: android.content.pm.PackageInstaller$SessionParams;

        r2 := @parameter1: java.lang.String;

        i3 := @parameter2: int;

        if i3 != -1 goto label1;

        $i1 = r1.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i2 = $i1 | 64;

        r1.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i2;

     label1:
        i4 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i3, 0, "doCreateSession");

        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        $i0 = interfaceinvoke $r4.<android.content.pm.IPackageInstaller: int createSession(android.content.pm.PackageInstaller$SessionParams,java.lang.String,int)>(r1, r2, i4);

        return $i0;
    }

    private int doInstallAddSession(int, int[], boolean) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        boolean z0, $z1;
        java.io.PrintWriter r1, $r6;
        android.content.pm.PackageInstaller$Session r2, r9;
        android.content.pm.IPackageManager $r3;
        android.content.pm.IPackageInstaller $r4;
        android.content.pm.IPackageInstallerSession $r5;
        int $i0, $i1, i2, i3;
        java.lang.Throwable $r7;
        int[] r8;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i2 := @parameter0: int;

        r8 := @parameter1: int[];

        z0 := @parameter2: boolean;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r9 = null;

     label01:
        r2 = new android.content.pm.PackageInstaller$Session;

     label02:
        r9 = null;

     label03:
        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        $r5 = interfaceinvoke $r4.<android.content.pm.IPackageInstaller: android.content.pm.IPackageInstallerSession openSession(int)>(i2);

        specialinvoke r2.<android.content.pm.PackageInstaller$Session: void <init>(android.content.pm.IPackageInstallerSession)>($r5);

     label04:
        r9 = r2;

     label05:
        $z1 = virtualinvoke r2.<android.content.pm.PackageInstaller$Session: boolean isMultiPackage()>();

        if $z1 != 0 goto label09;

     label06:
        r9 = r2;

     label07:
        $r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r6.<java.io.PrintWriter: void println(java.lang.String)>("Error: parent session ID is not a multi-package session");

     label08:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        return 1;

     label09:
        i3 = 0;

     label10:
        r9 = r2;

     label11:
        $i0 = lengthof r8;

        if i3 >= $i0 goto label15;

     label12:
        r9 = r2;

     label13:
        $i1 = r8[i3];

        virtualinvoke r2.<android.content.pm.PackageInstaller$Session: void addChildSessionId(int)>($i1);

     label14:
        i3 = i3 + 1;

        goto label10;

     label15:
        if z0 == 0 goto label17;

        r9 = r2;

     label16:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success");

     label17:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        return 0;

     label18:
        $r7 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r9);

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    private void doListPermissions(java.util.ArrayList, boolean, boolean, boolean, int, int) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.util.ArrayList r1;
        boolean z0, z1, z2, z3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i14;
        java.io.PrintWriter r2;
        java.lang.String r3, $r8, $r15, $r17, $r21, $r23, $r28, $r30, $r35, $r37, $r42, $r44, $r46, $r48, $r49, $r57, $r59, $r62, $r64, $r69, $r71, $r75, $r77, $r80, $r83, $r86, $r89, r91, r96, r101, $r102, r105;
        java.lang.Object $r5, $r7, $r10;
        android.permission.IPermissionManager $r6;
        android.content.pm.ParceledListSlice $r9;
        java.lang.StringBuilder $r11, $r18, $r25, $r31, $r38, $r50, $r54, $r60, $r66, $r72, $r79, $r84;
        android.content.res.Resources $r24, $r45, $r65, $r78;
        java.lang.CharSequence $r34, $r41, $r47, $r68, $r74, $r85;
        android.content.pm.IPackageManager $r53;
        android.content.pm.PermissionGroupInfo r92;
        java.util.List r103;
        android.content.pm.PermissionInfo r104;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 := @parameter0: java.util.ArrayList;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i12 = 0;

     label01:
        if i12 >= i2 goto label29;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r3 = (java.lang.String) $r5;

        r91 = "";

        if z0 == 0 goto label13;

        if i12 <= 0 goto label02;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("");

     label02:
        if r3 == null goto label09;

        $r53 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r92 = interfaceinvoke $r53.<android.content.pm.IPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>(r3, 0);

        if z2 == 0 goto label05;

        $r78 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r92);

        if $r78 == null goto label03;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $i11 = r92.<android.content.pm.PermissionGroupInfo: int labelRes>;

        $r85 = r92.<android.content.pm.PermissionGroupInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r86 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r92, $i11, $r85);

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r89 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r89);

        goto label04;

     label03:
        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r80 = r92.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r83 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r83);

     label04:
        goto label08;

     label05:
        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        if z1 == 0 goto label06;

        r96 = "+ ";

        goto label07;

     label06:
        r96 = "";

     label07:
        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r96);

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("group:");

        $r57 = r92.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r59);

        if z1 == 0 goto label08;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  package:");

        $r62 = r92.<android.content.pm.PermissionGroupInfo: java.lang.String packageName>;

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r64);

        $r65 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r92);

        if $r65 == null goto label08;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  label:");

        $i9 = r92.<android.content.pm.PermissionGroupInfo: int labelRes>;

        $r68 = r92.<android.content.pm.PermissionGroupInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r69 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r92, $i9, $r68);

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r71);

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  description:");

        $i10 = r92.<android.content.pm.PermissionGroupInfo: int descriptionRes>;

        $r74 = r92.<android.content.pm.PermissionGroupInfo: java.lang.CharSequence nonLocalizedDescription>;

        $r75 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r92, $i10, $r74);

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r77);

     label08:
        goto label12;

     label09:
        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        if z1 == 0 goto label10;

        if z2 != 0 goto label10;

        r101 = "+ ";

        goto label11;

     label10:
        r101 = "";

     label11:
        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r101);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ungrouped:");

        $r102 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r102);

     label12:
        r91 = "  ";

        goto label13;

     label13:
        $r6 = r0.<com.android.server.pm.PackageManagerShellCommand: android.permission.IPermissionManager mPermissionManager>;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        $r8 = (java.lang.String) $r7;

        $r9 = interfaceinvoke $r6.<android.permission.IPermissionManager: android.content.pm.ParceledListSlice queryPermissionsByGroup(java.lang.String,int)>($r8, 0);

        r103 = virtualinvoke $r9.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        i3 = interfaceinvoke r103.<java.util.List: int size()>();

        z3 = 1;

        i13 = 0;

     label14:
        if i13 >= i3 goto label27;

        $r10 = interfaceinvoke r103.<java.util.List: java.lang.Object get(int)>(i13);

        r104 = (android.content.pm.PermissionInfo) $r10;

        if z0 == 0 goto label15;

        if r3 != null goto label15;

        $r49 = r104.<android.content.pm.PermissionInfo: java.lang.String group>;

        if $r49 == null goto label15;

        goto label26;

     label15:
        $i14 = r104.<android.content.pm.PermissionInfo: int protectionLevel>;

        i4 = $i14 & 15;

        if i4 < i0 goto label26;

        if i4 <= i1 goto label16;

        goto label26;

     label16:
        if z2 == 0 goto label21;

        if z3 == 0 goto label17;

        z3 = 0;

        goto label18;

     label17:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label18:
        $r45 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r104);

        if $r45 == null goto label19;

        $i8 = r104.<android.content.pm.PermissionInfo: int labelRes>;

        $r47 = r104.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r48 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r104, $i8, $r47);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r48);

        goto label20;

     label19:
        $r46 = r104.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r46);

     label20:
        goto label26;

     label21:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r91);

        if z1 == 0 goto label22;

        r105 = "+ ";

        goto label23;

     label22:
        r105 = "";

     label23:
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r105);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("permission:");

        $r15 = r104.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        if z1 == 0 goto label25;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r91);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  package:");

        $r21 = r104.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        $r24 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r104);

        if $r24 == null goto label24;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r91);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  label:");

        $i6 = r104.<android.content.pm.PermissionInfo: int labelRes>;

        $r34 = r104.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r35 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r104, $i6, $r34);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r91);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  description:");

        $i7 = r104.<android.content.pm.PermissionInfo: int descriptionRes>;

        $r41 = r104.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedDescription>;

        $r42 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r104, $i7, $r41);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        goto label24;

     label24:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r91);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  protectionLevel:");

        $i5 = r104.<android.content.pm.PermissionInfo: int protectionLevel>;

        $r28 = staticinvoke <android.content.pm.PermissionInfo: java.lang.String protectionToString(int)>($i5);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r30);

        goto label26;

     label25:
        goto label26;

     label26:
        i13 = i13 + 1;

        goto label14;

     label27:
        if z2 == 0 goto label28;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("");

     label28:
        i12 = i12 + 1;

        goto label01;

     label29:
        return;
    }

    private int doRemoveSplits(int, java.util.Collection, boolean) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0;
        boolean z0, $z1;
        java.io.PrintWriter r1;
        android.content.pm.IPackageManager $r3;
        android.content.pm.IPackageInstaller $r4;
        android.content.pm.IPackageInstallerSession $r5;
        java.lang.Object $r6;
        java.lang.String $r7, $r10, $r11;
        java.lang.Throwable $r8, $r9;
        java.util.Collection r12;
        android.content.pm.PackageInstaller$Session r13, r14, r20;
        java.util.Iterator r16;
        java.lang.StringBuilder r21;
        java.io.IOException r22;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i0 := @parameter0: int;

        r12 := @parameter1: java.util.Collection;

        z0 := @parameter2: boolean;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r13 = null;

        r14 = null;

     label01:
        r20 = new android.content.pm.PackageInstaller$Session;

     label02:
        r13 = null;

        r14 = null;

     label03:
        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        $r5 = interfaceinvoke $r4.<android.content.pm.IPackageInstaller: android.content.pm.IPackageInstallerSession openSession(int)>(i0);

        specialinvoke r20.<android.content.pm.PackageInstaller$Session: void <init>(android.content.pm.IPackageInstallerSession)>($r5);

     label04:
        r13 = r20;

        r14 = r20;

     label05:
        r16 = interfaceinvoke r12.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        r13 = r20;

        r14 = r20;

     label07:
        $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

     label08:
        r13 = r20;

        r14 = r20;

     label09:
        $r6 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        virtualinvoke r20.<android.content.pm.PackageInstaller$Session: void removeSplit(java.lang.String)>($r7);

     label10:
        goto label06;

     label11:
        if z0 == 0 goto label13;

        r13 = r20;

        r14 = r20;

     label12:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success");

     label13:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r20);

        return 0;

     label14:
        $r8 := @caughtexception;

        goto label26;

     label15:
        $r9 := @caughtexception;

        r13 = r14;

     label16:
        r21 = new java.lang.StringBuilder;

     label17:
        r13 = r14;

     label18:
        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

     label19:
        r13 = r14;

     label20:
        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: failed to remove split; ");

     label21:
        r13 = r14;

     label22:
        r22 = (java.io.IOException) $r9;

        $r10 = virtualinvoke r22.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label23:
        r13 = r14;

     label24:
        $r11 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

     label25:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r14);

        return 1;

     label26:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r13);

        throw $r8;

        catch java.io.IOException from label01 to label02 with label15;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.io.IOException from label03 to label04 with label15;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.io.IOException from label05 to label06 with label15;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.io.IOException from label09 to label10 with label15;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.io.IOException from label12 to label13 with label15;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label17 with label14;
        catch java.lang.Throwable from label18 to label19 with label14;
        catch java.lang.Throwable from label20 to label21 with label14;
        catch java.lang.Throwable from label22 to label23 with label14;
        catch java.lang.Throwable from label24 to label25 with label14;
    }

    private int doRunInstall(com.android.server.pm.PackageManagerShellCommand$InstallParams) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.util.ArrayList r1;
        long l0, $l4, $l6, $l11;
        int i1, $i2, $i3, $i14, $i15, i16, i17, i20, i21;
        android.content.pm.PackageInstaller$SessionParams $r2, $r4, $r5, $r6, $r7, $r8, $r21;
        android.content.pm.DataLoaderParams $r3;
        boolean $z0, $z1, $z2, $z3, $z5, z6, z7, z8, z9, z12;
        byte $b12;
        java.lang.String $r9, $r22;
        java.lang.Object $r10;
        java.lang.Exception $r11, $r13, $r16, $r17;
        java.lang.Throwable $r12, $r18, r24;
        com.android.server.pm.PackageManagerShellCommand$InstallParams r19;
        java.io.PrintWriter r20;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r19 := @parameter0: com.android.server.pm.PackageManagerShellCommand$InstallParams;

        r20 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r2 = r19.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        $r3 = $r2.<android.content.pm.PackageInstaller$SessionParams: android.content.pm.DataLoaderParams dataLoaderParams>;

        if $r3 == null goto label01;

        z6 = 1;

        goto label02;

     label01:
        z6 = 0;

     label02:
        $r4 = r19.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        $i2 = $r4.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i3 = $i2 & 131072;

        if $i3 == 0 goto label03;

        z7 = 1;

        goto label04;

     label03:
        z7 = 0;

     label04:
        r1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.util.ArrayList getRemainingArgs()>();

        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label06;

        $r9 = "-";

        $r10 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z5 == 0 goto label05;

        goto label06;

     label05:
        z8 = 0;

        goto label07;

     label06:
        z8 = 1;

     label07:
        $i14 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i14 <= 1 goto label08;

        z9 = 1;

        goto label09;

     label08:
        z9 = 0;

     label09:
        if z8 == 0 goto label10;

        $r8 = r19.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        $l11 = $r8.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes>;

        $b12 = $l11 cmp -1L;

        if $b12 != 0 goto label10;

        virtualinvoke r20.<java.io.PrintWriter: void println(java.lang.String)>("Error: must either specify a package size or an APK file");

        return 1;

     label10:
        if z7 == 0 goto label11;

        if z9 == 0 goto label11;

        virtualinvoke r20.<java.io.PrintWriter: void println(java.lang.String)>("Error: can\'t specify SPLIT(s) for APEX");

        return 1;

     label11:
        if z6 != 0 goto label14;

        if z8 == 0 goto label12;

        if z9 == 0 goto label12;

        virtualinvoke r20.<java.io.PrintWriter: void println(java.lang.String)>("Error: can\'t specify SPLIT(s) along with STDIN");

        return 1;

     label12:
        $z3 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z3 == 0 goto label13;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("-");

        goto label14;

     label13:
        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void setParamsSize(com.android.server.pm.PackageManagerShellCommand$InstallParams,java.util.List)>(r19, r1);

     label14:
        $r21 = r19.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        $r22 = r19.<com.android.server.pm.PackageManagerShellCommand$InstallParams: java.lang.String installerPackageName>;

        $i15 = r19.<com.android.server.pm.PackageManagerShellCommand$InstallParams: int userId>;

        i16 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doCreateSession(android.content.pm.PackageInstaller$SessionParams,java.lang.String,int)>($r21, $r22, $i15);

        if z6 == 0 goto label24;

     label15:
        $r7 = r19.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        l0 = $r7.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes>;

     label16:
        z12 = 1;

     label17:
        i17 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doAddFiles(int,java.util.ArrayList,long,boolean)>(i16, r1, l0, z7);

     label18:
        if i17 == 0 goto label31;

     label19:
        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doAbandonSession(int,boolean)>(i16, 0);

     label20:
        goto label22;

     label21:
        $r17 := @caughtexception;

     label22:
        return 1;

     label23:
        $r12 := @caughtexception;

        r24 = $r12;

        z12 = 1;

        goto label52;

     label24:
        z12 = 1;

     label25:
        $r5 = r19.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        $l4 = $r5.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes>;

        i1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doWriteSplits(int,java.util.ArrayList,long,boolean)>(i16, r1, $l4, z7);

     label26:
        if i1 == 0 goto label31;

     label27:
        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doAbandonSession(int,boolean)>(i16, 0);

     label28:
        goto label30;

     label29:
        $r13 := @caughtexception;

     label30:
        return 1;

     label31:
        z12 = 1;

     label32:
        i20 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doCommitSession(int,boolean)>(i16, 0);

     label33:
        if i20 == 0 goto label38;

     label34:
        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doAbandonSession(int,boolean)>(i16, 0);

     label35:
        goto label37;

     label36:
        $r16 := @caughtexception;

     label37:
        return 1;

     label38:
        z12 = 0;

     label39:
        $r6 = r19.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        $z1 = $r6.<android.content.pm.PackageInstaller$SessionParams: boolean isStaged>;

        if $z1 == 0 goto label47;

     label40:
        z12 = 0;

     label41:
        $z2 = r19.<com.android.server.pm.PackageManagerShellCommand$InstallParams: boolean mWaitForStagedSessionReady>;

        if $z2 != 0 goto label43;

     label42:
        goto label47;

     label43:
        z12 = 0;

     label44:
        $l6 = r19.<com.android.server.pm.PackageManagerShellCommand$InstallParams: long timeoutMs>;

        i21 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doWaitForStagedSessionRead(int,long,java.io.PrintWriter)>(i16, $l6, r20);

     label45:
        goto label46;

     label46:
        return i21;

     label47:
        z12 = 0;

     label48:
        virtualinvoke r20.<java.io.PrintWriter: void println(java.lang.String)>("Success");

     label49:
        goto label50;

     label50:
        return 0;

     label51:
        $r18 := @caughtexception;

        r24 = $r18;

     label52:
        if z12 == 0 goto label56;

     label53:
        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doAbandonSession(int,boolean)>(i16, 0);

     label54:
        goto label56;

     label55:
        $r11 := @caughtexception;

     label56:
        throw r24;

        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label17 to label18 with label51;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Throwable from label25 to label26 with label51;
        catch java.lang.Exception from label27 to label28 with label29;
        catch java.lang.Throwable from label32 to label33 with label51;
        catch java.lang.Exception from label34 to label35 with label36;
        catch java.lang.Throwable from label39 to label40 with label51;
        catch java.lang.Throwable from label41 to label42 with label51;
        catch java.lang.Throwable from label44 to label45 with label51;
        catch java.lang.Throwable from label48 to label49 with label51;
        catch java.lang.Exception from label53 to label54 with label55;
    }

    private int doWaitForStagedSessionRead(int, long, java.io.PrintWriter) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0, $i4;
        java.io.PrintWriter r1;
        long l1, $l5, $l6, l7, l8, l9;
        byte $b2, $b3;
        android.content.pm.IPackageManager $r3, $r18;
        android.content.pm.IPackageInstaller $r4, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r5, $r13, $r20, $r25;
        java.lang.String $r9, $r12, $r17, $r24, $r29;
        android.content.pm.PackageInstaller$SessionInfo r30;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i0 := @parameter0: int;

        l7 := @parameter1: long;

        r1 := @parameter2: java.io.PrintWriter;

        l8 = l7;

        $b2 = l7 cmp 0L;

        if $b2 > 0 goto label1;

        l8 = 60000L;

     label1:
        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        r30 = interfaceinvoke $r4.<android.content.pm.IPackageInstaller: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>(i0);

        if r30 != null goto label2;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [Unknown session ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        return 1;

     label2:
        $z0 = virtualinvoke r30.<android.content.pm.PackageInstaller$SessionInfo: boolean isStaged()>();

        if $z0 != 0 goto label3;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [Session ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a staged session]");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        return 1;

     label3:
        l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = l9 + l8;

     label4:
        $b3 = l9 cmp l1;

        if $b3 >= 0 goto label6;

        if r30 == null goto label5;

        $z4 = virtualinvoke r30.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionReady()>();

        if $z4 != 0 goto label6;

        $z5 = virtualinvoke r30.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionFailed()>();

        if $z5 == 0 goto label5;

        goto label6;

     label5:
        $l5 = l1 - l9;

        $l6 = staticinvoke <java.lang.Math: long min(long,long)>($l5, 100L);

        staticinvoke <android.os.SystemClock: void sleep(long)>($l6);

        l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r18 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r19 = interfaceinvoke $r18.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        r30 = interfaceinvoke $r19.<android.content.pm.IPackageInstaller: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>(i0);

        goto label4;

     label6:
        if r30 != null goto label7;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Failure [failed to retrieve SessionInfo]");

        return 1;

     label7:
        $z1 = virtualinvoke r30.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionReady()>();

        if $z1 != 0 goto label8;

        $z3 = virtualinvoke r30.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionFailed()>();

        if $z3 != 0 goto label8;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [timed out after ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l8);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms]");

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        return 1;

     label8:
        $z2 = virtualinvoke r30.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionReady()>();

        if $z2 != 0 goto label9;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error [");

        $i4 = virtualinvoke r30.<android.content.pm.PackageInstaller$SessionInfo: int getStagedSessionErrorCode()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] [");

        $r9 = virtualinvoke r30.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String getStagedSessionErrorMessage()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return 1;

     label9:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success. Reboot device to apply staged session");

        return 0;
    }

    private int doWriteSplit(int, java.lang.String, long, java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0;
        boolean z0, $z1;
        android.content.pm.IPackageInstaller r1;
        android.content.pm.IPackageManager $r2;
        android.content.pm.IPackageInstallerSession $r3;
        java.lang.String $r4, $r6, $r8, r21, r22, $r36, $r37;
        java.io.FileDescriptor $r5, $r9;
        java.io.PrintWriter $r7, r24, r27, r34;
        byte $b1, $b3;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, r29, r31;
        long l2;
        android.os.ParcelFileDescriptor r25, r26;
        android.content.pm.PackageInstaller$Session r30, r32, r39;
        java.lang.StringBuilder r40, r41, r42;
        java.io.IOException r43;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i0 := @parameter0: int;

        r21 := @parameter1: java.lang.String;

        l2 := @parameter2: long;

        r22 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

     label01:
        r39 = new android.content.pm.PackageInstaller$Session;

        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

     label02:
        $r3 = interfaceinvoke r1.<android.content.pm.IPackageInstaller: android.content.pm.IPackageInstallerSession openSession(int)>(i0);

        specialinvoke r39.<android.content.pm.PackageInstaller$Session: void <init>(android.content.pm.IPackageInstallerSession)>($r3);

     label03:
        r24 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r4 = "-";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r21);

        if $z1 == 0 goto label05;

        $r9 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.FileDescriptor getInFileDescriptor()>();

        r25 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>($r9);

     label04:
        goto label16;

     label05:
        if r21 == null goto label15;

     label06:
        r26 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.os.ParcelFileDescriptor openFileForSystem(java.lang.String,java.lang.String)>(r21, "r");

     label07:
        if r26 != null goto label08;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r39);

        return -1;

     label08:
        l2 = virtualinvoke r26.<android.os.ParcelFileDescriptor: long getStatSize()>();

     label09:
        $b1 = l2 cmp 0L;

        if $b1 >= 0 goto label14;

     label10:
        r27 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get size of: ");

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r8 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>($r8);

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r39);

        return -1;

     label12:
        $r15 := @caughtexception;

        r29 = $r15;

        r30 = r39;

        goto label36;

     label13:
        $r17 := @caughtexception;

        r31 = $r17;

        r32 = r39;

        goto label33;

     label14:
        r25 = r26;

        goto label16;

     label15:
        $r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.FileDescriptor getInFileDescriptor()>();

        r25 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>($r5);

     label16:
        $b3 = l2 cmp 0L;

        if $b3 > 0 goto label19;

     label17:
        $r7 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r7.<java.io.PrintWriter: void println(java.lang.String)>("Error: must specify a APK size");

     label18:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r39);

        return 1;

     label19:
        virtualinvoke r39.<android.content.pm.PackageInstaller$Session: void write(java.lang.String,long,long,android.os.ParcelFileDescriptor)>(r22, 0L, l2, r25);

     label20:
        if z0 == 0 goto label22;

     label21:
        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Success: streamed ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r6 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r24.<java.io.PrintWriter: void println(java.lang.String)>($r6);

     label22:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r39);

        return 0;

     label23:
        $r16 := @caughtexception;

        r29 = $r16;

        r30 = r39;

        goto label36;

     label24:
        $r14 := @caughtexception;

        r31 = $r14;

        r32 = r39;

        goto label33;

     label25:
        $r18 := @caughtexception;

        r29 = $r18;

        r30 = r39;

        goto label36;

     label26:
        $r11 := @caughtexception;

        r31 = $r11;

        r32 = r39;

        goto label33;

     label27:
        $r13 := @caughtexception;

        r29 = $r13;

        goto label30;

     label28:
        $r19 := @caughtexception;

        r31 = $r19;

        goto label32;

     label29:
        $r12 := @caughtexception;

        r29 = $r12;

     label30:
        r30 = null;

        goto label36;

     label31:
        $r10 := @caughtexception;

        r31 = $r10;

     label32:
        r32 = null;

     label33:
        r34 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: failed to write; ");

        r43 = (java.io.IOException) r31;

        $r36 = virtualinvoke r43.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r37 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r34.<java.io.PrintWriter: void println(java.lang.String)>($r37);

     label34:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r32);

        return 1;

     label35:
        $r20 := @caughtexception;

        r30 = r32;

        r29 = $r20;

     label36:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r30);

        throw r29;

        catch java.io.IOException from label01 to label02 with label31;
        catch java.lang.Throwable from label01 to label02 with label29;
        catch java.io.IOException from label02 to label03 with label28;
        catch java.lang.Throwable from label02 to label03 with label27;
        catch java.io.IOException from label03 to label04 with label26;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.io.IOException from label06 to label07 with label26;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.io.IOException from label08 to label09 with label26;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.io.IOException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.io.IOException from label15 to label16 with label26;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.io.IOException from label17 to label18 with label24;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.io.IOException from label19 to label20 with label24;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.io.IOException from label21 to label22 with label24;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label33 to label34 with label35;
    }

    private int doWriteSplits(int, java.util.ArrayList, long, boolean) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0, $i2, $i3;
        long l1;
        boolean z0, z1, $z2;
        java.util.Iterator r1;
        java.lang.String r2, r10, r11;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        java.io.File $r8;
        java.util.ArrayList r9;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i0 := @parameter0: int;

        r9 := @parameter1: java.util.ArrayList;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        $i2 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        if $i2 <= 1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r1 = virtualinvoke r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r4;

        if z1 == 0 goto label4;

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r2);

        r10 = virtualinvoke $r8.<java.io.File: java.lang.String getName()>();

        goto label7;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("base.");

        if z0 == 0 goto label5;

        r11 = "apex";

        goto label6;

     label5:
        r11 = "apk";

     label6:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        $i3 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doWriteSplit(int,java.lang.String,long,java.lang.String,boolean)>(i0, r2, l1, r10, 0);

        if $i3 == 0 goto label8;

        return 1;

     label8:
        goto label3;

     label9:
        return 0;
    }

    private static java.lang.String enabledSettingToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 0 goto label5;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        return "unknown";

     label1:
        return "disabled-until-used";

     label2:
        return "disabled-user";

     label3:
        return "disabled";

     label4:
        return "enabled";

     label5:
        return "default";
    }

    private java.util.ArrayList getRemainingArgs()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label1:
        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r2 == null goto label2;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        goto label1;

     label2:
        return $r3;
    }

    private android.content.res.Resources getResources(android.content.pm.PackageItemInfo) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        android.content.pm.PackageItemInfo r1;
        android.content.pm.ApplicationInfo r2;
        java.lang.String $r3, $r6, $r9, $r11;
        java.util.WeakHashMap $r4, $r12;
        java.lang.Object $r5;
        android.content.pm.IPackageManager $r7;
        android.content.res.AssetManager $r8;
        android.content.res.Resources $r10, r14;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 := @parameter0: android.content.pm.PackageItemInfo;

        $r4 = r0.<com.android.server.pm.PackageManagerShellCommand: java.util.WeakHashMap mResourceCache>;

        $r3 = r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r5 = virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r3);

        r14 = (android.content.res.Resources) $r5;

        if r14 == null goto label1;

        return r14;

     label1:
        $r7 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r6 = r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        r2 = interfaceinvoke $r7.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>($r6, 536904192, 0);

        $r8 = new android.content.res.AssetManager;

        specialinvoke $r8.<android.content.res.AssetManager: void <init>()>();

        $r9 = r2.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        virtualinvoke $r8.<android.content.res.AssetManager: int addAssetPath(java.lang.String)>($r9);

        $r10 = new android.content.res.Resources;

        specialinvoke $r10.<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>($r8, null, null);

        $r12 = r0.<com.android.server.pm.PackageManagerShellCommand: java.util.WeakHashMap mResourceCache>;

        $r11 = r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        virtualinvoke $r12.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

        return $r10;
    }

    private static boolean isNumber(java.lang.String)
    {
        java.lang.Throwable $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

     label1:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        return 1;

     label3:
        $r0 := @caughtexception;

        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private boolean isProductApp(java.lang.String)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        boolean z1, z2;
        android.content.pm.IPackageManager $r1;
        android.content.pm.ApplicationInfo $r2;
        android.os.RemoteException $r3;
        java.lang.String r4;
        android.content.pm.PackageInfo r5;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r4 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r5 = interfaceinvoke $r1.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r4, 0, 0);

     label2:
        z2 = 0;

        if r5 == null goto label5;

     label3:
        $r2 = r5.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        z1 = virtualinvoke $r2.<android.content.pm.ApplicationInfo: boolean isProduct()>();

     label4:
        z2 = 0;

        if z1 == 0 goto label5;

        z2 = 1;

     label5:
        return z2;

     label6:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    private boolean isSystemExtApp(java.lang.String)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        boolean z1, z2;
        android.content.pm.IPackageManager $r1;
        android.content.pm.ApplicationInfo $r2;
        android.os.RemoteException $r3;
        java.lang.String r4;
        android.content.pm.PackageInfo r5;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r4 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r5 = interfaceinvoke $r1.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r4, 0, 0);

     label2:
        z2 = 0;

        if r5 == null goto label5;

     label3:
        $r2 = r5.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        z1 = virtualinvoke $r2.<android.content.pm.ApplicationInfo: boolean isSystemExt()>();

     label4:
        z2 = 0;

        if z1 == 0 goto label5;

        z2 = 1;

     label5:
        return z2;

     label6:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    private boolean isVendorApp(java.lang.String)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        boolean z1, z2;
        android.content.pm.IPackageManager $r1;
        android.content.pm.ApplicationInfo $r2;
        android.os.RemoteException $r3;
        java.lang.String r4;
        android.content.pm.PackageInfo r5;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r4 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r5 = interfaceinvoke $r1.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r4, 0, 0);

     label2:
        z2 = 0;

        if r5 == null goto label5;

     label3:
        $r2 = r5.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        z1 = virtualinvoke $r2.<android.content.pm.ApplicationInfo: boolean isVendor()>();

     label4:
        z2 = 0;

        if z1 == 0 goto label5;

        z2 = 1;

     label5:
        return z2;

     label6:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    static void lambda$runSetHomeActivity$1(java.util.concurrent.CompletableFuture, android.os.Bundle)
    {
        java.util.concurrent.CompletableFuture r0;
        android.os.Bundle r1;
        java.lang.Boolean $r2;
        boolean z1;

        r0 := @parameter0: java.util.concurrent.CompletableFuture;

        r1 := @parameter1: android.os.Bundle;

        if r1 == null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        virtualinvoke r0.<java.util.concurrent.CompletableFuture: boolean complete(java.lang.Object)>($r2);

        return;
    }

    private java.lang.String linkStateToString(int)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i0 := @parameter0: int;

        if i0 == 0 goto label5;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown link state: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label1:
        return "always ask";

     label2:
        return "never";

     label3:
        return "always";

     label4:
        return "ask";

     label5:
        return "undefined";
    }

    private java.lang.String loadText(android.content.pm.PackageItemInfo, int, java.lang.CharSequence) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0;
        java.lang.CharSequence r1;
        java.lang.String $r2, r6;
        android.content.res.Resources$NotFoundException $r3;
        android.content.pm.PackageItemInfo r4;
        android.content.res.Resources r5;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r4 := @parameter0: android.content.pm.PackageItemInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        if r1 == null goto label1;

        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        return $r2;

     label1:
        if i0 == 0 goto label5;

        r5 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r4);

        if r5 == null goto label5;

     label2:
        r6 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(i0);

     label3:
        return r6;

     label4:
        $r3 := @caughtexception;

     label5:
        return null;

        catch android.content.res.Resources$NotFoundException from label2 to label3 with label4;
    }

    private com.android.server.pm.PackageManagerShellCommand$InstallParams makeInstallParams()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        long l0, $l8;
        android.content.pm.PackageInstaller$SessionParams $r2;
        com.android.server.pm.PackageManagerShellCommand$InstallParams $r3;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, z34, z35;
        java.lang.String $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r25, $r27, $r28, $r34, r37;
        byte $b16, b29;
        java.lang.IllegalArgumentException $r16, $r19, $r22, $r29, $r33;
        android.net.Uri $r24, $r26;
        java.lang.StringBuilder $r30;
        java.lang.Throwable $r35;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        $r2 = new android.content.pm.PackageInstaller$SessionParams;

        specialinvoke $r2.<android.content.pm.PackageInstaller$SessionParams: void <init>(int)>(1);

        $r3 = new com.android.server.pm.PackageManagerShellCommand$InstallParams;

        specialinvoke $r3.<com.android.server.pm.PackageManagerShellCommand$InstallParams: void <init>(com.android.server.pm.PackageManagerShellCommand$1)>(null);

        $r3.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams> = $r2;

        $i1 = $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i2 = $i1 | 4194304;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i2;

        z34 = 1;

     label01:
        r37 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        if r37 == null goto label78;

        b29 = -1;

        $i5 = virtualinvoke r37.<java.lang.String: int hashCode()>();

        lookupswitch($i5)
        {
            case -2091380650: goto label35;
            case -1950997763: goto label34;
            case -1777984902: goto label33;
            case -1313152697: goto label32;
            case -1137116608: goto label31;
            case -951415743: goto label30;
            case -844792735: goto label29;
            case -706813505: goto label28;
            case -653924786: goto label27;
            case -170474990: goto label26;
            case 1477: goto label25;
            case 1478: goto label24;
            case 1495: goto label23;
            case 1497: goto label22;
            case 1498: goto label21;
            case 1500: goto label20;
            case 1507: goto label19;
            case 1509: goto label18;
            case 1511: goto label17;
            case 42995400: goto label16;
            case 43010092: goto label15;
            case 77141024: goto label14;
            case 148207464: goto label13;
            case 1051781117: goto label12;
            case 1067504745: goto label11;
            case 1332870850: goto label10;
            case 1333024815: goto label09;
            case 1333469547: goto label08;
            case 1333511957: goto label07;
            case 1494514835: goto label06;
            case 1507519174: goto label05;
            case 2015272120: goto label04;
            case 2037590537: goto label03;
            default: goto label02;
        };

     label02:
        goto label36;

     label03:
        $z0 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--skip-verification");

        if $z0 == 0 goto label02;

        b29 = 32;

        goto label36;

     label04:
        $z2 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--force-sdk");

        if $z2 == 0 goto label02;

        b29 = 24;

        goto label36;

     label05:
        $z3 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--staged");

        if $z3 == 0 goto label02;

        b29 = 27;

        goto label36;

     label06:
        $z4 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--restrict-permissions");

        if $z4 == 0 goto label02;

        b29 = 7;

        goto label36;

     label07:
        $z5 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--wait");

        if $z5 == 0 goto label02;

        b29 = 30;

        goto label36;

     label08:
        $z6 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z6 == 0 goto label02;

        b29 = 20;

        goto label36;

     label09:
        $z7 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--full");

        if $z7 == 0 goto label02;

        b29 = 18;

        goto label36;

     label10:
        $z8 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--apex");

        if $z8 == 0 goto label02;

        b29 = 25;

        goto label36;

     label11:
        $z9 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--preload");

        if $z9 == 0 goto label02;

        b29 = 19;

        goto label36;

     label12:
        $z10 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--ephemeral");

        if $z10 == 0 goto label02;

        b29 = 15;

        goto label36;

     label13:
        $z11 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--originating-uri");

        if $z11 == 0 goto label02;

        b29 = 9;

        goto label36;

     label14:
        $z12 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--force-queryable");

        if $z12 == 0 goto label02;

        b29 = 28;

        goto label36;

     label15:
        $z13 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--pkg");

        if $z13 == 0 goto label02;

        b29 = 12;

        goto label36;

     label16:
        $z14 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--abi");

        if $z14 == 0 goto label02;

        b29 = 14;

        goto label36;

     label17:
        $z15 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("-t");

        if $z15 == 0 goto label02;

        b29 = 3;

        goto label36;

     label18:
        $z16 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("-r");

        if $z16 == 0 goto label02;

        b29 = 0;

        goto label36;

     label19:
        $z17 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("-p");

        if $z17 == 0 goto label02;

        b29 = 11;

        goto label36;

     label20:
        $z18 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("-i");

        if $z18 == 0 goto label02;

        b29 = 2;

        goto label36;

     label21:
        $z19 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("-g");

        if $z19 == 0 goto label02;

        b29 = 6;

        goto label36;

     label22:
        $z20 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z20 == 0 goto label02;

        b29 = 4;

        goto label36;

     label23:
        $z21 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("-d");

        if $z21 == 0 goto label02;

        b29 = 5;

        goto label36;

     label24:
        $z22 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("-S");

        if $z22 == 0 goto label02;

        b29 = 13;

        goto label36;

     label25:
        $z23 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("-R");

        if $z23 == 0 goto label02;

        b29 = 1;

        goto label36;

     label26:
        $z24 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--multi-package");

        if $z24 == 0 goto label02;

        b29 = 26;

        goto label36;

     label27:
        $z25 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--enable-rollback");

        if $z25 == 0 goto label02;

        b29 = 29;

        goto label36;

     label28:
        $z26 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--referrer");

        if $z26 == 0 goto label02;

        b29 = 10;

        goto label36;

     label29:
        $z27 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--no-wait");

        if $z27 == 0 goto label02;

        b29 = 31;

        goto label36;

     label30:
        $z28 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--instant");

        if $z28 == 0 goto label02;

        b29 = 16;

        goto label36;

     label31:
        $z29 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--instantapp");

        if $z29 == 0 goto label02;

        b29 = 17;

        goto label36;

     label32:
        $z30 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--install-location");

        if $z30 == 0 goto label02;

        b29 = 21;

        goto label36;

     label33:
        $z31 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--dont-kill");

        if $z31 == 0 goto label02;

        b29 = 8;

        goto label36;

     label34:
        $z32 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--force-uuid");

        if $z32 == 0 goto label02;

        b29 = 23;

        goto label36;

     label35:
        $z33 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--install-reason");

        if $z33 == 0 goto label02;

        b29 = 22;

     label36:
        tableswitch(b29)
        {
            case 0: goto label76;
            case 1: goto label75;
            case 2: goto label73;
            case 3: goto label72;
            case 4: goto label71;
            case 5: goto label70;
            case 6: goto label69;
            case 7: goto label68;
            case 8: goto label67;
            case 9: goto label66;
            case 10: goto label65;
            case 11: goto label63;
            case 12: goto label61;
            case 13: goto label59;
            case 14: goto label58;
            case 15: goto label57;
            case 16: goto label57;
            case 17: goto label57;
            case 18: goto label56;
            case 19: goto label55;
            case 20: goto label54;
            case 21: goto label53;
            case 22: goto label52;
            case 23: goto label51;
            case 24: goto label50;
            case 25: goto label49;
            case 26: goto label48;
            case 27: goto label47;
            case 28: goto label46;
            case 29: goto label44;
            case 30: goto label40;
            case 31: goto label39;
            case 32: goto label38;
            default: goto label37;
        };

     label37:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r33 = new java.lang.IllegalArgumentException;

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);

        throw $r33;

     label38:
        $i6 = $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i7 = $i6 | 524288;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i7;

        z35 = z34;

        goto label77;

     label39:
        $r3.<com.android.server.pm.PackageManagerShellCommand$InstallParams: boolean mWaitForStagedSessionReady> = 0;

        z35 = z34;

        goto label77;

     label40:
        $r3.<com.android.server.pm.PackageManagerShellCommand$InstallParams: boolean mWaitForStagedSessionReady> = 1;

     label41:
        $r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String peekNextArg()>();

        $l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

        $r3.<com.android.server.pm.PackageManagerShellCommand$InstallParams: long timeoutMs> = $l8;

        virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

     label42:
        z35 = z34;

        goto label77;

     label43:
        $r35 := @caughtexception;

        z35 = z34;

        goto label77;

     label44:
        $r6 = $r3.<com.android.server.pm.PackageManagerShellCommand$InstallParams: java.lang.String installerPackageName>;

        if $r6 != null goto label45;

        $r3.<com.android.server.pm.PackageManagerShellCommand$InstallParams: java.lang.String installerPackageName> = "com.android.shell";

     label45:
        $i9 = $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i10 = $i9 | 262144;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i10;

        z35 = z34;

        goto label77;

     label46:
        virtualinvoke $r2.<android.content.pm.PackageInstaller$SessionParams: void setForceQueryable()>();

        z35 = z34;

        goto label77;

     label47:
        virtualinvoke $r2.<android.content.pm.PackageInstaller$SessionParams: void setStaged()>();

        z35 = z34;

        goto label77;

     label48:
        virtualinvoke $r2.<android.content.pm.PackageInstaller$SessionParams: void setMultiPackage()>();

        z35 = z34;

        goto label77;

     label49:
        virtualinvoke $r2.<android.content.pm.PackageInstaller$SessionParams: void setInstallAsApex()>();

        virtualinvoke $r2.<android.content.pm.PackageInstaller$SessionParams: void setStaged()>();

        z35 = z34;

        goto label77;

     label50:
        z35 = z34;

        goto label77;

     label51:
        $i11 = $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i12 = $i11 | 512;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i12;

        $r7 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String volumeUuid> = $r7;

        z35 = z34;

        $r9 = "internal";

        $r8 = $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String volumeUuid>;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label77;

        $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String volumeUuid> = null;

        z35 = z34;

        goto label77;

     label52:
        $r10 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installReason> = $i13;

        z35 = z34;

        goto label77;

     label53:
        $r11 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installLocation> = $i14;

        z35 = z34;

        goto label77;

     label54:
        $r12 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        $i15 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r12);

        $r3.<com.android.server.pm.PackageManagerShellCommand$InstallParams: int userId> = $i15;

        z35 = z34;

        goto label77;

     label55:
        virtualinvoke $r2.<android.content.pm.PackageInstaller$SessionParams: void setInstallAsVirtualPreload()>();

        z35 = z34;

        goto label77;

     label56:
        virtualinvoke $r2.<android.content.pm.PackageInstaller$SessionParams: void setInstallAsInstantApp(boolean)>(0);

        z35 = z34;

        goto label77;

     label57:
        virtualinvoke $r2.<android.content.pm.PackageInstaller$SessionParams: void setInstallAsInstantApp(boolean)>(1);

        z35 = z34;

        goto label77;

     label58:
        $r13 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r14 = staticinvoke <com.android.server.pm.PackageManagerShellCommand: java.lang.String checkAbiArgument(java.lang.String)>($r13);

        $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String abiOverride> = $r14;

        z35 = z34;

        goto label77;

     label59:
        $r15 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r15);

        $b16 = l0 cmp 0L;

        if $b16 <= 0 goto label60;

        virtualinvoke $r2.<android.content.pm.PackageInstaller$SessionParams: void setSize(long)>(l0);

        z35 = z34;

        goto label77;

     label60:
        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Size must be positive");

        throw $r16;

     label61:
        $r17 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName> = $r17;

        $r18 = $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName>;

        if $r18 == null goto label62;

        z35 = z34;

        goto label77;

     label62:
        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing package name");

        throw $r19;

     label63:
        $r2.<android.content.pm.PackageInstaller$SessionParams: int mode> = 2;

        $r20 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName> = $r20;

        $r21 = $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName>;

        if $r21 == null goto label64;

        z35 = z34;

        goto label77;

     label64:
        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing inherit package name");

        throw $r22;

     label65:
        $r23 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r24 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r23);

        $r2.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri referrerUri> = $r24;

        z35 = z34;

        goto label77;

     label66:
        $r25 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r26 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r25);

        $r2.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri originatingUri> = $r26;

        z35 = z34;

        goto label77;

     label67:
        $i17 = $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i18 = $i17 | 4096;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i18;

        z35 = z34;

        goto label77;

     label68:
        $i19 = $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i20 = $i19 & -4194305;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i20;

        z35 = z34;

        goto label77;

     label69:
        $i21 = $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i22 = $i21 | 256;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i22;

        z35 = z34;

        goto label77;

     label70:
        $i23 = $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i24 = $i23 | 128;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i24;

        z35 = z34;

        goto label77;

     label71:
        $i25 = $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i26 = $i25 | 16;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i26;

        z35 = z34;

        goto label77;

     label72:
        $i27 = $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i28 = $i27 | 4;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i28;

        z35 = z34;

        goto label77;

     label73:
        $r27 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r3.<com.android.server.pm.PackageManagerShellCommand$InstallParams: java.lang.String installerPackageName> = $r27;

        $r28 = $r3.<com.android.server.pm.PackageManagerShellCommand$InstallParams: java.lang.String installerPackageName>;

        if $r28 == null goto label74;

        z35 = z34;

        goto label77;

     label74:
        $r29 = new java.lang.IllegalArgumentException;

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing installer package");

        throw $r29;

     label75:
        z35 = 0;

        goto label77;

     label76:
        z35 = z34;

     label77:
        z34 = z35;

        goto label01;

     label78:
        if z34 == 0 goto label79;

        $i3 = $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i4 = $i3 | 2;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i4;

     label79:
        return $r3;

        catch java.lang.NumberFormatException from label41 to label42 with label43;
    }

    private android.content.Intent parseIntentAndUser() throws java.net.URISyntaxException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        android.content.Intent r1;
        com.android.server.pm.PackageManagerShellCommand$4 $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r0.<com.android.server.pm.PackageManagerShellCommand: int mTargetUser> = -2;

        r0.<com.android.server.pm.PackageManagerShellCommand: boolean mBrief> = 0;

        r0.<com.android.server.pm.PackageManagerShellCommand: boolean mComponents> = 0;

        $r2 = new com.android.server.pm.PackageManagerShellCommand$4;

        specialinvoke $r2.<com.android.server.pm.PackageManagerShellCommand$4: void <init>(com.android.server.pm.PackageManagerShellCommand)>(r0);

        r1 = staticinvoke <android.content.Intent: android.content.Intent parseCommandArgs(android.os.ShellCommand,android.content.Intent$CommandOptionHandler)>(r0, $r2);

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = r0.<com.android.server.pm.PackageManagerShellCommand: int mTargetUser>;

        $i3 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i0, $i1, $i2, 0, 0, null, null);

        r0.<com.android.server.pm.PackageManagerShellCommand: int mTargetUser> = $i3;

        return r1;
    }

    private void printResolveInfo(android.util.PrintWriterPrinter, java.lang.String, android.content.pm.ResolveInfo, boolean, boolean)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        android.util.PrintWriterPrinter r1;
        java.lang.String r2, $r9, $r11, $r19, $r25, $r29, $r30, $r34, $r35, $r39, $r40;
        boolean z0, z1, $z2;
        android.content.pm.ActivityInfo $r4, $r37, $r38;
        android.content.pm.ServiceInfo $r5, $r32, $r33;
        android.content.pm.ProviderInfo $r6, $r27, $r28;
        java.lang.StringBuilder $r7, $r12;
        int $i0, $i1, $i2, $i3;
        android.content.ComponentName $r26, $r31, $r36, r42;
        android.content.pm.ResolveInfo r41;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 := @parameter0: android.util.PrintWriterPrinter;

        r2 := @parameter1: java.lang.String;

        r41 := @parameter2: android.content.pm.ResolveInfo;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if z0 != 0 goto label1;

        if z1 == 0 goto label7;

     label1:
        $r4 = r41.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if $r4 == null goto label2;

        $r36 = new android.content.ComponentName;

        $r37 = r41.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r40 = $r37.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r38 = r41.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r39 = $r38.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r36.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r40, $r39);

        r42 = $r36;

        goto label5;

     label2:
        $r5 = r41.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if $r5 == null goto label3;

        $r31 = new android.content.ComponentName;

        $r32 = r41.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r35 = $r32.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r33 = r41.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r34 = $r33.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r31.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r35, $r34);

        r42 = $r31;

        goto label5;

     label3:
        $r6 = r41.<android.content.pm.ResolveInfo: android.content.pm.ProviderInfo providerInfo>;

        if $r6 == null goto label4;

        $r26 = new android.content.ComponentName;

        $r27 = r41.<android.content.pm.ResolveInfo: android.content.pm.ProviderInfo providerInfo>;

        $r30 = $r27.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r28 = r41.<android.content.pm.ResolveInfo: android.content.pm.ProviderInfo providerInfo>;

        $r29 = $r28.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke $r26.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r30, $r29);

        r42 = $r26;

        goto label5;

     label4:
        r42 = null;

     label5:
        if r42 == null goto label7;

        if z1 != 0 goto label6;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("priority=");

        $i0 = r41.<android.content.pm.ResolveInfo: int priority>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" preferredOrder=");

        $i1 = r41.<android.content.pm.ResolveInfo: int preferredOrder>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" match=0x");

        $i2 = r41.<android.content.pm.ResolveInfo: int match>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specificIndex=");

        $i3 = r41.<android.content.pm.ResolveInfo: int specificIndex>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isDefault=");

        $z2 = r41.<android.content.pm.ResolveInfo: boolean isDefault>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r25 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.util.PrintWriterPrinter: void println(java.lang.String)>($r25);

     label6:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke r42.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.util.PrintWriterPrinter: void println(java.lang.String)>($r11);

        return;

     label7:
        virtualinvoke r41.<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)>(r1, r2);

        return;
    }

    private static void printSession(java.io.PrintWriter, android.content.pm.PackageInstaller$SessionInfo, com.android.server.pm.PackageManagerShellCommand$SessionDump)
    {
        java.io.PrintWriter r0;
        android.content.pm.PackageInstaller$SessionInfo r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        java.lang.String $r6, $r17;
        com.android.server.pm.PackageManagerShellCommand$SessionDump r18;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: android.content.pm.PackageInstaller$SessionInfo;

        r18 := @parameter2: com.android.server.pm.PackageManagerShellCommand$SessionDump;

        $z0 = r18.<com.android.server.pm.PackageManagerShellCommand$SessionDump: boolean onlySessionId>;

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r1.<android.content.pm.PackageInstaller$SessionInfo: int getSessionId()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(int)>($i1);

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sessionId = ");

        $i0 = virtualinvoke r1.<android.content.pm.PackageInstaller$SessionInfo: int getSessionId()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; appPackageName = ");

        $r6 = virtualinvoke r1.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String getAppPackageName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; isStaged = ");

        $z1 = virtualinvoke r1.<android.content.pm.PackageInstaller$SessionInfo: boolean isStaged()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; isReady = ");

        $z2 = virtualinvoke r1.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionReady()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; isApplied = ");

        $z3 = virtualinvoke r1.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionApplied()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; isFailed = ");

        $z4 = virtualinvoke r1.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionFailed()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        return;
    }

    private void printSessionList(com.android.internal.util.IndentingPrintWriter, java.util.List, com.android.server.pm.PackageManagerShellCommand$SessionDump)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        com.android.internal.util.IndentingPrintWriter r1;
        com.android.server.pm.PackageManagerShellCommand$SessionDump r2;
        android.util.SparseArray $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r5, $r8, $r14;
        java.lang.StringBuilder $r9;
        java.lang.String $r13;
        java.util.List r15;
        java.util.Iterator r16, r18;
        android.content.pm.PackageInstaller$SessionInfo r17, r19, r21;
        int[] r20;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r15 := @parameter1: java.util.List;

        r2 := @parameter2: com.android.server.pm.PackageManagerShellCommand$SessionDump;

        $r4 = new android.util.SparseArray;

        $i0 = interfaceinvoke r15.<java.util.List: int size()>();

        specialinvoke $r4.<android.util.SparseArray: void <init>(int)>($i0);

        r16 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r14 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (android.content.pm.PackageInstaller$SessionInfo) $r14;

        $i6 = virtualinvoke r17.<android.content.pm.PackageInstaller$SessionInfo: int getSessionId()>();

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i6, r17);

        goto label01;

     label02:
        r18 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z6 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label12;

        $r5 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (android.content.pm.PackageInstaller$SessionInfo) $r5;

        $z1 = r2.<com.android.server.pm.PackageManagerShellCommand$SessionDump: boolean onlyReady>;

        if $z1 == 0 goto label04;

        $z5 = virtualinvoke r19.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionReady()>();

        if $z5 != 0 goto label04;

        goto label03;

     label04:
        $i1 = virtualinvoke r19.<android.content.pm.PackageInstaller$SessionInfo: int getParentSessionId()>();

        if $i1 == -1 goto label05;

        goto label03;

     label05:
        staticinvoke <com.android.server.pm.PackageManagerShellCommand: void printSession(java.io.PrintWriter,android.content.pm.PackageInstaller$SessionInfo,com.android.server.pm.PackageManagerShellCommand$SessionDump)>(r1, r19, r2);

        $z2 = virtualinvoke r19.<android.content.pm.PackageInstaller$SessionInfo: boolean isMultiPackage()>();

        if $z2 == 0 goto label11;

        $z3 = r2.<com.android.server.pm.PackageManagerShellCommand$SessionDump: boolean onlyParent>;

        if $z3 != 0 goto label11;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r20 = virtualinvoke r19.<android.content.pm.PackageInstaller$SessionInfo: int[] getChildSessionIds()>();

        i7 = 0;

     label06:
        $i2 = lengthof r20;

        if i7 >= $i2 goto label10;

        $i3 = r20[i7];

        $r8 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        r21 = (android.content.pm.PackageInstaller$SessionInfo) $r8;

        if r21 != null goto label08;

        $z4 = r2.<com.android.server.pm.PackageManagerShellCommand$SessionDump: boolean onlySessionId>;

        if $z4 == 0 goto label07;

        $i5 = r20[i7];

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(int)>($i5);

        goto label09;

     label07:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sessionId = ");

        $i4 = r20[i7];

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; not found");

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r13);

        goto label09;

     label08:
        staticinvoke <com.android.server.pm.PackageManagerShellCommand: void printSession(java.io.PrintWriter,android.content.pm.PackageInstaller$SessionInfo,com.android.server.pm.PackageManagerShellCommand$SessionDump)>(r1, r21, r2);

     label09:
        i7 = i7 + 1;

        goto label06;

     label10:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label11:
        goto label03;

     label12:
        return;
    }

    private void processArgForLocalFile(java.lang.String, android.content.pm.PackageInstaller$Session)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        android.content.pm.PackageInstaller$Session r1;
        java.lang.String r2, $r7, r11;
        long l0;
        java.io.File $r3;
        java.lang.StringBuilder $r4;
        android.os.incremental.V4Signature $r8;
        java.lang.Throwable $r9, $r10;
        com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata r13;
        android.os.ParcelFileDescriptor r15;
        byte[] r16, $r19;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.pm.PackageInstaller$Session;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r11);

        r2 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        l0 = virtualinvoke $r3.<java.io.File: long length()>();

        r13 = staticinvoke <com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata forLocalFile(java.lang.String)>(r11);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".idsig");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r15 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.os.ParcelFileDescriptor openFileForSystem(java.lang.String,java.lang.String)>($r7, "r");

        if r15 == null goto label8;

     label1:
        $r8 = staticinvoke <android.os.incremental.V4Signature: android.os.incremental.V4Signature readFrom(android.os.ParcelFileDescriptor)>(r15);

        r16 = virtualinvoke $r8.<android.os.incremental.V4Signature: byte[] toByteArray()>();

     label2:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r15);

        goto label9;

     label3:
        $r9 := @caughtexception;

        goto label7;

     label4:
        $r10 := @caughtexception;

     label5:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManagerShellCommand", "V4 signature file exists but failed to be parsed.", $r10);

     label6:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r15);

        goto label8;

     label7:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r15);

        throw $r9;

     label8:
        r16 = null;

     label9:
        $r19 = virtualinvoke r13.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: byte[] toByteArray()>();

        virtualinvoke r1.<android.content.pm.PackageInstaller$Session: void addFile(int,java.lang.String,long,byte[],byte[])>(0, r2, l0, $r19, r16);

        return;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    private int processArgForStdin(java.lang.String, android.content.pm.PackageInstaller$Session)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String[] r1;
        java.lang.String r2, $r3, $r8, $r12, $r13, $r16, $r18, $r19, $r27, $r34, r35, r38;
        long l0;
        int i1, $i2, $i3, $i4, $i5, i6, $i7;
        boolean $z0, $z1;
        byte[] $r4, r37;
        android.os.incremental.V4Signature $r5;
        java.lang.StringBuilder $r9, $r22, $r29, r40, r45;
        java.util.Base64$Decoder $r17;
        java.io.PrintWriter $r20, r39, r41, r44, r48, r51;
        java.lang.Exception $r21;
        java.lang.Throwable $r28;
        android.content.pm.PackageInstaller$Session r36;
        com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata r43, r46;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r35 := @parameter0: java.lang.String;

        r36 := @parameter1: android.content.pm.PackageInstaller$Session;

        r1 = virtualinvoke r35.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        r37 = null;

        i6 = 0;

     label01:
        $i2 = lengthof r1;

        if $i2 >= 2 goto label03;

        $r20 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r20.<java.io.PrintWriter: void println(java.lang.String)>("Must specify file name and size");

     label02:
        return 1;

     label03:
        r2 = r1[0];

     label04:
        $r3 = r1[1];

        l0 = staticinvoke <java.lang.Long: long parseUnsignedLong(java.lang.String)>($r3);

        $i3 = lengthof r1;

        if $i3 <= 2 goto label06;

        $r19 = r1[2];

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r19);

        if $z1 != 0 goto label06;

     label05:
        r38 = r1[2];

        goto label07;

     label06:
        r38 = r2;

     label07:
        $i7 = lengthof r1;

        if $i7 <= 3 goto label08;

        $r17 = staticinvoke <java.util.Base64: java.util.Base64$Decoder getDecoder()>();

        $r18 = r1[3];

        r37 = virtualinvoke $r17.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>($r18);

     label08:
        $i4 = lengthof r1;

        if $i4 <= 4 goto label12;

        $r13 = r1[4];

        i1 = staticinvoke <java.lang.Integer: int parseUnsignedInt(java.lang.String)>($r13);

     label09:
        if i1 < 0 goto label10;

        i6 = i1;

        if i1 <= 1 goto label12;

     label10:
        r39 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported streaming version: ");

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r39.<java.io.PrintWriter: void println(java.lang.String)>($r16);

     label11:
        return 1;

     label12:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label13;

        r41 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Empty file name in: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r41.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return 1;

     label13:
        if r37 == null goto label19;

        if i6 != 0 goto label14;

        r43 = staticinvoke <com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata forDataOnlyStreaming(java.lang.String)>(r38);

        goto label15;

     label14:
        r43 = staticinvoke <com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata forStreaming(java.lang.String)>(r38);

     label15:
        $i5 = lengthof r37;

        if $i5 <= 0 goto label17;

        $r5 = staticinvoke <android.os.incremental.V4Signature: android.os.incremental.V4Signature readFrom(byte[])>(r37);

        if $r5 != null goto label17;

        r44 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("V4 signature is invalid in: ");

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r8 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.PrintWriter: void println(java.lang.String)>($r8);

     label16:
        return 1;

     label17:
        r46 = r43;

        goto label20;

     label18:
        $r21 := @caughtexception;

        r48 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("V4 signature is invalid: ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r48.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        return 1;

     label19:
        r46 = staticinvoke <com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata forStdIn(java.lang.String)>(r38);

     label20:
        $r4 = virtualinvoke r46.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: byte[] toByteArray()>();

        virtualinvoke r36.<android.content.pm.PackageInstaller$Session: void addFile(int,java.lang.String,long,byte[],byte[])>(0, r2, l0, $r4, r37);

        return 0;

     label21:
        $r28 := @caughtexception;

        r51 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse file parameters: ");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reason: ");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r51.<java.io.PrintWriter: void println(java.lang.String)>($r34);

        return 1;

        catch java.lang.IllegalArgumentException from label01 to label02 with label21;
        catch java.lang.IllegalArgumentException from label04 to label05 with label21;
        catch java.lang.IllegalArgumentException from label07 to label08 with label21;
        catch java.lang.IllegalArgumentException from label08 to label09 with label21;
        catch java.lang.IllegalArgumentException from label10 to label11 with label21;
        catch java.lang.Exception from label15 to label16 with label18;
    }

    private int runBypassStagedInstallerCheck()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        android.content.pm.IPackageManager $r4;
        android.content.pm.IPackageInstaller $r5;
        java.lang.String $r6, $r11, $r14, $r17;
        boolean $z0;
        android.os.RemoteException $r7;
        java.lang.StringBuilder $r8;
        java.lang.Class $r10;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r5 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        $r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r6);

        interfaceinvoke $r5.<android.content.pm.IPackageInstaller: void bypassNextStagedInstallerCheck(boolean)>($z0);

     label2:
        return 0;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

        $r10 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r14 = virtualinvoke $r7.<android.os.RemoteException: java.lang.String getMessage()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r17 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private int runClear() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        boolean z0, $z2, $z3;
        com.android.server.pm.PackageManagerShellCommand$ClearDataObserver $r1;
        android.app.IActivityManager $r2;
        java.io.PrintWriter $r3, $r4, $r5;
        java.lang.String $r6, r9, r10;
        java.lang.Throwable $r7, $r8;
        int i1, i2;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r9 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        i1 = 0;

        if r9 == null goto label01;

        i1 = 0;

        $z3 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z3 == 0 goto label01;

        $r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i1 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r6);

     label01:
        r10 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r10 != null goto label02;

        $r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("Error: no package specified");

        return 1;

     label02:
        i2 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i1, -10000, "runClear");

        $r1 = new com.android.server.pm.PackageManagerShellCommand$ClearDataObserver;

        specialinvoke $r1.<com.android.server.pm.PackageManagerShellCommand$ClearDataObserver: void <init>()>();

        $r2 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        interfaceinvoke $r2.<android.app.IActivityManager: boolean clearApplicationUserData(java.lang.String,boolean,android.content.pm.IPackageDataObserver,int)>(r10, 0, $r1, i2);

        entermonitor $r1;

     label03:
        z0 = $r1.<com.android.server.pm.PackageManagerShellCommand$ClearDataObserver: boolean finished>;

     label04:
        if z0 != 0 goto label08;

     label05:
        virtualinvoke $r1.<java.lang.Object: void wait()>();

     label06:
        goto label03;

     label07:
        $r8 := @caughtexception;

        goto label06;

     label08:
        exitmonitor $r1;

     label09:
        $z2 = $r1.<com.android.server.pm.PackageManagerShellCommand$ClearDataObserver: boolean result>;

        if $z2 == 0 goto label10;

        $r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("Success");

        return 0;

     label10:
        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Failed");

        return 1;

     label11:
        $r7 := @caughtexception;

     label12:
        exitmonitor $r1;

     label13:
        throw $r7;

        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.InterruptedException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private int runCompile() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        java.util.Iterator r3, r61;
        java.lang.String r5, $r12, $r15, $r27, $r34, $r36, $r41, $r42, $r43, $r47, r48, r49, r50, r51, r52, r54, r58, r62;
        java.util.ArrayList $r7;
        boolean $z0, $z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, $z27, z28, z29;
        int $i0, $i1, $i2, $i3, i5, i6, i7;
        java.lang.Object $r8, $r11, $r16, $r19;
        java.lang.StringBuilder $r9, $r21, $r31, $r37, $r44;
        android.content.pm.IPackageManager $r17, $r18, $r28, $r29;
        android.content.pm.PackageManagerInternal $r20;
        java.lang.String[] $r30, $r35;
        byte b4;
        java.util.List r57;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        z17 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("dalvik.vm.usejitprofiles", 0);

        z18 = 0;

        z19 = 0;

        z20 = 0;

        r48 = null;

        r49 = null;

        r50 = null;

        z21 = 0;

        r51 = null;

        z22 = 0;

     label01:
        r52 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        if r52 == null goto label27;

        $i3 = virtualinvoke r52.<java.lang.String: int hashCode()>();

        lookupswitch($i3)
        {
            case -1615291473: goto label12;
            case -1614046854: goto label11;
            case 1492: goto label10;
            case 1494: goto label09;
            case 1497: goto label08;
            case 1504: goto label07;
            case 1509: goto label06;
            case 1269477022: goto label05;
            case 1323879247: goto label04;
            case 1690714782: goto label03;
            default: goto label02;
        };

     label02:
        goto label13;

     label03:
        $z7 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("--check-prof");

        if $z7 == 0 goto label02;

        b4 = 6;

        goto label14;

     label04:
        $z8 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("--compile-layouts");

        if $z8 == 0 goto label02;

        b4 = 5;

        goto label14;

     label05:
        $z9 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("--secondary-dex");

        if $z9 == 0 goto label02;

        b4 = 8;

        goto label14;

     label06:
        $z10 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("-r");

        if $z10 == 0 goto label02;

        b4 = 4;

        goto label14;

     label07:
        $z11 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("-m");

        if $z11 == 0 goto label02;

        b4 = 3;

        goto label14;

     label08:
        $z12 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z12 == 0 goto label02;

        b4 = 2;

        goto label14;

     label09:
        $z13 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("-c");

        if $z13 == 0 goto label02;

        b4 = 1;

        goto label14;

     label10:
        $z14 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("-a");

        if $z14 == 0 goto label02;

        b4 = 0;

        goto label14;

     label11:
        $z15 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("--split");

        if $z15 == 0 goto label02;

        b4 = 9;

        goto label14;

     label12:
        $z16 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("--reset");

        if $z16 == 0 goto label02;

        b4 = 7;

        goto label14;

     label13:
        b4 = -1;

     label14:
        tableswitch(b4)
        {
            case 0: goto label25;
            case 1: goto label24;
            case 2: goto label23;
            case 3: goto label22;
            case 4: goto label21;
            case 5: goto label20;
            case 6: goto label19;
            case 7: goto label18;
            case 8: goto label17;
            case 9: goto label16;
            default: goto label15;
        };

     label15:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r47);

        return 1;

     label16:
        r51 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        z23 = z18;

        goto label26;

     label17:
        z21 = 1;

        z23 = z18;

        goto label26;

     label18:
        r49 = "install";

        z20 = 1;

        z23 = 1;

        goto label26;

     label19:
        r50 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        z23 = z18;

        goto label26;

     label20:
        z22 = 1;

        z23 = z18;

        goto label26;

     label21:
        r49 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        z23 = z18;

        goto label26;

     label22:
        r48 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        z23 = z18;

        goto label26;

     label23:
        z23 = 1;

        goto label26;

     label24:
        z20 = 1;

        z23 = z18;

        goto label26;

     label25:
        z19 = 1;

        z23 = z18;

     label26:
        z18 = z23;

        goto label01;

     label27:
        z24 = z17;

        if r50 == null goto label30;

        $r42 = "true";

        $z5 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r50);

        if $z5 == 0 goto label28;

        z24 = 1;

        goto label30;

     label28:
        $r43 = "false";

        $z6 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>(r50);

        if $z6 == 0 goto label29;

        z24 = 0;

        goto label30;

     label29:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Invalid value for \"--check-prof\". Expected \"true\" or \"false\".");

        return 1;

     label30:
        if r48 == null goto label31;

        z25 = 1;

        goto label32;

     label31:
        z25 = 0;

     label32:
        if r49 == null goto label33;

        z26 = 1;

        goto label34;

     label33:
        z26 = 0;

     label34:
        if z25 != 0 goto label35;

        if z26 != 0 goto label35;

        if z22 == 0 goto label39;

     label35:
        if z25 != 0 goto label36;

        if z26 == 0 goto label36;

        if z22 != 0 goto label39;

     label36:
        if z25 == 0 goto label37;

        if z26 != 0 goto label37;

        if z22 != 0 goto label39;

     label37:
        if z25 == 0 goto label38;

        if z26 == 0 goto label38;

        if z22 == 0 goto label39;

     label38:
        if z25 == 0 goto label40;

        if z26 == 0 goto label40;

        if z22 == 0 goto label40;

     label39:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Must specify exactly one of compilation filter (\"-m\"), compilation reason (\"-r\"), or compile layouts (\"--compile-layouts\")");

        return 1;

     label40:
        if z19 == 0 goto label41;

        if r51 == null goto label41;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-a cannot be specified together with --split");

        return 1;

     label41:
        if z21 == 0 goto label42;

        if r51 == null goto label42;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("--secondary-dex cannot be specified together with --split");

        return 1;

     label42:
        r54 = null;

        if z25 == 0 goto label44;

        $z4 = staticinvoke <dalvik.system.DexFile: boolean isValidCompilerFilter(java.lang.String)>(r48);

        if $z4 != 0 goto label43;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: \"");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is not a valid compilation filter.");

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        return 1;

     label43:
        r54 = r48;

     label44:
        if z26 == 0 goto label49;

        i5 = -1;

        i6 = 0;

     label45:
        $r30 = <com.android.server.pm.PackageManagerServiceCompilerMapping: java.lang.String[] REASON_STRINGS>;

        $i2 = lengthof $r30;

        if i6 >= $i2 goto label47;

        $r35 = <com.android.server.pm.PackageManagerServiceCompilerMapping: java.lang.String[] REASON_STRINGS>;

        $r36 = $r35[i6];

        $z3 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r49);

        if $z3 == 0 goto label46;

        i5 = i6;

        goto label47;

     label46:
        i6 = i6 + 1;

        goto label45;

     label47:
        if i5 != -1 goto label48;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown compilation reason: ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r49);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r34);

        return 1;

     label48:
        r54 = staticinvoke <com.android.server.pm.PackageManagerServiceCompilerMapping: java.lang.String getCompilerFilterForReason(int)>(i5);

        goto label49;

     label49:
        if z19 == 0 goto label50;

        $r29 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r57 = interfaceinvoke $r29.<android.content.pm.IPackageManager: java.util.List getAllPackages()>();

        goto label52;

     label50:
        r58 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r58 != null goto label51;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: package name not specified");

        return 1;

     label51:
        r57 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r58);

     label52:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        i7 = 0;

        r3 = interfaceinvoke r57.<java.util.List: java.util.Iterator iterator()>();

     label53:
        $z27 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z27 == 0 goto label60;

        $r16 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r16;

        if z20 == 0 goto label54;

        $r28 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        interfaceinvoke $r28.<android.content.pm.IPackageManager: void clearApplicationProfileData(java.lang.String)>(r5);

        goto label54;

     label54:
        if z19 == 0 goto label55;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        i7 = i7 + 1;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i1 = interfaceinvoke r57.<java.util.List: int size()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

        goto label55;

     label55:
        if z22 == 0 goto label56;

        $r19 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r20 = (android.content.pm.PackageManagerInternal) $r19;

        z28 = virtualinvoke $r20.<android.content.pm.PackageManagerInternal: boolean compileLayouts(java.lang.String)>(r5);

        goto label58;

     label56:
        if z21 == 0 goto label57;

        $r18 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        z28 = interfaceinvoke $r18.<android.content.pm.IPackageManager: boolean performDexOptSecondary(java.lang.String,java.lang.String,boolean)>(r5, r54, z18);

        goto label58;

     label57:
        $r17 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        z28 = interfaceinvoke $r17.<android.content.pm.IPackageManager: boolean performDexOptMode(java.lang.String,boolean,java.lang.String,boolean,boolean,java.lang.String)>(r5, z24, r54, z18, 1, r51);

     label58:
        if z28 != 0 goto label59;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r5);

     label59:
        goto label53;

     label60:
        $z0 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label61;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success");

        return 0;

     label61:
        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 != 1 goto label62;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure: package ");

        $r11 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r12 = (java.lang.String) $r11;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be compiled");

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        return 1;

     label62:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Failure: the following packages could not be compiled: ");

        z29 = 1;

        r61 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label63:
        $z1 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label66;

        $r8 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>();

        r62 = (java.lang.String) $r8;

        if z29 == 0 goto label64;

        z29 = 0;

        goto label65;

     label64:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label65:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r62);

        goto label63;

     label66:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return 1;
    }

    private int runDexoptJob() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        boolean z0, $z1;
        java.util.ArrayList $r1, r2;
        java.lang.String r3, r6;
        android.content.pm.IPackageManager r4;
        java.io.PrintWriter r5;
        byte b0;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r2 = $r1;

     label1:
        r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r3 == null goto label2;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label1;

     label2:
        r4 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $z1 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        r2 = null;

        goto label3;

     label3:
        z0 = interfaceinvoke r4.<android.content.pm.IPackageManager: boolean runBackgroundDexoptJob(java.util.List)>(r2);

        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        if z0 == 0 goto label4;

        r6 = "Success";

        goto label5;

     label4:
        r6 = "Failure";

     label5:
        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>(r6);

        if z0 == 0 goto label6;

        b0 = 0;

        goto label7;

     label6:
        b0 = -1;

     label7:
        return b0;
    }

    private int runDump()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String r1;
        java.io.FileDescriptor $r2;
        java.io.PrintWriter $r3;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r1 != null goto label1;

        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Error: no package specified");

        return 1;

     label1:
        $r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.FileDescriptor getOutFileDescriptor()>();

        staticinvoke <android.app.ActivityManager: void dumpPackageStateStatic(java.io.FileDescriptor,java.lang.String)>($r2, r1);

        return 0;
    }

    private int runDumpProfiles() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String r1;
        android.content.pm.IPackageManager $r2;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        interfaceinvoke $r2.<android.content.pm.IPackageManager: void dumpProfiles(java.lang.String)>(r1);

        return 0;
    }

    private int runGetAppLink() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        android.content.pm.IPackageManager $r1, $r4;
        android.content.pm.ApplicationInfo $r2;
        int $i0, $i1, $i2, i3, i4;
        java.io.PrintWriter $r3, $r16, r23, r27, r29;
        java.lang.String $r5, $r10, $r15, $r20, $r21, r22, r25;
        java.lang.StringBuilder $r6, $r11, $r17;
        boolean $z0;
        android.content.pm.PackageInfo r26;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i3 = 0;

     label1:
        r22 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        if r22 == null goto label3;

        $z0 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z0 == 0 goto label2;

        $r21 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i3 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r21);

        goto label1;

     label2:
        r23 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown option: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        return 1;

     label3:
        r25 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r25 != null goto label4;

        $r16 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("Error: no package specified.");

        return 1;

     label4:
        i4 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i3, -10000, "runGetAppLink");

        $r1 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r26 = interfaceinvoke $r1.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r25, 0, i4);

        if r26 != null goto label5;

        r27 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: package ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found.");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        return 1;

     label5:
        $r2 = r26.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i1 = $i0 & 16;

        if $i1 != 0 goto label6;

        r29 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: package ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not handle web links.");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r29.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        return 1;

     label6:
        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r4 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $i2 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int getIntentVerificationStatus(java.lang.String,int)>(r25, i4);

        $r5 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String linkStateToString(int)>($i2);

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        return 0;
    }

    private int runGetHarmfulAppWarning() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String r1, $r8, $r9, r11;
        java.io.PrintWriter r2, $r4;
        android.content.pm.IPackageManager $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5;
        int i0, i1;
        java.lang.CharSequence r12;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i0 = -2;

     label1:
        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        if r1 == null goto label3;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z1 == 0 goto label2;

        $r9 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i0 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r9);

        goto label1;

     label2:
        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return -1;

     label3:
        i1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i0, -10000, "runGetHarmfulAppWarning");

        r11 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r12 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.lang.CharSequence getHarmfulAppWarning(java.lang.String,int)>(r11, i1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z0 != 0 goto label4;

        $r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.Object)>(r12);

        return 0;

     label4:
        return 1;
    }

    private int runGetInstallLocation() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0;
        java.io.PrintWriter r1;
        android.content.pm.IPackageManager $r3;
        java.lang.String r8, $r10;
        java.lang.StringBuilder $r9;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        i0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int getInstallLocation()>();

        r8 = "invalid";

        if i0 != 0 goto label1;

        r8 = "auto";

        goto label3;

     label1:
        if i0 != 1 goto label2;

        r8 = "internal";

        goto label3;

     label2:
        if i0 != 2 goto label3;

        r8 = "external";

     label3:
        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        return 0;
    }

    private int runGetInstantAppResolver()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        android.content.pm.IPackageManager $r2;
        java.lang.String $r3, $r5;
        java.lang.Exception $r4;
        android.content.ComponentName r6;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label1:
        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r6 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.ComponentName getInstantAppResolverComponent()>();

     label2:
        if r6 != null goto label3;

        return 1;

     label3:
        $r3 = virtualinvoke r6.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

     label4:
        return 0;

     label5:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        return 1;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private int runGetModuleInfo()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        android.content.pm.ModuleInfo r2, r37;
        android.content.pm.IPackageManager $r3, $r12;
        java.util.List $r4;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;
        java.lang.String $r6, $r9, $r11, $r13, $r16, $r18, $r22, $r27, $r30, $r33, r34, r36;
        java.lang.StringBuilder $r19, $r24, r38, r40;
        android.os.RemoteException $r23;
        java.lang.Class $r26;
        int i0, i1;
        byte b2;
        java.util.Iterator r39;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        i0 = 0;

     label01:
        r34 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        if r34 == null goto label10;

        i1 = virtualinvoke r34.<java.lang.String: int hashCode()>();

        if i1 == 42995713 goto label04;

        if i1 == 517440986 goto label03;

     label02:
        goto label05;

     label03:
        $z2 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>("--installed");

        if $z2 == 0 goto label02;

        b2 = 1;

        goto label06;

     label04:
        $z1 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>("--all");

        if $z1 == 0 goto label02;

        b2 = 0;

        goto label06;

     label05:
        b2 = -1;

     label06:
        if b2 == 0 goto label08;

        if b2 == 1 goto label07;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        return -1;

     label07:
        goto label09;

     label08:
        i0 = i0 | 131072;

     label09:
        goto label01;

     label10:
        r36 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r36 == null goto label13;

     label11:
        $r12 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r37 = interfaceinvoke $r12.<android.content.pm.IPackageManager: android.content.pm.ModuleInfo getModuleInfo(java.lang.String,int)>(r36, i0);

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r37.<android.content.pm.ModuleInfo: java.lang.String toString()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packageName: ");

        $r16 = virtualinvoke r37.<android.content.pm.ModuleInfo: java.lang.String getPackageName()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

     label12:
        goto label16;

     label13:
        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.util.List getInstalledModules(int)>(i0);

        r39 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r5 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.pm.ModuleInfo) $r5;

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<android.content.pm.ModuleInfo: java.lang.String toString()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packageName: ");

        $r9 = virtualinvoke r2.<android.content.pm.ModuleInfo: java.lang.String getPackageName()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

     label15:
        goto label14;

     label16:
        return 1;

     label17:
        $r23 := @caughtexception;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

        $r26 = virtualinvoke $r23.<java.lang.Object: java.lang.Class getClass()>();

        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r30 = virtualinvoke $r23.<android.os.RemoteException: java.lang.String getMessage()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r33 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        return -1;

        catch android.os.RemoteException from label11 to label12 with label17;
        catch android.os.RemoteException from label13 to label14 with label17;
        catch android.os.RemoteException from label14 to label15 with label17;
    }

    private int runGetOemPermissions()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        com.android.server.SystemConfig $r1;
        java.io.PrintWriter $r2, $r4;
        boolean $z0;
        com.android.server.pm._$$Lambda$PackageManagerShellCommand$_OZpz58K2HXVuHDuVYKnCu6oo4c $r3;
        java.lang.String r5;
        java.util.Map r6;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r5 != null goto label1;

        $r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("Error: no package specified.");

        return 1;

     label1:
        $r1 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        r6 = virtualinvoke $r1.<com.android.server.SystemConfig: java.util.Map getOemPermissions(java.lang.String)>(r5);

        if r6 == null goto label3;

        $z0 = interfaceinvoke r6.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r3 = new com.android.server.pm._$$Lambda$PackageManagerShellCommand$_OZpz58K2HXVuHDuVYKnCu6oo4c;

        specialinvoke $r3.<com.android.server.pm._$$Lambda$PackageManagerShellCommand$_OZpz58K2HXVuHDuVYKnCu6oo4c: void <init>(com.android.server.pm.PackageManagerShellCommand)>(r0);

        interfaceinvoke r6.<java.util.Map: void forEach(java.util.function.BiConsumer)>($r3);

        goto label4;

     label3:
        $r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("{}");

     label4:
        return 0;
    }

    private int runGetPrivappDenyPermissions()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1, $r6;
        boolean $z0, $z1, $z2;
        com.android.server.SystemConfig $r2, $r3, $r4, $r5;
        java.lang.String r7, r9;
        android.util.ArraySet r8;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r7 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r7 != null goto label1;

        $r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r6.<java.io.PrintWriter: void println(java.lang.String)>("Error: no package specified.");

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: boolean isVendorApp(java.lang.String)>(r7);

        if $z0 == 0 goto label2;

        $r5 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        r8 = virtualinvoke $r5.<com.android.server.SystemConfig: android.util.ArraySet getVendorPrivAppDenyPermissions(java.lang.String)>(r7);

        goto label5;

     label2:
        $z1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: boolean isProductApp(java.lang.String)>(r7);

        if $z1 == 0 goto label3;

        $r4 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        r8 = virtualinvoke $r4.<com.android.server.SystemConfig: android.util.ArraySet getProductPrivAppDenyPermissions(java.lang.String)>(r7);

        goto label5;

     label3:
        $z2 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: boolean isSystemExtApp(java.lang.String)>(r7);

        if $z2 == 0 goto label4;

        $r3 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        r8 = virtualinvoke $r3.<com.android.server.SystemConfig: android.util.ArraySet getSystemExtPrivAppDenyPermissions(java.lang.String)>(r7);

        goto label5;

     label4:
        $r2 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        r8 = virtualinvoke $r2.<com.android.server.SystemConfig: android.util.ArraySet getPrivAppDenyPermissions(java.lang.String)>(r7);

     label5:
        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        if r8 != null goto label6;

        r9 = "{}";

        goto label7;

     label6:
        r9 = virtualinvoke r8.<android.util.ArraySet: java.lang.String toString()>();

     label7:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r9);

        return 0;
    }

    private int runGetPrivappPermissions()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1, $r6;
        boolean $z0, $z1, $z2;
        com.android.server.SystemConfig $r2, $r3, $r4, $r5;
        java.lang.String r7, r9;
        android.util.ArraySet r8;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r7 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r7 != null goto label1;

        $r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r6.<java.io.PrintWriter: void println(java.lang.String)>("Error: no package specified.");

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: boolean isVendorApp(java.lang.String)>(r7);

        if $z0 == 0 goto label2;

        $r5 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        r8 = virtualinvoke $r5.<com.android.server.SystemConfig: android.util.ArraySet getVendorPrivAppPermissions(java.lang.String)>(r7);

        goto label5;

     label2:
        $z1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: boolean isProductApp(java.lang.String)>(r7);

        if $z1 == 0 goto label3;

        $r4 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        r8 = virtualinvoke $r4.<com.android.server.SystemConfig: android.util.ArraySet getProductPrivAppPermissions(java.lang.String)>(r7);

        goto label5;

     label3:
        $z2 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: boolean isSystemExtApp(java.lang.String)>(r7);

        if $z2 == 0 goto label4;

        $r3 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        r8 = virtualinvoke $r3.<com.android.server.SystemConfig: android.util.ArraySet getSystemExtPrivAppPermissions(java.lang.String)>(r7);

        goto label5;

     label4:
        $r2 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        r8 = virtualinvoke $r2.<com.android.server.SystemConfig: android.util.ArraySet getPrivAppPermissions(java.lang.String)>(r7);

     label5:
        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        if r8 != null goto label6;

        r9 = "{}";

        goto label7;

     label6:
        r9 = virtualinvoke r8.<android.util.ArraySet: java.lang.String toString()>();

     label7:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r9);

        return 0;
    }

    private int runGrantRevokePermission(boolean) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        boolean z0, $z1;
        java.lang.String r1, $r6, r7, r8;
        android.permission.IPermissionManager $r2, $r3;
        java.io.PrintWriter $r4, $r5;
        int i0, i1;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        z0 := @parameter0: boolean;

        i0 = 0;

     label1:
        r7 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        if r7 == null goto label2;

        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z1 == 0 goto label1;

        $r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i0 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r6);

        goto label1;

     label2:
        r8 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r8 != null goto label3;

        $r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("Error: no package specified");

        return 1;

     label3:
        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r1 != null goto label4;

        $r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("Error: no permission specified");

        return 1;

     label4:
        i1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i0, -10000, "runGrantRevokePermission");

        if z0 == 0 goto label5;

        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.permission.IPermissionManager mPermissionManager>;

        interfaceinvoke $r3.<android.permission.IPermissionManager: void grantRuntimePermission(java.lang.String,java.lang.String,int)>(r8, r1, i1);

        goto label6;

     label5:
        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.permission.IPermissionManager mPermissionManager>;

        interfaceinvoke $r2.<android.permission.IPermissionManager: void revokeRuntimePermission(java.lang.String,java.lang.String,int,java.lang.String)>(r8, r1, i1, null);

     label6:
        return 0;
    }

    private int runHasFeature()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1, $r3;
        boolean z0;
        android.content.pm.IPackageManager $r2;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8, $r10, r11, r12;
        android.os.RemoteException $r9;
        int i1;
        byte b2;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        r11 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r11 != null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: expected FEATURE name");

        return 1;

     label1:
        r12 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r12 != null goto label2;

        i1 = 0;

        goto label3;

     label2:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r12);

     label3:
        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        z0 = interfaceinvoke $r2.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String,int)>(r11, i1);

        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(boolean)>(z0);

     label4:
        b2 = 1;

        if z0 == 0 goto label5;

        b2 = 0;

     label5:
        return b2;

     label6:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        return 1;

     label7:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: illegal version number ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return 1;

        catch java.lang.NumberFormatException from label2 to label3 with label7;
        catch android.os.RemoteException from label2 to label3 with label6;
        catch java.lang.NumberFormatException from label3 to label4 with label7;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    private int runIncrementalInstall() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        com.android.server.pm.PackageManagerShellCommand$InstallParams r1;
        android.content.pm.PackageInstaller$SessionParams $r2, $r4;
        android.content.pm.DataLoaderParams $r3, $r5;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: com.android.server.pm.PackageManagerShellCommand$InstallParams makeInstallParams()>();

        $r2 = r1.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        $r3 = $r2.<android.content.pm.PackageInstaller$SessionParams: android.content.pm.DataLoaderParams dataLoaderParams>;

        if $r3 != null goto label1;

        $r4 = r1.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        $r5 = staticinvoke <com.android.server.pm.PackageManagerShellCommandDataLoader: android.content.pm.DataLoaderParams getIncrementalDataLoaderParams(android.os.ShellCommand)>(r0);

        virtualinvoke $r4.<android.content.pm.PackageInstaller$SessionParams: void setDataLoaderParams(android.content.pm.DataLoaderParams)>($r5);

     label1:
        $i0 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doRunInstall(com.android.server.pm.PackageManagerShellCommand$InstallParams)>(r1);

        return $i0;
    }

    private int runInstall() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        com.android.server.pm.PackageManagerShellCommand$InstallParams $r1;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        $r1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: com.android.server.pm.PackageManagerShellCommand$InstallParams makeInstallParams()>();

        $i0 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doRunInstall(com.android.server.pm.PackageManagerShellCommand$InstallParams)>($r1);

        return $i0;
    }

    private int runInstallAbandon() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String $r1;
        int $i0, $i1;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        $r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $i1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doAbandonSession(int,boolean)>($i0, 1);

        return $i1;
    }

    private int runInstallAddSession() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        int i0, $i1, $i2, $i3;
        java.lang.String r3, $r4;
        java.util.ArrayList $r5;
        int[] $r6;
        java.lang.Integer $r7;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

     label1:
        r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r3 == null goto label2;

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 != 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: At least two sessions are required.");

        return 1;

     label3:
        $r6 = staticinvoke <com.android.internal.util.ArrayUtils: int[] convertToIntArray(java.util.List)>($r5);

        $i2 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doInstallAddSession(int,int[],boolean)>(i0, $r6, 1);

        return $i2;
    }

    private int runInstallCommit() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        int i0, $i1, $i2, $i3, i7;
        java.lang.String $r2, $r5, r8;
        android.content.pm.IPackageManager $r3;
        android.content.pm.IPackageInstaller $r4;
        boolean $z0, $z1, $z2, z3, z4;
        java.lang.Throwable $r7;
        long l4, l6;
        byte b5;
        android.content.pm.PackageInstaller$SessionInfo r10;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        z3 = 1;

        l4 = -1L;

     label01:
        r8 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        b5 = 0;

        if r8 == null goto label15;

        i0 = virtualinvoke r8.<java.lang.String: int hashCode()>();

        if i0 == -844792735 goto label04;

        if i0 == 1333511957 goto label03;

     label02:
        goto label05;

     label03:
        $z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("--wait");

        if $z2 == 0 goto label02;

        goto label06;

     label04:
        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("--no-wait");

        if $z1 == 0 goto label02;

        b5 = 1;

        goto label06;

     label05:
        b5 = -1;

     label06:
        if b5 == 0 goto label08;

        if b5 == 1 goto label07;

        z4 = z3;

        l6 = l4;

        goto label14;

     label07:
        z4 = 0;

        l6 = l4;

        goto label14;

     label08:
        z4 = 1;

        l6 = l4;

        $i3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int getRemainingArgsCount()>();

        if $i3 <= 1 goto label14;

     label09:
        $r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String peekNextArg()>();

        l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

     label10:
        l4 = l6;

     label11:
        virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

     label12:
        z4 = 1;

        goto label14;

     label13:
        $r7 := @caughtexception;

        l6 = l4;

        z4 = 1;

     label14:
        z3 = z4;

        l4 = l6;

        goto label01;

     label15:
        $r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $i1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doCommitSession(int,boolean)>(i7, 0);

        if $i1 == 0 goto label16;

        return 1;

     label16:
        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        r10 = interfaceinvoke $r4.<android.content.pm.IPackageInstaller: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>(i7);

        if r10 == null goto label18;

        $z0 = virtualinvoke r10.<android.content.pm.PackageInstaller$SessionInfo: boolean isStaged()>();

        if $z0 == 0 goto label18;

        if z3 != 0 goto label17;

        goto label18;

     label17:
        $i2 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doWaitForStagedSessionRead(int,long,java.io.PrintWriter)>(i7, l4, r1);

        return $i2;

     label18:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success");

        return 0;

        catch java.lang.NumberFormatException from label09 to label10 with label13;
        catch java.lang.NumberFormatException from label11 to label12 with label13;
    }

    private int runInstallCreate() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        int i0, $i1;
        java.lang.String $r2, $r8;
        android.content.pm.PackageInstaller$SessionParams $r3;
        java.lang.StringBuilder $r4;
        com.android.server.pm.PackageManagerShellCommand$InstallParams r9;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r9 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: com.android.server.pm.PackageManagerShellCommand$InstallParams makeInstallParams()>();

        $r3 = r9.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        $r2 = r9.<com.android.server.pm.PackageManagerShellCommand$InstallParams: java.lang.String installerPackageName>;

        $i1 = r9.<com.android.server.pm.PackageManagerShellCommand$InstallParams: int userId>;

        i0 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doCreateSession(android.content.pm.PackageInstaller$SessionParams,java.lang.String,int)>($r3, $r2, $i1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Success: created install session [");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return 0;
    }

    private int runInstallExisting() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        android.content.pm.IPackageManager $r2, $r12;
        java.lang.String $r6, $r11, $r17, $r19, $r23, r29, r31, $r40;
        android.content.Intent $r18;
        int $i1, $i2, $i3, i4, i5, i8, i9, i10, i11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        java.lang.StringBuilder $r20, r34, r37, r39;
        android.util.AndroidException $r24, $r25, $r26, $r27, $r28, r36;
        byte b6, b7;
        com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver r32;
        android.content.pm.IPackageInstaller r33;
        android.content.IntentSender r35;
        android.content.pm.PackageManager$NameNotFoundException r38;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        i4 = 4194304;

        z6 = 0;

        i5 = -2;

     label01:
        r29 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        b6 = 0;

        if r29 == null goto label17;

        $i1 = virtualinvoke r29.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -951415743: goto label08;
            case 1051781117: goto label07;
            case 1333024815: goto label06;
            case 1333469547: goto label05;
            case 1333511957: goto label04;
            case 1494514835: goto label03;
            default: goto label02;
        };

     label02:
        goto label09;

     label03:
        $z0 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("--restrict-permissions");

        if $z0 == 0 goto label02;

        b7 = 5;

        goto label10;

     label04:
        $z1 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("--wait");

        if $z1 == 0 goto label02;

        b7 = 4;

        goto label10;

     label05:
        $z2 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z2 == 0 goto label02;

        b7 = 0;

        goto label10;

     label06:
        $z3 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("--full");

        if $z3 == 0 goto label02;

        b7 = 3;

        goto label10;

     label07:
        $z4 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("--ephemeral");

        if $z4 == 0 goto label02;

        b7 = 1;

        goto label10;

     label08:
        $z5 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("--instant");

        if $z5 == 0 goto label02;

        b7 = 2;

        goto label10;

     label09:
        b7 = -1;

     label10:
        if b7 == 0 goto label15;

        if b7 == 1 goto label14;

        if b7 == 2 goto label14;

        if b7 == 3 goto label13;

        if b7 == 4 goto label12;

        if b7 == 5 goto label11;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        return 1;

     label11:
        i8 = -4194305 & i4;

        goto label16;

     label12:
        z6 = 1;

        i8 = i4;

        goto label16;

     label13:
        $i3 = i4 & -2049;

        i8 = $i3 | 16384;

        goto label16;

     label14:
        $i2 = i4 | 2048;

        i8 = $i2 & -16385;

        goto label16;

     label15:
        $r19 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i5 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r19);

        i8 = i4;

     label16:
        i4 = i8;

        goto label01;

     label17:
        r31 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r31 != null goto label18;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: package name not specified");

        return 1;

     label18:
        i9 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i5, -10000, "runInstallExisting");

        if z6 == 0 goto label27;

     label19:
        r32 = new com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver;

        specialinvoke r32.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: void <init>(com.android.server.pm.PackageManagerShellCommand$1)>(null);

        $r12 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r33 = interfaceinvoke $r12.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installing package ");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user: ");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r17 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

     label20:
        r35 = virtualinvoke r32.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: android.content.IntentSender getIntentSender()>();

     label21:
        interfaceinvoke r33.<android.content.pm.IPackageInstaller: void installExistingPackage(java.lang.String,int,int,android.content.IntentSender,int,java.util.List)>(r31, i4, 0, r35, i9, null);

        $r18 = virtualinvoke r32.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: android.content.Intent getResult()>();

        i10 = virtualinvoke $r18.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.content.pm.extra.STATUS", 1);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Received intent for package install");

     label22:
        if i10 != 0 goto label23;

        goto label24;

     label23:
        b6 = 1;

     label24:
        return b6;

     label25:
        $r28 := @caughtexception;

        r36 = $r28;

        goto label37;

     label26:
        $r25 := @caughtexception;

        r36 = $r25;

        goto label37;

     label27:
        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        i11 = interfaceinvoke $r2.<android.content.pm.IPackageManager: int installExistingPackageAsUser(java.lang.String,int,int,int,java.util.List)>(r31, i9, i4, 0, null);

     label28:
        if i11 == -3 goto label34;

     label29:
        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

     label30:
        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" installed for user: ");

     label31:
        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r11 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

     label32:
        return 0;

     label33:
        $r27 := @caughtexception;

        r36 = $r27;

        goto label37;

     label34:
        r38 = new android.content.pm.PackageManager$NameNotFoundException;

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exist");

        $r6 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r38.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r6);

        throw r38;

     label35:
        $r24 := @caughtexception;

        r36 = $r24;

        goto label37;

     label36:
        $r26 := @caughtexception;

        r36 = $r26;

     label37:
        $r40 = virtualinvoke r36.<android.util.AndroidException: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r40);

        return 1;

        catch android.os.RemoteException from label19 to label20 with label26;
        catch android.content.pm.PackageManager$NameNotFoundException from label19 to label20 with label26;
        catch android.os.RemoteException from label20 to label21 with label26;
        catch android.content.pm.PackageManager$NameNotFoundException from label20 to label21 with label26;
        catch android.os.RemoteException from label21 to label22 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label21 to label22 with label25;
        catch android.os.RemoteException from label27 to label28 with label36;
        catch android.content.pm.PackageManager$NameNotFoundException from label27 to label28 with label36;
        catch android.os.RemoteException from label29 to label30 with label36;
        catch android.content.pm.PackageManager$NameNotFoundException from label29 to label30 with label36;
        catch android.os.RemoteException from label30 to label31 with label33;
        catch android.content.pm.PackageManager$NameNotFoundException from label30 to label31 with label33;
        catch android.os.RemoteException from label31 to label32 with label35;
        catch android.content.pm.PackageManager$NameNotFoundException from label31 to label32 with label35;
        catch android.os.RemoteException from label34 to label35 with label35;
        catch android.content.pm.PackageManager$NameNotFoundException from label34 to label35 with label35;
    }

    private int runInstallRemove() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        int i0, $i1;
        java.util.ArrayList r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        r2 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.util.ArrayList getRemainingArgs()>();

        $z0 = virtualinvoke r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: split name not specified");

        return 1;

     label1:
        $i1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doRemoveSplits(int,java.util.Collection,boolean)>(i0, r2, 1);

        return $i1;
    }

    private int runInstallWrite() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0, $i1;
        java.lang.String $r2, $r3, $r8, $r9, r10, r11;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        long l2;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        l2 = -1L;

     label1:
        r10 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        if r10 == null goto label3;

        $z0 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("-S");

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r9);

        goto label1;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label3:
        $r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r11 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $i1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doWriteSplit(int,java.lang.String,long,java.lang.String,boolean)>(i0, $r3, l2, r11, 1);

        return $i1;
    }

    private int runList() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        android.os.IBinder r1;
        java.io.FileDescriptor r2, r13, r14;
        android.os.ResultReceiver r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String[] $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r9, r11;
        java.io.PrintWriter r10;
        byte b8;
        android.os.ShellCallback r15;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r10 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r11 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r11 != null goto label01;

        virtualinvoke r10.<java.io.PrintWriter: void println(java.lang.String)>("Error: didn\'t specify type of data to list");

        return -1;

     label01:
        $i0 = virtualinvoke r11.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1126096540: goto label11;
            case -997447790: goto label10;
            case -807062458: goto label09;
            case -290659267: goto label08;
            case 111578632: goto label07;
            case 544550766: goto label06;
            case 750867693: goto label05;
            case 812757657: goto label04;
            case 1133704324: goto label03;
            default: goto label02;
        };

     label02:
        goto label12;

     label03:
        $z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("permissions");

        if $z0 == 0 goto label02;

        b8 = 6;

        goto label13;

     label04:
        $z1 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("libraries");

        if $z1 == 0 goto label02;

        b8 = 2;

        goto label13;

     label05:
        $z2 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("packages");

        if $z2 == 0 goto label02;

        b8 = 4;

        goto label13;

     label06:
        $z3 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("instrumentation");

        if $z3 == 0 goto label02;

        b8 = 1;

        goto label13;

     label07:
        $z4 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("users");

        if $z4 == 0 goto label02;

        b8 = 8;

        goto label13;

     label08:
        $z5 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("features");

        if $z5 == 0 goto label02;

        b8 = 0;

        goto label13;

     label09:
        $z6 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("package");

        if $z6 == 0 goto label02;

        b8 = 3;

        goto label13;

     label10:
        $z7 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("permission-groups");

        if $z7 == 0 goto label02;

        b8 = 5;

        goto label13;

     label11:
        $z8 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("staged-sessions");

        if $z8 == 0 goto label02;

        b8 = 7;

        goto label13;

     label12:
        b8 = -1;

     label13:
        tableswitch(b8)
        {
            case 0: goto label22;
            case 1: goto label21;
            case 2: goto label20;
            case 3: goto label19;
            case 4: goto label19;
            case 5: goto label18;
            case 6: goto label17;
            case 7: goto label16;
            case 8: goto label15;
            default: goto label14;
        };

     label14:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown list type \'");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r10.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        return -1;

     label15:
        r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("user");

        r13 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.FileDescriptor getInFileDescriptor()>();

        r14 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.FileDescriptor getOutFileDescriptor()>();

        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.FileDescriptor getErrFileDescriptor()>();

        r15 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.os.ShellCallback getShellCallback()>();

        r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.os.ResultReceiver adoptResultReceiver()>();

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "list";

        interfaceinvoke r1.<android.os.IBinder: void shellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r13, r14, r2, $r4, r15, r3);

        return 0;

     label16:
        $i1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runListStagedSessions()>();

        return $i1;

     label17:
        $i2 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runListPermissions()>();

        return $i2;

     label18:
        $i3 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runListPermissionGroups()>();

        return $i3;

     label19:
        $i4 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runListPackages(boolean)>(0);

        return $i4;

     label20:
        $i5 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runListLibraries()>();

        return $i5;

     label21:
        $i6 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runListInstrumentation()>();

        return $i6;

     label22:
        $i7 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runListFeatures()>();

        return $i7;
    }

    private int runListFeatures() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        java.util.List r2;
        android.content.pm.FeatureInfo r3;
        android.content.pm.IPackageManager $r5;
        android.content.pm.ParceledListSlice $r6;
        com.android.server.pm.PackageManagerShellCommand$1 $r7;
        java.lang.Object $r8;
        java.lang.String $r9, $r12, $r14, $r15;
        java.lang.StringBuilder $r10;
        int $i0, $i1, $i2, i3, i4;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r5 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r6 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getSystemAvailableFeatures()>();

        r2 = virtualinvoke $r6.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        $r7 = new com.android.server.pm.PackageManagerShellCommand$1;

        specialinvoke $r7.<com.android.server.pm.PackageManagerShellCommand$1: void <init>(com.android.server.pm.PackageManagerShellCommand)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r2, $r7);

        if r2 == null goto label1;

        i3 = interfaceinvoke r2.<java.util.List: int size()>();

        goto label2;

     label1:
        i3 = 0;

     label2:
        i4 = 0;

     label3:
        if i4 >= i3 goto label7;

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i4);

        r3 = (android.content.pm.FeatureInfo) $r8;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("feature:");

        $r9 = r3.<android.content.pm.FeatureInfo: java.lang.String name>;

        if $r9 == null goto label5;

        $r15 = r3.<android.content.pm.FeatureInfo: java.lang.String name>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        $i1 = r3.<android.content.pm.FeatureInfo: int version>;

        if $i1 <= 0 goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $i2 = r3.<android.content.pm.FeatureInfo: int version>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i2);

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        goto label6;

     label5:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reqGlEsVersion=0x");

        $i0 = r3.<android.content.pm.FeatureInfo: int reqGlEsVersion>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

     label6:
        i4 = i4 + 1;

        goto label3;

     label7:
        return 0;
    }

    private int runListInstrumentation() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        android.content.pm.IPackageManager $r2;
        android.content.pm.ParceledListSlice $r3;
        com.android.server.pm.PackageManagerShellCommand$2 $r4;
        java.lang.Object $r5;
        android.content.ComponentName $r6;
        java.lang.String $r7, $r8, $r9, $r10, $r11, $r14, $r18, $r20, r21, r22;
        int $i0, i3, i4;
        boolean $z0, z1;
        char $c1;
        java.lang.RuntimeException $r15;
        java.lang.StringBuilder $r16, r23;
        byte b2;
        java.util.List r24;
        android.content.pm.InstrumentationInfo r25;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        z1 = 0;

        r21 = null;

     label01:
        r22 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

     label02:
        if r22 == null goto label15;

     label03:
        $i0 = virtualinvoke r22.<java.lang.String: int hashCode()>();

        if $i0 == 1497 goto label05;

     label04:
        goto label07;

     label05:
        $z0 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z0 == 0 goto label04;

     label06:
        b2 = 0;

        goto label08;

     label07:
        b2 = -1;

     label08:
        if b2 == 0 goto label13;

     label09:
        $c1 = virtualinvoke r22.<java.lang.String: char charAt(int)>(0);

        if $c1 == 45 goto label11;

     label10:
        r21 = r22;

        goto label14;

     label11:
        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r14 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

     label12:
        return -1;

     label13:
        z1 = 1;

     label14:
        goto label01;

     label15:
        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryInstrumentation(java.lang.String,int)>(r21, 0);

        r24 = virtualinvoke $r3.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        $r4 = new com.android.server.pm.PackageManagerShellCommand$2;

        specialinvoke $r4.<com.android.server.pm.PackageManagerShellCommand$2: void <init>(com.android.server.pm.PackageManagerShellCommand)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r24, $r4);

        if r24 == null goto label16;

        i3 = interfaceinvoke r24.<java.util.List: int size()>();

        goto label17;

     label16:
        i3 = 0;

     label17:
        i4 = 0;

     label18:
        if i4 >= i3 goto label20;

        $r5 = interfaceinvoke r24.<java.util.List: java.lang.Object get(int)>(i4);

        r25 = (android.content.pm.InstrumentationInfo) $r5;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("instrumentation:");

        if z1 == 0 goto label19;

        $r11 = r25.<android.content.pm.InstrumentationInfo: java.lang.String sourceDir>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

     label19:
        $r6 = new android.content.ComponentName;

        $r8 = r25.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        $r7 = r25.<android.content.pm.InstrumentationInfo: java.lang.String name>;

        specialinvoke $r6.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r8, $r7);

        $r9 = virtualinvoke $r6.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (target=");

        $r10 = r25.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r10);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(")");

        i4 = i4 + 1;

        goto label18;

     label20:
        return 0;

     label21:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r18 = virtualinvoke $r15.<java.lang.RuntimeException: java.lang.String toString()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        return -1;

        catch java.lang.RuntimeException from label01 to label02 with label21;
        catch java.lang.RuntimeException from label03 to label04 with label21;
        catch java.lang.RuntimeException from label05 to label06 with label21;
        catch java.lang.RuntimeException from label09 to label10 with label21;
        catch java.lang.RuntimeException from label11 to label12 with label21;
    }

    private int runListLibraries() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        int i0, $i1, i2, i3;
        java.util.ArrayList $r3;
        android.content.pm.IPackageManager $r4;
        com.android.server.pm.PackageManagerShellCommand$3 $r5;
        java.lang.Object $r6;
        java.lang.String $r7, r9;
        java.lang.String[] r8;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r8 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.lang.String[] getSystemSharedLibraryNames()>();

        i2 = 0;

     label1:
        $i1 = lengthof r8;

        if i2 >= $i1 goto label2;

        $r7 = r8[i2];

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r5 = new com.android.server.pm.PackageManagerShellCommand$3;

        specialinvoke $r5.<com.android.server.pm.PackageManagerShellCommand$3: void <init>(com.android.server.pm.PackageManagerShellCommand)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r3, $r5);

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $r6 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        r9 = (java.lang.String) $r6;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("library:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r9);

        i3 = i3 + 1;

        goto label3;

     label4:
        return 0;
    }

    private int runListPackages(boolean) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        java.util.List r2;
        android.content.pm.PackageInfo r3;
        android.content.pm.IPackageManager $r4, $r9;
        java.lang.Object $r5;
        java.lang.String $r6, $r8, $r10, $r14, $r18, $r19, $r20, $r23, r30, r31, r32, r33, r34, r35, r38, $r42, $r43;
        android.content.pm.ApplicationInfo $r7, $r11, $r12, $r13, $r15, $r16, $r17;
        int $i0, $i3, $i4, $i5, $i6, i7, i8, i9, i11, i12, i13, i14, i15, i16;
        long $l1, $l2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27;
        java.lang.RuntimeException $r24, $r27, $r28, $r29, r36;
        byte b10;
        java.lang.StringBuilder r37, $r40;
        android.content.pm.ParceledListSlice r39;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        z15 := @parameter0: boolean;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        i7 = -1;

        i8 = 0;

        z16 = 0;

        z17 = 0;

        z18 = 0;

        z19 = 0;

        z20 = 0;

        z21 = 0;

        z22 = 0;

        z23 = 0;

        i9 = 0;

     label01:
        r30 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

     label02:
        b10 = 1;

        if r30 == null goto label68;

     label03:
        i11 = virtualinvoke r30.<java.lang.String: int hashCode()>();

     label04:
        lookupswitch(i11)
        {
            case -493830763: goto label37;
            case 1446: goto label34;
            case 1480: goto label31;
            case 1492: goto label28;
            case 1495: goto label25;
            case 1496: goto label22;
            case 1497: goto label20;
            case 1500: goto label18;
            case 1503: goto label16;
            case 1510: goto label14;
            case 1512: goto label12;
            case 43014832: goto label10;
            case 1333469547: goto label08;
            case 1809263575: goto label06;
            default: goto label05;
        };

     label05:
        goto label41;

     label06:
        $z2 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>("--apex-only");

        if $z2 == 0 goto label24;

     label07:
        b10 = 11;

        goto label23;

     label08:
        $z3 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z3 == 0 goto label24;

     label09:
        b10 = 12;

        goto label23;

     label10:
        $z4 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>("--uid");

        if $z4 == 0 goto label24;

     label11:
        b10 = 13;

        goto label23;

     label12:
        $z5 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>("-u");

        if $z5 == 0 goto label24;

     label13:
        b10 = 8;

        goto label23;

     label14:
        $z6 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z6 == 0 goto label24;

     label15:
        b10 = 6;

        goto label23;

     label16:
        $z7 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>("-l");

        if $z7 == 0 goto label24;

     label17:
        b10 = 5;

        goto label23;

     label18:
        $z8 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>("-i");

        if $z8 == 0 goto label24;

     label19:
        b10 = 4;

        goto label23;

     label20:
        $z9 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z9 == 0 goto label24;

     label21:
        b10 = 3;

        goto label23;

     label22:
        $z10 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>("-e");

        if $z10 == 0 goto label24;

     label23:
        goto label42;

     label24:
        goto label41;

     label25:
        r31 = r30;

     label26:
        $z11 = virtualinvoke r31.<java.lang.String: boolean equals(java.lang.Object)>("-d");

        if $z11 == 0 goto label41;

     label27:
        b10 = 0;

        r30 = r31;

        goto label42;

     label28:
        r32 = r30;

     label29:
        $z12 = virtualinvoke r32.<java.lang.String: boolean equals(java.lang.Object)>("-a");

        if $z12 == 0 goto label41;

     label30:
        b10 = 2;

        r30 = r32;

        goto label42;

     label31:
        r33 = r30;

     label32:
        $z13 = virtualinvoke r33.<java.lang.String: boolean equals(java.lang.Object)>("-U");

        if $z13 == 0 goto label41;

     label33:
        b10 = 7;

        r30 = r33;

        goto label42;

     label34:
        r34 = r30;

     label35:
        $z14 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>("-3");

        if $z14 == 0 goto label41;

     label36:
        b10 = 9;

        r30 = r34;

        goto label42;

     label37:
        r35 = r30;

     label38:
        z24 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>("--show-versioncode");

     label39:
        if z24 == 0 goto label41;

        b10 = 10;

        r30 = r35;

        goto label42;

     label40:
        $r28 := @caughtexception;

        r36 = $r28;

        goto label91;

     label41:
        b10 = -1;

     label42:
        tableswitch(b10)
        {
            case 0: goto label61;
            case 1: goto label60;
            case 2: goto label59;
            case 3: goto label58;
            case 4: goto label57;
            case 5: goto label56;
            case 6: goto label55;
            case 7: goto label54;
            case 8: goto label53;
            case 9: goto label52;
            case 10: goto label51;
            case 11: goto label50;
            case 12: goto label48;
            case 13: goto label45;
            default: goto label43;
        };

     label43:
        r37 = new java.lang.StringBuilder;

     label44:
        goto label63;

     label45:
        z19 = 1;

     label46:
        $r19 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);

     label47:
        i12 = i9;

        goto label62;

     label48:
        $r20 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i8 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r20);

     label49:
        i12 = i9;

        goto label62;

     label50:
        i12 = i9 | 1073741824;

        z17 = 1;

        goto label62;

     label51:
        z16 = 1;

        i12 = i9;

        goto label62;

     label52:
        z21 = 1;

        i12 = i9;

        goto label62;

     label53:
        i12 = i9 | 8192;

        goto label62;

     label54:
        z19 = 1;

        i12 = i9;

        goto label62;

     label55:
        z20 = 1;

        i12 = i9;

        goto label62;

     label56:
        i12 = i9;

        goto label62;

     label57:
        z18 = 1;

        i12 = i9;

        goto label62;

     label58:
        z15 = 1;

        i12 = i9;

        goto label62;

     label59:
        $i6 = i9 | 4202496;

        i12 = $i6 | 536870912;

        goto label62;

     label60:
        z23 = 1;

        i12 = i9;

        goto label62;

     label61:
        z22 = 1;

        i12 = i9;

     label62:
        i9 = i12;

        goto label01;

     label63:
        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

     label64:
        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r23 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

     label65:
        return -1;

     label66:
        $r27 := @caughtexception;

        r36 = $r27;

        goto label91;

     label67:
        $r29 := @caughtexception;

        r36 = $r29;

        goto label91;

     label68:
        r38 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        i13 = i9;

        if i8 != -1 goto label69;

        i13 = i9 | 4202496;

     label69:
        i14 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i8, 0, "runListPackages");

        $r4 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r39 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>(i13, i14);

        r2 = virtualinvoke r39.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        i15 = interfaceinvoke r2.<java.util.List: int size()>();

        i16 = 0;

     label70:
        if i16 >= i15 goto label89;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i16);

        r3 = (android.content.pm.PackageInfo) $r5;

        if r38 == null goto label71;

        $r18 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r18.<java.lang.String: boolean contains(java.lang.CharSequence)>(r38);

        if $z1 != 0 goto label71;

        goto label88;

     label71:
        z25 = r3.<android.content.pm.PackageInfo: boolean isApex>;

        if i7 == -1 goto label72;

        if z25 != 0 goto label72;

        $r17 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r17.<android.content.pm.ApplicationInfo: int uid>;

        if $i5 == i7 goto label72;

        goto label88;

     label72:
        if z25 != 0 goto label73;

        $r16 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r16.<android.content.pm.ApplicationInfo: int flags>;

        $i4 = $i3 & 1;

        if $i4 == 0 goto label73;

        z26 = 1;

        goto label74;

     label73:
        z26 = 0;

     label74:
        if z25 != 0 goto label75;

        $r15 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = $r15.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z0 == 0 goto label75;

        z27 = 1;

        goto label76;

     label75:
        z27 = 0;

     label76:
        if z22 == 0 goto label78;

        if z27 != 0 goto label77;

        goto label78;

     label77:
        goto label88;

     label78:
        if z23 == 0 goto label79;

        if z27 == 0 goto label77;

     label79:
        if z20 == 0 goto label80;

        if z26 == 0 goto label77;

     label80:
        if z21 == 0 goto label81;

        if z26 != 0 goto label77;

     label81:
        if z17 == 0 goto label82;

        if z25 == 0 goto label77;

     label82:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("package:");

        if z15 == 0 goto label83;

        $r13 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r14 = $r13.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

     label83:
        $r6 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        if z16 == 0 goto label85;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" versionCode:");

        $r11 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r11 == null goto label84;

        $r12 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $l2 = $r12.<android.content.pm.ApplicationInfo: long longVersionCode>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l2);

        goto label85;

     label84:
        $l1 = virtualinvoke r3.<android.content.pm.PackageInfo: long getLongVersionCode()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l1);

        goto label85;

     label85:
        if z18 == 0 goto label86;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  installer=");

        $r9 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r8 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r10 = interfaceinvoke $r9.<android.content.pm.IPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>($r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r10);

     label86:
        if z19 == 0 goto label87;

        if z25 != 0 goto label87;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" uid:");

        $r7 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r7.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i0);

     label87:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label88:
        i16 = i16 + 1;

        goto label70;

     label89:
        return 0;

     label90:
        $r24 := @caughtexception;

        r36 = $r24;

     label91:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r42 = virtualinvoke r36.<java.lang.RuntimeException: java.lang.String toString()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r43);

        return -1;

        catch java.lang.RuntimeException from label01 to label02 with label90;
        catch java.lang.RuntimeException from label03 to label04 with label67;
        catch java.lang.RuntimeException from label06 to label07 with label40;
        catch java.lang.RuntimeException from label08 to label09 with label40;
        catch java.lang.RuntimeException from label10 to label11 with label40;
        catch java.lang.RuntimeException from label12 to label13 with label40;
        catch java.lang.RuntimeException from label14 to label15 with label40;
        catch java.lang.RuntimeException from label16 to label17 with label40;
        catch java.lang.RuntimeException from label18 to label19 with label40;
        catch java.lang.RuntimeException from label20 to label21 with label40;
        catch java.lang.RuntimeException from label22 to label23 with label40;
        catch java.lang.RuntimeException from label26 to label27 with label40;
        catch java.lang.RuntimeException from label29 to label30 with label40;
        catch java.lang.RuntimeException from label32 to label33 with label40;
        catch java.lang.RuntimeException from label35 to label36 with label40;
        catch java.lang.RuntimeException from label38 to label39 with label40;
        catch java.lang.RuntimeException from label43 to label44 with label67;
        catch java.lang.RuntimeException from label46 to label47 with label40;
        catch java.lang.RuntimeException from label48 to label49 with label40;
        catch java.lang.RuntimeException from label63 to label64 with label67;
        catch java.lang.RuntimeException from label64 to label65 with label66;
    }

    private int runListPermissionGroups() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        java.util.List r2;
        int i0, i1;
        android.content.pm.PermissionGroupInfo r3;
        android.permission.IPermissionManager $r4;
        android.content.pm.ParceledListSlice $r5;
        java.lang.Object $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r4 = r0.<com.android.server.pm.PackageManagerShellCommand: android.permission.IPermissionManager mPermissionManager>;

        $r5 = interfaceinvoke $r4.<android.permission.IPermissionManager: android.content.pm.ParceledListSlice getAllPermissionGroups(int)>(0);

        r2 = virtualinvoke $r5.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.content.pm.PermissionGroupInfo) $r6;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("permission group:");

        $r7 = r3.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        return 0;
    }

    private int runListPermissions() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        java.util.ArrayList $r2;
        java.lang.String $r3, $r8, $r12, r13;
        android.permission.IPermissionManager $r4;
        android.content.pm.ParceledListSlice $r5;
        java.lang.Object $r6;
        android.content.pm.PermissionGroupInfo $r7;
        boolean $z3, $z4, $z5, $z6, $z7, z8, z9, z10, z11, z12;
        java.lang.StringBuilder $r9;
        byte b0;
        int i1, i2, i3;
        java.util.List r16;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        z8 = 0;

        z9 = 0;

        z10 = 0;

        z11 = 0;

        z12 = 0;

     label01:
        r13 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        b0 = 0;

        if r13 == null goto label16;

        i1 = virtualinvoke r13.<java.lang.String: int hashCode()>();

        if i1 == 1495 goto label07;

        if i1 == 1510 goto label06;

        if i1 == 1512 goto label05;

        if i1 == 1497 goto label04;

        if i1 == 1498 goto label03;

     label02:
        goto label08;

     label03:
        $z7 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("-g");

        if $z7 == 0 goto label02;

        b0 = 2;

        goto label09;

     label04:
        $z6 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z6 == 0 goto label02;

        b0 = 1;

        goto label09;

     label05:
        $z5 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("-u");

        if $z5 == 0 goto label02;

        b0 = 4;

        goto label09;

     label06:
        $z4 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z4 == 0 goto label02;

        b0 = 3;

        goto label09;

     label07:
        $z3 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("-d");

        if $z3 == 0 goto label02;

        goto label09;

     label08:
        b0 = -1;

     label09:
        if b0 == 0 goto label14;

        if b0 == 1 goto label13;

        if b0 == 2 goto label12;

        if b0 == 3 goto label11;

        if b0 == 4 goto label10;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return 1;

     label10:
        z10 = 1;

        goto label15;

     label11:
        z9 = 1;

        z8 = 1;

        z11 = 1;

        goto label15;

     label12:
        z9 = 1;

        goto label15;

     label13:
        z8 = 1;

        goto label15;

     label14:
        z12 = 1;

     label15:
        goto label01;

     label16:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        if z9 == 0 goto label19;

        $r4 = r0.<com.android.server.pm.PackageManagerShellCommand: android.permission.IPermissionManager mPermissionManager>;

        $r5 = interfaceinvoke $r4.<android.permission.IPermissionManager: android.content.pm.ParceledListSlice getAllPermissionGroups(int)>(0);

        r16 = virtualinvoke $r5.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        i2 = interfaceinvoke r16.<java.util.List: int size()>();

        i3 = 0;

     label17:
        if i3 >= i2 goto label18;

        $r6 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(i3);

        $r7 = (android.content.pm.PermissionGroupInfo) $r6;

        $r8 = $r7.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        i3 = i3 + 1;

        goto label17;

     label18:
        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        goto label20;

     label19:
        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label20:
        if z12 == 0 goto label21;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Dangerous Permissions:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void doListPermissions(java.util.ArrayList,boolean,boolean,boolean,int,int)>($r2, z9, z8, z11, 1, 1);

        if z10 == 0 goto label23;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Normal Permissions:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void doListPermissions(java.util.ArrayList,boolean,boolean,boolean,int,int)>($r2, z9, z8, z11, 0, 0);

        goto label23;

     label21:
        if z10 == 0 goto label22;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Dangerous and Normal Permissions:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void doListPermissions(java.util.ArrayList,boolean,boolean,boolean,int,int)>($r2, z9, z8, z11, 0, 1);

        goto label23;

     label22:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("All Permissions:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void doListPermissions(java.util.ArrayList,boolean,boolean,boolean,int,int)>($r2, z9, z8, z11, -10000, 10000);

     label23:
        return 0;
    }

    private int runListStagedSessions()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        com.android.internal.util.IndentingPrintWriter $r1;
        java.io.PrintWriter $r2;
        android.content.pm.IPackageManager $r3;
        android.content.pm.IPackageInstaller $r4;
        android.content.pm.ParceledListSlice $r5;
        java.util.List $r6;
        boolean $z0;
        java.lang.String $r9, $r13, $r16, $r19, r24;
        android.os.RemoteException $r10;
        java.lang.Class $r12;
        java.lang.Throwable $r20, $r21;
        com.android.server.pm.PackageManagerShellCommand$SessionDump r23;
        java.lang.StringBuilder r25, r27;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        $r1 = new com.android.internal.util.IndentingPrintWriter;

        $r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        specialinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String,int)>($r2, "  ", 120);

     label01:
        r23 = new com.android.server.pm.PackageManagerShellCommand$SessionDump;

        specialinvoke r23.<com.android.server.pm.PackageManagerShellCommand$SessionDump: void <init>(com.android.server.pm.PackageManagerShellCommand$1)>(null);

     label02:
        r24 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

     label03:
        if r24 == null goto label06;

     label04:
        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: boolean setSessionFlag(java.lang.String,com.android.server.pm.PackageManagerShellCommand$SessionDump)>(r24, r23);

        if $z0 != 0 goto label02;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r9 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r9);

     label05:
        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void close()>();

        return -1;

     label06:
        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        $r5 = interfaceinvoke $r4.<android.content.pm.IPackageInstaller: android.content.pm.ParceledListSlice getStagedSessions()>();

        $r6 = virtualinvoke $r5.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void printSessionList(com.android.internal.util.IndentingPrintWriter,java.util.List,com.android.server.pm.PackageManagerShellCommand$SessionDump)>($r1, $r6, r23);

     label07:
        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void close()>();

        return 1;

     label08:
        $r10 := @caughtexception;

     label09:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

        $r12 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r16 = virtualinvoke $r10.<android.os.RemoteException: java.lang.String getMessage()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r19 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r19);

     label10:
        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void close()>();

        return -1;

     label11:
        $r21 := @caughtexception;

     label12:
        virtualinvoke $r1.<com.android.internal.util.IndentingPrintWriter: void close()>();

     label13:
        goto label15;

     label14:
        $r20 := @caughtexception;

        virtualinvoke $r21.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r20);

     label15:
        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    private int runLogVisibility()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1, $r3;
        java.lang.Object $r4;
        android.content.pm.PackageManagerInternal $r5;
        boolean $z0, $z1, z2;
        java.lang.StringBuilder $r6;
        java.lang.String $r9, r10, r11;
        int i0;
        byte b1;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        z2 = 1;

     label01:
        r10 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        if r10 == null goto label10;

        i0 = virtualinvoke r10.<java.lang.String: int hashCode()>();

        if i0 == -1237677752 goto label04;

        if i0 == 1101165347 goto label03;

     label02:
        goto label05;

     label03:
        $z1 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("--enable");

        if $z1 == 0 goto label02;

        b1 = 1;

        goto label06;

     label04:
        $z0 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("--disable");

        if $z0 == 0 goto label02;

        b1 = 0;

        goto label06;

     label05:
        b1 = -1;

     label06:
        if b1 == 0 goto label08;

        if b1 == 1 goto label07;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        return -1;

     label07:
        z2 = 1;

        goto label09;

     label08:
        z2 = 0;

     label09:
        goto label01;

     label10:
        r11 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r11 == null goto label11;

        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r5 = (android.content.pm.PackageManagerInternal) $r4;

        virtualinvoke $r5.<android.content.pm.PackageManagerInternal: void setVisibilityLogging(java.lang.String,boolean)>(r11, z2);

        return 1;

     label11:
        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Error: no package specified");

        return -1;
    }

    private int runPath() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int $i1, $i2, i3;
        java.io.PrintWriter $r1;
        boolean $z0;
        java.lang.String $r2, r3, r4;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        i3 = 0;

        if r3 == null goto label1;

        i3 = 0;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i3 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r2);

     label1:
        r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        if r4 != null goto label2;

        $r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: no package specified");

        return 1;

     label2:
        $i1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i3, -10000, "runPath");

        $i2 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int displayPackageFilePath(java.lang.String,int)>(r4, $i1);

        return $i2;
    }

    private int runQueryIntentActivities()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.util.List r1;
        android.content.pm.IPackageManager $r2;
        java.lang.String $r3, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        android.content.pm.ParceledListSlice $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r5, $r7;
        android.content.pm.ResolveInfo $r6, $r8;
        android.os.RemoteException $r9;
        java.lang.Throwable $r11;
        android.content.Intent r14;
        java.io.PrintWriter r15;
        android.util.PrintWriterPrinter r20, r21;
        java.lang.RuntimeException r22, r23;
        java.net.URISyntaxException r24;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

     label01:
        r14 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.content.Intent parseIntentAndUser()>();

     label02:
        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r3 = virtualinvoke r14.<android.content.Intent: java.lang.String getType()>();

        $i1 = r0.<com.android.server.pm.PackageManagerShellCommand: int mQueryFlags>;

        $i0 = r0.<com.android.server.pm.PackageManagerShellCommand: int mTargetUser>;

        $r4 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r14, $r3, $i1, $i0);

        r1 = virtualinvoke $r4.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        r15 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label03:
        if r1 == null goto label15;

     label04:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 > 0 goto label06;

     label05:
        goto label15;

     label06:
        $z0 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mComponents>;

        if $z0 != 0 goto label11;

        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        virtualinvoke r15.<java.io.PrintWriter: void print(int)>($i4);

        virtualinvoke r15.<java.io.PrintWriter: void println(java.lang.String)>(" activities found:");

        r20 = new android.util.PrintWriterPrinter;

        specialinvoke r20.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r15);

     label07:
        i6 = 0;

     label08:
        $i5 = interfaceinvoke r1.<java.util.List: int size()>();

        if i6 >= $i5 goto label10;

        virtualinvoke r15.<java.io.PrintWriter: void print(java.lang.String)>("  Activity #");

        virtualinvoke r15.<java.io.PrintWriter: void print(int)>(i6);

        virtualinvoke r15.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i6);

        $r8 = (android.content.pm.ResolveInfo) $r7;

        $z4 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mBrief>;

        $z3 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mComponents>;

        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void printResolveInfo(android.util.PrintWriterPrinter,java.lang.String,android.content.pm.ResolveInfo,boolean,boolean)>(r20, "    ", $r8, $z4, $z3);

     label09:
        i6 = i6 + 1;

        goto label08;

     label10:
        goto label16;

     label11:
        r21 = new android.util.PrintWriterPrinter;

        specialinvoke r21.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r15);

     label12:
        i7 = 0;

     label13:
        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        if i7 >= $i3 goto label16;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        $r6 = (android.content.pm.ResolveInfo) $r5;

        $z2 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mBrief>;

        $z1 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mComponents>;

        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void printResolveInfo(android.util.PrintWriterPrinter,java.lang.String,android.content.pm.ResolveInfo,boolean,boolean)>(r21, "", $r6, $z2, $z1);

     label14:
        i7 = i7 + 1;

        goto label13;

     label15:
        virtualinvoke r15.<java.io.PrintWriter: void println(java.lang.String)>("No activities found");

     label16:
        return 0;

     label17:
        $r9 := @caughtexception;

        r22 = new java.lang.RuntimeException;

        specialinvoke r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed calling service", $r9);

        throw r22;

     label18:
        $r11 := @caughtexception;

        r23 = new java.lang.RuntimeException;

        r24 = (java.net.URISyntaxException) $r11;

        $r13 = virtualinvoke r24.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke r23.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r11);

        throw r23;

        catch java.net.URISyntaxException from label01 to label02 with label18;
        catch android.os.RemoteException from label02 to label03 with label17;
        catch android.os.RemoteException from label04 to label05 with label17;
        catch android.os.RemoteException from label06 to label07 with label17;
        catch android.os.RemoteException from label08 to label09 with label17;
        catch android.os.RemoteException from label11 to label12 with label17;
        catch android.os.RemoteException from label13 to label14 with label17;
        catch android.os.RemoteException from label15 to label16 with label17;
    }

    private int runQueryIntentReceivers()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        android.content.pm.IPackageManager $r2;
        java.lang.String $r3, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        android.content.pm.ParceledListSlice $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r5, $r7;
        android.content.pm.ResolveInfo $r6, $r8;
        java.lang.Throwable $r9;
        android.os.RemoteException $r12;
        android.content.Intent r14;
        java.util.List r15;
        android.util.PrintWriterPrinter r20, r21;
        java.lang.RuntimeException r22, r23;
        java.net.URISyntaxException r24;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

     label01:
        r14 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.content.Intent parseIntentAndUser()>();

     label02:
        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r3 = virtualinvoke r14.<android.content.Intent: java.lang.String getType()>();

        $i1 = r0.<com.android.server.pm.PackageManagerShellCommand: int mQueryFlags>;

        $i0 = r0.<com.android.server.pm.PackageManagerShellCommand: int mTargetUser>;

        $r4 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r14, $r3, $i1, $i0);

        r15 = virtualinvoke $r4.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label03:
        if r15 == null goto label15;

     label04:
        $i2 = interfaceinvoke r15.<java.util.List: int size()>();

        if $i2 > 0 goto label06;

     label05:
        goto label15;

     label06:
        $z0 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mComponents>;

        if $z0 != 0 goto label11;

        $i4 = interfaceinvoke r15.<java.util.List: int size()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i4);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" receivers found:");

        r20 = new android.util.PrintWriterPrinter;

        specialinvoke r20.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r1);

     label07:
        i6 = 0;

     label08:
        $i5 = interfaceinvoke r15.<java.util.List: int size()>();

        if i6 >= $i5 goto label10;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Receiver #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i6);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r7 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(i6);

        $r8 = (android.content.pm.ResolveInfo) $r7;

        $z4 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mBrief>;

        $z3 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mComponents>;

        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void printResolveInfo(android.util.PrintWriterPrinter,java.lang.String,android.content.pm.ResolveInfo,boolean,boolean)>(r20, "    ", $r8, $z4, $z3);

     label09:
        i6 = i6 + 1;

        goto label08;

     label10:
        goto label16;

     label11:
        r21 = new android.util.PrintWriterPrinter;

        specialinvoke r21.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r1);

     label12:
        i7 = 0;

     label13:
        $i3 = interfaceinvoke r15.<java.util.List: int size()>();

        if i7 >= $i3 goto label16;

        $r5 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(i7);

        $r6 = (android.content.pm.ResolveInfo) $r5;

        $z2 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mBrief>;

        $z1 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mComponents>;

        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void printResolveInfo(android.util.PrintWriterPrinter,java.lang.String,android.content.pm.ResolveInfo,boolean,boolean)>(r21, "", $r6, $z2, $z1);

     label14:
        i7 = i7 + 1;

        goto label13;

     label15:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("No receivers found");

     label16:
        return 0;

     label17:
        $r12 := @caughtexception;

        r22 = new java.lang.RuntimeException;

        specialinvoke r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed calling service", $r12);

        throw r22;

     label18:
        $r9 := @caughtexception;

        r23 = new java.lang.RuntimeException;

        r24 = (java.net.URISyntaxException) $r9;

        $r11 = virtualinvoke r24.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke r23.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r9);

        throw r23;

        catch java.net.URISyntaxException from label01 to label02 with label18;
        catch android.os.RemoteException from label02 to label03 with label17;
        catch android.os.RemoteException from label04 to label05 with label17;
        catch android.os.RemoteException from label06 to label07 with label17;
        catch android.os.RemoteException from label08 to label09 with label17;
        catch android.os.RemoteException from label11 to label12 with label17;
        catch android.os.RemoteException from label13 to label14 with label17;
        catch android.os.RemoteException from label15 to label16 with label17;
    }

    private int runQueryIntentServices()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.util.List r1;
        android.content.pm.IPackageManager $r2;
        java.lang.String $r3, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        android.content.pm.ParceledListSlice $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r5, $r7;
        android.content.pm.ResolveInfo $r6, $r8;
        android.os.RemoteException $r9;
        java.lang.Throwable $r11;
        android.content.Intent r14;
        java.io.PrintWriter r15;
        android.util.PrintWriterPrinter r20, r21;
        java.lang.RuntimeException r22, r23;
        java.net.URISyntaxException r24;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

     label01:
        r14 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.content.Intent parseIntentAndUser()>();

     label02:
        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r3 = virtualinvoke r14.<android.content.Intent: java.lang.String getType()>();

        $i1 = r0.<com.android.server.pm.PackageManagerShellCommand: int mQueryFlags>;

        $i0 = r0.<com.android.server.pm.PackageManagerShellCommand: int mTargetUser>;

        $r4 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryIntentServices(android.content.Intent,java.lang.String,int,int)>(r14, $r3, $i1, $i0);

        r1 = virtualinvoke $r4.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        r15 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label03:
        if r1 == null goto label15;

     label04:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 > 0 goto label06;

     label05:
        goto label15;

     label06:
        $z0 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mComponents>;

        if $z0 != 0 goto label11;

        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        virtualinvoke r15.<java.io.PrintWriter: void print(int)>($i4);

        virtualinvoke r15.<java.io.PrintWriter: void println(java.lang.String)>(" services found:");

        r20 = new android.util.PrintWriterPrinter;

        specialinvoke r20.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r15);

     label07:
        i6 = 0;

     label08:
        $i5 = interfaceinvoke r1.<java.util.List: int size()>();

        if i6 >= $i5 goto label10;

        virtualinvoke r15.<java.io.PrintWriter: void print(java.lang.String)>("  Service #");

        virtualinvoke r15.<java.io.PrintWriter: void print(int)>(i6);

        virtualinvoke r15.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i6);

        $r8 = (android.content.pm.ResolveInfo) $r7;

        $z4 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mBrief>;

        $z3 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mComponents>;

        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void printResolveInfo(android.util.PrintWriterPrinter,java.lang.String,android.content.pm.ResolveInfo,boolean,boolean)>(r20, "    ", $r8, $z4, $z3);

     label09:
        i6 = i6 + 1;

        goto label08;

     label10:
        goto label16;

     label11:
        r21 = new android.util.PrintWriterPrinter;

        specialinvoke r21.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r15);

     label12:
        i7 = 0;

     label13:
        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        if i7 >= $i3 goto label16;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        $r6 = (android.content.pm.ResolveInfo) $r5;

        $z2 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mBrief>;

        $z1 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mComponents>;

        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void printResolveInfo(android.util.PrintWriterPrinter,java.lang.String,android.content.pm.ResolveInfo,boolean,boolean)>(r21, "", $r6, $z2, $z1);

     label14:
        i7 = i7 + 1;

        goto label13;

     label15:
        virtualinvoke r15.<java.io.PrintWriter: void println(java.lang.String)>("No services found");

     label16:
        return 0;

     label17:
        $r9 := @caughtexception;

        r22 = new java.lang.RuntimeException;

        specialinvoke r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed calling service", $r9);

        throw r22;

     label18:
        $r11 := @caughtexception;

        r23 = new java.lang.RuntimeException;

        r24 = (java.net.URISyntaxException) $r11;

        $r13 = virtualinvoke r24.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke r23.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r11);

        throw r23;

        catch java.net.URISyntaxException from label01 to label02 with label18;
        catch android.os.RemoteException from label02 to label03 with label17;
        catch android.os.RemoteException from label04 to label05 with label17;
        catch android.os.RemoteException from label06 to label07 with label17;
        catch android.os.RemoteException from label08 to label09 with label17;
        catch android.os.RemoteException from label11 to label12 with label17;
        catch android.os.RemoteException from label13 to label14 with label17;
        catch android.os.RemoteException from label15 to label16 with label17;
    }

    private int runRemoveSplits(java.lang.String, java.util.Collection) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        int i0, i1, $i2, $i3, i8;
        android.content.pm.PackageInstaller$SessionParams $r3;
        java.lang.Exception $r4, $r6, $r8;
        java.lang.Throwable $r7;
        java.lang.String r9;
        java.util.Collection r10;
        boolean z1;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r9 := @parameter0: java.lang.String;

        r10 := @parameter1: java.util.Collection;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r3 = new android.content.pm.PackageInstaller$SessionParams;

        specialinvoke $r3.<android.content.pm.PackageInstaller$SessionParams: void <init>(int)>(2);

        $i2 = $r3.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i3 = 2 | $i2;

        $r3.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i3;

        $r3.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName> = r9;

        i0 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doCreateSession(android.content.pm.PackageInstaller$SessionParams,java.lang.String,int)>($r3, null, -1);

        z1 = 1;

     label01:
        i1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doRemoveSplits(int,java.util.Collection,boolean)>(i0, r10, 0);

     label02:
        if i1 == 0 goto label07;

     label03:
        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doAbandonSession(int,boolean)>(i0, 0);

     label04:
        goto label06;

     label05:
        $r6 := @caughtexception;

     label06:
        return 1;

     label07:
        z1 = 1;

     label08:
        i8 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doCommitSession(int,boolean)>(i0, 0);

     label09:
        if i8 == 0 goto label14;

     label10:
        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doAbandonSession(int,boolean)>(i0, 0);

     label11:
        goto label13;

     label12:
        $r4 := @caughtexception;

     label13:
        return 1;

     label14:
        z1 = 0;

     label15:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success");

     label16:
        goto label17;

     label17:
        return 0;

     label18:
        $r7 := @caughtexception;

        if z1 == 0 goto label22;

     label19:
        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doAbandonSession(int,boolean)>(i0, 0);

     label20:
        goto label22;

     label21:
        $r8 := @caughtexception;

     label22:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Exception from label19 to label20 with label21;
    }

    private int runResetPermissions() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        android.permission.IPermissionManager $r1;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        $r1 = r0.<com.android.server.pm.PackageManagerShellCommand: android.permission.IPermissionManager mPermissionManager>;

        interfaceinvoke $r1.<android.permission.IPermissionManager: void resetRuntimePermissions()>();

        return 0;
    }

    private int runResolveActivity()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        android.content.pm.IPackageManager $r3;
        java.lang.String $r4, $r7;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.Throwable $r5;
        android.os.RemoteException $r8;
        android.content.Intent r10;
        android.content.pm.ResolveInfo r11;
        android.util.PrintWriterPrinter r14;
        java.lang.RuntimeException r15, r16;
        java.net.URISyntaxException r17;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

     label1:
        r10 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.content.Intent parseIntentAndUser()>();

     label2:
        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r4 = virtualinvoke r10.<android.content.Intent: java.lang.String getType()>();

        $i1 = r0.<com.android.server.pm.PackageManagerShellCommand: int mQueryFlags>;

        $i0 = r0.<com.android.server.pm.PackageManagerShellCommand: int mTargetUser>;

        r11 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>(r10, $r4, $i1, $i0);

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label3:
        if r11 != null goto label6;

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("No activity found");

     label5:
        goto label7;

     label6:
        r14 = new android.util.PrintWriterPrinter;

        specialinvoke r14.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r1);

        $z1 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mBrief>;

        $z0 = r0.<com.android.server.pm.PackageManagerShellCommand: boolean mComponents>;

        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: void printResolveInfo(android.util.PrintWriterPrinter,java.lang.String,android.content.pm.ResolveInfo,boolean,boolean)>(r14, "", r11, $z1, $z0);

     label7:
        return 0;

     label8:
        $r8 := @caughtexception;

        r15 = new java.lang.RuntimeException;

        specialinvoke r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed calling service", $r8);

        throw r15;

     label9:
        $r5 := @caughtexception;

        r16 = new java.lang.RuntimeException;

        r17 = (java.net.URISyntaxException) $r5;

        $r7 = virtualinvoke r17.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke r16.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw r16;

        catch java.net.URISyntaxException from label1 to label2 with label9;
        catch android.os.RemoteException from label2 to label3 with label8;
        catch android.os.RemoteException from label4 to label5 with label8;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    private int runRollbackApp()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r16, $r19, $r22, $r27;
        android.content.rollback.IRollbackManager r4;
        java.util.Iterator r5, r7;
        android.content.rollback.RollbackInfo r6, r29, r30;
        com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver $r8;
        android.os.IBinder $r9;
        android.content.pm.ParceledListSlice $r10, $r12;
        java.util.List $r11, $r24;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        android.content.IntentSender $r13;
        java.lang.StringBuilder $r14, r31;
        java.lang.Object $r23, $r25;
        android.content.rollback.PackageRollbackInfo $r26;
        android.os.RemoteException $r28;
        android.content.Intent r33;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        if r2 != null goto label01;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: package name not specified");

        return 1;

     label01:
        $r8 = new com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver;

        specialinvoke $r8.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: void <init>(com.android.server.pm.PackageManagerShellCommand$1)>(null);

     label02:
        $r9 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("rollback");

        r4 = staticinvoke <android.content.rollback.IRollbackManager$Stub: android.content.rollback.IRollbackManager asInterface(android.os.IBinder)>($r9);

     label03:
        r29 = null;

     label04:
        $r10 = interfaceinvoke r4.<android.content.rollback.IRollbackManager: android.content.pm.ParceledListSlice getAvailableRollbacks()>();

        $r11 = virtualinvoke $r10.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        r5 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r23 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.rollback.RollbackInfo) $r23;

        $r24 = virtualinvoke r6.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r7 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>();

     label06:
        r30 = r29;

     label07:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r25 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r26 = (android.content.rollback.PackageRollbackInfo) $r25;

        $r27 = virtualinvoke $r26.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z2 == 0 goto label09;

     label08:
        r30 = r6;

        goto label10;

     label09:
        goto label06;

     label10:
        r29 = r30;

        goto label05;

     label11:
        if r29 != null goto label14;

     label12:
        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No available rollbacks for: ");

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r22);

     label13:
        return 1;

     label14:
        $i0 = virtualinvoke r29.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        $r12 = staticinvoke <android.content.pm.ParceledListSlice: android.content.pm.ParceledListSlice emptyList()>();

        $r13 = virtualinvoke $r8.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: android.content.IntentSender getIntentSender()>();

        interfaceinvoke r4.<android.content.rollback.IRollbackManager: void commitRollback(int,android.content.pm.ParceledListSlice,java.lang.String,android.content.IntentSender)>($i0, $r12, "com.android.shell", $r13);

     label15:
        goto label17;

     label16:
        $r28 := @caughtexception;

     label17:
        r33 = virtualinvoke $r8.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: android.content.Intent getResult()>();

        $i1 = virtualinvoke r33.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.content.rollback.extra.STATUS", 1);

        if $i1 != 0 goto label18;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success");

        return 0;

     label18:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

        $r16 = virtualinvoke r33.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android.content.rollback.extra.STATUS_MESSAGE");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        return 1;

        catch android.os.RemoteException from label02 to label03 with label16;
        catch android.os.RemoteException from label04 to label05 with label16;
        catch android.os.RemoteException from label05 to label06 with label16;
        catch android.os.RemoteException from label07 to label08 with label16;
        catch android.os.RemoteException from label12 to label13 with label16;
        catch android.os.RemoteException from label14 to label15 with label16;
    }

    private int runSetAppLink() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int $i0, $i1, $i2, i3, i6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.content.pm.ApplicationInfo $r1;
        android.content.pm.IPackageManager $r2, $r37;
        java.lang.StringBuilder $r3, $r7, $r12, $r17, $r24;
        java.lang.String $r6, $r11, $r16, $r21, $r27, $r28, r29, r32, r33, r34;
        java.io.PrintWriter $r22, $r23, r30, r35, r39, r41, r43;
        byte b4, b5;
        android.content.pm.PackageInfo r38;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i3 = 0;

     label01:
        r29 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        if r29 == null goto label03;

        $z6 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z6 == 0 goto label02;

        $r28 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i3 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r28);

        goto label01;

     label02:
        r30 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown option: ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r30.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        return 1;

     label03:
        r32 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r32 != null goto label04;

        $r23 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r23.<java.io.PrintWriter: void println(java.lang.String)>("Error: no package specified.");

        return 1;

     label04:
        r33 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r33 != null goto label05;

        $r22 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r22.<java.io.PrintWriter: void println(java.lang.String)>("Error: no app link state specified.");

        return 1;

     label05:
        r34 = virtualinvoke r33.<java.lang.String: java.lang.String toLowerCase()>();

        b4 = -1;

        $i0 = virtualinvoke r34.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1414557169: goto label11;
            case -1038130864: goto label10;
            case 96889: goto label09;
            case 104712844: goto label08;
            case 1182785979: goto label07;
            default: goto label06;
        };

     label06:
        goto label12;

     label07:
        $z0 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>("always-ask");

        if $z0 == 0 goto label06;

        b4 = 3;

        goto label12;

     label08:
        $z2 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>("never");

        if $z2 == 0 goto label06;

        b4 = 4;

        goto label12;

     label09:
        $z3 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>("ask");

        if $z3 == 0 goto label06;

        b4 = 2;

        goto label12;

     label10:
        $z4 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>("undefined");

        if $z4 == 0 goto label06;

        b4 = 0;

        goto label12;

     label11:
        $z5 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>("always");

        if $z5 == 0 goto label06;

        b4 = 1;

     label12:
        if b4 == 0 goto label17;

        if b4 == 1 goto label16;

        if b4 == 2 goto label15;

        if b4 == 3 goto label14;

        if b4 == 4 goto label13;

        r35 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown app link state \'");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r35.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        return 1;

     label13:
        b5 = 3;

        goto label18;

     label14:
        b5 = 4;

        goto label18;

     label15:
        b5 = 1;

        goto label18;

     label16:
        b5 = 2;

        goto label18;

     label17:
        b5 = 0;

     label18:
        i6 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i3, -10000, "runSetAppLink");

        $r37 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r38 = interfaceinvoke $r37.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r32, 0, i6);

        if r38 != null goto label19;

        r39 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: package ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found.");

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r39.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        return 1;

     label19:
        $r1 = r38.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r1.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i2 = $i1 & 16;

        if $i2 != 0 goto label20;

        r41 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: package ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not handle web links.");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r41.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        return 1;

     label20:
        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $z1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: boolean updateIntentVerificationStatus(java.lang.String,int,int)>(r32, b5, i6);

        if $z1 != 0 goto label21;

        r43 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unable to update app link status for ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r43.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        return 1;

     label21:
        return 0;
    }

    private int runSetEnabledSetting(int) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0, $i2, $i3, $i4, i5, i6;
        android.content.pm.IPackageManager $r1, $r7, $r19, r28;
        java.lang.StringBuilder $r2, $r11, $r15;
        java.lang.String $r4, $r8, $r10, $r14, $r20, $r22, $r24, r25, r26;
        java.io.PrintWriter $r23, r30, r32;
        boolean $z0;
        android.content.ComponentName r27;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i0 := @parameter0: int;

        r25 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        i5 = 0;

        if r25 == null goto label1;

        i5 = 0;

        $z0 = virtualinvoke r25.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z0 == 0 goto label1;

        $r24 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i5 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r24);

     label1:
        r26 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r26 != null goto label2;

        $r23 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r23.<java.io.PrintWriter: void println(java.lang.String)>("Error: no package or component specified");

        return 1;

     label2:
        i6 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i5, -10000, "runSetEnabledSetting");

        r27 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r26);

        if r27 != null goto label3;

        r28 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shell:");

        $i3 = staticinvoke <android.os.Process: int myUid()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r28.<android.content.pm.IPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>(r26, i0, 0, i6, $r14);

        r30 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new state: ");

        $r19 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $i4 = interfaceinvoke $r19.<android.content.pm.IPackageManager: int getApplicationEnabledSetting(java.lang.String,int)>(r26, i6);

        $r20 = staticinvoke <com.android.server.pm.PackageManagerShellCommand: java.lang.String enabledSettingToString(int)>($i4);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r30.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        return 0;

     label3:
        $r1 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        interfaceinvoke $r1.<android.content.pm.IPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>(r27, i0, 0, i6);

        r32 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Component ");

        $r4 = virtualinvoke r27.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new state: ");

        $r7 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $i2 = interfaceinvoke $r7.<android.content.pm.IPackageManager: int getComponentEnabledSetting(android.content.ComponentName,int)>(r27, i6);

        $r8 = staticinvoke <com.android.server.pm.PackageManagerShellCommand: java.lang.String enabledSettingToString(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r32.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        return 0;
    }

    private int runSetHarmfulAppWarning() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        android.content.pm.IPackageManager $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, $r7, r8, r10, r11;
        int i0, i1;
        java.io.PrintWriter r9;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i0 = -2;

     label1:
        r8 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        if r8 == null goto label3;

        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i0 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r7);

        goto label1;

     label2:
        r9 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        return -1;

     label3:
        i1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i0, -10000, "runSetHarmfulAppWarning");

        r10 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        r11 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        interfaceinvoke $r2.<android.content.pm.IPackageManager: void setHarmfulAppWarning(java.lang.String,java.lang.CharSequence,int)>(r10, r11, i1);

        return 0;
    }

    private int runSetHiddenSetting(boolean) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        boolean z0, $z2, $z3;
        java.lang.String r1, $r10, $r12, r13;
        android.content.pm.IPackageManager $r3, $r8;
        java.lang.StringBuilder $r4;
        java.io.PrintWriter $r11, r14;
        int i1, i2;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        z0 := @parameter0: boolean;

        r13 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        i1 = 0;

        if r13 == null goto label1;

        i1 = 0;

        $z3 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z3 == 0 goto label1;

        $r12 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i1 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r12);

     label1:
        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r1 != null goto label2;

        $r11 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r11.<java.io.PrintWriter: void println(java.lang.String)>("Error: no package or component specified");

        return 1;

     label2:
        i2 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i1, -10000, "runSetHiddenSetting");

        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,int)>(r1, z0, i2);

        r14 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new hidden state: ");

        $r8 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $z2 = interfaceinvoke $r8.<android.content.pm.IPackageManager: boolean getApplicationHiddenSettingAsUser(java.lang.String,int)>(r1, i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        return 0;
    }

    private int runSetHomeActivity()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        int $i1, $i2, i3, i5;
        java.util.concurrent.CompletableFuture $r3;
        android.os.RemoteCallback $r4;
        com.android.server.pm._$$Lambda$PackageManagerShellCommand$v3vXA2YvCwaE7J0QfR1IQ122iTI $r5;
        android.os.IBinder $r6;
        android.app.role.IRoleManager $r7;
        java.lang.Object $r8;
        java.lang.Boolean $r9;
        boolean $z0, $z1;
        java.lang.String $r10, $r14, $r16, r17, r19;
        java.lang.StringBuilder $r11;
        java.lang.Exception $r15;
        byte b4;
        android.content.ComponentName r20;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        i3 = 0;

     label01:
        r17 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        if r17 == null goto label07;

        $i2 = virtualinvoke r17.<java.lang.String: int hashCode()>();

        if $i2 == 1333469547 goto label03;

     label02:
        goto label04;

     label03:
        $z1 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z1 == 0 goto label02;

        b4 = 0;

        goto label05;

     label04:
        b4 = -1;

     label05:
        if b4 == 0 goto label06;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        return 1;

     label06:
        $r10 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i3 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r10);

        goto label01;

     label07:
        r19 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $i1 = virtualinvoke r19.<java.lang.String: int indexOf(int)>(47);

        if $i1 >= 0 goto label08;

        goto label12;

     label08:
        if r19 == null goto label09;

        r20 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r19);

        goto label10;

     label09:
        r20 = null;

     label10:
        if r20 != null goto label11;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: invalid component name");

        return 1;

     label11:
        r19 = virtualinvoke r20.<android.content.ComponentName: java.lang.String getPackageName()>();

     label12:
        i5 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i3, -10000, "runSetHomeActivity");

        $r3 = new java.util.concurrent.CompletableFuture;

        specialinvoke $r3.<java.util.concurrent.CompletableFuture: void <init>()>();

        $r4 = new android.os.RemoteCallback;

        $r5 = new com.android.server.pm._$$Lambda$PackageManagerShellCommand$v3vXA2YvCwaE7J0QfR1IQ122iTI;

        specialinvoke $r5.<com.android.server.pm._$$Lambda$PackageManagerShellCommand$v3vXA2YvCwaE7J0QfR1IQ122iTI: void <init>(java.util.concurrent.CompletableFuture)>($r3);

        specialinvoke $r4.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r5);

     label13:
        $r6 = staticinvoke <android.os.ServiceManager: android.os.IBinder getServiceOrThrow(java.lang.String)>("role");

        $r7 = staticinvoke <android.app.role.IRoleManager$Stub: android.app.role.IRoleManager asInterface(android.os.IBinder)>($r6);

        interfaceinvoke $r7.<android.app.role.IRoleManager: void addRoleHolderAsUser(java.lang.String,java.lang.String,int,int,android.os.RemoteCallback)>("android.app.role.HOME", r19, 0, i5, $r4);

        $r8 = virtualinvoke $r3.<java.util.concurrent.CompletableFuture: java.lang.Object get()>();

        $r9 = (java.lang.Boolean) $r8;

        $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label15;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success");

     label14:
        return 0;

     label15:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: Failed to set default home.");

     label16:
        return 1;

     label17:
        $r15 := @caughtexception;

        $r16 = virtualinvoke $r15.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        return 1;

        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }

    private int runSetInstallLocation() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0;
        android.content.pm.IPackageManager $r1;
        boolean $z0;
        java.io.PrintWriter $r2, $r3, $r5;
        java.lang.Throwable $r4;
        java.lang.String r6;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r6 != null goto label1;

        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Error: no install location specified.");

        return 1;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6);

     label2:
        $r1 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $z0 = interfaceinvoke $r1.<android.content.pm.IPackageManager: boolean setInstallLocation(int)>(i0);

        if $z0 != 0 goto label3;

        $r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Error: install location has to be a number.");

        return 1;

     label3:
        return 0;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("Error: install location has to be a number.");

        return 1;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    private int runSetInstaller() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String r1, r2;
        java.io.PrintWriter $r3, $r5;
        android.content.pm.IPackageManager $r4;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r1 == null goto label2;

        if r2 != null goto label1;

        goto label2;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>(r1, r2);

        $r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("Success");

        return 0;

     label2:
        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Must provide both target and installer package names");

        return 1;
    }

    private int runSetPermissionEnforced() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String r1, r2;
        android.permission.IPermissionManager $r3;
        boolean $z0;
        java.io.PrintWriter $r4, $r5;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r1 != null goto label1;

        $r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("Error: no permission specified");

        return 1;

     label1:
        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r2 != null goto label2;

        $r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("Error: no enforcement specified");

        return 1;

     label2:
        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.permission.IPermissionManager mPermissionManager>;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);

        interfaceinvoke $r3.<android.permission.IPermissionManager: void setPermissionEnforced(java.lang.String,boolean)>(r1, $z0);

        return 0;
    }

    private int runSnapshotProfile() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r3, $r14, $r21, $r25, $r29, $r31, r36, r37, r41, r44, r48, r50;
        boolean z0, $z1, $z2, $z3, $z4;
        android.content.pm.IPackageManager $r4, $r6, $r16;
        android.content.pm.dex.IArtManager $r5, $r7;
        android.os.ParcelFileDescriptor $r8;
        int $i1, $i2, $i4;
        android.content.pm.ApplicationInfo $r17;
        java.lang.Throwable $r26, $r32, $r33, $r34, $r35;
        byte b3, b5;
        android.content.pm.PackageInfo r39;
        java.lang.StringBuilder r58, r59, r62, r64, r66;
        com.android.server.pm.PackageManagerShellCommand$SnapshotRuntimeProfileCallback r60;
        android.os.ParcelFileDescriptor$AutoCloseInputStream r61;
        java.io.File r63;
        java.io.FileOutputStream r65;
        java.lang.Exception r67, r68;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r3 = "android";

        z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        r36 = null;

     label01:
        r37 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        b3 = 0;

        if r37 == null goto label08;

        $i2 = virtualinvoke r37.<java.lang.String: int hashCode()>();

        if $i2 == -684928411 goto label03;

     label02:
        goto label04;

     label03:
        $z4 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("--code-path");

        if $z4 == 0 goto label02;

        goto label05;

     label04:
        b3 = -1;

     label05:
        if b3 == 0 goto label06;

        r58 = new java.lang.StringBuilder;

        specialinvoke r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown arg: ");

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r25 = virtualinvoke r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void write(java.lang.String)>($r25);

        return -1;

     label06:
        if z0 == 0 goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void write(java.lang.String)>("--code-path cannot be used for the boot image.");

        return -1;

     label07:
        r36 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        goto label01;

     label08:
        if z0 != 0 goto label11;

        $r16 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r39 = interfaceinvoke $r16.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r2, 0, 0);

        if r39 != null goto label09;

        r59 = new java.lang.StringBuilder;

        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package not found ");

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void write(java.lang.String)>($r21);

        return -1;

     label09:
        $r17 = r39.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r41 = virtualinvoke $r17.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        if r36 != null goto label10;

        r36 = r41;

        goto label12;

     label10:
        goto label12;

     label11:
        r41 = null;

     label12:
        r60 = new com.android.server.pm.PackageManagerShellCommand$SnapshotRuntimeProfileCallback;

        specialinvoke r60.<com.android.server.pm.PackageManagerShellCommand$SnapshotRuntimeProfileCallback: void <init>(com.android.server.pm.PackageManagerShellCommand$1)>(null);

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i4 != 0 goto label13;

        r44 = "root";

        goto label14;

     label13:
        r44 = "com.android.shell";

     label14:
        if z0 == 0 goto label15;

        b5 = 1;

        goto label16;

     label15:
        b5 = 0;

     label16:
        $r4 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r5 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.dex.IArtManager getArtManager()>();

        $z1 = interfaceinvoke $r5.<android.content.pm.dex.IArtManager: boolean isRuntimeProfilingEnabled(int,java.lang.String)>(b5, r44);

        if $z1 != 0 goto label17;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: Runtime profiling is not enabled");

        return -1;

     label17:
        $r6 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r7 = interfaceinvoke $r6.<android.content.pm.IPackageManager: android.content.pm.dex.IArtManager getArtManager()>();

        interfaceinvoke $r7.<android.content.pm.dex.IArtManager: void snapshotRuntimeProfile(int,java.lang.String,java.lang.String,android.content.pm.dex.ISnapshotRuntimeProfileCallback,java.lang.String)>(b5, r2, r36, r60, r44);

        $z2 = virtualinvoke r60.<com.android.server.pm.PackageManagerShellCommand$SnapshotRuntimeProfileCallback: boolean waitTillDone()>();

        if $z2 != 0 goto label18;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: callback not called");

        $i1 = staticinvoke <com.android.server.pm.PackageManagerShellCommand$SnapshotRuntimeProfileCallback: int access$300(com.android.server.pm.PackageManagerShellCommand$SnapshotRuntimeProfileCallback)>(r60);

        return $i1;

     label18:
        r61 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

        $r8 = staticinvoke <com.android.server.pm.PackageManagerShellCommand$SnapshotRuntimeProfileCallback: android.os.ParcelFileDescriptor access$400(com.android.server.pm.PackageManagerShellCommand$SnapshotRuntimeProfileCallback)>(r60);

        specialinvoke r61.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>($r8);

     label19:
        if z0 != 0 goto label24;

     label20:
        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r41, r36);

        if $z3 == 0 goto label22;

     label21:
        goto label24;

     label22:
        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        r63 = new java.io.File;

        specialinvoke r63.<java.io.File: void <init>(java.lang.String)>(r36);

        $r14 = virtualinvoke r63.<java.io.File: java.lang.String getName()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r48 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

     label23:
        goto label25;

     label24:
        r48 = "";

     label25:
        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data/misc/profman/");

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".prof");

        r50 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.String toString()>();

        r65 = new java.io.FileOutputStream;

        specialinvoke r65.<java.io.FileOutputStream: void <init>(java.lang.String)>(r50);

     label26:
        staticinvoke <libcore.io.Streams: int copy(java.io.InputStream,java.io.OutputStream)>(r61, r65);

     label27:
        virtualinvoke r65.<java.io.OutputStream: void close()>();

        staticinvoke <android.system.Os: void chmod(java.lang.String,int)>(r50, 420);

     label28:
        virtualinvoke r61.<java.io.InputStream: void close()>();

     label29:
        return 0;

     label30:
        $r35 := @caughtexception;

     label31:
        virtualinvoke r65.<java.io.OutputStream: void close()>();

     label32:
        goto label35;

     label33:
        $r34 := @caughtexception;

     label34:
        virtualinvoke $r35.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r34);

     label35:
        throw $r35;

     label36:
        $r32 := @caughtexception;

     label37:
        virtualinvoke r61.<java.io.InputStream: void close()>();

     label38:
        goto label41;

     label39:
        $r33 := @caughtexception;

     label40:
        virtualinvoke $r32.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r33);

     label41:
        throw $r32;

     label42:
        $r26 := @caughtexception;

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error when reading the profile fd: ");

        r67 = (java.lang.Exception) $r26;

        $r29 = virtualinvoke r67.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        r68 = (java.lang.Exception) $r26;

        virtualinvoke r68.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>(r1);

        return -1;

        catch java.io.IOException from label18 to label19 with label42;
        catch android.system.ErrnoException from label18 to label19 with label42;
        catch java.lang.Throwable from label20 to label21 with label36;
        catch java.lang.Throwable from label22 to label23 with label36;
        catch java.lang.Throwable from label25 to label26 with label36;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.lang.Throwable from label27 to label28 with label36;
        catch java.io.IOException from label28 to label29 with label42;
        catch android.system.ErrnoException from label28 to label29 with label42;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label34 to label35 with label36;
        catch java.lang.Throwable from label35 to label36 with label36;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.io.IOException from label40 to label41 with label42;
        catch android.system.ErrnoException from label40 to label41 with label42;
        catch java.io.IOException from label41 to label42 with label42;
        catch android.system.ErrnoException from label41 to label42 with label42;
    }

    private int runStreamingInstall() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        com.android.server.pm.PackageManagerShellCommand$InstallParams r1;
        android.content.pm.PackageInstaller$SessionParams $r2, $r4;
        android.content.pm.DataLoaderParams $r3, $r5;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: com.android.server.pm.PackageManagerShellCommand$InstallParams makeInstallParams()>();

        $r2 = r1.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        $r3 = $r2.<android.content.pm.PackageInstaller$SessionParams: android.content.pm.DataLoaderParams dataLoaderParams>;

        if $r3 != null goto label1;

        $r4 = r1.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        $r5 = staticinvoke <com.android.server.pm.PackageManagerShellCommandDataLoader: android.content.pm.DataLoaderParams getStreamingDataLoaderParams(android.os.ShellCommand)>(r0);

        virtualinvoke $r4.<android.content.pm.PackageInstaller$SessionParams: void setDataLoaderParams(android.content.pm.DataLoaderParams)>($r5);

     label1:
        $i0 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int doRunInstall(com.android.server.pm.PackageManagerShellCommand$InstallParams)>(r1);

        return $i0;
    }

    private int runSuspend(boolean)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.io.PrintWriter r1;
        java.lang.String r2, $r12, $r17, $r21, $r23, r26, r27, r29, r31, r32;
        int $i0, $i1, $i2, $i3, i5, i8;
        java.lang.String[] $r5;
        android.content.pm.IPackageManager $r10, r34;
        android.content.pm.SuspendDialogInfo$Builder $r14, r40;
        java.lang.Double $r15;
        double $d0;
        java.lang.Long $r16;
        long $l4;
        java.lang.Throwable $r22;
        android.os.PersistableBundle r24, r25, r30, r37, r38;
        byte b6;
        char c7;
        android.content.pm.SuspendDialogInfo r33;
        java.lang.StringBuilder r39, r41;
        java.lang.Exception r42;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r37 = new android.os.PersistableBundle;

        specialinvoke r37.<android.os.PersistableBundle: void <init>()>();

        r24 = r37;

        r38 = new android.os.PersistableBundle;

        specialinvoke r38.<android.os.PersistableBundle: void <init>()>();

        r25 = r38;

        r26 = null;

        i5 = 0;

     label01:
        r27 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        b6 = 0;

        if r27 == null goto label25;

        $i3 = virtualinvoke r27.<java.lang.String: int hashCode()>();

        lookupswitch($i3)
        {
            case -39471105: goto label10;
            case 42995488: goto label09;
            case 42995496: goto label08;
            case 42995503: goto label07;
            case 43006059: goto label06;
            case 43006067: goto label05;
            case 43006074: goto label04;
            case 1333469547: goto label03;
            default: goto label02;
        };

     label02:
        goto label11;

     label03:
        $z3 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z3 == 0 goto label02;

        goto label12;

     label04:
        $z5 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("--les");

        if $z5 == 0 goto label02;

        b6 = 6;

        goto label12;

     label05:
        $z6 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("--lel");

        if $z6 == 0 goto label02;

        b6 = 5;

        goto label12;

     label06:
        $z7 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("--led");

        if $z7 == 0 goto label02;

        b6 = 7;

        goto label12;

     label07:
        $z8 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("--aes");

        if $z8 == 0 goto label02;

        b6 = 3;

        goto label12;

     label08:
        $z9 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("--ael");

        if $z9 == 0 goto label02;

        b6 = 2;

        goto label12;

     label09:
        $z10 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("--aed");

        if $z10 == 0 goto label02;

        b6 = 4;

        goto label12;

     label10:
        $z11 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("--dialogMessage");

        if $z11 == 0 goto label02;

        b6 = 1;

        goto label12;

     label11:
        b6 = -1;

     label12:
        tableswitch(b6)
        {
            case 0: goto label23;
            case 1: goto label22;
            case 2: goto label14;
            case 3: goto label14;
            case 4: goto label14;
            case 5: goto label14;
            case 6: goto label14;
            case 7: goto label14;
            default: goto label13;
        };

     label13:
        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r21 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        return 1;

     label14:
        r29 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        if z0 != 0 goto label15;

        goto label24;

     label15:
        $z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>("--a");

        if $z4 == 0 goto label16;

        r30 = r37;

        goto label17;

     label16:
        r30 = r38;

     label17:
        c7 = virtualinvoke r27.<java.lang.String: char charAt(int)>(4);

        if c7 == 100 goto label20;

        if c7 == 108 goto label19;

        if c7 == 115 goto label18;

        goto label21;

     label18:
        virtualinvoke r30.<android.os.PersistableBundle: void putString(java.lang.String,java.lang.String)>(r29, r2);

        goto label21;

     label19:
        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r2);

        $l4 = virtualinvoke $r16.<java.lang.Long: long longValue()>();

        virtualinvoke r30.<android.os.PersistableBundle: void putLong(java.lang.String,long)>(r29, $l4);

        goto label21;

     label20:
        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r2);

        $d0 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        virtualinvoke r30.<android.os.PersistableBundle: void putDouble(java.lang.String,double)>(r29, $d0);

     label21:
        goto label24;

     label22:
        r26 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        goto label24;

     label23:
        $r17 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i5 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r17);

     label24:
        goto label01;

     label25:
        r31 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r31 != null goto label26;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: package name not specified");

        return 1;

     label26:
        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 != 0 goto label27;

        r32 = "root";

        goto label28;

     label27:
        r32 = "com.android.shell";

     label28:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r26);

        if $z1 != 0 goto label29;

        r40 = new android.content.pm.SuspendDialogInfo$Builder;

        specialinvoke r40.<android.content.pm.SuspendDialogInfo$Builder: void <init>()>();

        $r14 = virtualinvoke r40.<android.content.pm.SuspendDialogInfo$Builder: android.content.pm.SuspendDialogInfo$Builder setMessage(java.lang.String)>(r26);

        r33 = virtualinvoke $r14.<android.content.pm.SuspendDialogInfo$Builder: android.content.pm.SuspendDialogInfo build()>();

        goto label30;

     label29:
        r33 = null;

     label30:
        i8 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i5, -10000, "runSuspend");

        r34 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $i1 = virtualinvoke r37.<android.os.PersistableBundle: int size()>();

        if $i1 <= 0 goto label32;

     label31:
        goto label33;

     label32:
        r24 = null;

     label33:
        $i2 = virtualinvoke r38.<android.os.PersistableBundle: int size()>();

        if $i2 <= 0 goto label35;

     label34:
        goto label36;

     label35:
        r25 = null;

     label36:
        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r31;

        interfaceinvoke r34.<android.content.pm.IPackageManager: java.lang.String[] setPackagesSuspendedAsUser(java.lang.String[],boolean,android.os.PersistableBundle,android.os.PersistableBundle,android.content.pm.SuspendDialogInfo,java.lang.String,int)>($r5, z0, r24, r25, r33, r32, i8);

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new suspended state: ");

        $r10 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $z2 = interfaceinvoke $r10.<android.content.pm.IPackageManager: boolean isPackageSuspendedForUser(java.lang.String,int)>(r31, i8);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r12 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

     label37:
        return 0;

     label38:
        $r22 := @caughtexception;

        r42 = (java.lang.Exception) $r22;

        $r23 = virtualinvoke r42.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        return 1;

        catch android.os.RemoteException from label30 to label31 with label38;
        catch java.lang.IllegalArgumentException from label30 to label31 with label38;
        catch android.os.RemoteException from label33 to label34 with label38;
        catch java.lang.IllegalArgumentException from label33 to label34 with label38;
        catch android.os.RemoteException from label36 to label37 with label38;
        catch java.lang.IllegalArgumentException from label36 to label37 with label38;
    }

    private int runTrimCaches() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0, $i3, $i6;
        char c1;
        long l2, $l4, l5;
        boolean z0, $z1;
        java.io.PrintWriter r1, $r8, r17;
        com.android.server.pm.PackageManagerShellCommand$ClearDataObserver $r2;
        android.content.pm.IPackageManager $r3;
        java.lang.StringBuilder $r4, $r10;
        java.lang.String $r7, $r13, r16, r19, $r20;
        java.lang.Throwable $r9, $r14, $r15;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r16 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r16 != null goto label01;

        $r8 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r8.<java.io.PrintWriter: void println(java.lang.String)>("Error: no size specified");

        return 1;

     label01:
        i0 = virtualinvoke r16.<java.lang.String: int length()>();

        $i3 = i0 - 1;

        c1 = virtualinvoke r16.<java.lang.String: char charAt(int)>($i3);

        if c1 < 48 goto label03;

        if c1 <= 57 goto label02;

        goto label03;

     label02:
        l5 = 1L;

        goto label11;

     label03:
        if c1 == 75 goto label09;

        if c1 != 107 goto label04;

        goto label09;

     label04:
        if c1 == 77 goto label08;

        if c1 != 109 goto label05;

        goto label08;

     label05:
        if c1 == 71 goto label07;

        if c1 != 103 goto label06;

        goto label07;

     label06:
        r17 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid suffix: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r17.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return 1;

     label07:
        l5 = 1073741824L;

        goto label10;

     label08:
        l5 = 1048576L;

        goto label10;

     label09:
        l5 = 1024L;

     label10:
        $i6 = i0 - 1;

        r16 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

     label11:
        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r16);

     label12:
        r19 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r20 = "internal";

        $z1 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r19);

        if $z1 == 0 goto label13;

        r19 = null;

        goto label13;

     label13:
        $r2 = new com.android.server.pm.PackageManagerShellCommand$ClearDataObserver;

        specialinvoke $r2.<com.android.server.pm.PackageManagerShellCommand$ClearDataObserver: void <init>()>();

        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $l4 = l2 * l5;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void freeStorageAndNotify(java.lang.String,long,int,android.content.pm.IPackageDataObserver)>(r19, $l4, 2, $r2);

        entermonitor $r2;

     label14:
        z0 = $r2.<com.android.server.pm.PackageManagerShellCommand$ClearDataObserver: boolean finished>;

     label15:
        if z0 != 0 goto label19;

     label16:
        virtualinvoke $r2.<java.lang.Object: void wait()>();

     label17:
        goto label14;

     label18:
        $r14 := @caughtexception;

        goto label17;

     label19:
        exitmonitor $r2;

     label20:
        return 0;

     label21:
        $r15 := @caughtexception;

     label22:
        exitmonitor $r2;

     label23:
        throw $r15;

     label24:
        $r9 := @caughtexception;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: expected number at: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        return 1;

        catch java.lang.NumberFormatException from label11 to label12 with label24;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.InterruptedException from label16 to label17 with label18;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    private int runUninstall() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver $r2;
        java.lang.Object $r3;
        byte $b0, b4, b7, b9, b12;
        java.lang.StringBuilder $r4, $r11, $r19;
        java.lang.String $r6, $r9, $r15, $r17, $r18, $r22, r23, r25;
        android.content.pm.ApplicationInfo $r10;
        int $i1, $i2, $i3, i5, i8, i10, $i13;
        android.content.IntentSender $r16, $r35;
        long l6;
        java.util.ArrayList r26;
        android.content.pm.PackageManagerInternal r28;
        android.content.pm.IPackageManager r29, $r32;
        android.content.pm.PackageInfo r30;
        android.content.pm.IPackageInstaller $r33;
        android.content.pm.VersionedPackage $r34;
        android.content.Intent r36;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        b4 = 0;

        i5 = -1;

        l6 = -1L;

     label01:
        r23 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        b7 = -1;

        if r23 == null goto label11;

        i8 = virtualinvoke r23.<java.lang.String: int hashCode()>();

        if i8 == 1502 goto label05;

        if i8 == 1333469547 goto label04;

        if i8 == 1884113221 goto label03;

     label02:
        goto label06;

     label03:
        $z4 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("--versionCode");

        if $z4 == 0 goto label02;

        b7 = 2;

        goto label06;

     label04:
        $z3 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z3 == 0 goto label02;

        b7 = 1;

        goto label06;

     label05:
        $z2 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("-k");

        if $z2 == 0 goto label02;

        b7 = 0;

     label06:
        if b7 == 0 goto label09;

        if b7 == 1 goto label08;

        if b7 == 2 goto label07;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        return 1;

     label07:
        $r18 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r18);

        goto label10;

     label08:
        $r17 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i5 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r17);

        goto label10;

     label09:
        b4 = b4 | 1;

     label10:
        goto label01;

     label11:
        r25 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r25 != null goto label12;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: package name not specified");

        return 1;

     label12:
        r26 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.util.ArrayList getRemainingArgs()>();

        $z0 = virtualinvoke r26.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label13;

        $i3 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runRemoveSplits(java.lang.String,java.util.Collection)>(r25, r26);

        return $i3;

     label13:
        b9 = b4;

        if i5 != -1 goto label14;

        b9 = b4 | 2;

     label14:
        i10 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i5, 0, "runUninstall");

        $r2 = new com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver;

        specialinvoke $r2.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: void <init>(com.android.server.pm.PackageManagerShellCommand$1)>(null);

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        r28 = (android.content.pm.PackageManagerInternal) $r3;

        $z1 = virtualinvoke r28.<android.content.pm.PackageManagerInternal: boolean isApexPackage(java.lang.String)>(r25);

        if $z1 == 0 goto label15;

        $r16 = virtualinvoke $r2.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: android.content.IntentSender getIntentSender()>();

        virtualinvoke r28.<android.content.pm.PackageManagerInternal: void uninstallApex(java.lang.String,long,int,android.content.IntentSender,int)>(r25, l6, i10, $r16, b9);

        goto label21;

     label15:
        $b0 = b9 & 2;

        if $b0 != 0 goto label19;

        r29 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r30 = interfaceinvoke r29.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r25, 67108864, i10);

        if r30 != null goto label16;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [not installed for ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        return 1;

     label16:
        $r10 = r30.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r10.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label17;

        z5 = 1;

        goto label18;

     label17:
        z5 = 0;

     label18:
        b12 = b9;

        if z5 == 0 goto label20;

        b12 = b9 | 4;

        goto label20;

     label19:
        b12 = b9;

     label20:
        $r32 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r33 = interfaceinvoke $r32.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        $r34 = new android.content.pm.VersionedPackage;

        specialinvoke $r34.<android.content.pm.VersionedPackage: void <init>(java.lang.String,long)>(r25, l6);

        $r35 = virtualinvoke $r2.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: android.content.IntentSender getIntentSender()>();

        interfaceinvoke $r33.<android.content.pm.IPackageInstaller: void uninstall(android.content.pm.VersionedPackage,java.lang.String,int,android.content.IntentSender,int)>($r34, null, b12, $r35, i10);

     label21:
        r36 = virtualinvoke $r2.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: android.content.Intent getResult()>();

        $i13 = virtualinvoke r36.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.content.pm.extra.STATUS", 1);

        if $i13 != 0 goto label22;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success");

        return 0;

     label22:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

        $r6 = virtualinvoke r36.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android.content.pm.extra.STATUS_MESSAGE");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        return 1;
    }

    private int runreconcileSecondaryDexFiles() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String r1;
        android.content.pm.IPackageManager $r2;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        interfaceinvoke $r2.<android.content.pm.IPackageManager: void reconcileSecondaryDexFiles(java.lang.String)>(r1);

        return 0;
    }

    private void setParamsSize(com.android.server.pm.PackageManagerShellCommand$InstallParams, java.util.List)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.util.Iterator r1;
        android.content.pm.PackageParser$PackageLite r2;
        long l0, $l1, l3;
        android.content.pm.PackageInstaller$SessionParams $r3, $r6, $r28;
        byte $b2;
        java.lang.String $r4, $r11, $r16, $r22, $r24, $r29, $r34, $r37, r44;
        java.lang.Object $r5, $r7, $r26;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r8, $r12, r49, r53, r55;
        java.lang.IllegalArgumentException $r15, r48, r54;
        android.content.pm.parsing.result.ParseInput $r17;
        java.io.FileDescriptor $r18, $r30;
        java.lang.Exception $r25;
        android.content.pm.PackageParser$ApkLite $r27;
        java.lang.Throwable $r31, $r38, $r39, $r40;
        com.android.server.pm.PackageManagerShellCommand$InstallParams r41;
        java.util.List r42;
        android.content.pm.parsing.result.ParseTypeImpl r43;
        android.os.ParcelFileDescriptor r45;
        android.content.pm.parsing.result.ParseResult r46;
        java.io.PrintWriter r52, r57;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r41 := @parameter0: com.android.server.pm.PackageManagerShellCommand$InstallParams;

        r42 := @parameter1: java.util.List;

        $r3 = r41.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        $l1 = $r3.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes>;

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label19;

        $r4 = "-";

        $r5 = interfaceinvoke r42.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label01;

        goto label19;

     label01:
        l3 = 0L;

        r43 = staticinvoke <android.content.pm.parsing.result.ParseTypeImpl: android.content.pm.parsing.result.ParseTypeImpl forDefaultParsing()>();

        r1 = interfaceinvoke r42.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r44 = (java.lang.String) $r7;

        r45 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: android.os.ParcelFileDescriptor openFileForSystem(java.lang.String,java.lang.String)>(r44, "r");

        if r45 == null goto label17;

     label03:
        $r17 = virtualinvoke r43.<android.content.pm.parsing.result.ParseTypeImpl: android.content.pm.parsing.result.ParseInput reset()>();

        $r18 = virtualinvoke r45.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        r46 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.parsing.result.ParseResult parseApkLite(android.content.pm.parsing.result.ParseInput,java.io.FileDescriptor,java.lang.String,int)>($r17, $r18, r44, 0);

        $z2 = interfaceinvoke r46.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z2 != 0 goto label09;

        r2 = new android.content.pm.PackageParser$PackageLite;

        $r26 = interfaceinvoke r46.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r27 = (android.content.pm.PackageParser$ApkLite) $r26;

        specialinvoke r2.<android.content.pm.PackageParser$PackageLite: void <init>(java.lang.String,android.content.pm.PackageParser$ApkLite,java.lang.String[],boolean[],java.lang.String[],java.lang.String[],java.lang.String[],int[])>(null, $r27, null, null, null, null, null, null);

        $r28 = r41.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        $r29 = $r28.<android.content.pm.PackageInstaller$SessionParams: java.lang.String abiOverride>;

        $r30 = virtualinvoke r45.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        l0 = staticinvoke <com.android.internal.content.PackageHelper: long calculateInstalledSize(android.content.pm.PackageParser$PackageLite,java.lang.String,java.io.FileDescriptor)>(r2, $r29, $r30);

     label04:
        l3 = l3 + l0;

     label05:
        virtualinvoke r45.<android.os.ParcelFileDescriptor: void close()>();

     label06:
        goto label08;

     label07:
        $r39 := @caughtexception;

     label08:
        goto label02;

     label09:
        r48 = new java.lang.IllegalArgumentException;

        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Failed to parse APK file: ");

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r22 = interfaceinvoke r46.<android.content.pm.parsing.result.ParseResult: java.lang.String getErrorMessage()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = interfaceinvoke r46.<android.content.pm.parsing.result.ParseResult: java.lang.Exception getException()>();

        specialinvoke r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r25);

        throw r48;

     label10:
        $r40 := @caughtexception;

        goto label13;

     label11:
        $r31 := @caughtexception;

     label12:
        r52 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Failed to parse APK file: ");

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        $r34 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r52.<java.io.PrintWriter: void println(java.lang.String)>($r34);

        r54 = new java.lang.IllegalArgumentException;

        r55 = new java.lang.StringBuilder;

        specialinvoke r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Failed to parse APK file: ");

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        $r37 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r54.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r37, $r31);

        throw r54;

     label13:
        virtualinvoke r45.<android.os.ParcelFileDescriptor: void close()>();

     label14:
        goto label16;

     label15:
        $r38 := @caughtexception;

     label16:
        throw $r40;

     label17:
        r57 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Can\'t open file: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r57.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Can\'t open file: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label18:
        $r6 = r41.<com.android.server.pm.PackageManagerShellCommand$InstallParams: android.content.pm.PackageInstaller$SessionParams sessionParams>;

        virtualinvoke $r6.<android.content.pm.PackageInstaller$SessionParams: void setSize(long)>(l3);

        return;

     label19:
        return;

        catch java.io.IOException from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label12 to label13 with label10;
        catch java.io.IOException from label13 to label14 with label15;
    }

    private boolean setSessionFlag(java.lang.String, com.android.server.pm.PackageManagerShellCommand$SessionDump)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String r1;
        com.android.server.pm.PackageManagerShellCommand$SessionDump r2;
        boolean $z0, $z1, $z2;
        int i0;
        byte b1;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.pm.PackageManagerShellCommand$SessionDump;

        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i0 == -2056597429 goto label04;

        if i0 == -1847964944 goto label03;

        if i0 == 1321081314 goto label02;

     label01:
        goto label05;

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--only-ready");

        if $z2 == 0 goto label01;

        b1 = 1;

        goto label06;

     label03:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--only-sessionid");

        if $z1 == 0 goto label01;

        b1 = 2;

        goto label06;

     label04:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--only-parent");

        if $z0 == 0 goto label01;

        b1 = 0;

        goto label06;

     label05:
        b1 = -1;

     label06:
        if b1 == 0 goto label09;

        if b1 == 1 goto label08;

        if b1 == 2 goto label07;

        return 0;

     label07:
        r2.<com.android.server.pm.PackageManagerShellCommand$SessionDump: boolean onlySessionId> = 1;

        goto label10;

     label08:
        r2.<com.android.server.pm.PackageManagerShellCommand$SessionDump: boolean onlyReady> = 1;

        goto label10;

     label09:
        r2.<com.android.server.pm.PackageManagerShellCommand$SessionDump: boolean onlyParent> = 1;

     label10:
        return 1;
    }

    private int translateUserId(int, int, java.lang.String)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0, $i1, $i2, i3, i4;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        if i0 == -10000 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i4 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i1, $i2, i3, z0, 1, r1, "pm command");

        if i4 != -1 goto label3;

        i4 = i0;

        goto label3;

     label3:
        return i4;
    }

    private int uninstallSystemUpdates(java.lang.String)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        android.content.pm.IPackageInstaller r2;
        android.content.pm.IPackageManager $r4, $r5, $r20;
        android.content.pm.ApplicationInfo $r6, r37;
        java.lang.Object $r7, r34;
        boolean $z1, z2, $z3, z4;
        java.lang.String $r9, $r12, $r13, $r17, $r19, $r26, $r29, $r32, r33;
        int $i0, $i1;
        android.content.IntentSender $r14;
        android.content.Intent $r15;
        android.content.pm.ParceledListSlice $r21;
        android.os.RemoteException $r22;
        java.lang.Class $r25;
        java.util.Iterator r36;
        java.util.ArrayList r43;
        java.lang.StringBuilder r44, r47, r48;
        com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver r45;
        android.content.pm.VersionedPackage r46;
        java.util.List r49;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r33 := @parameter0: java.lang.String;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        z2 = 0;

     label01:
        $r4 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        r2 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

     label02:
        if r33 != null goto label05;

     label03:
        $r20 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r21 = interfaceinvoke $r20.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledApplications(int,int)>(1048576, 0);

        r34 = virtualinvoke $r21.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label04:
        goto label07;

     label05:
        r43 = new java.util.ArrayList;

        specialinvoke r43.<java.util.ArrayList: void <init>(int)>(1);

        $r5 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r6 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r33, 1048576, 0);

        interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>($r6);

     label06:
        r34 = r43;

     label07:
        r49 = (java.util.List) r34;

        r36 = interfaceinvoke r49.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z3 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label16;

        $r7 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (android.content.pm.ApplicationInfo) $r7;

     label09:
        z4 = z2;

     label10:
        $z1 = virtualinvoke r37.<android.content.pm.ApplicationInfo: boolean isUpdatedSystemApp()>();

        if $z1 == 0 goto label15;

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uninstalling updates to ");

        $r9 = r37.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $r12 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        r45 = new com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver;

        specialinvoke r45.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: void <init>(com.android.server.pm.PackageManagerShellCommand$1)>(null);

        r46 = new android.content.pm.VersionedPackage;

        $r13 = r37.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i0 = r37.<android.content.pm.ApplicationInfo: int versionCode>;

        specialinvoke r46.<android.content.pm.VersionedPackage: void <init>(java.lang.String,int)>($r13, $i0);

        $r14 = virtualinvoke r45.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: android.content.IntentSender getIntentSender()>();

        interfaceinvoke r2.<android.content.pm.IPackageInstaller: void uninstall(android.content.pm.VersionedPackage,java.lang.String,int,android.content.IntentSender,int)>(r46, null, 0, $r14, 0);

     label11:
        z4 = z2;

     label12:
        $r15 = virtualinvoke r45.<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: android.content.Intent getResult()>();

        $i1 = virtualinvoke $r15.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.content.pm.extra.STATUS", 1);

        if $i1 == 0 goto label15;

     label13:
        z4 = 1;

     label14:
        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t uninstall package: ");

        $r17 = r37.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r19);

     label15:
        z2 = z4;

        goto label08;

     label16:
        if z2 == 0 goto label17;

        return 0;

     label17:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success");

        return 1;

     label18:
        $r22 := @caughtexception;

        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

        $r25 = virtualinvoke $r22.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r29 = virtualinvoke $r22.<android.os.RemoteException: java.lang.String getMessage()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r32 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        return 0;

        catch android.os.RemoteException from label01 to label02 with label18;
        catch android.os.RemoteException from label03 to label04 with label18;
        catch android.os.RemoteException from label05 to label06 with label18;
        catch android.os.RemoteException from label07 to label08 with label18;
        catch android.os.RemoteException from label08 to label09 with label18;
        catch android.os.RemoteException from label10 to label11 with label18;
        catch android.os.RemoteException from label12 to label13 with label18;
        catch android.os.RemoteException from label14 to label15 with label18;
    }

    public void lambda$runGetOemPermissions$0$PackageManagerShellCommand(java.lang.String, java.lang.Boolean)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String r1, $r9;
        java.lang.Boolean r2;
        java.io.PrintWriter r3;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Boolean;

        r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" granted:");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        return;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, i71;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59, $z60, $z61, $z62, $z63, $z64, $z65, $z66, $z67, $z68;
        java.lang.String $r2, $r3, $r8, r9, r10;
        android.os.RemoteException $r4;
        java.lang.StringBuilder $r5;
        byte b70;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r9 := @parameter0: java.lang.String;

        if r9 != null goto label001;

        $i69 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int handleDefaultCommands(java.lang.String)>(r9);

        return $i69;

     label001:
        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label002:
        $i0 = virtualinvoke r9.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2102802879: goto label134;
            case -1967190973: goto label132;
            case -1937348290: goto label130;
            case -1852006340: goto label128;
            case -1846646502: goto label126;
            case -1741208611: goto label124;
            case -1347307837: goto label122;
            case -1298848381: goto label120;
            case -1267782244: goto label118;
            case -1231004208: goto label116;
            case -1102348235: goto label114;
            case -1091400553: goto label112;
            case -1070704814: goto label110;
            case -1032029296: goto label108;
            case -934343034: goto label106;
            case -919935069: goto label104;
            case -840566949: goto label102;
            case -740352344: goto label100;
            case -703497631: goto label098;
            case -625596190: goto label096;
            case -623224643: goto label094;
            case -539710980: goto label092;
            case -458695741: goto label090;
            case -444750796: goto label088;
            case -440994401: goto label086;
            case -416698598: goto label084;
            case -339687564: goto label082;
            case -220055275: goto label080;
            case -140205181: goto label078;
            case -132384343: goto label076;
            case -129863314: goto label074;
            case -115000827: goto label072;
            case -87258188: goto label070;
            case 3095028: goto label068;
            case 3202370: goto label066;
            case 3322014: goto label064;
            case 3433509: goto label062;
            case 18936394: goto label060;
            case 86600360: goto label058;
            case 93657776: goto label056;
            case 94746189: goto label054;
            case 98615580: goto label052;
            case 107262333: goto label050;
            case 139892533: goto label048;
            case 237392952: goto label046;
            case 287820022: goto label044;
            case 359572742: goto label042;
            case 377019320: goto label040;
            case 467549856: goto label038;
            case 798023112: goto label036;
            case 826473335: goto label034;
            case 925176533: goto label032;
            case 925767985: goto label030;
            case 950491699: goto label028;
            case 1053409810: goto label026;
            case 1124603675: goto label024;
            case 1177857340: goto label022;
            case 1429366290: goto label020;
            case 1538306349: goto label018;
            case 1671308008: goto label016;
            case 1697997009: goto label014;
            case 1746695602: goto label012;
            case 1783979817: goto label010;
            case 1824799035: goto label008;
            case 1858863089: goto label006;
            case 1957569947: goto label004;
            default: goto label003;
        };

     label003:
        goto label136;

     label004:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("install");

        if $z0 == 0 goto label003;

     label005:
        b70 = 7;

        goto label137;

     label006:
        $z4 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("get-moduleinfo");

        if $z4 == 0 goto label003;

     label007:
        b70 = 63;

        goto label137;

     label008:
        $z5 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("log-visibility");

        if $z5 == 0 goto label003;

     label009:
        b70 = 64;

        goto label137;

     label010:
        $z6 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("reconcile-secondary-dex-files");

        if $z6 == 0 goto label003;

     label011:
        b70 = 23;

        goto label137;

     label012:
        $z7 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("set-install-location");

        if $z7 == 0 goto label003;

     label013:
        b70 = 17;

        goto label137;

     label014:
        $z8 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("disable-until-used");

        if $z8 == 0 goto label003;

     label015:
        b70 = 33;

        goto label137;

     label016:
        $z9 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("disable");

        if $z9 == 0 goto label003;

     label017:
        b70 = 31;

        goto label137;

     label018:
        $z10 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("install-write");

        if $z10 == 0 goto label003;

     label019:
        b70 = 15;

        goto label137;

     label020:
        $z11 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("set-home-activity");

        if $z11 == 0 goto label003;

     label021:
        b70 = 54;

        goto label137;

     label022:
        $z12 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("trim-caches");

        if $z12 == 0 goto label003;

     label023:
        b70 = 48;

        goto label137;

     label024:
        $z13 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("force-dex-opt");

        if $z13 == 0 goto label003;

     label025:
        b70 = 24;

        goto label137;

     label026:
        $z14 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("query-activities");

        if $z14 == 0 goto label003;

     label027:
        b70 = 4;

        goto label137;

     label028:
        $z15 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("compile");

        if $z15 == 0 goto label003;

     label029:
        b70 = 22;

        goto label137;

     label030:
        $z16 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("set-app-link");

        if $z16 == 0 goto label003;

     label031:
        b70 = 46;

        goto label137;

     label032:
        $z17 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("set-user-restriction");

        if $z17 == 0 goto label003;

     label033:
        b70 = 51;

        goto label137;

     label034:
        $z18 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("uninstall-system-updates");

        if $z18 == 0 goto label003;

     label035:
        b70 = 61;

        goto label137;

     label036:
        $z19 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("install-destroy");

        if $z19 == 0 goto label003;

     label037:
        b70 = 11;

        goto label137;

     label038:
        $z20 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("snapshot-profile");

        if $z20 == 0 goto label003;

     label039:
        b70 = 27;

        goto label137;

     label040:
        $z21 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("rollback-app");

        if $z21 == 0 goto label003;

     label041:
        b70 = 62;

        goto label137;

     label042:
        $z22 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("reset-permissions");

        if $z22 == 0 goto label003;

     label043:
        b70 = 41;

        goto label137;

     label044:
        $z23 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("install-remove");

        if $z23 == 0 goto label003;

     label045:
        b70 = 14;

        goto label137;

     label046:
        $z24 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("install-add-session");

        if $z24 == 0 goto label003;

     label047:
        b70 = 19;

        goto label137;

     label048:
        $z25 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("get-harmful-app-warning");

        if $z25 == 0 goto label003;

     label049:
        b70 = 59;

        goto label137;

     label050:
        $z26 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("install-existing");

        if $z26 == 0 goto label003;

     label051:
        b70 = 16;

        goto label137;

     label052:
        $z27 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("grant");

        if $z27 == 0 goto label003;

     label053:
        b70 = 39;

        goto label137;

     label054:
        $z28 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("clear");

        if $z28 == 0 goto label003;

     label055:
        b70 = 29;

        goto label137;

     label056:
        $z29 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("install-streaming");

        if $z29 == 0 goto label003;

     label057:
        b70 = 8;

        goto label137;

     label058:
        $z30 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("get-max-users");

        if $z30 == 0 goto label003;

     label059:
        b70 = 52;

        goto label137;

     label060:
        $z31 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("move-package");

        if $z31 == 0 goto label003;

     label061:
        b70 = 20;

        goto label137;

     label062:
        $z32 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("path");

        if $z32 == 0 goto label003;

     label063:
        b70 = 0;

        goto label137;

     label064:
        $z33 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z33 == 0 goto label003;

     label065:
        b70 = 2;

        goto label137;

     label066:
        $z34 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("hide");

        if $z34 == 0 goto label003;

     label067:
        b70 = 35;

        goto label137;

     label068:
        $z35 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("dump");

        if $z35 == 0 goto label003;

     label069:
        b70 = 1;

        goto label137;

     label070:
        $z36 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("move-primary-storage");

        if $z36 == 0 goto label003;

     label071:
        b70 = 21;

        goto label137;

     label072:
        $z37 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("default-state");

        if $z37 == 0 goto label003;

     label073:
        b70 = 34;

        goto label137;

     label074:
        $z38 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("install-create");

        if $z38 == 0 goto label003;

     label075:
        b70 = 13;

        goto label137;

     label076:
        $z39 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("install-commit");

        if $z39 == 0 goto label003;

     label077:
        b70 = 12;

        goto label137;

     label078:
        $z40 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("unsuspend");

        if $z40 == 0 goto label003;

     label079:
        b70 = 38;

        goto label137;

     label080:
        $z41 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("set-permission-enforced");

        if $z41 == 0 goto label003;

     label081:
        b70 = 42;

        goto label137;

     label082:
        $z42 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("remove-user");

        if $z42 == 0 goto label003;

     label083:
        b70 = 50;

        goto label137;

     label084:
        $z43 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("get-stagedsessions");

        if $z43 == 0 goto label003;

     label085:
        b70 = 60;

        goto label137;

     label086:
        $z44 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("query-receivers");

        if $z44 == 0 goto label003;

     label087:
        b70 = 6;

        goto label137;

     label088:
        $z45 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("bg-dexopt-job");

        if $z45 == 0 goto label003;

     label089:
        b70 = 25;

        goto label137;

     label090:
        $z46 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("query-services");

        if $z46 == 0 goto label003;

     label091:
        b70 = 5;

        goto label137;

     label092:
        $z47 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("create-user");

        if $z47 == 0 goto label003;

     label093:
        b70 = 49;

        goto label137;

     label094:
        $z48 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("get-app-link");

        if $z48 == 0 goto label003;

     label095:
        b70 = 47;

        goto label137;

     label096:
        $z49 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("uninstall");

        if $z49 == 0 goto label003;

     label097:
        b70 = 28;

        goto label137;

     label098:
        $z50 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("bypass-staged-installer-check");

        if $z50 == 0 goto label003;

     label099:
        b70 = 65;

        goto label137;

     label100:
        $z51 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("install-incremental");

        if $z51 == 0 goto label003;

     label101:
        b70 = 9;

        goto label137;

     label102:
        $z52 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("unhide");

        if $z52 == 0 goto label003;

     label103:
        b70 = 36;

        goto label137;

     label104:
        $z53 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("dump-profiles");

        if $z53 == 0 goto label003;

     label105:
        b70 = 26;

        goto label137;

     label106:
        $z54 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("revoke");

        if $z54 == 0 goto label003;

     label107:
        b70 = 40;

        goto label137;

     label108:
        $z55 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("disable-user");

        if $z55 == 0 goto label003;

     label109:
        b70 = 32;

        goto label137;

     label110:
        $z56 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("get-privapp-permissions");

        if $z56 == 0 goto label003;

     label111:
        b70 = 43;

        goto label137;

     label112:
        $z57 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("get-oem-permissions");

        if $z57 == 0 goto label003;

     label113:
        b70 = 45;

        goto label137;

     label114:
        $z58 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("get-privapp-deny-permissions");

        if $z58 == 0 goto label003;

     label115:
        b70 = 44;

        goto label137;

     label116:
        $z59 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("resolve-activity");

        if $z59 == 0 goto label003;

     label117:
        b70 = 3;

        goto label137;

     label118:
        $z60 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("get-instantapp-resolver");

        if $z60 == 0 goto label003;

     label119:
        b70 = 56;

        goto label137;

     label120:
        $z61 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("enable");

        if $z61 == 0 goto label003;

     label121:
        b70 = 30;

        goto label137;

     label122:
        $z62 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("has-feature");

        if $z62 == 0 goto label003;

     label123:
        b70 = 57;

        goto label137;

     label124:
        $z63 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("set-installer");

        if $z63 == 0 goto label003;

     label125:
        b70 = 55;

        goto label137;

     label126:
        $z64 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("get-max-running-users");

        if $z64 == 0 goto label003;

     label127:
        b70 = 53;

        goto label137;

     label128:
        $z65 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("suspend");

        if $z65 == 0 goto label003;

     label129:
        b70 = 37;

        goto label137;

     label130:
        $z66 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("get-install-location");

        if $z66 == 0 goto label003;

     label131:
        b70 = 18;

        goto label137;

     label132:
        $z67 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("install-abandon");

        if $z67 == 0 goto label003;

     label133:
        b70 = 10;

        goto label137;

     label134:
        $z68 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("set-harmful-app-warning");

        if $z68 == 0 goto label003;

     label135:
        b70 = 58;

        goto label137;

     label136:
        b70 = -1;

     label137:
        tableswitch(b70)
        {
            case 0: goto label204;
            case 1: goto label203;
            case 2: goto label202;
            case 3: goto label201;
            case 4: goto label200;
            case 5: goto label199;
            case 6: goto label198;
            case 7: goto label197;
            case 8: goto label196;
            case 9: goto label195;
            case 10: goto label194;
            case 11: goto label194;
            case 12: goto label193;
            case 13: goto label192;
            case 14: goto label191;
            case 15: goto label190;
            case 16: goto label189;
            case 17: goto label188;
            case 18: goto label187;
            case 19: goto label186;
            case 20: goto label185;
            case 21: goto label184;
            case 22: goto label183;
            case 23: goto label182;
            case 24: goto label181;
            case 25: goto label180;
            case 26: goto label179;
            case 27: goto label178;
            case 28: goto label177;
            case 29: goto label176;
            case 30: goto label175;
            case 31: goto label174;
            case 32: goto label173;
            case 33: goto label172;
            case 34: goto label171;
            case 35: goto label170;
            case 36: goto label169;
            case 37: goto label168;
            case 38: goto label167;
            case 39: goto label166;
            case 40: goto label165;
            case 41: goto label164;
            case 42: goto label163;
            case 43: goto label162;
            case 44: goto label161;
            case 45: goto label160;
            case 46: goto label159;
            case 47: goto label158;
            case 48: goto label157;
            case 49: goto label156;
            case 50: goto label155;
            case 51: goto label154;
            case 52: goto label153;
            case 53: goto label152;
            case 54: goto label151;
            case 55: goto label150;
            case 56: goto label149;
            case 57: goto label148;
            case 58: goto label147;
            case 59: goto label146;
            case 60: goto label145;
            case 61: goto label144;
            case 62: goto label143;
            case 63: goto label142;
            case 64: goto label141;
            case 65: goto label140;
            default: goto label138;
        };

     label138:
        r10 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

     label139:
        goto label205;

     label140:
        $i1 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runBypassStagedInstallerCheck()>();

        return $i1;

     label141:
        $i2 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runLogVisibility()>();

        return $i2;

     label142:
        $i3 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runGetModuleInfo()>();

        return $i3;

     label143:
        $i4 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runRollbackApp()>();

        return $i4;

     label144:
        $r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $i5 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int uninstallSystemUpdates(java.lang.String)>($r2);

        return $i5;

     label145:
        $i6 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runListStagedSessions()>();

        return $i6;

     label146:
        $i7 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runGetHarmfulAppWarning()>();

        return $i7;

     label147:
        $i8 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetHarmfulAppWarning()>();

        return $i8;

     label148:
        $i9 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runHasFeature()>();

        return $i9;

     label149:
        $i10 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runGetInstantAppResolver()>();

        return $i10;

     label150:
        $i11 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetInstaller()>();

        return $i11;

     label151:
        $i12 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetHomeActivity()>();

        return $i12;

     label152:
        $i13 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runGetMaxRunningUsers()>();

        return $i13;

     label153:
        $i14 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runGetMaxUsers()>();

        return $i14;

     label154:
        $i15 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetUserRestriction()>();

        return $i15;

     label155:
        $i16 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runRemoveUser()>();

        return $i16;

     label156:
        $i17 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runCreateUser()>();

        return $i17;

     label157:
        $i18 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runTrimCaches()>();

        return $i18;

     label158:
        $i19 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runGetAppLink()>();

        return $i19;

     label159:
        $i20 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetAppLink()>();

        return $i20;

     label160:
        $i21 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runGetOemPermissions()>();

        return $i21;

     label161:
        $i22 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runGetPrivappDenyPermissions()>();

        return $i22;

     label162:
        $i23 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runGetPrivappPermissions()>();

        return $i23;

     label163:
        $i24 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetPermissionEnforced()>();

        return $i24;

     label164:
        $i25 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runResetPermissions()>();

        return $i25;

     label165:
        $i26 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runGrantRevokePermission(boolean)>(0);

        return $i26;

     label166:
        $i27 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runGrantRevokePermission(boolean)>(1);

        return $i27;

     label167:
        $i28 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSuspend(boolean)>(0);

        return $i28;

     label168:
        $i29 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSuspend(boolean)>(1);

        return $i29;

     label169:
        $i30 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetHiddenSetting(boolean)>(0);

        return $i30;

     label170:
        $i31 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetHiddenSetting(boolean)>(1);

        return $i31;

     label171:
        $i32 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetEnabledSetting(int)>(0);

        return $i32;

     label172:
        $i33 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetEnabledSetting(int)>(4);

        return $i33;

     label173:
        $i34 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetEnabledSetting(int)>(3);

        return $i34;

     label174:
        $i35 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetEnabledSetting(int)>(2);

        return $i35;

     label175:
        $i36 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetEnabledSetting(int)>(1);

        return $i36;

     label176:
        $i37 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runClear()>();

        return $i37;

     label177:
        $i38 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runUninstall()>();

        return $i38;

     label178:
        $i39 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSnapshotProfile()>();

        return $i39;

     label179:
        $i40 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runDumpProfiles()>();

        return $i40;

     label180:
        $i41 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runDexoptJob()>();

        return $i41;

     label181:
        $i42 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runForceDexOpt()>();

        return $i42;

     label182:
        $i43 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runreconcileSecondaryDexFiles()>();

        return $i43;

     label183:
        $i44 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runCompile()>();

        return $i44;

     label184:
        $i45 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runMovePrimaryStorage()>();

        return $i45;

     label185:
        $i46 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runMovePackage()>();

        return $i46;

     label186:
        $i47 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runInstallAddSession()>();

        return $i47;

     label187:
        $i48 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runGetInstallLocation()>();

        return $i48;

     label188:
        $i49 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runSetInstallLocation()>();

        return $i49;

     label189:
        $i50 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runInstallExisting()>();

        return $i50;

     label190:
        $i51 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runInstallWrite()>();

        return $i51;

     label191:
        $i52 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runInstallRemove()>();

        return $i52;

     label192:
        $i53 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runInstallCreate()>();

        return $i53;

     label193:
        $i54 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runInstallCommit()>();

        return $i54;

     label194:
        $i55 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runInstallAbandon()>();

        return $i55;

     label195:
        $i56 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runIncrementalInstall()>();

        return $i56;

     label196:
        $i57 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runStreamingInstall()>();

        return $i57;

     label197:
        $i58 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runInstall()>();

        return $i58;

     label198:
        $i59 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runQueryIntentReceivers()>();

        return $i59;

     label199:
        $i60 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runQueryIntentServices()>();

        return $i60;

     label200:
        $i61 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runQueryIntentActivities()>();

        return $i61;

     label201:
        $i62 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runResolveActivity()>();

        return $i62;

     label202:
        $i63 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runList()>();

        return $i63;

     label203:
        $i64 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runDump()>();

        return $i64;

     label204:
        $i65 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runPath()>();

        return $i65;

     label205:
        if r10 != null goto label208;

     label206:
        $z2 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-l");

        if $z2 == 0 goto label207;

        $i68 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runListPackages(boolean)>(0);

        return $i68;

     label207:
        $z3 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-lf");

        if $z3 == 0 goto label209;

        $i67 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int runListPackages(boolean)>(1);

        return $i67;

     label208:
        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if $r3 != null goto label209;

        $z1 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-p");

        if $z1 == 0 goto label209;

        $i66 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int displayPackageFilePath(java.lang.String,int)>(r10, 0);

        return $i66;

     label209:
        i71 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int handleDefaultCommands(java.lang.String)>(r9);

     label210:
        return i71;

     label211:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote exception: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return -1;

        catch android.os.RemoteException from label002 to label003 with label211;
        catch android.os.RemoteException from label004 to label005 with label211;
        catch android.os.RemoteException from label006 to label007 with label211;
        catch android.os.RemoteException from label008 to label009 with label211;
        catch android.os.RemoteException from label010 to label011 with label211;
        catch android.os.RemoteException from label012 to label013 with label211;
        catch android.os.RemoteException from label014 to label015 with label211;
        catch android.os.RemoteException from label016 to label017 with label211;
        catch android.os.RemoteException from label018 to label019 with label211;
        catch android.os.RemoteException from label020 to label021 with label211;
        catch android.os.RemoteException from label022 to label023 with label211;
        catch android.os.RemoteException from label024 to label025 with label211;
        catch android.os.RemoteException from label026 to label027 with label211;
        catch android.os.RemoteException from label028 to label029 with label211;
        catch android.os.RemoteException from label030 to label031 with label211;
        catch android.os.RemoteException from label032 to label033 with label211;
        catch android.os.RemoteException from label034 to label035 with label211;
        catch android.os.RemoteException from label036 to label037 with label211;
        catch android.os.RemoteException from label038 to label039 with label211;
        catch android.os.RemoteException from label040 to label041 with label211;
        catch android.os.RemoteException from label042 to label043 with label211;
        catch android.os.RemoteException from label044 to label045 with label211;
        catch android.os.RemoteException from label046 to label047 with label211;
        catch android.os.RemoteException from label048 to label049 with label211;
        catch android.os.RemoteException from label050 to label051 with label211;
        catch android.os.RemoteException from label052 to label053 with label211;
        catch android.os.RemoteException from label054 to label055 with label211;
        catch android.os.RemoteException from label056 to label057 with label211;
        catch android.os.RemoteException from label058 to label059 with label211;
        catch android.os.RemoteException from label060 to label061 with label211;
        catch android.os.RemoteException from label062 to label063 with label211;
        catch android.os.RemoteException from label064 to label065 with label211;
        catch android.os.RemoteException from label066 to label067 with label211;
        catch android.os.RemoteException from label068 to label069 with label211;
        catch android.os.RemoteException from label070 to label071 with label211;
        catch android.os.RemoteException from label072 to label073 with label211;
        catch android.os.RemoteException from label074 to label075 with label211;
        catch android.os.RemoteException from label076 to label077 with label211;
        catch android.os.RemoteException from label078 to label079 with label211;
        catch android.os.RemoteException from label080 to label081 with label211;
        catch android.os.RemoteException from label082 to label083 with label211;
        catch android.os.RemoteException from label084 to label085 with label211;
        catch android.os.RemoteException from label086 to label087 with label211;
        catch android.os.RemoteException from label088 to label089 with label211;
        catch android.os.RemoteException from label090 to label091 with label211;
        catch android.os.RemoteException from label092 to label093 with label211;
        catch android.os.RemoteException from label094 to label095 with label211;
        catch android.os.RemoteException from label096 to label097 with label211;
        catch android.os.RemoteException from label098 to label099 with label211;
        catch android.os.RemoteException from label100 to label101 with label211;
        catch android.os.RemoteException from label102 to label103 with label211;
        catch android.os.RemoteException from label104 to label105 with label211;
        catch android.os.RemoteException from label106 to label107 with label211;
        catch android.os.RemoteException from label108 to label109 with label211;
        catch android.os.RemoteException from label110 to label111 with label211;
        catch android.os.RemoteException from label112 to label113 with label211;
        catch android.os.RemoteException from label114 to label115 with label211;
        catch android.os.RemoteException from label116 to label117 with label211;
        catch android.os.RemoteException from label118 to label119 with label211;
        catch android.os.RemoteException from label120 to label121 with label211;
        catch android.os.RemoteException from label122 to label123 with label211;
        catch android.os.RemoteException from label124 to label125 with label211;
        catch android.os.RemoteException from label126 to label127 with label211;
        catch android.os.RemoteException from label128 to label129 with label211;
        catch android.os.RemoteException from label130 to label131 with label211;
        catch android.os.RemoteException from label132 to label133 with label211;
        catch android.os.RemoteException from label134 to label135 with label211;
        catch android.os.RemoteException from label138 to label139 with label211;
        catch android.os.RemoteException from label140 to label141 with label211;
        catch android.os.RemoteException from label141 to label142 with label211;
        catch android.os.RemoteException from label142 to label143 with label211;
        catch android.os.RemoteException from label143 to label144 with label211;
        catch android.os.RemoteException from label144 to label145 with label211;
        catch android.os.RemoteException from label145 to label146 with label211;
        catch android.os.RemoteException from label146 to label147 with label211;
        catch android.os.RemoteException from label147 to label148 with label211;
        catch android.os.RemoteException from label148 to label149 with label211;
        catch android.os.RemoteException from label149 to label150 with label211;
        catch android.os.RemoteException from label150 to label151 with label211;
        catch android.os.RemoteException from label151 to label152 with label211;
        catch android.os.RemoteException from label152 to label153 with label211;
        catch android.os.RemoteException from label153 to label154 with label211;
        catch android.os.RemoteException from label154 to label155 with label211;
        catch android.os.RemoteException from label155 to label156 with label211;
        catch android.os.RemoteException from label156 to label157 with label211;
        catch android.os.RemoteException from label157 to label158 with label211;
        catch android.os.RemoteException from label158 to label159 with label211;
        catch android.os.RemoteException from label159 to label160 with label211;
        catch android.os.RemoteException from label160 to label161 with label211;
        catch android.os.RemoteException from label161 to label162 with label211;
        catch android.os.RemoteException from label162 to label163 with label211;
        catch android.os.RemoteException from label163 to label164 with label211;
        catch android.os.RemoteException from label164 to label165 with label211;
        catch android.os.RemoteException from label165 to label166 with label211;
        catch android.os.RemoteException from label166 to label167 with label211;
        catch android.os.RemoteException from label167 to label168 with label211;
        catch android.os.RemoteException from label168 to label169 with label211;
        catch android.os.RemoteException from label169 to label170 with label211;
        catch android.os.RemoteException from label170 to label171 with label211;
        catch android.os.RemoteException from label171 to label172 with label211;
        catch android.os.RemoteException from label172 to label173 with label211;
        catch android.os.RemoteException from label173 to label174 with label211;
        catch android.os.RemoteException from label174 to label175 with label211;
        catch android.os.RemoteException from label175 to label176 with label211;
        catch android.os.RemoteException from label176 to label177 with label211;
        catch android.os.RemoteException from label177 to label178 with label211;
        catch android.os.RemoteException from label178 to label179 with label211;
        catch android.os.RemoteException from label179 to label180 with label211;
        catch android.os.RemoteException from label180 to label181 with label211;
        catch android.os.RemoteException from label181 to label182 with label211;
        catch android.os.RemoteException from label182 to label183 with label211;
        catch android.os.RemoteException from label183 to label184 with label211;
        catch android.os.RemoteException from label184 to label185 with label211;
        catch android.os.RemoteException from label185 to label186 with label211;
        catch android.os.RemoteException from label186 to label187 with label211;
        catch android.os.RemoteException from label187 to label188 with label211;
        catch android.os.RemoteException from label188 to label189 with label211;
        catch android.os.RemoteException from label189 to label190 with label211;
        catch android.os.RemoteException from label190 to label191 with label211;
        catch android.os.RemoteException from label191 to label192 with label211;
        catch android.os.RemoteException from label192 to label193 with label211;
        catch android.os.RemoteException from label193 to label194 with label211;
        catch android.os.RemoteException from label194 to label195 with label211;
        catch android.os.RemoteException from label195 to label196 with label211;
        catch android.os.RemoteException from label196 to label197 with label211;
        catch android.os.RemoteException from label197 to label198 with label211;
        catch android.os.RemoteException from label198 to label199 with label211;
        catch android.os.RemoteException from label199 to label200 with label211;
        catch android.os.RemoteException from label200 to label201 with label211;
        catch android.os.RemoteException from label201 to label202 with label211;
        catch android.os.RemoteException from label202 to label203 with label211;
        catch android.os.RemoteException from label203 to label204 with label211;
        catch android.os.RemoteException from label204 to label205 with label211;
        catch android.os.RemoteException from label206 to label207 with label211;
        catch android.os.RemoteException from label207 to label208 with label211;
        catch android.os.RemoteException from label208 to label209 with label211;
        catch android.os.RemoteException from label209 to label210 with label211;
    }

    public void onHelp()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String[] $r3, $r6;
        int $i0, i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r7, $r9;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Package manager (package) commands:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  path [--user USER_ID] PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print the path to the .apk of the given PACKAGE.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  dump PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print various system state associated with the given PACKAGE.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  has-feature FEATURE_NAME [version]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints true and returns exit status 0 when system has a FEATURE_NAME,");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    otherwise prints false and returns exit status 1");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  list features");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all features of the system.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  list instrumentation [-f] [TARGET-PACKAGE]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all test packages; optionally only those targeting TARGET-PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Options:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -f: dump the name of the .apk file containing the test package");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  list libraries");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all system libraries.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  list packages [-f] [-d] [-e] [-s] [-3] [-i] [-l] [-u] [-U] ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      [--show-versioncode] [--apex-only] [--uid UID] [--user USER_ID] [FILTER]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all packages; optionally only those whose name contains");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    the text in FILTER.  Options are:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -f: see their associated file");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -a: all known packages (but excluding APEXes)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -d: filter to only show disabled packages");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -e: filter to only show enabled packages");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -s: filter to only show system packages");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -3: filter to only show third party packages");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -i: see the installer for the packages");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -l: ignored (used for compatibility with older releases)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -U: also show the package UID");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -u: also include uninstalled packages");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --show-versioncode: also show the version code");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --apex-only: only show APEX packages");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --uid UID: filter to only show packages with the given UID");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --user USER_ID: only list packages belonging to the given user");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  list permission-groups");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all known permission groups.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  list permissions [-g] [-f] [-d] [-u] [GROUP]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all known permissions; optionally only those in GROUP.  Options are:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -g: organize by group");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -f: print all information");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -s: short summary");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -d: only list dangerous permissions");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -u: list only the permissions users will see");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  list staged-sessions [--only-ready] [--only-sessionid] [--only-parent]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all staged sessions.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --only-ready: show only staged sessions that are ready");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --only-sessionid: show only sessionId of each session");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --only-parent: hide all children sessions");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  list users");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all users.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  resolve-activity [--brief] [--components] [--query-flags FLAGS]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--user USER_ID] INTENT");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints the activity that resolves to the given INTENT.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  query-activities [--brief] [--components] [--query-flags FLAGS]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--user USER_ID] INTENT");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all activities that can handle the given INTENT.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  query-services [--brief] [--components] [--query-flags FLAGS]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--user USER_ID] INTENT");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all services that can handle the given INTENT.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  query-receivers [--brief] [--components] [--query-flags FLAGS]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--user USER_ID] INTENT");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all broadcast receivers that can handle the given INTENT.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  install [-rtfdgw] [-i PACKAGE] [--user USER_ID|all|current]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [-p INHERIT_PACKAGE] [--install-location 0/1/2]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--install-reason 0/1/2/3/4] [--originating-uri URI]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--referrer URI] [--abi ABI_NAME] [--force-sdk]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--preload] [--instant] [--full] [--dont-kill]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--enable-rollback]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--force-uuid internal|UUID] [--pkg PACKAGE] [-S BYTES]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--apex] [--wait TIMEOUT]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [PATH [SPLIT...]|-]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Install an application.  Must provide the apk data to install, either as");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    file path(s) or \'-\' to read from stdin.  Options are:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -R: disallow replacement of existing application");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -t: allow test packages");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -i: specify package name of installer owning the app");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -f: install application on internal flash");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -d: allow version code downgrade (debuggable packages only)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -p: partial application install (new split on top of existing pkg)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -g: grant all runtime permissions");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -S: size in bytes of package, required for stdin");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --user: install under the given user.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --dont-kill: installing a new feature split, don\'t kill running app");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --restrict-permissions: don\'t whitelist restricted permissions at install");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --originating-uri: set URI where app was downloaded from");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --referrer: set URI that instigated the install of the app");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --pkg: specify expected package name of app being installed");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --abi: override the default ABI of the platform");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --instant: cause the app to be installed as an ephemeral install app");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --full: cause the app to be installed as a non-ephemeral full app");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --install-location: force the install location:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("          0=auto, 1=internal only, 2=prefer external");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --install-reason: indicates why the app is being installed:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("          0=unknown, 1=admin policy, 2=device restore,");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("          3=device setup, 4=user request");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --force-uuid: force install on to disk volume with given UUID");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --apex: install an .apex file, not an .apk");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --wait: when performing staged install, wait TIMEOUT milliseconds");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("          for pre-reboot verification to complete. If TIMEOUT is not");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("          specified it will wait for 60000 milliseconds.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  install-existing [--user USER_ID|all|current]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--instant] [--full] [--wait] [--restrict-permissions] PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Installs an existing application for a new user.  Options are:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --user: install for the given user.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --instant: install as an instant app");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --full: install as a full app");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --wait: wait until the package is installed");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --restrict-permissions: don\'t whitelist restricted permissions");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  install-create [-lrtsfdg] [-i PACKAGE] [--user USER_ID|all|current]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [-p INHERIT_PACKAGE] [--install-location 0/1/2]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--install-reason 0/1/2/3/4] [--originating-uri URI]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--referrer URI] [--abi ABI_NAME] [--force-sdk]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--preload] [--instant] [--full] [--dont-kill]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--force-uuid internal|UUID] [--pkg PACKAGE] [--apex] [-S BYTES]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       [--multi-package] [--staged]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Like \"install\", but starts an install session.  Use \"install-write\"");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    to push data into the session, and \"install-commit\" to finish.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  install-write [-S BYTES] SESSION_ID SPLIT_NAME [PATH|-]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Write an apk into the given install session.  If the path is \'-\', data");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    will be read from stdin.  Options are:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -S: size in bytes of package, required for stdin");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  install-remove SESSION_ID SPLIT...");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Mark SPLIT(s) as removed in the given install session.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  install-add-session MULTI_PACKAGE_SESSION_ID CHILD_SESSION_IDs");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Add one or more session IDs to a multi-package session.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  install-commit SESSION_ID");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Commit the given active install session, installing the app.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  install-abandon SESSION_ID");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Delete the given active install session.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-install-location LOCATION");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Changes the default install location.  NOTE this is only intended for debugging;");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    using this can cause applications to break and other undersireable behavior.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    LOCATION is one of:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    0 [auto]: Let system decide the best location");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    1 [internal]: Install on internal device storage");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    2 [external]: Install on external media");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  get-install-location");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Returns the current install location: 0, 1 or 2 as per set-install-location.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  move-package PACKAGE [internal|UUID]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  move-primary-storage [internal|UUID]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  uninstall [-k] [--user USER_ID] [--versionCode VERSION_CODE]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("       PACKAGE [SPLIT...]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Remove the given package name from the system.  May remove an entire app");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    if no SPLIT names specified, otherwise will remove only the splits of the");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    given app.  Options are:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -k: keep the data and cache directories around after package removal.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --user: remove the app from the given user.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --versionCode: only uninstall if the app has the given version code.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  clear [--user USER_ID] PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Deletes all data associated with a package.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  enable [--user USER_ID] PACKAGE_OR_COMPONENT");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  disable [--user USER_ID] PACKAGE_OR_COMPONENT");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  disable-user [--user USER_ID] PACKAGE_OR_COMPONENT");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  disable-until-used [--user USER_ID] PACKAGE_OR_COMPONENT");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  default-state [--user USER_ID] PACKAGE_OR_COMPONENT");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    These commands change the enabled state of a given package or");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    component (written as \"package/class\").");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  hide [--user USER_ID] PACKAGE_OR_COMPONENT");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  unhide [--user USER_ID] PACKAGE_OR_COMPONENT");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  suspend [--user USER_ID] TARGET-PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Suspends the specified package (as user).");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  unsuspend [--user USER_ID] TARGET-PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Unsuspends the specified package (as user).");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  grant [--user USER_ID] PACKAGE PERMISSION");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  revoke [--user USER_ID] PACKAGE PERMISSION");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    These commands either grant or revoke permissions to apps.  The permissions");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    must be declared as used in the app\'s manifest, be runtime permissions");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    (protection level dangerous), and the app targeting SDK greater than Lollipop MR1.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  reset-permissions");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Revert all runtime permissions to their default state.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-permission-enforced PERMISSION [true|false]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  get-privapp-permissions TARGET-PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all privileged permissions for a package.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  get-privapp-deny-permissions TARGET-PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all privileged permissions that are denied for a package.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  get-oem-permissions TARGET-PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Prints all OEM permissions for a package.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-app-link [--user USER_ID] PACKAGE {always|ask|never|undefined}");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  get-app-link [--user USER_ID] PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  trim-caches DESIRED_FREE_SPACE [internal|UUID]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Trim cache files to reach the given free space.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  list users");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Lists the current users.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  create-user [--profileOf USER_ID] [--managed] [--restricted] [--ephemeral]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      [--guest] [--pre-create-only] [--user-type USER_TYPE] USER_NAME");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Create a new user with the given USER_NAME, printing the new user identifier");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    of the user.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    USER_TYPE is the name of a user type, e.g. android.os.usertype.profile.MANAGED.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      If not specified, the default user type is android.os.usertype.full.SECONDARY.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --managed is shorthand for \'--user-type android.os.usertype.profile.MANAGED\'.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --restricted is shorthand for \'--user-type android.os.usertype.full.RESTRICTED\'.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --guest is shorthand for \'--user-type android.os.usertype.full.GUEST\'.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  remove-user USER_ID");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Remove the user with the given USER_IDENTIFIER, deleting all data");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    associated with that user");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-user-restriction [--user USER_ID] RESTRICTION VALUE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  get-max-users");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  get-max-running-users");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  compile [-m MODE | -r REASON] [-f] [-c] [--split SPLIT_NAME]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("          [--reset] [--check-prof (true | false)] (-a | TARGET-PACKAGE)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Trigger compilation of TARGET-PACKAGE or all packages if \"-a\".  Options are:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -a: compile all packages");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -c: clear profile data before compiling");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -f: force compilation even if not needed");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -m: select compilation mode");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("          MODE is one of the dex2oat compiler filters:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("            assume-verified");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("            extract");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("            verify");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("            quicken");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("            space-profile");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("            space");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("            speed-profile");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("            speed");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("            everything");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      -r: select compilation reason");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("          REASON is one of:");

        i1 = 0;

     label1:
        $r3 = <com.android.server.pm.PackageManagerServiceCompilerMapping: java.lang.String[] REASON_STRINGS>;

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("            ");

        $r6 = <com.android.server.pm.PackageManagerServiceCompilerMapping: java.lang.String[] REASON_STRINGS>;

        $r7 = $r6[i1];

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --reset: restore package to its post-install state");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --check-prof (true | false): look at profiles when doing dexopt?");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --secondary-dex: compile app secondary dex files");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --split SPLIT: compile only the given split name");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --compile-layouts: compile layout resources for faster inflation");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  force-dex-opt PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Force immediate execution of dex opt for the given PACKAGE.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  bg-dexopt-job");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Execute the background optimizations immediately.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Note that the command only runs the background optimizer logic. It may");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    overlap with the actual job but the job scheduler will not be able to");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    cancel it. It will also run even if the device is not in the idle");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    maintenance mode.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  reconcile-secondary-dex-files TARGET-PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Reconciles the package secondary dex files with the generated oat files.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  dump-profiles TARGET-PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Dumps method/class profile files to");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    /data/misc/profman/TARGET-PACKAGE.txt");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  snapshot-profile TARGET-PACKAGE [--code-path path]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Take a snapshot of the package profiles to");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    /data/misc/profman/TARGET-PACKAGE[-code-path].prof");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    If TARGET-PACKAGE=android it will take a snapshot of the boot image");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-home-activity [--user USER_ID] TARGET-COMPONENT");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Set the default home activity (aka launcher).");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    TARGET-COMPONENT can be a package name (com.package.my) or a full");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    component (com.package.my/component.name). However, only the package name");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    matters: the actual component used will be determined automatically from");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    the package.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-installer PACKAGE INSTALLER");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Set installer package name");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  get-instantapp-resolver");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Return the name of the component that is the current instant app installer.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-harmful-app-warning [--user <USER_ID>] <PACKAGE> [<WARNING>]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Mark the app as harmful with the given warning message.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  get-harmful-app-warning [--user <USER_ID>] <PACKAGE>");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Return the harmful app warning message for the given app, if present");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  uninstall-system-updates [<PACKAGE>]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Removes updates to the given system application and falls back to its");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    /system version. Does nothing if the given package is not a system app.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    If no package is specified, removes updates to all system applications.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  get-moduleinfo [--all | --installed] [module-name]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Displays module info. If module-name is specified only that info is shown");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    By default, without any argument only installed modules are shown.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --all: show all module info");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --installed: show only installed modules");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  log-visibility [--enable|--disable] <PACKAGE>");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Turns on debug logging when visibility is blocked for the given package.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --enable: turn on debug logging (default)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      --disable: turn off debug logging");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        staticinvoke <android.content.Intent: void printIntentArgsHelp(java.io.PrintWriter,java.lang.String)>(r1, "");

        return;
    }

    public int runCreateUser() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String r1, $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r19, $r20, r24, r25, r26, r27, r37, $r45;
        android.os.IUserManager r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        java.io.PrintWriter $r3, $r6, $r7, r28, r30, r42, r46;
        java.lang.StringBuilder $r4, $r16, $r18, $r43;
        int $i0, $i1, i2, i4;
        android.os.ServiceSpecificException $r21, $r22, $r23, r40;
        short s3;
        android.content.pm.UserInfo r32, r36, r38, r39, r41;
        android.os.IBinder $r33, $r34;
        android.accounts.IAccountManager r35;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        z10 = 0;

        i2 = -1;

        r24 = null;

        s3 = 0;

     label01:
        r25 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        if r25 == null goto label13;

        r26 = null;

        $r8 = "--profileOf";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z1 == 0 goto label02;

        $r20 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i2 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r20);

        goto label09;

     label02:
        $r9 = "--managed";

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z2 == 0 goto label03;

        r26 = "android.os.usertype.profile.MANAGED";

        goto label09;

     label03:
        $r10 = "--restricted";

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z3 == 0 goto label04;

        r26 = "android.os.usertype.full.RESTRICTED";

        goto label09;

     label04:
        $r11 = "--guest";

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z4 == 0 goto label05;

        r26 = "android.os.usertype.full.GUEST";

        goto label09;

     label05:
        $r12 = "--demo";

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z5 == 0 goto label06;

        r26 = "android.os.usertype.full.DEMO";

        goto label09;

     label06:
        $r13 = "--ephemeral";

        $z6 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z6 == 0 goto label07;

        s3 = s3 | 256;

        goto label09;

     label07:
        $r14 = "--pre-create-only";

        $z7 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z7 == 0 goto label08;

        z10 = 1;

        goto label09;

     label08:
        $r15 = "--user-type";

        $z8 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z8 == 0 goto label12;

        r26 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

     label09:
        r27 = r24;

        if r26 == null goto label11;

        if r24 == null goto label10;

        $z9 = virtualinvoke r24.<java.lang.String: boolean equals(java.lang.Object)>(r26);

        if $z9 != 0 goto label10;

        r28 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: more than one user type was specified (");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r28.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        return 1;

     label10:
        r27 = r26;

     label11:
        r24 = r27;

        goto label01;

     label12:
        r30 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown option ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r30.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        return 1;

     label13:
        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r1 != null goto label14;

        if z10 != 0 goto label14;

        $r7 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r7.<java.io.PrintWriter: void println(java.lang.String)>("Error: no user name specified.");

        return 1;

     label14:
        if r1 == null goto label15;

        if z10 == 0 goto label15;

        $r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r6.<java.io.PrintWriter: void println(java.lang.String)>("Warning: name is ignored for pre-created users");

     label15:
        r32 = null;

        $r33 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("user");

        r2 = staticinvoke <android.os.IUserManager$Stub: android.os.IUserManager asInterface(android.os.IBinder)>($r33);

        $r34 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("account");

        r35 = staticinvoke <android.accounts.IAccountManager$Stub: android.accounts.IAccountManager asInterface(android.os.IBinder)>($r34);

        if r24 != null goto label16;

        r24 = staticinvoke <android.content.pm.UserInfo: java.lang.String getDefaultUserType(int)>(s3);

        goto label16;

     label16:
        z0 = staticinvoke <android.os.UserManager: boolean isUserTypeRestricted(java.lang.String)>(r24);

     label17:
        if z0 == 0 goto label28;

        if i2 < 0 goto label18;

        i4 = i2;

        goto label19;

     label18:
        i4 = 0;

     label19:
        r32 = null;

     label20:
        r36 = interfaceinvoke r2.<android.os.IUserManager: android.content.pm.UserInfo createRestrictedProfileWithThrow(java.lang.String,int)>(r1, i4);

     label21:
        r32 = r36;

     label22:
        $i1 = staticinvoke <android.os.Process: int myUid()>();

        if $i1 != 0 goto label24;

     label23:
        r37 = "root";

        goto label25;

     label24:
        r37 = "com.android.shell";

     label25:
        r32 = r36;

     label26:
        interfaceinvoke r35.<android.accounts.IAccountManager: void addSharedAccountsFromParentUser(int,int,java.lang.String)>(i4, i2, r37);

     label27:
        r32 = r36;

        goto label38;

     label28:
        if i2 >= 0 goto label36;

        if z10 == 0 goto label31;

        r32 = null;

     label29:
        r38 = interfaceinvoke r2.<android.os.IUserManager: android.content.pm.UserInfo preCreateUserWithThrow(java.lang.String)>(r24);

     label30:
        r32 = r38;

        goto label34;

     label31:
        r32 = null;

     label32:
        r39 = interfaceinvoke r2.<android.os.IUserManager: android.content.pm.UserInfo createUserWithThrow(java.lang.String,java.lang.String,int)>(r1, r24, s3);

     label33:
        r32 = r39;

     label34:
        goto label38;

     label35:
        $r22 := @caughtexception;

        r40 = $r22;

        goto label41;

     label36:
        r41 = interfaceinvoke r2.<android.os.IUserManager: android.content.pm.UserInfo createProfileForUserWithThrow(java.lang.String,java.lang.String,int,int,java.lang.String[])>(r1, r24, s3, i2, null);

     label37:
        r32 = r41;

     label38:
        goto label42;

     label39:
        $r21 := @caughtexception;

        r40 = $r21;

        goto label41;

     label40:
        $r23 := @caughtexception;

        r40 = $r23;

     label41:
        r42 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r42.<java.io.PrintWriter: void println(java.lang.String)>($r45);

     label42:
        if r32 == null goto label43;

        r46 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Success: created user id ");

        $i0 = r32.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r46.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        return 0;

     label43:
        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Error: couldn\'t create User.");

        return 1;

        catch android.os.ServiceSpecificException from label16 to label17 with label40;
        catch android.os.ServiceSpecificException from label20 to label21 with label35;
        catch android.os.ServiceSpecificException from label22 to label23 with label35;
        catch android.os.ServiceSpecificException from label26 to label27 with label35;
        catch android.os.ServiceSpecificException from label29 to label30 with label35;
        catch android.os.ServiceSpecificException from label32 to label33 with label35;
        catch android.os.ServiceSpecificException from label36 to label37 with label39;
    }

    public int runForceDexOpt() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        android.content.pm.IPackageManager $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        $r1 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        $r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        interfaceinvoke $r1.<android.content.pm.IPackageManager: void forceDexOpt(java.lang.String)>($r2);

        return 0;
    }

    public int runGetMaxRunningUsers()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        android.app.ActivityManagerInternal r1;
        java.io.PrintWriter r2;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        int $i0;
        java.lang.String $r8;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        r1 = (android.app.ActivityManagerInternal) $r4;

        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum supported running users: ");

        $i0 = virtualinvoke r1.<android.app.ActivityManagerInternal: int getMaxRunningUsers()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return 0;
    }

    public int runGetMaxUsers()
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r3;
        int $i0;
        java.lang.String $r6;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum supported users: ");

        $i0 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        return 0;
    }

    public int runMovePackage() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String r1, $r2, $r9, r13, r14;
        int i0, i1;
        boolean $z0, $z1;
        android.content.pm.IPackageManager $r3, $r4, $r11;
        java.lang.StringBuilder $r5;
        java.io.PrintWriter $r10, $r12, r15;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r1 != null goto label1;

        $r12 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r12.<java.io.PrintWriter: void println(java.lang.String)>("Error: package name not specified");

        return 1;

     label1:
        r13 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        r14 = r13;

        $r2 = "internal";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z0 == 0 goto label2;

        r14 = null;

     label2:
        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        i0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int movePackage(java.lang.String,java.lang.String)>(r1, r14);

        $r4 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        i1 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int getMoveStatus(int)>(i0);

     label3:
        $z1 = staticinvoke <android.content.pm.PackageManager: boolean isMoveStatusFinished(int)>(i1);

        if $z1 != 0 goto label4;

        staticinvoke <android.os.SystemClock: void sleep(long)>(1000L);

        $r11 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        i1 = interfaceinvoke $r11.<android.content.pm.IPackageManager: int getMoveStatus(int)>(i0);

        goto label3;

     label4:
        if i1 != -100 goto label5;

        $r10 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r10.<java.io.PrintWriter: void println(java.lang.String)>("Success");

        return 0;

     label5:
        r15 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r15.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        return 1;
    }

    public int runMovePrimaryStorage() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0, i1;
        java.lang.String $r1, $r8, r11, r12;
        boolean $z0, $z1;
        android.content.pm.IPackageManager $r2, $r3, $r10;
        java.lang.StringBuilder $r4;
        java.io.PrintWriter $r9, r13;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r11 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        r12 = r11;

        $r1 = "internal";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z0 == 0 goto label1;

        r12 = null;

     label1:
        $r2 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        i0 = interfaceinvoke $r2.<android.content.pm.IPackageManager: int movePrimaryStorage(java.lang.String)>(r12);

        $r3 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        i1 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int getMoveStatus(int)>(i0);

     label2:
        $z1 = staticinvoke <android.content.pm.PackageManager: boolean isMoveStatusFinished(int)>(i1);

        if $z1 != 0 goto label3;

        staticinvoke <android.os.SystemClock: void sleep(long)>(1000L);

        $r10 = r0.<com.android.server.pm.PackageManagerShellCommand: android.content.pm.IPackageManager mInterface>;

        i1 = interfaceinvoke $r10.<android.content.pm.IPackageManager: int getMoveStatus(int)>(i0);

        goto label2;

     label3:
        if i1 != -100 goto label4;

        $r9 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r9.<java.io.PrintWriter: void println(java.lang.String)>("Success");

        return 0;

     label4:
        r13 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r13.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return 1;
    }

    public int runRemoveUser() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        int i0;
        android.os.IBinder $r2;
        android.os.IUserManager $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r7, r10;
        java.io.PrintWriter $r8, $r9, r11;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r10 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        if r10 != null goto label1;

        $r9 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r9.<java.io.PrintWriter: void println(java.lang.String)>("Error: no user id specified.");

        return 1;

     label1:
        i0 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>(r10);

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("user");

        $r3 = staticinvoke <android.os.IUserManager$Stub: android.os.IUserManager asInterface(android.os.IBinder)>($r2);

        $z0 = interfaceinvoke $r3.<android.os.IUserManager: boolean removeUser(int)>(i0);

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r8.<java.io.PrintWriter: void println(java.lang.String)>("Success: removed user");

        return 0;

     label2:
        r11 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: couldn\'t remove user id ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r11.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return 1;
    }

    public int runSetUserRestriction() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerShellCommand r0;
        java.lang.String r1, $r2, $r6, $r7, r8, r9, $r10;
        boolean $z0, $z1, $z2, z3;
        java.io.PrintWriter $r3;
        android.os.IBinder $r4;
        android.os.IUserManager $r5;
        int i1, i2;

        r0 := @this: com.android.server.pm.PackageManagerShellCommand;

        r8 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextOption()>();

        i1 = 0;

        if r8 == null goto label1;

        i1 = 0;

        $r6 = "--user";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label1;

        $r7 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArgRequired()>();

        i1 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r7);

     label1:
        r9 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.lang.String getNextArg()>();

        $r10 = "1";

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        $r2 = "0";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        z3 = 0;

     label3:
        i2 = specialinvoke r0.<com.android.server.pm.PackageManagerShellCommand: int translateUserId(int,int,java.lang.String)>(i1, -10000, "runSetUserRestriction");

        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("user");

        $r5 = staticinvoke <android.os.IUserManager$Stub: android.os.IUserManager asInterface(android.os.IBinder)>($r4);

        interfaceinvoke $r5.<android.os.IUserManager: void setUserRestriction(java.lang.String,boolean,int)>(r9, z3, i2);

        return 0;

     label4:
        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Error: valid value not specified");

        return 1;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.PackageManagerShellCommand: java.lang.String TAG> = "PackageManagerShellCommand";

        <com.android.server.pm.PackageManagerShellCommand: java.lang.String STDIN_PATH> = "-";

        <com.android.server.pm.PackageManagerShellCommand: int DEFAULT_WAIT_MS> = 60000;

        <com.android.server.pm.PackageManagerShellCommand: java.lang.String ART_PROFILE_SNAPSHOT_DEBUG_LOCATION> = "/data/misc/profman/";

        return;
    }
}
