class com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader extends java.lang.Object implements android.service.dataloader.DataLoaderService$DataLoader
{
    private android.service.dataloader.DataLoaderService$FileSystemConnector mConnector;
    private android.content.pm.DataLoaderParams mParams;

    private void <init>()
    {
        com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader r0;

        r0 := @this: com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader: android.content.pm.DataLoaderParams mParams> = null;

        r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader: android.service.dataloader.DataLoaderService$FileSystemConnector mConnector> = null;

        return;
    }

    void <init>(com.android.server.pm.PackageManagerShellCommandDataLoader$1)
    {
        com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader r0;
        com.android.server.pm.PackageManagerShellCommandDataLoader$1 r1;

        r0 := @this: com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader;

        r1 := @parameter0: com.android.server.pm.PackageManagerShellCommandDataLoader$1;

        specialinvoke r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader: void <init>()>();

        return;
    }

    public boolean onCreate(android.content.pm.DataLoaderParams, android.service.dataloader.DataLoaderService$FileSystemConnector)
    {
        com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader r0;
        android.content.pm.DataLoaderParams r1;
        android.service.dataloader.DataLoaderService$FileSystemConnector r2;

        r0 := @this: com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader;

        r1 := @parameter0: android.content.pm.DataLoaderParams;

        r2 := @parameter1: android.service.dataloader.DataLoaderService$FileSystemConnector;

        r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader: android.content.pm.DataLoaderParams mParams> = r1;

        r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader: android.service.dataloader.DataLoaderService$FileSystemConnector mConnector> = r2;

        return 1;
    }

    public boolean onPrepareImage(java.util.Collection, java.util.Collection)
    {
        com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader r0;
        android.os.ShellCommand r1;
        java.util.Iterator r2;
        byte b0, $b3;
        android.content.pm.DataLoaderParams $r3;
        java.lang.String $r4, $r8, $r9, $r11, $r14, $r16, $r18;
        boolean $z0;
        java.lang.Object $r5;
        byte[] $r6;
        android.service.dataloader.DataLoaderService$FileSystemConnector $r7, $r10;
        long $l1, $l2;
        java.lang.Throwable $r19, $r20, $r21, r30;
        java.util.Collection r22, r23;
        android.content.pm.InstallationFile r24;
        com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata r25;
        java.lang.StringBuilder r26, r27;
        android.os.ParcelFileDescriptor r28, r29, r31;

        r0 := @this: com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader;

        r22 := @parameter0: java.util.Collection;

        r23 := @parameter1: java.util.Collection;

        $r3 = r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader: android.content.pm.DataLoaderParams mParams>;

        $r4 = virtualinvoke $r3.<android.content.pm.DataLoaderParams: java.lang.String getArguments()>();

        r1 = staticinvoke <com.android.server.pm.PackageManagerShellCommandDataLoader: android.os.ShellCommand lookupShellCommand(java.lang.String)>($r4);

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManagerShellCommandDataLoader", "Missing shell command.");

        return 0;

     label01:
        r2 = interfaceinvoke r22.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label21;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r24 = (android.content.pm.InstallationFile) $r5;

        $r6 = virtualinvoke r24.<android.content.pm.InstallationFile: byte[] getMetadata()>();

        r25 = staticinvoke <com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata fromByteArray(byte[])>($r6);

     label03:
        if r25 != null goto label06;

     label04:
        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid metadata for file: ");

        $r16 = virtualinvoke r24.<android.content.pm.InstallationFile: java.lang.String getName()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManagerShellCommandDataLoader", $r18);

     label05:
        return 0;

     label06:
        b0 = virtualinvoke r25.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: byte getMode()>();

     label07:
        if b0 == 0 goto label19;

        if b0 == 1 goto label10;

     label08:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported metadata mode: ");

        $b3 = virtualinvoke r25.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: byte getMode()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b3);

        $r14 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManagerShellCommandDataLoader", $r14);

     label09:
        return 0;

     label10:
        r28 = null;

     label11:
        $r9 = virtualinvoke r25.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: java.lang.String getData()>();

        r29 = staticinvoke <com.android.server.pm.PackageManagerShellCommandDataLoader: android.os.ParcelFileDescriptor getLocalFilePFD(android.os.ShellCommand,java.lang.String)>(r1, $r9);

     label12:
        $r10 = r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader: android.service.dataloader.DataLoaderService$FileSystemConnector mConnector>;

        $r11 = virtualinvoke r24.<android.content.pm.InstallationFile: java.lang.String getName()>();

        $l2 = virtualinvoke r29.<android.os.ParcelFileDescriptor: long getStatSize()>();

        virtualinvoke $r10.<android.service.dataloader.DataLoaderService$FileSystemConnector: void writeData(java.lang.String,long,long,android.os.ParcelFileDescriptor)>($r11, 0L, $l2, r29);

     label13:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r29);

     label14:
        goto label20;

     label15:
        $r19 := @caughtexception;

        r30 = $r19;

        r28 = r29;

        goto label17;

     label16:
        $r20 := @caughtexception;

        r30 = $r20;

     label17:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r28);

     label18:
        throw r30;

     label19:
        r31 = staticinvoke <com.android.server.pm.PackageManagerShellCommandDataLoader: android.os.ParcelFileDescriptor getStdInPFD(android.os.ShellCommand)>(r1);

        $r7 = r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$DataLoader: android.service.dataloader.DataLoaderService$FileSystemConnector mConnector>;

        $r8 = virtualinvoke r24.<android.content.pm.InstallationFile: java.lang.String getName()>();

        $l1 = virtualinvoke r24.<android.content.pm.InstallationFile: long getLengthBytes()>();

        virtualinvoke $r7.<android.service.dataloader.DataLoaderService$FileSystemConnector: void writeData(java.lang.String,long,long,android.os.ParcelFileDescriptor)>($r8, 0L, $l1, r31);

     label20:
        goto label02;

     label21:
        return 1;

     label22:
        $r21 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManagerShellCommandDataLoader", "Exception while streaming files", $r21);

        return 0;

        catch java.io.IOException from label01 to label02 with label22;
        catch java.io.IOException from label02 to label03 with label22;
        catch java.io.IOException from label04 to label05 with label22;
        catch java.io.IOException from label06 to label07 with label22;
        catch java.io.IOException from label08 to label09 with label22;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.io.IOException from label13 to label14 with label22;
        catch java.io.IOException from label17 to label18 with label22;
        catch java.io.IOException from label18 to label19 with label22;
        catch java.io.IOException from label19 to label20 with label22;
    }
}
