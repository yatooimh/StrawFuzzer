class com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata extends java.lang.Object
{
    static final byte DATA_ONLY_STREAMING;
    static final byte LOCAL_FILE;
    static final byte STDIN;
    static final byte STREAMING;
    private final java.lang.String mData;
    private final byte mMode;

    private void <init>(byte, java.lang.String)
    {
        com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata r0;
        byte b0, $b1;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata;

        b0 := @parameter0: byte;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b1 = (byte) b0;

        r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: byte mMode> = $b1;

        if r1 != null goto label1;

        r1 = "";

        goto label1;

     label1:
        r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: java.lang.String mData> = r1;

        return;
    }

    static com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata forDataOnlyStreaming(java.lang.String)
    {
        java.lang.String r0;
        com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata;

        specialinvoke $r1.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: void <init>(byte,java.lang.String)>(2, r0);

        return $r1;
    }

    static com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata forLocalFile(java.lang.String)
    {
        java.lang.String r0;
        com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata;

        specialinvoke $r1.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: void <init>(byte,java.lang.String)>(1, r0);

        return $r1;
    }

    static com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata forStdIn(java.lang.String)
    {
        java.lang.String r0;
        com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata;

        specialinvoke $r1.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: void <init>(byte,java.lang.String)>(0, r0);

        return $r1;
    }

    static com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata forStreaming(java.lang.String)
    {
        java.lang.String r0;
        com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata;

        specialinvoke $r1.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: void <init>(byte,java.lang.String)>(3, r0);

        return $r1;
    }

    static com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata fromByteArray(byte[]) throws java.io.IOException
    {
        byte[] r0;
        int $i0, $i1, $i2;
        com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata $r1;
        java.lang.String $r2;
        java.nio.charset.Charset $r3;
        byte $b3;

        r0 := @parameter0: byte[];

        if r0 == null goto label2;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        $r1 = new com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata;

        $b3 = r0[0];

        $r2 = new java.lang.String;

        $i1 = lengthof r0;

        $i2 = $i1 - 1;

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r0, 1, $i2, $r3);

        specialinvoke $r1.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: void <init>(byte,java.lang.String)>($b3, $r2);

        return $r1;

     label2:
        return null;
    }

    java.lang.String getData()
    {
        com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata;

        $r1 = r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: java.lang.String mData>;

        return $r1;
    }

    byte getMode()
    {
        com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata r0;
        byte $b0;

        r0 := @this: com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata;

        $b0 = r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: byte mMode>;

        return $b0;
    }

    byte[] toByteArray()
    {
        com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata r0;
        byte[] r1, r2;
        java.nio.charset.Charset $r3;
        java.lang.String $r4;
        int $i0, $i1, $i4;
        byte $b2, $b3;

        r0 := @this: com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata;

        $r4 = r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: java.lang.String mData>;

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        r1 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        $i0 = lengthof r1;

        $i1 = $i0 + 1;

        r2 = newarray (byte)[$i1];

        $b2 = r0.<com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: byte mMode>;

        $b3 = (byte) $b2;

        r2[0] = $b3;

        $i4 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 1, $i4);

        return r2;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: byte STREAMING> = 3;

        <com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: byte STDIN> = 0;

        <com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: byte LOCAL_FILE> = 1;

        <com.android.server.pm.PackageManagerShellCommandDataLoader$Metadata: byte DATA_ONLY_STREAMING> = 2;

        return;
    }
}
