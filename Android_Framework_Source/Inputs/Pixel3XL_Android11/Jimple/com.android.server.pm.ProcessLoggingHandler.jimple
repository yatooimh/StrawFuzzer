public final class com.android.server.pm.ProcessLoggingHandler extends android.os.Handler
{
    static final int INVALIDATE_BASE_APK_HASH_MSG;
    static final int LOG_APP_PROCESS_START_MSG;
    private static final java.lang.String TAG;
    private final java.util.HashMap mProcessLoggingBaseApkHashes;

    void <init>()
    {
        com.android.server.pm.ProcessLoggingHandler r0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        java.util.HashMap $r3;

        r0 := @this: com.android.server.pm.ProcessLoggingHandler;

        $r1 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.ProcessLoggingHandler: java.util.HashMap mProcessLoggingBaseApkHashes> = $r3;

        return;
    }

    private byte[] computeHashOfApkFile(java.lang.String) throws java.io.IOException, java.security.NoSuchAlgorithmException
    {
        com.android.server.pm.ProcessLoggingHandler r0;
        java.security.MessageDigest r1;
        int i0;
        java.io.FileInputStream $r3;
        java.io.File $r4;
        byte[] $r5, r7;
        java.lang.String r6;

        r0 := @this: com.android.server.pm.ProcessLoggingHandler;

        r6 := @parameter0: java.lang.String;

        r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

        $r3 = new java.io.FileInputStream;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r6);

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r4);

        r7 = newarray (byte)[65536];

     label1:
        i0 = virtualinvoke $r3.<java.io.FileInputStream: int read(byte[])>(r7);

        if i0 <= 0 goto label2;

        virtualinvoke r1.<java.security.MessageDigest: void update(byte[],int,int)>(r7, 0, i0);

        goto label1;

     label2:
        virtualinvoke $r3.<java.io.FileInputStream: void close()>();

        $r5 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>();

        return $r5;
    }

    private java.lang.String computeStringHashOfApk(java.lang.String)
    {
        com.android.server.pm.ProcessLoggingHandler r0;
        byte[] r1;
        java.lang.StringBuilder r2;
        java.util.HashMap $r3, $r5;
        java.lang.Object $r4;
        int $i0, i3;
        java.lang.Object[] $r7;
        byte $b1;
        java.lang.Byte $r8;
        java.lang.String $r9, r12, r13, r14, r15;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.pm.ProcessLoggingHandler;

        r12 := @parameter0: java.lang.String;

        if r12 != null goto label01;

        return "No APK";

     label01:
        $r3 = r0.<com.android.server.pm.ProcessLoggingHandler: java.util.HashMap mProcessLoggingBaseApkHashes>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r12);

        r13 = (java.lang.String) $r4;

        r14 = r13;

        if r13 != null goto label19;

        r14 = r13;

     label02:
        r1 = specialinvoke r0.<com.android.server.pm.ProcessLoggingHandler: byte[] computeHashOfApkFile(java.lang.String)>(r12);

     label03:
        r14 = r13;

     label04:
        r2 = new java.lang.StringBuilder;

     label05:
        r14 = r13;

     label06:
        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

     label07:
        i3 = 0;

     label08:
        r14 = r13;

     label09:
        $i0 = lengthof r1;

        if i3 >= $i0 goto label13;

     label10:
        r14 = r13;

     label11:
        $r7 = newarray (java.lang.Object)[1];

        $b1 = r1[i3];

        $r8 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02x", $r7);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label12:
        i3 = i3 + 1;

        goto label08;

     label13:
        r14 = r13;

     label14:
        r15 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        r14 = r15;

     label16:
        $r5 = r0.<com.android.server.pm.ProcessLoggingHandler: java.util.HashMap mProcessLoggingBaseApkHashes>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, r15);

     label17:
        r14 = r15;

        goto label19;

     label18:
        $r11 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessLoggingHandler", "computeStringHashOfApk() failed", $r11);

     label19:
        if r14 == null goto label20;

        goto label21;

     label20:
        r14 = "Failed to count APK hash";

     label21:
        return r14;

        catch java.io.IOException from label02 to label03 with label18;
        catch java.security.NoSuchAlgorithmException from label02 to label03 with label18;
        catch java.io.IOException from label04 to label05 with label18;
        catch java.security.NoSuchAlgorithmException from label04 to label05 with label18;
        catch java.io.IOException from label06 to label07 with label18;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label18;
        catch java.io.IOException from label09 to label10 with label18;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label18;
        catch java.io.IOException from label11 to label12 with label18;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label18;
        catch java.io.IOException from label14 to label15 with label18;
        catch java.security.NoSuchAlgorithmException from label14 to label15 with label18;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.security.NoSuchAlgorithmException from label16 to label17 with label18;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.pm.ProcessLoggingHandler r0;
        android.os.Bundle r1, r13;
        java.lang.String r2, r3, $r8, $r10, r14;
        int i0, i3, i4;
        java.lang.Object[] $r4;
        long $l1;
        java.lang.Long $r5;
        java.lang.Integer $r6, $r7;
        java.util.HashMap $r9;
        android.os.Message r12;

        r0 := @this: com.android.server.pm.ProcessLoggingHandler;

        r12 := @parameter0: android.os.Message;

        i3 = r12.<android.os.Message: int what>;

        if i3 == 1 goto label2;

        if i3 == 2 goto label1;

        goto label3;

     label1:
        r13 = virtualinvoke r12.<android.os.Message: android.os.Bundle getData()>();

        $r9 = r0.<com.android.server.pm.ProcessLoggingHandler: java.util.HashMap mProcessLoggingBaseApkHashes>;

        $r10 = virtualinvoke r13.<android.os.Bundle: java.lang.String getString(java.lang.String)>("apkFile");

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r10);

        goto label3;

     label2:
        r1 = virtualinvoke r12.<android.os.Message: android.os.Bundle getData()>();

        r2 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("processName");

        i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("uid");

        r3 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("seinfo");

        r14 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("apkFile");

        i4 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("pid");

        $r4 = newarray (java.lang.Object)[6];

        $r4[0] = r2;

        $l1 = virtualinvoke r1.<android.os.Bundle: long getLong(java.lang.String)>("startTimestamp");

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r4[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[2] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r4[3] = $r7;

        $r4[4] = r3;

        $r8 = specialinvoke r0.<com.android.server.pm.ProcessLoggingHandler: java.lang.String computeStringHashOfApk(java.lang.String)>(r14);

        $r4[5] = $r8;

        staticinvoke <android.app.admin.SecurityLog: int writeEvent(int,java.lang.Object[])>(210005, $r4);

     label3:
        return;
    }

    void invalidateProcessLoggingBaseApkHash(java.lang.String)
    {
        com.android.server.pm.ProcessLoggingHandler r0;
        android.os.Bundle $r2;
        java.lang.String r3;
        android.os.Message r4;

        r0 := @this: com.android.server.pm.ProcessLoggingHandler;

        r3 := @parameter0: java.lang.String;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("apkFile", r3);

        r4 = virtualinvoke r0.<com.android.server.pm.ProcessLoggingHandler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke r4.<android.os.Message: void setData(android.os.Bundle)>($r2);

        virtualinvoke r0.<com.android.server.pm.ProcessLoggingHandler: boolean sendMessage(android.os.Message)>(r4);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.ProcessLoggingHandler: java.lang.String TAG> = "ProcessLoggingHandler";

        <com.android.server.pm.ProcessLoggingHandler: int LOG_APP_PROCESS_START_MSG> = 1;

        <com.android.server.pm.ProcessLoggingHandler: int INVALIDATE_BASE_APK_HASH_MSG> = 2;

        return;
    }
}
